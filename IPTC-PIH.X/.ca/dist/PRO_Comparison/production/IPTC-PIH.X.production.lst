

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Oct 17 14:39:48 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1786
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    16                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,delta=2
    74                           	psect	text49,local,class=CODE,merge=1,delta=2
    75                           	psect	text50,local,class=CODE,merge=1,delta=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2
    77                           	psect	text52,local,class=CODE,merge=1,delta=2
    78                           	psect	text53,local,class=CODE,merge=1,delta=2
    79                           	psect	text54,local,class=CODE,merge=1,delta=2
    80                           	psect	text55,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text56,local,class=CODE,merge=1,delta=2
    82                           	psect	text57,local,class=CODE,merge=1,delta=2
    83                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    85                           	dabs	1,0x7E,2
    86  0000                     
    87                           ; Version 2.40
    88                           ; Generated 17/11/2021 GMT
    89                           ; 
    90                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution. Publication is not required when
   104                           ;        this file is used in an embedded application.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC16F1786 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  0008                     	;# 
   131  0009                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0090                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0095                     	;# 
   160  0096                     	;# 
   161  0097                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009A                     	;# 
   165  009B                     	;# 
   166  009B                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  0111                     	;# 
   175  0112                     	;# 
   176  0113                     	;# 
   177  0114                     	;# 
   178  0115                     	;# 
   179  0116                     	;# 
   180  0117                     	;# 
   181  0118                     	;# 
   182  0119                     	;# 
   183  011A                     	;# 
   184  011B                     	;# 
   185  011C                     	;# 
   186  011D                     	;# 
   187  011D                     	;# 
   188  011D                     	;# 
   189  011E                     	;# 
   190  011F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  0191                     	;# 
   194  0191                     	;# 
   195  0192                     	;# 
   196  0193                     	;# 
   197  0193                     	;# 
   198  0193                     	;# 
   199  0194                     	;# 
   200  0195                     	;# 
   201  0196                     	;# 
   202  0197                     	;# 
   203  0199                     	;# 
   204  0199                     	;# 
   205  0199                     	;# 
   206  019A                     	;# 
   207  019A                     	;# 
   208  019A                     	;# 
   209  019B                     	;# 
   210  019B                     	;# 
   211  019B                     	;# 
   212  019B                     	;# 
   213  019B                     	;# 
   214  019C                     	;# 
   215  019C                     	;# 
   216  019C                     	;# 
   217  019D                     	;# 
   218  019D                     	;# 
   219  019D                     	;# 
   220  019E                     	;# 
   221  019E                     	;# 
   222  019E                     	;# 
   223  019F                     	;# 
   224  019F                     	;# 
   225  019F                     	;# 
   226  019F                     	;# 
   227  019F                     	;# 
   228  020C                     	;# 
   229  020D                     	;# 
   230  020E                     	;# 
   231  0210                     	;# 
   232  0211                     	;# 
   233  0211                     	;# 
   234  0212                     	;# 
   235  0212                     	;# 
   236  0213                     	;# 
   237  0213                     	;# 
   238  0214                     	;# 
   239  0214                     	;# 
   240  0215                     	;# 
   241  0215                     	;# 
   242  0215                     	;# 
   243  0215                     	;# 
   244  0216                     	;# 
   245  0216                     	;# 
   246  0217                     	;# 
   247  0217                     	;# 
   248  028C                     	;# 
   249  028D                     	;# 
   250  028E                     	;# 
   251  0291                     	;# 
   252  0291                     	;# 
   253  0292                     	;# 
   254  0293                     	;# 
   255  0298                     	;# 
   256  0298                     	;# 
   257  0299                     	;# 
   258  029A                     	;# 
   259  030C                     	;# 
   260  030D                     	;# 
   261  030E                     	;# 
   262  0311                     	;# 
   263  0311                     	;# 
   264  0312                     	;# 
   265  0313                     	;# 
   266  038C                     	;# 
   267  038D                     	;# 
   268  038E                     	;# 
   269  0390                     	;# 
   270  0391                     	;# 
   271  0392                     	;# 
   272  0393                     	;# 
   273  0394                     	;# 
   274  0395                     	;# 
   275  0396                     	;# 
   276  0397                     	;# 
   277  0398                     	;# 
   278  0399                     	;# 
   279  039D                     	;# 
   280  039E                     	;# 
   281  039F                     	;# 
   282  0511                     	;# 
   283  0513                     	;# 
   284  051A                     	;# 
   285  0811                     	;# 
   286  0812                     	;# 
   287  0813                     	;# 
   288  0814                     	;# 
   289  0815                     	;# 
   290  0816                     	;# 
   291  0817                     	;# 
   292  0818                     	;# 
   293  0819                     	;# 
   294  081A                     	;# 
   295  081B                     	;# 
   296  081C                     	;# 
   297  081D                     	;# 
   298  081E                     	;# 
   299  081F                     	;# 
   300  0820                     	;# 
   301  0821                     	;# 
   302  0821                     	;# 
   303  0822                     	;# 
   304  0823                     	;# 
   305  0823                     	;# 
   306  0824                     	;# 
   307  0825                     	;# 
   308  0825                     	;# 
   309  0826                     	;# 
   310  0827                     	;# 
   311  0827                     	;# 
   312  0828                     	;# 
   313  0829                     	;# 
   314  082A                     	;# 
   315  082B                     	;# 
   316  082C                     	;# 
   317  082D                     	;# 
   318  082E                     	;# 
   319  082F                     	;# 
   320  0831                     	;# 
   321  0832                     	;# 
   322  0833                     	;# 
   323  0834                     	;# 
   324  0835                     	;# 
   325  0836                     	;# 
   326  0837                     	;# 
   327  0838                     	;# 
   328  0839                     	;# 
   329  083A                     	;# 
   330  083B                     	;# 
   331  083C                     	;# 
   332  083D                     	;# 
   333  083E                     	;# 
   334  083F                     	;# 
   335  0840                     	;# 
   336  0841                     	;# 
   337  0841                     	;# 
   338  0842                     	;# 
   339  0843                     	;# 
   340  0843                     	;# 
   341  0844                     	;# 
   342  0845                     	;# 
   343  0845                     	;# 
   344  0846                     	;# 
   345  0847                     	;# 
   346  0847                     	;# 
   347  0848                     	;# 
   348  0849                     	;# 
   349  084A                     	;# 
   350  084B                     	;# 
   351  084C                     	;# 
   352  084D                     	;# 
   353  084E                     	;# 
   354  084F                     	;# 
   355  0851                     	;# 
   356  0852                     	;# 
   357  0853                     	;# 
   358  0854                     	;# 
   359  0855                     	;# 
   360  0856                     	;# 
   361  0857                     	;# 
   362  0858                     	;# 
   363  0859                     	;# 
   364  085A                     	;# 
   365  085B                     	;# 
   366  085C                     	;# 
   367  085D                     	;# 
   368  085E                     	;# 
   369  085F                     	;# 
   370  0860                     	;# 
   371  0861                     	;# 
   372  0861                     	;# 
   373  0862                     	;# 
   374  0863                     	;# 
   375  0863                     	;# 
   376  0864                     	;# 
   377  0865                     	;# 
   378  0865                     	;# 
   379  0866                     	;# 
   380  0867                     	;# 
   381  0867                     	;# 
   382  0868                     	;# 
   383  0869                     	;# 
   384  086A                     	;# 
   385  086B                     	;# 
   386  086C                     	;# 
   387  086D                     	;# 
   388  086E                     	;# 
   389  086F                     	;# 
   390  0FE4                     	;# 
   391  0FE5                     	;# 
   392  0FE6                     	;# 
   393  0FE7                     	;# 
   394  0FE8                     	;# 
   395  0FE9                     	;# 
   396  0FEA                     	;# 
   397  0FEB                     	;# 
   398  0FED                     	;# 
   399  0FEE                     	;# 
   400  0FEF                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  0010                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0013                     	;# 
   420  0014                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0016                     	;# 
   424  0017                     	;# 
   425  0018                     	;# 
   426  0019                     	;# 
   427  001A                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  008C                     	;# 
   431  008D                     	;# 
   432  008E                     	;# 
   433  0090                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009B                     	;# 
   446  009C                     	;# 
   447  009D                     	;# 
   448  009E                     	;# 
   449  009F                     	;# 
   450  010C                     	;# 
   451  010D                     	;# 
   452  010E                     	;# 
   453  0111                     	;# 
   454  0112                     	;# 
   455  0113                     	;# 
   456  0114                     	;# 
   457  0115                     	;# 
   458  0116                     	;# 
   459  0117                     	;# 
   460  0118                     	;# 
   461  0119                     	;# 
   462  011A                     	;# 
   463  011B                     	;# 
   464  011C                     	;# 
   465  011D                     	;# 
   466  011D                     	;# 
   467  011D                     	;# 
   468  011E                     	;# 
   469  011F                     	;# 
   470  018C                     	;# 
   471  018D                     	;# 
   472  0191                     	;# 
   473  0191                     	;# 
   474  0192                     	;# 
   475  0193                     	;# 
   476  0193                     	;# 
   477  0193                     	;# 
   478  0194                     	;# 
   479  0195                     	;# 
   480  0196                     	;# 
   481  0197                     	;# 
   482  0199                     	;# 
   483  0199                     	;# 
   484  0199                     	;# 
   485  019A                     	;# 
   486  019A                     	;# 
   487  019A                     	;# 
   488  019B                     	;# 
   489  019B                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019C                     	;# 
   494  019C                     	;# 
   495  019C                     	;# 
   496  019D                     	;# 
   497  019D                     	;# 
   498  019D                     	;# 
   499  019E                     	;# 
   500  019E                     	;# 
   501  019E                     	;# 
   502  019F                     	;# 
   503  019F                     	;# 
   504  019F                     	;# 
   505  019F                     	;# 
   506  019F                     	;# 
   507  020C                     	;# 
   508  020D                     	;# 
   509  020E                     	;# 
   510  0210                     	;# 
   511  0211                     	;# 
   512  0211                     	;# 
   513  0212                     	;# 
   514  0212                     	;# 
   515  0213                     	;# 
   516  0213                     	;# 
   517  0214                     	;# 
   518  0214                     	;# 
   519  0215                     	;# 
   520  0215                     	;# 
   521  0215                     	;# 
   522  0215                     	;# 
   523  0216                     	;# 
   524  0216                     	;# 
   525  0217                     	;# 
   526  0217                     	;# 
   527  028C                     	;# 
   528  028D                     	;# 
   529  028E                     	;# 
   530  0291                     	;# 
   531  0291                     	;# 
   532  0292                     	;# 
   533  0293                     	;# 
   534  0298                     	;# 
   535  0298                     	;# 
   536  0299                     	;# 
   537  029A                     	;# 
   538  030C                     	;# 
   539  030D                     	;# 
   540  030E                     	;# 
   541  0311                     	;# 
   542  0311                     	;# 
   543  0312                     	;# 
   544  0313                     	;# 
   545  038C                     	;# 
   546  038D                     	;# 
   547  038E                     	;# 
   548  0390                     	;# 
   549  0391                     	;# 
   550  0392                     	;# 
   551  0393                     	;# 
   552  0394                     	;# 
   553  0395                     	;# 
   554  0396                     	;# 
   555  0397                     	;# 
   556  0398                     	;# 
   557  0399                     	;# 
   558  039D                     	;# 
   559  039E                     	;# 
   560  039F                     	;# 
   561  0511                     	;# 
   562  0513                     	;# 
   563  051A                     	;# 
   564  0811                     	;# 
   565  0812                     	;# 
   566  0813                     	;# 
   567  0814                     	;# 
   568  0815                     	;# 
   569  0816                     	;# 
   570  0817                     	;# 
   571  0818                     	;# 
   572  0819                     	;# 
   573  081A                     	;# 
   574  081B                     	;# 
   575  081C                     	;# 
   576  081D                     	;# 
   577  081E                     	;# 
   578  081F                     	;# 
   579  0820                     	;# 
   580  0821                     	;# 
   581  0821                     	;# 
   582  0822                     	;# 
   583  0823                     	;# 
   584  0823                     	;# 
   585  0824                     	;# 
   586  0825                     	;# 
   587  0825                     	;# 
   588  0826                     	;# 
   589  0827                     	;# 
   590  0827                     	;# 
   591  0828                     	;# 
   592  0829                     	;# 
   593  082A                     	;# 
   594  082B                     	;# 
   595  082C                     	;# 
   596  082D                     	;# 
   597  082E                     	;# 
   598  082F                     	;# 
   599  0831                     	;# 
   600  0832                     	;# 
   601  0833                     	;# 
   602  0834                     	;# 
   603  0835                     	;# 
   604  0836                     	;# 
   605  0837                     	;# 
   606  0838                     	;# 
   607  0839                     	;# 
   608  083A                     	;# 
   609  083B                     	;# 
   610  083C                     	;# 
   611  083D                     	;# 
   612  083E                     	;# 
   613  083F                     	;# 
   614  0840                     	;# 
   615  0841                     	;# 
   616  0841                     	;# 
   617  0842                     	;# 
   618  0843                     	;# 
   619  0843                     	;# 
   620  0844                     	;# 
   621  0845                     	;# 
   622  0845                     	;# 
   623  0846                     	;# 
   624  0847                     	;# 
   625  0847                     	;# 
   626  0848                     	;# 
   627  0849                     	;# 
   628  084A                     	;# 
   629  084B                     	;# 
   630  084C                     	;# 
   631  084D                     	;# 
   632  084E                     	;# 
   633  084F                     	;# 
   634  0851                     	;# 
   635  0852                     	;# 
   636  0853                     	;# 
   637  0854                     	;# 
   638  0855                     	;# 
   639  0856                     	;# 
   640  0857                     	;# 
   641  0858                     	;# 
   642  0859                     	;# 
   643  085A                     	;# 
   644  085B                     	;# 
   645  085C                     	;# 
   646  085D                     	;# 
   647  085E                     	;# 
   648  085F                     	;# 
   649  0860                     	;# 
   650  0861                     	;# 
   651  0861                     	;# 
   652  0862                     	;# 
   653  0863                     	;# 
   654  0863                     	;# 
   655  0864                     	;# 
   656  0865                     	;# 
   657  0865                     	;# 
   658  0866                     	;# 
   659  0867                     	;# 
   660  0867                     	;# 
   661  0868                     	;# 
   662  0869                     	;# 
   663  086A                     	;# 
   664  086B                     	;# 
   665  086C                     	;# 
   666  086D                     	;# 
   667  086E                     	;# 
   668  086F                     	;# 
   669  0FE4                     	;# 
   670  0FE5                     	;# 
   671  0FE6                     	;# 
   672  0FE7                     	;# 
   673  0FE8                     	;# 
   674  0FE9                     	;# 
   675  0FEA                     	;# 
   676  0FEB                     	;# 
   677  0FED                     	;# 
   678  0FEE                     	;# 
   679  0FEF                     	;# 
   680  0000                     	;# 
   681  0001                     	;# 
   682  0002                     	;# 
   683  0003                     	;# 
   684  0004                     	;# 
   685  0005                     	;# 
   686  0006                     	;# 
   687  0007                     	;# 
   688  0008                     	;# 
   689  0009                     	;# 
   690  000A                     	;# 
   691  000B                     	;# 
   692  000C                     	;# 
   693  000D                     	;# 
   694  000E                     	;# 
   695  0010                     	;# 
   696  0011                     	;# 
   697  0012                     	;# 
   698  0013                     	;# 
   699  0014                     	;# 
   700  0015                     	;# 
   701  0016                     	;# 
   702  0016                     	;# 
   703  0017                     	;# 
   704  0018                     	;# 
   705  0019                     	;# 
   706  001A                     	;# 
   707  001B                     	;# 
   708  001C                     	;# 
   709  008C                     	;# 
   710  008D                     	;# 
   711  008E                     	;# 
   712  0090                     	;# 
   713  0091                     	;# 
   714  0092                     	;# 
   715  0093                     	;# 
   716  0094                     	;# 
   717  0095                     	;# 
   718  0096                     	;# 
   719  0097                     	;# 
   720  0098                     	;# 
   721  0099                     	;# 
   722  009A                     	;# 
   723  009B                     	;# 
   724  009B                     	;# 
   725  009C                     	;# 
   726  009D                     	;# 
   727  009E                     	;# 
   728  009F                     	;# 
   729  010C                     	;# 
   730  010D                     	;# 
   731  010E                     	;# 
   732  0111                     	;# 
   733  0112                     	;# 
   734  0113                     	;# 
   735  0114                     	;# 
   736  0115                     	;# 
   737  0116                     	;# 
   738  0117                     	;# 
   739  0118                     	;# 
   740  0119                     	;# 
   741  011A                     	;# 
   742  011B                     	;# 
   743  011C                     	;# 
   744  011D                     	;# 
   745  011D                     	;# 
   746  011D                     	;# 
   747  011E                     	;# 
   748  011F                     	;# 
   749  018C                     	;# 
   750  018D                     	;# 
   751  0191                     	;# 
   752  0191                     	;# 
   753  0192                     	;# 
   754  0193                     	;# 
   755  0193                     	;# 
   756  0193                     	;# 
   757  0194                     	;# 
   758  0195                     	;# 
   759  0196                     	;# 
   760  0197                     	;# 
   761  0199                     	;# 
   762  0199                     	;# 
   763  0199                     	;# 
   764  019A                     	;# 
   765  019A                     	;# 
   766  019A                     	;# 
   767  019B                     	;# 
   768  019B                     	;# 
   769  019B                     	;# 
   770  019B                     	;# 
   771  019B                     	;# 
   772  019C                     	;# 
   773  019C                     	;# 
   774  019C                     	;# 
   775  019D                     	;# 
   776  019D                     	;# 
   777  019D                     	;# 
   778  019E                     	;# 
   779  019E                     	;# 
   780  019E                     	;# 
   781  019F                     	;# 
   782  019F                     	;# 
   783  019F                     	;# 
   784  019F                     	;# 
   785  019F                     	;# 
   786  020C                     	;# 
   787  020D                     	;# 
   788  020E                     	;# 
   789  0210                     	;# 
   790  0211                     	;# 
   791  0211                     	;# 
   792  0212                     	;# 
   793  0212                     	;# 
   794  0213                     	;# 
   795  0213                     	;# 
   796  0214                     	;# 
   797  0214                     	;# 
   798  0215                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0216                     	;# 
   803  0216                     	;# 
   804  0217                     	;# 
   805  0217                     	;# 
   806  028C                     	;# 
   807  028D                     	;# 
   808  028E                     	;# 
   809  0291                     	;# 
   810  0291                     	;# 
   811  0292                     	;# 
   812  0293                     	;# 
   813  0298                     	;# 
   814  0298                     	;# 
   815  0299                     	;# 
   816  029A                     	;# 
   817  030C                     	;# 
   818  030D                     	;# 
   819  030E                     	;# 
   820  0311                     	;# 
   821  0311                     	;# 
   822  0312                     	;# 
   823  0313                     	;# 
   824  038C                     	;# 
   825  038D                     	;# 
   826  038E                     	;# 
   827  0390                     	;# 
   828  0391                     	;# 
   829  0392                     	;# 
   830  0393                     	;# 
   831  0394                     	;# 
   832  0395                     	;# 
   833  0396                     	;# 
   834  0397                     	;# 
   835  0398                     	;# 
   836  0399                     	;# 
   837  039D                     	;# 
   838  039E                     	;# 
   839  039F                     	;# 
   840  0511                     	;# 
   841  0513                     	;# 
   842  051A                     	;# 
   843  0811                     	;# 
   844  0812                     	;# 
   845  0813                     	;# 
   846  0814                     	;# 
   847  0815                     	;# 
   848  0816                     	;# 
   849  0817                     	;# 
   850  0818                     	;# 
   851  0819                     	;# 
   852  081A                     	;# 
   853  081B                     	;# 
   854  081C                     	;# 
   855  081D                     	;# 
   856  081E                     	;# 
   857  081F                     	;# 
   858  0820                     	;# 
   859  0821                     	;# 
   860  0821                     	;# 
   861  0822                     	;# 
   862  0823                     	;# 
   863  0823                     	;# 
   864  0824                     	;# 
   865  0825                     	;# 
   866  0825                     	;# 
   867  0826                     	;# 
   868  0827                     	;# 
   869  0827                     	;# 
   870  0828                     	;# 
   871  0829                     	;# 
   872  082A                     	;# 
   873  082B                     	;# 
   874  082C                     	;# 
   875  082D                     	;# 
   876  082E                     	;# 
   877  082F                     	;# 
   878  0831                     	;# 
   879  0832                     	;# 
   880  0833                     	;# 
   881  0834                     	;# 
   882  0835                     	;# 
   883  0836                     	;# 
   884  0837                     	;# 
   885  0838                     	;# 
   886  0839                     	;# 
   887  083A                     	;# 
   888  083B                     	;# 
   889  083C                     	;# 
   890  083D                     	;# 
   891  083E                     	;# 
   892  083F                     	;# 
   893  0840                     	;# 
   894  0841                     	;# 
   895  0841                     	;# 
   896  0842                     	;# 
   897  0843                     	;# 
   898  0843                     	;# 
   899  0844                     	;# 
   900  0845                     	;# 
   901  0845                     	;# 
   902  0846                     	;# 
   903  0847                     	;# 
   904  0847                     	;# 
   905  0848                     	;# 
   906  0849                     	;# 
   907  084A                     	;# 
   908  084B                     	;# 
   909  084C                     	;# 
   910  084D                     	;# 
   911  084E                     	;# 
   912  084F                     	;# 
   913  0851                     	;# 
   914  0852                     	;# 
   915  0853                     	;# 
   916  0854                     	;# 
   917  0855                     	;# 
   918  0856                     	;# 
   919  0857                     	;# 
   920  0858                     	;# 
   921  0859                     	;# 
   922  085A                     	;# 
   923  085B                     	;# 
   924  085C                     	;# 
   925  085D                     	;# 
   926  085E                     	;# 
   927  085F                     	;# 
   928  0860                     	;# 
   929  0861                     	;# 
   930  0861                     	;# 
   931  0862                     	;# 
   932  0863                     	;# 
   933  0863                     	;# 
   934  0864                     	;# 
   935  0865                     	;# 
   936  0865                     	;# 
   937  0866                     	;# 
   938  0867                     	;# 
   939  0867                     	;# 
   940  0868                     	;# 
   941  0869                     	;# 
   942  086A                     	;# 
   943  086B                     	;# 
   944  086C                     	;# 
   945  086D                     	;# 
   946  086E                     	;# 
   947  086F                     	;# 
   948  0FE4                     	;# 
   949  0FE5                     	;# 
   950  0FE6                     	;# 
   951  0FE7                     	;# 
   952  0FE8                     	;# 
   953  0FE9                     	;# 
   954  0FEA                     	;# 
   955  0FEB                     	;# 
   956  0FED                     	;# 
   957  0FEE                     	;# 
   958  0FEF                     	;# 
   959  0000                     	;# 
   960  0001                     	;# 
   961  0002                     	;# 
   962  0003                     	;# 
   963  0004                     	;# 
   964  0005                     	;# 
   965  0006                     	;# 
   966  0007                     	;# 
   967  0008                     	;# 
   968  0009                     	;# 
   969  000A                     	;# 
   970  000B                     	;# 
   971  000C                     	;# 
   972  000D                     	;# 
   973  000E                     	;# 
   974  0010                     	;# 
   975  0011                     	;# 
   976  0012                     	;# 
   977  0013                     	;# 
   978  0014                     	;# 
   979  0015                     	;# 
   980  0016                     	;# 
   981  0016                     	;# 
   982  0017                     	;# 
   983  0018                     	;# 
   984  0019                     	;# 
   985  001A                     	;# 
   986  001B                     	;# 
   987  001C                     	;# 
   988  008C                     	;# 
   989  008D                     	;# 
   990  008E                     	;# 
   991  0090                     	;# 
   992  0091                     	;# 
   993  0092                     	;# 
   994  0093                     	;# 
   995  0094                     	;# 
   996  0095                     	;# 
   997  0096                     	;# 
   998  0097                     	;# 
   999  0098                     	;# 
  1000  0099                     	;# 
  1001  009A                     	;# 
  1002  009B                     	;# 
  1003  009B                     	;# 
  1004  009C                     	;# 
  1005  009D                     	;# 
  1006  009E                     	;# 
  1007  009F                     	;# 
  1008  010C                     	;# 
  1009  010D                     	;# 
  1010  010E                     	;# 
  1011  0111                     	;# 
  1012  0112                     	;# 
  1013  0113                     	;# 
  1014  0114                     	;# 
  1015  0115                     	;# 
  1016  0116                     	;# 
  1017  0117                     	;# 
  1018  0118                     	;# 
  1019  0119                     	;# 
  1020  011A                     	;# 
  1021  011B                     	;# 
  1022  011C                     	;# 
  1023  011D                     	;# 
  1024  011D                     	;# 
  1025  011D                     	;# 
  1026  011E                     	;# 
  1027  011F                     	;# 
  1028  018C                     	;# 
  1029  018D                     	;# 
  1030  0191                     	;# 
  1031  0191                     	;# 
  1032  0192                     	;# 
  1033  0193                     	;# 
  1034  0193                     	;# 
  1035  0193                     	;# 
  1036  0194                     	;# 
  1037  0195                     	;# 
  1038  0196                     	;# 
  1039  0197                     	;# 
  1040  0199                     	;# 
  1041  0199                     	;# 
  1042  0199                     	;# 
  1043  019A                     	;# 
  1044  019A                     	;# 
  1045  019A                     	;# 
  1046  019B                     	;# 
  1047  019B                     	;# 
  1048  019B                     	;# 
  1049  019B                     	;# 
  1050  019B                     	;# 
  1051  019C                     	;# 
  1052  019C                     	;# 
  1053  019C                     	;# 
  1054  019D                     	;# 
  1055  019D                     	;# 
  1056  019D                     	;# 
  1057  019E                     	;# 
  1058  019E                     	;# 
  1059  019E                     	;# 
  1060  019F                     	;# 
  1061  019F                     	;# 
  1062  019F                     	;# 
  1063  019F                     	;# 
  1064  019F                     	;# 
  1065  020C                     	;# 
  1066  020D                     	;# 
  1067  020E                     	;# 
  1068  0210                     	;# 
  1069  0211                     	;# 
  1070  0211                     	;# 
  1071  0212                     	;# 
  1072  0212                     	;# 
  1073  0213                     	;# 
  1074  0213                     	;# 
  1075  0214                     	;# 
  1076  0214                     	;# 
  1077  0215                     	;# 
  1078  0215                     	;# 
  1079  0215                     	;# 
  1080  0215                     	;# 
  1081  0216                     	;# 
  1082  0216                     	;# 
  1083  0217                     	;# 
  1084  0217                     	;# 
  1085  028C                     	;# 
  1086  028D                     	;# 
  1087  028E                     	;# 
  1088  0291                     	;# 
  1089  0291                     	;# 
  1090  0292                     	;# 
  1091  0293                     	;# 
  1092  0298                     	;# 
  1093  0298                     	;# 
  1094  0299                     	;# 
  1095  029A                     	;# 
  1096  030C                     	;# 
  1097  030D                     	;# 
  1098  030E                     	;# 
  1099  0311                     	;# 
  1100  0311                     	;# 
  1101  0312                     	;# 
  1102  0313                     	;# 
  1103  038C                     	;# 
  1104  038D                     	;# 
  1105  038E                     	;# 
  1106  0390                     	;# 
  1107  0391                     	;# 
  1108  0392                     	;# 
  1109  0393                     	;# 
  1110  0394                     	;# 
  1111  0395                     	;# 
  1112  0396                     	;# 
  1113  0397                     	;# 
  1114  0398                     	;# 
  1115  0399                     	;# 
  1116  039D                     	;# 
  1117  039E                     	;# 
  1118  039F                     	;# 
  1119  0511                     	;# 
  1120  0513                     	;# 
  1121  051A                     	;# 
  1122  0811                     	;# 
  1123  0812                     	;# 
  1124  0813                     	;# 
  1125  0814                     	;# 
  1126  0815                     	;# 
  1127  0816                     	;# 
  1128  0817                     	;# 
  1129  0818                     	;# 
  1130  0819                     	;# 
  1131  081A                     	;# 
  1132  081B                     	;# 
  1133  081C                     	;# 
  1134  081D                     	;# 
  1135  081E                     	;# 
  1136  081F                     	;# 
  1137  0820                     	;# 
  1138  0821                     	;# 
  1139  0821                     	;# 
  1140  0822                     	;# 
  1141  0823                     	;# 
  1142  0823                     	;# 
  1143  0824                     	;# 
  1144  0825                     	;# 
  1145  0825                     	;# 
  1146  0826                     	;# 
  1147  0827                     	;# 
  1148  0827                     	;# 
  1149  0828                     	;# 
  1150  0829                     	;# 
  1151  082A                     	;# 
  1152  082B                     	;# 
  1153  082C                     	;# 
  1154  082D                     	;# 
  1155  082E                     	;# 
  1156  082F                     	;# 
  1157  0831                     	;# 
  1158  0832                     	;# 
  1159  0833                     	;# 
  1160  0834                     	;# 
  1161  0835                     	;# 
  1162  0836                     	;# 
  1163  0837                     	;# 
  1164  0838                     	;# 
  1165  0839                     	;# 
  1166  083A                     	;# 
  1167  083B                     	;# 
  1168  083C                     	;# 
  1169  083D                     	;# 
  1170  083E                     	;# 
  1171  083F                     	;# 
  1172  0840                     	;# 
  1173  0841                     	;# 
  1174  0841                     	;# 
  1175  0842                     	;# 
  1176  0843                     	;# 
  1177  0843                     	;# 
  1178  0844                     	;# 
  1179  0845                     	;# 
  1180  0845                     	;# 
  1181  0846                     	;# 
  1182  0847                     	;# 
  1183  0847                     	;# 
  1184  0848                     	;# 
  1185  0849                     	;# 
  1186  084A                     	;# 
  1187  084B                     	;# 
  1188  084C                     	;# 
  1189  084D                     	;# 
  1190  084E                     	;# 
  1191  084F                     	;# 
  1192  0851                     	;# 
  1193  0852                     	;# 
  1194  0853                     	;# 
  1195  0854                     	;# 
  1196  0855                     	;# 
  1197  0856                     	;# 
  1198  0857                     	;# 
  1199  0858                     	;# 
  1200  0859                     	;# 
  1201  085A                     	;# 
  1202  085B                     	;# 
  1203  085C                     	;# 
  1204  085D                     	;# 
  1205  085E                     	;# 
  1206  085F                     	;# 
  1207  0860                     	;# 
  1208  0861                     	;# 
  1209  0861                     	;# 
  1210  0862                     	;# 
  1211  0863                     	;# 
  1212  0863                     	;# 
  1213  0864                     	;# 
  1214  0865                     	;# 
  1215  0865                     	;# 
  1216  0866                     	;# 
  1217  0867                     	;# 
  1218  0867                     	;# 
  1219  0868                     	;# 
  1220  0869                     	;# 
  1221  086A                     	;# 
  1222  086B                     	;# 
  1223  086C                     	;# 
  1224  086D                     	;# 
  1225  086E                     	;# 
  1226  086F                     	;# 
  1227  0FE4                     	;# 
  1228  0FE5                     	;# 
  1229  0FE6                     	;# 
  1230  0FE7                     	;# 
  1231  0FE8                     	;# 
  1232  0FE9                     	;# 
  1233  0FEA                     	;# 
  1234  0FEB                     	;# 
  1235  0FED                     	;# 
  1236  0FEE                     	;# 
  1237  0FEF                     	;# 
  1238                           
  1239                           	psect	idataBANK1
  1240  0000'                    __pidataBANK1:
  1241                           
  1242                           ;initializer for _count
  1243  0000' 3400               	retlw	0
  1244  0001' 3404               	retlw	4
  1245                           
  1246                           ;initializer for _cmode
  1247  0002' 3401               	retlw	1
  1248                           
  1249                           	psect	idataBANK3
  1250  0000'                    __pidataBANK3:
  1251                           
  1252                           ;initializer for _CC_disc_ki
  1253  0000' 346F               	retlw	111
  1254  0001' 3412               	retlw	18
  1255  0002' 3483               	retlw	131
  1256  0003' 343A               	retlw	58
  1257                           
  1258                           ;initializer for _CC_disc_kp
  1259  0004' 34A6               	retlw	166
  1260  0005' 349B               	retlw	155
  1261  0006' 34C4               	retlw	196
  1262  0007' 343B               	retlw	59
  1263                           
  1264                           ;initializer for _CC_char_ki
  1265  0008' 340A               	retlw	10
  1266  0009' 34D7               	retlw	215
  1267  000A' 3423               	retlw	35
  1268  000B' 343B               	retlw	59
  1269                           
  1270                           ;initializer for _CC_char_kp
  1271  000C' 34F4               	retlw	244
  1272  000D' 34FD               	retlw	253
  1273  000E' 3454               	retlw	84
  1274  000F' 343C               	retlw	60
  1275                           
  1276                           ;initializer for _state
  1277  0010' 3401               	retlw	1
  1278                           
  1279                           ;initializer for _cell_count
  1280  0011' 3401               	retlw	1
  1281                           
  1282                           ;initializer for _SECF
  1283  0012' 3401               	retlw	1
  1284                           
  1285                           	psect	idataBANK4
  1286  0000'                    __pidataBANK4:
  1287                           
  1288                           ;initializer for _CV_kd
  1289  0000' 340A               	retlw	10
  1290  0001' 34D7               	retlw	215
  1291  0002' 34A3               	retlw	163
  1292  0003' 343C               	retlw	60
  1293                           
  1294                           ;initializer for _CV_ki
  1295  0004' 346F               	retlw	111
  1296  0005' 3412               	retlw	18
  1297  0006' 3403               	retlw	3
  1298  0007' 343A               	retlw	58
  1299                           
  1300                           ;initializer for _CV_kp
  1301  0008' 34FA               	retlw	250
  1302  0009' 34ED               	retlw	237
  1303  000A' 34EB               	retlw	235
  1304  000B' 343A               	retlw	58
  1305  0016                     _TMR1L	set	22
  1306  0017                     _TMR1H	set	23
  1307  006D                     _RB5	set	109
  1308  006C                     _RB4	set	108
  1309  006B                     _RB3	set	107
  1310  006A                     _RB2	set	106
  1311  008C                     _TXIF	set	140
  1312  0088                     _TMR1IF	set	136
  1313  005F                     _GIE	set	95
  1314  005E                     _PEIE	set	94
  1315  008D                     _RCIF	set	141
  1316  0075                     _RC5	set	117
  1317  0074                     _RC4	set	116
  1318  0073                     _RC3	set	115
  1319  00C5                     _T1CKPS1	set	197
  1320  00C4                     _T1CKPS0	set	196
  1321  00C7                     _TMR1CS1	set	199
  1322  00C6                     _TMR1CS0	set	198
  1323  00CF                     _TMR1GE	set	207
  1324  00C0                     _TMR1ON	set	192
  1325  00C3                     _T1OSCEN	set	195
  1326  00C2                     _nT1SYNC	set	194
  1327  009C                     _ADRESH	set	156
  1328  009B                     _ADRESL	set	155
  1329  009F                     _ADCON2bits	set	159
  1330  009E                     _ADCON1bits	set	158
  1331  009D                     _ADCON0bits	set	157
  1332  0099                     _OSCCONbits	set	153
  1333  0488                     _TMR1IE	set	1160
  1334  04E9                     _GO_nDONE	set	1257
  1335  048C                     _TXIE	set	1164
  1336  048D                     _RCIE	set	1165
  1337  0465                     _TRISA5	set	1125
  1338  0468                     _TRISB0	set	1128
  1339  0469                     _TRISB1	set	1129
  1340  0463                     _TRISA3	set	1123
  1341  0472                     _TRISC2	set	1138
  1342  046D                     _TRISB5	set	1133
  1343  046C                     _TRISB4	set	1132
  1344  046B                     _TRISB3	set	1131
  1345  046A                     _TRISB2	set	1130
  1346  0475                     _TRISC5	set	1141
  1347  0474                     _TRISC4	set	1140
  1348  0473                     _TRISC3	set	1139
  1349  04AF                     _nWPUEN	set	1199
  1350  08E9                     _RXSEL	set	2281
  1351  08EA                     _TXSEL	set	2282
  1352  019D                     _RC1STAbits	set	413
  1353  019A                     _TX1REG	set	410
  1354  0199                     _RC1REG	set	409
  1355  019B                     _SP1BRGL	set	411
  1356  019C                     _SP1BRGH	set	412
  1357  0CE9                     _OERR	set	3305
  1358  0CEE                     _RX9	set	3310
  1359  0CF6                     _TX9	set	3318
  1360  0CEC                     _CREN	set	3308
  1361  0CF5                     _TXEN	set	3317
  1362  0CEF                     _SPEN	set	3311
  1363  0CF4                     _SYNC	set	3316
  1364  0CFB                     _BRG16	set	3323
  1365  0CF2                     _BRGH	set	3314
  1366  0C65                     _ANSA5	set	3173
  1367  0C68                     _ANSB0	set	3176
  1368  0C69                     _ANSB1	set	3177
  1369  0C63                     _ANSA3	set	3171
  1370  0C6D                     _ANSB5	set	3181
  1371  0C6C                     _ANSB4	set	3180
  1372  0C6B                     _ANSB3	set	3179
  1373  0C6A                     _ANSB2	set	3178
  1374  1065                     _WPUA5	set	4197
  1375  1068                     _WPUB0	set	4200
  1376  1069                     _WPUB1	set	4201
  1377  1063                     _WPUA3	set	4195
  1378  1072                     _WPUC2	set	4210
  1379  106D                     _WPUB5	set	4205
  1380  106C                     _WPUB4	set	4204
  1381  106B                     _WPUB3	set	4203
  1382  106A                     _WPUB2	set	4202
  1383  1075                     _WPUC5	set	4213
  1384  1074                     _WPUC4	set	4212
  1385  1073                     _WPUC3	set	4211
  1386  1083                     _WPUE3	set	4227
  1387  0811                     _PSMC1CONbits	set	2065
  1388  0821                     _PSMC1PHL	set	2081
  1389  0822                     _PSMC1PHH	set	2082
  1390  0823                     _PSMC1DCL	set	2083
  1391  0824                     _PSMC1DCH	set	2084
  1392  0825                     _PSMC1PRL	set	2085
  1393  0826                     _PSMC1PRH	set	2086
  1394  0814                     _PSMC1CLK	set	2068
  1395  0812                     _PSMC1MDL	set	2066
  1396  0811                     _PSMC1CON	set	2065
  1397  40D8                     _P1DCST	set	16600
  1398  40D0                     _P1PHST	set	16592
  1399  40E0                     _P1PRST	set	16608
  1400  40AA                     _P1OEC	set	16554
  1401  40B2                     _P1POLC	set	16562
  1402  4172                     _P1STRC	set	16754
  1403                           
  1404                           	psect	stringtext1
  1405  0000'                    __pstringtext1:
  1406  0000'                    STR_2:
  1407  0000' 3454               	retlw	84	;'T'
  1408  0001' 3449               	retlw	73	;'I'
  1409  0002' 344D               	retlw	77	;'M'
  1410  0003' 3449               	retlw	73	;'I'
  1411  0004' 344E               	retlw	78	;'N'
  1412  0005' 3447               	retlw	71	;'G'
  1413  0006' 345F               	retlw	95	;'_'
  1414  0007' 3445               	retlw	69	;'E'
  1415  0008' 3452               	retlw	82	;'R'
  1416  0009' 3452               	retlw	82	;'R'
  1417  000A' 344F               	retlw	79	;'O'
  1418  000B' 3452               	retlw	82	;'R'
  1419  000C' 3400               	retlw	0
  1420                           
  1421                           	psect	stringtext2
  1422  0000'                    __pstringtext2:
  1423  0000'                    STR_1:
  1424  0000' 344F               	retlw	79	;'O'
  1425  0001' 3445               	retlw	69	;'E'
  1426  0002' 3452               	retlw	82	;'R'
  1427  0003' 3452               	retlw	82	;'R'
  1428  0004' 345F               	retlw	95	;'_'
  1429  0005' 3445               	retlw	69	;'E'
  1430  0006' 3452               	retlw	82	;'R'
  1431  0007' 3452               	retlw	82	;'R'
  1432  0008' 344F               	retlw	79	;'O'
  1433  0009' 3452               	retlw	82	;'R'
  1434  000A' 3400               	retlw	0
  1435                           
  1436                           	psect	stringtext3
  1437  0000'                    __pstringtext3:
  1438                           
  1439                           	psect	cinit
  1440  0000'                    start_initialization:	
  1441                           ; #config settings
  1442                           
  1443  0000'                    __initialization:
  1444                           
  1445                           ; Initialize objects allocated to BANK1
  1446  0000' 3000'              	movlw	low __pidataBANK1
  1447  0001' 0084               	movwf	4
  1448  0002' 3000'              	movlw	(high __pidataBANK1)| (0+128)
  1449  0003' 0085               	movwf	5
  1450  0004' 3000'              	movlw	low __pdataBANK1
  1451  0005' 0086               	movwf	6
  1452  0006' 3000'              	movlw	high __pdataBANK1
  1453  0007' 0087               	movwf	7
  1454  0008' 3003               	movlw	3
  1455  0009' 3180' 2000' 3180'  	fcall	init_ram
  1456                           
  1457                           ; Initialize objects allocated to BANK3
  1458  000C' 3000'              	movlw	low __pidataBANK3
  1459  000D' 0084               	movwf	4
  1460  000E' 3000'              	movlw	(high __pidataBANK3)| (0+128)
  1461  000F' 0085               	movwf	5
  1462  0010' 3000'              	movlw	low __pdataBANK3
  1463  0011' 0086               	movwf	6
  1464  0012' 3000'              	movlw	high __pdataBANK3
  1465  0013' 0087               	movwf	7
  1466  0014' 3013               	movlw	19
  1467  0015' 3180' 2000' 3180'  	fcall	init_ram
  1468                           
  1469                           ; Initialize objects allocated to BANK4
  1470  0018' 3000'              	movlw	low __pidataBANK4
  1471  0019' 0084               	movwf	4
  1472  001A' 3000'              	movlw	(high __pidataBANK4)| (0+128)
  1473  001B' 0085               	movwf	5
  1474  001C' 3000'              	movlw	low __pdataBANK4
  1475  001D' 0086               	movwf	6
  1476  001E' 3000'              	movlw	high __pdataBANK4
  1477  001F' 0087               	movwf	7
  1478  0020' 300C               	movlw	12
  1479  0021' 3180' 2000' 3180'  	fcall	init_ram
  1480                           
  1481                           ; Clear objects allocated to BANK1
  1482  0024' 3000'              	movlw	low __pbssBANK1
  1483  0025' 0084               	movwf	4
  1484  0026' 3000'              	movlw	high __pbssBANK1
  1485  0027' 0085               	movwf	5
  1486  0028' 3018               	movlw	24
  1487  0029' 3180' 2000' 3180'  	fcall	clear_ram0
  1488                           
  1489                           ; Clear objects allocated to BANK3
  1490  002C' 3000'              	movlw	low __pbssBANK3
  1491  002D' 0084               	movwf	4
  1492  002E' 3000'              	movlw	high __pbssBANK3
  1493  002F' 0085               	movwf	5
  1494  0030' 3020               	movlw	32
  1495  0031' 3180' 2000' 3180'  	fcall	clear_ram0
  1496                           
  1497                           ; Clear objects allocated to BANK4
  1498  0034' 3000'              	movlw	low __pbssBANK4
  1499  0035' 0084               	movwf	4
  1500  0036' 3000'              	movlw	high __pbssBANK4
  1501  0037' 0085               	movwf	5
  1502  0038' 303C               	movlw	60
  1503  0039' 3180' 2000' 3180'  	fcall	clear_ram0
  1504                           
  1505                           ; Clear objects allocated to BANK5
  1506  003C' 3000'              	movlw	low __pbssBANK5
  1507  003D' 0084               	movwf	4
  1508  003E' 3000'              	movlw	high __pbssBANK5
  1509  003F' 0085               	movwf	5
  1510  0040' 3031               	movlw	49
  1511  0041' 3180' 2000' 3180'  	fcall	clear_ram0
  1512  0044'                    end_of_initialization:	
  1513                           ;End of C runtime variable initialization code
  1514                           
  1515  0044'                    __end_of__initialization:
  1516  0044' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1517  0045' 0020               	movlb	0
  1518  0046' 3180' 2800'        	ljmp	_main	;jump to C main() function
  1519                           
  1520                           	psect	bssBANK1
  1521  0000'                    __pbssBANK1:
  1522  0000'                    _er:
  1523  0000'                    	ds	4
  1524  0004'                    _iacum:
  1525  0004'                    	ds	3
  1526  0007'                    _vacum:
  1527  0007'                    	ds	3
  1528  000A'                    _iref:
  1529  000A'                    	ds	2
  1530  000C'                    _i:
  1531  000C'                    	ds	2
  1532  000E'                    _v:
  1533  000E'                    	ds	2
  1534  0010'                    _conv:
  1535  0010'                    	ds	1
  1536  0011'                    _counter_state:
  1537  0011'                    	ds	1
  1538  0012'                    _cell_max:
  1539  0012'                    	ds	1
  1540  0013'                    _SRXF:
  1541  0013'                    	ds	1
  1542  0014'                    _start:
  1543  0014'                    	ds	1
  1544  0015'                    _converter_configuration_ptr:
  1545  0015'                    	ds	1
  1546  0016'                    _test_configuration_ptr:
  1547  0016'                    	ds	1
  1548  0017'                    _basic_configuration_ptr:
  1549  0017'                    	ds	1
  1550                           
  1551                           	psect	dataBANK1
  1552  0000'                    __pdataBANK1:
  1553  0000'                    _count:
  1554  0000'                    	ds	2
  1555  0002'                    _cmode:
  1556  0002'                    	ds	1
  1557                           
  1558                           	psect	bssBANK3
  1559  0000'                    __pbssBANK3:
  1560  0000'                    _pidt:
  1561  0000'                    	ds	4
  1562  0004'                    _qavg:
  1563  0004'                    	ds	4
  1564  0008'                    _timeout:
  1565  0008'                    	ds	2
  1566  000A'                    _second:
  1567  000A'                    	ds	2
  1568  000C'                    _vmax:
  1569  000C'                    	ds	2
  1570  000E'                    _iavg:
  1571  000E'                    	ds	2
  1572  0010'                    _vavg:
  1573  0010'                    	ds	2
  1574  0012'                    _EOC_variable:
  1575  0012'                    	ds	2
  1576  0014'                    _wait_count:
  1577  0014'                    	ds	2
  1578  0016'                    _i_disc:
  1579  0016'                    	ds	2
  1580  0018'                    _i_char:
  1581  0018'                    	ds	2
  1582  001A'                    _capacity:
  1583  001A'                    	ds	2
  1584  001C'                    _CC_char_disc_kd:
  1585  001C'                    	ds	1
  1586  001D'                    _repetition_counter:
  1587  001D'                    	ds	1
  1588  001E'                    _dc_res_count:
  1589  001E'                    	ds	1
  1590  001F'                    _log_data_ptr:
  1591  001F'                    	ds	1
  1592                           
  1593                           	psect	dataBANK3
  1594  0000'                    __pdataBANK3:
  1595  0000'                    _CC_disc_ki:
  1596  0000'                    	ds	4
  1597  0004'                    _CC_disc_kp:
  1598  0004'                    	ds	4
  1599  0008'                    _CC_char_ki:
  1600  0008'                    	ds	4
  1601  000C'                    _CC_char_kp:
  1602  000C'                    	ds	4
  1603  0010'                    _state:
  1604  0010'                    	ds	1
  1605  0011'                    _cell_count:
  1606  0011'                    	ds	1
  1607  0012'                    _SECF:
  1608  0012'                    	ds	1
  1609                           
  1610                           	psect	bssBANK4
  1611  0000'                    __pbssBANK4:
  1612  0000'                    _vref:
  1613  0000'                    	ds	4
  1614  0004'                    _kd:
  1615  0004'                    	ds	4
  1616  0008'                    _ki:
  1617  0008'                    	ds	4
  1618  000C'                    _kp:
  1619  000C'                    	ds	4
  1620  0010'                    _pidi:
  1621  0010'                    	ds	4
  1622  0014'                    _EOPD_capacity:
  1623  0014'                    	ds	2
  1624  0016'                    _EOD_voltage:
  1625  0016'                    	ds	2
  1626  0018'                    _EOPC_variable:
  1627  0018'                    	ds	2
  1628  001A'                    _test_configuration:
  1629  001A'                    	ds	17
  1630  002B'                    _basic_configuration:
  1631  002B'                    	ds	17
  1632                           
  1633                           	psect	dataBANK4
  1634  0000'                    __pdataBANK4:
  1635  0000'                    _CV_kd:
  1636  0000'                    	ds	4
  1637  0004'                    _CV_ki:
  1638  0004'                    	ds	4
  1639  0008'                    _CV_kp:
  1640  0008'                    	ds	4
  1641                           
  1642                           	psect	bssBANK5
  1643  0000'                    __pbssBANK5:
  1644  0000'                    command_interpreter@F5995:
  1645  0000'                    	ds	20
  1646  0014'                    _log_data:
  1647  0014'                    	ds	15
  1648  0023'                    _converter_configuration:
  1649  0023'                    	ds	14
  1650                           
  1651                           	psect	inittext
  1652  0000'                    init_ram:
  1653  0000' 00FE               	movwf	btemp
  1654  0001'                    initloop:
  1655  0001' 0012               	moviw fsr0++
  1656  0002' 001E               	movwi fsr1++
  1657  0003' 0BFE               	decfsz	btemp,f
  1658  0004' 2800'              	goto	initloop
  1659  0005' 3400               	retlw	0
  1660                           
  1661                           	psect	clrtext
  1662  0000'                    clear_ram0:	
  1663                           ;	Called with FSR0 containing the base address, and
  1664                           ;	WREG with the size to clear
  1665                           
  1666  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
  1667  0001'                    clrloop0:
  1668  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
  1669  0002' 3101               	addfsr 0,1
  1670  0003' 0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1671  0004' 2800'              	goto	clrloop0	;have we reached the end yet?
  1672  0005' 3400               	retlw	0	;all done for this memory range, return
  1673                           
  1674                           	psect	cstackBANK3
  1675  0000'                    __pcstackBANK3:
  1676  0000'                    ??___fladd:
  1677                           
  1678                           ; 1 bytes @ 0x0
  1679  0000'                    	ds	8
  1680  0008'                    ?___fltol:
  1681  0008'                    ___fltol@f1:	
  1682                           ; 4 bytes @ 0x8
  1683                           
  1684                           
  1685                           ; 4 bytes @ 0x8
  1686  0008'                    	ds	4
  1687  000C'                    ??___fltol:
  1688                           
  1689                           ; 1 bytes @ 0xC
  1690  000C'                    	ds	4
  1691  0010'                    ?_cc_cv_mode:
  1692  0010'                    set_DC@dc:	
  1693                           ; 1 bytes @ 0x10
  1694                           
  1695  0010'                    cc_cv_mode@current_voltage:	
  1696                           ; 2 bytes @ 0x10
  1697                           
  1698  0010'                    _scaling$1609:	
  1699                           ; 2 bytes @ 0x10
  1700                           
  1701                           
  1702                           ; 4 bytes @ 0x10
  1703  0010'                    	ds	2
  1704  0012'                    ??_converter_settings:
  1705  0012'                    ??_fDISCHARGE:	
  1706                           ; 1 bytes @ 0x12
  1707                           
  1708  0012'                    ??_fCHARGE:	
  1709                           ; 1 bytes @ 0x12
  1710                           
  1711  0012'                    ??_fDC_res:	
  1712                           ; 1 bytes @ 0x12
  1713                           
  1714  0012'                    ??_initialize:	
  1715                           ; 1 bytes @ 0x12
  1716                           
  1717  0012'                    cc_cv_mode@reference_voltage:	
  1718                           ; 1 bytes @ 0x12
  1719                           
  1720                           
  1721                           ; 2 bytes @ 0x12
  1722  0012'                    	ds	2
  1723  0014'                    cc_cv_mode@CC_mode_status:
  1724  0014'                    _scaling$1608:	
  1725                           ; 1 bytes @ 0x14
  1726                           
  1727                           
  1728                           ; 4 bytes @ 0x14
  1729  0014'                    	ds	2
  1730  0016'                    _fDC_res$1610:
  1731  0016'                    _converter_settings$1611:	
  1732                           ; 4 bytes @ 0x16
  1733                           
  1734                           
  1735                           ; 4 bytes @ 0x16
  1736  0016'                    	ds	4
  1737  001A'                    ??_state_machine:
  1738                           
  1739                           ; 1 bytes @ 0x1A
  1740  001A'                    	ds	2
  1741  001C'                    ??_main:
  1742                           
  1743                           ; 1 bytes @ 0x1C
  1744  001C'                    	ds	1
  1745                           
  1746                           	psect	cstackBANK2
  1747  0000'                    __pcstackBANK2:
  1748  0000'                    ??_Cell_OFF:
  1749  0000'                    ??_UART_send_byte:	
  1750                           ; 1 bytes @ 0x0
  1751                           
  1752  0000'                    ??_getTime:	
  1753                           ; 1 bytes @ 0x0
  1754                           
  1755  0000'                    ??_interrupt_enable:	
  1756                           ; 1 bytes @ 0x0
  1757                           
  1758  0000'                    ??_Cell_ON:	
  1759                           ; 1 bytes @ 0x0
  1760                           
  1761  0000'                    ?__Umul8_16:	
  1762                           ; 1 bytes @ 0x0
  1763                           
  1764  0000'                    ?___xxtofl:	
  1765                           ; 2 bytes @ 0x0
  1766                           
  1767  0000'                    UART_send_byte@byte:	
  1768                           ; 4 bytes @ 0x0
  1769                           
  1770  0000'                    __Umul8_16@multiplicand:	
  1771                           ; 1 bytes @ 0x0
  1772                           
  1773  0000'                    ___xxtofl@val:	
  1774                           ; 1 bytes @ 0x0
  1775                           
  1776                           
  1777                           ; 4 bytes @ 0x0
  1778  0000'                    	ds	1
  1779  0001'                    ?_UART_send_some_bytes:
  1780  0001'                    UART_send_some_bytes@data:	
  1781                           ; 1 bytes @ 0x1
  1782                           
  1783                           
  1784                           ; 2 bytes @ 0x1
  1785  0001'                    	ds	1
  1786  0002'                    ??__Umul8_16:
  1787                           
  1788                           ; 1 bytes @ 0x2
  1789  0002'                    	ds	1
  1790  0003'                    ??_UART_send_some_bytes:
  1791  0003'                    UART_send_some_bytes@length:	
  1792                           ; 1 bytes @ 0x3
  1793                           
  1794                           
  1795                           ; 1 bytes @ 0x3
  1796  0003'                    	ds	1
  1797  0004'                    ??___xxtofl:
  1798  0004'                    __Umul8_16@product:	
  1799                           ; 1 bytes @ 0x4
  1800                           
  1801                           
  1802                           ; 2 bytes @ 0x4
  1803  0004'                    	ds	2
  1804  0006'                    __Umul8_16@word_mpld:
  1805                           
  1806                           ; 2 bytes @ 0x6
  1807  0006'                    	ds	2
  1808  0008'                    __Umul8_16@multiplier:
  1809  0008'                    ___xxtofl@sign:	
  1810                           ; 1 bytes @ 0x8
  1811                           
  1812                           
  1813                           ; 1 bytes @ 0x8
  1814  0008'                    	ds	1
  1815  0009'                    ___xxtofl@exp:
  1816                           
  1817                           ; 1 bytes @ 0x9
  1818  0009'                    	ds	1
  1819  000A'                    ___xxtofl@arg:
  1820                           
  1821                           ; 4 bytes @ 0xA
  1822  000A'                    	ds	4
  1823  000E'                    ?___flge:
  1824  000E'                    ?___fldiv:	
  1825                           ; 1 bit 
  1826                           
  1827  000E'                    ___flge@ff1:	
  1828                           ; 4 bytes @ 0xE
  1829                           
  1830  000E'                    ___fldiv@a:	
  1831                           ; 4 bytes @ 0xE
  1832                           
  1833                           
  1834                           ; 4 bytes @ 0xE
  1835  000E'                    	ds	4
  1836  0012'                    ___flge@ff2:
  1837  0012'                    ___fldiv@b:	
  1838                           ; 4 bytes @ 0x12
  1839                           
  1840                           
  1841                           ; 4 bytes @ 0x12
  1842  0012'                    	ds	4
  1843  0016'                    ??___flge:
  1844  0016'                    ??___fldiv:	
  1845                           ; 1 bytes @ 0x16
  1846                           
  1847                           
  1848                           ; 1 bytes @ 0x16
  1849  0016'                    	ds	5
  1850  001B'                    ___fldiv@rem:
  1851                           
  1852                           ; 4 bytes @ 0x1B
  1853  001B'                    	ds	4
  1854  001F'                    ___fldiv@sign:
  1855                           
  1856                           ; 1 bytes @ 0x1F
  1857  001F'                    	ds	1
  1858  0020'                    ___fldiv@new_exp:
  1859                           
  1860                           ; 2 bytes @ 0x20
  1861  0020'                    	ds	2
  1862  0022'                    ___fldiv@grs:
  1863                           
  1864                           ; 4 bytes @ 0x22
  1865  0022'                    	ds	4
  1866  0026'                    ___fldiv@bexp:
  1867                           
  1868                           ; 1 bytes @ 0x26
  1869  0026'                    	ds	1
  1870  0027'                    ___fldiv@aexp:
  1871                           
  1872                           ; 1 bytes @ 0x27
  1873  0027'                    	ds	1
  1874  0028'                    ?___flmul:
  1875  0028'                    ___flmul@b:	
  1876                           ; 4 bytes @ 0x28
  1877                           
  1878                           
  1879                           ; 4 bytes @ 0x28
  1880  0028'                    	ds	4
  1881  002C'                    ___flmul@a:
  1882                           
  1883                           ; 4 bytes @ 0x2C
  1884  002C'                    	ds	4
  1885  0030'                    ??___flmul:
  1886                           
  1887                           ; 1 bytes @ 0x30
  1888  0030'                    	ds	5
  1889  0035'                    ___flmul@sign:
  1890                           
  1891                           ; 1 bytes @ 0x35
  1892  0035'                    	ds	1
  1893  0036'                    ___flmul@grs:
  1894                           
  1895                           ; 4 bytes @ 0x36
  1896  0036'                    	ds	4
  1897  003A'                    ___flmul@aexp:
  1898                           
  1899                           ; 1 bytes @ 0x3A
  1900  003A'                    	ds	1
  1901  003B'                    ___flmul@bexp:
  1902                           
  1903                           ; 1 bytes @ 0x3B
  1904  003B'                    	ds	1
  1905  003C'                    ___flmul@prod:
  1906                           
  1907                           ; 4 bytes @ 0x3C
  1908  003C'                    	ds	4
  1909  0040'                    ___flmul@temp:
  1910                           
  1911                           ; 2 bytes @ 0x40
  1912  0040'                    	ds	2
  1913  0042'                    ?___fladd:
  1914  0042'                    ___fladd@b:	
  1915                           ; 4 bytes @ 0x42
  1916                           
  1917                           
  1918                           ; 4 bytes @ 0x42
  1919  0042'                    	ds	4
  1920  0046'                    ___fladd@a:
  1921                           
  1922                           ; 4 bytes @ 0x46
  1923  0046'                    	ds	4
  1924  004A'                    ___fladd@signs:
  1925                           
  1926                           ; 1 bytes @ 0x4A
  1927  004A'                    	ds	1
  1928  004B'                    ___fladd@aexp:
  1929                           
  1930                           ; 1 bytes @ 0x4B
  1931  004B'                    	ds	1
  1932  004C'                    ___fladd@bexp:
  1933                           
  1934                           ; 1 bytes @ 0x4C
  1935  004C'                    	ds	1
  1936  004D'                    ___fladd@grs:
  1937                           
  1938                           ; 1 bytes @ 0x4D
  1939  004D'                    	ds	1
  1940  004E'                    ___fltol@sign1:
  1941                           
  1942                           ; 1 bytes @ 0x4E
  1943  004E'                    	ds	1
  1944  004F'                    ___fltol@exp1:
  1945                           
  1946                           ; 1 bytes @ 0x4F
  1947  004F'                    	ds	1
  1948  0050'                    ??_set_DC:
  1949  0050'                    ??_fIDLE:	
  1950                           ; 1 bytes @ 0x50
  1951                           
  1952  0050'                    ??_fWAIT:	
  1953                           ; 1 bytes @ 0x50
  1954                           
  1955  0050'                    ??_fNEXTSTATE:	
  1956                           ; 1 bytes @ 0x50
  1957                           
  1958  0050'                    ??_fNEXTCELL:	
  1959                           ; 1 bytes @ 0x50
  1960                           
  1961  0050'                    ??_fNEXTREPETITION:	
  1962                           ; 1 bytes @ 0x50
  1963                           
  1964  0050'                    ??_cc_cv_mode:	
  1965                           ; 1 bytes @ 0x50
  1966                           
  1967  0050'                    ??_scaling:	
  1968                           ; 1 bytes @ 0x50
  1969                           
  1970  0050'                    ??_log_control:	
  1971                           ; 1 bytes @ 0x50
  1972                           
  1973                           
  1974                           	psect	cstackBANK1
  1975  0000'                    __pcstackBANK1:	
  1976                           ; 1 bytes @ 0x50
  1977                           
  1978  0000'                    ?i1___fltol:
  1979  0000'                    i1___fltol@f1:	
  1980                           ; 4 bytes @ 0x0
  1981                           
  1982                           
  1983                           ; 4 bytes @ 0x0
  1984  0000'                    	ds	4
  1985  0004'                    ??i1___fltol:
  1986                           
  1987                           ; 1 bytes @ 0x4
  1988  0004'                    	ds	4
  1989  0008'                    i1___fltol@sign1:
  1990                           
  1991                           ; 1 bytes @ 0x8
  1992  0008'                    	ds	1
  1993  0009'                    i1___fltol@exp1:
  1994                           
  1995                           ; 1 bytes @ 0x9
  1996  0009'                    	ds	1
  1997  000A'                    i1set_DC@dc:
  1998                           
  1999                           ; 2 bytes @ 0xA
  2000  000A'                    	ds	2
  2001  000C'                    ??i1_converter_settings:
  2002                           
  2003                           ; 1 bytes @ 0xC
  2004  000C'                    	ds	4
  2005  0010'                    i1_converter_settings$1748:
  2006                           
  2007                           ; 4 bytes @ 0x10
  2008  0010'                    	ds	4
  2009  0014'                    ??_command_interpreter:
  2010                           
  2011                           ; 1 bytes @ 0x14
  2012  0014'                    	ds	3
  2013  0017'                    command_interpreter@data:
  2014                           
  2015                           ; 20 bytes @ 0x17
  2016  0017'                    	ds	20
  2017  002B'                    command_interpreter@checksum:
  2018                           
  2019                           ; 2 bytes @ 0x2B
  2020  002B'                    	ds	2
  2021  002D'                    command_interpreter@test:
  2022                           
  2023                           ; 1 bytes @ 0x2D
  2024  002D'                    	ds	1
  2025  002E'                    command_interpreter@operation:
  2026                           
  2027                           ; 1 bytes @ 0x2E
  2028  002E'                    	ds	1
  2029  002F'                    command_interpreter@calc_checksum:
  2030                           
  2031                           ; 2 bytes @ 0x2F
  2032  002F'                    	ds	2
  2033  0031'                    command_interpreter@code:
  2034                           
  2035                           ; 1 bytes @ 0x31
  2036  0031'                    	ds	1
  2037  0032'                    command_interpreter@length:
  2038                           
  2039                           ; 1 bytes @ 0x32
  2040  0032'                    	ds	1
  2041  0033'                    ??_ISR:
  2042                           
  2043                           ; 1 bytes @ 0x33
  2044  0033'                    	ds	2
  2045                           
  2046                           	psect	cstackCOMMON
  2047  0000'                    __pcstackCOMMON:
  2048  0000'                    ?i1___flge:
  2049  0000'                    ?_Cell_OFF:	
  2050                           ; 1 bit 
  2051                           
  2052  0000'                    ?_set_DC:	
  2053                           ; 1 bytes @ 0x0
  2054                           
  2055  0000'                    ?_UART_get_byte:	
  2056                           ; 1 bytes @ 0x0
  2057                           
  2058  0000'                    ??_UART_get_byte:	
  2059                           ; 1 bytes @ 0x0
  2060                           
  2061  0000'                    ?_UART_get_some_bytes:	
  2062                           ; 1 bytes @ 0x0
  2063                           
  2064  0000'                    ?_UART_send_byte:	
  2065                           ; 1 bytes @ 0x0
  2066                           
  2067  0000'                    ?_put_data_into_structure:	
  2068                           ; 1 bytes @ 0x0
  2069                           
  2070  0000'                    ?_converter_settings:	
  2071                           ; 1 bytes @ 0x0
  2072                           
  2073  0000'                    ?_getTime:	
  2074                           ; 1 bytes @ 0x0
  2075                           
  2076  0000'                    ?_state_machine:	
  2077                           ; 1 bytes @ 0x0
  2078                           
  2079  0000'                    ?_fIDLE:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082  0000'                    ?_fDISCHARGE:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085  0000'                    ?_fCHARGE:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088  0000'                    ?_fDC_res:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091  0000'                    ?_fWAIT:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094  0000'                    ?_fNEXTSTATE:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097  0000'                    ?_fNEXTCELL:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100  0000'                    ?_fNEXTREPETITION:	
  2101                           ; 1 bytes @ 0x0
  2102                           
  2103  0000'                    ?_initialize:	
  2104                           ; 1 bytes @ 0x0
  2105                           
  2106  0000'                    ?_command_interpreter:	
  2107                           ; 1 bytes @ 0x0
  2108                           
  2109  0000'                    ?_control_loop:	
  2110                           ; 1 bytes @ 0x0
  2111                           
  2112  0000'                    ?_scaling:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115  0000'                    ?_log_control:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118  0000'                    ?_timing:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121  0000'                    ??_timing:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124  0000'                    ?_calculate_avg:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127  0000'                    ??_calculate_avg:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130  0000'                    ?_interrupt_enable:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133  0000'                    ?_UART_send_char:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136  0000'                    ??_UART_send_char:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139  0000'                    ?_Cell_ON:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142  0000'                    ?_main:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145  0000'                    ?_ISR:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148  0000'                    ?i1_set_DC:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151  0000'                    ?i1_UART_send_byte:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154  0000'                    ??i1_UART_send_byte:	
  2155                           ; 1 bytes @ 0x0
  2156                           
  2157  0000'                    ?i1_Cell_ON:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160  0000'                    ??i1_Cell_ON:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163  0000'                    ?i1_getTime:	
  2164                           ; 1 bytes @ 0x0
  2165                           
  2166  0000'                    ??i1_getTime:	
  2167                           ; 1 bytes @ 0x0
  2168                           
  2169  0000'                    ?i1_converter_settings:	
  2170                           ; 1 bytes @ 0x0
  2171                           
  2172  0000'                    ?_calculate_checksum:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175  0000'                    ?_abs:	
  2176                           ; 2 bytes @ 0x0
  2177                           
  2178  0000'                    ?_read_ADC:	
  2179                           ; 2 bytes @ 0x0
  2180                           
  2181  0000'                    ?i1__Umul8_16:	
  2182                           ; 2 bytes @ 0x0
  2183                           
  2184  0000'                    ?i1___xxtofl:	
  2185                           ; 2 bytes @ 0x0
  2186                           
  2187  0000'                    UART_send_char@bt:	
  2188                           ; 4 bytes @ 0x0
  2189                           
  2190  0000'                    UART_get_some_bytes@data:	
  2191                           ; 1 bytes @ 0x0
  2192                           
  2193  0000'                    calculate_checksum@length:	
  2194                           ; 1 bytes @ 0x0
  2195                           
  2196  0000'                    put_data_into_structure@data:	
  2197                           ; 1 bytes @ 0x0
  2198                           
  2199  0000'                    i1UART_send_byte@byte:	
  2200                           ; 1 bytes @ 0x0
  2201                           
  2202  0000'                    i1__Umul8_16@multiplicand:	
  2203                           ; 1 bytes @ 0x0
  2204                           
  2205  0000'                    read_ADC@channel:	
  2206                           ; 1 bytes @ 0x0
  2207                           
  2208  0000'                    abs@a:	
  2209                           ; 2 bytes @ 0x0
  2210                           
  2211  0000'                    i1___flge@ff1:	
  2212                           ; 2 bytes @ 0x0
  2213                           
  2214  0000'                    i1___xxtofl@val:	
  2215                           ; 4 bytes @ 0x0
  2216                           
  2217                           
  2218                           ; 4 bytes @ 0x0
  2219  0000'                    	ds	1
  2220  0001'                    ??_UART_get_some_bytes:
  2221  0001'                    ?_UART_send_header:	
  2222                           ; 1 bytes @ 0x1
  2223                           
  2224  0001'                    ?_UART_send_string:	
  2225                           ; 1 bytes @ 0x1
  2226                           
  2227  0001'                    ?i1_UART_send_some_bytes:	
  2228                           ; 1 bytes @ 0x1
  2229                           
  2230  0001'                    UART_send_header@operation:	
  2231                           ; 1 bytes @ 0x1
  2232                           
  2233  0001'                    put_data_into_structure@structure:	
  2234                           ; 1 bytes @ 0x1
  2235                           
  2236  0001'                    calculate_checksum@data:	
  2237                           ; 1 bytes @ 0x1
  2238                           
  2239  0001'                    UART_send_string@st_pt:	
  2240                           ; 2 bytes @ 0x1
  2241                           
  2242  0001'                    i1UART_send_some_bytes@data:	
  2243                           ; 2 bytes @ 0x1
  2244                           
  2245                           
  2246                           ; 2 bytes @ 0x1
  2247  0001'                    	ds	1
  2248  0002'                    ??_put_data_into_structure:
  2249  0002'                    ??_abs:	
  2250                           ; 1 bytes @ 0x2
  2251                           
  2252  0002'                    ??_read_ADC:	
  2253                           ; 1 bytes @ 0x2
  2254                           
  2255  0002'                    ??i1__Umul8_16:	
  2256                           ; 1 bytes @ 0x2
  2257                           
  2258  0002'                    UART_send_header@code:	
  2259                           ; 1 bytes @ 0x2
  2260                           
  2261  0002'                    UART_get_some_bytes@length:	
  2262                           ; 1 bytes @ 0x2
  2263                           
  2264                           
  2265                           ; 1 bytes @ 0x2
  2266  0002'                    	ds	1
  2267  0003'                    ??_calculate_checksum:
  2268  0003'                    ??_UART_send_header:	
  2269                           ; 1 bytes @ 0x3
  2270                           
  2271  0003'                    ??_UART_send_string:	
  2272                           ; 1 bytes @ 0x3
  2273                           
  2274  0003'                    ??i1_UART_send_some_bytes:	
  2275                           ; 1 bytes @ 0x3
  2276                           
  2277  0003'                    UART_send_header@start:	
  2278                           ; 1 bytes @ 0x3
  2279                           
  2280  0003'                    put_data_into_structure@length:	
  2281                           ; 1 bytes @ 0x3
  2282                           
  2283  0003'                    i1UART_send_some_bytes@length:	
  2284                           ; 1 bytes @ 0x3
  2285                           
  2286                           
  2287                           ; 1 bytes @ 0x3
  2288  0003'                    	ds	1
  2289  0004'                    ??i1___xxtofl:
  2290  0004'                    i1__Umul8_16@product:	
  2291                           ; 1 bytes @ 0x4
  2292                           
  2293  0004'                    i1___flge@ff2:	
  2294                           ; 2 bytes @ 0x4
  2295                           
  2296                           
  2297                           ; 4 bytes @ 0x4
  2298  0004'                    	ds	1
  2299  0005'                    calculate_checksum@code:
  2300                           
  2301                           ; 1 bytes @ 0x5
  2302  0005'                    	ds	1
  2303  0006'                    calculate_checksum@result:
  2304  0006'                    i1__Umul8_16@word_mpld:	
  2305                           ; 2 bytes @ 0x6
  2306                           
  2307                           
  2308                           ; 2 bytes @ 0x6
  2309  0006'                    	ds	2
  2310  0008'                    ??i1___flge:
  2311  0008'                    i1__Umul8_16@multiplier:	
  2312                           ; 1 bytes @ 0x8
  2313                           
  2314  0008'                    i1___xxtofl@sign:	
  2315                           ; 1 bytes @ 0x8
  2316                           
  2317                           
  2318                           ; 1 bytes @ 0x8
  2319  0008'                    	ds	1
  2320  0009'                    i1___xxtofl@exp:
  2321  0009'                    read_ADC@ad_res:	
  2322                           ; 1 bytes @ 0x9
  2323                           
  2324                           
  2325                           ; 2 bytes @ 0x9
  2326  0009'                    	ds	1
  2327  000A'                    i1___xxtofl@arg:
  2328                           
  2329                           ; 4 bytes @ 0xA
  2330  000A'                    	ds	4
  2331  000E'                    ??_pid:
  2332  000E'                    ??_control_loop:	
  2333                           ; 1 bytes @ 0xE
  2334                           
  2335  000E'                    ??___flsub:	
  2336                           ; 1 bytes @ 0xE
  2337                           
  2338  000E'                    ??i1_set_DC:	
  2339                           ; 1 bytes @ 0xE
  2340                           
  2341                           
  2342                           	psect	cstackBANK0
  2343  0000'                    __pcstackBANK0:	
  2344                           ; 1 bytes @ 0xE
  2345                           
  2346  0000'                    ?i1___fladd:
  2347  0000'                    i1___fladd@b:	
  2348                           ; 4 bytes @ 0x0
  2349                           
  2350                           
  2351                           ; 4 bytes @ 0x0
  2352  0000'                    	ds	4
  2353  0004'                    i1___fladd@a:
  2354                           
  2355                           ; 4 bytes @ 0x4
  2356  0004'                    	ds	4
  2357  0008'                    ??i1___fladd:
  2358                           
  2359                           ; 1 bytes @ 0x8
  2360  0008'                    	ds	8
  2361  0010'                    i1___fladd@signs:
  2362                           
  2363                           ; 1 bytes @ 0x10
  2364  0010'                    	ds	1
  2365  0011'                    i1___fladd@aexp:
  2366                           
  2367                           ; 1 bytes @ 0x11
  2368  0011'                    	ds	1
  2369  0012'                    i1___fladd@bexp:
  2370                           
  2371                           ; 1 bytes @ 0x12
  2372  0012'                    	ds	1
  2373  0013'                    i1___fladd@grs:
  2374                           
  2375                           ; 1 bytes @ 0x13
  2376  0013'                    	ds	1
  2377  0014'                    ?___flsub:
  2378  0014'                    ___flsub@a:	
  2379                           ; 4 bytes @ 0x14
  2380                           
  2381                           
  2382                           ; 4 bytes @ 0x14
  2383  0014'                    	ds	4
  2384  0018'                    ___flsub@b:
  2385                           
  2386                           ; 4 bytes @ 0x18
  2387  0018'                    	ds	4
  2388  001C'                    ?i1___flmul:
  2389  001C'                    i1___flmul@b:	
  2390                           ; 4 bytes @ 0x1C
  2391                           
  2392                           
  2393                           ; 4 bytes @ 0x1C
  2394  001C'                    	ds	4
  2395  0020'                    i1___flmul@a:
  2396                           
  2397                           ; 4 bytes @ 0x20
  2398  0020'                    	ds	4
  2399  0024'                    ??i1___flmul:
  2400                           
  2401                           ; 1 bytes @ 0x24
  2402  0024'                    	ds	5
  2403  0029'                    i1___flmul@sign:
  2404                           
  2405                           ; 1 bytes @ 0x29
  2406  0029'                    	ds	1
  2407  002A'                    i1___flmul@grs:
  2408                           
  2409                           ; 4 bytes @ 0x2A
  2410  002A'                    	ds	4
  2411  002E'                    i1___flmul@aexp:
  2412                           
  2413                           ; 1 bytes @ 0x2E
  2414  002E'                    	ds	1
  2415  002F'                    i1___flmul@bexp:
  2416                           
  2417                           ; 1 bytes @ 0x2F
  2418  002F'                    	ds	1
  2419  0030'                    i1___flmul@prod:
  2420                           
  2421                           ; 4 bytes @ 0x30
  2422  0030'                    	ds	4
  2423  0034'                    i1___flmul@temp:
  2424                           
  2425                           ; 2 bytes @ 0x34
  2426  0034'                    	ds	2
  2427  0036'                    ?_pid:
  2428  0036'                    ?i1___fldiv:	
  2429                           ; 1 bytes @ 0x36
  2430                           
  2431  0036'                    pid@feedback:	
  2432                           ; 4 bytes @ 0x36
  2433                           
  2434  0036'                    i1___fldiv@a:	
  2435                           ; 4 bytes @ 0x36
  2436                           
  2437                           
  2438                           ; 4 bytes @ 0x36
  2439  0036'                    	ds	4
  2440  003A'                    pid@setpoint:
  2441  003A'                    i1___fldiv@b:	
  2442                           ; 4 bytes @ 0x3A
  2443                           
  2444                           
  2445                           ; 4 bytes @ 0x3A
  2446  003A'                    	ds	4
  2447  003E'                    ??i1___fldiv:
  2448  003E'                    _pid$1605:	
  2449                           ; 1 bytes @ 0x3E
  2450                           
  2451                           
  2452                           ; 4 bytes @ 0x3E
  2453  003E'                    	ds	4
  2454  0042'                    _pid$1746:
  2455                           
  2456                           ; 4 bytes @ 0x42
  2457  0042'                    	ds	1
  2458  0043'                    i1___fldiv@rem:
  2459                           
  2460                           ; 4 bytes @ 0x43
  2461  0043'                    	ds	3
  2462  0046'                    _pid$1747:
  2463                           
  2464                           ; 4 bytes @ 0x46
  2465  0046'                    	ds	1
  2466  0047'                    i1___fldiv@sign:
  2467                           
  2468                           ; 1 bytes @ 0x47
  2469  0047'                    	ds	1
  2470  0048'                    i1___fldiv@new_exp:
  2471                           
  2472                           ; 2 bytes @ 0x48
  2473  0048'                    	ds	2
  2474  004A'                    i1___fldiv@grs:
  2475                           
  2476                           ; 4 bytes @ 0x4A
  2477  004A'                    	ds	4
  2478  004E'                    i1___fldiv@bexp:
  2479                           
  2480                           ; 1 bytes @ 0x4E
  2481  004E'                    	ds	1
  2482  004F'                    i1___fldiv@aexp:
  2483                           
  2484                           ; 1 bytes @ 0x4F
  2485  004F'                    	ds	1
  2486                           
  2487                           	psect	maintext
  2488  0000'                    __pmaintext:	
  2489 ;;
  2490 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2491 ;;
  2492 ;; *************** function _main *****************
  2493 ;; Defined at:
  2494 ;;		line 24 in file "main.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : B1F/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2510 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  2511 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  2512 ;;Total ram usage:        1 bytes
  2513 ;; Hardware stack levels required when called: 13
  2514 ;; This function calls:
  2515 ;;		_cc_cv_mode
  2516 ;;		_initialize
  2517 ;;		_interrupt_enable
  2518 ;;		_log_control
  2519 ;;		_scaling
  2520 ;;		_state_machine
  2521 ;; This function is called by:
  2522 ;;		Startup code after reset
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526  0000'                    _main:	
  2527                           ;psect for function _main
  2528                           
  2529  0000'                    l7469:	
  2530                           ;incstack = 0
  2531                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2532                           
  2533                           
  2534                           ;main.c: 26:     initialize();
  2535  0000' 3180' 2000' 3180'  	fcall	_initialize
  2536  0003'                    l7471:
  2537                           
  2538                           ;main.c: 27:     _delay((unsigned long)((10)*(32000000/4000.0)));
  2539  0003' 3068               	movlw	104
  2540  0004' 0023               	movlb	3	; select bank3
  2541  0005' 0080'              	movwf	??_main^(0+384)
  2542  0006' 30E4               	movlw	228
  2543  0007'                    u7427:
  2544  0007' 0B89               	decfsz	9,f
  2545  0008' 2800'              	goto	u7427
  2546  0009' 0B80'              	decfsz	??_main^(0+384),f
  2547  000A' 2800'              	goto	u7427
  2548  000B' 0000               	nop
  2549  000C'                    l7473:
  2550                           
  2551                           ;main.c: 28:     interrupt_enable();
  2552  000C' 3180' 2000' 3180'  	fcall	_interrupt_enable
  2553  000F'                    l7475:
  2554                           
  2555                           ;main.c: 30:     {;main.c: 31:         if (SECF)
  2556  000F' 0023               	movlb	3	; select bank3
  2557  0010' 0800'              	movf	_SECF^(0+384),w
  2558  0011' 1903               	btfsc	3,2
  2559  0012' 2800'              	goto	u7351
  2560  0013' 2800'              	goto	u7350
  2561  0014'                    u7351:
  2562  0014' 2800'              	goto	l7475
  2563  0015'                    u7350:
  2564  0015'                    l7477:
  2565                           
  2566                           ;main.c: 32:         {;main.c: 33:             scaling();
  2567  0015' 3180' 2000' 3180'  	fcall	_scaling
  2568  0018'                    l7479:
  2569                           
  2570                           ;main.c: 34:             state_machine();
  2571  0018' 3180' 2000' 3180'  	fcall	_state_machine
  2572  001B'                    l7481:
  2573                           
  2574                           ;main.c: 35:             log_control();
  2575  001B' 3180' 2000' 3180'  	fcall	_log_control
  2576  001E'                    l7483:
  2577                           
  2578                           ;main.c: 36:             if (basic_configuration.version == 1){
  2579  001E' 0024               	movlb	4	; select bank4
  2580  001F' 0300'              	decf	_basic_configuration^(0+512),w
  2581  0020' 1D03               	btfss	3,2
  2582  0021' 2800'              	goto	u7361
  2583  0022' 2800'              	goto	u7360
  2584  0023'                    u7361:
  2585  0023' 2800'              	goto	l7487
  2586  0024'                    u7360:
  2587  0024'                    l7485:
  2588                           
  2589                           ;main.c: 37:                 cc_cv_mode(vavg, basic_configuration.const_voltage, cmode);
  2590  0024' 0023               	movlb	3	; select bank3
  2591  0025' 0800'              	movf	(_vavg+1)^(0+384),w
  2592  0026' 0080'              	movwf	(cc_cv_mode@current_voltage+1)^(0+384)
  2593  0027' 0800'              	movf	_vavg^(0+384),w
  2594  0028' 0080'              	movwf	cc_cv_mode@current_voltage^(0+384)
  2595  0029' 0024               	movlb	4	; select bank4
  2596  002A' 0801'              	movf	((_basic_configuration+1)^(0+512)+1),w
  2597  002B' 0023               	movlb	3	; select bank3
  2598  002C' 0080'              	movwf	(cc_cv_mode@reference_voltage+1)^(0+384)
  2599  002D' 0024               	movlb	4	; select bank4
  2600  002E' 0801'              	movf	(_basic_configuration^(0+512)+1),w
  2601  002F' 0023               	movlb	3	; select bank3
  2602  0030' 0080'              	movwf	cc_cv_mode@reference_voltage^(0+384)
  2603  0031' 0021               	movlb	1	; select bank1
  2604  0032' 0800'              	movf	_cmode^(0+128),w
  2605  0033' 0023               	movlb	3	; select bank3
  2606  0034' 0080'              	movwf	cc_cv_mode@CC_mode_status^(0+384)
  2607  0035' 3180' 2000' 3180'  	fcall	_cc_cv_mode
  2608  0038'                    l7487:
  2609                           
  2610                           ;main.c: 39:             SECF = 0;
  2611  0038' 0023               	movlb	3	; select bank3
  2612  0039' 0180'              	clrf	_SECF^(0+384)
  2613  003A' 2800'              	goto	l7475
  2614  003B' 3180' 2800'        	ljmp	start
  2615  003D'                    __end_of_main:
  2616                           
  2617                           	psect	text1
  2618  0000'                    __ptext1:	
  2619 ;; *************** function _state_machine *****************
  2620 ;; Defined at:
  2621 ;;		line 18 in file "state_machine_b.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2637 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  2638 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  2639 ;;Total ram usage:        2 bytes
  2640 ;; Hardware stack levels used: 1
  2641 ;; Hardware stack levels required when called: 12
  2642 ;; This function calls:
  2643 ;;		_fCHARGE
  2644 ;;		_fDC_res
  2645 ;;		_fDISCHARGE
  2646 ;;		_fIDLE
  2647 ;;		_fWAIT
  2648 ;; This function is called by:
  2649 ;;		_main
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653  0000'                    _state_machine:	
  2654                           ;psect for function _state_machine
  2655                           
  2656  0000'                    l6925:	
  2657                           ;incstack = 0
  2658                           ; Regs used in _state_machine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2659                           
  2660                           
  2661                           ;state_machine_b.c: 20:     switch(state){
  2662  0000' 2800'              	goto	l6943
  2663  0001'                    l6927:
  2664                           
  2665                           ;state_machine_b.c: 23:                 fIDLE();
  2666  0001' 3180' 2000' 3180'  	fcall	_fIDLE
  2667                           
  2668                           ;state_machine_b.c: 24:                 break;
  2669  0004' 2800'              	goto	l818
  2670  0005'                    l6929:
  2671                           
  2672                           ;state_machine_b.c: 28:                 fDISCHARGE();
  2673  0005' 3180' 2000' 3180'  	fcall	_fDISCHARGE
  2674                           
  2675                           ;state_machine_b.c: 29:                 break;
  2676  0008' 2800'              	goto	l818
  2677  0009'                    l6933:
  2678                           
  2679                           ;state_machine_b.c: 36:                 fCHARGE();
  2680  0009' 3180' 2000' 3180'  	fcall	_fCHARGE
  2681                           
  2682                           ;state_machine_b.c: 37:                 break;
  2683  000C' 2800'              	goto	l818
  2684  000D'                    l6937:
  2685                           
  2686                           ;state_machine_b.c: 44:                 fDC_res();
  2687  000D' 3180' 2000' 3180'  	fcall	_fDC_res
  2688                           
  2689                           ;state_machine_b.c: 45:                 break;
  2690  0010' 2800'              	goto	l818
  2691  0011'                    l6939:
  2692                           
  2693                           ;state_machine_b.c: 49:                 fWAIT();
  2694  0011' 3180' 2000' 3180'  	fcall	_fWAIT
  2695                           
  2696                           ;state_machine_b.c: 50:                 break;
  2697  0014' 2800'              	goto	l818
  2698  0015'                    l6943:
  2699  0015' 0023               	movlb	3	; select bank3
  2700  0016' 0800'              	movf	_state^(0+384),w
  2701  0017' 0080'              	movwf	??_state_machine^(0+384)
  2702  0018' 0181'              	clrf	(??_state_machine^(0+384)+1)
  2703                           
  2704                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2705                           ; Switch size 1, requested type "simple"
  2706                           ; Number of cases is 1, Range of values is 0 to 0
  2707                           ; switch strategies available:
  2708                           ; Name         Instructions Cycles
  2709                           ; simple_byte            4     3 (average)
  2710                           ; direct_byte            8     6 (fixed)
  2711                           ; jumptable            260     6 (fixed)
  2712                           ;	Chosen strategy is simple_byte
  2713  0019' 0800'              	movf	(??_state_machine+1)^(0+384),w
  2714  001A' 3A00               	xorlw	0	; case 0
  2715  001B' 1903               	skipnz
  2716  001C' 2800'              	goto	l7757
  2717  001D' 2800'              	goto	l818
  2718  001E'                    l7757:
  2719                           
  2720                           ; Switch size 1, requested type "simple"
  2721                           ; Number of cases is 7, Range of values is 1 to 13
  2722                           ; switch strategies available:
  2723                           ; Name         Instructions Cycles
  2724                           ; simple_byte           22    12 (average)
  2725                           ; direct_byte           35     9 (fixed)
  2726                           ; jumptable            263     9 (fixed)
  2727                           ;	Chosen strategy is simple_byte
  2728  001E' 0800'              	movf	??_state_machine^(0+384),w
  2729  001F' 3A01               	xorlw	1	; case 1
  2730  0020' 1903               	skipnz
  2731  0021' 2800'              	goto	l6927
  2732  0022' 3A02               	xorlw	2	; case 3
  2733  0023' 1903               	skipnz
  2734  0024' 2800'              	goto	l6933
  2735  0025' 3A06               	xorlw	6	; case 5
  2736  0026' 1903               	skipnz
  2737  0027' 2800'              	goto	l6933
  2738  0028' 3A02               	xorlw	2	; case 7
  2739  0029' 1903               	skipnz
  2740  002A' 2800'              	goto	l6929
  2741  002B' 3A0E               	xorlw	14	; case 9
  2742  002C' 1903               	skipnz
  2743  002D' 2800'              	goto	l6929
  2744  002E' 3A02               	xorlw	2	; case 11
  2745  002F' 1903               	skipnz
  2746  0030' 2800'              	goto	l6937
  2747  0031' 3A06               	xorlw	6	; case 13
  2748  0032' 1903               	skipnz
  2749  0033' 2800'              	goto	l6939
  2750  0034' 2800'              	goto	l818
  2751  0035'                    l818:
  2752  0035' 0008               	return
  2753  0036'                    __end_of_state_machine:
  2754                           
  2755                           	psect	text2
  2756  0000'                    __ptext2:	
  2757 ;; *************** function _fWAIT *****************
  2758 ;; Defined at:
  2759 ;;		line 162 in file "state_machine_b.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;		None
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;		None
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      void 
  2766 ;; Registers used:
  2767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2777 ;;Total ram usage:        0 bytes
  2778 ;; Hardware stack levels used: 1
  2779 ;; Hardware stack levels required when called: 11
  2780 ;; This function calls:
  2781 ;;		_Cell_OFF
  2782 ;;		_fNEXTSTATE
  2783 ;;		_set_DC
  2784 ;; This function is called by:
  2785 ;;		_state_machine
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789  0000'                    _fWAIT:	
  2790                           ;psect for function _fWAIT
  2791                           
  2792  0000'                    l6223:	
  2793                           ;incstack = 0
  2794                           ; Regs used in _fWAIT: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2795                           
  2796                           
  2797                           ;state_machine_b.c: 164:     { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50.0; set_DC(
      +                          ); Cell_OFF();};
  2798  0000' 0020               	movlb	0	; select bank0
  2799  0001' 118E               	bcf	14,3	;volatile
  2800  0002' 120E               	bcf	14,4	;volatile
  2801  0003'                    l6225:
  2802  0003' 0021               	movlb	1	; select bank1
  2803  0004' 0180'              	clrf	_conv^(0+128)
  2804  0005'                    l6227:
  2805  0005' 0020               	movlb	0	; select bank0
  2806  0006' 128E               	bcf	14,5	;volatile
  2807  0007'                    l6229:
  2808  0007' 3042               	movlw	66
  2809  0008' 0023               	movlb	3	; select bank3
  2810  0009' 0080'              	movwf	(_pidt+3)^(0+384)
  2811  000A' 3048               	movlw	72
  2812  000B' 0080'              	movwf	(_pidt+2)^(0+384)
  2813  000C' 3000               	movlw	0
  2814  000D' 0080'              	movwf	(_pidt+1)^(0+384)
  2815  000E' 3000               	movlw	0
  2816  000F' 0080'              	movwf	_pidt^(0+384)
  2817  0010'                    l6231:
  2818  0010' 3180' 2000' 3180'  	fcall	_set_DC
  2819  0013'                    l6233:
  2820  0013' 3180' 2000' 3180'  	fcall	_Cell_OFF
  2821  0016'                    l6235:
  2822                           
  2823                           ;state_machine_b.c: 165:     second = wait_count;
  2824  0016' 0023               	movlb	3	; select bank3
  2825  0017' 0800'              	movf	(_wait_count+1)^(0+384),w
  2826  0018' 0080'              	movwf	(_second+1)^(0+384)
  2827  0019' 0800'              	movf	_wait_count^(0+384),w
  2828  001A' 0080'              	movwf	_second^(0+384)
  2829  001B'                    l6237:
  2830                           
  2831                           ;state_machine_b.c: 166:     if (wait_count) wait_count--;
  2832  001B' 0800'              	movf	_wait_count^(0+384),w
  2833  001C' 0400'              	iorwf	(_wait_count+1)^(0+384),w
  2834  001D' 1903               	btfsc	3,2
  2835  001E' 2800'              	goto	u6841
  2836  001F' 2800'              	goto	u6840
  2837  0020'                    u6841:
  2838  0020' 2800'              	goto	l6241
  2839  0021'                    u6840:
  2840  0021'                    l6239:
  2841  0021' 3001               	movlw	1
  2842  0022' 0280'              	subwf	_wait_count^(0+384),f
  2843  0023' 3000               	movlw	0
  2844  0024' 3B80'              	subwfb	(_wait_count+1)^(0+384),f
  2845  0025'                    l6241:
  2846                           
  2847                           ;state_machine_b.c: 167:     if(!wait_count) fNEXTSTATE();
  2848  0025' 0800'              	movf	_wait_count^(0+384),w
  2849  0026' 0400'              	iorwf	(_wait_count+1)^(0+384),w
  2850  0027' 1D03               	btfss	3,2
  2851  0028' 2800'              	goto	u6851
  2852  0029' 2800'              	goto	u6850
  2853  002A'                    u6851:
  2854  002A' 2800'              	goto	l868
  2855  002B'                    u6850:
  2856  002B'                    l6243:
  2857  002B' 3180' 2000' 3180'  	fcall	_fNEXTSTATE
  2858  002E'                    l868:
  2859  002E' 0008               	return
  2860  002F'                    __end_of_fWAIT:
  2861                           
  2862                           	psect	text3
  2863  0000'                    __ptext3:	
  2864 ;; *************** function _fNEXTSTATE *****************
  2865 ;; Defined at:
  2866 ;;		line 170 in file "state_machine_b.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;		None
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;		None
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2884 ;;Total ram usage:        0 bytes
  2885 ;; Hardware stack levels used: 1
  2886 ;; Hardware stack levels required when called: 10
  2887 ;; This function calls:
  2888 ;;		_converter_settings
  2889 ;;		_fNEXTCELL
  2890 ;; This function is called by:
  2891 ;;		_fWAIT
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895  0000'                    _fNEXTSTATE:	
  2896                           ;psect for function _fNEXTSTATE
  2897                           
  2898  0000'                    l5479:	
  2899                           ;incstack = 0
  2900                           ; Regs used in _fNEXTSTATE: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2901                           
  2902                           
  2903                           ;state_machine_b.c: 171:     counter_state = counter_state + 1;
  2904  0000' 0021               	movlb	1	; select bank1
  2905  0001' 0800'              	movf	_counter_state^(0+128),w
  2906  0002' 3E01               	addlw	1
  2907  0003' 0080'              	movwf	_counter_state^(0+128)
  2908  0004'                    l5481:
  2909                           
  2910                           ;state_machine_b.c: 172:     if ((counter_state <= test_configuration.number_of_states) 
      +                          && (test_configuration.order_of_states[counter_state] != 0x00)){
  2911  0004' 0800'              	movf	_counter_state^(0+128),w
  2912  0005' 0024               	movlb	4	; select bank4
  2913  0006' 0201'              	subwf	(_test_configuration^(0+512)+1),w
  2914  0007' 1C03               	skipc
  2915  0008' 2800'              	goto	u5581
  2916  0009' 2800'              	goto	u5580
  2917  000A'                    u5581:
  2918  000A' 2800'              	goto	l5489
  2919  000B'                    u5580:
  2920  000B'                    l5483:
  2921  000B' 0021               	movlb	1	; select bank1
  2922  000C' 0800'              	movf	_counter_state^(0+128),w
  2923  000D' 3E00'              	addlw	(low ((_test_configuration| (0+512)+7)))& (0+255)
  2924  000E' 0086               	movwf	6
  2925  000F' 3002               	movlw	2	; select bank4/5
  2926  0010' 0087               	movwf	7
  2927  0011' 0801               	movf	1,w
  2928  0012' 1903               	btfsc	3,2
  2929  0013' 2800'              	goto	u5591
  2930  0014' 2800'              	goto	u5590
  2931  0015'                    u5591:
  2932  0015' 2800'              	goto	l5489
  2933  0016'                    u5590:
  2934  0016'                    l5485:
  2935                           
  2936                           ;state_machine_b.c: 173:         state = test_configuration.order_of_states[counter_stat
      +                          e];
  2937  0016' 0800'              	movf	_counter_state^(0+128),w
  2938  0017' 3E00'              	addlw	(low ((_test_configuration| (0+512)+7)))& (0+255)
  2939  0018' 0086               	movwf	6
  2940  0019' 3002               	movlw	2	; select bank4/5
  2941  001A' 0087               	movwf	7
  2942  001B' 0801               	movf	1,w
  2943  001C' 0023               	movlb	3	; select bank3
  2944  001D' 0080'              	movwf	_state^(0+384)
  2945  001E'                    l5487:
  2946                           
  2947                           ;state_machine_b.c: 174:         converter_settings();
  2948  001E' 3180' 2000' 3180'  	fcall	_converter_settings
  2949                           
  2950                           ;state_machine_b.c: 175:     }
  2951  0021' 2800'              	goto	l873
  2952  0022'                    l5489:
  2953                           
  2954                           ;state_machine_b.c: 177:         fNEXTCELL();
  2955  0022' 3180' 2000' 3180'  	fcall	_fNEXTCELL
  2956  0025'                    l873:
  2957  0025' 0008               	return
  2958  0026'                    __end_of_fNEXTSTATE:
  2959                           
  2960                           	psect	text4
  2961  0000'                    __ptext4:	
  2962 ;; *************** function _fNEXTCELL *****************
  2963 ;; Defined at:
  2964 ;;		line 181 in file "state_machine_b.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;		None
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1    wreg      void 
  2971 ;; Registers used:
  2972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2982 ;;Total ram usage:        0 bytes
  2983 ;; Hardware stack levels used: 1
  2984 ;; Hardware stack levels required when called: 9
  2985 ;; This function calls:
  2986 ;;		_converter_settings
  2987 ;;		_fNEXTREPETITION
  2988 ;; This function is called by:
  2989 ;;		_fNEXTSTATE
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993  0000'                    _fNEXTCELL:	
  2994                           ;psect for function _fNEXTCELL
  2995                           
  2996  0000'                    l5179:	
  2997                           ;incstack = 0
  2998                           ; Regs used in _fNEXTCELL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2999                           
  3000                           
  3001                           ;state_machine_b.c: 182:     counter_state = 0;
  3002  0000' 0021               	movlb	1	; select bank1
  3003  0001' 0180'              	clrf	_counter_state^(0+128)
  3004  0002'                    l5181:
  3005                           
  3006                           ;state_machine_b.c: 183:     if (cell_count < test_configuration.number_of_cells){
  3007  0002' 0024               	movlb	4	; select bank4
  3008  0003' 0800'              	movf	_test_configuration^(0+512),w
  3009  0004' 0023               	movlb	3	; select bank3
  3010  0005' 0200'              	subwf	_cell_count^(0+384),w
  3011  0006' 1803               	skipnc
  3012  0007' 2800'              	goto	u4951
  3013  0008' 2800'              	goto	u4950
  3014  0009'                    u4951:
  3015  0009' 2800'              	goto	l5189
  3016  000A'                    u4950:
  3017  000A'                    l5183:
  3018                           
  3019                           ;state_machine_b.c: 184:         state = test_configuration.order_of_states[counter_stat
      +                          e];
  3020  000A' 0021               	movlb	1	; select bank1
  3021  000B' 0800'              	movf	_counter_state^(0+128),w
  3022  000C' 3E00'              	addlw	(low ((_test_configuration| (0+512)+7)))& (0+255)
  3023  000D' 0086               	movwf	6
  3024  000E' 3002               	movlw	2	; select bank4/5
  3025  000F' 0087               	movwf	7
  3026  0010' 0801               	movf	1,w
  3027  0011' 0023               	movlb	3	; select bank3
  3028  0012' 0080'              	movwf	_state^(0+384)
  3029  0013'                    l5185:
  3030                           
  3031                           ;state_machine_b.c: 185:         cell_count = cell_count + 1;
  3032  0013' 0800'              	movf	_cell_count^(0+384),w
  3033  0014' 3E01               	addlw	1
  3034  0015' 0080'              	movwf	_cell_count^(0+384)
  3035  0016'                    l5187:
  3036                           
  3037                           ;state_machine_b.c: 186:         converter_settings();
  3038  0016' 3180' 2000' 3180'  	fcall	_converter_settings
  3039                           
  3040                           ;state_machine_b.c: 187:     }
  3041  0019' 2800'              	goto	l878
  3042  001A'                    l5189:
  3043                           
  3044                           ;state_machine_b.c: 189:         fNEXTREPETITION();
  3045  001A' 3180' 2000' 3180'  	fcall	_fNEXTREPETITION
  3046  001D'                    l878:
  3047  001D' 0008               	return
  3048  001E'                    __end_of_fNEXTCELL:
  3049                           
  3050                           	psect	text5
  3051  0000'                    __ptext5:	
  3052 ;; *************** function _fNEXTREPETITION *****************
  3053 ;; Defined at:
  3054 ;;		line 193 in file "state_machine_b.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;		None
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      void 
  3061 ;; Registers used:
  3062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3072 ;;Total ram usage:        0 bytes
  3073 ;; Hardware stack levels used: 1
  3074 ;; Hardware stack levels required when called: 8
  3075 ;; This function calls:
  3076 ;;		_converter_settings
  3077 ;; This function is called by:
  3078 ;;		_fNEXTCELL
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082  0000'                    _fNEXTREPETITION:	
  3083                           ;psect for function _fNEXTREPETITION
  3084                           
  3085  0000'                    l5167:	
  3086                           ;incstack = 0
  3087                           ; Regs used in _fNEXTREPETITION: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3088                           
  3089                           
  3090                           ;state_machine_b.c: 194:     if (repetition_counter < test_configuration.number_of_repet
      +                          itions){
  3091  0000' 0024               	movlb	4	; select bank4
  3092  0001' 0802'              	movf	(_test_configuration^(0+512)+2),w
  3093  0002' 0023               	movlb	3	; select bank3
  3094  0003' 0200'              	subwf	_repetition_counter^(0+384),w
  3095  0004' 1803               	skipnc
  3096  0005' 2800'              	goto	u4941
  3097  0006' 2800'              	goto	u4940
  3098  0007'                    u4941:
  3099  0007' 2800'              	goto	l881
  3100  0008'                    u4940:
  3101  0008'                    l5169:
  3102                           
  3103                           ;state_machine_b.c: 195:         counter_state = 0;
  3104  0008' 0021               	movlb	1	; select bank1
  3105  0009' 0180'              	clrf	_counter_state^(0+128)
  3106  000A'                    l5171:
  3107                           
  3108                           ;state_machine_b.c: 196:         state = test_configuration.order_of_states[counter_stat
      +                          e];
  3109  000A' 0800'              	movf	_counter_state^(0+128),w
  3110  000B' 3E00'              	addlw	(low ((_test_configuration| (0+512)+7)))& (0+255)
  3111  000C' 0086               	movwf	6
  3112  000D' 3002               	movlw	2	; select bank4/5
  3113  000E' 0087               	movwf	7
  3114  000F' 0801               	movf	1,w
  3115  0010' 0023               	movlb	3	; select bank3
  3116  0011' 0080'              	movwf	_state^(0+384)
  3117  0012'                    l5173:
  3118                           
  3119                           ;state_machine_b.c: 197:         cell_count = 0x01;
  3120  0012' 0180'              	clrf	_cell_count^(0+384)
  3121  0013' 0A80'              	incf	_cell_count^(0+384),f
  3122  0014'                    l5175:
  3123                           
  3124                           ;state_machine_b.c: 198:         repetition_counter = repetition_counter + 1;
  3125  0014' 0800'              	movf	_repetition_counter^(0+384),w
  3126  0015' 3E01               	addlw	1
  3127  0016' 0080'              	movwf	_repetition_counter^(0+384)
  3128  0017'                    l5177:
  3129                           
  3130                           ;state_machine_b.c: 199:         converter_settings();
  3131  0017' 3180' 2000' 3180'  	fcall	_converter_settings
  3132                           
  3133                           ;state_machine_b.c: 200:         }
  3134  001A' 2800'              	goto	l883
  3135  001B'                    l881:	
  3136                           ;state_machine_b.c: 201:     else{
  3137                           
  3138                           
  3139                           ;state_machine_b.c: 202:         state = IDLE;
  3140  001B' 0180'              	clrf	_state^(0+384)
  3141  001C' 0A80'              	incf	_state^(0+384),f
  3142  001D'                    l883:
  3143  001D' 0008               	return
  3144  001E'                    __end_of_fNEXTREPETITION:
  3145                           
  3146                           	psect	text6
  3147  0000'                    __ptext6:	
  3148 ;; *************** function _converter_settings *****************
  3149 ;; Defined at:
  3150 ;;		line 208 in file "state_machine_b.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;		None
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3165 ;;      Locals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  3166 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  3167 ;;      Totals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
  3168 ;;Total ram usage:        8 bytes
  3169 ;; Hardware stack levels used: 1
  3170 ;; Hardware stack levels required when called: 7
  3171 ;; This function calls:
  3172 ;;		_Cell_ON
  3173 ;;		___fladd
  3174 ;;		___fldiv
  3175 ;;		___flmul
  3176 ;;		___fltol
  3177 ;;		___xxtofl
  3178 ;;		_set_DC
  3179 ;; This function is called by:
  3180 ;;		_fNEXTSTATE
  3181 ;;		_fNEXTCELL
  3182 ;;		_fNEXTREPETITION
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186  0000'                    _converter_settings:	
  3187                           ;psect for function _converter_settings
  3188                           
  3189  0000'                    l5007:	
  3190                           ;incstack = 0
  3191                           ; Regs used in _converter_settings: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3192                           
  3193                           
  3194                           ;state_machine_b.c: 211:     cmode = 1;
  3195  0000' 0021               	movlb	1	; select bank1
  3196  0001' 0180'              	clrf	_cmode^(0+128)
  3197  0002' 0A80'              	incf	_cmode^(0+128),f
  3198  0003'                    l5009:
  3199                           
  3200                           ;state_machine_b.c: 212:     pidi = 0;
  3201  0003' 3000               	movlw	0
  3202  0004' 0024               	movlb	4	; select bank4
  3203  0005' 0080'              	movwf	(_pidi+3)^(0+512)
  3204  0006' 3000               	movlw	0
  3205  0007' 0080'              	movwf	(_pidi+2)^(0+512)
  3206  0008' 3000               	movlw	0
  3207  0009' 0080'              	movwf	(_pidi+1)^(0+512)
  3208  000A' 3000               	movlw	0
  3209  000B' 0080'              	movwf	_pidi^(0+512)
  3210                           
  3211                           ;state_machine_b.c: 213:     qavg = 0;
  3212  000C' 3000               	movlw	0
  3213  000D' 0023               	movlb	3	; select bank3
  3214  000E' 0080'              	movwf	(_qavg+3)^(0+384)
  3215  000F' 3000               	movlw	0
  3216  0010' 0080'              	movwf	(_qavg+2)^(0+384)
  3217  0011' 3000               	movlw	0
  3218  0012' 0080'              	movwf	(_qavg+1)^(0+384)
  3219  0013' 3000               	movlw	0
  3220  0014' 0080'              	movwf	_qavg^(0+384)
  3221  0015'                    l5011:
  3222                           
  3223                           ;state_machine_b.c: 214:     vmax = 0;
  3224  0015' 0180'              	clrf	_vmax^(0+384)
  3225  0016' 0180'              	clrf	(_vmax+1)^(0+384)
  3226  0017'                    l5013:
  3227                           
  3228                           ;state_machine_b.c: 215:     pidt = 50.0;
  3229  0017' 3042               	movlw	66
  3230  0018' 0080'              	movwf	(_pidt+3)^(0+384)
  3231  0019' 3048               	movlw	72
  3232  001A' 0080'              	movwf	(_pidt+2)^(0+384)
  3233  001B' 3000               	movlw	0
  3234  001C' 0080'              	movwf	(_pidt+1)^(0+384)
  3235  001D' 3000               	movlw	0
  3236  001E' 0080'              	movwf	_pidt^(0+384)
  3237  001F'                    l5015:
  3238                           
  3239                           ;state_machine_b.c: 216:     set_DC();
  3240  001F' 3180' 2000' 3180'  	fcall	_set_DC
  3241  0022'                    l5017:
  3242                           
  3243                           ;state_machine_b.c: 217:     Cell_ON();
  3244  0022' 3180' 2000' 3180'  	fcall	_Cell_ON
  3245                           
  3246                           ;state_machine_b.c: 218:     switch(state)
  3247  0025' 2800'              	goto	l5155
  3248  0026'                    l5019:
  3249                           
  3250                           ;state_machine_b.c: 221:             iref = i_char;
  3251  0026' 0800'              	movf	(_i_char+1)^(0+384),w
  3252  0027' 0021               	movlb	1	; select bank1
  3253  0028' 0080'              	movwf	(_iref+1)^(0+128)
  3254  0029' 0023               	movlb	3	; select bank3
  3255  002A' 0800'              	movf	_i_char^(0+384),w
  3256  002B' 0021               	movlb	1	; select bank1
  3257  002C' 0080'              	movwf	_iref^(0+128)
  3258  002D'                    l5021:
  3259                           
  3260                           ;state_machine_b.c: 222:             if(basic_configuration.version == 0x02) timeout = (
      +                          uint16_t)(((float)capacity / (float)basic_configuration.const_current_char) * 3600 * 1.1
      +                          );
  3261  002D' 3002               	movlw	2
  3262  002E' 0024               	movlb	4	; select bank4
  3263  002F' 0600'              	xorwf	_basic_configuration^(0+512),w
  3264  0030' 1D03               	btfss	3,2
  3265  0031' 2800'              	goto	u4911
  3266  0032' 2800'              	goto	u4910
  3267  0033'                    u4911:
  3268  0033' 2800'              	goto	l5025
  3269  0034'                    u4910:
  3270  0034'                    l5023:
  3271  0034' 0023               	movlb	3	; select bank3
  3272  0035' 0800'              	movf	_capacity^(0+384),w
  3273  0036' 0022               	movlb	2	; select bank2
  3274  0037' 0080'              	movwf	___xxtofl@val^(0+256)
  3275  0038' 0023               	movlb	3	; select bank3
  3276  0039' 0800'              	movf	(_capacity+1)^(0+384),w
  3277  003A' 0022               	movlb	2	; select bank2
  3278  003B' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  3279  003C' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  3280  003D' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  3281  003E' 3000               	movlw	0
  3282  003F' 3180' 2000' 3180'  	fcall	___xxtofl
  3283  0042' 0022               	movlb	2	; select bank2
  3284  0043' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3285  0044' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  3286  0045' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3287  0046' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  3288  0047' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3289  0048' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  3290  0049' 0800'              	movf	?___xxtofl^(0+256),w
  3291  004A' 0080'              	movwf	___fldiv@b^(0+256)
  3292  004B' 0024               	movlb	4	; select bank4
  3293  004C' 0803'              	movf	(_basic_configuration^(0+512)+3),w
  3294  004D' 0022               	movlb	2	; select bank2
  3295  004E' 0080'              	movwf	___xxtofl@val^(0+256)
  3296  004F' 0024               	movlb	4	; select bank4
  3297  0050' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
  3298  0051' 0022               	movlb	2	; select bank2
  3299  0052' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  3300  0053' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  3301  0054' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  3302  0055' 3000               	movlw	0
  3303  0056' 3180' 2000' 3180'  	fcall	___xxtofl
  3304  0059' 0022               	movlb	2	; select bank2
  3305  005A' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3306  005B' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  3307  005C' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3308  005D' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  3309  005E' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3310  005F' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  3311  0060' 0800'              	movf	?___xxtofl^(0+256),w
  3312  0061' 0080'              	movwf	___fldiv@a^(0+256)
  3313  0062' 3180' 2000' 3180'  	fcall	___fldiv
  3314  0065' 0022               	movlb	2	; select bank2
  3315  0066' 0800'              	movf	(?___fldiv+3)^(0+256),w
  3316  0067' 0080'              	movwf	(___flmul@a+3)^(0+256)
  3317  0068' 0800'              	movf	(?___fldiv+2)^(0+256),w
  3318  0069' 0080'              	movwf	(___flmul@a+2)^(0+256)
  3319  006A' 0800'              	movf	(?___fldiv+1)^(0+256),w
  3320  006B' 0080'              	movwf	(___flmul@a+1)^(0+256)
  3321  006C' 0800'              	movf	?___fldiv^(0+256),w
  3322  006D' 0080'              	movwf	___flmul@a^(0+256)
  3323  006E' 3045               	movlw	69
  3324  006F' 0080'              	movwf	(___flmul@b+3)^(0+256)
  3325  0070' 3061               	movlw	97
  3326  0071' 0080'              	movwf	(___flmul@b+2)^(0+256)
  3327  0072' 3000               	movlw	0
  3328  0073' 0080'              	movwf	(___flmul@b+1)^(0+256)
  3329  0074' 3000               	movlw	0
  3330  0075' 0080'              	movwf	___flmul@b^(0+256)
  3331  0076' 3180' 2000' 3180'  	fcall	___flmul
  3332  0079' 0022               	movlb	2	; select bank2
  3333  007A' 0800'              	movf	(?___flmul+3)^(0+256),w
  3334  007B' 0023               	movlb	3	; select bank3
  3335  007C' 0080'              	movwf	(_converter_settings$1611+3)^(0+384)
  3336  007D' 0022               	movlb	2	; select bank2
  3337  007E' 0800'              	movf	(?___flmul+2)^(0+256),w
  3338  007F' 0023               	movlb	3	; select bank3
  3339  0080' 0080'              	movwf	(_converter_settings$1611+2)^(0+384)
  3340  0081' 0022               	movlb	2	; select bank2
  3341  0082' 0800'              	movf	(?___flmul+1)^(0+256),w
  3342  0083' 0023               	movlb	3	; select bank3
  3343  0084' 0080'              	movwf	(_converter_settings$1611+1)^(0+384)
  3344  0085' 0022               	movlb	2	; select bank2
  3345  0086' 0800'              	movf	?___flmul^(0+256),w
  3346  0087' 0023               	movlb	3	; select bank3
  3347  0088' 0080'              	movwf	_converter_settings$1611^(0+384)
  3348  0089' 0800'              	movf	(_converter_settings$1611+3)^(0+384),w
  3349  008A' 0022               	movlb	2	; select bank2
  3350  008B' 0080'              	movwf	(___flmul@a+3)^(0+256)
  3351  008C' 0023               	movlb	3	; select bank3
  3352  008D' 0800'              	movf	(_converter_settings$1611+2)^(0+384),w
  3353  008E' 0022               	movlb	2	; select bank2
  3354  008F' 0080'              	movwf	(___flmul@a+2)^(0+256)
  3355  0090' 0023               	movlb	3	; select bank3
  3356  0091' 0800'              	movf	(_converter_settings$1611+1)^(0+384),w
  3357  0092' 0022               	movlb	2	; select bank2
  3358  0093' 0080'              	movwf	(___flmul@a+1)^(0+256)
  3359  0094' 0023               	movlb	3	; select bank3
  3360  0095' 0800'              	movf	_converter_settings$1611^(0+384),w
  3361  0096' 0022               	movlb	2	; select bank2
  3362  0097' 0080'              	movwf	___flmul@a^(0+256)
  3363  0098' 303F               	movlw	63
  3364  0099' 0080'              	movwf	(___flmul@b+3)^(0+256)
  3365  009A' 308C               	movlw	140
  3366  009B' 0080'              	movwf	(___flmul@b+2)^(0+256)
  3367  009C' 30CC               	movlw	204
  3368  009D' 0080'              	movwf	(___flmul@b+1)^(0+256)
  3369  009E' 30CD               	movlw	205
  3370  009F' 0080'              	movwf	___flmul@b^(0+256)
  3371  00A0' 3180' 2000' 3180'  	fcall	___flmul
  3372  00A3' 0022               	movlb	2	; select bank2
  3373  00A4' 0800'              	movf	(?___flmul+3)^(0+256),w
  3374  00A5' 0023               	movlb	3	; select bank3
  3375  00A6' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  3376  00A7' 0022               	movlb	2	; select bank2
  3377  00A8' 0800'              	movf	(?___flmul+2)^(0+256),w
  3378  00A9' 0023               	movlb	3	; select bank3
  3379  00AA' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  3380  00AB' 0022               	movlb	2	; select bank2
  3381  00AC' 0800'              	movf	(?___flmul+1)^(0+256),w
  3382  00AD' 0023               	movlb	3	; select bank3
  3383  00AE' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  3384  00AF' 0022               	movlb	2	; select bank2
  3385  00B0' 0800'              	movf	?___flmul^(0+256),w
  3386  00B1' 0023               	movlb	3	; select bank3
  3387  00B2' 0080'              	movwf	___fltol@f1^(0+384)
  3388  00B3' 3180' 2000' 3180'  	fcall	___fltol
  3389  00B6' 0023               	movlb	3	; select bank3
  3390  00B7' 0800'              	movf	(?___fltol+1)^(0+384),w
  3391  00B8' 0080'              	movwf	(_timeout+1)^(0+384)
  3392  00B9' 0800'              	movf	?___fltol^(0+384),w
  3393  00BA' 0080'              	movwf	_timeout^(0+384)
  3394  00BB'                    l5025:
  3395                           
  3396                           ;state_machine_b.c: 223:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC4 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC4 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_char_kp; ki = CC_char_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
  3397  00BB' 0020               	movlb	0	; select bank0
  3398  00BC' 118E               	bcf	14,3	;volatile
  3399  00BD'                    l5027:
  3400  00BD' 120E               	bcf	14,4	;volatile
  3401  00BE'                    l5029:
  3402  00BE' 3005               	movlw	5
  3403  00BF' 0023               	movlb	3	; select bank3
  3404  00C0' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3405  00C1' 300F               	movlw	15
  3406  00C2' 0080'              	movwf	??_converter_settings^(0+384)
  3407  00C3' 30F1               	movlw	241
  3408  00C4'                    u7437:
  3409  00C4' 0B89               	decfsz	9,f
  3410  00C5' 2800'              	goto	u7437
  3411  00C6' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3412  00C7' 2800'              	goto	u7437
  3413  00C8' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3414  00C9' 2800'              	goto	u7437
  3415  00CA'                    l5031:
  3416  00CA' 0020               	movlb	0	; select bank0
  3417  00CB' 160E               	bsf	14,4	;volatile
  3418  00CC'                    l5033:
  3419  00CC' 3005               	movlw	5
  3420  00CD' 0023               	movlb	3	; select bank3
  3421  00CE' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3422  00CF' 300F               	movlw	15
  3423  00D0' 0080'              	movwf	??_converter_settings^(0+384)
  3424  00D1' 30F1               	movlw	241
  3425  00D2'                    u7447:
  3426  00D2' 0B89               	decfsz	9,f
  3427  00D3' 2800'              	goto	u7447
  3428  00D4' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3429  00D5' 2800'              	goto	u7447
  3430  00D6' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3431  00D7' 2800'              	goto	u7447
  3432  00D8'                    l5035:
  3433  00D8' 0020               	movlb	0	; select bank0
  3434  00D9' 120E               	bcf	14,4	;volatile
  3435  00DA'                    l5037:
  3436  00DA' 3005               	movlw	5
  3437  00DB' 0023               	movlb	3	; select bank3
  3438  00DC' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3439  00DD' 300F               	movlw	15
  3440  00DE' 0080'              	movwf	??_converter_settings^(0+384)
  3441  00DF' 30F1               	movlw	241
  3442  00E0'                    u7457:
  3443  00E0' 0B89               	decfsz	9,f
  3444  00E1' 2800'              	goto	u7457
  3445  00E2' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3446  00E3' 2800'              	goto	u7457
  3447  00E4' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3448  00E5' 2800'              	goto	u7457
  3449  00E6'                    l5039:
  3450  00E6' 0020               	movlb	0	; select bank0
  3451  00E7' 168E               	bsf	14,5	;volatile
  3452  00E8'                    l5041:
  3453  00E8' 3005               	movlw	5
  3454  00E9' 0023               	movlb	3	; select bank3
  3455  00EA' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3456  00EB' 300F               	movlw	15
  3457  00EC' 0080'              	movwf	??_converter_settings^(0+384)
  3458  00ED' 30F1               	movlw	241
  3459  00EE'                    u7467:
  3460  00EE' 0B89               	decfsz	9,f
  3461  00EF' 2800'              	goto	u7467
  3462  00F0' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3463  00F1' 2800'              	goto	u7467
  3464  00F2' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3465  00F3' 2800'              	goto	u7467
  3466  00F4'                    l5043:
  3467  00F4' 0023               	movlb	3	; select bank3
  3468  00F5' 0800'              	movf	(_CC_char_kp+3)^(0+384),w
  3469  00F6' 0024               	movlb	4	; select bank4
  3470  00F7' 0080'              	movwf	(_kp+3)^(0+512)
  3471  00F8' 0023               	movlb	3	; select bank3
  3472  00F9' 0800'              	movf	(_CC_char_kp+2)^(0+384),w
  3473  00FA' 0024               	movlb	4	; select bank4
  3474  00FB' 0080'              	movwf	(_kp+2)^(0+512)
  3475  00FC' 0023               	movlb	3	; select bank3
  3476  00FD' 0800'              	movf	(_CC_char_kp+1)^(0+384),w
  3477  00FE' 0024               	movlb	4	; select bank4
  3478  00FF' 0080'              	movwf	(_kp+1)^(0+512)
  3479  0100' 0023               	movlb	3	; select bank3
  3480  0101' 0800'              	movf	_CC_char_kp^(0+384),w
  3481  0102' 0024               	movlb	4	; select bank4
  3482  0103' 0080'              	movwf	_kp^(0+512)
  3483  0104'                    l5045:
  3484  0104' 0023               	movlb	3	; select bank3
  3485  0105' 0800'              	movf	(_CC_char_ki+3)^(0+384),w
  3486  0106' 0024               	movlb	4	; select bank4
  3487  0107' 0080'              	movwf	(_ki+3)^(0+512)
  3488  0108' 0023               	movlb	3	; select bank3
  3489  0109' 0800'              	movf	(_CC_char_ki+2)^(0+384),w
  3490  010A' 0024               	movlb	4	; select bank4
  3491  010B' 0080'              	movwf	(_ki+2)^(0+512)
  3492  010C' 0023               	movlb	3	; select bank3
  3493  010D' 0800'              	movf	(_CC_char_ki+1)^(0+384),w
  3494  010E' 0024               	movlb	4	; select bank4
  3495  010F' 0080'              	movwf	(_ki+1)^(0+512)
  3496  0110' 0023               	movlb	3	; select bank3
  3497  0111' 0800'              	movf	_CC_char_ki^(0+384),w
  3498  0112' 0024               	movlb	4	; select bank4
  3499  0113' 0080'              	movwf	_ki^(0+512)
  3500  0114' 0023               	movlb	3	; select bank3
  3501  0115' 0800'              	movf	_CC_char_disc_kd^(0+384),w
  3502  0116' 0080'              	movwf	??_converter_settings^(0+384)
  3503  0117' 0181'              	clrf	(??_converter_settings^(0+384)+1)
  3504  0118' 0182'              	clrf	(??_converter_settings^(0+384)+2)
  3505  0119' 0183'              	clrf	(??_converter_settings^(0+384)+3)
  3506  011A' 0800'              	movf	(??_converter_settings+3)^(0+384),w
  3507  011B' 0022               	movlb	2	; select bank2
  3508  011C' 0080'              	movwf	(___xxtofl@val+3)^(0+256)
  3509  011D' 0023               	movlb	3	; select bank3
  3510  011E' 0800'              	movf	(??_converter_settings+2)^(0+384),w
  3511  011F' 0022               	movlb	2	; select bank2
  3512  0120' 0080'              	movwf	(___xxtofl@val+2)^(0+256)
  3513  0121' 0023               	movlb	3	; select bank3
  3514  0122' 0800'              	movf	(??_converter_settings+1)^(0+384),w
  3515  0123' 0022               	movlb	2	; select bank2
  3516  0124' 0080'              	movwf	(___xxtofl@val+1)^(0+256)
  3517  0125' 0023               	movlb	3	; select bank3
  3518  0126' 0800'              	movf	??_converter_settings^(0+384),w
  3519  0127' 0022               	movlb	2	; select bank2
  3520  0128' 0080'              	movwf	___xxtofl@val^(0+256)
  3521  0129' 3000               	movlw	0
  3522  012A' 3180' 2000' 3180'  	fcall	___xxtofl
  3523  012D' 0022               	movlb	2	; select bank2
  3524  012E' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3525  012F' 0024               	movlb	4	; select bank4
  3526  0130' 0080'              	movwf	(_kd+3)^(0+512)
  3527  0131' 0022               	movlb	2	; select bank2
  3528  0132' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3529  0133' 0024               	movlb	4	; select bank4
  3530  0134' 0080'              	movwf	(_kd+2)^(0+512)
  3531  0135' 0022               	movlb	2	; select bank2
  3532  0136' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3533  0137' 0024               	movlb	4	; select bank4
  3534  0138' 0080'              	movwf	(_kd+1)^(0+512)
  3535  0139' 0022               	movlb	2	; select bank2
  3536  013A' 0800'              	movf	?___xxtofl^(0+256),w
  3537  013B' 0024               	movlb	4	; select bank4
  3538  013C' 0080'              	movwf	_kd^(0+512)
  3539  013D'                    l5047:
  3540  013D' 3000               	movlw	0
  3541  013E' 0080'              	movwf	(_pidi+3)^(0+512)
  3542  013F' 3000               	movlw	0
  3543  0140' 0080'              	movwf	(_pidi+2)^(0+512)
  3544  0141' 3000               	movlw	0
  3545  0142' 0080'              	movwf	(_pidi+1)^(0+512)
  3546  0143' 3000               	movlw	0
  3547  0144' 0080'              	movwf	_pidi^(0+512)
  3548                           
  3549                           ;state_machine_b.c: 224:             break;
  3550  0145' 2800'              	goto	l5157
  3551  0146'                    l5049:
  3552                           
  3553                           ;state_machine_b.c: 226:             iref = i_disc;
  3554  0146' 0800'              	movf	(_i_disc+1)^(0+384),w
  3555  0147' 0021               	movlb	1	; select bank1
  3556  0148' 0080'              	movwf	(_iref+1)^(0+128)
  3557  0149' 0023               	movlb	3	; select bank3
  3558  014A' 0800'              	movf	_i_disc^(0+384),w
  3559  014B' 0021               	movlb	1	; select bank1
  3560  014C' 0080'              	movwf	_iref^(0+128)
  3561  014D'                    l5051:
  3562                           
  3563                           ;state_machine_b.c: 227:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
  3564  014D' 0020               	movlb	0	; select bank0
  3565  014E' 118E               	bcf	14,3	;volatile
  3566  014F'                    l5053:
  3567  014F' 120E               	bcf	14,4	;volatile
  3568  0150' 3005               	movlw	5
  3569  0151' 0023               	movlb	3	; select bank3
  3570  0152' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3571  0153' 300F               	movlw	15
  3572  0154' 0080'              	movwf	??_converter_settings^(0+384)
  3573  0155' 30F1               	movlw	241
  3574  0156'                    u7477:
  3575  0156' 0B89               	decfsz	9,f
  3576  0157' 2800'              	goto	u7477
  3577  0158' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3578  0159' 2800'              	goto	u7477
  3579  015A' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3580  015B' 2800'              	goto	u7477
  3581  015C'                    l5055:
  3582  015C' 0020               	movlb	0	; select bank0
  3583  015D' 158E               	bsf	14,3	;volatile
  3584  015E' 3005               	movlw	5
  3585  015F' 0023               	movlb	3	; select bank3
  3586  0160' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3587  0161' 300F               	movlw	15
  3588  0162' 0080'              	movwf	??_converter_settings^(0+384)
  3589  0163' 30F1               	movlw	241
  3590  0164'                    u7487:
  3591  0164' 0B89               	decfsz	9,f
  3592  0165' 2800'              	goto	u7487
  3593  0166' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3594  0167' 2800'              	goto	u7487
  3595  0168' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3596  0169' 2800'              	goto	u7487
  3597  016A'                    l5057:
  3598  016A' 0020               	movlb	0	; select bank0
  3599  016B' 118E               	bcf	14,3	;volatile
  3600  016C' 3005               	movlw	5
  3601  016D' 0023               	movlb	3	; select bank3
  3602  016E' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3603  016F' 300F               	movlw	15
  3604  0170' 0080'              	movwf	??_converter_settings^(0+384)
  3605  0171' 30F1               	movlw	241
  3606  0172'                    u7497:
  3607  0172' 0B89               	decfsz	9,f
  3608  0173' 2800'              	goto	u7497
  3609  0174' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3610  0175' 2800'              	goto	u7497
  3611  0176' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3612  0177' 2800'              	goto	u7497
  3613  0178'                    l5059:
  3614  0178' 0020               	movlb	0	; select bank0
  3615  0179' 168E               	bsf	14,5	;volatile
  3616  017A' 3005               	movlw	5
  3617  017B' 0023               	movlb	3	; select bank3
  3618  017C' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3619  017D' 300F               	movlw	15
  3620  017E' 0080'              	movwf	??_converter_settings^(0+384)
  3621  017F' 30F1               	movlw	241
  3622  0180'                    u7507:
  3623  0180' 0B89               	decfsz	9,f
  3624  0181' 2800'              	goto	u7507
  3625  0182' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3626  0183' 2800'              	goto	u7507
  3627  0184' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3628  0185' 2800'              	goto	u7507
  3629  0186' 0023               	movlb	3	; select bank3
  3630  0187' 0800'              	movf	(_CC_disc_kp+3)^(0+384),w
  3631  0188' 0024               	movlb	4	; select bank4
  3632  0189' 0080'              	movwf	(_kp+3)^(0+512)
  3633  018A' 0023               	movlb	3	; select bank3
  3634  018B' 0800'              	movf	(_CC_disc_kp+2)^(0+384),w
  3635  018C' 0024               	movlb	4	; select bank4
  3636  018D' 0080'              	movwf	(_kp+2)^(0+512)
  3637  018E' 0023               	movlb	3	; select bank3
  3638  018F' 0800'              	movf	(_CC_disc_kp+1)^(0+384),w
  3639  0190' 0024               	movlb	4	; select bank4
  3640  0191' 0080'              	movwf	(_kp+1)^(0+512)
  3641  0192' 0023               	movlb	3	; select bank3
  3642  0193' 0800'              	movf	_CC_disc_kp^(0+384),w
  3643  0194' 0024               	movlb	4	; select bank4
  3644  0195' 0080'              	movwf	_kp^(0+512)
  3645  0196' 0023               	movlb	3	; select bank3
  3646  0197' 0800'              	movf	(_CC_disc_ki+3)^(0+384),w
  3647  0198' 0024               	movlb	4	; select bank4
  3648  0199' 0080'              	movwf	(_ki+3)^(0+512)
  3649  019A' 0023               	movlb	3	; select bank3
  3650  019B' 0800'              	movf	(_CC_disc_ki+2)^(0+384),w
  3651  019C' 0024               	movlb	4	; select bank4
  3652  019D' 0080'              	movwf	(_ki+2)^(0+512)
  3653  019E' 0023               	movlb	3	; select bank3
  3654  019F' 0800'              	movf	(_CC_disc_ki+1)^(0+384),w
  3655  01A0' 0024               	movlb	4	; select bank4
  3656  01A1' 0080'              	movwf	(_ki+1)^(0+512)
  3657  01A2' 0023               	movlb	3	; select bank3
  3658  01A3' 0800'              	movf	_CC_disc_ki^(0+384),w
  3659  01A4' 0024               	movlb	4	; select bank4
  3660  01A5' 0080'              	movwf	_ki^(0+512)
  3661  01A6'                    l5061:
  3662  01A6' 0023               	movlb	3	; select bank3
  3663  01A7' 0800'              	movf	_CC_char_disc_kd^(0+384),w
  3664  01A8' 0080'              	movwf	??_converter_settings^(0+384)
  3665  01A9' 0181'              	clrf	(??_converter_settings^(0+384)+1)
  3666  01AA' 0182'              	clrf	(??_converter_settings^(0+384)+2)
  3667  01AB' 0183'              	clrf	(??_converter_settings^(0+384)+3)
  3668  01AC' 0800'              	movf	(??_converter_settings+3)^(0+384),w
  3669  01AD' 0022               	movlb	2	; select bank2
  3670  01AE' 0080'              	movwf	(___xxtofl@val+3)^(0+256)
  3671  01AF' 0023               	movlb	3	; select bank3
  3672  01B0' 0800'              	movf	(??_converter_settings+2)^(0+384),w
  3673  01B1' 0022               	movlb	2	; select bank2
  3674  01B2' 0080'              	movwf	(___xxtofl@val+2)^(0+256)
  3675  01B3' 0023               	movlb	3	; select bank3
  3676  01B4' 0800'              	movf	(??_converter_settings+1)^(0+384),w
  3677  01B5' 0022               	movlb	2	; select bank2
  3678  01B6' 0080'              	movwf	(___xxtofl@val+1)^(0+256)
  3679  01B7' 0023               	movlb	3	; select bank3
  3680  01B8' 0800'              	movf	??_converter_settings^(0+384),w
  3681  01B9' 0022               	movlb	2	; select bank2
  3682  01BA' 0080'              	movwf	___xxtofl@val^(0+256)
  3683  01BB' 3000               	movlw	0
  3684  01BC' 3180' 2000' 3180'  	fcall	___xxtofl
  3685  01BF' 0022               	movlb	2	; select bank2
  3686  01C0' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3687  01C1' 0024               	movlb	4	; select bank4
  3688  01C2' 0080'              	movwf	(_kd+3)^(0+512)
  3689  01C3' 0022               	movlb	2	; select bank2
  3690  01C4' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3691  01C5' 0024               	movlb	4	; select bank4
  3692  01C6' 0080'              	movwf	(_kd+2)^(0+512)
  3693  01C7' 0022               	movlb	2	; select bank2
  3694  01C8' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3695  01C9' 0024               	movlb	4	; select bank4
  3696  01CA' 0080'              	movwf	(_kd+1)^(0+512)
  3697  01CB' 0022               	movlb	2	; select bank2
  3698  01CC' 0800'              	movf	?___xxtofl^(0+256),w
  3699  01CD' 0024               	movlb	4	; select bank4
  3700  01CE' 0080'              	movwf	_kd^(0+512)
  3701  01CF'                    l5063:
  3702  01CF' 3000               	movlw	0
  3703  01D0' 0080'              	movwf	(_pidi+3)^(0+512)
  3704  01D1' 3000               	movlw	0
  3705  01D2' 0080'              	movwf	(_pidi+2)^(0+512)
  3706  01D3' 3000               	movlw	0
  3707  01D4' 0080'              	movwf	(_pidi+1)^(0+512)
  3708  01D5' 3000               	movlw	0
  3709  01D6' 0080'              	movwf	_pidi^(0+512)
  3710                           
  3711                           ;state_machine_b.c: 228:             break;
  3712  01D7' 2800'              	goto	l5157
  3713  01D8'                    l5065:
  3714                           
  3715                           ;state_machine_b.c: 230:             iref = (uint16_t) ( ( ( capacity * 4096.0 ) / (5000
      +                           * 2.5) ) + 0.5 );
  3716  01D8' 0800'              	movf	_capacity^(0+384),w
  3717  01D9' 0022               	movlb	2	; select bank2
  3718  01DA' 0080'              	movwf	___xxtofl@val^(0+256)
  3719  01DB' 0023               	movlb	3	; select bank3
  3720  01DC' 0800'              	movf	(_capacity+1)^(0+384),w
  3721  01DD' 0022               	movlb	2	; select bank2
  3722  01DE' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  3723  01DF' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  3724  01E0' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  3725  01E1' 3000               	movlw	0
  3726  01E2' 3180' 2000' 3180'  	fcall	___xxtofl
  3727  01E5' 0022               	movlb	2	; select bank2
  3728  01E6' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3729  01E7' 0080'              	movwf	(___flmul@a+3)^(0+256)
  3730  01E8' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3731  01E9' 0080'              	movwf	(___flmul@a+2)^(0+256)
  3732  01EA' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3733  01EB' 0080'              	movwf	(___flmul@a+1)^(0+256)
  3734  01EC' 0800'              	movf	?___xxtofl^(0+256),w
  3735  01ED' 0080'              	movwf	___flmul@a^(0+256)
  3736  01EE' 3045               	movlw	69
  3737  01EF' 0080'              	movwf	(___flmul@b+3)^(0+256)
  3738  01F0' 3080               	movlw	128
  3739  01F1' 0080'              	movwf	(___flmul@b+2)^(0+256)
  3740  01F2' 3000               	movlw	0
  3741  01F3' 0080'              	movwf	(___flmul@b+1)^(0+256)
  3742  01F4' 3000               	movlw	0
  3743  01F5' 0080'              	movwf	___flmul@b^(0+256)
  3744  01F6' 3180' 2000' 3180'  	fcall	___flmul
  3745  01F9' 0022               	movlb	2	; select bank2
  3746  01FA' 0800'              	movf	(?___flmul+3)^(0+256),w
  3747  01FB' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  3748  01FC' 0800'              	movf	(?___flmul+2)^(0+256),w
  3749  01FD' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  3750  01FE' 0800'              	movf	(?___flmul+1)^(0+256),w
  3751  01FF' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  3752  0200' 0800'              	movf	?___flmul^(0+256),w
  3753  0201' 0080'              	movwf	___fldiv@b^(0+256)
  3754  0202' 3046               	movlw	70
  3755  0203' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  3756  0204' 3043               	movlw	67
  3757  0205' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  3758  0206' 3050               	movlw	80
  3759  0207' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  3760  0208' 3000               	movlw	0
  3761  0209' 0080'              	movwf	___fldiv@a^(0+256)
  3762  020A' 3180' 2000' 3180'  	fcall	___fldiv
  3763  020D' 0022               	movlb	2	; select bank2
  3764  020E' 0800'              	movf	(?___fldiv+3)^(0+256),w
  3765  020F' 0080'              	movwf	(___fladd@a+3)^(0+256)
  3766  0210' 0800'              	movf	(?___fldiv+2)^(0+256),w
  3767  0211' 0080'              	movwf	(___fladd@a+2)^(0+256)
  3768  0212' 0800'              	movf	(?___fldiv+1)^(0+256),w
  3769  0213' 0080'              	movwf	(___fladd@a+1)^(0+256)
  3770  0214' 0800'              	movf	?___fldiv^(0+256),w
  3771  0215' 0080'              	movwf	___fladd@a^(0+256)
  3772  0216' 303F               	movlw	63
  3773  0217' 0080'              	movwf	(___fladd@b+3)^(0+256)
  3774  0218' 3000               	movlw	0
  3775  0219' 0080'              	movwf	(___fladd@b+2)^(0+256)
  3776  021A' 3000               	movlw	0
  3777  021B' 0080'              	movwf	(___fladd@b+1)^(0+256)
  3778  021C' 3000               	movlw	0
  3779  021D' 0080'              	movwf	___fladd@b^(0+256)
  3780  021E' 3180' 2000' 3180'  	fcall	___fladd
  3781  0221' 0022               	movlb	2	; select bank2
  3782  0222' 0800'              	movf	(?___fladd+3)^(0+256),w
  3783  0223' 0023               	movlb	3	; select bank3
  3784  0224' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  3785  0225' 0022               	movlb	2	; select bank2
  3786  0226' 0800'              	movf	(?___fladd+2)^(0+256),w
  3787  0227' 0023               	movlb	3	; select bank3
  3788  0228' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  3789  0229' 0022               	movlb	2	; select bank2
  3790  022A' 0800'              	movf	(?___fladd+1)^(0+256),w
  3791  022B' 0023               	movlb	3	; select bank3
  3792  022C' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  3793  022D' 0022               	movlb	2	; select bank2
  3794  022E' 0800'              	movf	?___fladd^(0+256),w
  3795  022F' 0023               	movlb	3	; select bank3
  3796  0230' 0080'              	movwf	___fltol@f1^(0+384)
  3797  0231' 3180' 2000' 3180'  	fcall	___fltol
  3798  0234' 0023               	movlb	3	; select bank3
  3799  0235' 0800'              	movf	(?___fltol+1)^(0+384),w
  3800  0236' 0021               	movlb	1	; select bank1
  3801  0237' 0080'              	movwf	(_iref+1)^(0+128)
  3802  0238' 0023               	movlb	3	; select bank3
  3803  0239' 0800'              	movf	?___fltol^(0+384),w
  3804  023A' 0021               	movlb	1	; select bank1
  3805  023B' 0080'              	movwf	_iref^(0+128)
  3806  023C'                    l5067:
  3807                           
  3808                           ;state_machine_b.c: 231:             dc_res_count = 220;
  3809  023C' 30DC               	movlw	220
  3810  023D' 0023               	movlb	3	; select bank3
  3811  023E' 0080'              	movwf	_dc_res_count^(0+384)
  3812  023F'                    l5069:
  3813                           
  3814                           ;state_machine_b.c: 232:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
  3815  023F' 0020               	movlb	0	; select bank0
  3816  0240' 118E               	bcf	14,3	;volatile
  3817  0241'                    l5071:
  3818  0241' 120E               	bcf	14,4	;volatile
  3819  0242'                    l5073:
  3820  0242' 3005               	movlw	5
  3821  0243' 0023               	movlb	3	; select bank3
  3822  0244' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3823  0245' 300F               	movlw	15
  3824  0246' 0080'              	movwf	??_converter_settings^(0+384)
  3825  0247' 30F1               	movlw	241
  3826  0248'                    u7517:
  3827  0248' 0B89               	decfsz	9,f
  3828  0249' 2800'              	goto	u7517
  3829  024A' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3830  024B' 2800'              	goto	u7517
  3831  024C' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3832  024D' 2800'              	goto	u7517
  3833  024E'                    l5075:
  3834  024E' 0020               	movlb	0	; select bank0
  3835  024F' 158E               	bsf	14,3	;volatile
  3836  0250'                    l5077:
  3837  0250' 3005               	movlw	5
  3838  0251' 0023               	movlb	3	; select bank3
  3839  0252' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3840  0253' 300F               	movlw	15
  3841  0254' 0080'              	movwf	??_converter_settings^(0+384)
  3842  0255' 30F1               	movlw	241
  3843  0256'                    u7527:
  3844  0256' 0B89               	decfsz	9,f
  3845  0257' 2800'              	goto	u7527
  3846  0258' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3847  0259' 2800'              	goto	u7527
  3848  025A' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3849  025B' 2800'              	goto	u7527
  3850  025C'                    l5079:
  3851  025C' 0020               	movlb	0	; select bank0
  3852  025D' 118E               	bcf	14,3	;volatile
  3853  025E'                    l5081:
  3854  025E' 3005               	movlw	5
  3855  025F' 0023               	movlb	3	; select bank3
  3856  0260' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3857  0261' 300F               	movlw	15
  3858  0262' 0080'              	movwf	??_converter_settings^(0+384)
  3859  0263' 30F1               	movlw	241
  3860  0264'                    u7537:
  3861  0264' 0B89               	decfsz	9,f
  3862  0265' 2800'              	goto	u7537
  3863  0266' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3864  0267' 2800'              	goto	u7537
  3865  0268' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3866  0269' 2800'              	goto	u7537
  3867  026A'                    l5083:
  3868  026A' 0020               	movlb	0	; select bank0
  3869  026B' 168E               	bsf	14,5	;volatile
  3870  026C'                    l5085:
  3871  026C' 3005               	movlw	5
  3872  026D' 0023               	movlb	3	; select bank3
  3873  026E' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3874  026F' 300F               	movlw	15
  3875  0270' 0080'              	movwf	??_converter_settings^(0+384)
  3876  0271' 30F1               	movlw	241
  3877  0272'                    u7547:
  3878  0272' 0B89               	decfsz	9,f
  3879  0273' 2800'              	goto	u7547
  3880  0274' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3881  0275' 2800'              	goto	u7547
  3882  0276' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3883  0277' 2800'              	goto	u7547
  3884  0278'                    l5087:
  3885  0278' 0023               	movlb	3	; select bank3
  3886  0279' 0800'              	movf	(_CC_disc_kp+3)^(0+384),w
  3887  027A' 0024               	movlb	4	; select bank4
  3888  027B' 0080'              	movwf	(_kp+3)^(0+512)
  3889  027C' 0023               	movlb	3	; select bank3
  3890  027D' 0800'              	movf	(_CC_disc_kp+2)^(0+384),w
  3891  027E' 0024               	movlb	4	; select bank4
  3892  027F' 0080'              	movwf	(_kp+2)^(0+512)
  3893  0280' 0023               	movlb	3	; select bank3
  3894  0281' 0800'              	movf	(_CC_disc_kp+1)^(0+384),w
  3895  0282' 0024               	movlb	4	; select bank4
  3896  0283' 0080'              	movwf	(_kp+1)^(0+512)
  3897  0284' 0023               	movlb	3	; select bank3
  3898  0285' 0800'              	movf	_CC_disc_kp^(0+384),w
  3899  0286' 0024               	movlb	4	; select bank4
  3900  0287' 0080'              	movwf	_kp^(0+512)
  3901  0288'                    l5089:
  3902  0288' 0023               	movlb	3	; select bank3
  3903  0289' 0800'              	movf	(_CC_disc_ki+3)^(0+384),w
  3904  028A' 0024               	movlb	4	; select bank4
  3905  028B' 0080'              	movwf	(_ki+3)^(0+512)
  3906  028C' 0023               	movlb	3	; select bank3
  3907  028D' 0800'              	movf	(_CC_disc_ki+2)^(0+384),w
  3908  028E' 0024               	movlb	4	; select bank4
  3909  028F' 0080'              	movwf	(_ki+2)^(0+512)
  3910  0290' 0023               	movlb	3	; select bank3
  3911  0291' 0800'              	movf	(_CC_disc_ki+1)^(0+384),w
  3912  0292' 0024               	movlb	4	; select bank4
  3913  0293' 0080'              	movwf	(_ki+1)^(0+512)
  3914  0294' 0023               	movlb	3	; select bank3
  3915  0295' 0800'              	movf	_CC_disc_ki^(0+384),w
  3916  0296' 0024               	movlb	4	; select bank4
  3917  0297' 0080'              	movwf	_ki^(0+512)
  3918  0298'                    l5091:
  3919  0298' 0023               	movlb	3	; select bank3
  3920  0299' 0800'              	movf	_CC_char_disc_kd^(0+384),w
  3921  029A' 0080'              	movwf	??_converter_settings^(0+384)
  3922  029B' 0181'              	clrf	(??_converter_settings^(0+384)+1)
  3923  029C' 0182'              	clrf	(??_converter_settings^(0+384)+2)
  3924  029D' 0183'              	clrf	(??_converter_settings^(0+384)+3)
  3925  029E' 0800'              	movf	(??_converter_settings+3)^(0+384),w
  3926  029F' 0022               	movlb	2	; select bank2
  3927  02A0' 0080'              	movwf	(___xxtofl@val+3)^(0+256)
  3928  02A1' 0023               	movlb	3	; select bank3
  3929  02A2' 0800'              	movf	(??_converter_settings+2)^(0+384),w
  3930  02A3' 0022               	movlb	2	; select bank2
  3931  02A4' 0080'              	movwf	(___xxtofl@val+2)^(0+256)
  3932  02A5' 0023               	movlb	3	; select bank3
  3933  02A6' 0800'              	movf	(??_converter_settings+1)^(0+384),w
  3934  02A7' 0022               	movlb	2	; select bank2
  3935  02A8' 0080'              	movwf	(___xxtofl@val+1)^(0+256)
  3936  02A9' 0023               	movlb	3	; select bank3
  3937  02AA' 0800'              	movf	??_converter_settings^(0+384),w
  3938  02AB' 0022               	movlb	2	; select bank2
  3939  02AC' 0080'              	movwf	___xxtofl@val^(0+256)
  3940  02AD' 3000               	movlw	0
  3941  02AE' 3180' 2000' 3180'  	fcall	___xxtofl
  3942  02B1' 0022               	movlb	2	; select bank2
  3943  02B2' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3944  02B3' 0024               	movlb	4	; select bank4
  3945  02B4' 0080'              	movwf	(_kd+3)^(0+512)
  3946  02B5' 0022               	movlb	2	; select bank2
  3947  02B6' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3948  02B7' 0024               	movlb	4	; select bank4
  3949  02B8' 0080'              	movwf	(_kd+2)^(0+512)
  3950  02B9' 0022               	movlb	2	; select bank2
  3951  02BA' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3952  02BB' 0024               	movlb	4	; select bank4
  3953  02BC' 0080'              	movwf	(_kd+1)^(0+512)
  3954  02BD' 0022               	movlb	2	; select bank2
  3955  02BE' 0800'              	movf	?___xxtofl^(0+256),w
  3956  02BF' 0024               	movlb	4	; select bank4
  3957  02C0' 0080'              	movwf	_kd^(0+512)
  3958  02C1' 3000               	movlw	0
  3959  02C2' 0080'              	movwf	(_pidi+3)^(0+512)
  3960  02C3' 3000               	movlw	0
  3961  02C4' 0080'              	movwf	(_pidi+2)^(0+512)
  3962  02C5' 3000               	movlw	0
  3963  02C6' 0080'              	movwf	(_pidi+1)^(0+512)
  3964  02C7' 3000               	movlw	0
  3965  02C8' 0080'              	movwf	_pidi^(0+512)
  3966                           
  3967                           ;state_machine_b.c: 233:             break;
  3968  02C9' 2800'              	goto	l5157
  3969  02CA'                    l5093:
  3970                           
  3971                           ;state_machine_b.c: 235:             iref = (uint16_t) ( ( ( capacity * 4096.0 ) / (5000
      +                           * 2.5 * 2 ) ) + 0.5 );
  3972  02CA' 0800'              	movf	_capacity^(0+384),w
  3973  02CB' 0022               	movlb	2	; select bank2
  3974  02CC' 0080'              	movwf	___xxtofl@val^(0+256)
  3975  02CD' 0023               	movlb	3	; select bank3
  3976  02CE' 0800'              	movf	(_capacity+1)^(0+384),w
  3977  02CF' 0022               	movlb	2	; select bank2
  3978  02D0' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  3979  02D1' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  3980  02D2' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  3981  02D3' 3000               	movlw	0
  3982  02D4' 3180' 2000' 3180'  	fcall	___xxtofl
  3983  02D7' 0022               	movlb	2	; select bank2
  3984  02D8' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3985  02D9' 0080'              	movwf	(___flmul@a+3)^(0+256)
  3986  02DA' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3987  02DB' 0080'              	movwf	(___flmul@a+2)^(0+256)
  3988  02DC' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3989  02DD' 0080'              	movwf	(___flmul@a+1)^(0+256)
  3990  02DE' 0800'              	movf	?___xxtofl^(0+256),w
  3991  02DF' 0080'              	movwf	___flmul@a^(0+256)
  3992  02E0' 3045               	movlw	69
  3993  02E1' 0080'              	movwf	(___flmul@b+3)^(0+256)
  3994  02E2' 3080               	movlw	128
  3995  02E3' 0080'              	movwf	(___flmul@b+2)^(0+256)
  3996  02E4' 3000               	movlw	0
  3997  02E5' 0080'              	movwf	(___flmul@b+1)^(0+256)
  3998  02E6' 3000               	movlw	0
  3999  02E7' 0080'              	movwf	___flmul@b^(0+256)
  4000  02E8' 3180' 2000' 3180'  	fcall	___flmul
  4001  02EB' 0022               	movlb	2	; select bank2
  4002  02EC' 0800'              	movf	(?___flmul+3)^(0+256),w
  4003  02ED' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  4004  02EE' 0800'              	movf	(?___flmul+2)^(0+256),w
  4005  02EF' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  4006  02F0' 0800'              	movf	(?___flmul+1)^(0+256),w
  4007  02F1' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  4008  02F2' 0800'              	movf	?___flmul^(0+256),w
  4009  02F3' 0080'              	movwf	___fldiv@b^(0+256)
  4010  02F4' 3046               	movlw	70
  4011  02F5' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  4012  02F6' 30C3               	movlw	195
  4013  02F7' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  4014  02F8' 3050               	movlw	80
  4015  02F9' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  4016  02FA' 3000               	movlw	0
  4017  02FB' 0080'              	movwf	___fldiv@a^(0+256)
  4018  02FC' 3180' 2000' 3180'  	fcall	___fldiv
  4019  02FF' 0022               	movlb	2	; select bank2
  4020  0300' 0800'              	movf	(?___fldiv+3)^(0+256),w
  4021  0301' 0080'              	movwf	(___fladd@a+3)^(0+256)
  4022  0302' 0800'              	movf	(?___fldiv+2)^(0+256),w
  4023  0303' 0080'              	movwf	(___fladd@a+2)^(0+256)
  4024  0304' 0800'              	movf	(?___fldiv+1)^(0+256),w
  4025  0305' 0080'              	movwf	(___fladd@a+1)^(0+256)
  4026  0306' 0800'              	movf	?___fldiv^(0+256),w
  4027  0307' 0080'              	movwf	___fladd@a^(0+256)
  4028  0308' 303F               	movlw	63
  4029  0309' 0080'              	movwf	(___fladd@b+3)^(0+256)
  4030  030A' 3000               	movlw	0
  4031  030B' 0080'              	movwf	(___fladd@b+2)^(0+256)
  4032  030C' 3000               	movlw	0
  4033  030D' 0080'              	movwf	(___fladd@b+1)^(0+256)
  4034  030E' 3000               	movlw	0
  4035  030F' 0080'              	movwf	___fladd@b^(0+256)
  4036  0310' 3180' 2000' 3180'  	fcall	___fladd
  4037  0313' 0022               	movlb	2	; select bank2
  4038  0314' 0800'              	movf	(?___fladd+3)^(0+256),w
  4039  0315' 0023               	movlb	3	; select bank3
  4040  0316' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  4041  0317' 0022               	movlb	2	; select bank2
  4042  0318' 0800'              	movf	(?___fladd+2)^(0+256),w
  4043  0319' 0023               	movlb	3	; select bank3
  4044  031A' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  4045  031B' 0022               	movlb	2	; select bank2
  4046  031C' 0800'              	movf	(?___fladd+1)^(0+256),w
  4047  031D' 0023               	movlb	3	; select bank3
  4048  031E' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  4049  031F' 0022               	movlb	2	; select bank2
  4050  0320' 0800'              	movf	?___fladd^(0+256),w
  4051  0321' 0023               	movlb	3	; select bank3
  4052  0322' 0080'              	movwf	___fltol@f1^(0+384)
  4053  0323' 3180' 2000' 3180'  	fcall	___fltol
  4054  0326' 0023               	movlb	3	; select bank3
  4055  0327' 0800'              	movf	(?___fltol+1)^(0+384),w
  4056  0328' 0021               	movlb	1	; select bank1
  4057  0329' 0080'              	movwf	(_iref+1)^(0+128)
  4058  032A' 0023               	movlb	3	; select bank3
  4059  032B' 0800'              	movf	?___fltol^(0+384),w
  4060  032C' 0021               	movlb	1	; select bank1
  4061  032D' 0080'              	movwf	_iref^(0+128)
  4062  032E'                    l5095:
  4063                           
  4064                           ;state_machine_b.c: 236:             if(basic_configuration.version == 0x02) timeout = (
      +                          uint16_t)(((float)capacity / (float)basic_configuration.const_current_char) * 3600 * 1.1
      +                          );
  4065  032E' 3002               	movlw	2
  4066  032F' 0024               	movlb	4	; select bank4
  4067  0330' 0600'              	xorwf	_basic_configuration^(0+512),w
  4068  0331' 1D03               	btfss	3,2
  4069  0332' 2800'              	goto	u4921
  4070  0333' 2800'              	goto	u4920
  4071  0334'                    u4921:
  4072  0334' 2800'              	goto	l5099
  4073  0335'                    u4920:
  4074  0335'                    l5097:
  4075  0335' 0023               	movlb	3	; select bank3
  4076  0336' 0800'              	movf	_capacity^(0+384),w
  4077  0337' 0022               	movlb	2	; select bank2
  4078  0338' 0080'              	movwf	___xxtofl@val^(0+256)
  4079  0339' 0023               	movlb	3	; select bank3
  4080  033A' 0800'              	movf	(_capacity+1)^(0+384),w
  4081  033B' 0022               	movlb	2	; select bank2
  4082  033C' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  4083  033D' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  4084  033E' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  4085  033F' 3000               	movlw	0
  4086  0340' 3180' 2000' 3180'  	fcall	___xxtofl
  4087  0343' 0022               	movlb	2	; select bank2
  4088  0344' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  4089  0345' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  4090  0346' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  4091  0347' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  4092  0348' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  4093  0349' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  4094  034A' 0800'              	movf	?___xxtofl^(0+256),w
  4095  034B' 0080'              	movwf	___fldiv@b^(0+256)
  4096  034C' 0024               	movlb	4	; select bank4
  4097  034D' 0803'              	movf	(_basic_configuration^(0+512)+3),w
  4098  034E' 0022               	movlb	2	; select bank2
  4099  034F' 0080'              	movwf	___xxtofl@val^(0+256)
  4100  0350' 0024               	movlb	4	; select bank4
  4101  0351' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
  4102  0352' 0022               	movlb	2	; select bank2
  4103  0353' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  4104  0354' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  4105  0355' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  4106  0356' 3000               	movlw	0
  4107  0357' 3180' 2000' 3180'  	fcall	___xxtofl
  4108  035A' 0022               	movlb	2	; select bank2
  4109  035B' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  4110  035C' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  4111  035D' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  4112  035E' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  4113  035F' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  4114  0360' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  4115  0361' 0800'              	movf	?___xxtofl^(0+256),w
  4116  0362' 0080'              	movwf	___fldiv@a^(0+256)
  4117  0363' 3180' 2000' 3180'  	fcall	___fldiv
  4118  0366' 0022               	movlb	2	; select bank2
  4119  0367' 0800'              	movf	(?___fldiv+3)^(0+256),w
  4120  0368' 0080'              	movwf	(___flmul@a+3)^(0+256)
  4121  0369' 0800'              	movf	(?___fldiv+2)^(0+256),w
  4122  036A' 0080'              	movwf	(___flmul@a+2)^(0+256)
  4123  036B' 0800'              	movf	(?___fldiv+1)^(0+256),w
  4124  036C' 0080'              	movwf	(___flmul@a+1)^(0+256)
  4125  036D' 0800'              	movf	?___fldiv^(0+256),w
  4126  036E' 0080'              	movwf	___flmul@a^(0+256)
  4127  036F' 3045               	movlw	69
  4128  0370' 0080'              	movwf	(___flmul@b+3)^(0+256)
  4129  0371' 3061               	movlw	97
  4130  0372' 0080'              	movwf	(___flmul@b+2)^(0+256)
  4131  0373' 3000               	movlw	0
  4132  0374' 0080'              	movwf	(___flmul@b+1)^(0+256)
  4133  0375' 3000               	movlw	0
  4134  0376' 0080'              	movwf	___flmul@b^(0+256)
  4135  0377' 3180' 2000' 3180'  	fcall	___flmul
  4136  037A' 0022               	movlb	2	; select bank2
  4137  037B' 0800'              	movf	(?___flmul+3)^(0+256),w
  4138  037C' 0023               	movlb	3	; select bank3
  4139  037D' 0080'              	movwf	(_converter_settings$1611+3)^(0+384)
  4140  037E' 0022               	movlb	2	; select bank2
  4141  037F' 0800'              	movf	(?___flmul+2)^(0+256),w
  4142  0380' 0023               	movlb	3	; select bank3
  4143  0381' 0080'              	movwf	(_converter_settings$1611+2)^(0+384)
  4144  0382' 0022               	movlb	2	; select bank2
  4145  0383' 0800'              	movf	(?___flmul+1)^(0+256),w
  4146  0384' 0023               	movlb	3	; select bank3
  4147  0385' 0080'              	movwf	(_converter_settings$1611+1)^(0+384)
  4148  0386' 0022               	movlb	2	; select bank2
  4149  0387' 0800'              	movf	?___flmul^(0+256),w
  4150  0388' 0023               	movlb	3	; select bank3
  4151  0389' 0080'              	movwf	_converter_settings$1611^(0+384)
  4152  038A' 0800'              	movf	(_converter_settings$1611+3)^(0+384),w
  4153  038B' 0022               	movlb	2	; select bank2
  4154  038C' 0080'              	movwf	(___flmul@a+3)^(0+256)
  4155  038D' 0023               	movlb	3	; select bank3
  4156  038E' 0800'              	movf	(_converter_settings$1611+2)^(0+384),w
  4157  038F' 0022               	movlb	2	; select bank2
  4158  0390' 0080'              	movwf	(___flmul@a+2)^(0+256)
  4159  0391' 0023               	movlb	3	; select bank3
  4160  0392' 0800'              	movf	(_converter_settings$1611+1)^(0+384),w
  4161  0393' 0022               	movlb	2	; select bank2
  4162  0394' 0080'              	movwf	(___flmul@a+1)^(0+256)
  4163  0395' 0023               	movlb	3	; select bank3
  4164  0396' 0800'              	movf	_converter_settings$1611^(0+384),w
  4165  0397' 0022               	movlb	2	; select bank2
  4166  0398' 0080'              	movwf	___flmul@a^(0+256)
  4167  0399' 303F               	movlw	63
  4168  039A' 0080'              	movwf	(___flmul@b+3)^(0+256)
  4169  039B' 308C               	movlw	140
  4170  039C' 0080'              	movwf	(___flmul@b+2)^(0+256)
  4171  039D' 30CC               	movlw	204
  4172  039E' 0080'              	movwf	(___flmul@b+1)^(0+256)
  4173  039F' 30CD               	movlw	205
  4174  03A0' 0080'              	movwf	___flmul@b^(0+256)
  4175  03A1' 3180' 2000' 3180'  	fcall	___flmul
  4176  03A4' 0022               	movlb	2	; select bank2
  4177  03A5' 0800'              	movf	(?___flmul+3)^(0+256),w
  4178  03A6' 0023               	movlb	3	; select bank3
  4179  03A7' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  4180  03A8' 0022               	movlb	2	; select bank2
  4181  03A9' 0800'              	movf	(?___flmul+2)^(0+256),w
  4182  03AA' 0023               	movlb	3	; select bank3
  4183  03AB' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  4184  03AC' 0022               	movlb	2	; select bank2
  4185  03AD' 0800'              	movf	(?___flmul+1)^(0+256),w
  4186  03AE' 0023               	movlb	3	; select bank3
  4187  03AF' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  4188  03B0' 0022               	movlb	2	; select bank2
  4189  03B1' 0800'              	movf	?___flmul^(0+256),w
  4190  03B2' 0023               	movlb	3	; select bank3
  4191  03B3' 0080'              	movwf	___fltol@f1^(0+384)
  4192  03B4' 3180' 2000' 3180'  	fcall	___fltol
  4193  03B7' 0023               	movlb	3	; select bank3
  4194  03B8' 0800'              	movf	(?___fltol+1)^(0+384),w
  4195  03B9' 0080'              	movwf	(_timeout+1)^(0+384)
  4196  03BA' 0800'              	movf	?___fltol^(0+384),w
  4197  03BB' 0080'              	movwf	_timeout^(0+384)
  4198  03BC'                    l5099:
  4199                           
  4200                           ;state_machine_b.c: 237:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
  4201  03BC' 0020               	movlb	0	; select bank0
  4202  03BD' 118E               	bcf	14,3	;volatile
  4203  03BE'                    l5101:
  4204  03BE' 120E               	bcf	14,4	;volatile
  4205  03BF'                    l5103:
  4206  03BF' 3005               	movlw	5
  4207  03C0' 0023               	movlb	3	; select bank3
  4208  03C1' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  4209  03C2' 300F               	movlw	15
  4210  03C3' 0080'              	movwf	??_converter_settings^(0+384)
  4211  03C4' 30F1               	movlw	241
  4212  03C5'                    u7557:
  4213  03C5' 0B89               	decfsz	9,f
  4214  03C6' 2800'              	goto	u7557
  4215  03C7' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4216  03C8' 2800'              	goto	u7557
  4217  03C9' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  4218  03CA' 2800'              	goto	u7557
  4219  03CB'                    l5105:
  4220  03CB' 0020               	movlb	0	; select bank0
  4221  03CC' 158E               	bsf	14,3	;volatile
  4222  03CD'                    l5107:
  4223  03CD' 3005               	movlw	5
  4224  03CE' 0023               	movlb	3	; select bank3
  4225  03CF' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  4226  03D0' 300F               	movlw	15
  4227  03D1' 0080'              	movwf	??_converter_settings^(0+384)
  4228  03D2' 30F1               	movlw	241
  4229  03D3'                    u7567:
  4230  03D3' 0B89               	decfsz	9,f
  4231  03D4' 2800'              	goto	u7567
  4232  03D5' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4233  03D6' 2800'              	goto	u7567
  4234  03D7' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  4235  03D8' 2800'              	goto	u7567
  4236  03D9'                    l5109:
  4237  03D9' 0020               	movlb	0	; select bank0
  4238  03DA' 118E               	bcf	14,3	;volatile
  4239  03DB'                    l5111:
  4240  03DB' 3005               	movlw	5
  4241  03DC' 0023               	movlb	3	; select bank3
  4242  03DD' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  4243  03DE' 300F               	movlw	15
  4244  03DF' 0080'              	movwf	??_converter_settings^(0+384)
  4245  03E0' 30F1               	movlw	241
  4246  03E1'                    u7577:
  4247  03E1' 0B89               	decfsz	9,f
  4248  03E2' 2800'              	goto	u7577
  4249  03E3' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4250  03E4' 2800'              	goto	u7577
  4251  03E5' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  4252  03E6' 2800'              	goto	u7577
  4253  03E7'                    l5113:
  4254  03E7' 0020               	movlb	0	; select bank0
  4255  03E8' 168E               	bsf	14,5	;volatile
  4256  03E9'                    l5115:
  4257  03E9' 3005               	movlw	5
  4258  03EA' 0023               	movlb	3	; select bank3
  4259  03EB' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  4260  03EC' 300F               	movlw	15
  4261  03ED' 0080'              	movwf	??_converter_settings^(0+384)
  4262  03EE' 30F1               	movlw	241
  4263  03EF'                    u7587:
  4264  03EF' 0B89               	decfsz	9,f
  4265  03F0' 2800'              	goto	u7587
  4266  03F1' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4267  03F2' 2800'              	goto	u7587
  4268  03F3' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  4269  03F4' 2800'              	goto	u7587
  4270  03F5'                    l5117:
  4271  03F5' 0023               	movlb	3	; select bank3
  4272  03F6' 0800'              	movf	(_CC_disc_kp+3)^(0+384),w
  4273  03F7' 0024               	movlb	4	; select bank4
  4274  03F8' 0080'              	movwf	(_kp+3)^(0+512)
  4275  03F9' 0023               	movlb	3	; select bank3
  4276  03FA' 0800'              	movf	(_CC_disc_kp+2)^(0+384),w
  4277  03FB' 0024               	movlb	4	; select bank4
  4278  03FC' 0080'              	movwf	(_kp+2)^(0+512)
  4279  03FD' 0023               	movlb	3	; select bank3
  4280  03FE' 0800'              	movf	(_CC_disc_kp+1)^(0+384),w
  4281  03FF' 0024               	movlb	4	; select bank4
  4282  0400' 0080'              	movwf	(_kp+1)^(0+512)
  4283  0401' 0023               	movlb	3	; select bank3
  4284  0402' 0800'              	movf	_CC_disc_kp^(0+384),w
  4285  0403' 0024               	movlb	4	; select bank4
  4286  0404' 0080'              	movwf	_kp^(0+512)
  4287  0405'                    l5119:
  4288  0405' 0023               	movlb	3	; select bank3
  4289  0406' 0800'              	movf	(_CC_disc_ki+3)^(0+384),w
  4290  0407' 0024               	movlb	4	; select bank4
  4291  0408' 0080'              	movwf	(_ki+3)^(0+512)
  4292  0409' 0023               	movlb	3	; select bank3
  4293  040A' 0800'              	movf	(_CC_disc_ki+2)^(0+384),w
  4294  040B' 0024               	movlb	4	; select bank4
  4295  040C' 0080'              	movwf	(_ki+2)^(0+512)
  4296  040D' 0023               	movlb	3	; select bank3
  4297  040E' 0800'              	movf	(_CC_disc_ki+1)^(0+384),w
  4298  040F' 0024               	movlb	4	; select bank4
  4299  0410' 0080'              	movwf	(_ki+1)^(0+512)
  4300  0411' 0023               	movlb	3	; select bank3
  4301  0412' 0800'              	movf	_CC_disc_ki^(0+384),w
  4302  0413' 0024               	movlb	4	; select bank4
  4303  0414' 0080'              	movwf	_ki^(0+512)
  4304  0415' 0023               	movlb	3	; select bank3
  4305  0416' 0800'              	movf	_CC_char_disc_kd^(0+384),w
  4306  0417' 0080'              	movwf	??_converter_settings^(0+384)
  4307  0418' 0181'              	clrf	(??_converter_settings^(0+384)+1)
  4308  0419' 0182'              	clrf	(??_converter_settings^(0+384)+2)
  4309  041A' 0183'              	clrf	(??_converter_settings^(0+384)+3)
  4310  041B' 0800'              	movf	(??_converter_settings+3)^(0+384),w
  4311  041C' 0022               	movlb	2	; select bank2
  4312  041D' 0080'              	movwf	(___xxtofl@val+3)^(0+256)
  4313  041E' 0023               	movlb	3	; select bank3
  4314  041F' 0800'              	movf	(??_converter_settings+2)^(0+384),w
  4315  0420' 0022               	movlb	2	; select bank2
  4316  0421' 0080'              	movwf	(___xxtofl@val+2)^(0+256)
  4317  0422' 0023               	movlb	3	; select bank3
  4318  0423' 0800'              	movf	(??_converter_settings+1)^(0+384),w
  4319  0424' 0022               	movlb	2	; select bank2
  4320  0425' 0080'              	movwf	(___xxtofl@val+1)^(0+256)
  4321  0426' 0023               	movlb	3	; select bank3
  4322  0427' 0800'              	movf	??_converter_settings^(0+384),w
  4323  0428' 0022               	movlb	2	; select bank2
  4324  0429' 0080'              	movwf	___xxtofl@val^(0+256)
  4325  042A' 3000               	movlw	0
  4326  042B' 3180' 2000' 3180'  	fcall	___xxtofl
  4327  042E' 0022               	movlb	2	; select bank2
  4328  042F' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  4329  0430' 0024               	movlb	4	; select bank4
  4330  0431' 0080'              	movwf	(_kd+3)^(0+512)
  4331  0432' 0022               	movlb	2	; select bank2
  4332  0433' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  4333  0434' 0024               	movlb	4	; select bank4
  4334  0435' 0080'              	movwf	(_kd+2)^(0+512)
  4335  0436' 0022               	movlb	2	; select bank2
  4336  0437' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  4337  0438' 0024               	movlb	4	; select bank4
  4338  0439' 0080'              	movwf	(_kd+1)^(0+512)
  4339  043A' 0022               	movlb	2	; select bank2
  4340  043B' 0800'              	movf	?___xxtofl^(0+256),w
  4341  043C' 0024               	movlb	4	; select bank4
  4342  043D' 0080'              	movwf	_kd^(0+512)
  4343  043E'                    l5121:
  4344  043E' 3000               	movlw	0
  4345  043F' 0080'              	movwf	(_pidi+3)^(0+512)
  4346  0440' 3000               	movlw	0
  4347  0441' 0080'              	movwf	(_pidi+2)^(0+512)
  4348  0442' 3000               	movlw	0
  4349  0443' 0080'              	movwf	(_pidi+1)^(0+512)
  4350  0444' 3000               	movlw	0
  4351  0445' 0080'              	movwf	_pidi^(0+512)
  4352                           
  4353                           ;state_machine_b.c: 238:             break;
  4354  0446' 2800'              	goto	l5157
  4355  0447'                    l5123:
  4356                           
  4357                           ;state_machine_b.c: 240:             iref = (uint16_t) ( ( ( capacity * 4096.0 ) / (5000
      +                           * 2.5 * 2 ) ) + 0.5 );
  4358  0447' 0800'              	movf	_capacity^(0+384),w
  4359  0448' 0022               	movlb	2	; select bank2
  4360  0449' 0080'              	movwf	___xxtofl@val^(0+256)
  4361  044A' 0023               	movlb	3	; select bank3
  4362  044B' 0800'              	movf	(_capacity+1)^(0+384),w
  4363  044C' 0022               	movlb	2	; select bank2
  4364  044D' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  4365  044E' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  4366  044F' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  4367  0450' 3000               	movlw	0
  4368  0451' 3180' 2000' 3180'  	fcall	___xxtofl
  4369  0454' 0022               	movlb	2	; select bank2
  4370  0455' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  4371  0456' 0080'              	movwf	(___flmul@a+3)^(0+256)
  4372  0457' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  4373  0458' 0080'              	movwf	(___flmul@a+2)^(0+256)
  4374  0459' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  4375  045A' 0080'              	movwf	(___flmul@a+1)^(0+256)
  4376  045B' 0800'              	movf	?___xxtofl^(0+256),w
  4377  045C' 0080'              	movwf	___flmul@a^(0+256)
  4378  045D' 3045               	movlw	69
  4379  045E' 0080'              	movwf	(___flmul@b+3)^(0+256)
  4380  045F' 3080               	movlw	128
  4381  0460' 0080'              	movwf	(___flmul@b+2)^(0+256)
  4382  0461' 3000               	movlw	0
  4383  0462' 0080'              	movwf	(___flmul@b+1)^(0+256)
  4384  0463' 3000               	movlw	0
  4385  0464' 0080'              	movwf	___flmul@b^(0+256)
  4386  0465' 3180' 2000' 3180'  	fcall	___flmul
  4387  0468' 0022               	movlb	2	; select bank2
  4388  0469' 0800'              	movf	(?___flmul+3)^(0+256),w
  4389  046A' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  4390  046B' 0800'              	movf	(?___flmul+2)^(0+256),w
  4391  046C' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  4392  046D' 0800'              	movf	(?___flmul+1)^(0+256),w
  4393  046E' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  4394  046F' 0800'              	movf	?___flmul^(0+256),w
  4395  0470' 0080'              	movwf	___fldiv@b^(0+256)
  4396  0471' 3046               	movlw	70
  4397  0472' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  4398  0473' 30C3               	movlw	195
  4399  0474' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  4400  0475' 3050               	movlw	80
  4401  0476' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  4402  0477' 3000               	movlw	0
  4403  0478' 0080'              	movwf	___fldiv@a^(0+256)
  4404  0479' 3180' 2000' 3180'  	fcall	___fldiv
  4405  047C' 0022               	movlb	2	; select bank2
  4406  047D' 0800'              	movf	(?___fldiv+3)^(0+256),w
  4407  047E' 0080'              	movwf	(___fladd@a+3)^(0+256)
  4408  047F' 0800'              	movf	(?___fldiv+2)^(0+256),w
  4409  0480' 0080'              	movwf	(___fladd@a+2)^(0+256)
  4410  0481' 0800'              	movf	(?___fldiv+1)^(0+256),w
  4411  0482' 0080'              	movwf	(___fladd@a+1)^(0+256)
  4412  0483' 0800'              	movf	?___fldiv^(0+256),w
  4413  0484' 0080'              	movwf	___fladd@a^(0+256)
  4414  0485' 303F               	movlw	63
  4415  0486' 0080'              	movwf	(___fladd@b+3)^(0+256)
  4416  0487' 3000               	movlw	0
  4417  0488' 0080'              	movwf	(___fladd@b+2)^(0+256)
  4418  0489' 3000               	movlw	0
  4419  048A' 0080'              	movwf	(___fladd@b+1)^(0+256)
  4420  048B' 3000               	movlw	0
  4421  048C' 0080'              	movwf	___fladd@b^(0+256)
  4422  048D' 3180' 2000' 3180'  	fcall	___fladd
  4423  0490' 0022               	movlb	2	; select bank2
  4424  0491' 0800'              	movf	(?___fladd+3)^(0+256),w
  4425  0492' 0023               	movlb	3	; select bank3
  4426  0493' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  4427  0494' 0022               	movlb	2	; select bank2
  4428  0495' 0800'              	movf	(?___fladd+2)^(0+256),w
  4429  0496' 0023               	movlb	3	; select bank3
  4430  0497' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  4431  0498' 0022               	movlb	2	; select bank2
  4432  0499' 0800'              	movf	(?___fladd+1)^(0+256),w
  4433  049A' 0023               	movlb	3	; select bank3
  4434  049B' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  4435  049C' 0022               	movlb	2	; select bank2
  4436  049D' 0800'              	movf	?___fladd^(0+256),w
  4437  049E' 0023               	movlb	3	; select bank3
  4438  049F' 0080'              	movwf	___fltol@f1^(0+384)
  4439  04A0' 3180' 2000' 3180'  	fcall	___fltol
  4440  04A3' 0023               	movlb	3	; select bank3
  4441  04A4' 0800'              	movf	(?___fltol+1)^(0+384),w
  4442  04A5' 0021               	movlb	1	; select bank1
  4443  04A6' 0080'              	movwf	(_iref+1)^(0+128)
  4444  04A7' 0023               	movlb	3	; select bank3
  4445  04A8' 0800'              	movf	?___fltol^(0+384),w
  4446  04A9' 0021               	movlb	1	; select bank1
  4447  04AA' 0080'              	movwf	_iref^(0+128)
  4448  04AB'                    l5125:
  4449                           
  4450                           ;state_machine_b.c: 241:             if(basic_configuration.version == 0x02) timeout = (
      +                          uint16_t)(((float)capacity / (float)basic_configuration.const_current_char) * 3600 * 1.1
      +                          );
  4451  04AB' 3002               	movlw	2
  4452  04AC' 0024               	movlb	4	; select bank4
  4453  04AD' 0600'              	xorwf	_basic_configuration^(0+512),w
  4454  04AE' 1D03               	btfss	3,2
  4455  04AF' 2800'              	goto	u4931
  4456  04B0' 2800'              	goto	u4930
  4457  04B1'                    u4931:
  4458  04B1' 2800'              	goto	l5129
  4459  04B2'                    u4930:
  4460  04B2'                    l5127:
  4461  04B2' 0023               	movlb	3	; select bank3
  4462  04B3' 0800'              	movf	_capacity^(0+384),w
  4463  04B4' 0022               	movlb	2	; select bank2
  4464  04B5' 0080'              	movwf	___xxtofl@val^(0+256)
  4465  04B6' 0023               	movlb	3	; select bank3
  4466  04B7' 0800'              	movf	(_capacity+1)^(0+384),w
  4467  04B8' 0022               	movlb	2	; select bank2
  4468  04B9' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  4469  04BA' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  4470  04BB' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  4471  04BC' 3000               	movlw	0
  4472  04BD' 3180' 2000' 3180'  	fcall	___xxtofl
  4473  04C0' 0022               	movlb	2	; select bank2
  4474  04C1' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  4475  04C2' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  4476  04C3' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  4477  04C4' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  4478  04C5' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  4479  04C6' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  4480  04C7' 0800'              	movf	?___xxtofl^(0+256),w
  4481  04C8' 0080'              	movwf	___fldiv@b^(0+256)
  4482  04C9' 0024               	movlb	4	; select bank4
  4483  04CA' 0803'              	movf	(_basic_configuration^(0+512)+3),w
  4484  04CB' 0022               	movlb	2	; select bank2
  4485  04CC' 0080'              	movwf	___xxtofl@val^(0+256)
  4486  04CD' 0024               	movlb	4	; select bank4
  4487  04CE' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
  4488  04CF' 0022               	movlb	2	; select bank2
  4489  04D0' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  4490  04D1' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  4491  04D2' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  4492  04D3' 3000               	movlw	0
  4493  04D4' 3180' 2000' 3180'  	fcall	___xxtofl
  4494  04D7' 0022               	movlb	2	; select bank2
  4495  04D8' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  4496  04D9' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  4497  04DA' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  4498  04DB' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  4499  04DC' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  4500  04DD' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  4501  04DE' 0800'              	movf	?___xxtofl^(0+256),w
  4502  04DF' 0080'              	movwf	___fldiv@a^(0+256)
  4503  04E0' 3180' 2000' 3180'  	fcall	___fldiv
  4504  04E3' 0022               	movlb	2	; select bank2
  4505  04E4' 0800'              	movf	(?___fldiv+3)^(0+256),w
  4506  04E5' 0080'              	movwf	(___flmul@a+3)^(0+256)
  4507  04E6' 0800'              	movf	(?___fldiv+2)^(0+256),w
  4508  04E7' 0080'              	movwf	(___flmul@a+2)^(0+256)
  4509  04E8' 0800'              	movf	(?___fldiv+1)^(0+256),w
  4510  04E9' 0080'              	movwf	(___flmul@a+1)^(0+256)
  4511  04EA' 0800'              	movf	?___fldiv^(0+256),w
  4512  04EB' 0080'              	movwf	___flmul@a^(0+256)
  4513  04EC' 3045               	movlw	69
  4514  04ED' 0080'              	movwf	(___flmul@b+3)^(0+256)
  4515  04EE' 3061               	movlw	97
  4516  04EF' 0080'              	movwf	(___flmul@b+2)^(0+256)
  4517  04F0' 3000               	movlw	0
  4518  04F1' 0080'              	movwf	(___flmul@b+1)^(0+256)
  4519  04F2' 3000               	movlw	0
  4520  04F3' 0080'              	movwf	___flmul@b^(0+256)
  4521  04F4' 3180' 2000' 3180'  	fcall	___flmul
  4522  04F7' 0022               	movlb	2	; select bank2
  4523  04F8' 0800'              	movf	(?___flmul+3)^(0+256),w
  4524  04F9' 0023               	movlb	3	; select bank3
  4525  04FA' 0080'              	movwf	(_converter_settings$1611+3)^(0+384)
  4526  04FB' 0022               	movlb	2	; select bank2
  4527  04FC' 0800'              	movf	(?___flmul+2)^(0+256),w
  4528  04FD' 0023               	movlb	3	; select bank3
  4529  04FE' 0080'              	movwf	(_converter_settings$1611+2)^(0+384)
  4530  04FF' 0022               	movlb	2	; select bank2
  4531  0500' 0800'              	movf	(?___flmul+1)^(0+256),w
  4532  0501' 0023               	movlb	3	; select bank3
  4533  0502' 0080'              	movwf	(_converter_settings$1611+1)^(0+384)
  4534  0503' 0022               	movlb	2	; select bank2
  4535  0504' 0800'              	movf	?___flmul^(0+256),w
  4536  0505' 0023               	movlb	3	; select bank3
  4537  0506' 0080'              	movwf	_converter_settings$1611^(0+384)
  4538  0507' 0800'              	movf	(_converter_settings$1611+3)^(0+384),w
  4539  0508' 0022               	movlb	2	; select bank2
  4540  0509' 0080'              	movwf	(___flmul@a+3)^(0+256)
  4541  050A' 0023               	movlb	3	; select bank3
  4542  050B' 0800'              	movf	(_converter_settings$1611+2)^(0+384),w
  4543  050C' 0022               	movlb	2	; select bank2
  4544  050D' 0080'              	movwf	(___flmul@a+2)^(0+256)
  4545  050E' 0023               	movlb	3	; select bank3
  4546  050F' 0800'              	movf	(_converter_settings$1611+1)^(0+384),w
  4547  0510' 0022               	movlb	2	; select bank2
  4548  0511' 0080'              	movwf	(___flmul@a+1)^(0+256)
  4549  0512' 0023               	movlb	3	; select bank3
  4550  0513' 0800'              	movf	_converter_settings$1611^(0+384),w
  4551  0514' 0022               	movlb	2	; select bank2
  4552  0515' 0080'              	movwf	___flmul@a^(0+256)
  4553  0516' 303F               	movlw	63
  4554  0517' 0080'              	movwf	(___flmul@b+3)^(0+256)
  4555  0518' 308C               	movlw	140
  4556  0519' 0080'              	movwf	(___flmul@b+2)^(0+256)
  4557  051A' 30CC               	movlw	204
  4558  051B' 0080'              	movwf	(___flmul@b+1)^(0+256)
  4559  051C' 30CD               	movlw	205
  4560  051D' 0080'              	movwf	___flmul@b^(0+256)
  4561  051E' 3180' 2000' 3180'  	fcall	___flmul
  4562  0521' 0022               	movlb	2	; select bank2
  4563  0522' 0800'              	movf	(?___flmul+3)^(0+256),w
  4564  0523' 0023               	movlb	3	; select bank3
  4565  0524' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  4566  0525' 0022               	movlb	2	; select bank2
  4567  0526' 0800'              	movf	(?___flmul+2)^(0+256),w
  4568  0527' 0023               	movlb	3	; select bank3
  4569  0528' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  4570  0529' 0022               	movlb	2	; select bank2
  4571  052A' 0800'              	movf	(?___flmul+1)^(0+256),w
  4572  052B' 0023               	movlb	3	; select bank3
  4573  052C' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  4574  052D' 0022               	movlb	2	; select bank2
  4575  052E' 0800'              	movf	?___flmul^(0+256),w
  4576  052F' 0023               	movlb	3	; select bank3
  4577  0530' 0080'              	movwf	___fltol@f1^(0+384)
  4578  0531' 3180' 2000' 3180'  	fcall	___fltol
  4579  0534' 0023               	movlb	3	; select bank3
  4580  0535' 0800'              	movf	(?___fltol+1)^(0+384),w
  4581  0536' 0080'              	movwf	(_timeout+1)^(0+384)
  4582  0537' 0800'              	movf	?___fltol^(0+384),w
  4583  0538' 0080'              	movwf	_timeout^(0+384)
  4584  0539'                    l5129:
  4585                           
  4586                           ;state_machine_b.c: 242:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC4 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC4 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_char_kp; ki = CC_char_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
  4587  0539' 0020               	movlb	0	; select bank0
  4588  053A' 118E               	bcf	14,3	;volatile
  4589  053B'                    l5131:
  4590  053B' 120E               	bcf	14,4	;volatile
  4591  053C'                    l5133:
  4592  053C' 3005               	movlw	5
  4593  053D' 0023               	movlb	3	; select bank3
  4594  053E' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  4595  053F' 300F               	movlw	15
  4596  0540' 0080'              	movwf	??_converter_settings^(0+384)
  4597  0541' 30F1               	movlw	241
  4598  0542'                    u7597:
  4599  0542' 0B89               	decfsz	9,f
  4600  0543' 2800'              	goto	u7597
  4601  0544' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4602  0545' 2800'              	goto	u7597
  4603  0546' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  4604  0547' 2800'              	goto	u7597
  4605  0548'                    l5135:
  4606  0548' 0020               	movlb	0	; select bank0
  4607  0549' 160E               	bsf	14,4	;volatile
  4608  054A'                    l5137:
  4609  054A' 3005               	movlw	5
  4610  054B' 0023               	movlb	3	; select bank3
  4611  054C' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  4612  054D' 300F               	movlw	15
  4613  054E' 0080'              	movwf	??_converter_settings^(0+384)
  4614  054F' 30F1               	movlw	241
  4615  0550'                    u7607:
  4616  0550' 0B89               	decfsz	9,f
  4617  0551' 2800'              	goto	u7607
  4618  0552' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4619  0553' 2800'              	goto	u7607
  4620  0554' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  4621  0555' 2800'              	goto	u7607
  4622  0556'                    l5139:
  4623  0556' 0020               	movlb	0	; select bank0
  4624  0557' 120E               	bcf	14,4	;volatile
  4625  0558'                    l5141:
  4626  0558' 3005               	movlw	5
  4627  0559' 0023               	movlb	3	; select bank3
  4628  055A' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  4629  055B' 300F               	movlw	15
  4630  055C' 0080'              	movwf	??_converter_settings^(0+384)
  4631  055D' 30F1               	movlw	241
  4632  055E'                    u7617:
  4633  055E' 0B89               	decfsz	9,f
  4634  055F' 2800'              	goto	u7617
  4635  0560' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4636  0561' 2800'              	goto	u7617
  4637  0562' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  4638  0563' 2800'              	goto	u7617
  4639  0564'                    l5143:
  4640  0564' 0020               	movlb	0	; select bank0
  4641  0565' 168E               	bsf	14,5	;volatile
  4642  0566'                    l5145:
  4643  0566' 3005               	movlw	5
  4644  0567' 0023               	movlb	3	; select bank3
  4645  0568' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  4646  0569' 300F               	movlw	15
  4647  056A' 0080'              	movwf	??_converter_settings^(0+384)
  4648  056B' 30F1               	movlw	241
  4649  056C'                    u7627:
  4650  056C' 0B89               	decfsz	9,f
  4651  056D' 2800'              	goto	u7627
  4652  056E' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4653  056F' 2800'              	goto	u7627
  4654  0570' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  4655  0571' 2800'              	goto	u7627
  4656  0572'                    l5147:
  4657  0572' 0023               	movlb	3	; select bank3
  4658  0573' 0800'              	movf	(_CC_char_kp+3)^(0+384),w
  4659  0574' 0024               	movlb	4	; select bank4
  4660  0575' 0080'              	movwf	(_kp+3)^(0+512)
  4661  0576' 0023               	movlb	3	; select bank3
  4662  0577' 0800'              	movf	(_CC_char_kp+2)^(0+384),w
  4663  0578' 0024               	movlb	4	; select bank4
  4664  0579' 0080'              	movwf	(_kp+2)^(0+512)
  4665  057A' 0023               	movlb	3	; select bank3
  4666  057B' 0800'              	movf	(_CC_char_kp+1)^(0+384),w
  4667  057C' 0024               	movlb	4	; select bank4
  4668  057D' 0080'              	movwf	(_kp+1)^(0+512)
  4669  057E' 0023               	movlb	3	; select bank3
  4670  057F' 0800'              	movf	_CC_char_kp^(0+384),w
  4671  0580' 0024               	movlb	4	; select bank4
  4672  0581' 0080'              	movwf	_kp^(0+512)
  4673  0582'                    l5149:
  4674  0582' 0023               	movlb	3	; select bank3
  4675  0583' 0800'              	movf	(_CC_char_ki+3)^(0+384),w
  4676  0584' 0024               	movlb	4	; select bank4
  4677  0585' 0080'              	movwf	(_ki+3)^(0+512)
  4678  0586' 0023               	movlb	3	; select bank3
  4679  0587' 0800'              	movf	(_CC_char_ki+2)^(0+384),w
  4680  0588' 0024               	movlb	4	; select bank4
  4681  0589' 0080'              	movwf	(_ki+2)^(0+512)
  4682  058A' 0023               	movlb	3	; select bank3
  4683  058B' 0800'              	movf	(_CC_char_ki+1)^(0+384),w
  4684  058C' 0024               	movlb	4	; select bank4
  4685  058D' 0080'              	movwf	(_ki+1)^(0+512)
  4686  058E' 0023               	movlb	3	; select bank3
  4687  058F' 0800'              	movf	_CC_char_ki^(0+384),w
  4688  0590' 0024               	movlb	4	; select bank4
  4689  0591' 0080'              	movwf	_ki^(0+512)
  4690  0592' 0023               	movlb	3	; select bank3
  4691  0593' 0800'              	movf	_CC_char_disc_kd^(0+384),w
  4692  0594' 0080'              	movwf	??_converter_settings^(0+384)
  4693  0595' 0181'              	clrf	(??_converter_settings^(0+384)+1)
  4694  0596' 0182'              	clrf	(??_converter_settings^(0+384)+2)
  4695  0597' 0183'              	clrf	(??_converter_settings^(0+384)+3)
  4696  0598' 0800'              	movf	(??_converter_settings+3)^(0+384),w
  4697  0599' 0022               	movlb	2	; select bank2
  4698  059A' 0080'              	movwf	(___xxtofl@val+3)^(0+256)
  4699  059B' 0023               	movlb	3	; select bank3
  4700  059C' 0800'              	movf	(??_converter_settings+2)^(0+384),w
  4701  059D' 0022               	movlb	2	; select bank2
  4702  059E' 0080'              	movwf	(___xxtofl@val+2)^(0+256)
  4703  059F' 0023               	movlb	3	; select bank3
  4704  05A0' 0800'              	movf	(??_converter_settings+1)^(0+384),w
  4705  05A1' 0022               	movlb	2	; select bank2
  4706  05A2' 0080'              	movwf	(___xxtofl@val+1)^(0+256)
  4707  05A3' 0023               	movlb	3	; select bank3
  4708  05A4' 0800'              	movf	??_converter_settings^(0+384),w
  4709  05A5' 0022               	movlb	2	; select bank2
  4710  05A6' 0080'              	movwf	___xxtofl@val^(0+256)
  4711  05A7' 3000               	movlw	0
  4712  05A8' 3180' 2000' 3180'  	fcall	___xxtofl
  4713  05AB' 0022               	movlb	2	; select bank2
  4714  05AC' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  4715  05AD' 0024               	movlb	4	; select bank4
  4716  05AE' 0080'              	movwf	(_kd+3)^(0+512)
  4717  05AF' 0022               	movlb	2	; select bank2
  4718  05B0' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  4719  05B1' 0024               	movlb	4	; select bank4
  4720  05B2' 0080'              	movwf	(_kd+2)^(0+512)
  4721  05B3' 0022               	movlb	2	; select bank2
  4722  05B4' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  4723  05B5' 0024               	movlb	4	; select bank4
  4724  05B6' 0080'              	movwf	(_kd+1)^(0+512)
  4725  05B7' 0022               	movlb	2	; select bank2
  4726  05B8' 0800'              	movf	?___xxtofl^(0+256),w
  4727  05B9' 0024               	movlb	4	; select bank4
  4728  05BA' 0080'              	movwf	_kd^(0+512)
  4729  05BB'                    l5151:
  4730  05BB' 3000               	movlw	0
  4731  05BC' 0080'              	movwf	(_pidi+3)^(0+512)
  4732  05BD' 3000               	movlw	0
  4733  05BE' 0080'              	movwf	(_pidi+2)^(0+512)
  4734  05BF' 3000               	movlw	0
  4735  05C0' 0080'              	movwf	(_pidi+1)^(0+512)
  4736  05C1' 3000               	movlw	0
  4737  05C2' 0080'              	movwf	_pidi^(0+512)
  4738                           
  4739                           ;state_machine_b.c: 243:             break;
  4740  05C3' 2800'              	goto	l5157
  4741  05C4'                    l5155:
  4742  05C4' 0023               	movlb	3	; select bank3
  4743  05C5' 0800'              	movf	_state^(0+384),w
  4744  05C6' 0080'              	movwf	??_converter_settings^(0+384)
  4745  05C7' 0181'              	clrf	(??_converter_settings^(0+384)+1)
  4746                           
  4747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4748                           ; Switch size 1, requested type "simple"
  4749                           ; Number of cases is 1, Range of values is 0 to 0
  4750                           ; switch strategies available:
  4751                           ; Name         Instructions Cycles
  4752                           ; simple_byte            4     3 (average)
  4753                           ; direct_byte            8     6 (fixed)
  4754                           ; jumptable            260     6 (fixed)
  4755                           ;	Chosen strategy is simple_byte
  4756  05C8' 0800'              	movf	(??_converter_settings+1)^(0+384),w
  4757  05C9' 3A00               	xorlw	0	; case 0
  4758  05CA' 1903               	skipnz
  4759  05CB' 2800'              	goto	l7759
  4760  05CC' 2800'              	goto	l5157
  4761  05CD'                    l7759:
  4762                           
  4763                           ; Switch size 1, requested type "simple"
  4764                           ; Number of cases is 5, Range of values is 3 to 11
  4765                           ; switch strategies available:
  4766                           ; Name         Instructions Cycles
  4767                           ; simple_byte           16     9 (average)
  4768                           ; direct_byte           27     9 (fixed)
  4769                           ; jumptable            263     9 (fixed)
  4770                           ;	Chosen strategy is simple_byte
  4771  05CD' 0800'              	movf	??_converter_settings^(0+384),w
  4772  05CE' 3A03               	xorlw	3	; case 3
  4773  05CF' 1903               	skipnz
  4774  05D0' 2800'              	goto	l5019
  4775  05D1' 3A06               	xorlw	6	; case 5
  4776  05D2' 1903               	skipnz
  4777  05D3' 2800'              	goto	l5123
  4778  05D4' 3A02               	xorlw	2	; case 7
  4779  05D5' 1903               	skipnz
  4780  05D6' 2800'              	goto	l5049
  4781  05D7' 3A0E               	xorlw	14	; case 9
  4782  05D8' 1903               	skipnz
  4783  05D9' 2800'              	goto	l5093
  4784  05DA' 3A02               	xorlw	2	; case 11
  4785  05DB' 1903               	skipnz
  4786  05DC' 2800'              	goto	l5065
  4787  05DD' 2800'              	goto	l5157
  4788  05DE'                    l5157:
  4789                           
  4790                           ;state_machine_b.c: 245:     _delay((unsigned long)((10)*(32000000/4000.0)));
  4791  05DE' 3068               	movlw	104
  4792  05DF' 0023               	movlb	3	; select bank3
  4793  05E0' 0080'              	movwf	??_converter_settings^(0+384)
  4794  05E1' 30E4               	movlw	228
  4795  05E2'                    u7637:
  4796  05E2' 0B89               	decfsz	9,f
  4797  05E3' 2800'              	goto	u7637
  4798  05E4' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4799  05E5' 2800'              	goto	u7637
  4800  05E6' 0000               	nop
  4801  05E7'                    l5159:
  4802                           
  4803                           ;state_machine_b.c: 246:     second = 0;
  4804  05E7' 0023               	movlb	3	; select bank3
  4805  05E8' 0180'              	clrf	_second^(0+384)
  4806  05E9' 0180'              	clrf	(_second+1)^(0+384)
  4807  05EA'                    l5161:
  4808                           
  4809                           ;state_machine_b.c: 247:     conv = 1;
  4810  05EA' 0021               	movlb	1	; select bank1
  4811  05EB' 0180'              	clrf	_conv^(0+128)
  4812  05EC' 0A80'              	incf	_conv^(0+128),f
  4813  05ED'                    l896:
  4814  05ED' 0008               	return
  4815  05EE'                    __end_of_converter_settings:
  4816                           
  4817                           	psect	text7
  4818  0000'                    __ptext7:	
  4819 ;; *************** function _Cell_ON *****************
  4820 ;; Defined at:
  4821 ;;		line 508 in file "charger_discharger.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;		None
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  1    wreg      void 
  4828 ;; Registers used:
  4829 ;;		wreg, status,2, status,0
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4839 ;;Total ram usage:        1 bytes
  4840 ;; Hardware stack levels used: 1
  4841 ;; Hardware stack levels required when called: 5
  4842 ;; This function calls:
  4843 ;;		Nothing
  4844 ;; This function is called by:
  4845 ;;		_converter_settings
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849  0000'                    _Cell_ON:	
  4850                           ;psect for function _Cell_ON
  4851                           
  4852  0000'                    l4441:	
  4853                           ;incstack = 0
  4854                           ; Regs used in _Cell_ON: [wreg+status,2+status,0]
  4855                           
  4856                           
  4857                           ;charger_discharger.c: 510:     if (cell_count == 1)
  4858  0000' 0023               	movlb	3	; select bank3
  4859  0001' 0300'              	decf	_cell_count^(0+384),w
  4860  0002' 1D03               	btfss	3,2
  4861  0003' 2800'              	goto	u3751
  4862  0004' 2800'              	goto	u3750
  4863  0005'                    u3751:
  4864  0005' 2800'              	goto	l4453
  4865  0006'                    u3750:
  4866  0006'                    l4443:
  4867                           
  4868                           ;charger_discharger.c: 511:     {;charger_discharger.c: 512:         { RB2 = 1; };
  4869  0006' 0020               	movlb	0	; select bank0
  4870  0007' 150D               	bsf	13,2	;volatile
  4871  0008'                    l4445:
  4872                           
  4873                           ;charger_discharger.c: 513:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4874  0008' 3068               	movlw	104
  4875  0009' 0022               	movlb	2	; select bank2
  4876  000A' 0080'              	movwf	??_Cell_ON^(0+256)
  4877  000B' 30E4               	movlw	228
  4878  000C'                    u7647:
  4879  000C' 0B89               	decfsz	9,f
  4880  000D' 2800'              	goto	u7647
  4881  000E' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4882  000F' 2800'              	goto	u7647
  4883  0010' 0000               	nop
  4884  0011'                    l4447:
  4885                           
  4886                           ;charger_discharger.c: 514:         { RB3 = 0; };
  4887  0011' 0020               	movlb	0	; select bank0
  4888  0012' 118D               	bcf	13,3	;volatile
  4889                           
  4890                           ;charger_discharger.c: 515:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4891  0013' 3068               	movlw	104
  4892  0014' 0022               	movlb	2	; select bank2
  4893  0015' 0080'              	movwf	??_Cell_ON^(0+256)
  4894  0016' 30E4               	movlw	228
  4895  0017'                    u7657:
  4896  0017' 0B89               	decfsz	9,f
  4897  0018' 2800'              	goto	u7657
  4898  0019' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4899  001A' 2800'              	goto	u7657
  4900  001B' 0000               	nop
  4901  001C'                    l4449:
  4902                           
  4903                           ;charger_discharger.c: 516:         { RB4 = 0; };
  4904  001C' 0020               	movlb	0	; select bank0
  4905  001D' 120D               	bcf	13,4	;volatile
  4906                           
  4907                           ;charger_discharger.c: 517:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4908  001E' 3068               	movlw	104
  4909  001F' 0022               	movlb	2	; select bank2
  4910  0020' 0080'              	movwf	??_Cell_ON^(0+256)
  4911  0021' 30E4               	movlw	228
  4912  0022'                    u7667:
  4913  0022' 0B89               	decfsz	9,f
  4914  0023' 2800'              	goto	u7667
  4915  0024' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4916  0025' 2800'              	goto	u7667
  4917  0026' 0000               	nop
  4918  0027'                    l4451:
  4919                           
  4920                           ;charger_discharger.c: 518:         { RB5 = 0; };
  4921  0027' 0020               	movlb	0	; select bank0
  4922  0028' 128D               	bcf	13,5	;volatile
  4923                           
  4924                           ;charger_discharger.c: 519:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4925  0029' 3068               	movlw	104
  4926  002A' 0022               	movlb	2	; select bank2
  4927  002B' 0080'              	movwf	??_Cell_ON^(0+256)
  4928  002C' 30E4               	movlw	228
  4929  002D'                    u7677:
  4930  002D' 0B89               	decfsz	9,f
  4931  002E' 2800'              	goto	u7677
  4932  002F' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4933  0030' 2800'              	goto	u7677
  4934  0031' 0000               	nop
  4935                           
  4936                           ;charger_discharger.c: 520:     }else if (cell_count == 2)
  4937  0032' 2800'              	goto	l484
  4938  0033'                    l4453:
  4939  0033' 3002               	movlw	2
  4940  0034' 0600'              	xorwf	_cell_count^(0+384),w
  4941  0035' 1D03               	btfss	3,2
  4942  0036' 2800'              	goto	u3761
  4943  0037' 2800'              	goto	u3760
  4944  0038'                    u3761:
  4945  0038' 2800'              	goto	l4465
  4946  0039'                    u3760:
  4947  0039'                    l4455:
  4948                           
  4949                           ;charger_discharger.c: 521:     {;charger_discharger.c: 522:         { RB2 = 0; };
  4950  0039' 0020               	movlb	0	; select bank0
  4951  003A' 110D               	bcf	13,2	;volatile
  4952  003B'                    l4457:
  4953                           
  4954                           ;charger_discharger.c: 523:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4955  003B' 3068               	movlw	104
  4956  003C' 0022               	movlb	2	; select bank2
  4957  003D' 0080'              	movwf	??_Cell_ON^(0+256)
  4958  003E' 30E4               	movlw	228
  4959  003F'                    u7687:
  4960  003F' 0B89               	decfsz	9,f
  4961  0040' 2800'              	goto	u7687
  4962  0041' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4963  0042' 2800'              	goto	u7687
  4964  0043' 0000               	nop
  4965  0044'                    l4459:
  4966                           
  4967                           ;charger_discharger.c: 524:         { RB3 = 1; };
  4968  0044' 0020               	movlb	0	; select bank0
  4969  0045' 158D               	bsf	13,3	;volatile
  4970                           
  4971                           ;charger_discharger.c: 525:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4972  0046' 3068               	movlw	104
  4973  0047' 0022               	movlb	2	; select bank2
  4974  0048' 0080'              	movwf	??_Cell_ON^(0+256)
  4975  0049' 30E4               	movlw	228
  4976  004A'                    u7697:
  4977  004A' 0B89               	decfsz	9,f
  4978  004B' 2800'              	goto	u7697
  4979  004C' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4980  004D' 2800'              	goto	u7697
  4981  004E' 0000               	nop
  4982  004F' 2800'              	goto	l4449
  4983  0050'                    l4465:
  4984  0050' 3003               	movlw	3
  4985  0051' 0600'              	xorwf	_cell_count^(0+384),w
  4986  0052' 1D03               	btfss	3,2
  4987  0053' 2800'              	goto	u3771
  4988  0054' 2800'              	goto	u3770
  4989  0055'                    u3771:
  4990  0055' 2800'              	goto	l4477
  4991  0056'                    u3770:
  4992  0056'                    l4467:
  4993                           
  4994                           ;charger_discharger.c: 531:     {;charger_discharger.c: 532:         { RB2 = 0; };
  4995  0056' 0020               	movlb	0	; select bank0
  4996  0057' 110D               	bcf	13,2	;volatile
  4997  0058'                    l4469:
  4998                           
  4999                           ;charger_discharger.c: 533:         _delay((unsigned long)((10)*(32000000/4000.0)));
  5000  0058' 3068               	movlw	104
  5001  0059' 0022               	movlb	2	; select bank2
  5002  005A' 0080'              	movwf	??_Cell_ON^(0+256)
  5003  005B' 30E4               	movlw	228
  5004  005C'                    u7707:
  5005  005C' 0B89               	decfsz	9,f
  5006  005D' 2800'              	goto	u7707
  5007  005E' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  5008  005F' 2800'              	goto	u7707
  5009  0060' 0000               	nop
  5010  0061'                    l4471:
  5011                           
  5012                           ;charger_discharger.c: 534:         { RB3 = 0; };
  5013  0061' 0020               	movlb	0	; select bank0
  5014  0062' 118D               	bcf	13,3	;volatile
  5015                           
  5016                           ;charger_discharger.c: 535:         _delay((unsigned long)((10)*(32000000/4000.0)));
  5017  0063' 3068               	movlw	104
  5018  0064' 0022               	movlb	2	; select bank2
  5019  0065' 0080'              	movwf	??_Cell_ON^(0+256)
  5020  0066' 30E4               	movlw	228
  5021  0067'                    u7717:
  5022  0067' 0B89               	decfsz	9,f
  5023  0068' 2800'              	goto	u7717
  5024  0069' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  5025  006A' 2800'              	goto	u7717
  5026  006B' 0000               	nop
  5027  006C'                    l4473:
  5028                           
  5029                           ;charger_discharger.c: 536:         { RB4 = 1; };
  5030  006C' 0020               	movlb	0	; select bank0
  5031  006D' 160D               	bsf	13,4	;volatile
  5032                           
  5033                           ;charger_discharger.c: 537:         _delay((unsigned long)((10)*(32000000/4000.0)));
  5034  006E' 3068               	movlw	104
  5035  006F' 0022               	movlb	2	; select bank2
  5036  0070' 0080'              	movwf	??_Cell_ON^(0+256)
  5037  0071' 30E4               	movlw	228
  5038  0072'                    u7727:
  5039  0072' 0B89               	decfsz	9,f
  5040  0073' 2800'              	goto	u7727
  5041  0074' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  5042  0075' 2800'              	goto	u7727
  5043  0076' 0000               	nop
  5044  0077'                    l4475:
  5045                           
  5046                           ;charger_discharger.c: 538:         { RB5 = 0; };
  5047  0077' 0020               	movlb	0	; select bank0
  5048  0078' 128D               	bcf	13,5	;volatile
  5049                           
  5050                           ;charger_discharger.c: 539:     }else if (cell_count == 4)
  5051  0079' 2800'              	goto	l484
  5052  007A'                    l4477:
  5053  007A' 3004               	movlw	4
  5054  007B' 0600'              	xorwf	_cell_count^(0+384),w
  5055  007C' 1D03               	btfss	3,2
  5056  007D' 2800'              	goto	u3781
  5057  007E' 2800'              	goto	u3780
  5058  007F'                    u3781:
  5059  007F' 2800'              	goto	l480
  5060  0080'                    u3780:
  5061  0080'                    l4479:
  5062                           
  5063                           ;charger_discharger.c: 540:     {;charger_discharger.c: 541:         { RB2 = 0; };
  5064  0080' 0020               	movlb	0	; select bank0
  5065  0081' 110D               	bcf	13,2	;volatile
  5066  0082'                    l4481:
  5067                           
  5068                           ;charger_discharger.c: 542:         _delay((unsigned long)((10)*(32000000/4000.0)));
  5069  0082' 3068               	movlw	104
  5070  0083' 0022               	movlb	2	; select bank2
  5071  0084' 0080'              	movwf	??_Cell_ON^(0+256)
  5072  0085' 30E4               	movlw	228
  5073  0086'                    u7737:
  5074  0086' 0B89               	decfsz	9,f
  5075  0087' 2800'              	goto	u7737
  5076  0088' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  5077  0089' 2800'              	goto	u7737
  5078  008A' 0000               	nop
  5079  008B'                    l4483:
  5080                           
  5081                           ;charger_discharger.c: 543:         { RB3 = 0; };
  5082  008B' 0020               	movlb	0	; select bank0
  5083  008C' 118D               	bcf	13,3	;volatile
  5084                           
  5085                           ;charger_discharger.c: 544:         _delay((unsigned long)((10)*(32000000/4000.0)));
  5086  008D' 3068               	movlw	104
  5087  008E' 0022               	movlb	2	; select bank2
  5088  008F' 0080'              	movwf	??_Cell_ON^(0+256)
  5089  0090' 30E4               	movlw	228
  5090  0091'                    u7747:
  5091  0091' 0B89               	decfsz	9,f
  5092  0092' 2800'              	goto	u7747
  5093  0093' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  5094  0094' 2800'              	goto	u7747
  5095  0095' 0000               	nop
  5096  0096'                    l4485:
  5097                           
  5098                           ;charger_discharger.c: 545:         { RB4 = 0; };
  5099  0096' 0020               	movlb	0	; select bank0
  5100  0097' 120D               	bcf	13,4	;volatile
  5101                           
  5102                           ;charger_discharger.c: 546:         _delay((unsigned long)((10)*(32000000/4000.0)));
  5103  0098' 3068               	movlw	104
  5104  0099' 0022               	movlb	2	; select bank2
  5105  009A' 0080'              	movwf	??_Cell_ON^(0+256)
  5106  009B' 30E4               	movlw	228
  5107  009C'                    u7757:
  5108  009C' 0B89               	decfsz	9,f
  5109  009D' 2800'              	goto	u7757
  5110  009E' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  5111  009F' 2800'              	goto	u7757
  5112  00A0' 0000               	nop
  5113  00A1'                    l4487:
  5114                           
  5115                           ;charger_discharger.c: 547:         { RB5 = 1; };
  5116  00A1' 0020               	movlb	0	; select bank0
  5117  00A2' 168D               	bsf	13,5	;volatile
  5118                           
  5119                           ;charger_discharger.c: 548:         _delay((unsigned long)((10)*(32000000/4000.0)));
  5120  00A3' 3068               	movlw	104
  5121  00A4' 0022               	movlb	2	; select bank2
  5122  00A5' 0080'              	movwf	??_Cell_ON^(0+256)
  5123  00A6' 30E4               	movlw	228
  5124  00A7'                    u7767:
  5125  00A7' 0B89               	decfsz	9,f
  5126  00A8' 2800'              	goto	u7767
  5127  00A9' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  5128  00AA' 2800'              	goto	u7767
  5129  00AB' 0000               	nop
  5130  00AC' 2800'              	goto	l484
  5131  00AD'                    l480:
  5132  00AD'                    l484:
  5133  00AD' 0008               	return
  5134  00AE'                    __end_of_Cell_ON:
  5135                           
  5136                           	psect	text8
  5137  0000'                    __ptext8:	
  5138 ;; *************** function _fIDLE *****************
  5139 ;; Defined at:
  5140 ;;		line 55 in file "state_machine_b.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;		None
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;		None
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  1    wreg      void 
  5147 ;; Registers used:
  5148 ;;		wreg, status,2, status,0, pclath, cstack
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5158 ;;Total ram usage:        0 bytes
  5159 ;; Hardware stack levels used: 1
  5160 ;; Hardware stack levels required when called: 7
  5161 ;; This function calls:
  5162 ;;		_Cell_OFF
  5163 ;;		_set_DC
  5164 ;; This function is called by:
  5165 ;;		_state_machine
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169  0000'                    _fIDLE:	
  5170                           ;psect for function _fIDLE
  5171                           
  5172  0000'                    l5991:	
  5173                           ;incstack = 0
  5174                           ; Regs used in _fIDLE: [wreg+status,2+status,0+pclath+cstack]
  5175                           
  5176                           
  5177                           ;state_machine_b.c: 58:     if (start) { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50.
      +                          0; set_DC(); Cell_OFF();};
  5178  0000' 0021               	movlb	1	; select bank1
  5179  0001' 0800'              	movf	_start^(0+128),w
  5180  0002' 1903               	btfsc	3,2
  5181  0003' 2800'              	goto	u6541
  5182  0004' 2800'              	goto	u6540
  5183  0005'                    u6541:
  5184  0005' 2800'              	goto	l6005
  5185  0006'                    u6540:
  5186  0006'                    l5993:
  5187  0006' 0020               	movlb	0	; select bank0
  5188  0007' 118E               	bcf	14,3	;volatile
  5189  0008' 120E               	bcf	14,4	;volatile
  5190  0009'                    l5995:
  5191  0009' 0021               	movlb	1	; select bank1
  5192  000A' 0180'              	clrf	_conv^(0+128)
  5193  000B'                    l5997:
  5194  000B' 0020               	movlb	0	; select bank0
  5195  000C' 128E               	bcf	14,5	;volatile
  5196  000D'                    l5999:
  5197  000D' 3042               	movlw	66
  5198  000E' 0023               	movlb	3	; select bank3
  5199  000F' 0080'              	movwf	(_pidt+3)^(0+384)
  5200  0010' 3048               	movlw	72
  5201  0011' 0080'              	movwf	(_pidt+2)^(0+384)
  5202  0012' 3000               	movlw	0
  5203  0013' 0080'              	movwf	(_pidt+1)^(0+384)
  5204  0014' 3000               	movlw	0
  5205  0015' 0080'              	movwf	_pidt^(0+384)
  5206  0016'                    l6001:
  5207  0016' 3180' 2000' 3180'  	fcall	_set_DC
  5208  0019'                    l6003:
  5209  0019' 3180' 2000' 3180'  	fcall	_Cell_OFF
  5210  001C'                    l6005:
  5211                           
  5212                           ;state_machine_b.c: 59:     start = 0;
  5213  001C' 0021               	movlb	1	; select bank1
  5214  001D' 0180'              	clrf	_start^(0+128)
  5215  001E'                    l822:
  5216  001E' 0008               	return
  5217  001F'                    __end_of_fIDLE:
  5218                           
  5219                           	psect	text9
  5220  0000'                    __ptext9:	
  5221 ;; *************** function _fDISCHARGE *****************
  5222 ;; Defined at:
  5223 ;;		line 96 in file "state_machine_b.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;		None
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;		None
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  1    wreg      void 
  5230 ;; Registers used:
  5231 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5239 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  5240 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  5241 ;;Total ram usage:        2 bytes
  5242 ;; Hardware stack levels used: 1
  5243 ;; Hardware stack levels required when called: 7
  5244 ;; This function calls:
  5245 ;;		_Cell_OFF
  5246 ;;		___fladd
  5247 ;;		___fldiv
  5248 ;;		___flge
  5249 ;;		___flmul
  5250 ;;		___fltol
  5251 ;;		___xxtofl
  5252 ;;		_getTime
  5253 ;;		_set_DC
  5254 ;; This function is called by:
  5255 ;;		_state_machine
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259  0000'                    _fDISCHARGE:	
  5260                           ;psect for function _fDISCHARGE
  5261                           
  5262  0000'                    l6007:	
  5263                           ;incstack = 0
  5264                           ; Regs used in _fDISCHARGE: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5265                           
  5266                           
  5267                           ;state_machine_b.c: 98:     if ( (((uint16_t) ( ( ( (float)vavg * 5000.0 ) / 4096.0 ) + 
      +                          0.5 )) < basic_configuration.end_of_discharge) )
  5268  0000' 0023               	movlb	3	; select bank3
  5269  0001' 0800'              	movf	_vavg^(0+384),w
  5270  0002' 0022               	movlb	2	; select bank2
  5271  0003' 0080'              	movwf	___xxtofl@val^(0+256)
  5272  0004' 0023               	movlb	3	; select bank3
  5273  0005' 0800'              	movf	(_vavg+1)^(0+384),w
  5274  0006' 0022               	movlb	2	; select bank2
  5275  0007' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  5276  0008' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  5277  0009' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  5278  000A' 3000               	movlw	0
  5279  000B' 3180' 2000' 3180'  	fcall	___xxtofl
  5280  000E' 0022               	movlb	2	; select bank2
  5281  000F' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  5282  0010' 0080'              	movwf	(___flmul@a+3)^(0+256)
  5283  0011' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  5284  0012' 0080'              	movwf	(___flmul@a+2)^(0+256)
  5285  0013' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  5286  0014' 0080'              	movwf	(___flmul@a+1)^(0+256)
  5287  0015' 0800'              	movf	?___xxtofl^(0+256),w
  5288  0016' 0080'              	movwf	___flmul@a^(0+256)
  5289  0017' 3045               	movlw	69
  5290  0018' 0080'              	movwf	(___flmul@b+3)^(0+256)
  5291  0019' 309C               	movlw	156
  5292  001A' 0080'              	movwf	(___flmul@b+2)^(0+256)
  5293  001B' 3040               	movlw	64
  5294  001C' 0080'              	movwf	(___flmul@b+1)^(0+256)
  5295  001D' 3000               	movlw	0
  5296  001E' 0080'              	movwf	___flmul@b^(0+256)
  5297  001F' 3180' 2000' 3180'  	fcall	___flmul
  5298  0022' 0022               	movlb	2	; select bank2
  5299  0023' 0800'              	movf	(?___flmul+3)^(0+256),w
  5300  0024' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  5301  0025' 0800'              	movf	(?___flmul+2)^(0+256),w
  5302  0026' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  5303  0027' 0800'              	movf	(?___flmul+1)^(0+256),w
  5304  0028' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  5305  0029' 0800'              	movf	?___flmul^(0+256),w
  5306  002A' 0080'              	movwf	___fldiv@b^(0+256)
  5307  002B' 3045               	movlw	69
  5308  002C' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  5309  002D' 3080               	movlw	128
  5310  002E' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  5311  002F' 3000               	movlw	0
  5312  0030' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  5313  0031' 3000               	movlw	0
  5314  0032' 0080'              	movwf	___fldiv@a^(0+256)
  5315  0033' 3180' 2000' 3180'  	fcall	___fldiv
  5316  0036' 0022               	movlb	2	; select bank2
  5317  0037' 0800'              	movf	(?___fldiv+3)^(0+256),w
  5318  0038' 0080'              	movwf	(___fladd@a+3)^(0+256)
  5319  0039' 0800'              	movf	(?___fldiv+2)^(0+256),w
  5320  003A' 0080'              	movwf	(___fladd@a+2)^(0+256)
  5321  003B' 0800'              	movf	(?___fldiv+1)^(0+256),w
  5322  003C' 0080'              	movwf	(___fladd@a+1)^(0+256)
  5323  003D' 0800'              	movf	?___fldiv^(0+256),w
  5324  003E' 0080'              	movwf	___fladd@a^(0+256)
  5325  003F' 303F               	movlw	63
  5326  0040' 0080'              	movwf	(___fladd@b+3)^(0+256)
  5327  0041' 3000               	movlw	0
  5328  0042' 0080'              	movwf	(___fladd@b+2)^(0+256)
  5329  0043' 3000               	movlw	0
  5330  0044' 0080'              	movwf	(___fladd@b+1)^(0+256)
  5331  0045' 3000               	movlw	0
  5332  0046' 0080'              	movwf	___fladd@b^(0+256)
  5333  0047' 3180' 2000' 3180'  	fcall	___fladd
  5334  004A' 0022               	movlb	2	; select bank2
  5335  004B' 0800'              	movf	(?___fladd+3)^(0+256),w
  5336  004C' 0023               	movlb	3	; select bank3
  5337  004D' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  5338  004E' 0022               	movlb	2	; select bank2
  5339  004F' 0800'              	movf	(?___fladd+2)^(0+256),w
  5340  0050' 0023               	movlb	3	; select bank3
  5341  0051' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  5342  0052' 0022               	movlb	2	; select bank2
  5343  0053' 0800'              	movf	(?___fladd+1)^(0+256),w
  5344  0054' 0023               	movlb	3	; select bank3
  5345  0055' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  5346  0056' 0022               	movlb	2	; select bank2
  5347  0057' 0800'              	movf	?___fladd^(0+256),w
  5348  0058' 0023               	movlb	3	; select bank3
  5349  0059' 0080'              	movwf	___fltol@f1^(0+384)
  5350  005A' 3180' 2000' 3180'  	fcall	___fltol
  5351  005D' 0024               	movlb	4	; select bank4
  5352  005E' 080D'              	movf	((_basic_configuration+1)^(0+512)+13),w
  5353  005F' 0023               	movlb	3	; select bank3
  5354  0060' 0200'              	subwf	(?___fltol+1)^(0+384),w
  5355  0061' 1D03               	skipz
  5356  0062' 2800'              	goto	u6555
  5357  0063' 0024               	movlb	4	; select bank4
  5358  0064' 080D'              	movf	(_basic_configuration^(0+512)+13),w
  5359  0065' 0023               	movlb	3	; select bank3
  5360  0066' 0200'              	subwf	?___fltol^(0+384),w
  5361  0067'                    u6555:
  5362  0067' 1803               	skipnc
  5363  0068' 2800'              	goto	u6551
  5364  0069' 2800'              	goto	u6550
  5365  006A'                    u6551:
  5366  006A' 2800'              	goto	l6029
  5367  006B'                    u6550:
  5368  006B'                    l6009:
  5369                           
  5370                           ;state_machine_b.c: 99:     {;state_machine_b.c: 100:         if (second > 5)
  5371  006B' 3000               	movlw	0
  5372  006C' 0200'              	subwf	(_second+1)^(0+384),w
  5373  006D' 3006               	movlw	6
  5374  006E' 1903               	skipnz
  5375  006F' 0200'              	subwf	_second^(0+384),w
  5376  0070' 1C03               	skipc
  5377  0071' 2800'              	goto	u6561
  5378  0072' 2800'              	goto	u6560
  5379  0073'                    u6561:
  5380  0073' 2800'              	goto	l6029
  5381  0074'                    u6560:
  5382  0074'                    l6011:
  5383                           
  5384                           ;state_machine_b.c: 101:         {;state_machine_b.c: 102:             state = WAIT;
  5385  0074' 300D               	movlw	13
  5386  0075' 0080'              	movwf	_state^(0+384)
  5387  0076'                    l6013:
  5388                           
  5389                           ;state_machine_b.c: 103:             wait_count = getTime();
  5390  0076' 3180' 2000' 3180'  	fcall	_getTime
  5391  0079' 0023               	movlb	3	; select bank3
  5392  007A' 0080'              	movwf	??_fDISCHARGE^(0+384)
  5393  007B' 0181'              	clrf	(??_fDISCHARGE^(0+384)+1)
  5394  007C' 0800'              	movf	??_fDISCHARGE^(0+384),w
  5395  007D' 0080'              	movwf	_wait_count^(0+384)
  5396  007E' 0800'              	movf	(??_fDISCHARGE+1)^(0+384),w
  5397  007F' 0080'              	movwf	(_wait_count+1)^(0+384)
  5398  0080'                    l6015:
  5399                           
  5400                           ;state_machine_b.c: 104:             { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50.0;
      +                           set_DC(); Cell_OFF();};
  5401  0080' 0020               	movlb	0	; select bank0
  5402  0081' 118E               	bcf	14,3	;volatile
  5403  0082'                    l6017:
  5404  0082' 120E               	bcf	14,4	;volatile
  5405  0083'                    l6019:
  5406  0083' 0021               	movlb	1	; select bank1
  5407  0084' 0180'              	clrf	_conv^(0+128)
  5408  0085'                    l6021:
  5409  0085' 0020               	movlb	0	; select bank0
  5410  0086' 128E               	bcf	14,5	;volatile
  5411  0087'                    l6023:
  5412  0087' 3042               	movlw	66
  5413  0088' 0023               	movlb	3	; select bank3
  5414  0089' 0080'              	movwf	(_pidt+3)^(0+384)
  5415  008A' 3048               	movlw	72
  5416  008B' 0080'              	movwf	(_pidt+2)^(0+384)
  5417  008C' 3000               	movlw	0
  5418  008D' 0080'              	movwf	(_pidt+1)^(0+384)
  5419  008E' 3000               	movlw	0
  5420  008F' 0080'              	movwf	_pidt^(0+384)
  5421  0090'                    l6025:
  5422  0090' 3180' 2000' 3180'  	fcall	_set_DC
  5423  0093'                    l6027:
  5424  0093' 3180' 2000' 3180'  	fcall	_Cell_OFF
  5425  0096'                    l6029:
  5426                           
  5427                           ;state_machine_b.c: 107:     if (state == POSTDISCHARGE)
  5428  0096' 3009               	movlw	9
  5429  0097' 0023               	movlb	3	; select bank3
  5430  0098' 0600'              	xorwf	_state^(0+384),w
  5431  0099' 1D03               	btfss	3,2
  5432  009A' 2800'              	goto	u6571
  5433  009B' 2800'              	goto	u6570
  5434  009C'                    u6571:
  5435  009C' 2800'              	goto	l854
  5436  009D'                    u6570:
  5437  009D'                    l6031:
  5438                           
  5439                           ;state_machine_b.c: 108:     {;state_machine_b.c: 109:         if (basic_configuration.v
      +                          ersion == 1)
  5440  009D' 0024               	movlb	4	; select bank4
  5441  009E' 0300'              	decf	_basic_configuration^(0+512),w
  5442  009F' 1D03               	btfss	3,2
  5443  00A0' 2800'              	goto	u6581
  5444  00A1' 2800'              	goto	u6580
  5445  00A2'                    u6581:
  5446  00A2' 2800'              	goto	l6055
  5447  00A3'                    u6580:
  5448  00A3'                    l6033:
  5449                           
  5450                           ;state_machine_b.c: 110:         {;state_machine_b.c: 111:             if (qavg >= ( (ca
      +                          pacity) / 2 ) && (second >= 1))
  5451  00A3' 0023               	movlb	3	; select bank3
  5452  00A4' 0800'              	movf	(_qavg+3)^(0+384),w
  5453  00A5' 0022               	movlb	2	; select bank2
  5454  00A6' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  5455  00A7' 0023               	movlb	3	; select bank3
  5456  00A8' 0800'              	movf	(_qavg+2)^(0+384),w
  5457  00A9' 0022               	movlb	2	; select bank2
  5458  00AA' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  5459  00AB' 0023               	movlb	3	; select bank3
  5460  00AC' 0800'              	movf	(_qavg+1)^(0+384),w
  5461  00AD' 0022               	movlb	2	; select bank2
  5462  00AE' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  5463  00AF' 0023               	movlb	3	; select bank3
  5464  00B0' 0800'              	movf	_qavg^(0+384),w
  5465  00B1' 0022               	movlb	2	; select bank2
  5466  00B2' 0080'              	movwf	___flge@ff1^(0+256)
  5467  00B3' 0023               	movlb	3	; select bank3
  5468  00B4' 0800'              	movf	(_capacity+1)^(0+384),w
  5469  00B5' 0081'              	movwf	(??_fDISCHARGE^(0+384)+1)
  5470  00B6' 0800'              	movf	_capacity^(0+384),w
  5471  00B7' 0080'              	movwf	??_fDISCHARGE^(0+384)
  5472  00B8' 3681'              	lsrf	(??_fDISCHARGE^(0+384)+1),f
  5473  00B9' 0C80'              	rrf	??_fDISCHARGE^(0+384),f
  5474  00BA' 0800'              	movf	??_fDISCHARGE^(0+384),w
  5475  00BB' 0022               	movlb	2	; select bank2
  5476  00BC' 0080'              	movwf	___xxtofl@val^(0+256)
  5477  00BD' 0023               	movlb	3	; select bank3
  5478  00BE' 0800'              	movf	(??_fDISCHARGE+1)^(0+384),w
  5479  00BF' 0022               	movlb	2	; select bank2
  5480  00C0' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  5481  00C1' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  5482  00C2' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  5483  00C3' 3000               	movlw	0
  5484  00C4' 3180' 2000' 3180'  	fcall	___xxtofl
  5485  00C7' 0022               	movlb	2	; select bank2
  5486  00C8' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  5487  00C9' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  5488  00CA' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  5489  00CB' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  5490  00CC' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  5491  00CD' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  5492  00CE' 0800'              	movf	?___xxtofl^(0+256),w
  5493  00CF' 0080'              	movwf	___flge@ff2^(0+256)
  5494  00D0' 3180' 2000' 3180'  	fcall	___flge
  5495  00D3' 1C03               	btfss	3,0
  5496  00D4' 2800'              	goto	u6591
  5497  00D5' 2800'              	goto	u6590
  5498  00D6'                    u6591:
  5499  00D6' 2800'              	goto	l854
  5500  00D7'                    u6590:
  5501  00D7'                    l6035:
  5502  00D7' 0023               	movlb	3	; select bank3
  5503  00D8' 0800'              	movf	_second^(0+384),w
  5504  00D9' 0400'              	iorwf	(_second+1)^(0+384),w
  5505  00DA' 1903               	btfsc	3,2
  5506  00DB' 2800'              	goto	u6601
  5507  00DC' 2800'              	goto	u6600
  5508  00DD'                    u6601:
  5509  00DD' 2800'              	goto	l854
  5510  00DE'                    u6600:
  5511  00DE'                    l6037:
  5512                           
  5513                           ;state_machine_b.c: 112:             {;state_machine_b.c: 113:                 state = W
      +                          AIT;
  5514  00DE' 300D               	movlw	13
  5515  00DF' 0080'              	movwf	_state^(0+384)
  5516  00E0'                    l6039:
  5517                           
  5518                           ;state_machine_b.c: 114:                 wait_count = getTime();
  5519  00E0' 3180' 2000' 3180'  	fcall	_getTime
  5520  00E3' 0023               	movlb	3	; select bank3
  5521  00E4' 0080'              	movwf	??_fDISCHARGE^(0+384)
  5522  00E5' 0181'              	clrf	(??_fDISCHARGE^(0+384)+1)
  5523  00E6' 0800'              	movf	??_fDISCHARGE^(0+384),w
  5524  00E7' 0080'              	movwf	_wait_count^(0+384)
  5525  00E8' 0800'              	movf	(??_fDISCHARGE+1)^(0+384),w
  5526  00E9' 0080'              	movwf	(_wait_count+1)^(0+384)
  5527  00EA'                    l6041:
  5528                           
  5529                           ;state_machine_b.c: 115:                 { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 5
      +                          0.0; set_DC(); Cell_OFF();};
  5530  00EA' 0020               	movlb	0	; select bank0
  5531  00EB' 118E               	bcf	14,3	;volatile
  5532  00EC'                    l6043:
  5533  00EC' 120E               	bcf	14,4	;volatile
  5534  00ED'                    l6045:
  5535  00ED' 0021               	movlb	1	; select bank1
  5536  00EE' 0180'              	clrf	_conv^(0+128)
  5537  00EF'                    l6047:
  5538  00EF' 0020               	movlb	0	; select bank0
  5539  00F0' 128E               	bcf	14,5	;volatile
  5540  00F1'                    l6049:
  5541  00F1' 3042               	movlw	66
  5542  00F2' 0023               	movlb	3	; select bank3
  5543  00F3' 0080'              	movwf	(_pidt+3)^(0+384)
  5544  00F4' 3048               	movlw	72
  5545  00F5' 0080'              	movwf	(_pidt+2)^(0+384)
  5546  00F6' 3000               	movlw	0
  5547  00F7' 0080'              	movwf	(_pidt+1)^(0+384)
  5548  00F8' 3000               	movlw	0
  5549  00F9' 0080'              	movwf	_pidt^(0+384)
  5550  00FA'                    l6051:
  5551  00FA' 3180' 2000' 3180'  	fcall	_set_DC
  5552  00FD'                    l6053:
  5553  00FD' 3180' 2000' 3180'  	fcall	_Cell_OFF
  5554  0100' 2800'              	goto	l854
  5555  0101'                    l6055:
  5556  0101' 3002               	movlw	2
  5557  0102' 0600'              	xorwf	_basic_configuration^(0+512),w
  5558  0103' 1D03               	btfss	3,2
  5559  0104' 2800'              	goto	u6611
  5560  0105' 2800'              	goto	u6610
  5561  0106'                    u6611:
  5562  0106' 2800'              	goto	l854
  5563  0107'                    u6610:
  5564  0107'                    l6057:
  5565                           
  5566                           ;state_machine_b.c: 119:         {;state_machine_b.c: 120:             if (((uint16_t) (
      +                           ( ( (float)vavg * 5000.0 ) / 4096.0 ) + 0.5 )) <= basic_configuration.end_of_postdischa
      +                          rge || qavg >= ( (capacity) / 2 ) || (second >= timeout))
  5567  0107' 0023               	movlb	3	; select bank3
  5568  0108' 0800'              	movf	_vavg^(0+384),w
  5569  0109' 0022               	movlb	2	; select bank2
  5570  010A' 0080'              	movwf	___xxtofl@val^(0+256)
  5571  010B' 0023               	movlb	3	; select bank3
  5572  010C' 0800'              	movf	(_vavg+1)^(0+384),w
  5573  010D' 0022               	movlb	2	; select bank2
  5574  010E' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  5575  010F' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  5576  0110' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  5577  0111' 3000               	movlw	0
  5578  0112' 3180' 2000' 3180'  	fcall	___xxtofl
  5579  0115' 0022               	movlb	2	; select bank2
  5580  0116' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  5581  0117' 0080'              	movwf	(___flmul@a+3)^(0+256)
  5582  0118' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  5583  0119' 0080'              	movwf	(___flmul@a+2)^(0+256)
  5584  011A' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  5585  011B' 0080'              	movwf	(___flmul@a+1)^(0+256)
  5586  011C' 0800'              	movf	?___xxtofl^(0+256),w
  5587  011D' 0080'              	movwf	___flmul@a^(0+256)
  5588  011E' 3045               	movlw	69
  5589  011F' 0080'              	movwf	(___flmul@b+3)^(0+256)
  5590  0120' 309C               	movlw	156
  5591  0121' 0080'              	movwf	(___flmul@b+2)^(0+256)
  5592  0122' 3040               	movlw	64
  5593  0123' 0080'              	movwf	(___flmul@b+1)^(0+256)
  5594  0124' 3000               	movlw	0
  5595  0125' 0080'              	movwf	___flmul@b^(0+256)
  5596  0126' 3180' 2000' 3180'  	fcall	___flmul
  5597  0129' 0022               	movlb	2	; select bank2
  5598  012A' 0800'              	movf	(?___flmul+3)^(0+256),w
  5599  012B' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  5600  012C' 0800'              	movf	(?___flmul+2)^(0+256),w
  5601  012D' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  5602  012E' 0800'              	movf	(?___flmul+1)^(0+256),w
  5603  012F' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  5604  0130' 0800'              	movf	?___flmul^(0+256),w
  5605  0131' 0080'              	movwf	___fldiv@b^(0+256)
  5606  0132' 3045               	movlw	69
  5607  0133' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  5608  0134' 3080               	movlw	128
  5609  0135' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  5610  0136' 3000               	movlw	0
  5611  0137' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  5612  0138' 3000               	movlw	0
  5613  0139' 0080'              	movwf	___fldiv@a^(0+256)
  5614  013A' 3180' 2000' 3180'  	fcall	___fldiv
  5615  013D' 0022               	movlb	2	; select bank2
  5616  013E' 0800'              	movf	(?___fldiv+3)^(0+256),w
  5617  013F' 0080'              	movwf	(___fladd@a+3)^(0+256)
  5618  0140' 0800'              	movf	(?___fldiv+2)^(0+256),w
  5619  0141' 0080'              	movwf	(___fladd@a+2)^(0+256)
  5620  0142' 0800'              	movf	(?___fldiv+1)^(0+256),w
  5621  0143' 0080'              	movwf	(___fladd@a+1)^(0+256)
  5622  0144' 0800'              	movf	?___fldiv^(0+256),w
  5623  0145' 0080'              	movwf	___fladd@a^(0+256)
  5624  0146' 303F               	movlw	63
  5625  0147' 0080'              	movwf	(___fladd@b+3)^(0+256)
  5626  0148' 3000               	movlw	0
  5627  0149' 0080'              	movwf	(___fladd@b+2)^(0+256)
  5628  014A' 3000               	movlw	0
  5629  014B' 0080'              	movwf	(___fladd@b+1)^(0+256)
  5630  014C' 3000               	movlw	0
  5631  014D' 0080'              	movwf	___fladd@b^(0+256)
  5632  014E' 3180' 2000' 3180'  	fcall	___fladd
  5633  0151' 0022               	movlb	2	; select bank2
  5634  0152' 0800'              	movf	(?___fladd+3)^(0+256),w
  5635  0153' 0023               	movlb	3	; select bank3
  5636  0154' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  5637  0155' 0022               	movlb	2	; select bank2
  5638  0156' 0800'              	movf	(?___fladd+2)^(0+256),w
  5639  0157' 0023               	movlb	3	; select bank3
  5640  0158' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  5641  0159' 0022               	movlb	2	; select bank2
  5642  015A' 0800'              	movf	(?___fladd+1)^(0+256),w
  5643  015B' 0023               	movlb	3	; select bank3
  5644  015C' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  5645  015D' 0022               	movlb	2	; select bank2
  5646  015E' 0800'              	movf	?___fladd^(0+256),w
  5647  015F' 0023               	movlb	3	; select bank3
  5648  0160' 0080'              	movwf	___fltol@f1^(0+384)
  5649  0161' 3180' 2000' 3180'  	fcall	___fltol
  5650  0164' 0023               	movlb	3	; select bank3
  5651  0165' 0800'              	movf	(?___fltol+1)^(0+384),w
  5652  0166' 0024               	movlb	4	; select bank4
  5653  0167' 020F'              	subwf	((_basic_configuration+1)^(0+512)+15),w
  5654  0168' 1D03               	skipz
  5655  0169' 2800'              	goto	u6625
  5656  016A' 0023               	movlb	3	; select bank3
  5657  016B' 0800'              	movf	?___fltol^(0+384),w
  5658  016C' 0024               	movlb	4	; select bank4
  5659  016D' 020F'              	subwf	(_basic_configuration^(0+512)+15),w
  5660  016E'                    u6625:
  5661  016E' 1803               	skipnc
  5662  016F' 2800'              	goto	u6621
  5663  0170' 2800'              	goto	u6620
  5664  0171'                    u6621:
  5665  0171' 2800'              	goto	l6063
  5666  0172'                    u6620:
  5667  0172'                    l6059:
  5668  0172' 0023               	movlb	3	; select bank3
  5669  0173' 0800'              	movf	(_qavg+3)^(0+384),w
  5670  0174' 0022               	movlb	2	; select bank2
  5671  0175' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  5672  0176' 0023               	movlb	3	; select bank3
  5673  0177' 0800'              	movf	(_qavg+2)^(0+384),w
  5674  0178' 0022               	movlb	2	; select bank2
  5675  0179' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  5676  017A' 0023               	movlb	3	; select bank3
  5677  017B' 0800'              	movf	(_qavg+1)^(0+384),w
  5678  017C' 0022               	movlb	2	; select bank2
  5679  017D' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  5680  017E' 0023               	movlb	3	; select bank3
  5681  017F' 0800'              	movf	_qavg^(0+384),w
  5682  0180' 0022               	movlb	2	; select bank2
  5683  0181' 0080'              	movwf	___flge@ff1^(0+256)
  5684  0182' 0023               	movlb	3	; select bank3
  5685  0183' 0800'              	movf	(_capacity+1)^(0+384),w
  5686  0184' 0081'              	movwf	(??_fDISCHARGE^(0+384)+1)
  5687  0185' 0800'              	movf	_capacity^(0+384),w
  5688  0186' 0080'              	movwf	??_fDISCHARGE^(0+384)
  5689  0187' 3681'              	lsrf	(??_fDISCHARGE^(0+384)+1),f
  5690  0188' 0C80'              	rrf	??_fDISCHARGE^(0+384),f
  5691  0189' 0800'              	movf	??_fDISCHARGE^(0+384),w
  5692  018A' 0022               	movlb	2	; select bank2
  5693  018B' 0080'              	movwf	___xxtofl@val^(0+256)
  5694  018C' 0023               	movlb	3	; select bank3
  5695  018D' 0800'              	movf	(??_fDISCHARGE+1)^(0+384),w
  5696  018E' 0022               	movlb	2	; select bank2
  5697  018F' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  5698  0190' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  5699  0191' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  5700  0192' 3000               	movlw	0
  5701  0193' 3180' 2000' 3180'  	fcall	___xxtofl
  5702  0196' 0022               	movlb	2	; select bank2
  5703  0197' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  5704  0198' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  5705  0199' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  5706  019A' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  5707  019B' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  5708  019C' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  5709  019D' 0800'              	movf	?___xxtofl^(0+256),w
  5710  019E' 0080'              	movwf	___flge@ff2^(0+256)
  5711  019F' 3180' 2000' 3180'  	fcall	___flge
  5712  01A2' 1803               	btfsc	3,0
  5713  01A3' 2800'              	goto	u6631
  5714  01A4' 2800'              	goto	u6630
  5715  01A5'                    u6631:
  5716  01A5' 2800'              	goto	l6063
  5717  01A6'                    u6630:
  5718  01A6'                    l6061:
  5719  01A6' 0023               	movlb	3	; select bank3
  5720  01A7' 0800'              	movf	(_timeout+1)^(0+384),w
  5721  01A8' 0200'              	subwf	(_second+1)^(0+384),w
  5722  01A9' 1D03               	skipz
  5723  01AA' 2800'              	goto	u6645
  5724  01AB' 0800'              	movf	_timeout^(0+384),w
  5725  01AC' 0200'              	subwf	_second^(0+384),w
  5726  01AD'                    u6645:
  5727  01AD' 1C03               	skipc
  5728  01AE' 2800'              	goto	u6641
  5729  01AF' 2800'              	goto	u6640
  5730  01B0'                    u6641:
  5731  01B0' 2800'              	goto	l849
  5732  01B1'                    u6640:
  5733  01B1'                    l6063:
  5734                           
  5735                           ;state_machine_b.c: 121:             {;state_machine_b.c: 122:                 state = W
      +                          AIT;
  5736  01B1' 300D               	movlw	13
  5737  01B2' 0023               	movlb	3	; select bank3
  5738  01B3' 0080'              	movwf	_state^(0+384)
  5739  01B4'                    l6065:
  5740                           
  5741                           ;state_machine_b.c: 123:                 wait_count = getTime();
  5742  01B4' 3180' 2000' 3180'  	fcall	_getTime
  5743  01B7' 0023               	movlb	3	; select bank3
  5744  01B8' 0080'              	movwf	??_fDISCHARGE^(0+384)
  5745  01B9' 0181'              	clrf	(??_fDISCHARGE^(0+384)+1)
  5746  01BA' 0800'              	movf	??_fDISCHARGE^(0+384),w
  5747  01BB' 0080'              	movwf	_wait_count^(0+384)
  5748  01BC' 0800'              	movf	(??_fDISCHARGE+1)^(0+384),w
  5749  01BD' 0080'              	movwf	(_wait_count+1)^(0+384)
  5750  01BE'                    l6067:
  5751                           
  5752                           ;state_machine_b.c: 124:                 { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 5
      +                          0.0; set_DC(); Cell_OFF();};
  5753  01BE' 0020               	movlb	0	; select bank0
  5754  01BF' 118E               	bcf	14,3	;volatile
  5755  01C0'                    l6069:
  5756  01C0' 120E               	bcf	14,4	;volatile
  5757  01C1'                    l6071:
  5758  01C1' 0021               	movlb	1	; select bank1
  5759  01C2' 0180'              	clrf	_conv^(0+128)
  5760  01C3'                    l6073:
  5761  01C3' 0020               	movlb	0	; select bank0
  5762  01C4' 128E               	bcf	14,5	;volatile
  5763  01C5'                    l6075:
  5764  01C5' 3042               	movlw	66
  5765  01C6' 0023               	movlb	3	; select bank3
  5766  01C7' 0080'              	movwf	(_pidt+3)^(0+384)
  5767  01C8' 3048               	movlw	72
  5768  01C9' 0080'              	movwf	(_pidt+2)^(0+384)
  5769  01CA' 3000               	movlw	0
  5770  01CB' 0080'              	movwf	(_pidt+1)^(0+384)
  5771  01CC' 3000               	movlw	0
  5772  01CD' 0080'              	movwf	_pidt^(0+384)
  5773  01CE' 2800'              	goto	l6051
  5774  01CF'                    l849:
  5775  01CF'                    l854:
  5776  01CF' 0008               	return
  5777  01D0'                    __end_of_fDISCHARGE:
  5778                           
  5779                           	psect	text10
  5780  0000'                    __ptext10:	
  5781 ;; *************** function _fDC_res *****************
  5782 ;; Defined at:
  5783 ;;		line 130 in file "state_machine_b.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;		None
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;		None
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  1    wreg      void 
  5790 ;; Registers used:
  5791 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5798 ;;      Locals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  5799 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  5800 ;;      Totals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
  5801 ;;Total ram usage:        8 bytes
  5802 ;; Hardware stack levels used: 1
  5803 ;; Hardware stack levels required when called: 7
  5804 ;; This function calls:
  5805 ;;		_Cell_OFF
  5806 ;;		___fladd
  5807 ;;		___fldiv
  5808 ;;		___flmul
  5809 ;;		___fltol
  5810 ;;		___xxtofl
  5811 ;;		_getTime
  5812 ;;		_set_DC
  5813 ;; This function is called by:
  5814 ;;		_state_machine
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818  0000'                    _fDC_res:	
  5819                           ;psect for function _fDC_res
  5820                           
  5821  0000'                    l6163:	
  5822                           ;incstack = 0
  5823                           ; Regs used in _fDC_res: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5824                           
  5825                           
  5826                           ;state_machine_b.c: 134:     if (dc_res_count == 202)
  5827  0000' 30CA               	movlw	202
  5828  0001' 0023               	movlb	3	; select bank3
  5829  0002' 0600'              	xorwf	_dc_res_count^(0+384),w
  5830  0003' 1D03               	btfss	3,2
  5831  0004' 2800'              	goto	u6791
  5832  0005' 2800'              	goto	u6790
  5833  0006'                    u6791:
  5834  0006' 2800'              	goto	l6167
  5835  0007'                    u6790:
  5836  0007'                    l6165:
  5837                           
  5838                           ;state_machine_b.c: 135:     {;state_machine_b.c: 136:         iref = (uint16_t) ( ( ( c
      +                          apacity * 4096.0 ) / (5000.0 * 2.5) ) * 0.75 + 0.5 );
  5839  0007' 0800'              	movf	_capacity^(0+384),w
  5840  0008' 0022               	movlb	2	; select bank2
  5841  0009' 0080'              	movwf	___xxtofl@val^(0+256)
  5842  000A' 0023               	movlb	3	; select bank3
  5843  000B' 0800'              	movf	(_capacity+1)^(0+384),w
  5844  000C' 0022               	movlb	2	; select bank2
  5845  000D' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  5846  000E' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  5847  000F' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  5848  0010' 3000               	movlw	0
  5849  0011' 3180' 2000' 3180'  	fcall	___xxtofl
  5850  0014' 0022               	movlb	2	; select bank2
  5851  0015' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  5852  0016' 0080'              	movwf	(___flmul@a+3)^(0+256)
  5853  0017' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  5854  0018' 0080'              	movwf	(___flmul@a+2)^(0+256)
  5855  0019' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  5856  001A' 0080'              	movwf	(___flmul@a+1)^(0+256)
  5857  001B' 0800'              	movf	?___xxtofl^(0+256),w
  5858  001C' 0080'              	movwf	___flmul@a^(0+256)
  5859  001D' 3045               	movlw	69
  5860  001E' 0080'              	movwf	(___flmul@b+3)^(0+256)
  5861  001F' 3080               	movlw	128
  5862  0020' 0080'              	movwf	(___flmul@b+2)^(0+256)
  5863  0021' 3000               	movlw	0
  5864  0022' 0080'              	movwf	(___flmul@b+1)^(0+256)
  5865  0023' 3000               	movlw	0
  5866  0024' 0080'              	movwf	___flmul@b^(0+256)
  5867  0025' 3180' 2000' 3180'  	fcall	___flmul
  5868  0028' 0022               	movlb	2	; select bank2
  5869  0029' 0800'              	movf	(?___flmul+3)^(0+256),w
  5870  002A' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  5871  002B' 0800'              	movf	(?___flmul+2)^(0+256),w
  5872  002C' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  5873  002D' 0800'              	movf	(?___flmul+1)^(0+256),w
  5874  002E' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  5875  002F' 0800'              	movf	?___flmul^(0+256),w
  5876  0030' 0080'              	movwf	___fldiv@b^(0+256)
  5877  0031' 3046               	movlw	70
  5878  0032' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  5879  0033' 3043               	movlw	67
  5880  0034' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  5881  0035' 3050               	movlw	80
  5882  0036' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  5883  0037' 3000               	movlw	0
  5884  0038' 0080'              	movwf	___fldiv@a^(0+256)
  5885  0039' 3180' 2000' 3180'  	fcall	___fldiv
  5886  003C' 0022               	movlb	2	; select bank2
  5887  003D' 0800'              	movf	(?___fldiv+3)^(0+256),w
  5888  003E' 0023               	movlb	3	; select bank3
  5889  003F' 0080'              	movwf	(_fDC_res$1610+3)^(0+384)
  5890  0040' 0022               	movlb	2	; select bank2
  5891  0041' 0800'              	movf	(?___fldiv+2)^(0+256),w
  5892  0042' 0023               	movlb	3	; select bank3
  5893  0043' 0080'              	movwf	(_fDC_res$1610+2)^(0+384)
  5894  0044' 0022               	movlb	2	; select bank2
  5895  0045' 0800'              	movf	(?___fldiv+1)^(0+256),w
  5896  0046' 0023               	movlb	3	; select bank3
  5897  0047' 0080'              	movwf	(_fDC_res$1610+1)^(0+384)
  5898  0048' 0022               	movlb	2	; select bank2
  5899  0049' 0800'              	movf	?___fldiv^(0+256),w
  5900  004A' 0023               	movlb	3	; select bank3
  5901  004B' 0080'              	movwf	_fDC_res$1610^(0+384)
  5902                           
  5903                           ;state_machine_b.c: 135:     {;state_machine_b.c: 136:         iref = (uint16_t) ( ( ( c
      +                          apacity * 4096.0 ) / (5000.0 * 2.5) ) * 0.75 + 0.5 );
  5904  004C' 0800'              	movf	(_fDC_res$1610+3)^(0+384),w
  5905  004D' 0022               	movlb	2	; select bank2
  5906  004E' 0080'              	movwf	(___flmul@a+3)^(0+256)
  5907  004F' 0023               	movlb	3	; select bank3
  5908  0050' 0800'              	movf	(_fDC_res$1610+2)^(0+384),w
  5909  0051' 0022               	movlb	2	; select bank2
  5910  0052' 0080'              	movwf	(___flmul@a+2)^(0+256)
  5911  0053' 0023               	movlb	3	; select bank3
  5912  0054' 0800'              	movf	(_fDC_res$1610+1)^(0+384),w
  5913  0055' 0022               	movlb	2	; select bank2
  5914  0056' 0080'              	movwf	(___flmul@a+1)^(0+256)
  5915  0057' 0023               	movlb	3	; select bank3
  5916  0058' 0800'              	movf	_fDC_res$1610^(0+384),w
  5917  0059' 0022               	movlb	2	; select bank2
  5918  005A' 0080'              	movwf	___flmul@a^(0+256)
  5919  005B' 303F               	movlw	63
  5920  005C' 0080'              	movwf	(___flmul@b+3)^(0+256)
  5921  005D' 3040               	movlw	64
  5922  005E' 0080'              	movwf	(___flmul@b+2)^(0+256)
  5923  005F' 3000               	movlw	0
  5924  0060' 0080'              	movwf	(___flmul@b+1)^(0+256)
  5925  0061' 3000               	movlw	0
  5926  0062' 0080'              	movwf	___flmul@b^(0+256)
  5927  0063' 3180' 2000' 3180'  	fcall	___flmul
  5928  0066' 0022               	movlb	2	; select bank2
  5929  0067' 0800'              	movf	(?___flmul+3)^(0+256),w
  5930  0068' 0080'              	movwf	(___fladd@a+3)^(0+256)
  5931  0069' 0800'              	movf	(?___flmul+2)^(0+256),w
  5932  006A' 0080'              	movwf	(___fladd@a+2)^(0+256)
  5933  006B' 0800'              	movf	(?___flmul+1)^(0+256),w
  5934  006C' 0080'              	movwf	(___fladd@a+1)^(0+256)
  5935  006D' 0800'              	movf	?___flmul^(0+256),w
  5936  006E' 0080'              	movwf	___fladd@a^(0+256)
  5937  006F' 303F               	movlw	63
  5938  0070' 0080'              	movwf	(___fladd@b+3)^(0+256)
  5939  0071' 3000               	movlw	0
  5940  0072' 0080'              	movwf	(___fladd@b+2)^(0+256)
  5941  0073' 3000               	movlw	0
  5942  0074' 0080'              	movwf	(___fladd@b+1)^(0+256)
  5943  0075' 3000               	movlw	0
  5944  0076' 0080'              	movwf	___fladd@b^(0+256)
  5945  0077' 3180' 2000' 3180'  	fcall	___fladd
  5946  007A' 0022               	movlb	2	; select bank2
  5947  007B' 0800'              	movf	(?___fladd+3)^(0+256),w
  5948  007C' 0023               	movlb	3	; select bank3
  5949  007D' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  5950  007E' 0022               	movlb	2	; select bank2
  5951  007F' 0800'              	movf	(?___fladd+2)^(0+256),w
  5952  0080' 0023               	movlb	3	; select bank3
  5953  0081' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  5954  0082' 0022               	movlb	2	; select bank2
  5955  0083' 0800'              	movf	(?___fladd+1)^(0+256),w
  5956  0084' 0023               	movlb	3	; select bank3
  5957  0085' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  5958  0086' 0022               	movlb	2	; select bank2
  5959  0087' 0800'              	movf	?___fladd^(0+256),w
  5960  0088' 0023               	movlb	3	; select bank3
  5961  0089' 0080'              	movwf	___fltol@f1^(0+384)
  5962  008A' 3180' 2000' 3180'  	fcall	___fltol
  5963  008D' 0023               	movlb	3	; select bank3
  5964  008E' 0800'              	movf	(?___fltol+1)^(0+384),w
  5965  008F' 0021               	movlb	1	; select bank1
  5966  0090' 0080'              	movwf	(_iref+1)^(0+128)
  5967  0091' 0023               	movlb	3	; select bank3
  5968  0092' 0800'              	movf	?___fltol^(0+384),w
  5969  0093' 0021               	movlb	1	; select bank1
  5970  0094' 0080'              	movwf	_iref^(0+128)
  5971  0095'                    l6167:
  5972                           
  5973                           ;state_machine_b.c: 138:     if (dc_res_count == 100)
  5974  0095' 3064               	movlw	100
  5975  0096' 0023               	movlb	3	; select bank3
  5976  0097' 0600'              	xorwf	_dc_res_count^(0+384),w
  5977  0098' 1D03               	btfss	3,2
  5978  0099' 2800'              	goto	u6801
  5979  009A' 2800'              	goto	u6800
  5980  009B'                    u6801:
  5981  009B' 2800'              	goto	l6171
  5982  009C'                    u6800:
  5983  009C'                    l6169:
  5984                           
  5985                           ;state_machine_b.c: 139:     {;state_machine_b.c: 140:         iref = 0;
  5986  009C' 0021               	movlb	1	; select bank1
  5987  009D' 0180'              	clrf	_iref^(0+128)
  5988  009E' 0180'              	clrf	(_iref+1)^(0+128)
  5989  009F'                    l6171:
  5990                           
  5991                           ;state_machine_b.c: 142:     if (dc_res_count == 60)
  5992  009F' 303C               	movlw	60
  5993  00A0' 0023               	movlb	3	; select bank3
  5994  00A1' 0600'              	xorwf	_dc_res_count^(0+384),w
  5995  00A2' 1D03               	btfss	3,2
  5996  00A3' 2800'              	goto	u6811
  5997  00A4' 2800'              	goto	u6810
  5998  00A5'                    u6811:
  5999  00A5' 2800'              	goto	l6199
  6000  00A6'                    u6810:
  6001  00A6'                    l6173:
  6002                           
  6003                           ;state_machine_b.c: 143:     {;state_machine_b.c: 144:         iref = (uint16_t) ( ( ( c
      +                          apacity * 4096.0 ) / (5000.0 * 2.5) ) * 0.75 + 0.5 );
  6004  00A6' 0800'              	movf	_capacity^(0+384),w
  6005  00A7' 0022               	movlb	2	; select bank2
  6006  00A8' 0080'              	movwf	___xxtofl@val^(0+256)
  6007  00A9' 0023               	movlb	3	; select bank3
  6008  00AA' 0800'              	movf	(_capacity+1)^(0+384),w
  6009  00AB' 0022               	movlb	2	; select bank2
  6010  00AC' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  6011  00AD' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  6012  00AE' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  6013  00AF' 3000               	movlw	0
  6014  00B0' 3180' 2000' 3180'  	fcall	___xxtofl
  6015  00B3' 0022               	movlb	2	; select bank2
  6016  00B4' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  6017  00B5' 0080'              	movwf	(___flmul@a+3)^(0+256)
  6018  00B6' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  6019  00B7' 0080'              	movwf	(___flmul@a+2)^(0+256)
  6020  00B8' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  6021  00B9' 0080'              	movwf	(___flmul@a+1)^(0+256)
  6022  00BA' 0800'              	movf	?___xxtofl^(0+256),w
  6023  00BB' 0080'              	movwf	___flmul@a^(0+256)
  6024  00BC' 3045               	movlw	69
  6025  00BD' 0080'              	movwf	(___flmul@b+3)^(0+256)
  6026  00BE' 3080               	movlw	128
  6027  00BF' 0080'              	movwf	(___flmul@b+2)^(0+256)
  6028  00C0' 3000               	movlw	0
  6029  00C1' 0080'              	movwf	(___flmul@b+1)^(0+256)
  6030  00C2' 3000               	movlw	0
  6031  00C3' 0080'              	movwf	___flmul@b^(0+256)
  6032  00C4' 3180' 2000' 3180'  	fcall	___flmul
  6033  00C7' 0022               	movlb	2	; select bank2
  6034  00C8' 0800'              	movf	(?___flmul+3)^(0+256),w
  6035  00C9' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  6036  00CA' 0800'              	movf	(?___flmul+2)^(0+256),w
  6037  00CB' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  6038  00CC' 0800'              	movf	(?___flmul+1)^(0+256),w
  6039  00CD' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  6040  00CE' 0800'              	movf	?___flmul^(0+256),w
  6041  00CF' 0080'              	movwf	___fldiv@b^(0+256)
  6042  00D0' 3046               	movlw	70
  6043  00D1' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  6044  00D2' 3043               	movlw	67
  6045  00D3' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  6046  00D4' 3050               	movlw	80
  6047  00D5' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  6048  00D6' 3000               	movlw	0
  6049  00D7' 0080'              	movwf	___fldiv@a^(0+256)
  6050  00D8' 3180' 2000' 3180'  	fcall	___fldiv
  6051  00DB' 0022               	movlb	2	; select bank2
  6052  00DC' 0800'              	movf	(?___fldiv+3)^(0+256),w
  6053  00DD' 0023               	movlb	3	; select bank3
  6054  00DE' 0080'              	movwf	(_fDC_res$1610+3)^(0+384)
  6055  00DF' 0022               	movlb	2	; select bank2
  6056  00E0' 0800'              	movf	(?___fldiv+2)^(0+256),w
  6057  00E1' 0023               	movlb	3	; select bank3
  6058  00E2' 0080'              	movwf	(_fDC_res$1610+2)^(0+384)
  6059  00E3' 0022               	movlb	2	; select bank2
  6060  00E4' 0800'              	movf	(?___fldiv+1)^(0+256),w
  6061  00E5' 0023               	movlb	3	; select bank3
  6062  00E6' 0080'              	movwf	(_fDC_res$1610+1)^(0+384)
  6063  00E7' 0022               	movlb	2	; select bank2
  6064  00E8' 0800'              	movf	?___fldiv^(0+256),w
  6065  00E9' 0023               	movlb	3	; select bank3
  6066  00EA' 0080'              	movwf	_fDC_res$1610^(0+384)
  6067                           
  6068                           ;state_machine_b.c: 143:     {;state_machine_b.c: 144:         iref = (uint16_t) ( ( ( c
      +                          apacity * 4096.0 ) / (5000.0 * 2.5) ) * 0.75 + 0.5 );
  6069  00EB' 0800'              	movf	(_fDC_res$1610+3)^(0+384),w
  6070  00EC' 0022               	movlb	2	; select bank2
  6071  00ED' 0080'              	movwf	(___flmul@a+3)^(0+256)
  6072  00EE' 0023               	movlb	3	; select bank3
  6073  00EF' 0800'              	movf	(_fDC_res$1610+2)^(0+384),w
  6074  00F0' 0022               	movlb	2	; select bank2
  6075  00F1' 0080'              	movwf	(___flmul@a+2)^(0+256)
  6076  00F2' 0023               	movlb	3	; select bank3
  6077  00F3' 0800'              	movf	(_fDC_res$1610+1)^(0+384),w
  6078  00F4' 0022               	movlb	2	; select bank2
  6079  00F5' 0080'              	movwf	(___flmul@a+1)^(0+256)
  6080  00F6' 0023               	movlb	3	; select bank3
  6081  00F7' 0800'              	movf	_fDC_res$1610^(0+384),w
  6082  00F8' 0022               	movlb	2	; select bank2
  6083  00F9' 0080'              	movwf	___flmul@a^(0+256)
  6084  00FA' 303F               	movlw	63
  6085  00FB' 0080'              	movwf	(___flmul@b+3)^(0+256)
  6086  00FC' 3040               	movlw	64
  6087  00FD' 0080'              	movwf	(___flmul@b+2)^(0+256)
  6088  00FE' 3000               	movlw	0
  6089  00FF' 0080'              	movwf	(___flmul@b+1)^(0+256)
  6090  0100' 3000               	movlw	0
  6091  0101' 0080'              	movwf	___flmul@b^(0+256)
  6092  0102' 3180' 2000' 3180'  	fcall	___flmul
  6093  0105' 0022               	movlb	2	; select bank2
  6094  0106' 0800'              	movf	(?___flmul+3)^(0+256),w
  6095  0107' 0080'              	movwf	(___fladd@a+3)^(0+256)
  6096  0108' 0800'              	movf	(?___flmul+2)^(0+256),w
  6097  0109' 0080'              	movwf	(___fladd@a+2)^(0+256)
  6098  010A' 0800'              	movf	(?___flmul+1)^(0+256),w
  6099  010B' 0080'              	movwf	(___fladd@a+1)^(0+256)
  6100  010C' 0800'              	movf	?___flmul^(0+256),w
  6101  010D' 0080'              	movwf	___fladd@a^(0+256)
  6102  010E' 303F               	movlw	63
  6103  010F' 0080'              	movwf	(___fladd@b+3)^(0+256)
  6104  0110' 3000               	movlw	0
  6105  0111' 0080'              	movwf	(___fladd@b+2)^(0+256)
  6106  0112' 3000               	movlw	0
  6107  0113' 0080'              	movwf	(___fladd@b+1)^(0+256)
  6108  0114' 3000               	movlw	0
  6109  0115' 0080'              	movwf	___fladd@b^(0+256)
  6110  0116' 3180' 2000' 3180'  	fcall	___fladd
  6111  0119' 0022               	movlb	2	; select bank2
  6112  011A' 0800'              	movf	(?___fladd+3)^(0+256),w
  6113  011B' 0023               	movlb	3	; select bank3
  6114  011C' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  6115  011D' 0022               	movlb	2	; select bank2
  6116  011E' 0800'              	movf	(?___fladd+2)^(0+256),w
  6117  011F' 0023               	movlb	3	; select bank3
  6118  0120' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  6119  0121' 0022               	movlb	2	; select bank2
  6120  0122' 0800'              	movf	(?___fladd+1)^(0+256),w
  6121  0123' 0023               	movlb	3	; select bank3
  6122  0124' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  6123  0125' 0022               	movlb	2	; select bank2
  6124  0126' 0800'              	movf	?___fladd^(0+256),w
  6125  0127' 0023               	movlb	3	; select bank3
  6126  0128' 0080'              	movwf	___fltol@f1^(0+384)
  6127  0129' 3180' 2000' 3180'  	fcall	___fltol
  6128  012C' 0023               	movlb	3	; select bank3
  6129  012D' 0800'              	movf	(?___fltol+1)^(0+384),w
  6130  012E' 0021               	movlb	1	; select bank1
  6131  012F' 0080'              	movwf	(_iref+1)^(0+128)
  6132  0130' 0023               	movlb	3	; select bank3
  6133  0131' 0800'              	movf	?___fltol^(0+384),w
  6134  0132' 0021               	movlb	1	; select bank1
  6135  0133' 0080'              	movwf	_iref^(0+128)
  6136  0134'                    l6175:
  6137                           
  6138                           ;state_machine_b.c: 145:         { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(32000
      +                          000/4000.0))); RC4 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC4 = 0; _dela
      +                          y((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(3200
      +                          0000/4000.0))); kp = CC_char_kp; ki = CC_char_ki; kd = (float) (CC_char_disc_kd); pidi =
      +                           0.0;};
  6139  0134' 0020               	movlb	0	; select bank0
  6140  0135' 118E               	bcf	14,3	;volatile
  6141  0136'                    l6177:
  6142  0136' 120E               	bcf	14,4	;volatile
  6143  0137'                    l6179:
  6144  0137' 3005               	movlw	5
  6145  0138' 0023               	movlb	3	; select bank3
  6146  0139' 0081'              	movwf	(??_fDC_res^(0+384)+1)
  6147  013A' 300F               	movlw	15
  6148  013B' 0080'              	movwf	??_fDC_res^(0+384)
  6149  013C' 30F1               	movlw	241
  6150  013D'                    u7777:
  6151  013D' 0B89               	decfsz	9,f
  6152  013E' 2800'              	goto	u7777
  6153  013F' 0B80'              	decfsz	??_fDC_res^(0+384),f
  6154  0140' 2800'              	goto	u7777
  6155  0141' 0B81'              	decfsz	(??_fDC_res^(0+384)+1),f
  6156  0142' 2800'              	goto	u7777
  6157  0143'                    l6181:
  6158  0143' 0020               	movlb	0	; select bank0
  6159  0144' 160E               	bsf	14,4	;volatile
  6160  0145'                    l6183:
  6161  0145' 3005               	movlw	5
  6162  0146' 0023               	movlb	3	; select bank3
  6163  0147' 0081'              	movwf	(??_fDC_res^(0+384)+1)
  6164  0148' 300F               	movlw	15
  6165  0149' 0080'              	movwf	??_fDC_res^(0+384)
  6166  014A' 30F1               	movlw	241
  6167  014B'                    u7787:
  6168  014B' 0B89               	decfsz	9,f
  6169  014C' 2800'              	goto	u7787
  6170  014D' 0B80'              	decfsz	??_fDC_res^(0+384),f
  6171  014E' 2800'              	goto	u7787
  6172  014F' 0B81'              	decfsz	(??_fDC_res^(0+384)+1),f
  6173  0150' 2800'              	goto	u7787
  6174  0151'                    l6185:
  6175  0151' 0020               	movlb	0	; select bank0
  6176  0152' 120E               	bcf	14,4	;volatile
  6177  0153'                    l6187:
  6178  0153' 3005               	movlw	5
  6179  0154' 0023               	movlb	3	; select bank3
  6180  0155' 0081'              	movwf	(??_fDC_res^(0+384)+1)
  6181  0156' 300F               	movlw	15
  6182  0157' 0080'              	movwf	??_fDC_res^(0+384)
  6183  0158' 30F1               	movlw	241
  6184  0159'                    u7797:
  6185  0159' 0B89               	decfsz	9,f
  6186  015A' 2800'              	goto	u7797
  6187  015B' 0B80'              	decfsz	??_fDC_res^(0+384),f
  6188  015C' 2800'              	goto	u7797
  6189  015D' 0B81'              	decfsz	(??_fDC_res^(0+384)+1),f
  6190  015E' 2800'              	goto	u7797
  6191  015F'                    l6189:
  6192  015F' 0020               	movlb	0	; select bank0
  6193  0160' 168E               	bsf	14,5	;volatile
  6194  0161'                    l6191:
  6195  0161' 3005               	movlw	5
  6196  0162' 0023               	movlb	3	; select bank3
  6197  0163' 0081'              	movwf	(??_fDC_res^(0+384)+1)
  6198  0164' 300F               	movlw	15
  6199  0165' 0080'              	movwf	??_fDC_res^(0+384)
  6200  0166' 30F1               	movlw	241
  6201  0167'                    u7807:
  6202  0167' 0B89               	decfsz	9,f
  6203  0168' 2800'              	goto	u7807
  6204  0169' 0B80'              	decfsz	??_fDC_res^(0+384),f
  6205  016A' 2800'              	goto	u7807
  6206  016B' 0B81'              	decfsz	(??_fDC_res^(0+384)+1),f
  6207  016C' 2800'              	goto	u7807
  6208  016D'                    l6193:
  6209  016D' 0023               	movlb	3	; select bank3
  6210  016E' 0800'              	movf	(_CC_char_kp+3)^(0+384),w
  6211  016F' 0024               	movlb	4	; select bank4
  6212  0170' 0080'              	movwf	(_kp+3)^(0+512)
  6213  0171' 0023               	movlb	3	; select bank3
  6214  0172' 0800'              	movf	(_CC_char_kp+2)^(0+384),w
  6215  0173' 0024               	movlb	4	; select bank4
  6216  0174' 0080'              	movwf	(_kp+2)^(0+512)
  6217  0175' 0023               	movlb	3	; select bank3
  6218  0176' 0800'              	movf	(_CC_char_kp+1)^(0+384),w
  6219  0177' 0024               	movlb	4	; select bank4
  6220  0178' 0080'              	movwf	(_kp+1)^(0+512)
  6221  0179' 0023               	movlb	3	; select bank3
  6222  017A' 0800'              	movf	_CC_char_kp^(0+384),w
  6223  017B' 0024               	movlb	4	; select bank4
  6224  017C' 0080'              	movwf	_kp^(0+512)
  6225  017D'                    l6195:
  6226  017D' 0023               	movlb	3	; select bank3
  6227  017E' 0800'              	movf	(_CC_char_ki+3)^(0+384),w
  6228  017F' 0024               	movlb	4	; select bank4
  6229  0180' 0080'              	movwf	(_ki+3)^(0+512)
  6230  0181' 0023               	movlb	3	; select bank3
  6231  0182' 0800'              	movf	(_CC_char_ki+2)^(0+384),w
  6232  0183' 0024               	movlb	4	; select bank4
  6233  0184' 0080'              	movwf	(_ki+2)^(0+512)
  6234  0185' 0023               	movlb	3	; select bank3
  6235  0186' 0800'              	movf	(_CC_char_ki+1)^(0+384),w
  6236  0187' 0024               	movlb	4	; select bank4
  6237  0188' 0080'              	movwf	(_ki+1)^(0+512)
  6238  0189' 0023               	movlb	3	; select bank3
  6239  018A' 0800'              	movf	_CC_char_ki^(0+384),w
  6240  018B' 0024               	movlb	4	; select bank4
  6241  018C' 0080'              	movwf	_ki^(0+512)
  6242  018D' 0023               	movlb	3	; select bank3
  6243  018E' 0800'              	movf	_CC_char_disc_kd^(0+384),w
  6244  018F' 0080'              	movwf	??_fDC_res^(0+384)
  6245  0190' 0181'              	clrf	(??_fDC_res^(0+384)+1)
  6246  0191' 0182'              	clrf	(??_fDC_res^(0+384)+2)
  6247  0192' 0183'              	clrf	(??_fDC_res^(0+384)+3)
  6248  0193' 0800'              	movf	(??_fDC_res+3)^(0+384),w
  6249  0194' 0022               	movlb	2	; select bank2
  6250  0195' 0080'              	movwf	(___xxtofl@val+3)^(0+256)
  6251  0196' 0023               	movlb	3	; select bank3
  6252  0197' 0800'              	movf	(??_fDC_res+2)^(0+384),w
  6253  0198' 0022               	movlb	2	; select bank2
  6254  0199' 0080'              	movwf	(___xxtofl@val+2)^(0+256)
  6255  019A' 0023               	movlb	3	; select bank3
  6256  019B' 0800'              	movf	(??_fDC_res+1)^(0+384),w
  6257  019C' 0022               	movlb	2	; select bank2
  6258  019D' 0080'              	movwf	(___xxtofl@val+1)^(0+256)
  6259  019E' 0023               	movlb	3	; select bank3
  6260  019F' 0800'              	movf	??_fDC_res^(0+384),w
  6261  01A0' 0022               	movlb	2	; select bank2
  6262  01A1' 0080'              	movwf	___xxtofl@val^(0+256)
  6263  01A2' 3000               	movlw	0
  6264  01A3' 3180' 2000' 3180'  	fcall	___xxtofl
  6265  01A6' 0022               	movlb	2	; select bank2
  6266  01A7' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  6267  01A8' 0024               	movlb	4	; select bank4
  6268  01A9' 0080'              	movwf	(_kd+3)^(0+512)
  6269  01AA' 0022               	movlb	2	; select bank2
  6270  01AB' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  6271  01AC' 0024               	movlb	4	; select bank4
  6272  01AD' 0080'              	movwf	(_kd+2)^(0+512)
  6273  01AE' 0022               	movlb	2	; select bank2
  6274  01AF' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  6275  01B0' 0024               	movlb	4	; select bank4
  6276  01B1' 0080'              	movwf	(_kd+1)^(0+512)
  6277  01B2' 0022               	movlb	2	; select bank2
  6278  01B3' 0800'              	movf	?___xxtofl^(0+256),w
  6279  01B4' 0024               	movlb	4	; select bank4
  6280  01B5' 0080'              	movwf	_kd^(0+512)
  6281  01B6'                    l6197:
  6282  01B6' 3000               	movlw	0
  6283  01B7' 0080'              	movwf	(_pidi+3)^(0+512)
  6284  01B8' 3000               	movlw	0
  6285  01B9' 0080'              	movwf	(_pidi+2)^(0+512)
  6286  01BA' 3000               	movlw	0
  6287  01BB' 0080'              	movwf	(_pidi+1)^(0+512)
  6288  01BC' 3000               	movlw	0
  6289  01BD' 0080'              	movwf	_pidi^(0+512)
  6290  01BE'                    l6199:
  6291                           
  6292                           ;state_machine_b.c: 147:     if (dc_res_count == 40)
  6293  01BE' 3028               	movlw	40
  6294  01BF' 0023               	movlb	3	; select bank3
  6295  01C0' 0600'              	xorwf	_dc_res_count^(0+384),w
  6296  01C1' 1D03               	btfss	3,2
  6297  01C2' 2800'              	goto	u6821
  6298  01C3' 2800'              	goto	u6820
  6299  01C4'                    u6821:
  6300  01C4' 2800'              	goto	l6203
  6301  01C5'                    u6820:
  6302  01C5'                    l6201:
  6303                           
  6304                           ;state_machine_b.c: 148:     {;state_machine_b.c: 149:         iref = (uint16_t) ( ( ( c
      +                          apacity * 4096.0 ) / (5000.0 * 2.5) ) + 0.5 );
  6305  01C5' 0800'              	movf	_capacity^(0+384),w
  6306  01C6' 0022               	movlb	2	; select bank2
  6307  01C7' 0080'              	movwf	___xxtofl@val^(0+256)
  6308  01C8' 0023               	movlb	3	; select bank3
  6309  01C9' 0800'              	movf	(_capacity+1)^(0+384),w
  6310  01CA' 0022               	movlb	2	; select bank2
  6311  01CB' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  6312  01CC' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  6313  01CD' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  6314  01CE' 3000               	movlw	0
  6315  01CF' 3180' 2000' 3180'  	fcall	___xxtofl
  6316  01D2' 0022               	movlb	2	; select bank2
  6317  01D3' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  6318  01D4' 0080'              	movwf	(___flmul@a+3)^(0+256)
  6319  01D5' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  6320  01D6' 0080'              	movwf	(___flmul@a+2)^(0+256)
  6321  01D7' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  6322  01D8' 0080'              	movwf	(___flmul@a+1)^(0+256)
  6323  01D9' 0800'              	movf	?___xxtofl^(0+256),w
  6324  01DA' 0080'              	movwf	___flmul@a^(0+256)
  6325  01DB' 3045               	movlw	69
  6326  01DC' 0080'              	movwf	(___flmul@b+3)^(0+256)
  6327  01DD' 3080               	movlw	128
  6328  01DE' 0080'              	movwf	(___flmul@b+2)^(0+256)
  6329  01DF' 3000               	movlw	0
  6330  01E0' 0080'              	movwf	(___flmul@b+1)^(0+256)
  6331  01E1' 3000               	movlw	0
  6332  01E2' 0080'              	movwf	___flmul@b^(0+256)
  6333  01E3' 3180' 2000' 3180'  	fcall	___flmul
  6334  01E6' 0022               	movlb	2	; select bank2
  6335  01E7' 0800'              	movf	(?___flmul+3)^(0+256),w
  6336  01E8' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  6337  01E9' 0800'              	movf	(?___flmul+2)^(0+256),w
  6338  01EA' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  6339  01EB' 0800'              	movf	(?___flmul+1)^(0+256),w
  6340  01EC' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  6341  01ED' 0800'              	movf	?___flmul^(0+256),w
  6342  01EE' 0080'              	movwf	___fldiv@b^(0+256)
  6343  01EF' 3046               	movlw	70
  6344  01F0' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  6345  01F1' 3043               	movlw	67
  6346  01F2' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  6347  01F3' 3050               	movlw	80
  6348  01F4' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  6349  01F5' 3000               	movlw	0
  6350  01F6' 0080'              	movwf	___fldiv@a^(0+256)
  6351  01F7' 3180' 2000' 3180'  	fcall	___fldiv
  6352  01FA' 0022               	movlb	2	; select bank2
  6353  01FB' 0800'              	movf	(?___fldiv+3)^(0+256),w
  6354  01FC' 0080'              	movwf	(___fladd@a+3)^(0+256)
  6355  01FD' 0800'              	movf	(?___fldiv+2)^(0+256),w
  6356  01FE' 0080'              	movwf	(___fladd@a+2)^(0+256)
  6357  01FF' 0800'              	movf	(?___fldiv+1)^(0+256),w
  6358  0200' 0080'              	movwf	(___fladd@a+1)^(0+256)
  6359  0201' 0800'              	movf	?___fldiv^(0+256),w
  6360  0202' 0080'              	movwf	___fladd@a^(0+256)
  6361  0203' 303F               	movlw	63
  6362  0204' 0080'              	movwf	(___fladd@b+3)^(0+256)
  6363  0205' 3000               	movlw	0
  6364  0206' 0080'              	movwf	(___fladd@b+2)^(0+256)
  6365  0207' 3000               	movlw	0
  6366  0208' 0080'              	movwf	(___fladd@b+1)^(0+256)
  6367  0209' 3000               	movlw	0
  6368  020A' 0080'              	movwf	___fladd@b^(0+256)
  6369  020B' 3180' 2000' 3180'  	fcall	___fladd
  6370  020E' 0022               	movlb	2	; select bank2
  6371  020F' 0800'              	movf	(?___fladd+3)^(0+256),w
  6372  0210' 0023               	movlb	3	; select bank3
  6373  0211' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  6374  0212' 0022               	movlb	2	; select bank2
  6375  0213' 0800'              	movf	(?___fladd+2)^(0+256),w
  6376  0214' 0023               	movlb	3	; select bank3
  6377  0215' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  6378  0216' 0022               	movlb	2	; select bank2
  6379  0217' 0800'              	movf	(?___fladd+1)^(0+256),w
  6380  0218' 0023               	movlb	3	; select bank3
  6381  0219' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  6382  021A' 0022               	movlb	2	; select bank2
  6383  021B' 0800'              	movf	?___fladd^(0+256),w
  6384  021C' 0023               	movlb	3	; select bank3
  6385  021D' 0080'              	movwf	___fltol@f1^(0+384)
  6386  021E' 3180' 2000' 3180'  	fcall	___fltol
  6387  0221' 0023               	movlb	3	; select bank3
  6388  0222' 0800'              	movf	(?___fltol+1)^(0+384),w
  6389  0223' 0021               	movlb	1	; select bank1
  6390  0224' 0080'              	movwf	(_iref+1)^(0+128)
  6391  0225' 0023               	movlb	3	; select bank3
  6392  0226' 0800'              	movf	?___fltol^(0+384),w
  6393  0227' 0021               	movlb	1	; select bank1
  6394  0228' 0080'              	movwf	_iref^(0+128)
  6395  0229'                    l6203:
  6396                           
  6397                           ;state_machine_b.c: 151:     if (!dc_res_count)
  6398  0229' 0023               	movlb	3	; select bank3
  6399  022A' 0800'              	movf	_dc_res_count^(0+384),w
  6400  022B' 1D03               	btfss	3,2
  6401  022C' 2800'              	goto	u6831
  6402  022D' 2800'              	goto	u6830
  6403  022E'                    u6831:
  6404  022E' 2800'              	goto	l6221
  6405  022F'                    u6830:
  6406  022F'                    l6205:
  6407                           
  6408                           ;state_machine_b.c: 152:     {;state_machine_b.c: 153:         { RC3 = 0; RC4 = 0; conv 
      +                          = 0; RC5 = 0; pidt = 50.0; set_DC(); Cell_OFF();};
  6409  022F' 0020               	movlb	0	; select bank0
  6410  0230' 118E               	bcf	14,3	;volatile
  6411  0231' 120E               	bcf	14,4	;volatile
  6412  0232'                    l6207:
  6413  0232' 0021               	movlb	1	; select bank1
  6414  0233' 0180'              	clrf	_conv^(0+128)
  6415  0234'                    l6209:
  6416  0234' 0020               	movlb	0	; select bank0
  6417  0235' 128E               	bcf	14,5	;volatile
  6418  0236'                    l6211:
  6419  0236' 3042               	movlw	66
  6420  0237' 0023               	movlb	3	; select bank3
  6421  0238' 0080'              	movwf	(_pidt+3)^(0+384)
  6422  0239' 3048               	movlw	72
  6423  023A' 0080'              	movwf	(_pidt+2)^(0+384)
  6424  023B' 3000               	movlw	0
  6425  023C' 0080'              	movwf	(_pidt+1)^(0+384)
  6426  023D' 3000               	movlw	0
  6427  023E' 0080'              	movwf	_pidt^(0+384)
  6428  023F'                    l6213:
  6429  023F' 3180' 2000' 3180'  	fcall	_set_DC
  6430  0242'                    l6215:
  6431  0242' 3180' 2000' 3180'  	fcall	_Cell_OFF
  6432  0245'                    l6217:
  6433                           
  6434                           ;state_machine_b.c: 154:         wait_count = getTime();
  6435  0245' 3180' 2000' 3180'  	fcall	_getTime
  6436  0248' 0023               	movlb	3	; select bank3
  6437  0249' 0080'              	movwf	??_fDC_res^(0+384)
  6438  024A' 0181'              	clrf	(??_fDC_res^(0+384)+1)
  6439  024B' 0800'              	movf	??_fDC_res^(0+384),w
  6440  024C' 0080'              	movwf	_wait_count^(0+384)
  6441  024D' 0800'              	movf	(??_fDC_res+1)^(0+384),w
  6442  024E' 0080'              	movwf	(_wait_count+1)^(0+384)
  6443  024F'                    l6219:
  6444                           
  6445                           ;state_machine_b.c: 155:         state = WAIT;
  6446  024F' 300D               	movlw	13
  6447  0250' 0080'              	movwf	_state^(0+384)
  6448                           
  6449                           ;state_machine_b.c: 157:     }else dc_res_count--;
  6450  0251' 2800'              	goto	l863
  6451  0252'                    l6221:
  6452  0252' 3001               	movlw	1
  6453  0253' 0280'              	subwf	_dc_res_count^(0+384),f
  6454  0254'                    l863:
  6455  0254' 0008               	return
  6456  0255'                    __end_of_fDC_res:
  6457                           
  6458                           	psect	text11
  6459  0000'                    __ptext11:	
  6460 ;; *************** function _fCHARGE *****************
  6461 ;; Defined at:
  6462 ;;		line 63 in file "state_machine_b.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;		None
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;		None
  6467 ;; Return value:  Size  Location     Type
  6468 ;;                  1    wreg      void 
  6469 ;; Registers used:
  6470 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6471 ;; Tracked objects:
  6472 ;;		On entry : 0/0
  6473 ;;		On exit  : 0/0
  6474 ;;		Unchanged: 0/0
  6475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6478 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  6479 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  6480 ;;Total ram usage:        2 bytes
  6481 ;; Hardware stack levels used: 1
  6482 ;; Hardware stack levels required when called: 7
  6483 ;; This function calls:
  6484 ;;		_Cell_OFF
  6485 ;;		___flge
  6486 ;;		___xxtofl
  6487 ;;		_getTime
  6488 ;;		_set_DC
  6489 ;; This function is called by:
  6490 ;;		_state_machine
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494  0000'                    _fCHARGE:	
  6495                           ;psect for function _fCHARGE
  6496                           
  6497  0000'                    l6081:	
  6498                           ;incstack = 0
  6499                           ; Regs used in _fCHARGE: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6500                           
  6501                           
  6502                           ;state_machine_b.c: 65:     if ( ( ( iavg < basic_configuration.end_of_charge ) && ( bas
      +                          ic_configuration.version == 0x01 ) ) || ( ( ( vavg < (vmax - 5) ) || (timeout < second) 
      +                          ) && ( basic_configuration.version == 0x02 ) ) )
  6503  0000' 0024               	movlb	4	; select bank4
  6504  0001' 0809'              	movf	((_basic_configuration+1)^(0+512)+9),w
  6505  0002' 0023               	movlb	3	; select bank3
  6506  0003' 0200'              	subwf	(_iavg+1)^(0+384),w
  6507  0004' 1D03               	skipz
  6508  0005' 2800'              	goto	u6655
  6509  0006' 0024               	movlb	4	; select bank4
  6510  0007' 0809'              	movf	(_basic_configuration^(0+512)+9),w
  6511  0008' 0023               	movlb	3	; select bank3
  6512  0009' 0200'              	subwf	_iavg^(0+384),w
  6513  000A'                    u6655:
  6514  000A' 1803               	skipnc
  6515  000B' 2800'              	goto	u6651
  6516  000C' 2800'              	goto	u6650
  6517  000D'                    u6651:
  6518  000D' 2800'              	goto	l6085
  6519  000E'                    u6650:
  6520  000E'                    l6083:
  6521  000E' 0024               	movlb	4	; select bank4
  6522  000F' 0300'              	decf	_basic_configuration^(0+512),w
  6523  0010' 1903               	btfsc	3,2
  6524  0011' 2800'              	goto	u6661
  6525  0012' 2800'              	goto	u6660
  6526  0013'                    u6661:
  6527  0013' 2800'              	goto	l6091
  6528  0014'                    u6660:
  6529  0014'                    l6085:
  6530  0014' 0023               	movlb	3	; select bank3
  6531  0015' 0800'              	movf	_vmax^(0+384),w
  6532  0016' 3EFB               	addlw	251
  6533  0017' 0080'              	movwf	??_fCHARGE^(0+384)
  6534  0018' 30FF               	movlw	255
  6535  0019' 3D00'              	addwfc	(_vmax+1)^(0+384),w
  6536  001A' 0080'              	movwf	(??_fCHARGE+1)^(0+384)
  6537  001B' 0800'              	movf	(??_fCHARGE+1)^(0+384),w
  6538  001C' 0200'              	subwf	(_vavg+1)^(0+384),w
  6539  001D' 1D03               	skipz
  6540  001E' 2800'              	goto	u6675
  6541  001F' 0800'              	movf	??_fCHARGE^(0+384),w
  6542  0020' 0200'              	subwf	_vavg^(0+384),w
  6543  0021'                    u6675:
  6544  0021' 1C03               	skipc
  6545  0022' 2800'              	goto	u6671
  6546  0023' 2800'              	goto	u6670
  6547  0024'                    u6671:
  6548  0024' 2800'              	goto	l6089
  6549  0025'                    u6670:
  6550  0025'                    l6087:
  6551  0025' 0800'              	movf	(_second+1)^(0+384),w
  6552  0026' 0200'              	subwf	(_timeout+1)^(0+384),w
  6553  0027' 1D03               	skipz
  6554  0028' 2800'              	goto	u6685
  6555  0029' 0800'              	movf	_second^(0+384),w
  6556  002A' 0200'              	subwf	_timeout^(0+384),w
  6557  002B'                    u6685:
  6558  002B' 1803               	skipnc
  6559  002C' 2800'              	goto	u6681
  6560  002D' 2800'              	goto	u6680
  6561  002E'                    u6681:
  6562  002E' 2800'              	goto	l6111
  6563  002F'                    u6680:
  6564  002F'                    l6089:
  6565  002F' 3002               	movlw	2
  6566  0030' 0024               	movlb	4	; select bank4
  6567  0031' 0600'              	xorwf	_basic_configuration^(0+512),w
  6568  0032' 1D03               	btfss	3,2
  6569  0033' 2800'              	goto	u6691
  6570  0034' 2800'              	goto	u6690
  6571  0035'                    u6691:
  6572  0035' 2800'              	goto	l6111
  6573  0036'                    u6690:
  6574  0036'                    l6091:
  6575                           
  6576                           ;state_machine_b.c: 66:     {;state_machine_b.c: 67:         if (second > 5)
  6577  0036' 3000               	movlw	0
  6578  0037' 0023               	movlb	3	; select bank3
  6579  0038' 0200'              	subwf	(_second+1)^(0+384),w
  6580  0039' 3006               	movlw	6
  6581  003A' 1903               	skipnz
  6582  003B' 0200'              	subwf	_second^(0+384),w
  6583  003C' 1C03               	skipc
  6584  003D' 2800'              	goto	u6701
  6585  003E' 2800'              	goto	u6700
  6586  003F'                    u6701:
  6587  003F' 2800'              	goto	l6111
  6588  0040'                    u6700:
  6589  0040'                    l6093:
  6590                           
  6591                           ;state_machine_b.c: 68:         {;state_machine_b.c: 69:             state = WAIT;
  6592  0040' 300D               	movlw	13
  6593  0041' 0080'              	movwf	_state^(0+384)
  6594  0042'                    l6095:
  6595                           
  6596                           ;state_machine_b.c: 70:             wait_count = getTime();
  6597  0042' 3180' 2000' 3180'  	fcall	_getTime
  6598  0045' 0023               	movlb	3	; select bank3
  6599  0046' 0080'              	movwf	??_fCHARGE^(0+384)
  6600  0047' 0181'              	clrf	(??_fCHARGE^(0+384)+1)
  6601  0048' 0800'              	movf	??_fCHARGE^(0+384),w
  6602  0049' 0080'              	movwf	_wait_count^(0+384)
  6603  004A' 0800'              	movf	(??_fCHARGE+1)^(0+384),w
  6604  004B' 0080'              	movwf	(_wait_count+1)^(0+384)
  6605  004C'                    l6097:
  6606                           
  6607                           ;state_machine_b.c: 71:             { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50.0; 
      +                          set_DC(); Cell_OFF();};
  6608  004C' 0020               	movlb	0	; select bank0
  6609  004D' 118E               	bcf	14,3	;volatile
  6610  004E'                    l6099:
  6611  004E' 120E               	bcf	14,4	;volatile
  6612  004F'                    l6101:
  6613  004F' 0021               	movlb	1	; select bank1
  6614  0050' 0180'              	clrf	_conv^(0+128)
  6615  0051'                    l6103:
  6616  0051' 0020               	movlb	0	; select bank0
  6617  0052' 128E               	bcf	14,5	;volatile
  6618  0053'                    l6105:
  6619  0053' 3042               	movlw	66
  6620  0054' 0023               	movlb	3	; select bank3
  6621  0055' 0080'              	movwf	(_pidt+3)^(0+384)
  6622  0056' 3048               	movlw	72
  6623  0057' 0080'              	movwf	(_pidt+2)^(0+384)
  6624  0058' 3000               	movlw	0
  6625  0059' 0080'              	movwf	(_pidt+1)^(0+384)
  6626  005A' 3000               	movlw	0
  6627  005B' 0080'              	movwf	_pidt^(0+384)
  6628  005C'                    l6107:
  6629  005C' 3180' 2000' 3180'  	fcall	_set_DC
  6630  005F'                    l6109:
  6631  005F' 3180' 2000' 3180'  	fcall	_Cell_OFF
  6632  0062'                    l6111:
  6633                           
  6634                           ;state_machine_b.c: 74:     if (state == PRECHARGE){
  6635  0062' 3005               	movlw	5
  6636  0063' 0023               	movlb	3	; select bank3
  6637  0064' 0600'              	xorwf	_state^(0+384),w
  6638  0065' 1D03               	btfss	3,2
  6639  0066' 2800'              	goto	u6711
  6640  0067' 2800'              	goto	u6710
  6641  0068'                    u6711:
  6642  0068' 2800'              	goto	l841
  6643  0069'                    u6710:
  6644  0069'                    l6113:
  6645                           
  6646                           ;state_machine_b.c: 75:         if (basic_configuration.version == 1)
  6647  0069' 0024               	movlb	4	; select bank4
  6648  006A' 0300'              	decf	_basic_configuration^(0+512),w
  6649  006B' 1D03               	btfss	3,2
  6650  006C' 2800'              	goto	u6721
  6651  006D' 2800'              	goto	u6720
  6652  006E'                    u6721:
  6653  006E' 2800'              	goto	l6137
  6654  006F'                    u6720:
  6655  006F'                    l6115:
  6656                           
  6657                           ;state_machine_b.c: 76:         {;state_machine_b.c: 77:             if (qavg >= ( (capa
      +                          city) / 2 ) && (second >= 1))
  6658  006F' 0023               	movlb	3	; select bank3
  6659  0070' 0800'              	movf	(_qavg+3)^(0+384),w
  6660  0071' 0022               	movlb	2	; select bank2
  6661  0072' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  6662  0073' 0023               	movlb	3	; select bank3
  6663  0074' 0800'              	movf	(_qavg+2)^(0+384),w
  6664  0075' 0022               	movlb	2	; select bank2
  6665  0076' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  6666  0077' 0023               	movlb	3	; select bank3
  6667  0078' 0800'              	movf	(_qavg+1)^(0+384),w
  6668  0079' 0022               	movlb	2	; select bank2
  6669  007A' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  6670  007B' 0023               	movlb	3	; select bank3
  6671  007C' 0800'              	movf	_qavg^(0+384),w
  6672  007D' 0022               	movlb	2	; select bank2
  6673  007E' 0080'              	movwf	___flge@ff1^(0+256)
  6674  007F' 0023               	movlb	3	; select bank3
  6675  0080' 0800'              	movf	(_capacity+1)^(0+384),w
  6676  0081' 0081'              	movwf	(??_fCHARGE^(0+384)+1)
  6677  0082' 0800'              	movf	_capacity^(0+384),w
  6678  0083' 0080'              	movwf	??_fCHARGE^(0+384)
  6679  0084' 3681'              	lsrf	(??_fCHARGE^(0+384)+1),f
  6680  0085' 0C80'              	rrf	??_fCHARGE^(0+384),f
  6681  0086' 0800'              	movf	??_fCHARGE^(0+384),w
  6682  0087' 0022               	movlb	2	; select bank2
  6683  0088' 0080'              	movwf	___xxtofl@val^(0+256)
  6684  0089' 0023               	movlb	3	; select bank3
  6685  008A' 0800'              	movf	(??_fCHARGE+1)^(0+384),w
  6686  008B' 0022               	movlb	2	; select bank2
  6687  008C' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  6688  008D' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  6689  008E' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  6690  008F' 3000               	movlw	0
  6691  0090' 3180' 2000' 3180'  	fcall	___xxtofl
  6692  0093' 0022               	movlb	2	; select bank2
  6693  0094' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  6694  0095' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  6695  0096' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  6696  0097' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  6697  0098' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  6698  0099' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  6699  009A' 0800'              	movf	?___xxtofl^(0+256),w
  6700  009B' 0080'              	movwf	___flge@ff2^(0+256)
  6701  009C' 3180' 2000' 3180'  	fcall	___flge
  6702  009F' 1C03               	btfss	3,0
  6703  00A0' 2800'              	goto	u6731
  6704  00A1' 2800'              	goto	u6730
  6705  00A2'                    u6731:
  6706  00A2' 2800'              	goto	l841
  6707  00A3'                    u6730:
  6708  00A3'                    l6117:
  6709  00A3' 0023               	movlb	3	; select bank3
  6710  00A4' 0800'              	movf	_second^(0+384),w
  6711  00A5' 0400'              	iorwf	(_second+1)^(0+384),w
  6712  00A6' 1903               	btfsc	3,2
  6713  00A7' 2800'              	goto	u6741
  6714  00A8' 2800'              	goto	u6740
  6715  00A9'                    u6741:
  6716  00A9' 2800'              	goto	l841
  6717  00AA'                    u6740:
  6718  00AA'                    l6119:
  6719                           
  6720                           ;state_machine_b.c: 78:             {;state_machine_b.c: 79:                 state = WAI
      +                          T;
  6721  00AA' 300D               	movlw	13
  6722  00AB' 0080'              	movwf	_state^(0+384)
  6723  00AC'                    l6121:
  6724                           
  6725                           ;state_machine_b.c: 80:                 wait_count = getTime();
  6726  00AC' 3180' 2000' 3180'  	fcall	_getTime
  6727  00AF' 0023               	movlb	3	; select bank3
  6728  00B0' 0080'              	movwf	??_fCHARGE^(0+384)
  6729  00B1' 0181'              	clrf	(??_fCHARGE^(0+384)+1)
  6730  00B2' 0800'              	movf	??_fCHARGE^(0+384),w
  6731  00B3' 0080'              	movwf	_wait_count^(0+384)
  6732  00B4' 0800'              	movf	(??_fCHARGE+1)^(0+384),w
  6733  00B5' 0080'              	movwf	(_wait_count+1)^(0+384)
  6734  00B6'                    l6123:
  6735                           
  6736                           ;state_machine_b.c: 81:                 { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50
      +                          .0; set_DC(); Cell_OFF();};
  6737  00B6' 0020               	movlb	0	; select bank0
  6738  00B7' 118E               	bcf	14,3	;volatile
  6739  00B8'                    l6125:
  6740  00B8' 120E               	bcf	14,4	;volatile
  6741  00B9'                    l6127:
  6742  00B9' 0021               	movlb	1	; select bank1
  6743  00BA' 0180'              	clrf	_conv^(0+128)
  6744  00BB'                    l6129:
  6745  00BB' 0020               	movlb	0	; select bank0
  6746  00BC' 128E               	bcf	14,5	;volatile
  6747  00BD'                    l6131:
  6748  00BD' 3042               	movlw	66
  6749  00BE' 0023               	movlb	3	; select bank3
  6750  00BF' 0080'              	movwf	(_pidt+3)^(0+384)
  6751  00C0' 3048               	movlw	72
  6752  00C1' 0080'              	movwf	(_pidt+2)^(0+384)
  6753  00C2' 3000               	movlw	0
  6754  00C3' 0080'              	movwf	(_pidt+1)^(0+384)
  6755  00C4' 3000               	movlw	0
  6756  00C5' 0080'              	movwf	_pidt^(0+384)
  6757  00C6'                    l6133:
  6758  00C6' 3180' 2000' 3180'  	fcall	_set_DC
  6759  00C9'                    l6135:
  6760  00C9' 3180' 2000' 3180'  	fcall	_Cell_OFF
  6761  00CC' 2800'              	goto	l841
  6762  00CD'                    l6137:
  6763  00CD' 3002               	movlw	2
  6764  00CE' 0600'              	xorwf	_basic_configuration^(0+512),w
  6765  00CF' 1D03               	btfss	3,2
  6766  00D0' 2800'              	goto	u6751
  6767  00D1' 2800'              	goto	u6750
  6768  00D2'                    u6751:
  6769  00D2' 2800'              	goto	l841
  6770  00D3'                    u6750:
  6771  00D3'                    l6139:
  6772                           
  6773                           ;state_machine_b.c: 85:         {;state_machine_b.c: 86:             if (vavg >= basic_c
      +                          onfiguration.end_of_precharge || qavg >= ( (capacity) / 2 ) || (second >= timeout))
  6774  00D3' 080B'              	movf	((_basic_configuration+1)^(0+512)+11),w
  6775  00D4' 0023               	movlb	3	; select bank3
  6776  00D5' 0200'              	subwf	(_vavg+1)^(0+384),w
  6777  00D6' 1D03               	skipz
  6778  00D7' 2800'              	goto	u6765
  6779  00D8' 0024               	movlb	4	; select bank4
  6780  00D9' 080B'              	movf	(_basic_configuration^(0+512)+11),w
  6781  00DA' 0023               	movlb	3	; select bank3
  6782  00DB' 0200'              	subwf	_vavg^(0+384),w
  6783  00DC'                    u6765:
  6784  00DC' 1803               	skipnc
  6785  00DD' 2800'              	goto	u6761
  6786  00DE' 2800'              	goto	u6760
  6787  00DF'                    u6761:
  6788  00DF' 2800'              	goto	l6145
  6789  00E0'                    u6760:
  6790  00E0'                    l6141:
  6791  00E0' 0800'              	movf	(_qavg+3)^(0+384),w
  6792  00E1' 0022               	movlb	2	; select bank2
  6793  00E2' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  6794  00E3' 0023               	movlb	3	; select bank3
  6795  00E4' 0800'              	movf	(_qavg+2)^(0+384),w
  6796  00E5' 0022               	movlb	2	; select bank2
  6797  00E6' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  6798  00E7' 0023               	movlb	3	; select bank3
  6799  00E8' 0800'              	movf	(_qavg+1)^(0+384),w
  6800  00E9' 0022               	movlb	2	; select bank2
  6801  00EA' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  6802  00EB' 0023               	movlb	3	; select bank3
  6803  00EC' 0800'              	movf	_qavg^(0+384),w
  6804  00ED' 0022               	movlb	2	; select bank2
  6805  00EE' 0080'              	movwf	___flge@ff1^(0+256)
  6806  00EF' 0023               	movlb	3	; select bank3
  6807  00F0' 0800'              	movf	(_capacity+1)^(0+384),w
  6808  00F1' 0081'              	movwf	(??_fCHARGE^(0+384)+1)
  6809  00F2' 0800'              	movf	_capacity^(0+384),w
  6810  00F3' 0080'              	movwf	??_fCHARGE^(0+384)
  6811  00F4' 3681'              	lsrf	(??_fCHARGE^(0+384)+1),f
  6812  00F5' 0C80'              	rrf	??_fCHARGE^(0+384),f
  6813  00F6' 0800'              	movf	??_fCHARGE^(0+384),w
  6814  00F7' 0022               	movlb	2	; select bank2
  6815  00F8' 0080'              	movwf	___xxtofl@val^(0+256)
  6816  00F9' 0023               	movlb	3	; select bank3
  6817  00FA' 0800'              	movf	(??_fCHARGE+1)^(0+384),w
  6818  00FB' 0022               	movlb	2	; select bank2
  6819  00FC' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  6820  00FD' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  6821  00FE' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  6822  00FF' 3000               	movlw	0
  6823  0100' 3180' 2000' 3180'  	fcall	___xxtofl
  6824  0103' 0022               	movlb	2	; select bank2
  6825  0104' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  6826  0105' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  6827  0106' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  6828  0107' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  6829  0108' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  6830  0109' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  6831  010A' 0800'              	movf	?___xxtofl^(0+256),w
  6832  010B' 0080'              	movwf	___flge@ff2^(0+256)
  6833  010C' 3180' 2000' 3180'  	fcall	___flge
  6834  010F' 1803               	btfsc	3,0
  6835  0110' 2800'              	goto	u6771
  6836  0111' 2800'              	goto	u6770
  6837  0112'                    u6771:
  6838  0112' 2800'              	goto	l6145
  6839  0113'                    u6770:
  6840  0113'                    l6143:
  6841  0113' 0023               	movlb	3	; select bank3
  6842  0114' 0800'              	movf	(_timeout+1)^(0+384),w
  6843  0115' 0200'              	subwf	(_second+1)^(0+384),w
  6844  0116' 1D03               	skipz
  6845  0117' 2800'              	goto	u6785
  6846  0118' 0800'              	movf	_timeout^(0+384),w
  6847  0119' 0200'              	subwf	_second^(0+384),w
  6848  011A'                    u6785:
  6849  011A' 1C03               	skipc
  6850  011B' 2800'              	goto	u6781
  6851  011C' 2800'              	goto	u6780
  6852  011D'                    u6781:
  6853  011D' 2800'              	goto	l836
  6854  011E'                    u6780:
  6855  011E'                    l6145:
  6856                           
  6857                           ;state_machine_b.c: 87:             {;state_machine_b.c: 88:                 state = WAI
      +                          T;
  6858  011E' 300D               	movlw	13
  6859  011F' 0023               	movlb	3	; select bank3
  6860  0120' 0080'              	movwf	_state^(0+384)
  6861  0121'                    l6147:
  6862                           
  6863                           ;state_machine_b.c: 89:                 wait_count = getTime();
  6864  0121' 3180' 2000' 3180'  	fcall	_getTime
  6865  0124' 0023               	movlb	3	; select bank3
  6866  0125' 0080'              	movwf	??_fCHARGE^(0+384)
  6867  0126' 0181'              	clrf	(??_fCHARGE^(0+384)+1)
  6868  0127' 0800'              	movf	??_fCHARGE^(0+384),w
  6869  0128' 0080'              	movwf	_wait_count^(0+384)
  6870  0129' 0800'              	movf	(??_fCHARGE+1)^(0+384),w
  6871  012A' 0080'              	movwf	(_wait_count+1)^(0+384)
  6872  012B'                    l6149:
  6873                           
  6874                           ;state_machine_b.c: 90:                 { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50
      +                          .0; set_DC(); Cell_OFF();};
  6875  012B' 0020               	movlb	0	; select bank0
  6876  012C' 118E               	bcf	14,3	;volatile
  6877  012D'                    l6151:
  6878  012D' 120E               	bcf	14,4	;volatile
  6879  012E'                    l6153:
  6880  012E' 0021               	movlb	1	; select bank1
  6881  012F' 0180'              	clrf	_conv^(0+128)
  6882  0130'                    l6155:
  6883  0130' 0020               	movlb	0	; select bank0
  6884  0131' 128E               	bcf	14,5	;volatile
  6885  0132'                    l6157:
  6886  0132' 3042               	movlw	66
  6887  0133' 0023               	movlb	3	; select bank3
  6888  0134' 0080'              	movwf	(_pidt+3)^(0+384)
  6889  0135' 3048               	movlw	72
  6890  0136' 0080'              	movwf	(_pidt+2)^(0+384)
  6891  0137' 3000               	movlw	0
  6892  0138' 0080'              	movwf	(_pidt+1)^(0+384)
  6893  0139' 3000               	movlw	0
  6894  013A' 0080'              	movwf	_pidt^(0+384)
  6895  013B' 2800'              	goto	l6133
  6896  013C'                    l836:
  6897  013C'                    l841:
  6898  013C' 0008               	return
  6899  013D'                    __end_of_fCHARGE:
  6900                           
  6901                           	psect	text12
  6902  0000'                    __ptext12:	
  6903 ;; *************** function _getTime *****************
  6904 ;; Defined at:
  6905 ;;		line 565 in file "charger_discharger.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;		None
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;		None
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  1    wreg      unsigned char 
  6912 ;; Registers used:
  6913 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6921 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  6922 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;Total ram usage:        2 bytes
  6924 ;; Hardware stack levels used: 1
  6925 ;; Hardware stack levels required when called: 5
  6926 ;; This function calls:
  6927 ;;		Nothing
  6928 ;; This function is called by:
  6929 ;;		_fCHARGE
  6930 ;;		_fDISCHARGE
  6931 ;;		_fDC_res
  6932 ;; This function uses a non-reentrant model
  6933 ;;
  6934                           
  6935  0000'                    _getTime:	
  6936                           ;psect for function _getTime
  6937                           
  6938  0000'                    l5457:	
  6939                           ;incstack = 0
  6940                           ; Regs used in _getTime: [wreg+fsr1l+fsr1h+status,2+status,0]
  6941                           
  6942                           
  6943                           ;charger_discharger.c: 566:     if ((counter_state + 1 <= test_configuration.number_of_s
      +                          tates) && (test_configuration.order_of_states[counter_state + 1] != 0x00)){
  6944  0000' 0021               	movlb	1	; select bank1
  6945  0001' 0800'              	movf	_counter_state^(0+128),w
  6946  0002' 3E01               	addlw	1
  6947  0003' 0022               	movlb	2	; select bank2
  6948  0004' 0080'              	movwf	??_getTime^(0+256)
  6949  0005' 3000               	movlw	0
  6950  0006' 1803               	skipnc
  6951  0007' 3001               	movlw	1
  6952  0008' 0081'              	movwf	(??_getTime^(0+256)+1)
  6953  0009' 0800'              	movf	(??_getTime+1)^(0+256),w
  6954  000A' 3A80               	xorlw	128
  6955  000B' 3C80               	sublw	128
  6956  000C' 1D03               	skipz
  6957  000D' 2800'              	goto	u5555
  6958  000E' 0800'              	movf	??_getTime^(0+256),w
  6959  000F' 0024               	movlb	4	; select bank4
  6960  0010' 0201'              	subwf	(_test_configuration^(0+512)+1),w
  6961  0011'                    u5555:
  6962  0011' 1C03               	skipc
  6963  0012' 2800'              	goto	u5551
  6964  0013' 2800'              	goto	u5550
  6965  0014'                    u5551:
  6966  0014' 2800'              	goto	l5467
  6967  0015'                    u5550:
  6968  0015'                    l5459:
  6969  0015' 0021               	movlb	1	; select bank1
  6970  0016' 0800'              	movf	_counter_state^(0+128),w
  6971  0017' 3E00'              	addlw	(low ((_test_configuration| (0+512)+8)))& (0+255)
  6972  0018' 0086               	movwf	6
  6973  0019' 3002               	movlw	2	; select bank4/5
  6974  001A' 0087               	movwf	7
  6975  001B' 0801               	movf	1,w
  6976  001C' 1903               	btfsc	3,2
  6977  001D' 2800'              	goto	u5561
  6978  001E' 2800'              	goto	u5560
  6979  001F'                    u5561:
  6980  001F' 2800'              	goto	l5467
  6981  0020'                    u5560:
  6982  0020'                    l5461:
  6983                           
  6984                           ;charger_discharger.c: 567:         return test_configuration.wait_time;
  6985  0020' 0024               	movlb	4	; select bank4
  6986  0021' 0803'              	movf	(_test_configuration^(0+512)+3),w
  6987  0022' 2800'              	goto	l491
  6988  0023'                    l5467:
  6989  0023' 0024               	movlb	4	; select bank4
  6990  0024' 0800'              	movf	_test_configuration^(0+512),w
  6991  0025' 0023               	movlb	3	; select bank3
  6992  0026' 0200'              	subwf	_cell_count^(0+384),w
  6993  0027' 1803               	skipnc
  6994  0028' 2800'              	goto	u5571
  6995  0029' 2800'              	goto	u5570
  6996  002A'                    u5571:
  6997  002A' 2800'              	goto	l5475
  6998  002B'                    u5570:
  6999  002B' 2800'              	goto	l5461
  7000  002C'                    l5475:
  7001                           
  7002                           ;charger_discharger.c: 573:         return test_configuration.end_wait_time;
  7003  002C' 0024               	movlb	4	; select bank4
  7004  002D' 0805'              	movf	(_test_configuration^(0+512)+5),w
  7005  002E'                    l491:
  7006  002E' 0008               	return
  7007  002F'                    __end_of_getTime:
  7008                           
  7009                           	psect	text13
  7010  0000'                    __ptext13:	
  7011 ;; *************** function ___flge *****************
  7012 ;; Defined at:
  7013 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;  ff1             4   14[BANK2 ] unsigned char 
  7016 ;;  ff2             4   18[BANK2 ] unsigned char 
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;		None
  7019 ;; Return value:  Size  Location     Type
  7020 ;;		None               void
  7021 ;; Registers used:
  7022 ;;		wreg, status,2, status,0
  7023 ;; Tracked objects:
  7024 ;;		On entry : 0/0
  7025 ;;		On exit  : 0/0
  7026 ;;		Unchanged: 0/0
  7027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7028 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  7029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7030 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  7031 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
  7032 ;;Total ram usage:       12 bytes
  7033 ;; Hardware stack levels used: 1
  7034 ;; Hardware stack levels required when called: 5
  7035 ;; This function calls:
  7036 ;;		Nothing
  7037 ;; This function is called by:
  7038 ;;		_fCHARGE
  7039 ;;		_fDISCHARGE
  7040 ;; This function uses a non-reentrant model
  7041 ;;
  7042                           
  7043  0000'                    ___flge:	
  7044                           ;psect for function ___flge
  7045                           
  7046  0000'                    l5491:	
  7047                           ;incstack = 0
  7048                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7049                           
  7050  0000' 3000               	movlw	0
  7051  0001' 0022               	movlb	2	; select bank2
  7052  0002' 0500'              	andwf	___flge@ff1^(0+256),w
  7053  0003' 0080'              	movwf	??___flge^(0+256)
  7054  0004' 3000               	movlw	0
  7055  0005' 0500'              	andwf	(___flge@ff1+1)^(0+256),w
  7056  0006' 0081'              	movwf	(??___flge^(0+256)+1)
  7057  0007' 3080               	movlw	128
  7058  0008' 0500'              	andwf	(___flge@ff1+2)^(0+256),w
  7059  0009' 0082'              	movwf	(??___flge^(0+256)+2)
  7060  000A' 307F               	movlw	127
  7061  000B' 0500'              	andwf	(___flge@ff1+3)^(0+256),w
  7062  000C' 0083'              	movwf	(??___flge^(0+256)+3)
  7063  000D' 0800'              	movf	(??___flge+3)^(0+256),w
  7064  000E' 0400'              	iorwf	(??___flge+2)^(0+256),w
  7065  000F' 0400'              	iorwf	(??___flge+1)^(0+256),w
  7066  0010' 0400'              	iorwf	??___flge^(0+256),w
  7067  0011' 1D03               	skipz
  7068  0012' 2800'              	goto	u5601
  7069  0013' 2800'              	goto	u5600
  7070  0014'                    u5601:
  7071  0014' 2800'              	goto	l1224
  7072  0015'                    u5600:
  7073  0015'                    l5493:
  7074  0015' 3000               	movlw	0
  7075  0016' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  7076  0017' 3000               	movlw	0
  7077  0018' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  7078  0019' 3000               	movlw	0
  7079  001A' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  7080  001B' 3000               	movlw	0
  7081  001C' 0080'              	movwf	___flge@ff1^(0+256)
  7082  001D'                    l1224:
  7083  001D' 3000               	movlw	0
  7084  001E' 0500'              	andwf	___flge@ff2^(0+256),w
  7085  001F' 0080'              	movwf	??___flge^(0+256)
  7086  0020' 3000               	movlw	0
  7087  0021' 0500'              	andwf	(___flge@ff2+1)^(0+256),w
  7088  0022' 0081'              	movwf	(??___flge^(0+256)+1)
  7089  0023' 3080               	movlw	128
  7090  0024' 0500'              	andwf	(___flge@ff2+2)^(0+256),w
  7091  0025' 0082'              	movwf	(??___flge^(0+256)+2)
  7092  0026' 307F               	movlw	127
  7093  0027' 0500'              	andwf	(___flge@ff2+3)^(0+256),w
  7094  0028' 0083'              	movwf	(??___flge^(0+256)+3)
  7095  0029' 0800'              	movf	(??___flge+3)^(0+256),w
  7096  002A' 0400'              	iorwf	(??___flge+2)^(0+256),w
  7097  002B' 0400'              	iorwf	(??___flge+1)^(0+256),w
  7098  002C' 0400'              	iorwf	??___flge^(0+256),w
  7099  002D' 1D03               	skipz
  7100  002E' 2800'              	goto	u5611
  7101  002F' 2800'              	goto	u5610
  7102  0030'                    u5611:
  7103  0030' 2800'              	goto	l5497
  7104  0031'                    u5610:
  7105  0031'                    l5495:
  7106  0031' 3000               	movlw	0
  7107  0032' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  7108  0033' 3000               	movlw	0
  7109  0034' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  7110  0035' 3000               	movlw	0
  7111  0036' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  7112  0037' 3000               	movlw	0
  7113  0038' 0080'              	movwf	___flge@ff2^(0+256)
  7114  0039'                    l5497:
  7115  0039' 1F80'              	btfss	(___flge@ff1+3)^(0+256),7
  7116  003A' 2800'              	goto	u5621
  7117  003B' 2800'              	goto	u5620
  7118  003C'                    u5621:
  7119  003C' 2800'              	goto	l5501
  7120  003D'                    u5620:
  7121  003D'                    l5499:
  7122  003D' 3000               	movlw	0
  7123  003E' 0080'              	movwf	??___flge^(0+256)
  7124  003F' 3000               	movlw	0
  7125  0040' 0081'              	movwf	(??___flge^(0+256)+1)
  7126  0041' 3000               	movlw	0
  7127  0042' 0082'              	movwf	(??___flge^(0+256)+2)
  7128  0043' 3080               	movlw	128
  7129  0044' 0083'              	movwf	(??___flge^(0+256)+3)
  7130  0045' 0800'              	movf	___flge@ff1^(0+256),w
  7131  0046' 0280'              	subwf	??___flge^(0+256),f
  7132  0047' 0800'              	movf	(___flge@ff1+1)^(0+256),w
  7133  0048' 3B81'              	subwfb	(??___flge^(0+256)+1),f
  7134  0049' 0800'              	movf	(___flge@ff1+2)^(0+256),w
  7135  004A' 3B82'              	subwfb	(??___flge^(0+256)+2),f
  7136  004B' 0800'              	movf	(___flge@ff1+3)^(0+256),w
  7137  004C' 3B83'              	subwfb	(??___flge^(0+256)+3),f
  7138  004D' 0800'              	movf	(??___flge+3)^(0+256),w
  7139  004E' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  7140  004F' 0800'              	movf	(??___flge+2)^(0+256),w
  7141  0050' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  7142  0051' 0800'              	movf	(??___flge+1)^(0+256),w
  7143  0052' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  7144  0053' 0800'              	movf	??___flge^(0+256),w
  7145  0054' 0080'              	movwf	___flge@ff1^(0+256)
  7146  0055'                    l5501:
  7147  0055' 1F80'              	btfss	(___flge@ff2+3)^(0+256),7
  7148  0056' 2800'              	goto	u5631
  7149  0057' 2800'              	goto	u5630
  7150  0058'                    u5631:
  7151  0058' 2800'              	goto	l1227
  7152  0059'                    u5630:
  7153  0059'                    l5503:
  7154  0059' 3000               	movlw	0
  7155  005A' 0080'              	movwf	??___flge^(0+256)
  7156  005B' 3000               	movlw	0
  7157  005C' 0081'              	movwf	(??___flge^(0+256)+1)
  7158  005D' 3000               	movlw	0
  7159  005E' 0082'              	movwf	(??___flge^(0+256)+2)
  7160  005F' 3080               	movlw	128
  7161  0060' 0083'              	movwf	(??___flge^(0+256)+3)
  7162  0061' 0800'              	movf	___flge@ff2^(0+256),w
  7163  0062' 0280'              	subwf	??___flge^(0+256),f
  7164  0063' 0800'              	movf	(___flge@ff2+1)^(0+256),w
  7165  0064' 3B81'              	subwfb	(??___flge^(0+256)+1),f
  7166  0065' 0800'              	movf	(___flge@ff2+2)^(0+256),w
  7167  0066' 3B82'              	subwfb	(??___flge^(0+256)+2),f
  7168  0067' 0800'              	movf	(___flge@ff2+3)^(0+256),w
  7169  0068' 3B83'              	subwfb	(??___flge^(0+256)+3),f
  7170  0069' 0800'              	movf	(??___flge+3)^(0+256),w
  7171  006A' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  7172  006B' 0800'              	movf	(??___flge+2)^(0+256),w
  7173  006C' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  7174  006D' 0800'              	movf	(??___flge+1)^(0+256),w
  7175  006E' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  7176  006F' 0800'              	movf	??___flge^(0+256),w
  7177  0070' 0080'              	movwf	___flge@ff2^(0+256)
  7178  0071'                    l1227:
  7179  0071' 3080               	movlw	128
  7180  0072' 0680'              	xorwf	(___flge@ff1+3)^(0+256),f
  7181  0073' 3080               	movlw	128
  7182  0074' 0680'              	xorwf	(___flge@ff2+3)^(0+256),f
  7183  0075' 0800'              	movf	(___flge@ff2+3)^(0+256),w
  7184  0076' 0200'              	subwf	(___flge@ff1+3)^(0+256),w
  7185  0077' 1D03               	skipz
  7186  0078' 2800'              	goto	u5645
  7187  0079' 0800'              	movf	(___flge@ff2+2)^(0+256),w
  7188  007A' 0200'              	subwf	(___flge@ff1+2)^(0+256),w
  7189  007B' 1D03               	skipz
  7190  007C' 2800'              	goto	u5645
  7191  007D' 0800'              	movf	(___flge@ff2+1)^(0+256),w
  7192  007E' 0200'              	subwf	(___flge@ff1+1)^(0+256),w
  7193  007F' 1D03               	skipz
  7194  0080' 2800'              	goto	u5645
  7195  0081' 0800'              	movf	___flge@ff2^(0+256),w
  7196  0082' 0200'              	subwf	___flge@ff1^(0+256),w
  7197  0083'                    u5645:
  7198  0083' 1803               	skipnc
  7199  0084' 2800'              	goto	u5641
  7200  0085' 2800'              	goto	u5640
  7201  0086'                    u5641:
  7202  0086' 2800'              	goto	l5507
  7203  0087'                    u5640:
  7204  0087'                    l5505:
  7205  0087' 1003               	clrc
  7206  0088' 2800'              	goto	l1232
  7207  0089'                    l5507:
  7208  0089' 1403               	setc
  7209  008A'                    l1232:
  7210  008A' 0008               	return
  7211  008B'                    __end_of___flge:
  7212                           
  7213                           	psect	text14
  7214  0000'                    __ptext14:	
  7215 ;; *************** function _scaling *****************
  7216 ;; Defined at:
  7217 ;;		line 319 in file "charger_discharger.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;		None
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;		None
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  1    wreg      void 
  7224 ;; Registers used:
  7225 ;;		wreg, status,2, status,0, pclath, cstack
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7232 ;;      Locals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
  7233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7234 ;;      Totals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
  7235 ;;Total ram usage:        8 bytes
  7236 ;; Hardware stack levels used: 1
  7237 ;; Hardware stack levels required when called: 7
  7238 ;; This function calls:
  7239 ;;		___fladd
  7240 ;;		___fldiv
  7241 ;;		___flmul
  7242 ;;		___fltol
  7243 ;;		___xxtofl
  7244 ;; This function is called by:
  7245 ;;		_main
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           
  7249  0000'                    _scaling:	
  7250                           ;psect for function _scaling
  7251                           
  7252  0000'                    l6843:	
  7253                           ;incstack = 0
  7254                           ; Regs used in _scaling: [wreg+status,2+status,0+pclath+cstack]
  7255                           
  7256                           
  7257                           ;charger_discharger.c: 321:     log_data.current = (uint16_t) ( ( ( (float)iavg * 2.5 * 
      +                          5000.0 ) / 4096.0 ) + 0.5 );
  7258  0000' 0023               	movlb	3	; select bank3
  7259  0001' 0800'              	movf	_iavg^(0+384),w
  7260  0002' 0022               	movlb	2	; select bank2
  7261  0003' 0080'              	movwf	___xxtofl@val^(0+256)
  7262  0004' 0023               	movlb	3	; select bank3
  7263  0005' 0800'              	movf	(_iavg+1)^(0+384),w
  7264  0006' 0022               	movlb	2	; select bank2
  7265  0007' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  7266  0008' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  7267  0009' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  7268  000A' 3000               	movlw	0
  7269  000B' 3180' 2000' 3180'  	fcall	___xxtofl
  7270  000E' 0022               	movlb	2	; select bank2
  7271  000F' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  7272  0010' 0080'              	movwf	(___flmul@a+3)^(0+256)
  7273  0011' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  7274  0012' 0080'              	movwf	(___flmul@a+2)^(0+256)
  7275  0013' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  7276  0014' 0080'              	movwf	(___flmul@a+1)^(0+256)
  7277  0015' 0800'              	movf	?___xxtofl^(0+256),w
  7278  0016' 0080'              	movwf	___flmul@a^(0+256)
  7279  0017' 3040               	movlw	64
  7280  0018' 0080'              	movwf	(___flmul@b+3)^(0+256)
  7281  0019' 3020               	movlw	32
  7282  001A' 0080'              	movwf	(___flmul@b+2)^(0+256)
  7283  001B' 3000               	movlw	0
  7284  001C' 0080'              	movwf	(___flmul@b+1)^(0+256)
  7285  001D' 3000               	movlw	0
  7286  001E' 0080'              	movwf	___flmul@b^(0+256)
  7287  001F' 3180' 2000' 3180'  	fcall	___flmul
  7288  0022' 0022               	movlb	2	; select bank2
  7289  0023' 0800'              	movf	(?___flmul+3)^(0+256),w
  7290  0024' 0023               	movlb	3	; select bank3
  7291  0025' 0080'              	movwf	(_scaling$1608+3)^(0+384)
  7292  0026' 0022               	movlb	2	; select bank2
  7293  0027' 0800'              	movf	(?___flmul+2)^(0+256),w
  7294  0028' 0023               	movlb	3	; select bank3
  7295  0029' 0080'              	movwf	(_scaling$1608+2)^(0+384)
  7296  002A' 0022               	movlb	2	; select bank2
  7297  002B' 0800'              	movf	(?___flmul+1)^(0+256),w
  7298  002C' 0023               	movlb	3	; select bank3
  7299  002D' 0080'              	movwf	(_scaling$1608+1)^(0+384)
  7300  002E' 0022               	movlb	2	; select bank2
  7301  002F' 0800'              	movf	?___flmul^(0+256),w
  7302  0030' 0023               	movlb	3	; select bank3
  7303  0031' 0080'              	movwf	_scaling$1608^(0+384)
  7304                           
  7305                           ;charger_discharger.c: 321:     log_data.current = (uint16_t) ( ( ( (float)iavg * 2.5 * 
      +                          5000.0 ) / 4096.0 ) + 0.5 );
  7306  0032' 0800'              	movf	(_scaling$1608+3)^(0+384),w
  7307  0033' 0022               	movlb	2	; select bank2
  7308  0034' 0080'              	movwf	(___flmul@a+3)^(0+256)
  7309  0035' 0023               	movlb	3	; select bank3
  7310  0036' 0800'              	movf	(_scaling$1608+2)^(0+384),w
  7311  0037' 0022               	movlb	2	; select bank2
  7312  0038' 0080'              	movwf	(___flmul@a+2)^(0+256)
  7313  0039' 0023               	movlb	3	; select bank3
  7314  003A' 0800'              	movf	(_scaling$1608+1)^(0+384),w
  7315  003B' 0022               	movlb	2	; select bank2
  7316  003C' 0080'              	movwf	(___flmul@a+1)^(0+256)
  7317  003D' 0023               	movlb	3	; select bank3
  7318  003E' 0800'              	movf	_scaling$1608^(0+384),w
  7319  003F' 0022               	movlb	2	; select bank2
  7320  0040' 0080'              	movwf	___flmul@a^(0+256)
  7321  0041' 3045               	movlw	69
  7322  0042' 0080'              	movwf	(___flmul@b+3)^(0+256)
  7323  0043' 309C               	movlw	156
  7324  0044' 0080'              	movwf	(___flmul@b+2)^(0+256)
  7325  0045' 3040               	movlw	64
  7326  0046' 0080'              	movwf	(___flmul@b+1)^(0+256)
  7327  0047' 3000               	movlw	0
  7328  0048' 0080'              	movwf	___flmul@b^(0+256)
  7329  0049' 3180' 2000' 3180'  	fcall	___flmul
  7330  004C' 0022               	movlb	2	; select bank2
  7331  004D' 0800'              	movf	(?___flmul+3)^(0+256),w
  7332  004E' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  7333  004F' 0800'              	movf	(?___flmul+2)^(0+256),w
  7334  0050' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  7335  0051' 0800'              	movf	(?___flmul+1)^(0+256),w
  7336  0052' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  7337  0053' 0800'              	movf	?___flmul^(0+256),w
  7338  0054' 0080'              	movwf	___fldiv@b^(0+256)
  7339  0055' 3045               	movlw	69
  7340  0056' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  7341  0057' 3080               	movlw	128
  7342  0058' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  7343  0059' 3000               	movlw	0
  7344  005A' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  7345  005B' 3000               	movlw	0
  7346  005C' 0080'              	movwf	___fldiv@a^(0+256)
  7347  005D' 3180' 2000' 3180'  	fcall	___fldiv
  7348  0060' 0022               	movlb	2	; select bank2
  7349  0061' 0800'              	movf	(?___fldiv+3)^(0+256),w
  7350  0062' 0080'              	movwf	(___fladd@a+3)^(0+256)
  7351  0063' 0800'              	movf	(?___fldiv+2)^(0+256),w
  7352  0064' 0080'              	movwf	(___fladd@a+2)^(0+256)
  7353  0065' 0800'              	movf	(?___fldiv+1)^(0+256),w
  7354  0066' 0080'              	movwf	(___fladd@a+1)^(0+256)
  7355  0067' 0800'              	movf	?___fldiv^(0+256),w
  7356  0068' 0080'              	movwf	___fladd@a^(0+256)
  7357  0069' 303F               	movlw	63
  7358  006A' 0080'              	movwf	(___fladd@b+3)^(0+256)
  7359  006B' 3000               	movlw	0
  7360  006C' 0080'              	movwf	(___fladd@b+2)^(0+256)
  7361  006D' 3000               	movlw	0
  7362  006E' 0080'              	movwf	(___fladd@b+1)^(0+256)
  7363  006F' 3000               	movlw	0
  7364  0070' 0080'              	movwf	___fladd@b^(0+256)
  7365  0071' 3180' 2000' 3180'  	fcall	___fladd
  7366  0074' 0022               	movlb	2	; select bank2
  7367  0075' 0800'              	movf	(?___fladd+3)^(0+256),w
  7368  0076' 0023               	movlb	3	; select bank3
  7369  0077' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  7370  0078' 0022               	movlb	2	; select bank2
  7371  0079' 0800'              	movf	(?___fladd+2)^(0+256),w
  7372  007A' 0023               	movlb	3	; select bank3
  7373  007B' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  7374  007C' 0022               	movlb	2	; select bank2
  7375  007D' 0800'              	movf	(?___fladd+1)^(0+256),w
  7376  007E' 0023               	movlb	3	; select bank3
  7377  007F' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  7378  0080' 0022               	movlb	2	; select bank2
  7379  0081' 0800'              	movf	?___fladd^(0+256),w
  7380  0082' 0023               	movlb	3	; select bank3
  7381  0083' 0080'              	movwf	___fltol@f1^(0+384)
  7382  0084' 3180' 2000' 3180'  	fcall	___fltol
  7383  0087' 0023               	movlb	3	; select bank3
  7384  0088' 0800'              	movf	(?___fltol+1)^(0+384),w
  7385  0089' 0025               	movlb	5	; select bank5
  7386  008A' 0087'              	movwf	((_log_data+1)^(0+640)+7)
  7387  008B' 0023               	movlb	3	; select bank3
  7388  008C' 0800'              	movf	?___fltol^(0+384),w
  7389  008D' 0025               	movlb	5	; select bank5
  7390  008E' 0087'              	movwf	(_log_data^(0+640)+7)
  7391                           
  7392                           ;charger_discharger.c: 322:     log_data.voltage = (uint16_t) ( ( ( (float)vavg * 5000.0
      +                           ) / 4096.0 ) + 0.5 );
  7393  008F' 0023               	movlb	3	; select bank3
  7394  0090' 0800'              	movf	_vavg^(0+384),w
  7395  0091' 0022               	movlb	2	; select bank2
  7396  0092' 0080'              	movwf	___xxtofl@val^(0+256)
  7397  0093' 0023               	movlb	3	; select bank3
  7398  0094' 0800'              	movf	(_vavg+1)^(0+384),w
  7399  0095' 0022               	movlb	2	; select bank2
  7400  0096' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  7401  0097' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  7402  0098' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  7403  0099' 3000               	movlw	0
  7404  009A' 3180' 2000' 3180'  	fcall	___xxtofl
  7405  009D' 0022               	movlb	2	; select bank2
  7406  009E' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  7407  009F' 0080'              	movwf	(___flmul@a+3)^(0+256)
  7408  00A0' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  7409  00A1' 0080'              	movwf	(___flmul@a+2)^(0+256)
  7410  00A2' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  7411  00A3' 0080'              	movwf	(___flmul@a+1)^(0+256)
  7412  00A4' 0800'              	movf	?___xxtofl^(0+256),w
  7413  00A5' 0080'              	movwf	___flmul@a^(0+256)
  7414  00A6' 3045               	movlw	69
  7415  00A7' 0080'              	movwf	(___flmul@b+3)^(0+256)
  7416  00A8' 309C               	movlw	156
  7417  00A9' 0080'              	movwf	(___flmul@b+2)^(0+256)
  7418  00AA' 3040               	movlw	64
  7419  00AB' 0080'              	movwf	(___flmul@b+1)^(0+256)
  7420  00AC' 3000               	movlw	0
  7421  00AD' 0080'              	movwf	___flmul@b^(0+256)
  7422  00AE' 3180' 2000' 3180'  	fcall	___flmul
  7423  00B1' 0022               	movlb	2	; select bank2
  7424  00B2' 0800'              	movf	(?___flmul+3)^(0+256),w
  7425  00B3' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  7426  00B4' 0800'              	movf	(?___flmul+2)^(0+256),w
  7427  00B5' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  7428  00B6' 0800'              	movf	(?___flmul+1)^(0+256),w
  7429  00B7' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  7430  00B8' 0800'              	movf	?___flmul^(0+256),w
  7431  00B9' 0080'              	movwf	___fldiv@b^(0+256)
  7432  00BA' 3045               	movlw	69
  7433  00BB' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  7434  00BC' 3080               	movlw	128
  7435  00BD' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  7436  00BE' 3000               	movlw	0
  7437  00BF' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  7438  00C0' 3000               	movlw	0
  7439  00C1' 0080'              	movwf	___fldiv@a^(0+256)
  7440  00C2' 3180' 2000' 3180'  	fcall	___fldiv
  7441  00C5' 0022               	movlb	2	; select bank2
  7442  00C6' 0800'              	movf	(?___fldiv+3)^(0+256),w
  7443  00C7' 0080'              	movwf	(___fladd@a+3)^(0+256)
  7444  00C8' 0800'              	movf	(?___fldiv+2)^(0+256),w
  7445  00C9' 0080'              	movwf	(___fladd@a+2)^(0+256)
  7446  00CA' 0800'              	movf	(?___fldiv+1)^(0+256),w
  7447  00CB' 0080'              	movwf	(___fladd@a+1)^(0+256)
  7448  00CC' 0800'              	movf	?___fldiv^(0+256),w
  7449  00CD' 0080'              	movwf	___fladd@a^(0+256)
  7450  00CE' 303F               	movlw	63
  7451  00CF' 0080'              	movwf	(___fladd@b+3)^(0+256)
  7452  00D0' 3000               	movlw	0
  7453  00D1' 0080'              	movwf	(___fladd@b+2)^(0+256)
  7454  00D2' 3000               	movlw	0
  7455  00D3' 0080'              	movwf	(___fladd@b+1)^(0+256)
  7456  00D4' 3000               	movlw	0
  7457  00D5' 0080'              	movwf	___fladd@b^(0+256)
  7458  00D6' 3180' 2000' 3180'  	fcall	___fladd
  7459  00D9' 0022               	movlb	2	; select bank2
  7460  00DA' 0800'              	movf	(?___fladd+3)^(0+256),w
  7461  00DB' 0023               	movlb	3	; select bank3
  7462  00DC' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  7463  00DD' 0022               	movlb	2	; select bank2
  7464  00DE' 0800'              	movf	(?___fladd+2)^(0+256),w
  7465  00DF' 0023               	movlb	3	; select bank3
  7466  00E0' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  7467  00E1' 0022               	movlb	2	; select bank2
  7468  00E2' 0800'              	movf	(?___fladd+1)^(0+256),w
  7469  00E3' 0023               	movlb	3	; select bank3
  7470  00E4' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  7471  00E5' 0022               	movlb	2	; select bank2
  7472  00E6' 0800'              	movf	?___fladd^(0+256),w
  7473  00E7' 0023               	movlb	3	; select bank3
  7474  00E8' 0080'              	movwf	___fltol@f1^(0+384)
  7475  00E9' 3180' 2000' 3180'  	fcall	___fltol
  7476  00EC' 0023               	movlb	3	; select bank3
  7477  00ED' 0800'              	movf	(?___fltol+1)^(0+384),w
  7478  00EE' 0025               	movlb	5	; select bank5
  7479  00EF' 0085'              	movwf	((_log_data+1)^(0+640)+5)
  7480  00F0' 0023               	movlb	3	; select bank3
  7481  00F1' 0800'              	movf	?___fltol^(0+384),w
  7482  00F2' 0025               	movlb	5	; select bank5
  7483  00F3' 0085'              	movwf	(_log_data^(0+640)+5)
  7484                           
  7485                           ;charger_discharger.c: 323:     qavg += (float)( ( ( (float)iavg * 2.5 * 5000.0 ) / 4096
      +                          .0 ) + 0.5 ) / 3600.0;
  7486  00F4' 0023               	movlb	3	; select bank3
  7487  00F5' 0800'              	movf	_iavg^(0+384),w
  7488  00F6' 0022               	movlb	2	; select bank2
  7489  00F7' 0080'              	movwf	___xxtofl@val^(0+256)
  7490  00F8' 0023               	movlb	3	; select bank3
  7491  00F9' 0800'              	movf	(_iavg+1)^(0+384),w
  7492  00FA' 0022               	movlb	2	; select bank2
  7493  00FB' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  7494  00FC' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  7495  00FD' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  7496  00FE' 3000               	movlw	0
  7497  00FF' 3180' 2000' 3180'  	fcall	___xxtofl
  7498  0102' 0022               	movlb	2	; select bank2
  7499  0103' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  7500  0104' 0080'              	movwf	(___flmul@a+3)^(0+256)
  7501  0105' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  7502  0106' 0080'              	movwf	(___flmul@a+2)^(0+256)
  7503  0107' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  7504  0108' 0080'              	movwf	(___flmul@a+1)^(0+256)
  7505  0109' 0800'              	movf	?___xxtofl^(0+256),w
  7506  010A' 0080'              	movwf	___flmul@a^(0+256)
  7507  010B' 3040               	movlw	64
  7508  010C' 0080'              	movwf	(___flmul@b+3)^(0+256)
  7509  010D' 3020               	movlw	32
  7510  010E' 0080'              	movwf	(___flmul@b+2)^(0+256)
  7511  010F' 3000               	movlw	0
  7512  0110' 0080'              	movwf	(___flmul@b+1)^(0+256)
  7513  0111' 3000               	movlw	0
  7514  0112' 0080'              	movwf	___flmul@b^(0+256)
  7515  0113' 3180' 2000' 3180'  	fcall	___flmul
  7516  0116' 0022               	movlb	2	; select bank2
  7517  0117' 0800'              	movf	(?___flmul+3)^(0+256),w
  7518  0118' 0023               	movlb	3	; select bank3
  7519  0119' 0080'              	movwf	(_scaling$1608+3)^(0+384)
  7520  011A' 0022               	movlb	2	; select bank2
  7521  011B' 0800'              	movf	(?___flmul+2)^(0+256),w
  7522  011C' 0023               	movlb	3	; select bank3
  7523  011D' 0080'              	movwf	(_scaling$1608+2)^(0+384)
  7524  011E' 0022               	movlb	2	; select bank2
  7525  011F' 0800'              	movf	(?___flmul+1)^(0+256),w
  7526  0120' 0023               	movlb	3	; select bank3
  7527  0121' 0080'              	movwf	(_scaling$1608+1)^(0+384)
  7528  0122' 0022               	movlb	2	; select bank2
  7529  0123' 0800'              	movf	?___flmul^(0+256),w
  7530  0124' 0023               	movlb	3	; select bank3
  7531  0125' 0080'              	movwf	_scaling$1608^(0+384)
  7532                           
  7533                           ;charger_discharger.c: 323:     qavg += (float)( ( ( (float)iavg * 2.5 * 5000.0 ) / 4096
      +                          .0 ) + 0.5 ) / 3600.0;
  7534  0126' 0800'              	movf	(_scaling$1608+3)^(0+384),w
  7535  0127' 0022               	movlb	2	; select bank2
  7536  0128' 0080'              	movwf	(___flmul@a+3)^(0+256)
  7537  0129' 0023               	movlb	3	; select bank3
  7538  012A' 0800'              	movf	(_scaling$1608+2)^(0+384),w
  7539  012B' 0022               	movlb	2	; select bank2
  7540  012C' 0080'              	movwf	(___flmul@a+2)^(0+256)
  7541  012D' 0023               	movlb	3	; select bank3
  7542  012E' 0800'              	movf	(_scaling$1608+1)^(0+384),w
  7543  012F' 0022               	movlb	2	; select bank2
  7544  0130' 0080'              	movwf	(___flmul@a+1)^(0+256)
  7545  0131' 0023               	movlb	3	; select bank3
  7546  0132' 0800'              	movf	_scaling$1608^(0+384),w
  7547  0133' 0022               	movlb	2	; select bank2
  7548  0134' 0080'              	movwf	___flmul@a^(0+256)
  7549  0135' 3045               	movlw	69
  7550  0136' 0080'              	movwf	(___flmul@b+3)^(0+256)
  7551  0137' 309C               	movlw	156
  7552  0138' 0080'              	movwf	(___flmul@b+2)^(0+256)
  7553  0139' 3040               	movlw	64
  7554  013A' 0080'              	movwf	(___flmul@b+1)^(0+256)
  7555  013B' 3000               	movlw	0
  7556  013C' 0080'              	movwf	___flmul@b^(0+256)
  7557  013D' 3180' 2000' 3180'  	fcall	___flmul
  7558  0140' 0022               	movlb	2	; select bank2
  7559  0141' 0800'              	movf	(?___flmul+3)^(0+256),w
  7560  0142' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  7561  0143' 0800'              	movf	(?___flmul+2)^(0+256),w
  7562  0144' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  7563  0145' 0800'              	movf	(?___flmul+1)^(0+256),w
  7564  0146' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  7565  0147' 0800'              	movf	?___flmul^(0+256),w
  7566  0148' 0080'              	movwf	___fldiv@b^(0+256)
  7567  0149' 3045               	movlw	69
  7568  014A' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  7569  014B' 3080               	movlw	128
  7570  014C' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  7571  014D' 3000               	movlw	0
  7572  014E' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  7573  014F' 3000               	movlw	0
  7574  0150' 0080'              	movwf	___fldiv@a^(0+256)
  7575  0151' 3180' 2000' 3180'  	fcall	___fldiv
  7576  0154' 0022               	movlb	2	; select bank2
  7577  0155' 0800'              	movf	(?___fldiv+3)^(0+256),w
  7578  0156' 0080'              	movwf	(___fladd@a+3)^(0+256)
  7579  0157' 0800'              	movf	(?___fldiv+2)^(0+256),w
  7580  0158' 0080'              	movwf	(___fladd@a+2)^(0+256)
  7581  0159' 0800'              	movf	(?___fldiv+1)^(0+256),w
  7582  015A' 0080'              	movwf	(___fladd@a+1)^(0+256)
  7583  015B' 0800'              	movf	?___fldiv^(0+256),w
  7584  015C' 0080'              	movwf	___fladd@a^(0+256)
  7585  015D' 303F               	movlw	63
  7586  015E' 0080'              	movwf	(___fladd@b+3)^(0+256)
  7587  015F' 3000               	movlw	0
  7588  0160' 0080'              	movwf	(___fladd@b+2)^(0+256)
  7589  0161' 3000               	movlw	0
  7590  0162' 0080'              	movwf	(___fladd@b+1)^(0+256)
  7591  0163' 3000               	movlw	0
  7592  0164' 0080'              	movwf	___fladd@b^(0+256)
  7593  0165' 3180' 2000' 3180'  	fcall	___fladd
  7594  0168' 0022               	movlb	2	; select bank2
  7595  0169' 0800'              	movf	(?___fladd+3)^(0+256),w
  7596  016A' 0023               	movlb	3	; select bank3
  7597  016B' 0080'              	movwf	(_scaling$1609+3)^(0+384)
  7598  016C' 0022               	movlb	2	; select bank2
  7599  016D' 0800'              	movf	(?___fladd+2)^(0+256),w
  7600  016E' 0023               	movlb	3	; select bank3
  7601  016F' 0080'              	movwf	(_scaling$1609+2)^(0+384)
  7602  0170' 0022               	movlb	2	; select bank2
  7603  0171' 0800'              	movf	(?___fladd+1)^(0+256),w
  7604  0172' 0023               	movlb	3	; select bank3
  7605  0173' 0080'              	movwf	(_scaling$1609+1)^(0+384)
  7606  0174' 0022               	movlb	2	; select bank2
  7607  0175' 0800'              	movf	?___fladd^(0+256),w
  7608  0176' 0023               	movlb	3	; select bank3
  7609  0177' 0080'              	movwf	_scaling$1609^(0+384)
  7610                           
  7611                           ;charger_discharger.c: 323:     qavg += (float)( ( ( (float)iavg * 2.5 * 5000.0 ) / 4096
      +                          .0 ) + 0.5 ) / 3600.0;
  7612  0178' 0800'              	movf	(_scaling$1609+3)^(0+384),w
  7613  0179' 0022               	movlb	2	; select bank2
  7614  017A' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  7615  017B' 0023               	movlb	3	; select bank3
  7616  017C' 0800'              	movf	(_scaling$1609+2)^(0+384),w
  7617  017D' 0022               	movlb	2	; select bank2
  7618  017E' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  7619  017F' 0023               	movlb	3	; select bank3
  7620  0180' 0800'              	movf	(_scaling$1609+1)^(0+384),w
  7621  0181' 0022               	movlb	2	; select bank2
  7622  0182' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  7623  0183' 0023               	movlb	3	; select bank3
  7624  0184' 0800'              	movf	_scaling$1609^(0+384),w
  7625  0185' 0022               	movlb	2	; select bank2
  7626  0186' 0080'              	movwf	___fldiv@b^(0+256)
  7627  0187' 3045               	movlw	69
  7628  0188' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  7629  0189' 3061               	movlw	97
  7630  018A' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  7631  018B' 3000               	movlw	0
  7632  018C' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  7633  018D' 3000               	movlw	0
  7634  018E' 0080'              	movwf	___fldiv@a^(0+256)
  7635  018F' 3180' 2000' 3180'  	fcall	___fldiv
  7636  0192' 0022               	movlb	2	; select bank2
  7637  0193' 0800'              	movf	(?___fldiv+3)^(0+256),w
  7638  0194' 0080'              	movwf	(___fladd@b+3)^(0+256)
  7639  0195' 0800'              	movf	(?___fldiv+2)^(0+256),w
  7640  0196' 0080'              	movwf	(___fladd@b+2)^(0+256)
  7641  0197' 0800'              	movf	(?___fldiv+1)^(0+256),w
  7642  0198' 0080'              	movwf	(___fladd@b+1)^(0+256)
  7643  0199' 0800'              	movf	?___fldiv^(0+256),w
  7644  019A' 0080'              	movwf	___fladd@b^(0+256)
  7645  019B' 0023               	movlb	3	; select bank3
  7646  019C' 0800'              	movf	(_qavg+3)^(0+384),w
  7647  019D' 0022               	movlb	2	; select bank2
  7648  019E' 0080'              	movwf	(___fladd@a+3)^(0+256)
  7649  019F' 0023               	movlb	3	; select bank3
  7650  01A0' 0800'              	movf	(_qavg+2)^(0+384),w
  7651  01A1' 0022               	movlb	2	; select bank2
  7652  01A2' 0080'              	movwf	(___fladd@a+2)^(0+256)
  7653  01A3' 0023               	movlb	3	; select bank3
  7654  01A4' 0800'              	movf	(_qavg+1)^(0+384),w
  7655  01A5' 0022               	movlb	2	; select bank2
  7656  01A6' 0080'              	movwf	(___fladd@a+1)^(0+256)
  7657  01A7' 0023               	movlb	3	; select bank3
  7658  01A8' 0800'              	movf	_qavg^(0+384),w
  7659  01A9' 0022               	movlb	2	; select bank2
  7660  01AA' 0080'              	movwf	___fladd@a^(0+256)
  7661  01AB' 3180' 2000' 3180'  	fcall	___fladd
  7662  01AE' 0022               	movlb	2	; select bank2
  7663  01AF' 0800'              	movf	(?___fladd+3)^(0+256),w
  7664  01B0' 0023               	movlb	3	; select bank3
  7665  01B1' 0080'              	movwf	(_qavg+3)^(0+384)
  7666  01B2' 0022               	movlb	2	; select bank2
  7667  01B3' 0800'              	movf	(?___fladd+2)^(0+256),w
  7668  01B4' 0023               	movlb	3	; select bank3
  7669  01B5' 0080'              	movwf	(_qavg+2)^(0+384)
  7670  01B6' 0022               	movlb	2	; select bank2
  7671  01B7' 0800'              	movf	(?___fladd+1)^(0+256),w
  7672  01B8' 0023               	movlb	3	; select bank3
  7673  01B9' 0080'              	movwf	(_qavg+1)^(0+384)
  7674  01BA' 0022               	movlb	2	; select bank2
  7675  01BB' 0800'              	movf	?___fladd^(0+256),w
  7676  01BC' 0023               	movlb	3	; select bank3
  7677  01BD' 0080'              	movwf	_qavg^(0+384)
  7678                           
  7679                           ;charger_discharger.c: 324:     log_data.capacity = (uint16_t) (qavg);
  7680  01BE' 0800'              	movf	(_qavg+3)^(0+384),w
  7681  01BF' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  7682  01C0' 0800'              	movf	(_qavg+2)^(0+384),w
  7683  01C1' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  7684  01C2' 0800'              	movf	(_qavg+1)^(0+384),w
  7685  01C3' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  7686  01C4' 0800'              	movf	_qavg^(0+384),w
  7687  01C5' 0080'              	movwf	___fltol@f1^(0+384)
  7688  01C6' 3180' 2000' 3180'  	fcall	___fltol
  7689  01C9' 0023               	movlb	3	; select bank3
  7690  01CA' 0800'              	movf	(?___fltol+1)^(0+384),w
  7691  01CB' 0025               	movlb	5	; select bank5
  7692  01CC' 0089'              	movwf	((_log_data+1)^(0+640)+9)
  7693  01CD' 0023               	movlb	3	; select bank3
  7694  01CE' 0800'              	movf	?___fltol^(0+384),w
  7695  01CF' 0025               	movlb	5	; select bank5
  7696  01D0' 0089'              	movwf	(_log_data^(0+640)+9)
  7697  01D1'                    l6845:
  7698                           
  7699                           ;charger_discharger.c: 325:     if (basic_configuration.version == 2)
  7700  01D1' 3002               	movlw	2
  7701  01D2' 0024               	movlb	4	; select bank4
  7702  01D3' 0600'              	xorwf	_basic_configuration^(0+512),w
  7703  01D4' 1D03               	btfss	3,2
  7704  01D5' 2800'              	goto	u7041
  7705  01D6' 2800'              	goto	u7040
  7706  01D7'                    u7041:
  7707  01D7' 2800'              	goto	l391
  7708  01D8'                    u7040:
  7709  01D8'                    l6847:
  7710                           
  7711                           ;charger_discharger.c: 326:     {;charger_discharger.c: 327:         if (vavg > vmax)
  7712  01D8' 0023               	movlb	3	; select bank3
  7713  01D9' 0800'              	movf	(_vavg+1)^(0+384),w
  7714  01DA' 0200'              	subwf	(_vmax+1)^(0+384),w
  7715  01DB' 1D03               	skipz
  7716  01DC' 2800'              	goto	u7055
  7717  01DD' 0800'              	movf	_vavg^(0+384),w
  7718  01DE' 0200'              	subwf	_vmax^(0+384),w
  7719  01DF'                    u7055:
  7720  01DF' 1803               	skipnc
  7721  01E0' 2800'              	goto	u7051
  7722  01E1' 2800'              	goto	u7050
  7723  01E2'                    u7051:
  7724  01E2' 2800'              	goto	l391
  7725  01E3'                    u7050:
  7726  01E3'                    l6849:
  7727                           
  7728                           ;charger_discharger.c: 328:         {;charger_discharger.c: 329:             (vmax = vav
      +                          g);
  7729  01E3' 0800'              	movf	(_vavg+1)^(0+384),w
  7730  01E4' 0080'              	movwf	(_vmax+1)^(0+384)
  7731  01E5' 0800'              	movf	_vavg^(0+384),w
  7732  01E6' 0080'              	movwf	_vmax^(0+384)
  7733  01E7'                    l391:
  7734  01E7' 0008               	return
  7735  01E8'                    __end_of_scaling:
  7736                           
  7737                           	psect	text15
  7738  0000'                    __ptext15:	
  7739 ;; *************** function _log_control *****************
  7740 ;; Defined at:
  7741 ;;		line 335 in file "charger_discharger.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;		None
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1    wreg      void 
  7748 ;; Registers used:
  7749 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;Total ram usage:        0 bytes
  7760 ;; Hardware stack levels used: 1
  7761 ;; Hardware stack levels required when called: 7
  7762 ;; This function calls:
  7763 ;;		_UART_send_byte
  7764 ;;		_UART_send_some_bytes
  7765 ;;		___fltol
  7766 ;; This function is called by:
  7767 ;;		_main
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771  0000'                    _log_control:	
  7772                           ;psect for function _log_control
  7773                           
  7774  0000'                    l7455:	
  7775                           ;incstack = 0
  7776                           ; Regs used in _log_control: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7777                           
  7778                           
  7779                           ;charger_discharger.c: 337:     if(start)
  7780  0000' 0021               	movlb	1	; select bank1
  7781  0001' 0800'              	movf	_start^(0+128),w
  7782  0002' 1903               	btfsc	3,2
  7783  0003' 2800'              	goto	u7341
  7784  0004' 2800'              	goto	u7340
  7785  0005'                    u7341:
  7786  0005' 2800'              	goto	l7467
  7787  0006'                    u7340:
  7788  0006'                    l7457:
  7789                           
  7790                           ;charger_discharger.c: 338:     {;charger_discharger.c: 339:         log_data_ptr = &log
      +                          _data;
  7791  0006' 3000'              	movlw	(low (_log_data| (0+512)))& (0+255)
  7792  0007' 0023               	movlb	3	; select bank3
  7793  0008' 0080'              	movwf	_log_data_ptr^(0+384)
  7794                           
  7795                           ;charger_discharger.c: 340:         log_data.cell_counter = cell_count;
  7796  0009' 0800'              	movf	_cell_count^(0+384),w
  7797  000A' 0025               	movlb	5	; select bank5
  7798  000B' 0080'              	movwf	_log_data^(0+640)
  7799                           
  7800                           ;charger_discharger.c: 341:         log_data.state = state;
  7801  000C' 0023               	movlb	3	; select bank3
  7802  000D' 0800'              	movf	_state^(0+384),w
  7803  000E' 0025               	movlb	5	; select bank5
  7804  000F' 0082'              	movwf	(_log_data^(0+640)+2)
  7805                           
  7806                           ;charger_discharger.c: 342:         log_data.repetition_counter = repetition_counter;
  7807  0010' 0023               	movlb	3	; select bank3
  7808  0011' 0800'              	movf	_repetition_counter^(0+384),w
  7809  0012' 0025               	movlb	5	; select bank5
  7810  0013' 0081'              	movwf	(_log_data^(0+640)+1)
  7811                           
  7812                           ;charger_discharger.c: 343:         log_data.elapsed_time = second;
  7813  0014' 0023               	movlb	3	; select bank3
  7814  0015' 0800'              	movf	(_second+1)^(0+384),w
  7815  0016' 0025               	movlb	5	; select bank5
  7816  0017' 0083'              	movwf	((_log_data+1)^(0+640)+3)
  7817  0018' 0023               	movlb	3	; select bank3
  7818  0019' 0800'              	movf	_second^(0+384),w
  7819  001A' 0025               	movlb	5	; select bank5
  7820  001B' 0083'              	movwf	(_log_data^(0+640)+3)
  7821  001C'                    l7459:
  7822                           
  7823                           ;charger_discharger.c: 344:         log_data.duty_cycle = (uint16_t) pidt;
  7824  001C' 0023               	movlb	3	; select bank3
  7825  001D' 0800'              	movf	(_pidt+3)^(0+384),w
  7826  001E' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  7827  001F' 0800'              	movf	(_pidt+2)^(0+384),w
  7828  0020' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  7829  0021' 0800'              	movf	(_pidt+1)^(0+384),w
  7830  0022' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  7831  0023' 0800'              	movf	_pidt^(0+384),w
  7832  0024' 0080'              	movwf	___fltol@f1^(0+384)
  7833  0025' 3180' 2000' 3180'  	fcall	___fltol
  7834  0028' 0023               	movlb	3	; select bank3
  7835  0029' 0800'              	movf	(?___fltol+1)^(0+384),w
  7836  002A' 0025               	movlb	5	; select bank5
  7837  002B' 008D'              	movwf	((_log_data+1)^(0+640)+13)
  7838  002C' 0023               	movlb	3	; select bank3
  7839  002D' 0800'              	movf	?___fltol^(0+384),w
  7840  002E' 0025               	movlb	5	; select bank5
  7841  002F' 008D'              	movwf	(_log_data^(0+640)+13)
  7842  0030'                    l7461:
  7843                           
  7844                           ;charger_discharger.c: 345:         UART_send_byte(0xDD);
  7845  0030' 30DD               	movlw	221
  7846  0031' 3180' 2000' 3180'  	fcall	_UART_send_byte
  7847  0034'                    l7463:
  7848                           
  7849                           ;charger_discharger.c: 346:         UART_send_some_bytes(sizeof(log_data),(uint8_t*)log_
      +                          data_ptr);
  7850  0034' 0023               	movlb	3	; select bank3
  7851  0035' 0800'              	movf	_log_data_ptr^(0+384),w
  7852  0036' 0022               	movlb	2	; select bank2
  7853  0037' 0080'              	movwf	UART_send_some_bytes@data^(0+256)
  7854  0038' 39FF               	andlw	255
  7855  0039' 1D03               	skipz
  7856  003A' 3002               	movlw	2
  7857  003B' 0080'              	movwf	(UART_send_some_bytes@data+1)^(0+256)
  7858  003C' 300F               	movlw	15
  7859  003D' 3180' 2000' 3180'  	fcall	_UART_send_some_bytes
  7860  0040'                    l7465:
  7861                           
  7862                           ;charger_discharger.c: 347:         UART_send_byte(0x77);
  7863  0040' 3077               	movlw	119
  7864  0041' 3180' 2000' 3180'  	fcall	_UART_send_byte
  7865                           
  7866                           ;charger_discharger.c: 348:     }else second = 0;
  7867  0044' 2800'              	goto	l396
  7868  0045'                    l7467:
  7869  0045' 0023               	movlb	3	; select bank3
  7870  0046' 0180'              	clrf	_second^(0+384)
  7871  0047' 0180'              	clrf	(_second+1)^(0+384)
  7872  0048'                    l396:
  7873  0048' 0008               	return
  7874  0049'                    __end_of_log_control:
  7875                           
  7876                           	psect	text16
  7877  0000'                    __ptext16:	
  7878 ;; *************** function _UART_send_some_bytes *****************
  7879 ;; Defined at:
  7880 ;;		line 469 in file "charger_discharger.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;  length          1    wreg     unsigned char 
  7883 ;;  data            2    1[BANK2 ] PTR unsigned char 
  7884 ;;		 -> NULL(0), log_data(15), converter_configuration(14), test_configuration(17), 
  7885 ;;		 -> basic_configuration(17), command_interpreter@calc_checksum(2), 
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;  length          1    3[BANK2 ] unsigned char 
  7888 ;; Return value:  Size  Location     Type
  7889 ;;                  1    wreg      void 
  7890 ;; Registers used:
  7891 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7892 ;; Tracked objects:
  7893 ;;		On entry : 0/0
  7894 ;;		On exit  : 0/0
  7895 ;;		Unchanged: 0/0
  7896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7897 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  7898 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7900 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  7901 ;;Total ram usage:        3 bytes
  7902 ;; Hardware stack levels used: 1
  7903 ;; Hardware stack levels required when called: 6
  7904 ;; This function calls:
  7905 ;;		_UART_send_byte
  7906 ;; This function is called by:
  7907 ;;		_log_control
  7908 ;; This function uses a non-reentrant model
  7909 ;;
  7910                           
  7911  0000'                    _UART_send_some_bytes:	
  7912                           ;psect for function _UART_send_some_bytes
  7913                           
  7914                           
  7915                           ;incstack = 0
  7916                           ; Regs used in _UART_send_some_bytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7917                           ;UART_send_some_bytes@length stored from wreg
  7918  0000' 0022               	movlb	2	; select bank2
  7919  0001' 0080'              	movwf	UART_send_some_bytes@length^(0+256)
  7920  0002'                    l7257:
  7921                           
  7922                           ;charger_discharger.c: 469: void UART_send_some_bytes(uint8_t length, uint8_t* data);cha
      +                          rger_discharger.c: 470: {;charger_discharger.c: 471:     while(length--)
  7923  0002' 2800'              	goto	l7263
  7924  0003'                    l7259:
  7925                           
  7926                           ;charger_discharger.c: 472:     {;charger_discharger.c: 473:         UART_send_byte(*dat
      +                          a++);
  7927  0003' 0800'              	movf	UART_send_some_bytes@data^(0+256),w
  7928  0004' 0086               	movwf	6
  7929  0005' 0800'              	movf	(UART_send_some_bytes@data+1)^(0+256),w
  7930  0006' 0087               	movwf	7
  7931  0007' 0801               	movf	1,w
  7932  0008' 3180' 2000' 3180'  	fcall	_UART_send_byte
  7933  000B'                    l7261:
  7934  000B' 3001               	movlw	1
  7935  000C' 0022               	movlb	2	; select bank2
  7936  000D' 0780'              	addwf	UART_send_some_bytes@data^(0+256),f
  7937  000E' 3000               	movlw	0
  7938  000F' 3D80'              	addwfc	(UART_send_some_bytes@data+1)^(0+256),f
  7939  0010'                    l7263:
  7940                           
  7941                           ;charger_discharger.c: 471:     while(length--)
  7942  0010' 3001               	movlw	1
  7943  0011' 0280'              	subwf	UART_send_some_bytes@length^(0+256),f
  7944  0012' 0A00'              	incf	UART_send_some_bytes@length^(0+256),w
  7945  0013' 1D03               	btfss	3,2
  7946  0014' 2800'              	goto	u7241
  7947  0015' 2800'              	goto	u7240
  7948  0016'                    u7241:
  7949  0016' 2800'              	goto	l7259
  7950  0017'                    u7240:
  7951  0017'                    l456:
  7952  0017' 0008               	return
  7953  0018'                    __end_of_UART_send_some_bytes:
  7954                           
  7955                           	psect	text17
  7956  0000'                    __ptext17:	
  7957 ;; *************** function _UART_send_byte *****************
  7958 ;; Defined at:
  7959 ;;		line 461 in file "charger_discharger.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;  byte            1    wreg     unsigned char 
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;  byte            1    0[BANK2 ] unsigned char 
  7964 ;; Return value:  Size  Location     Type
  7965 ;;                  1    wreg      void 
  7966 ;; Registers used:
  7967 ;;		wreg
  7968 ;; Tracked objects:
  7969 ;;		On entry : 0/0
  7970 ;;		On exit  : 0/0
  7971 ;;		Unchanged: 0/0
  7972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7974 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7976 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7977 ;;Total ram usage:        1 bytes
  7978 ;; Hardware stack levels used: 1
  7979 ;; Hardware stack levels required when called: 5
  7980 ;; This function calls:
  7981 ;;		Nothing
  7982 ;; This function is called by:
  7983 ;;		_log_control
  7984 ;;		_UART_send_some_bytes
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988  0000'                    _UART_send_byte:	
  7989                           ;psect for function _UART_send_byte
  7990                           
  7991                           
  7992                           ;incstack = 0
  7993                           ; Regs used in _UART_send_byte: [wreg]
  7994                           ;UART_send_byte@byte stored from wreg
  7995  0000' 0022               	movlb	2	; select bank2
  7996  0001' 0080'              	movwf	UART_send_byte@byte^(0+256)
  7997  0002'                    l5453:
  7998  0002'                    l447:	
  7999                           ;charger_discharger.c: 464:     {;charger_discharger.c: 465:     }
  8000                           
  8001                           
  8002                           ;charger_discharger.c: 463:     while(0 == TXIF)
  8003  0002' 0020               	movlb	0	; select bank0
  8004  0003' 1E11               	btfss	17,4	;volatile
  8005  0004' 2800'              	goto	u5541
  8006  0005' 2800'              	goto	u5540
  8007  0006'                    u5541:
  8008  0006' 2800'              	goto	l447
  8009  0007'                    u5540:
  8010  0007'                    l5455:
  8011                           
  8012                           ;charger_discharger.c: 466:     TX1REG = byte;
  8013  0007' 0022               	movlb	2	; select bank2
  8014  0008' 0800'              	movf	UART_send_byte@byte^(0+256),w
  8015  0009' 0023               	movlb	3	; select bank3
  8016  000A' 009A               	movwf	26	;volatile
  8017  000B'                    l450:
  8018  000B' 0008               	return
  8019  000C'                    __end_of_UART_send_byte:
  8020                           
  8021                           	psect	text18
  8022  0000'                    __ptext18:	
  8023 ;; *************** function _interrupt_enable *****************
  8024 ;; Defined at:
  8025 ;;		line 400 in file "charger_discharger.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;		None
  8028 ;; Auto vars:     Size  Location     Type
  8029 ;;  clear_buffer    1    0        unsigned char 
  8030 ;; Return value:  Size  Location     Type
  8031 ;;                  1    wreg      void 
  8032 ;; Registers used:
  8033 ;;		wreg, status,2
  8034 ;; Tracked objects:
  8035 ;;		On entry : 0/0
  8036 ;;		On exit  : 0/0
  8037 ;;		Unchanged: 0/0
  8038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8043 ;;Total ram usage:        0 bytes
  8044 ;; Hardware stack levels used: 1
  8045 ;; Hardware stack levels required when called: 5
  8046 ;; This function calls:
  8047 ;;		Nothing
  8048 ;; This function is called by:
  8049 ;;		_main
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053  0000'                    _interrupt_enable:	
  8054                           ;psect for function _interrupt_enable
  8055                           
  8056  0000'                    l6905:	
  8057                           ;incstack = 0
  8058                           ; Regs used in _interrupt_enable: [wreg+status,2]
  8059                           
  8060                           
  8061                           ;charger_discharger.c: 403:     while(RCIF){
  8062  0000' 2800'              	goto	l6909
  8063  0001'                    l6907:
  8064  0001' 0023               	movlb	3	; select bank3
  8065  0002' 0819               	movf	25,w	;volatile
  8066  0003'                    l6909:
  8067                           
  8068                           ;charger_discharger.c: 403:     while(RCIF){
  8069  0003' 0020               	movlb	0	; select bank0
  8070  0004' 1A91               	btfsc	17,5	;volatile
  8071  0005' 2800'              	goto	u7131
  8072  0006' 2800'              	goto	u7130
  8073  0007'                    u7131:
  8074  0007' 2800'              	goto	l6907
  8075  0008'                    u7130:
  8076  0008'                    l420:
  8077                           
  8078                           ;charger_discharger.c: 406:     RCIE = 1;
  8079  0008' 0021               	movlb	1	; select bank1
  8080  0009' 1691               	bsf	17,5	;volatile
  8081                           
  8082                           ;charger_discharger.c: 407:     TXIE = 0;
  8083  000A' 1211               	bcf	17,4	;volatile
  8084                           
  8085                           ;charger_discharger.c: 408:     TMR1IE = 1;
  8086  000B' 1411               	bsf	17,0	;volatile
  8087                           
  8088                           ;charger_discharger.c: 409:     PEIE = 1;
  8089  000C' 170B               	bsf	11,6	;volatile
  8090                           
  8091                           ;charger_discharger.c: 410:     GIE = 1;
  8092  000D' 178B               	bsf	11,7	;volatile
  8093  000E'                    l6911:
  8094                           
  8095                           ;charger_discharger.c: 411:     count = 1024;
  8096  000E' 3000               	movlw	0
  8097  000F' 0080'              	movwf	_count^(0+128)
  8098  0010' 3004               	movlw	4
  8099  0011' 0081'              	movwf	(_count^(0+128)+1)
  8100  0012'                    l6913:
  8101                           
  8102                           ;charger_discharger.c: 412:     TMR1IF = 0;
  8103  0012' 0020               	movlb	0	; select bank0
  8104  0013' 1011               	bcf	17,0	;volatile
  8105  0014'                    l6915:
  8106                           
  8107                           ;charger_discharger.c: 413:     TMR1ON = 1;
  8108  0014' 1418               	bsf	24,0	;volatile
  8109  0015'                    l421:
  8110  0015' 0008               	return
  8111  0016'                    __end_of_interrupt_enable:
  8112                           
  8113                           	psect	text19
  8114  0000'                    __ptext19:	
  8115 ;; *************** function _initialize *****************
  8116 ;; Defined at:
  8117 ;;		line 18 in file "charger_discharger.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;		None
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;		None
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  1    wreg      void 
  8124 ;; Registers used:
  8125 ;;		wreg, status,2, status,0, pclath, cstack
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8133 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  8134 ;;      Totals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  8135 ;;Total ram usage:        4 bytes
  8136 ;; Hardware stack levels used: 1
  8137 ;; Hardware stack levels required when called: 7
  8138 ;; This function calls:
  8139 ;;		_Cell_OFF
  8140 ;;		___xxtofl
  8141 ;;		_set_DC
  8142 ;; This function is called by:
  8143 ;;		_main
  8144 ;; This function uses a non-reentrant model
  8145 ;;
  8146                           
  8147  0000'                    _initialize:	
  8148                           ;psect for function _initialize
  8149                           
  8150  0000'                    l6435:	
  8151                           ;incstack = 0
  8152                           ; Regs used in _initialize: [wreg+status,2+status,0+pclath+cstack]
  8153                           
  8154  0000' 0064               	clrwdt	;# 
  8155                           
  8156                           ;charger_discharger.c: 22:     nWPUEN = 0;
  8157  0001' 0021               	movlb	1	; select bank1
  8158  0002' 1395               	bcf	21,7	;volatile
  8159                           
  8160                           ;charger_discharger.c: 23:     WPUE3 = 1;
  8161  0003' 0024               	movlb	4	; select bank4
  8162  0004' 1590               	bsf	16,3	;volatile
  8163  0005'                    l6437:
  8164                           
  8165                           ;charger_discharger.c: 25:     OSCCONbits.IRCF = 0b1111;
  8166  0005' 3078               	movlw	120
  8167  0006' 0021               	movlb	1	; select bank1
  8168  0007' 0499               	iorwf	25,f	;volatile
  8169                           
  8170                           ;charger_discharger.c: 26:     OSCCONbits.SCS = 0b00;
  8171  0008' 30FC               	movlw	-4
  8172  0009' 0599               	andwf	25,f	;volatile
  8173  000A'                    l6439:
  8174                           
  8175                           ;charger_discharger.c: 27:     OSCCONbits.SPLLEN = 1;
  8176  000A' 1799               	bsf	25,7	;volatile
  8177  000B'                    l6441:
  8178                           
  8179                           ;charger_discharger.c: 31:     TRISC3 = 0;
  8180  000B' 118E               	bcf	14,3	;volatile
  8181  000C'                    l6443:
  8182                           
  8183                           ;charger_discharger.c: 32:     WPUC3 = 0;
  8184  000C' 0024               	movlb	4	; select bank4
  8185  000D' 118E               	bcf	14,3	;volatile
  8186  000E'                    l6445:
  8187                           
  8188                           ;charger_discharger.c: 33:     TRISC4 = 0;
  8189  000E' 0021               	movlb	1	; select bank1
  8190  000F' 120E               	bcf	14,4	;volatile
  8191  0010'                    l6447:
  8192                           
  8193                           ;charger_discharger.c: 34:     WPUC4 = 0;
  8194  0010' 0024               	movlb	4	; select bank4
  8195  0011' 120E               	bcf	14,4	;volatile
  8196  0012'                    l6449:
  8197                           
  8198                           ;charger_discharger.c: 35:     TRISC5 = 0;
  8199  0012' 0021               	movlb	1	; select bank1
  8200  0013' 128E               	bcf	14,5	;volatile
  8201  0014'                    l6451:
  8202                           
  8203                           ;charger_discharger.c: 36:     WPUC5 = 0;
  8204  0014' 0024               	movlb	4	; select bank4
  8205  0015' 128E               	bcf	14,5	;volatile
  8206  0016'                    l6453:
  8207                           
  8208                           ;charger_discharger.c: 38:     TRISB2 = 0;
  8209  0016' 0021               	movlb	1	; select bank1
  8210  0017' 110D               	bcf	13,2	;volatile
  8211  0018'                    l6455:
  8212                           
  8213                           ;charger_discharger.c: 39:     ANSB2 = 0;
  8214  0018' 0023               	movlb	3	; select bank3
  8215  0019' 110D               	bcf	13,2	;volatile
  8216  001A'                    l6457:
  8217                           
  8218                           ;charger_discharger.c: 40:     WPUB2 = 0;
  8219  001A' 0024               	movlb	4	; select bank4
  8220  001B' 110D               	bcf	13,2	;volatile
  8221  001C'                    l6459:
  8222                           
  8223                           ;charger_discharger.c: 41:     TRISB3 = 0;
  8224  001C' 0021               	movlb	1	; select bank1
  8225  001D' 118D               	bcf	13,3	;volatile
  8226  001E'                    l6461:
  8227                           
  8228                           ;charger_discharger.c: 42:     ANSB3 = 0;
  8229  001E' 0023               	movlb	3	; select bank3
  8230  001F' 118D               	bcf	13,3	;volatile
  8231  0020'                    l6463:
  8232                           
  8233                           ;charger_discharger.c: 43:     WPUB3 = 0;
  8234  0020' 0024               	movlb	4	; select bank4
  8235  0021' 118D               	bcf	13,3	;volatile
  8236  0022'                    l6465:
  8237                           
  8238                           ;charger_discharger.c: 44:     TRISB4 = 0;
  8239  0022' 0021               	movlb	1	; select bank1
  8240  0023' 120D               	bcf	13,4	;volatile
  8241  0024'                    l6467:
  8242                           
  8243                           ;charger_discharger.c: 45:     ANSB4 = 0;
  8244  0024' 0023               	movlb	3	; select bank3
  8245  0025' 120D               	bcf	13,4	;volatile
  8246  0026'                    l6469:
  8247                           
  8248                           ;charger_discharger.c: 46:     WPUB4 = 0;
  8249  0026' 0024               	movlb	4	; select bank4
  8250  0027' 120D               	bcf	13,4	;volatile
  8251  0028'                    l6471:
  8252                           
  8253                           ;charger_discharger.c: 47:     TRISB5 = 0;
  8254  0028' 0021               	movlb	1	; select bank1
  8255  0029' 128D               	bcf	13,5	;volatile
  8256  002A'                    l6473:
  8257                           
  8258                           ;charger_discharger.c: 48:     ANSB5 = 0;
  8259  002A' 0023               	movlb	3	; select bank3
  8260  002B' 128D               	bcf	13,5	;volatile
  8261  002C'                    l6475:
  8262                           
  8263                           ;charger_discharger.c: 49:     WPUB5 = 0;
  8264  002C' 0024               	movlb	4	; select bank4
  8265  002D' 128D               	bcf	13,5	;volatile
  8266  002E'                    l6477:
  8267                           
  8268                           ;charger_discharger.c: 50:     Cell_OFF();
  8269  002E' 3180' 2000' 3180'  	fcall	_Cell_OFF
  8270  0031'                    l6479:
  8271                           
  8272                           ;charger_discharger.c: 52:     nT1SYNC = 0;
  8273  0031' 0020               	movlb	0	; select bank0
  8274  0032' 1118               	bcf	24,2	;volatile
  8275  0033'                    l6481:
  8276                           
  8277                           ;charger_discharger.c: 53:     T1OSCEN = 0;
  8278  0033' 1198               	bcf	24,3	;volatile
  8279  0034'                    l6483:
  8280                           
  8281                           ;charger_discharger.c: 54:     TMR1ON = 0;
  8282  0034' 1018               	bcf	24,0	;volatile
  8283  0035'                    l6485:
  8284                           
  8285                           ;charger_discharger.c: 55:     TMR1GE = 0;
  8286  0035' 1399               	bcf	25,7	;volatile
  8287  0036'                    l6487:
  8288                           
  8289                           ;charger_discharger.c: 56:     TMR1CS0 = 0;
  8290  0036' 1318               	bcf	24,6	;volatile
  8291  0037'                    l6489:
  8292                           
  8293                           ;charger_discharger.c: 57:     TMR1CS1 = 0;
  8294  0037' 1398               	bcf	24,7	;volatile
  8295  0038'                    l6491:
  8296                           
  8297                           ;charger_discharger.c: 58:     T1CKPS0 = 0;
  8298  0038' 1218               	bcf	24,4	;volatile
  8299  0039'                    l6493:
  8300                           
  8301                           ;charger_discharger.c: 59:     T1CKPS1 = 0;
  8302  0039' 1298               	bcf	24,5	;volatile
  8303  003A'                    l6495:
  8304                           
  8305                           ;charger_discharger.c: 60:     TMR1H = 0xE1;
  8306  003A' 30E1               	movlw	225
  8307  003B' 0097               	movwf	23	;volatile
  8308  003C'                    l6497:
  8309                           
  8310                           ;charger_discharger.c: 61:     TMR1L = 0x83;
  8311  003C' 3083               	movlw	131
  8312  003D' 0096               	movwf	22	;volatile
  8313  003E'                    l6499:
  8314                           
  8315                           ;charger_discharger.c: 63:     PSMC1CON = 0x00;
  8316  003E' 0030               	movlb	16	; select bank16
  8317  003F' 0191               	clrf	17	;volatile
  8318  0040'                    l6501:
  8319                           
  8320                           ;charger_discharger.c: 64:     PSMC1MDL = 0x00;
  8321  0040' 0192               	clrf	18	;volatile
  8322  0041'                    l6503:
  8323                           
  8324                           ;charger_discharger.c: 65:     PSMC1CLK = 0x01;
  8325  0041' 3001               	movlw	1
  8326  0042' 0094               	movwf	20	;volatile
  8327  0043'                    l6505:
  8328                           
  8329                           ;charger_discharger.c: 66:     PSMC1PRH = 0x01;
  8330  0043' 3001               	movlw	1
  8331  0044' 00A6               	movwf	38	;volatile
  8332  0045'                    l6507:
  8333                           
  8334                           ;charger_discharger.c: 67:     PSMC1PRL = 0xFF;
  8335  0045' 30FF               	movlw	255
  8336  0046' 00A5               	movwf	37	;volatile
  8337  0047'                    l6509:
  8338                           
  8339                           ;charger_discharger.c: 70:     PSMC1DCH = 0x00;
  8340  0047' 01A4               	clrf	36	;volatile
  8341  0048'                    l6511:
  8342                           
  8343                           ;charger_discharger.c: 71:     PSMC1DCL = 0x32;
  8344  0048' 3032               	movlw	50
  8345  0049' 00A3               	movwf	35	;volatile
  8346  004A'                    l6513:
  8347                           
  8348                           ;charger_discharger.c: 72:     PSMC1PHH = 0x00;
  8349  004A' 01A2               	clrf	34	;volatile
  8350  004B'                    l6515:
  8351                           
  8352                           ;charger_discharger.c: 73:     PSMC1PHL = 0x00;
  8353  004B' 01A1               	clrf	33	;volatile
  8354  004C'                    l6517:
  8355                           
  8356                           ;charger_discharger.c: 74:     P1STRC = 1;
  8357  004C' 152E               	bsf	46,2	;volatile
  8358  004D'                    l6519:
  8359                           
  8360                           ;charger_discharger.c: 75:     P1POLC = 0;
  8361  004D' 1116               	bcf	22,2	;volatile
  8362  004E'                    l6521:
  8363                           
  8364                           ;charger_discharger.c: 76:     P1OEC = 1;
  8365  004E' 1515               	bsf	21,2	;volatile
  8366  004F'                    l6523:
  8367                           
  8368                           ;charger_discharger.c: 77:     P1PRST = 1;
  8369  004F' 141C               	bsf	28,0	;volatile
  8370  0050'                    l6525:
  8371                           
  8372                           ;charger_discharger.c: 78:     P1PHST = 1;
  8373  0050' 141A               	bsf	26,0	;volatile
  8374  0051'                    l6527:
  8375                           
  8376                           ;charger_discharger.c: 79:     P1DCST = 1;
  8377  0051' 141B               	bsf	27,0	;volatile
  8378  0052'                    l6529:
  8379                           
  8380                           ;charger_discharger.c: 80:     PSMC1CON = 0x80;
  8381  0052' 3080               	movlw	128
  8382  0053' 0091               	movwf	17	;volatile
  8383  0054'                    l6531:
  8384                           
  8385                           ;charger_discharger.c: 84:     TRISC2 = 0;
  8386  0054' 0021               	movlb	1	; select bank1
  8387  0055' 110E               	bcf	14,2	;volatile
  8388  0056'                    l6533:
  8389                           
  8390                           ;charger_discharger.c: 85:     WPUC2 = 0;
  8391  0056' 0024               	movlb	4	; select bank4
  8392  0057' 110E               	bcf	14,2	;volatile
  8393  0058'                    l6535:
  8394                           
  8395                           ;charger_discharger.c: 87:     TRISA3 = 1;
  8396  0058' 0021               	movlb	1	; select bank1
  8397  0059' 158C               	bsf	12,3	;volatile
  8398  005A'                    l6537:
  8399                           
  8400                           ;charger_discharger.c: 88:     ANSA3 = 1;
  8401  005A' 0023               	movlb	3	; select bank3
  8402  005B' 158C               	bsf	12,3	;volatile
  8403  005C'                    l6539:
  8404                           
  8405                           ;charger_discharger.c: 89:     WPUA3 = 0;
  8406  005C' 0024               	movlb	4	; select bank4
  8407  005D' 118C               	bcf	12,3	;volatile
  8408  005E'                    l6541:
  8409                           
  8410                           ;charger_discharger.c: 90:     TRISB1 = 1;
  8411  005E' 0021               	movlb	1	; select bank1
  8412  005F' 148D               	bsf	13,1	;volatile
  8413  0060'                    l6543:
  8414                           
  8415                           ;charger_discharger.c: 91:     ANSB1 = 1;
  8416  0060' 0023               	movlb	3	; select bank3
  8417  0061' 148D               	bsf	13,1	;volatile
  8418  0062'                    l6545:
  8419                           
  8420                           ;charger_discharger.c: 92:     WPUB1 = 0;
  8421  0062' 0024               	movlb	4	; select bank4
  8422  0063' 108D               	bcf	13,1	;volatile
  8423  0064'                    l6547:
  8424                           
  8425                           ;charger_discharger.c: 93:     TRISB0 = 1;
  8426  0064' 0021               	movlb	1	; select bank1
  8427  0065' 140D               	bsf	13,0	;volatile
  8428  0066'                    l6549:
  8429                           
  8430                           ;charger_discharger.c: 94:     ANSB0 = 1;
  8431  0066' 0023               	movlb	3	; select bank3
  8432  0067' 140D               	bsf	13,0	;volatile
  8433  0068'                    l6551:
  8434                           
  8435                           ;charger_discharger.c: 95:     WPUB0 = 0;
  8436  0068' 0024               	movlb	4	; select bank4
  8437  0069' 100D               	bcf	13,0	;volatile
  8438  006A'                    l6553:
  8439                           
  8440                           ;charger_discharger.c: 96:     TRISA5 = 1;
  8441  006A' 0021               	movlb	1	; select bank1
  8442  006B' 168C               	bsf	12,5	;volatile
  8443  006C'                    l6555:
  8444                           
  8445                           ;charger_discharger.c: 97:     ANSA5 = 1;
  8446  006C' 0023               	movlb	3	; select bank3
  8447  006D' 168C               	bsf	12,5	;volatile
  8448  006E'                    l6557:
  8449                           
  8450                           ;charger_discharger.c: 98:     WPUA5 = 0;
  8451  006E' 0024               	movlb	4	; select bank4
  8452  006F' 128C               	bcf	12,5	;volatile
  8453  0070'                    l6559:
  8454                           
  8455                           ;charger_discharger.c: 99:     ADCON0bits.ADRMD = 0;
  8456  0070' 0021               	movlb	1	; select bank1
  8457  0071' 139D               	bcf	29,7	;volatile
  8458  0072'                    l6561:
  8459                           
  8460                           ;charger_discharger.c: 100:     ADCON1bits.ADCS = 0b010;
  8461  0072' 081E               	movf	30,w	;volatile
  8462  0073' 398F               	andlw	-113
  8463  0074' 3820               	iorlw	32
  8464  0075' 009E               	movwf	30	;volatile
  8465  0076'                    l6563:
  8466                           
  8467                           ;charger_discharger.c: 101:     ADCON1bits.ADNREF = 0;
  8468  0076' 111E               	bcf	30,2	;volatile
  8469  0077'                    l6565:
  8470                           
  8471                           ;charger_discharger.c: 102:     ADCON1bits.ADPREF = 0b01;
  8472  0077' 081E               	movf	30,w	;volatile
  8473  0078' 39FC               	andlw	-4
  8474  0079' 3801               	iorlw	1
  8475  007A' 009E               	movwf	30	;volatile
  8476  007B'                    l6567:
  8477                           
  8478                           ;charger_discharger.c: 103:     ADCON1bits.ADFM = 1;
  8479  007B' 179E               	bsf	30,7	;volatile
  8480  007C'                    l6569:
  8481                           
  8482                           ;charger_discharger.c: 104:     ADCON2bits.CHSN = 0b1111;
  8483  007C' 300F               	movlw	15
  8484  007D' 049F               	iorwf	31,f	;volatile
  8485  007E'                    l6571:
  8486                           
  8487                           ;charger_discharger.c: 105:     ADCON0bits.ADON = 1;
  8488  007E' 141D               	bsf	29,0	;volatile
  8489  007F'                    l6573:
  8490                           
  8491                           ;charger_discharger.c: 107:     TXSEL = 0;
  8492  007F' 0022               	movlb	2	; select bank2
  8493  0080' 111D               	bcf	29,2	;volatile
  8494  0081'                    l6575:
  8495                           
  8496                           ;charger_discharger.c: 108:     RXSEL = 0;
  8497  0081' 109D               	bcf	29,1	;volatile
  8498  0082'                    l6577:
  8499                           
  8500                           ;charger_discharger.c: 109:     SP1BRGH = 0x00;
  8501  0082' 0023               	movlb	3	; select bank3
  8502  0083' 019C               	clrf	28	;volatile
  8503  0084'                    l6579:
  8504                           
  8505                           ;charger_discharger.c: 110:     SP1BRGL = 0x8A;
  8506  0084' 308A               	movlw	138
  8507  0085' 009B               	movwf	27	;volatile
  8508  0086'                    l6581:
  8509                           
  8510                           ;charger_discharger.c: 111:     BRGH = 1;
  8511  0086' 151E               	bsf	30,2	;volatile
  8512  0087'                    l6583:
  8513                           
  8514                           ;charger_discharger.c: 112:     BRG16 = 1;
  8515  0087' 159F               	bsf	31,3	;volatile
  8516  0088'                    l6585:
  8517                           
  8518                           ;charger_discharger.c: 113:     SYNC = 0;
  8519  0088' 121E               	bcf	30,4	;volatile
  8520  0089'                    l6587:
  8521                           
  8522                           ;charger_discharger.c: 114:     SPEN = 1;
  8523  0089' 179D               	bsf	29,7	;volatile
  8524  008A'                    l6589:
  8525                           
  8526                           ;charger_discharger.c: 115:     TXEN = 1;
  8527  008A' 169E               	bsf	30,5	;volatile
  8528  008B'                    l6591:
  8529                           
  8530                           ;charger_discharger.c: 116:     CREN = 1;
  8531  008B' 161D               	bsf	29,4	;volatile
  8532  008C'                    l6593:
  8533                           
  8534                           ;charger_discharger.c: 117:     TX9 = 0;
  8535  008C' 131E               	bcf	30,6	;volatile
  8536  008D'                    l6595:
  8537                           
  8538                           ;charger_discharger.c: 118:     RX9 = 0;
  8539  008D' 131D               	bcf	29,6	;volatile
  8540  008E'                    l6597:
  8541                           
  8542                           ;charger_discharger.c: 119:     RCIE = 0;
  8543  008E' 0021               	movlb	1	; select bank1
  8544  008F' 1291               	bcf	17,5	;volatile
  8545  0090'                    l6599:
  8546                           
  8547                           ;charger_discharger.c: 120:     TXIE = 0;
  8548  0090' 1211               	bcf	17,4	;volatile
  8549  0091'                    l6601:
  8550                           
  8551                           ;charger_discharger.c: 122:     { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(320000
      +                          00/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _delay
      +                          ((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(32000
      +                          000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pidi = 
      +                          0.0;};
  8552  0091' 0020               	movlb	0	; select bank0
  8553  0092' 118E               	bcf	14,3	;volatile
  8554  0093'                    l6603:
  8555  0093' 120E               	bcf	14,4	;volatile
  8556  0094'                    l6605:
  8557  0094' 3005               	movlw	5
  8558  0095' 0023               	movlb	3	; select bank3
  8559  0096' 0081'              	movwf	(??_initialize^(0+384)+1)
  8560  0097' 300F               	movlw	15
  8561  0098' 0080'              	movwf	??_initialize^(0+384)
  8562  0099' 30F1               	movlw	241
  8563  009A'                    u7817:
  8564  009A' 0B89               	decfsz	9,f
  8565  009B' 2800'              	goto	u7817
  8566  009C' 0B80'              	decfsz	??_initialize^(0+384),f
  8567  009D' 2800'              	goto	u7817
  8568  009E' 0B81'              	decfsz	(??_initialize^(0+384)+1),f
  8569  009F' 2800'              	goto	u7817
  8570  00A0'                    l6607:
  8571  00A0' 0020               	movlb	0	; select bank0
  8572  00A1' 158E               	bsf	14,3	;volatile
  8573  00A2'                    l6609:
  8574  00A2' 3005               	movlw	5
  8575  00A3' 0023               	movlb	3	; select bank3
  8576  00A4' 0081'              	movwf	(??_initialize^(0+384)+1)
  8577  00A5' 300F               	movlw	15
  8578  00A6' 0080'              	movwf	??_initialize^(0+384)
  8579  00A7' 30F1               	movlw	241
  8580  00A8'                    u7827:
  8581  00A8' 0B89               	decfsz	9,f
  8582  00A9' 2800'              	goto	u7827
  8583  00AA' 0B80'              	decfsz	??_initialize^(0+384),f
  8584  00AB' 2800'              	goto	u7827
  8585  00AC' 0B81'              	decfsz	(??_initialize^(0+384)+1),f
  8586  00AD' 2800'              	goto	u7827
  8587  00AE'                    l6611:
  8588  00AE' 0020               	movlb	0	; select bank0
  8589  00AF' 118E               	bcf	14,3	;volatile
  8590  00B0'                    l6613:
  8591  00B0' 3005               	movlw	5
  8592  00B1' 0023               	movlb	3	; select bank3
  8593  00B2' 0081'              	movwf	(??_initialize^(0+384)+1)
  8594  00B3' 300F               	movlw	15
  8595  00B4' 0080'              	movwf	??_initialize^(0+384)
  8596  00B5' 30F1               	movlw	241
  8597  00B6'                    u7837:
  8598  00B6' 0B89               	decfsz	9,f
  8599  00B7' 2800'              	goto	u7837
  8600  00B8' 0B80'              	decfsz	??_initialize^(0+384),f
  8601  00B9' 2800'              	goto	u7837
  8602  00BA' 0B81'              	decfsz	(??_initialize^(0+384)+1),f
  8603  00BB' 2800'              	goto	u7837
  8604  00BC'                    l6615:
  8605  00BC' 0020               	movlb	0	; select bank0
  8606  00BD' 168E               	bsf	14,5	;volatile
  8607  00BE'                    l6617:
  8608  00BE' 3005               	movlw	5
  8609  00BF' 0023               	movlb	3	; select bank3
  8610  00C0' 0081'              	movwf	(??_initialize^(0+384)+1)
  8611  00C1' 300F               	movlw	15
  8612  00C2' 0080'              	movwf	??_initialize^(0+384)
  8613  00C3' 30F1               	movlw	241
  8614  00C4'                    u7847:
  8615  00C4' 0B89               	decfsz	9,f
  8616  00C5' 2800'              	goto	u7847
  8617  00C6' 0B80'              	decfsz	??_initialize^(0+384),f
  8618  00C7' 2800'              	goto	u7847
  8619  00C8' 0B81'              	decfsz	(??_initialize^(0+384)+1),f
  8620  00C9' 2800'              	goto	u7847
  8621  00CA'                    l6619:
  8622  00CA' 0023               	movlb	3	; select bank3
  8623  00CB' 0800'              	movf	(_CC_disc_kp+3)^(0+384),w
  8624  00CC' 0024               	movlb	4	; select bank4
  8625  00CD' 0080'              	movwf	(_kp+3)^(0+512)
  8626  00CE' 0023               	movlb	3	; select bank3
  8627  00CF' 0800'              	movf	(_CC_disc_kp+2)^(0+384),w
  8628  00D0' 0024               	movlb	4	; select bank4
  8629  00D1' 0080'              	movwf	(_kp+2)^(0+512)
  8630  00D2' 0023               	movlb	3	; select bank3
  8631  00D3' 0800'              	movf	(_CC_disc_kp+1)^(0+384),w
  8632  00D4' 0024               	movlb	4	; select bank4
  8633  00D5' 0080'              	movwf	(_kp+1)^(0+512)
  8634  00D6' 0023               	movlb	3	; select bank3
  8635  00D7' 0800'              	movf	_CC_disc_kp^(0+384),w
  8636  00D8' 0024               	movlb	4	; select bank4
  8637  00D9' 0080'              	movwf	_kp^(0+512)
  8638  00DA'                    l6621:
  8639  00DA' 0023               	movlb	3	; select bank3
  8640  00DB' 0800'              	movf	(_CC_disc_ki+3)^(0+384),w
  8641  00DC' 0024               	movlb	4	; select bank4
  8642  00DD' 0080'              	movwf	(_ki+3)^(0+512)
  8643  00DE' 0023               	movlb	3	; select bank3
  8644  00DF' 0800'              	movf	(_CC_disc_ki+2)^(0+384),w
  8645  00E0' 0024               	movlb	4	; select bank4
  8646  00E1' 0080'              	movwf	(_ki+2)^(0+512)
  8647  00E2' 0023               	movlb	3	; select bank3
  8648  00E3' 0800'              	movf	(_CC_disc_ki+1)^(0+384),w
  8649  00E4' 0024               	movlb	4	; select bank4
  8650  00E5' 0080'              	movwf	(_ki+1)^(0+512)
  8651  00E6' 0023               	movlb	3	; select bank3
  8652  00E7' 0800'              	movf	_CC_disc_ki^(0+384),w
  8653  00E8' 0024               	movlb	4	; select bank4
  8654  00E9' 0080'              	movwf	_ki^(0+512)
  8655  00EA' 0023               	movlb	3	; select bank3
  8656  00EB' 0800'              	movf	_CC_char_disc_kd^(0+384),w
  8657  00EC' 0080'              	movwf	??_initialize^(0+384)
  8658  00ED' 0181'              	clrf	(??_initialize^(0+384)+1)
  8659  00EE' 0182'              	clrf	(??_initialize^(0+384)+2)
  8660  00EF' 0183'              	clrf	(??_initialize^(0+384)+3)
  8661  00F0' 0800'              	movf	(??_initialize+3)^(0+384),w
  8662  00F1' 0022               	movlb	2	; select bank2
  8663  00F2' 0080'              	movwf	(___xxtofl@val+3)^(0+256)
  8664  00F3' 0023               	movlb	3	; select bank3
  8665  00F4' 0800'              	movf	(??_initialize+2)^(0+384),w
  8666  00F5' 0022               	movlb	2	; select bank2
  8667  00F6' 0080'              	movwf	(___xxtofl@val+2)^(0+256)
  8668  00F7' 0023               	movlb	3	; select bank3
  8669  00F8' 0800'              	movf	(??_initialize+1)^(0+384),w
  8670  00F9' 0022               	movlb	2	; select bank2
  8671  00FA' 0080'              	movwf	(___xxtofl@val+1)^(0+256)
  8672  00FB' 0023               	movlb	3	; select bank3
  8673  00FC' 0800'              	movf	??_initialize^(0+384),w
  8674  00FD' 0022               	movlb	2	; select bank2
  8675  00FE' 0080'              	movwf	___xxtofl@val^(0+256)
  8676  00FF' 3000               	movlw	0
  8677  0100' 3180' 2000' 3180'  	fcall	___xxtofl
  8678  0103' 0022               	movlb	2	; select bank2
  8679  0104' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  8680  0105' 0024               	movlb	4	; select bank4
  8681  0106' 0080'              	movwf	(_kd+3)^(0+512)
  8682  0107' 0022               	movlb	2	; select bank2
  8683  0108' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  8684  0109' 0024               	movlb	4	; select bank4
  8685  010A' 0080'              	movwf	(_kd+2)^(0+512)
  8686  010B' 0022               	movlb	2	; select bank2
  8687  010C' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  8688  010D' 0024               	movlb	4	; select bank4
  8689  010E' 0080'              	movwf	(_kd+1)^(0+512)
  8690  010F' 0022               	movlb	2	; select bank2
  8691  0110' 0800'              	movf	?___xxtofl^(0+256),w
  8692  0111' 0024               	movlb	4	; select bank4
  8693  0112' 0080'              	movwf	_kd^(0+512)
  8694  0113'                    l6623:
  8695  0113' 3000               	movlw	0
  8696  0114' 0080'              	movwf	(_pidi+3)^(0+512)
  8697  0115' 3000               	movlw	0
  8698  0116' 0080'              	movwf	(_pidi+2)^(0+512)
  8699  0117' 3000               	movlw	0
  8700  0118' 0080'              	movwf	(_pidi+1)^(0+512)
  8701  0119' 3000               	movlw	0
  8702  011A' 0080'              	movwf	_pidi^(0+512)
  8703  011B'                    l6625:
  8704                           
  8705                           ;charger_discharger.c: 123:     _delay((unsigned long)((100)*(32000000/4000.0)));
  8706  011B' 3005               	movlw	5
  8707  011C' 0023               	movlb	3	; select bank3
  8708  011D' 0081'              	movwf	(??_initialize^(0+384)+1)
  8709  011E' 300F               	movlw	15
  8710  011F' 0080'              	movwf	??_initialize^(0+384)
  8711  0120' 30F1               	movlw	241
  8712  0121'                    u7857:
  8713  0121' 0B89               	decfsz	9,f
  8714  0122' 2800'              	goto	u7857
  8715  0123' 0B80'              	decfsz	??_initialize^(0+384),f
  8716  0124' 2800'              	goto	u7857
  8717  0125' 0B81'              	decfsz	(??_initialize^(0+384)+1),f
  8718  0126' 2800'              	goto	u7857
  8719  0127'                    l6627:
  8720                           
  8721                           ;charger_discharger.c: 124:     { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50.0; set_
      +                          DC(); Cell_OFF();};
  8722  0127' 0020               	movlb	0	; select bank0
  8723  0128' 118E               	bcf	14,3	;volatile
  8724  0129'                    l6629:
  8725  0129' 120E               	bcf	14,4	;volatile
  8726  012A'                    l6631:
  8727  012A' 0021               	movlb	1	; select bank1
  8728  012B' 0180'              	clrf	_conv^(0+128)
  8729  012C'                    l6633:
  8730  012C' 0020               	movlb	0	; select bank0
  8731  012D' 128E               	bcf	14,5	;volatile
  8732  012E'                    l6635:
  8733  012E' 3042               	movlw	66
  8734  012F' 0023               	movlb	3	; select bank3
  8735  0130' 0080'              	movwf	(_pidt+3)^(0+384)
  8736  0131' 3048               	movlw	72
  8737  0132' 0080'              	movwf	(_pidt+2)^(0+384)
  8738  0133' 3000               	movlw	0
  8739  0134' 0080'              	movwf	(_pidt+1)^(0+384)
  8740  0135' 3000               	movlw	0
  8741  0136' 0080'              	movwf	_pidt^(0+384)
  8742  0137'                    l6637:
  8743  0137' 3180' 2000' 3180'  	fcall	_set_DC
  8744  013A'                    l6639:
  8745  013A' 3180' 2000' 3180'  	fcall	_Cell_OFF
  8746  013D'                    l331:
  8747  013D' 0008               	return
  8748  013E'                    __end_of_initialize:
  8749                           
  8750                           	psect	text20
  8751  0000'                    __ptext20:	
  8752 ;; *************** function _set_DC *****************
  8753 ;; Defined at:
  8754 ;;		line 290 in file "charger_discharger.c"
  8755 ;; Parameters:    Size  Location     Type
  8756 ;;		None
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;  dc              2   16[BANK3 ] unsigned short 
  8759 ;; Return value:  Size  Location     Type
  8760 ;;                  1    wreg      void 
  8761 ;; Registers used:
  8762 ;;		wreg, status,2, status,0, pclath, cstack
  8763 ;; Tracked objects:
  8764 ;;		On entry : 0/0
  8765 ;;		On exit  : 0/0
  8766 ;;		Unchanged: 0/0
  8767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8769 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  8770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8771 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  8772 ;;Total ram usage:        2 bytes
  8773 ;; Hardware stack levels used: 1
  8774 ;; Hardware stack levels required when called: 6
  8775 ;; This function calls:
  8776 ;;		___fltol
  8777 ;; This function is called by:
  8778 ;;		_initialize
  8779 ;;		_fIDLE
  8780 ;;		_fCHARGE
  8781 ;;		_fDISCHARGE
  8782 ;;		_fDC_res
  8783 ;;		_fWAIT
  8784 ;;		_converter_settings
  8785 ;; This function uses a non-reentrant model
  8786 ;;
  8787                           
  8788  0000'                    _set_DC:	
  8789                           ;psect for function _set_DC
  8790                           
  8791  0000'                    l4433:	
  8792                           ;incstack = 0
  8793                           ; Regs used in _set_DC: [wreg+status,2+status,0+pclath+cstack]
  8794                           
  8795                           
  8796                           ;charger_discharger.c: 293:     uint16_t dc = (uint16_t) pidt;
  8797  0000' 0023               	movlb	3	; select bank3
  8798  0001' 0800'              	movf	(_pidt+3)^(0+384),w
  8799  0002' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  8800  0003' 0800'              	movf	(_pidt+2)^(0+384),w
  8801  0004' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  8802  0005' 0800'              	movf	(_pidt+1)^(0+384),w
  8803  0006' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  8804  0007' 0800'              	movf	_pidt^(0+384),w
  8805  0008' 0080'              	movwf	___fltol@f1^(0+384)
  8806  0009' 3180' 2000' 3180'  	fcall	___fltol
  8807  000C' 0023               	movlb	3	; select bank3
  8808  000D' 0800'              	movf	(?___fltol+1)^(0+384),w
  8809  000E' 0080'              	movwf	(set_DC@dc+1)^(0+384)
  8810  000F' 0800'              	movf	?___fltol^(0+384),w
  8811  0010' 0080'              	movwf	set_DC@dc^(0+384)
  8812  0011'                    l4435:
  8813                           
  8814                           ;charger_discharger.c: 295:     PSMC1DCL = dc & 0x00FF;
  8815  0011' 0800'              	movf	set_DC@dc^(0+384),w
  8816  0012' 0030               	movlb	16	; select bank16
  8817  0013' 00A3               	movwf	35	;volatile
  8818  0014'                    l4437:
  8819                           
  8820                           ;charger_discharger.c: 296:     PSMC1DCH = (dc >> 8) & 0x01;
  8821  0014' 0023               	movlb	3	; select bank3
  8822  0015' 0800'              	movf	(set_DC@dc+1)^(0+384),w
  8823  0016' 3901               	andlw	1
  8824  0017' 0030               	movlb	16	; select bank16
  8825  0018' 00A4               	movwf	36	;volatile
  8826  0019'                    l4439:
  8827                           
  8828                           ;charger_discharger.c: 297:     PSMC1CONbits.PSMC1LD = 1;
  8829  0019' 1711               	bsf	17,6	;volatile
  8830  001A'                    l382:
  8831  001A' 0008               	return
  8832  001B'                    __end_of_set_DC:
  8833                           
  8834                           	psect	text21
  8835  0000'                    __ptext21:	
  8836 ;; *************** function _Cell_OFF *****************
  8837 ;; Defined at:
  8838 ;;		line 553 in file "charger_discharger.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;		None
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;		None
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  1    wreg      void 
  8845 ;; Registers used:
  8846 ;;		wreg
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8854 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  8855 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  8856 ;;Total ram usage:        1 bytes
  8857 ;; Hardware stack levels used: 1
  8858 ;; Hardware stack levels required when called: 5
  8859 ;; This function calls:
  8860 ;;		Nothing
  8861 ;; This function is called by:
  8862 ;;		_initialize
  8863 ;;		_fIDLE
  8864 ;;		_fCHARGE
  8865 ;;		_fDISCHARGE
  8866 ;;		_fDC_res
  8867 ;;		_fWAIT
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871  0000'                    _Cell_OFF:	
  8872                           ;psect for function _Cell_OFF
  8873                           
  8874  0000'                    l5435:	
  8875                           ;incstack = 0
  8876                           ; Regs used in _Cell_OFF: [wreg]
  8877                           
  8878                           
  8879                           ;charger_discharger.c: 555:     { RB2 = 0; };
  8880  0000' 0020               	movlb	0	; select bank0
  8881  0001' 110D               	bcf	13,2	;volatile
  8882  0002'                    l5437:
  8883                           
  8884                           ;charger_discharger.c: 556:     _delay((unsigned long)((10)*(32000000/4000.0)));
  8885  0002' 3068               	movlw	104
  8886  0003' 0022               	movlb	2	; select bank2
  8887  0004' 0080'              	movwf	??_Cell_OFF^(0+256)
  8888  0005' 30E4               	movlw	228
  8889  0006'                    u7867:
  8890  0006' 0B89               	decfsz	9,f
  8891  0007' 2800'              	goto	u7867
  8892  0008' 0B80'              	decfsz	??_Cell_OFF^(0+256),f
  8893  0009' 2800'              	goto	u7867
  8894  000A' 0000               	nop
  8895  000B'                    l5439:
  8896                           
  8897                           ;charger_discharger.c: 557:     { RB3 = 0; };
  8898  000B' 0020               	movlb	0	; select bank0
  8899  000C' 118D               	bcf	13,3	;volatile
  8900                           
  8901                           ;charger_discharger.c: 558:     _delay((unsigned long)((10)*(32000000/4000.0)));
  8902  000D' 3068               	movlw	104
  8903  000E' 0022               	movlb	2	; select bank2
  8904  000F' 0080'              	movwf	??_Cell_OFF^(0+256)
  8905  0010' 30E4               	movlw	228
  8906  0011'                    u7877:
  8907  0011' 0B89               	decfsz	9,f
  8908  0012' 2800'              	goto	u7877
  8909  0013' 0B80'              	decfsz	??_Cell_OFF^(0+256),f
  8910  0014' 2800'              	goto	u7877
  8911  0015' 0000               	nop
  8912  0016'                    l5441:
  8913                           
  8914                           ;charger_discharger.c: 559:     { RB4 = 0; };
  8915  0016' 0020               	movlb	0	; select bank0
  8916  0017' 120D               	bcf	13,4	;volatile
  8917                           
  8918                           ;charger_discharger.c: 560:     _delay((unsigned long)((10)*(32000000/4000.0)));
  8919  0018' 3068               	movlw	104
  8920  0019' 0022               	movlb	2	; select bank2
  8921  001A' 0080'              	movwf	??_Cell_OFF^(0+256)
  8922  001B' 30E4               	movlw	228
  8923  001C'                    u7887:
  8924  001C' 0B89               	decfsz	9,f
  8925  001D' 2800'              	goto	u7887
  8926  001E' 0B80'              	decfsz	??_Cell_OFF^(0+256),f
  8927  001F' 2800'              	goto	u7887
  8928  0020' 0000               	nop
  8929  0021'                    l5443:
  8930                           
  8931                           ;charger_discharger.c: 561:     { RB5 = 0; };
  8932  0021' 0020               	movlb	0	; select bank0
  8933  0022' 128D               	bcf	13,5	;volatile
  8934                           
  8935                           ;charger_discharger.c: 562:     _delay((unsigned long)((10)*(32000000/4000.0)));
  8936  0023' 3068               	movlw	104
  8937  0024' 0022               	movlb	2	; select bank2
  8938  0025' 0080'              	movwf	??_Cell_OFF^(0+256)
  8939  0026' 30E4               	movlw	228
  8940  0027'                    u7897:
  8941  0027' 0B89               	decfsz	9,f
  8942  0028' 2800'              	goto	u7897
  8943  0029' 0B80'              	decfsz	??_Cell_OFF^(0+256),f
  8944  002A' 2800'              	goto	u7897
  8945  002B' 0000               	nop
  8946  002C'                    l487:
  8947  002C' 0008               	return
  8948  002D'                    __end_of_Cell_OFF:
  8949                           
  8950                           	psect	text22
  8951  0000'                    __ptext22:	
  8952 ;; *************** function _cc_cv_mode *****************
  8953 ;; Defined at:
  8954 ;;		line 305 in file "charger_discharger.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;  current_volt    2   16[BANK3 ] unsigned short 
  8957 ;;  reference_vo    2   18[BANK3 ] unsigned short 
  8958 ;;  CC_mode_stat    1   20[BANK3 ] _Bool 
  8959 ;; Auto vars:     Size  Location     Type
  8960 ;;		None
  8961 ;; Return value:  Size  Location     Type
  8962 ;;                  1    wreg      void 
  8963 ;; Registers used:
  8964 ;;		wreg, status,2, status,0, pclath, cstack
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8970 ;;      Params:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0
  8971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8973 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0
  8974 ;;Total ram usage:        5 bytes
  8975 ;; Hardware stack levels used: 1
  8976 ;; Hardware stack levels required when called: 7
  8977 ;; This function calls:
  8978 ;;		___fladd
  8979 ;;		___fldiv
  8980 ;;		___flmul
  8981 ;;		___fltol
  8982 ;;		___xxtofl
  8983 ;; This function is called by:
  8984 ;;		_main
  8985 ;; This function uses a non-reentrant model
  8986 ;;
  8987                           
  8988  0000'                    _cc_cv_mode:	
  8989                           ;psect for function _cc_cv_mode
  8990                           
  8991  0000'                    l6829:	
  8992                           ;incstack = 0
  8993                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0+pclath+cstack]
  8994                           
  8995                           
  8996                           ;charger_discharger.c: 305: void cc_cv_mode(uint16_t current_voltage, uint16_t reference
      +                          _voltage, _Bool CC_mode_status);charger_discharger.c: 306: {;charger_discharger.c: 308: 
      +                              if( ( ( (uint16_t) ( ( ( (float)current_voltage * 5000.0 ) / 4096.0 ) + 0.5 ) ) > re
      +                          ference_voltage ) && CC_mode_status )
  8997  0000' 0023               	movlb	3	; select bank3
  8998  0001' 0800'              	movf	cc_cv_mode@current_voltage^(0+384),w
  8999  0002' 0022               	movlb	2	; select bank2
  9000  0003' 0080'              	movwf	___xxtofl@val^(0+256)
  9001  0004' 0023               	movlb	3	; select bank3
  9002  0005' 0800'              	movf	(cc_cv_mode@current_voltage+1)^(0+384),w
  9003  0006' 0022               	movlb	2	; select bank2
  9004  0007' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  9005  0008' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  9006  0009' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  9007  000A' 3000               	movlw	0
  9008  000B' 3180' 2000' 3180'  	fcall	___xxtofl
  9009  000E' 0022               	movlb	2	; select bank2
  9010  000F' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  9011  0010' 0080'              	movwf	(___flmul@a+3)^(0+256)
  9012  0011' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  9013  0012' 0080'              	movwf	(___flmul@a+2)^(0+256)
  9014  0013' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  9015  0014' 0080'              	movwf	(___flmul@a+1)^(0+256)
  9016  0015' 0800'              	movf	?___xxtofl^(0+256),w
  9017  0016' 0080'              	movwf	___flmul@a^(0+256)
  9018  0017' 3045               	movlw	69
  9019  0018' 0080'              	movwf	(___flmul@b+3)^(0+256)
  9020  0019' 309C               	movlw	156
  9021  001A' 0080'              	movwf	(___flmul@b+2)^(0+256)
  9022  001B' 3040               	movlw	64
  9023  001C' 0080'              	movwf	(___flmul@b+1)^(0+256)
  9024  001D' 3000               	movlw	0
  9025  001E' 0080'              	movwf	___flmul@b^(0+256)
  9026  001F' 3180' 2000' 3180'  	fcall	___flmul
  9027  0022' 0022               	movlb	2	; select bank2
  9028  0023' 0800'              	movf	(?___flmul+3)^(0+256),w
  9029  0024' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  9030  0025' 0800'              	movf	(?___flmul+2)^(0+256),w
  9031  0026' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  9032  0027' 0800'              	movf	(?___flmul+1)^(0+256),w
  9033  0028' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  9034  0029' 0800'              	movf	?___flmul^(0+256),w
  9035  002A' 0080'              	movwf	___fldiv@b^(0+256)
  9036  002B' 3045               	movlw	69
  9037  002C' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  9038  002D' 3080               	movlw	128
  9039  002E' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  9040  002F' 3000               	movlw	0
  9041  0030' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  9042  0031' 3000               	movlw	0
  9043  0032' 0080'              	movwf	___fldiv@a^(0+256)
  9044  0033' 3180' 2000' 3180'  	fcall	___fldiv
  9045  0036' 0022               	movlb	2	; select bank2
  9046  0037' 0800'              	movf	(?___fldiv+3)^(0+256),w
  9047  0038' 0080'              	movwf	(___fladd@a+3)^(0+256)
  9048  0039' 0800'              	movf	(?___fldiv+2)^(0+256),w
  9049  003A' 0080'              	movwf	(___fladd@a+2)^(0+256)
  9050  003B' 0800'              	movf	(?___fldiv+1)^(0+256),w
  9051  003C' 0080'              	movwf	(___fladd@a+1)^(0+256)
  9052  003D' 0800'              	movf	?___fldiv^(0+256),w
  9053  003E' 0080'              	movwf	___fladd@a^(0+256)
  9054  003F' 303F               	movlw	63
  9055  0040' 0080'              	movwf	(___fladd@b+3)^(0+256)
  9056  0041' 3000               	movlw	0
  9057  0042' 0080'              	movwf	(___fladd@b+2)^(0+256)
  9058  0043' 3000               	movlw	0
  9059  0044' 0080'              	movwf	(___fladd@b+1)^(0+256)
  9060  0045' 3000               	movlw	0
  9061  0046' 0080'              	movwf	___fladd@b^(0+256)
  9062  0047' 3180' 2000' 3180'  	fcall	___fladd
  9063  004A' 0022               	movlb	2	; select bank2
  9064  004B' 0800'              	movf	(?___fladd+3)^(0+256),w
  9065  004C' 0023               	movlb	3	; select bank3
  9066  004D' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  9067  004E' 0022               	movlb	2	; select bank2
  9068  004F' 0800'              	movf	(?___fladd+2)^(0+256),w
  9069  0050' 0023               	movlb	3	; select bank3
  9070  0051' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  9071  0052' 0022               	movlb	2	; select bank2
  9072  0053' 0800'              	movf	(?___fladd+1)^(0+256),w
  9073  0054' 0023               	movlb	3	; select bank3
  9074  0055' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  9075  0056' 0022               	movlb	2	; select bank2
  9076  0057' 0800'              	movf	?___fladd^(0+256),w
  9077  0058' 0023               	movlb	3	; select bank3
  9078  0059' 0080'              	movwf	___fltol@f1^(0+384)
  9079  005A' 3180' 2000' 3180'  	fcall	___fltol
  9080  005D' 0023               	movlb	3	; select bank3
  9081  005E' 0800'              	movf	(?___fltol+1)^(0+384),w
  9082  005F' 0200'              	subwf	(cc_cv_mode@reference_voltage+1)^(0+384),w
  9083  0060' 1D03               	skipz
  9084  0061' 2800'              	goto	u7025
  9085  0062' 0800'              	movf	?___fltol^(0+384),w
  9086  0063' 0200'              	subwf	cc_cv_mode@reference_voltage^(0+384),w
  9087  0064'                    u7025:
  9088  0064' 1803               	skipnc
  9089  0065' 2800'              	goto	u7021
  9090  0066' 2800'              	goto	u7020
  9091  0067'                    u7021:
  9092  0067' 2800'              	goto	l386
  9093  0068'                    u7020:
  9094  0068'                    l6831:
  9095  0068' 0800'              	movf	cc_cv_mode@CC_mode_status^(0+384),w
  9096  0069' 1903               	btfsc	3,2
  9097  006A' 2800'              	goto	u7031
  9098  006B' 2800'              	goto	u7030
  9099  006C'                    u7031:
  9100  006C' 2800'              	goto	l386
  9101  006D'                    u7030:
  9102  006D'                    l6833:
  9103                           
  9104                           ;charger_discharger.c: 309:     {;charger_discharger.c: 310:         pidi = 0;
  9105  006D' 3000               	movlw	0
  9106  006E' 0024               	movlb	4	; select bank4
  9107  006F' 0080'              	movwf	(_pidi+3)^(0+512)
  9108  0070' 3000               	movlw	0
  9109  0071' 0080'              	movwf	(_pidi+2)^(0+512)
  9110  0072' 3000               	movlw	0
  9111  0073' 0080'              	movwf	(_pidi+1)^(0+512)
  9112  0074' 3000               	movlw	0
  9113  0075' 0080'              	movwf	_pidi^(0+512)
  9114  0076'                    l6835:
  9115                           
  9116                           ;charger_discharger.c: 311:         cmode = 0;
  9117  0076' 0021               	movlb	1	; select bank1
  9118  0077' 0180'              	clrf	_cmode^(0+128)
  9119  0078'                    l6837:
  9120                           
  9121                           ;charger_discharger.c: 312:         kp = CV_kp;
  9122  0078' 0024               	movlb	4	; select bank4
  9123  0079' 0800'              	movf	(_CV_kp+3)^(0+512),w
  9124  007A' 0080'              	movwf	(_kp+3)^(0+512)
  9125  007B' 0800'              	movf	(_CV_kp+2)^(0+512),w
  9126  007C' 0080'              	movwf	(_kp+2)^(0+512)
  9127  007D' 0800'              	movf	(_CV_kp+1)^(0+512),w
  9128  007E' 0080'              	movwf	(_kp+1)^(0+512)
  9129  007F' 0800'              	movf	_CV_kp^(0+512),w
  9130  0080' 0080'              	movwf	_kp^(0+512)
  9131  0081'                    l6839:
  9132                           
  9133                           ;charger_discharger.c: 313:         ki = CV_ki;
  9134  0081' 0800'              	movf	(_CV_ki+3)^(0+512),w
  9135  0082' 0080'              	movwf	(_ki+3)^(0+512)
  9136  0083' 0800'              	movf	(_CV_ki+2)^(0+512),w
  9137  0084' 0080'              	movwf	(_ki+2)^(0+512)
  9138  0085' 0800'              	movf	(_CV_ki+1)^(0+512),w
  9139  0086' 0080'              	movwf	(_ki+1)^(0+512)
  9140  0087' 0800'              	movf	_CV_ki^(0+512),w
  9141  0088' 0080'              	movwf	_ki^(0+512)
  9142  0089'                    l6841:
  9143                           
  9144                           ;charger_discharger.c: 314:         kd = CV_kd;
  9145  0089' 0800'              	movf	(_CV_kd+3)^(0+512),w
  9146  008A' 0080'              	movwf	(_kd+3)^(0+512)
  9147  008B' 0800'              	movf	(_CV_kd+2)^(0+512),w
  9148  008C' 0080'              	movwf	(_kd+2)^(0+512)
  9149  008D' 0800'              	movf	(_CV_kd+1)^(0+512),w
  9150  008E' 0080'              	movwf	(_kd+1)^(0+512)
  9151  008F' 0800'              	movf	_CV_kd^(0+512),w
  9152  0090' 0080'              	movwf	_kd^(0+512)
  9153  0091'                    l386:
  9154  0091' 0008               	return
  9155  0092'                    __end_of_cc_cv_mode:
  9156                           
  9157                           	psect	text23
  9158  0000'                    __ptext23:	
  9159 ;; *************** function ___xxtofl *****************
  9160 ;; Defined at:
  9161 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;  sign            1    wreg     unsigned char 
  9164 ;;  val             4    0[BANK2 ] long 
  9165 ;; Auto vars:     Size  Location     Type
  9166 ;;  sign            1    8[BANK2 ] unsigned char 
  9167 ;;  arg             4   10[BANK2 ] unsigned long 
  9168 ;;  exp             1    9[BANK2 ] unsigned char 
  9169 ;; Return value:  Size  Location     Type
  9170 ;;                  4    0[BANK2 ] unsigned char 
  9171 ;; Registers used:
  9172 ;;		wreg, status,2, status,0
  9173 ;; Tracked objects:
  9174 ;;		On entry : 0/0
  9175 ;;		On exit  : 0/0
  9176 ;;		Unchanged: 0/0
  9177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9178 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9179 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  9180 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9181 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0
  9182 ;;Total ram usage:       14 bytes
  9183 ;; Hardware stack levels used: 1
  9184 ;; Hardware stack levels required when called: 5
  9185 ;; This function calls:
  9186 ;;		Nothing
  9187 ;; This function is called by:
  9188 ;;		_initialize
  9189 ;;		_cc_cv_mode
  9190 ;;		_scaling
  9191 ;;		_fCHARGE
  9192 ;;		_fDISCHARGE
  9193 ;;		_fDC_res
  9194 ;;		_converter_settings
  9195 ;; This function uses a non-reentrant model
  9196 ;;
  9197                           
  9198  0000'                    ___xxtofl:	
  9199                           ;psect for function ___xxtofl
  9200                           
  9201                           
  9202                           ;incstack = 0
  9203                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9204                           ;___xxtofl@sign stored from wreg
  9205  0000' 0022               	movlb	2	; select bank2
  9206  0001' 0080'              	movwf	___xxtofl@sign^(0+256)
  9207  0002'                    l4963:
  9208  0002' 0800'              	movf	___xxtofl@sign^(0+256),w
  9209  0003' 1903               	btfsc	3,2
  9210  0004' 2800'              	goto	u4771
  9211  0005' 2800'              	goto	u4770
  9212  0006'                    u4771:
  9213  0006' 2800'              	goto	l4969
  9214  0007'                    u4770:
  9215  0007'                    l4965:
  9216  0007' 1F80'              	btfss	(___xxtofl@val+3)^(0+256),7
  9217  0008' 2800'              	goto	u4781
  9218  0009' 2800'              	goto	u4780
  9219  000A'                    u4781:
  9220  000A' 2800'              	goto	l4969
  9221  000B'                    u4780:
  9222  000B'                    l4967:
  9223  000B' 0900'              	comf	___xxtofl@val^(0+256),w
  9224  000C' 0080'              	movwf	___xxtofl@arg^(0+256)
  9225  000D' 0901'              	comf	(___xxtofl@val^(0+256)+1),w
  9226  000E' 0080'              	movwf	(___xxtofl@arg+1)^(0+256)
  9227  000F' 0902'              	comf	(___xxtofl@val^(0+256)+2),w
  9228  0010' 0080'              	movwf	(___xxtofl@arg+2)^(0+256)
  9229  0011' 0903'              	comf	(___xxtofl@val^(0+256)+3),w
  9230  0012' 0080'              	movwf	(___xxtofl@arg+3)^(0+256)
  9231  0013' 0A80'              	incf	___xxtofl@arg^(0+256),f
  9232  0014' 1903               	skipnz
  9233  0015' 0A80'              	incf	(___xxtofl@arg+1)^(0+256),f
  9234  0016' 1903               	skipnz
  9235  0017' 0A80'              	incf	(___xxtofl@arg+2)^(0+256),f
  9236  0018' 1903               	skipnz
  9237  0019' 0A80'              	incf	(___xxtofl@arg+3)^(0+256),f
  9238  001A' 2800'              	goto	l1487
  9239  001B'                    l4969:
  9240  001B' 0800'              	movf	(___xxtofl@val+3)^(0+256),w
  9241  001C' 0080'              	movwf	(___xxtofl@arg+3)^(0+256)
  9242  001D' 0800'              	movf	(___xxtofl@val+2)^(0+256),w
  9243  001E' 0080'              	movwf	(___xxtofl@arg+2)^(0+256)
  9244  001F' 0800'              	movf	(___xxtofl@val+1)^(0+256),w
  9245  0020' 0080'              	movwf	(___xxtofl@arg+1)^(0+256)
  9246  0021' 0800'              	movf	___xxtofl@val^(0+256),w
  9247  0022' 0080'              	movwf	___xxtofl@arg^(0+256)
  9248  0023'                    l1487:
  9249  0023' 0800'              	movf	(___xxtofl@val+3)^(0+256),w
  9250  0024' 0400'              	iorwf	(___xxtofl@val+2)^(0+256),w
  9251  0025' 0400'              	iorwf	(___xxtofl@val+1)^(0+256),w
  9252  0026' 0400'              	iorwf	___xxtofl@val^(0+256),w
  9253  0027' 1D03               	skipz
  9254  0028' 2800'              	goto	u4791
  9255  0029' 2800'              	goto	u4790
  9256  002A'                    u4791:
  9257  002A' 2800'              	goto	l4975
  9258  002B'                    u4790:
  9259  002B'                    l4971:
  9260  002B' 3000               	movlw	0
  9261  002C' 0080'              	movwf	(?___xxtofl+3)^(0+256)
  9262  002D' 3000               	movlw	0
  9263  002E' 0080'              	movwf	(?___xxtofl+2)^(0+256)
  9264  002F' 3000               	movlw	0
  9265  0030' 0080'              	movwf	(?___xxtofl+1)^(0+256)
  9266  0031' 3000               	movlw	0
  9267  0032' 0080'              	movwf	?___xxtofl^(0+256)
  9268  0033' 2800'              	goto	l1489
  9269  0034'                    l4975:
  9270  0034' 3096               	movlw	150
  9271  0035' 0080'              	movwf	___xxtofl@exp^(0+256)
  9272  0036' 2800'              	goto	l4979
  9273  0037'                    l4977:
  9274  0037' 3001               	movlw	1
  9275  0038' 0080'              	movwf	??___xxtofl^(0+256)
  9276  0039' 0800'              	movf	??___xxtofl^(0+256),w
  9277  003A' 0780'              	addwf	___xxtofl@exp^(0+256),f
  9278  003B' 3001               	movlw	1
  9279  003C'                    u4805:
  9280  003C' 3680'              	lsrf	(___xxtofl@arg+3)^(0+256),f
  9281  003D' 0C80'              	rrf	(___xxtofl@arg+2)^(0+256),f
  9282  003E' 0C80'              	rrf	(___xxtofl@arg+1)^(0+256),f
  9283  003F' 0C80'              	rrf	___xxtofl@arg^(0+256),f
  9284  0040' 0B89               	decfsz	9,f
  9285  0041' 2800'              	goto	u4805
  9286  0042'                    l4979:
  9287  0042' 30FE               	movlw	254
  9288  0043' 0500'              	andwf	(___xxtofl@arg+3)^(0+256),w
  9289  0044' 1D03               	btfss	3,2
  9290  0045' 2800'              	goto	u4811
  9291  0046' 2800'              	goto	u4810
  9292  0047'                    u4811:
  9293  0047' 2800'              	goto	l4977
  9294  0048'                    u4810:
  9295  0048' 2800'              	goto	l1493
  9296  0049'                    l4981:
  9297  0049' 3001               	movlw	1
  9298  004A' 0080'              	movwf	??___xxtofl^(0+256)
  9299  004B' 0800'              	movf	??___xxtofl^(0+256),w
  9300  004C' 0780'              	addwf	___xxtofl@exp^(0+256),f
  9301  004D'                    l4983:
  9302  004D' 3001               	movlw	1
  9303  004E' 0780'              	addwf	___xxtofl@arg^(0+256),f
  9304  004F' 3000               	movlw	0
  9305  0050' 3D80'              	addwfc	(___xxtofl@arg+1)^(0+256),f
  9306  0051' 3000               	movlw	0
  9307  0052' 3D80'              	addwfc	(___xxtofl@arg+2)^(0+256),f
  9308  0053' 3000               	movlw	0
  9309  0054' 3D80'              	addwfc	(___xxtofl@arg+3)^(0+256),f
  9310  0055'                    l4985:
  9311  0055' 3001               	movlw	1
  9312  0056'                    u4825:
  9313  0056' 3680'              	lsrf	(___xxtofl@arg+3)^(0+256),f
  9314  0057' 0C80'              	rrf	(___xxtofl@arg+2)^(0+256),f
  9315  0058' 0C80'              	rrf	(___xxtofl@arg+1)^(0+256),f
  9316  0059' 0C80'              	rrf	___xxtofl@arg^(0+256),f
  9317  005A' 0B89               	decfsz	9,f
  9318  005B' 2800'              	goto	u4825
  9319  005C'                    l1493:
  9320  005C' 30FF               	movlw	255
  9321  005D' 0500'              	andwf	(___xxtofl@arg+3)^(0+256),w
  9322  005E' 1D03               	btfss	3,2
  9323  005F' 2800'              	goto	u4831
  9324  0060' 2800'              	goto	u4830
  9325  0061'                    u4831:
  9326  0061' 2800'              	goto	l4981
  9327  0062'                    u4830:
  9328  0062' 2800'              	goto	l4989
  9329  0063'                    l4987:
  9330  0063' 3001               	movlw	1
  9331  0064' 0280'              	subwf	___xxtofl@exp^(0+256),f
  9332  0065' 3001               	movlw	1
  9333  0066'                    u4845:
  9334  0066' 3580'              	lslf	___xxtofl@arg^(0+256),f
  9335  0067' 0D80'              	rlf	(___xxtofl@arg+1)^(0+256),f
  9336  0068' 0D80'              	rlf	(___xxtofl@arg+2)^(0+256),f
  9337  0069' 0D80'              	rlf	(___xxtofl@arg+3)^(0+256),f
  9338  006A' 0B89               	decfsz	9,f
  9339  006B' 2800'              	goto	u4845
  9340  006C'                    l4989:
  9341  006C' 1B80'              	btfsc	(___xxtofl@arg+2)^(0+256),7
  9342  006D' 2800'              	goto	u4851
  9343  006E' 2800'              	goto	u4850
  9344  006F'                    u4851:
  9345  006F' 2800'              	goto	l1500
  9346  0070'                    u4850:
  9347  0070'                    l4991:
  9348  0070' 3002               	movlw	2
  9349  0071' 0200'              	subwf	___xxtofl@exp^(0+256),w
  9350  0072' 1803               	skipnc
  9351  0073' 2800'              	goto	u4861
  9352  0074' 2800'              	goto	u4860
  9353  0075'                    u4861:
  9354  0075' 2800'              	goto	l4987
  9355  0076'                    u4860:
  9356  0076'                    l1500:
  9357  0076' 1800'              	btfsc	___xxtofl@exp^(0+256),0
  9358  0077' 2800'              	goto	u4871
  9359  0078' 2800'              	goto	u4870
  9360  0079'                    u4871:
  9361  0079' 2800'              	goto	l1501
  9362  007A'                    u4870:
  9363  007A'                    l4993:
  9364  007A' 30FF               	movlw	255
  9365  007B' 0580'              	andwf	___xxtofl@arg^(0+256),f
  9366  007C' 30FF               	movlw	255
  9367  007D' 0580'              	andwf	(___xxtofl@arg+1)^(0+256),f
  9368  007E' 307F               	movlw	127
  9369  007F' 0580'              	andwf	(___xxtofl@arg+2)^(0+256),f
  9370  0080' 30FF               	movlw	255
  9371  0081' 0580'              	andwf	(___xxtofl@arg+3)^(0+256),f
  9372  0082'                    l1501:
  9373  0082' 1003               	clrc
  9374  0083' 0C80'              	rrf	___xxtofl@exp^(0+256),f
  9375  0084'                    l4995:
  9376  0084' 0800'              	movf	___xxtofl@exp^(0+256),w
  9377  0085' 0080'              	movwf	??___xxtofl^(0+256)
  9378  0086' 0181'              	clrf	(??___xxtofl^(0+256)+1)
  9379  0087' 0182'              	clrf	(??___xxtofl^(0+256)+2)
  9380  0088' 0183'              	clrf	(??___xxtofl^(0+256)+3)
  9381  0089' 3018               	movlw	24
  9382  008A'                    u4885:
  9383  008A' 3580'              	lslf	??___xxtofl^(0+256),f
  9384  008B' 0D81'              	rlf	(??___xxtofl^(0+256)+1),f
  9385  008C' 0D82'              	rlf	(??___xxtofl^(0+256)+2),f
  9386  008D' 0D83'              	rlf	(??___xxtofl^(0+256)+3),f
  9387  008E'                    u4880:
  9388  008E' 0B89               	decfsz	9,f
  9389  008F' 2800'              	goto	u4885
  9390  0090' 0800'              	movf	??___xxtofl^(0+256),w
  9391  0091' 0480'              	iorwf	___xxtofl@arg^(0+256),f
  9392  0092' 0800'              	movf	(??___xxtofl+1)^(0+256),w
  9393  0093' 0480'              	iorwf	(___xxtofl@arg+1)^(0+256),f
  9394  0094' 0800'              	movf	(??___xxtofl+2)^(0+256),w
  9395  0095' 0480'              	iorwf	(___xxtofl@arg+2)^(0+256),f
  9396  0096' 0800'              	movf	(??___xxtofl+3)^(0+256),w
  9397  0097' 0480'              	iorwf	(___xxtofl@arg+3)^(0+256),f
  9398  0098'                    l4997:
  9399  0098' 0800'              	movf	___xxtofl@sign^(0+256),w
  9400  0099' 1903               	btfsc	3,2
  9401  009A' 2800'              	goto	u4891
  9402  009B' 2800'              	goto	u4890
  9403  009C'                    u4891:
  9404  009C' 2800'              	goto	l5003
  9405  009D'                    u4890:
  9406  009D'                    l4999:
  9407  009D' 1F80'              	btfss	(___xxtofl@val+3)^(0+256),7
  9408  009E' 2800'              	goto	u4901
  9409  009F' 2800'              	goto	u4900
  9410  00A0'                    u4901:
  9411  00A0' 2800'              	goto	l5003
  9412  00A1'                    u4900:
  9413  00A1'                    l5001:
  9414  00A1' 1783'              	bsf	(___xxtofl@arg^(0+256)+3),7
  9415  00A2'                    l5003:
  9416  00A2' 0800'              	movf	(___xxtofl@arg+3)^(0+256),w
  9417  00A3' 0080'              	movwf	(?___xxtofl+3)^(0+256)
  9418  00A4' 0800'              	movf	(___xxtofl@arg+2)^(0+256),w
  9419  00A5' 0080'              	movwf	(?___xxtofl+2)^(0+256)
  9420  00A6' 0800'              	movf	(___xxtofl@arg+1)^(0+256),w
  9421  00A7' 0080'              	movwf	(?___xxtofl+1)^(0+256)
  9422  00A8' 0800'              	movf	___xxtofl@arg^(0+256),w
  9423  00A9' 0080'              	movwf	?___xxtofl^(0+256)
  9424  00AA'                    l1489:
  9425  00AA' 0008               	return
  9426  00AB'                    __end_of___xxtofl:
  9427                           
  9428                           	psect	text24
  9429  0000'                    __ptext24:	
  9430 ;; *************** function ___fltol *****************
  9431 ;; Defined at:
  9432 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  9433 ;; Parameters:    Size  Location     Type
  9434 ;;  f1              4    8[BANK3 ] unsigned char 
  9435 ;; Auto vars:     Size  Location     Type
  9436 ;;  exp1            1   79[BANK2 ] unsigned char 
  9437 ;;  sign1           1   78[BANK2 ] unsigned char 
  9438 ;; Return value:  Size  Location     Type
  9439 ;;                  4    8[BANK3 ] long 
  9440 ;; Registers used:
  9441 ;;		wreg, status,2, status,0
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9447 ;;      Params:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  9448 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  9449 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  9450 ;;      Totals:         0       0       0       2       8       0       0       0       0       0       0       0       
      +0       0
  9451 ;;Total ram usage:       10 bytes
  9452 ;; Hardware stack levels used: 1
  9453 ;; Hardware stack levels required when called: 5
  9454 ;; This function calls:
  9455 ;;		Nothing
  9456 ;; This function is called by:
  9457 ;;		_set_DC
  9458 ;;		_cc_cv_mode
  9459 ;;		_scaling
  9460 ;;		_log_control
  9461 ;;		_fDISCHARGE
  9462 ;;		_fDC_res
  9463 ;;		_converter_settings
  9464 ;; This function uses a non-reentrant model
  9465 ;;
  9466                           
  9467  0000'                    ___fltol:	
  9468                           ;psect for function ___fltol
  9469                           
  9470  0000'                    l4383:	
  9471                           ;incstack = 0
  9472                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  9473                           
  9474  0000' 1003               	clrc
  9475  0001' 0023               	movlb	3	; select bank3
  9476  0002' 0D00'              	rlf	(___fltol@f1+2)^(0+384),w
  9477  0003' 0D00'              	rlf	(___fltol@f1+3)^(0+384),w
  9478  0004' 0022               	movlb	2	; select bank2
  9479  0005' 0080'              	movwf	___fltol@exp1^(0+256)
  9480  0006' 0800'              	movf	___fltol@exp1^(0+256),w
  9481  0007' 1D03               	btfss	3,2
  9482  0008' 2800'              	goto	u3621
  9483  0009' 2800'              	goto	u3620
  9484  000A'                    u3621:
  9485  000A' 2800'              	goto	l4389
  9486  000B'                    u3620:
  9487  000B'                    l4385:
  9488  000B' 3000               	movlw	0
  9489  000C' 0023               	movlb	3	; select bank3
  9490  000D' 0080'              	movwf	(?___fltol+3)^(0+384)
  9491  000E' 3000               	movlw	0
  9492  000F' 0080'              	movwf	(?___fltol+2)^(0+384)
  9493  0010' 3000               	movlw	0
  9494  0011' 0080'              	movwf	(?___fltol+1)^(0+384)
  9495  0012' 3000               	movlw	0
  9496  0013' 0080'              	movwf	?___fltol^(0+384)
  9497  0014' 2800'              	goto	l1240
  9498  0015'                    l4389:
  9499  0015' 0023               	movlb	3	; select bank3
  9500  0016' 0800'              	movf	___fltol@f1^(0+384),w
  9501  0017' 0080'              	movwf	??___fltol^(0+384)
  9502  0018' 0800'              	movf	(___fltol@f1+1)^(0+384),w
  9503  0019' 0081'              	movwf	(??___fltol^(0+384)+1)
  9504  001A' 0800'              	movf	(___fltol@f1+2)^(0+384),w
  9505  001B' 0082'              	movwf	(??___fltol^(0+384)+2)
  9506  001C' 0800'              	movf	(___fltol@f1+3)^(0+384),w
  9507  001D' 0083'              	movwf	(??___fltol^(0+384)+3)
  9508  001E' 301F               	movlw	31
  9509  001F'                    u3635:
  9510  001F' 3683'              	lsrf	(??___fltol^(0+384)+3),f
  9511  0020' 0C82'              	rrf	(??___fltol^(0+384)+2),f
  9512  0021' 0C81'              	rrf	(??___fltol^(0+384)+1),f
  9513  0022' 0C80'              	rrf	??___fltol^(0+384),f
  9514  0023'                    u3630:
  9515  0023' 0B89               	decfsz	9,f
  9516  0024' 2800'              	goto	u3635
  9517  0025' 0800'              	movf	??___fltol^(0+384),w
  9518  0026' 0022               	movlb	2	; select bank2
  9519  0027' 0080'              	movwf	___fltol@sign1^(0+256)
  9520  0028'                    l4391:
  9521  0028' 0023               	movlb	3	; select bank3
  9522  0029' 1782'              	bsf	(___fltol@f1^(0+384)+2),7
  9523  002A'                    l4393:
  9524  002A' 30FF               	movlw	255
  9525  002B' 0580'              	andwf	___fltol@f1^(0+384),f
  9526  002C' 30FF               	movlw	255
  9527  002D' 0580'              	andwf	(___fltol@f1+1)^(0+384),f
  9528  002E' 30FF               	movlw	255
  9529  002F' 0580'              	andwf	(___fltol@f1+2)^(0+384),f
  9530  0030' 3000               	movlw	0
  9531  0031' 0580'              	andwf	(___fltol@f1+3)^(0+384),f
  9532  0032'                    l4395:
  9533  0032' 3096               	movlw	150
  9534  0033' 0022               	movlb	2	; select bank2
  9535  0034' 0280'              	subwf	___fltol@exp1^(0+256),f
  9536  0035'                    l4397:
  9537  0035' 1F80'              	btfss	___fltol@exp1^(0+256),7
  9538  0036' 2800'              	goto	u3641
  9539  0037' 2800'              	goto	u3640
  9540  0038'                    u3641:
  9541  0038' 2800'              	goto	l4407
  9542  0039'                    u3640:
  9543  0039'                    l4399:
  9544  0039' 0800'              	movf	___fltol@exp1^(0+256),w
  9545  003A' 3A80               	xorlw	128
  9546  003B' 3E97               	addlw	151
  9547  003C' 1803               	skipnc
  9548  003D' 2800'              	goto	u3651
  9549  003E' 2800'              	goto	u3650
  9550  003F'                    u3651:
  9551  003F' 2800'              	goto	l4405
  9552  0040'                    u3650:
  9553  0040' 2800'              	goto	l4385
  9554  0041'                    l4405:
  9555  0041' 3001               	movlw	1
  9556  0042'                    u3665:
  9557  0042' 0023               	movlb	3	; select bank3
  9558  0043' 3680'              	lsrf	(___fltol@f1+3)^(0+384),f
  9559  0044' 0C80'              	rrf	(___fltol@f1+2)^(0+384),f
  9560  0045' 0C80'              	rrf	(___fltol@f1+1)^(0+384),f
  9561  0046' 0C80'              	rrf	___fltol@f1^(0+384),f
  9562  0047' 0B89               	decfsz	9,f
  9563  0048' 2800'              	goto	u3665
  9564  0049' 3001               	movlw	1
  9565  004A' 0080'              	movwf	??___fltol^(0+384)
  9566  004B' 0800'              	movf	??___fltol^(0+384),w
  9567  004C' 0022               	movlb	2	; select bank2
  9568  004D' 0780'              	addwf	___fltol@exp1^(0+256),f
  9569  004E' 1D03               	btfss	3,2
  9570  004F' 2800'              	goto	u3671
  9571  0050' 2800'              	goto	u3670
  9572  0051'                    u3671:
  9573  0051' 2800'              	goto	l4405
  9574  0052'                    u3670:
  9575  0052' 2800'              	goto	l4415
  9576  0053'                    l4407:
  9577  0053' 3020               	movlw	32
  9578  0054' 0200'              	subwf	___fltol@exp1^(0+256),w
  9579  0055' 1C03               	skipc
  9580  0056' 2800'              	goto	u3681
  9581  0057' 2800'              	goto	u3680
  9582  0058'                    u3681:
  9583  0058' 2800'              	goto	l1247
  9584  0059'                    u3680:
  9585  0059' 2800'              	goto	l4385
  9586  005A'                    l4413:
  9587  005A' 3001               	movlw	1
  9588  005B'                    u3695:
  9589  005B' 0023               	movlb	3	; select bank3
  9590  005C' 3580'              	lslf	___fltol@f1^(0+384),f
  9591  005D' 0D80'              	rlf	(___fltol@f1+1)^(0+384),f
  9592  005E' 0D80'              	rlf	(___fltol@f1+2)^(0+384),f
  9593  005F' 0D80'              	rlf	(___fltol@f1+3)^(0+384),f
  9594  0060' 0B89               	decfsz	9,f
  9595  0061' 2800'              	goto	u3695
  9596  0062' 3001               	movlw	1
  9597  0063' 0022               	movlb	2	; select bank2
  9598  0064' 0280'              	subwf	___fltol@exp1^(0+256),f
  9599  0065'                    l1247:
  9600  0065' 0800'              	movf	___fltol@exp1^(0+256),w
  9601  0066' 1D03               	btfss	3,2
  9602  0067' 2800'              	goto	u3701
  9603  0068' 2800'              	goto	u3700
  9604  0069'                    u3701:
  9605  0069' 2800'              	goto	l4413
  9606  006A'                    u3700:
  9607  006A'                    l4415:
  9608  006A' 0800'              	movf	___fltol@sign1^(0+256),w
  9609  006B' 1903               	btfsc	3,2
  9610  006C' 2800'              	goto	u3711
  9611  006D' 2800'              	goto	u3710
  9612  006E'                    u3711:
  9613  006E' 2800'              	goto	l1250
  9614  006F'                    u3710:
  9615  006F'                    l4417:
  9616  006F' 0023               	movlb	3	; select bank3
  9617  0070' 0980'              	comf	___fltol@f1^(0+384),f
  9618  0071' 0980'              	comf	(___fltol@f1+1)^(0+384),f
  9619  0072' 0980'              	comf	(___fltol@f1+2)^(0+384),f
  9620  0073' 0980'              	comf	(___fltol@f1+3)^(0+384),f
  9621  0074' 0A80'              	incf	___fltol@f1^(0+384),f
  9622  0075' 1903               	skipnz
  9623  0076' 0A80'              	incf	(___fltol@f1+1)^(0+384),f
  9624  0077' 1903               	skipnz
  9625  0078' 0A80'              	incf	(___fltol@f1+2)^(0+384),f
  9626  0079' 1903               	skipnz
  9627  007A' 0A80'              	incf	(___fltol@f1+3)^(0+384),f
  9628  007B'                    l1250:
  9629  007B'                    l1240:
  9630  007B' 0008               	return
  9631  007C'                    __end_of___fltol:
  9632                           
  9633                           	psect	text25
  9634  0000'                    __ptext25:	
  9635 ;; *************** function ___flmul *****************
  9636 ;; Defined at:
  9637 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  9638 ;; Parameters:    Size  Location     Type
  9639 ;;  b               4   40[BANK2 ] long 
  9640 ;;  a               4   44[BANK2 ] long 
  9641 ;; Auto vars:     Size  Location     Type
  9642 ;;  prod            4   60[BANK2 ] struct .
  9643 ;;  grs             4   54[BANK2 ] unsigned long 
  9644 ;;  temp            2   64[BANK2 ] struct .
  9645 ;;  bexp            1   59[BANK2 ] unsigned char 
  9646 ;;  aexp            1   58[BANK2 ] unsigned char 
  9647 ;;  sign            1   53[BANK2 ] unsigned char 
  9648 ;; Return value:  Size  Location     Type
  9649 ;;                  4   40[BANK2 ] unsigned char 
  9650 ;; Registers used:
  9651 ;;		wreg, status,2, status,0, pclath, cstack
  9652 ;; Tracked objects:
  9653 ;;		On entry : 0/0
  9654 ;;		On exit  : 0/0
  9655 ;;		Unchanged: 0/0
  9656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9657 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  9658 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0
  9659 ;;      Temps:          0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  9660 ;;      Totals:         0       0       0      26       0       0       0       0       0       0       0       0       
      +0       0
  9661 ;;Total ram usage:       26 bytes
  9662 ;; Hardware stack levels used: 1
  9663 ;; Hardware stack levels required when called: 6
  9664 ;; This function calls:
  9665 ;;		__Umul8_16
  9666 ;; This function is called by:
  9667 ;;		_cc_cv_mode
  9668 ;;		_scaling
  9669 ;;		_fDISCHARGE
  9670 ;;		_fDC_res
  9671 ;;		_converter_settings
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675  0000'                    ___flmul:	
  9676                           ;psect for function ___flmul
  9677                           
  9678  0000'                    l4823:	
  9679                           ;incstack = 0
  9680                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9681                           
  9682  0000' 0022               	movlb	2	; select bank2
  9683  0001' 0803'              	movf	(___flmul@b^(0+256)+3),w
  9684  0002' 3980               	andlw	128
  9685  0003' 0080'              	movwf	___flmul@sign^(0+256)
  9686  0004'                    l4825:
  9687  0004' 3503'              	lslf	(___flmul@b^(0+256)+3),w
  9688  0005' 0080'              	movwf	___flmul@bexp^(0+256)
  9689  0006'                    l4827:
  9690  0006' 1F82'              	btfss	(___flmul@b^(0+256)+2),7
  9691  0007' 2800'              	goto	u4511
  9692  0008' 2800'              	goto	u4510
  9693  0009'                    u4511:
  9694  0009' 2800'              	goto	l4831
  9695  000A'                    u4510:
  9696  000A'                    l4829:
  9697  000A' 1400'              	bsf	___flmul@bexp^(0+256),0
  9698  000B'                    l4831:
  9699  000B' 0800'              	movf	___flmul@bexp^(0+256),w
  9700  000C' 1903               	btfsc	3,2
  9701  000D' 2800'              	goto	u4521
  9702  000E' 2800'              	goto	u4520
  9703  000F'                    u4521:
  9704  000F' 2800'              	goto	l4839
  9705  0010'                    u4520:
  9706  0010'                    l4833:
  9707  0010' 0A00'              	incf	___flmul@bexp^(0+256),w
  9708  0011' 1D03               	btfss	3,2
  9709  0012' 2800'              	goto	u4531
  9710  0013' 2800'              	goto	u4530
  9711  0014'                    u4531:
  9712  0014' 2800'              	goto	l4837
  9713  0015'                    u4530:
  9714  0015'                    l4835:
  9715  0015' 3000               	movlw	0
  9716  0016' 0080'              	movwf	(___flmul@b+3)^(0+256)
  9717  0017' 3000               	movlw	0
  9718  0018' 0080'              	movwf	(___flmul@b+2)^(0+256)
  9719  0019' 3000               	movlw	0
  9720  001A' 0080'              	movwf	(___flmul@b+1)^(0+256)
  9721  001B' 3000               	movlw	0
  9722  001C' 0080'              	movwf	___flmul@b^(0+256)
  9723  001D'                    l4837:
  9724  001D' 1782'              	bsf	(___flmul@b^(0+256)+2),7
  9725  001E' 2800'              	goto	l4841
  9726  001F'                    l4839:
  9727  001F' 3000               	movlw	0
  9728  0020' 0080'              	movwf	(___flmul@b+3)^(0+256)
  9729  0021' 3000               	movlw	0
  9730  0022' 0080'              	movwf	(___flmul@b+2)^(0+256)
  9731  0023' 3000               	movlw	0
  9732  0024' 0080'              	movwf	(___flmul@b+1)^(0+256)
  9733  0025' 3000               	movlw	0
  9734  0026' 0080'              	movwf	___flmul@b^(0+256)
  9735  0027'                    l4841:
  9736  0027' 0803'              	movf	(___flmul@a^(0+256)+3),w
  9737  0028' 3980               	andlw	128
  9738  0029' 0080'              	movwf	??___flmul^(0+256)
  9739  002A' 0800'              	movf	??___flmul^(0+256),w
  9740  002B' 0680'              	xorwf	___flmul@sign^(0+256),f
  9741  002C'                    l4843:
  9742  002C' 3503'              	lslf	(___flmul@a^(0+256)+3),w
  9743  002D' 0080'              	movwf	___flmul@aexp^(0+256)
  9744  002E'                    l4845:
  9745  002E' 1F82'              	btfss	(___flmul@a^(0+256)+2),7
  9746  002F' 2800'              	goto	u4541
  9747  0030' 2800'              	goto	u4540
  9748  0031'                    u4541:
  9749  0031' 2800'              	goto	l4849
  9750  0032'                    u4540:
  9751  0032'                    l4847:
  9752  0032' 1400'              	bsf	___flmul@aexp^(0+256),0
  9753  0033'                    l4849:
  9754  0033' 0800'              	movf	___flmul@aexp^(0+256),w
  9755  0034' 1903               	btfsc	3,2
  9756  0035' 2800'              	goto	u4551
  9757  0036' 2800'              	goto	u4550
  9758  0037'                    u4551:
  9759  0037' 2800'              	goto	l4857
  9760  0038'                    u4550:
  9761  0038'                    l4851:
  9762  0038' 0A00'              	incf	___flmul@aexp^(0+256),w
  9763  0039' 1D03               	btfss	3,2
  9764  003A' 2800'              	goto	u4561
  9765  003B' 2800'              	goto	u4560
  9766  003C'                    u4561:
  9767  003C' 2800'              	goto	l4855
  9768  003D'                    u4560:
  9769  003D'                    l4853:
  9770  003D' 3000               	movlw	0
  9771  003E' 0080'              	movwf	(___flmul@a+3)^(0+256)
  9772  003F' 3000               	movlw	0
  9773  0040' 0080'              	movwf	(___flmul@a+2)^(0+256)
  9774  0041' 3000               	movlw	0
  9775  0042' 0080'              	movwf	(___flmul@a+1)^(0+256)
  9776  0043' 3000               	movlw	0
  9777  0044' 0080'              	movwf	___flmul@a^(0+256)
  9778  0045'                    l4855:
  9779  0045' 1782'              	bsf	(___flmul@a^(0+256)+2),7
  9780  0046' 2800'              	goto	l4859
  9781  0047'                    l4857:
  9782  0047' 3000               	movlw	0
  9783  0048' 0080'              	movwf	(___flmul@a+3)^(0+256)
  9784  0049' 3000               	movlw	0
  9785  004A' 0080'              	movwf	(___flmul@a+2)^(0+256)
  9786  004B' 3000               	movlw	0
  9787  004C' 0080'              	movwf	(___flmul@a+1)^(0+256)
  9788  004D' 3000               	movlw	0
  9789  004E' 0080'              	movwf	___flmul@a^(0+256)
  9790  004F'                    l4859:
  9791  004F' 0800'              	movf	___flmul@aexp^(0+256),w
  9792  0050' 1903               	btfsc	3,2
  9793  0051' 2800'              	goto	u4571
  9794  0052' 2800'              	goto	u4570
  9795  0053'                    u4571:
  9796  0053' 2800'              	goto	l4863
  9797  0054'                    u4570:
  9798  0054'                    l4861:
  9799  0054' 0800'              	movf	___flmul@bexp^(0+256),w
  9800  0055' 1D03               	btfss	3,2
  9801  0056' 2800'              	goto	u4581
  9802  0057' 2800'              	goto	u4580
  9803  0058'                    u4581:
  9804  0058' 2800'              	goto	l4867
  9805  0059'                    u4580:
  9806  0059'                    l4863:
  9807  0059' 3000               	movlw	0
  9808  005A' 0080'              	movwf	(?___flmul+3)^(0+256)
  9809  005B' 3000               	movlw	0
  9810  005C' 0080'              	movwf	(?___flmul+2)^(0+256)
  9811  005D' 3000               	movlw	0
  9812  005E' 0080'              	movwf	(?___flmul+1)^(0+256)
  9813  005F' 3000               	movlw	0
  9814  0060' 0080'              	movwf	?___flmul^(0+256)
  9815  0061' 2800'              	goto	l1443
  9816  0062'                    l4867:
  9817  0062' 0800'              	movf	___flmul@b^(0+256),w
  9818  0063' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  9819  0064' 0802'              	movf	(___flmul@a^(0+256)+2),w
  9820  0065' 3180' 2000' 3180'  	fcall	__Umul8_16
  9821  0068' 0022               	movlb	2	; select bank2
  9822  0069' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  9823  006A' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  9824  006B' 0800'              	movf	?__Umul8_16^(0+256),w
  9825  006C' 0080'              	movwf	___flmul@temp^(0+256)
  9826  006D'                    l4869:
  9827  006D' 0800'              	movf	___flmul@temp^(0+256),w
  9828  006E' 0080'              	movwf	??___flmul^(0+256)
  9829  006F' 0181'              	clrf	(??___flmul^(0+256)+1)
  9830  0070' 0182'              	clrf	(??___flmul^(0+256)+2)
  9831  0071' 0183'              	clrf	(??___flmul^(0+256)+3)
  9832  0072' 0800'              	movf	(??___flmul+3)^(0+256),w
  9833  0073' 0080'              	movwf	(___flmul@grs+3)^(0+256)
  9834  0074' 0800'              	movf	(??___flmul+2)^(0+256),w
  9835  0075' 0080'              	movwf	(___flmul@grs+2)^(0+256)
  9836  0076' 0800'              	movf	(??___flmul+1)^(0+256),w
  9837  0077' 0080'              	movwf	(___flmul@grs+1)^(0+256)
  9838  0078' 0800'              	movf	??___flmul^(0+256),w
  9839  0079' 0080'              	movwf	___flmul@grs^(0+256)
  9840  007A'                    l4871:
  9841  007A' 0801'              	movf	(___flmul@temp^(0+256)+1),w
  9842  007B' 0080'              	movwf	??___flmul^(0+256)
  9843  007C' 0181'              	clrf	(??___flmul^(0+256)+1)
  9844  007D' 0182'              	clrf	(??___flmul^(0+256)+2)
  9845  007E' 0183'              	clrf	(??___flmul^(0+256)+3)
  9846  007F' 0800'              	movf	(??___flmul+3)^(0+256),w
  9847  0080' 0080'              	movwf	(___flmul@prod+3)^(0+256)
  9848  0081' 0800'              	movf	(??___flmul+2)^(0+256),w
  9849  0082' 0080'              	movwf	(___flmul@prod+2)^(0+256)
  9850  0083' 0800'              	movf	(??___flmul+1)^(0+256),w
  9851  0084' 0080'              	movwf	(___flmul@prod+1)^(0+256)
  9852  0085' 0800'              	movf	??___flmul^(0+256),w
  9853  0086' 0080'              	movwf	___flmul@prod^(0+256)
  9854  0087' 0801'              	movf	(___flmul@b^(0+256)+1),w
  9855  0088' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  9856  0089' 0801'              	movf	(___flmul@a^(0+256)+1),w
  9857  008A' 3180' 2000' 3180'  	fcall	__Umul8_16
  9858  008D' 0022               	movlb	2	; select bank2
  9859  008E' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  9860  008F' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  9861  0090' 0800'              	movf	?__Umul8_16^(0+256),w
  9862  0091' 0080'              	movwf	___flmul@temp^(0+256)
  9863  0092'                    l4873:
  9864  0092' 0800'              	movf	___flmul@temp^(0+256),w
  9865  0093' 0080'              	movwf	??___flmul^(0+256)
  9866  0094' 0181'              	clrf	(??___flmul^(0+256)+1)
  9867  0095' 0182'              	clrf	(??___flmul^(0+256)+2)
  9868  0096' 0183'              	clrf	(??___flmul^(0+256)+3)
  9869  0097' 0800'              	movf	??___flmul^(0+256),w
  9870  0098' 0780'              	addwf	___flmul@grs^(0+256),f
  9871  0099' 0800'              	movf	(??___flmul+1)^(0+256),w
  9872  009A' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  9873  009B' 0800'              	movf	(??___flmul+2)^(0+256),w
  9874  009C' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  9875  009D' 0800'              	movf	(??___flmul+3)^(0+256),w
  9876  009E' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  9877  009F'                    l4875:
  9878  009F' 0801'              	movf	(___flmul@temp^(0+256)+1),w
  9879  00A0' 0080'              	movwf	??___flmul^(0+256)
  9880  00A1' 0181'              	clrf	(??___flmul^(0+256)+1)
  9881  00A2' 0182'              	clrf	(??___flmul^(0+256)+2)
  9882  00A3' 0183'              	clrf	(??___flmul^(0+256)+3)
  9883  00A4' 0800'              	movf	??___flmul^(0+256),w
  9884  00A5' 0780'              	addwf	___flmul@prod^(0+256),f
  9885  00A6' 0800'              	movf	(??___flmul+1)^(0+256),w
  9886  00A7' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  9887  00A8' 0800'              	movf	(??___flmul+2)^(0+256),w
  9888  00A9' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  9889  00AA' 0800'              	movf	(??___flmul+3)^(0+256),w
  9890  00AB' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  9891  00AC' 0802'              	movf	(___flmul@b^(0+256)+2),w
  9892  00AD' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  9893  00AE' 0800'              	movf	___flmul@a^(0+256),w
  9894  00AF' 3180' 2000' 3180'  	fcall	__Umul8_16
  9895  00B2' 0022               	movlb	2	; select bank2
  9896  00B3' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  9897  00B4' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  9898  00B5' 0800'              	movf	?__Umul8_16^(0+256),w
  9899  00B6' 0080'              	movwf	___flmul@temp^(0+256)
  9900  00B7'                    l4877:
  9901  00B7' 0800'              	movf	___flmul@temp^(0+256),w
  9902  00B8' 0080'              	movwf	??___flmul^(0+256)
  9903  00B9' 0181'              	clrf	(??___flmul^(0+256)+1)
  9904  00BA' 0182'              	clrf	(??___flmul^(0+256)+2)
  9905  00BB' 0183'              	clrf	(??___flmul^(0+256)+3)
  9906  00BC' 0800'              	movf	??___flmul^(0+256),w
  9907  00BD' 0780'              	addwf	___flmul@grs^(0+256),f
  9908  00BE' 0800'              	movf	(??___flmul+1)^(0+256),w
  9909  00BF' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  9910  00C0' 0800'              	movf	(??___flmul+2)^(0+256),w
  9911  00C1' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  9912  00C2' 0800'              	movf	(??___flmul+3)^(0+256),w
  9913  00C3' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  9914  00C4'                    l4879:
  9915  00C4' 0801'              	movf	(___flmul@temp^(0+256)+1),w
  9916  00C5' 0080'              	movwf	??___flmul^(0+256)
  9917  00C6' 0181'              	clrf	(??___flmul^(0+256)+1)
  9918  00C7' 0182'              	clrf	(??___flmul^(0+256)+2)
  9919  00C8' 0183'              	clrf	(??___flmul^(0+256)+3)
  9920  00C9' 0800'              	movf	??___flmul^(0+256),w
  9921  00CA' 0780'              	addwf	___flmul@prod^(0+256),f
  9922  00CB' 0800'              	movf	(??___flmul+1)^(0+256),w
  9923  00CC' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  9924  00CD' 0800'              	movf	(??___flmul+2)^(0+256),w
  9925  00CE' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  9926  00CF' 0800'              	movf	(??___flmul+3)^(0+256),w
  9927  00D0' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  9928  00D1'                    l4881:
  9929  00D1' 3008               	movlw	8
  9930  00D2'                    u4595:
  9931  00D2' 3580'              	lslf	___flmul@grs^(0+256),f
  9932  00D3' 0D80'              	rlf	(___flmul@grs+1)^(0+256),f
  9933  00D4' 0D80'              	rlf	(___flmul@grs+2)^(0+256),f
  9934  00D5' 0D80'              	rlf	(___flmul@grs+3)^(0+256),f
  9935  00D6' 0B89               	decfsz	9,f
  9936  00D7' 2800'              	goto	u4595
  9937  00D8'                    l4883:
  9938  00D8' 0801'              	movf	(___flmul@b^(0+256)+1),w
  9939  00D9' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  9940  00DA' 0800'              	movf	___flmul@a^(0+256),w
  9941  00DB' 3180' 2000' 3180'  	fcall	__Umul8_16
  9942  00DE' 0022               	movlb	2	; select bank2
  9943  00DF' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  9944  00E0' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  9945  00E1' 0800'              	movf	?__Umul8_16^(0+256),w
  9946  00E2' 0080'              	movwf	___flmul@temp^(0+256)
  9947  00E3'                    l4885:
  9948  00E3' 0800'              	movf	___flmul@temp^(0+256),w
  9949  00E4' 0780'              	addwf	___flmul@grs^(0+256),f
  9950  00E5' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  9951  00E6' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  9952  00E7' 3000               	movlw	0
  9953  00E8' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  9954  00E9' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  9955  00EA'                    l4887:
  9956  00EA' 0800'              	movf	___flmul@b^(0+256),w
  9957  00EB' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  9958  00EC' 0801'              	movf	(___flmul@a^(0+256)+1),w
  9959  00ED' 3180' 2000' 3180'  	fcall	__Umul8_16
  9960  00F0' 0022               	movlb	2	; select bank2
  9961  00F1' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  9962  00F2' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  9963  00F3' 0800'              	movf	?__Umul8_16^(0+256),w
  9964  00F4' 0080'              	movwf	___flmul@temp^(0+256)
  9965  00F5'                    l4889:
  9966  00F5' 0800'              	movf	___flmul@temp^(0+256),w
  9967  00F6' 0780'              	addwf	___flmul@grs^(0+256),f
  9968  00F7' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  9969  00F8' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  9970  00F9' 3000               	movlw	0
  9971  00FA' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  9972  00FB' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  9973  00FC'                    l4891:
  9974  00FC' 3008               	movlw	8
  9975  00FD'                    u4605:
  9976  00FD' 3580'              	lslf	___flmul@grs^(0+256),f
  9977  00FE' 0D80'              	rlf	(___flmul@grs+1)^(0+256),f
  9978  00FF' 0D80'              	rlf	(___flmul@grs+2)^(0+256),f
  9979  0100' 0D80'              	rlf	(___flmul@grs+3)^(0+256),f
  9980  0101' 0B89               	decfsz	9,f
  9981  0102' 2800'              	goto	u4605
  9982  0103' 0800'              	movf	___flmul@b^(0+256),w
  9983  0104' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  9984  0105' 0800'              	movf	___flmul@a^(0+256),w
  9985  0106' 3180' 2000' 3180'  	fcall	__Umul8_16
  9986  0109' 0022               	movlb	2	; select bank2
  9987  010A' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  9988  010B' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  9989  010C' 0800'              	movf	?__Umul8_16^(0+256),w
  9990  010D' 0080'              	movwf	___flmul@temp^(0+256)
  9991  010E'                    l4893:
  9992  010E' 0800'              	movf	___flmul@temp^(0+256),w
  9993  010F' 0780'              	addwf	___flmul@grs^(0+256),f
  9994  0110' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  9995  0111' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  9996  0112' 3000               	movlw	0
  9997  0113' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  9998  0114' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  9999  0115'                    l4895:
 10000  0115' 0801'              	movf	(___flmul@b^(0+256)+1),w
 10001  0116' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
 10002  0117' 0802'              	movf	(___flmul@a^(0+256)+2),w
 10003  0118' 3180' 2000' 3180'  	fcall	__Umul8_16
 10004  011B' 0022               	movlb	2	; select bank2
 10005  011C' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
 10006  011D' 0080'              	movwf	(___flmul@temp+1)^(0+256)
 10007  011E' 0800'              	movf	?__Umul8_16^(0+256),w
 10008  011F' 0080'              	movwf	___flmul@temp^(0+256)
 10009  0120' 0800'              	movf	___flmul@temp^(0+256),w
 10010  0121' 0780'              	addwf	___flmul@prod^(0+256),f
 10011  0122' 0800'              	movf	(___flmul@temp+1)^(0+256),w
 10012  0123' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
 10013  0124' 3000               	movlw	0
 10014  0125' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
 10015  0126' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
 10016  0127'                    l4897:
 10017  0127' 0802'              	movf	(___flmul@b^(0+256)+2),w
 10018  0128' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
 10019  0129' 0801'              	movf	(___flmul@a^(0+256)+1),w
 10020  012A' 3180' 2000' 3180'  	fcall	__Umul8_16
 10021  012D' 0022               	movlb	2	; select bank2
 10022  012E' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
 10023  012F' 0080'              	movwf	(___flmul@temp+1)^(0+256)
 10024  0130' 0800'              	movf	?__Umul8_16^(0+256),w
 10025  0131' 0080'              	movwf	___flmul@temp^(0+256)
 10026  0132'                    l4899:
 10027  0132' 0800'              	movf	___flmul@temp^(0+256),w
 10028  0133' 0780'              	addwf	___flmul@prod^(0+256),f
 10029  0134' 0800'              	movf	(___flmul@temp+1)^(0+256),w
 10030  0135' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
 10031  0136' 3000               	movlw	0
 10032  0137' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
 10033  0138' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
 10034  0139' 0802'              	movf	(___flmul@b^(0+256)+2),w
 10035  013A' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
 10036  013B' 0802'              	movf	(___flmul@a^(0+256)+2),w
 10037  013C' 3180' 2000' 3180'  	fcall	__Umul8_16
 10038  013F' 0022               	movlb	2	; select bank2
 10039  0140' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
 10040  0141' 0080'              	movwf	(___flmul@temp+1)^(0+256)
 10041  0142' 0800'              	movf	?__Umul8_16^(0+256),w
 10042  0143' 0080'              	movwf	___flmul@temp^(0+256)
 10043  0144'                    l4901:
 10044  0144' 0800'              	movf	___flmul@temp^(0+256),w
 10045  0145' 0080'              	movwf	??___flmul^(0+256)
 10046  0146' 0800'              	movf	(___flmul@temp+1)^(0+256),w
 10047  0147' 0081'              	movwf	(??___flmul^(0+256)+1)
 10048  0148' 0182'              	clrf	(??___flmul^(0+256)+2)
 10049  0149' 0183'              	clrf	(??___flmul^(0+256)+3)
 10050  014A' 3008               	movlw	8
 10051  014B'                    u4615:
 10052  014B' 3580'              	lslf	??___flmul^(0+256),f
 10053  014C' 0D81'              	rlf	(??___flmul^(0+256)+1),f
 10054  014D' 0D82'              	rlf	(??___flmul^(0+256)+2),f
 10055  014E' 0D83'              	rlf	(??___flmul^(0+256)+3),f
 10056  014F'                    u4610:
 10057  014F' 0B89               	decfsz	9,f
 10058  0150' 2800'              	goto	u4615
 10059  0151' 0800'              	movf	??___flmul^(0+256),w
 10060  0152' 0780'              	addwf	___flmul@prod^(0+256),f
 10061  0153' 0800'              	movf	(??___flmul+1)^(0+256),w
 10062  0154' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
 10063  0155' 0800'              	movf	(??___flmul+2)^(0+256),w
 10064  0156' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
 10065  0157' 0800'              	movf	(??___flmul+3)^(0+256),w
 10066  0158' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
 10067  0159'                    l4903:
 10068  0159' 0800'              	movf	___flmul@grs^(0+256),w
 10069  015A' 0080'              	movwf	??___flmul^(0+256)
 10070  015B' 0800'              	movf	(___flmul@grs+1)^(0+256),w
 10071  015C' 0081'              	movwf	(??___flmul^(0+256)+1)
 10072  015D' 0800'              	movf	(___flmul@grs+2)^(0+256),w
 10073  015E' 0082'              	movwf	(??___flmul^(0+256)+2)
 10074  015F' 0800'              	movf	(___flmul@grs+3)^(0+256),w
 10075  0160' 0083'              	movwf	(??___flmul^(0+256)+3)
 10076  0161' 3018               	movlw	24
 10077  0162'                    u4625:
 10078  0162' 3683'              	lsrf	(??___flmul^(0+256)+3),f
 10079  0163' 0C82'              	rrf	(??___flmul^(0+256)+2),f
 10080  0164' 0C81'              	rrf	(??___flmul^(0+256)+1),f
 10081  0165' 0C80'              	rrf	??___flmul^(0+256),f
 10082  0166'                    u4620:
 10083  0166' 0B89               	decfsz	9,f
 10084  0167' 2800'              	goto	u4625
 10085  0168' 0800'              	movf	??___flmul^(0+256),w
 10086  0169' 0780'              	addwf	___flmul@prod^(0+256),f
 10087  016A' 0800'              	movf	(??___flmul+1)^(0+256),w
 10088  016B' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
 10089  016C' 0800'              	movf	(??___flmul+2)^(0+256),w
 10090  016D' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
 10091  016E' 0800'              	movf	(??___flmul+3)^(0+256),w
 10092  016F' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
 10093  0170'                    l4905:
 10094  0170' 3008               	movlw	8
 10095  0171'                    u4635:
 10096  0171' 3580'              	lslf	___flmul@grs^(0+256),f
 10097  0172' 0D80'              	rlf	(___flmul@grs+1)^(0+256),f
 10098  0173' 0D80'              	rlf	(___flmul@grs+2)^(0+256),f
 10099  0174' 0D80'              	rlf	(___flmul@grs+3)^(0+256),f
 10100  0175' 0B89               	decfsz	9,f
 10101  0176' 2800'              	goto	u4635
 10102  0177'                    l4907:
 10103  0177' 0800'              	movf	___flmul@bexp^(0+256),w
 10104  0178' 0700'              	addwf	___flmul@aexp^(0+256),w
 10105  0179' 0080'              	movwf	??___flmul^(0+256)
 10106  017A' 0181'              	clrf	(??___flmul^(0+256)+1)
 10107  017B' 0D80'              	rlf	(??___flmul+1)^(0+256),f
 10108  017C' 0800'              	movf	??___flmul^(0+256),w
 10109  017D' 3E82               	addlw	130
 10110  017E' 0080'              	movwf	___flmul@temp^(0+256)
 10111  017F' 30FF               	movlw	255
 10112  0180' 3D00'              	addwfc	(??___flmul+1)^(0+256),w
 10113  0181' 0080'              	movwf	(___flmul@temp+1)^(0+256)
 10114  0182' 2800'              	goto	l4919
 10115  0183'                    l4909:
 10116  0183' 3001               	movlw	1
 10117  0184'                    u4645:
 10118  0184' 3580'              	lslf	___flmul@prod^(0+256),f
 10119  0185' 0D80'              	rlf	(___flmul@prod+1)^(0+256),f
 10120  0186' 0D80'              	rlf	(___flmul@prod+2)^(0+256),f
 10121  0187' 0D80'              	rlf	(___flmul@prod+3)^(0+256),f
 10122  0188' 0B89               	decfsz	9,f
 10123  0189' 2800'              	goto	u4645
 10124  018A'                    l4911:
 10125  018A' 1F80'              	btfss	(___flmul@grs+3)^(0+256),7
 10126  018B' 2800'              	goto	u4651
 10127  018C' 2800'              	goto	u4650
 10128  018D'                    u4651:
 10129  018D' 2800'              	goto	l4915
 10130  018E'                    u4650:
 10131  018E'                    l4913:
 10132  018E' 1400'              	bsf	___flmul@prod^(0+256),0
 10133  018F'                    l4915:
 10134  018F' 3001               	movlw	1
 10135  0190'                    u4665:
 10136  0190' 3580'              	lslf	___flmul@grs^(0+256),f
 10137  0191' 0D80'              	rlf	(___flmul@grs+1)^(0+256),f
 10138  0192' 0D80'              	rlf	(___flmul@grs+2)^(0+256),f
 10139  0193' 0D80'              	rlf	(___flmul@grs+3)^(0+256),f
 10140  0194' 0B89               	decfsz	9,f
 10141  0195' 2800'              	goto	u4665
 10142  0196'                    l4917:
 10143  0196' 30FF               	movlw	255
 10144  0197' 0780'              	addwf	___flmul@temp^(0+256),f
 10145  0198' 30FF               	movlw	255
 10146  0199' 3D80'              	addwfc	(___flmul@temp+1)^(0+256),f
 10147  019A'                    l4919:
 10148  019A' 1F80'              	btfss	(___flmul@prod+2)^(0+256),7
 10149  019B' 2800'              	goto	u4671
 10150  019C' 2800'              	goto	u4670
 10151  019D'                    u4671:
 10152  019D' 2800'              	goto	l4909
 10153  019E'                    u4670:
 10154  019E'                    l4921:
 10155  019E' 0180'              	clrf	___flmul@aexp^(0+256)
 10156  019F'                    l4923:
 10157  019F' 1F80'              	btfss	(___flmul@grs+3)^(0+256),7
 10158  01A0' 2800'              	goto	u4681
 10159  01A1' 2800'              	goto	u4680
 10160  01A2'                    u4681:
 10161  01A2' 2800'              	goto	l4931
 10162  01A3'                    u4680:
 10163  01A3'                    l4925:
 10164  01A3' 30FF               	movlw	255
 10165  01A4' 0500'              	andwf	___flmul@grs^(0+256),w
 10166  01A5' 0080'              	movwf	??___flmul^(0+256)
 10167  01A6' 30FF               	movlw	255
 10168  01A7' 0500'              	andwf	(___flmul@grs+1)^(0+256),w
 10169  01A8' 0081'              	movwf	(??___flmul^(0+256)+1)
 10170  01A9' 30FF               	movlw	255
 10171  01AA' 0500'              	andwf	(___flmul@grs+2)^(0+256),w
 10172  01AB' 0082'              	movwf	(??___flmul^(0+256)+2)
 10173  01AC' 307F               	movlw	127
 10174  01AD' 0500'              	andwf	(___flmul@grs+3)^(0+256),w
 10175  01AE' 0083'              	movwf	(??___flmul^(0+256)+3)
 10176  01AF' 0800'              	movf	(??___flmul+3)^(0+256),w
 10177  01B0' 0400'              	iorwf	(??___flmul+2)^(0+256),w
 10178  01B1' 0400'              	iorwf	(??___flmul+1)^(0+256),w
 10179  01B2' 0400'              	iorwf	??___flmul^(0+256),w
 10180  01B3' 1903               	skipnz
 10181  01B4' 2800'              	goto	u4691
 10182  01B5' 2800'              	goto	u4690
 10183  01B6'                    u4691:
 10184  01B6' 2800'              	goto	l1449
 10185  01B7'                    u4690:
 10186  01B7'                    l4927:
 10187  01B7' 0180'              	clrf	___flmul@aexp^(0+256)
 10188  01B8' 0A80'              	incf	___flmul@aexp^(0+256),f
 10189  01B9' 2800'              	goto	l4931
 10190  01BA'                    l1449:
 10191  01BA' 1C00'              	btfss	___flmul@prod^(0+256),0
 10192  01BB' 2800'              	goto	u4701
 10193  01BC' 2800'              	goto	u4700
 10194  01BD'                    u4701:
 10195  01BD' 2800'              	goto	l4931
 10196  01BE'                    u4700:
 10197  01BE' 2800'              	goto	l4927
 10198  01BF'                    l4931:
 10199  01BF' 0800'              	movf	___flmul@aexp^(0+256),w
 10200  01C0' 1903               	btfsc	3,2
 10201  01C1' 2800'              	goto	u4711
 10202  01C2' 2800'              	goto	u4710
 10203  01C3'                    u4711:
 10204  01C3' 2800'              	goto	l4941
 10205  01C4'                    u4710:
 10206  01C4'                    l4933:
 10207  01C4' 3001               	movlw	1
 10208  01C5' 0780'              	addwf	___flmul@prod^(0+256),f
 10209  01C6' 3000               	movlw	0
 10210  01C7' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
 10211  01C8' 3000               	movlw	0
 10212  01C9' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
 10213  01CA' 3000               	movlw	0
 10214  01CB' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
 10215  01CC'                    l4935:
 10216  01CC' 1C00'              	btfss	(___flmul@prod+3)^(0+256),0
 10217  01CD' 2800'              	goto	u4721
 10218  01CE' 2800'              	goto	u4720
 10219  01CF'                    u4721:
 10220  01CF' 2800'              	goto	l4941
 10221  01D0'                    u4720:
 10222  01D0'                    l4937:
 10223  01D0' 0800'              	movf	___flmul@prod^(0+256),w
 10224  01D1' 0080'              	movwf	??___flmul^(0+256)
 10225  01D2' 0800'              	movf	(___flmul@prod+1)^(0+256),w
 10226  01D3' 0081'              	movwf	(??___flmul^(0+256)+1)
 10227  01D4' 0800'              	movf	(___flmul@prod+2)^(0+256),w
 10228  01D5' 0082'              	movwf	(??___flmul^(0+256)+2)
 10229  01D6' 0800'              	movf	(___flmul@prod+3)^(0+256),w
 10230  01D7' 0083'              	movwf	(??___flmul^(0+256)+3)
 10231  01D8' 3001               	movlw	1
 10232  01D9' 0080'              	movwf	(??___flmul+4)^(0+256)
 10233  01DA'                    u4735:
 10234  01DA' 3783'              	asrf	(??___flmul^(0+256)+3),f
 10235  01DB' 0C82'              	rrf	(??___flmul^(0+256)+2),f
 10236  01DC' 0C81'              	rrf	(??___flmul^(0+256)+1),f
 10237  01DD' 0C80'              	rrf	??___flmul^(0+256),f
 10238  01DE'                    u4730:
 10239  01DE' 0B80'              	decfsz	(??___flmul+4)^(0+256),f
 10240  01DF' 2800'              	goto	u4735
 10241  01E0' 0800'              	movf	(??___flmul+3)^(0+256),w
 10242  01E1' 0080'              	movwf	(___flmul@prod+3)^(0+256)
 10243  01E2' 0800'              	movf	(??___flmul+2)^(0+256),w
 10244  01E3' 0080'              	movwf	(___flmul@prod+2)^(0+256)
 10245  01E4' 0800'              	movf	(??___flmul+1)^(0+256),w
 10246  01E5' 0080'              	movwf	(___flmul@prod+1)^(0+256)
 10247  01E6' 0800'              	movf	??___flmul^(0+256),w
 10248  01E7' 0080'              	movwf	___flmul@prod^(0+256)
 10249  01E8'                    l4939:
 10250  01E8' 3001               	movlw	1
 10251  01E9' 0780'              	addwf	___flmul@temp^(0+256),f
 10252  01EA' 3000               	movlw	0
 10253  01EB' 3D80'              	addwfc	(___flmul@temp+1)^(0+256),f
 10254  01EC'                    l4941:
 10255  01EC' 0800'              	movf	(___flmul@temp+1)^(0+256),w
 10256  01ED' 3A80               	xorlw	128
 10257  01EE' 0080'              	movwf	??___flmul^(0+256)
 10258  01EF' 3080               	movlw	128
 10259  01F0' 0200'              	subwf	??___flmul^(0+256),w
 10260  01F1' 1D03               	skipz
 10261  01F2' 2800'              	goto	u4745
 10262  01F3' 30FF               	movlw	255
 10263  01F4' 0200'              	subwf	___flmul@temp^(0+256),w
 10264  01F5'                    u4745:
 10265  01F5' 1C03               	skipc
 10266  01F6' 2800'              	goto	u4741
 10267  01F7' 2800'              	goto	u4740
 10268  01F8'                    u4741:
 10269  01F8' 2800'              	goto	l4945
 10270  01F9'                    u4740:
 10271  01F9'                    l4943:
 10272  01F9' 307F               	movlw	127
 10273  01FA' 0022               	movlb	2	; select bank2
 10274  01FB' 0080'              	movwf	(___flmul@prod+3)^(0+256)
 10275  01FC' 3080               	movlw	128
 10276  01FD' 0080'              	movwf	(___flmul@prod+2)^(0+256)
 10277  01FE' 3000               	movlw	0
 10278  01FF' 0080'              	movwf	(___flmul@prod+1)^(0+256)
 10279  0200' 3000               	movlw	0
 10280  0201' 0080'              	movwf	___flmul@prod^(0+256)
 10281  0202' 2800'              	goto	l1455
 10282  0203'                    l4945:
 10283  0203' 0022               	movlb	2	; select bank2
 10284  0204' 0800'              	movf	(___flmul@temp+1)^(0+256),w
 10285  0205' 3A80               	xorlw	128
 10286  0206' 0080'              	movwf	??___flmul^(0+256)
 10287  0207' 3080               	movlw	128
 10288  0208' 0200'              	subwf	??___flmul^(0+256),w
 10289  0209' 1D03               	skipz
 10290  020A' 2800'              	goto	u4755
 10291  020B' 3001               	movlw	1
 10292  020C' 0200'              	subwf	___flmul@temp^(0+256),w
 10293  020D'                    u4755:
 10294  020D' 1803               	skipnc
 10295  020E' 2800'              	goto	u4751
 10296  020F' 2800'              	goto	u4750
 10297  0210'                    u4751:
 10298  0210' 2800'              	goto	l4951
 10299  0211'                    u4750:
 10300  0211'                    l4947:
 10301  0211' 3000               	movlw	0
 10302  0212' 0022               	movlb	2	; select bank2
 10303  0213' 0080'              	movwf	(___flmul@prod+3)^(0+256)
 10304  0214' 3000               	movlw	0
 10305  0215' 0080'              	movwf	(___flmul@prod+2)^(0+256)
 10306  0216' 3000               	movlw	0
 10307  0217' 0080'              	movwf	(___flmul@prod+1)^(0+256)
 10308  0218' 3000               	movlw	0
 10309  0219' 0080'              	movwf	___flmul@prod^(0+256)
 10310  021A'                    l4949:
 10311  021A' 0180'              	clrf	___flmul@sign^(0+256)
 10312  021B' 2800'              	goto	l1455
 10313  021C'                    l4951:
 10314  021C' 0022               	movlb	2	; select bank2
 10315  021D' 0800'              	movf	___flmul@temp^(0+256),w
 10316  021E' 0080'              	movwf	___flmul@bexp^(0+256)
 10317  021F' 30FF               	movlw	255
 10318  0220' 0580'              	andwf	___flmul@prod^(0+256),f
 10319  0221' 30FF               	movlw	255
 10320  0222' 0580'              	andwf	(___flmul@prod+1)^(0+256),f
 10321  0223' 307F               	movlw	127
 10322  0224' 0580'              	andwf	(___flmul@prod+2)^(0+256),f
 10323  0225' 3000               	movlw	0
 10324  0226' 0580'              	andwf	(___flmul@prod+3)^(0+256),f
 10325  0227'                    l4953:
 10326  0227' 1C00'              	btfss	___flmul@bexp^(0+256),0
 10327  0228' 2800'              	goto	u4761
 10328  0229' 2800'              	goto	u4760
 10329  022A'                    u4761:
 10330  022A' 2800'              	goto	l4957
 10331  022B'                    u4760:
 10332  022B'                    l4955:
 10333  022B' 1782'              	bsf	(___flmul@prod^(0+256)+2),7
 10334  022C'                    l4957:
 10335  022C' 3600'              	lsrf	___flmul@bexp^(0+256),w
 10336  022D' 0083'              	movwf	(___flmul@prod^(0+256)+3)
 10337  022E'                    l1455:
 10338  022E' 0800'              	movf	___flmul@sign^(0+256),w
 10339  022F' 0080'              	movwf	??___flmul^(0+256)
 10340  0230' 0800'              	movf	??___flmul^(0+256),w
 10341  0231' 0483'              	iorwf	(___flmul@prod^(0+256)+3),f
 10342  0232'                    l4959:
 10343  0232' 0800'              	movf	(___flmul@prod+3)^(0+256),w
 10344  0233' 0080'              	movwf	(?___flmul+3)^(0+256)
 10345  0234' 0800'              	movf	(___flmul@prod+2)^(0+256),w
 10346  0235' 0080'              	movwf	(?___flmul+2)^(0+256)
 10347  0236' 0800'              	movf	(___flmul@prod+1)^(0+256),w
 10348  0237' 0080'              	movwf	(?___flmul+1)^(0+256)
 10349  0238' 0800'              	movf	___flmul@prod^(0+256),w
 10350  0239' 0080'              	movwf	?___flmul^(0+256)
 10351  023A'                    l1443:
 10352  023A' 0008               	return
 10353  023B'                    __end_of___flmul:
 10354                           
 10355                           	psect	text26
 10356  0000'                    __ptext26:	
 10357 ;; *************** function __Umul8_16 *****************
 10358 ;; Defined at:
 10359 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8_16.c"
 10360 ;; Parameters:    Size  Location     Type
 10361 ;;  multiplier      1    wreg     unsigned char 
 10362 ;;  multiplicand    1    0[BANK2 ] unsigned char 
 10363 ;; Auto vars:     Size  Location     Type
 10364 ;;  multiplier      1    8[BANK2 ] unsigned char 
 10365 ;;  word_mpld       2    6[BANK2 ] unsigned int 
 10366 ;;  product         2    4[BANK2 ] unsigned int 
 10367 ;; Return value:  Size  Location     Type
 10368 ;;                  2    0[BANK2 ] unsigned int 
 10369 ;; Registers used:
 10370 ;;		wreg, status,2, status,0
 10371 ;; Tracked objects:
 10372 ;;		On entry : 0/0
 10373 ;;		On exit  : 0/0
 10374 ;;		Unchanged: 0/0
 10375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10376 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 10377 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
 10378 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 10379 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0
 10380 ;;Total ram usage:        9 bytes
 10381 ;; Hardware stack levels used: 1
 10382 ;; Hardware stack levels required when called: 5
 10383 ;; This function calls:
 10384 ;;		Nothing
 10385 ;; This function is called by:
 10386 ;;		___flmul
 10387 ;; This function uses a non-reentrant model
 10388 ;;
 10389                           
 10390  0000'                    __Umul8_16:	
 10391                           ;psect for function __Umul8_16
 10392                           
 10393                           
 10394                           ;incstack = 0
 10395                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10396                           ;__Umul8_16@multiplier stored from wreg
 10397  0000' 0022               	movlb	2	; select bank2
 10398  0001' 0080'              	movwf	__Umul8_16@multiplier^(0+256)
 10399  0002'                    l4419:
 10400  0002' 0180'              	clrf	__Umul8_16@product^(0+256)
 10401  0003' 0180'              	clrf	(__Umul8_16@product+1)^(0+256)
 10402  0004'                    l4421:
 10403  0004' 0800'              	movf	__Umul8_16@multiplicand^(0+256),w
 10404  0005' 0080'              	movwf	??__Umul8_16^(0+256)
 10405  0006' 0181'              	clrf	(??__Umul8_16^(0+256)+1)
 10406  0007' 0800'              	movf	??__Umul8_16^(0+256),w
 10407  0008' 0080'              	movwf	__Umul8_16@word_mpld^(0+256)
 10408  0009' 0800'              	movf	(??__Umul8_16+1)^(0+256),w
 10409  000A' 0080'              	movwf	(__Umul8_16@word_mpld+1)^(0+256)
 10410  000B'                    l4423:
 10411  000B' 1C00'              	btfss	__Umul8_16@multiplier^(0+256),0
 10412  000C' 2800'              	goto	u3721
 10413  000D' 2800'              	goto	u3720
 10414  000E'                    u3721:
 10415  000E' 2800'              	goto	l1462
 10416  000F'                    u3720:
 10417  000F'                    l4425:
 10418  000F' 0800'              	movf	__Umul8_16@word_mpld^(0+256),w
 10419  0010' 0780'              	addwf	__Umul8_16@product^(0+256),f
 10420  0011' 0800'              	movf	(__Umul8_16@word_mpld+1)^(0+256),w
 10421  0012' 3D80'              	addwfc	(__Umul8_16@product+1)^(0+256),f
 10422  0013'                    l1462:
 10423  0013' 3001               	movlw	1
 10424  0014'                    u3735:
 10425  0014' 3580'              	lslf	__Umul8_16@word_mpld^(0+256),f
 10426  0015' 0D80'              	rlf	(__Umul8_16@word_mpld+1)^(0+256),f
 10427  0016' 0B89               	decfsz	9,f
 10428  0017' 2800'              	goto	u3735
 10429  0018' 1003               	clrc
 10430  0019' 0C80'              	rrf	__Umul8_16@multiplier^(0+256),f
 10431  001A'                    l4427:
 10432  001A' 0800'              	movf	__Umul8_16@multiplier^(0+256),w
 10433  001B' 1D03               	btfss	3,2
 10434  001C' 2800'              	goto	u3741
 10435  001D' 2800'              	goto	u3740
 10436  001E'                    u3741:
 10437  001E' 2800'              	goto	l4423
 10438  001F'                    u3740:
 10439  001F'                    l4429:
 10440  001F' 0800'              	movf	(__Umul8_16@product+1)^(0+256),w
 10441  0020' 0080'              	movwf	(?__Umul8_16+1)^(0+256)
 10442  0021' 0800'              	movf	__Umul8_16@product^(0+256),w
 10443  0022' 0080'              	movwf	?__Umul8_16^(0+256)
 10444  0023'                    l1464:
 10445  0023' 0008               	return
 10446  0024'                    __end_of__Umul8_16:
 10447                           
 10448                           	psect	text27
 10449  0000'                    __ptext27:	
 10450 ;; *************** function ___fldiv *****************
 10451 ;; Defined at:
 10452 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 10453 ;; Parameters:    Size  Location     Type
 10454 ;;  a               4   14[BANK2 ] unsigned int 
 10455 ;;  b               4   18[BANK2 ] unsigned int 
 10456 ;; Auto vars:     Size  Location     Type
 10457 ;;  grs             4   34[BANK2 ] unsigned long 
 10458 ;;  rem             4   27[BANK2 ] unsigned long 
 10459 ;;  new_exp         2   32[BANK2 ] int 
 10460 ;;  aexp            1   39[BANK2 ] unsigned char 
 10461 ;;  bexp            1   38[BANK2 ] unsigned char 
 10462 ;;  sign            1   31[BANK2 ] unsigned char 
 10463 ;; Return value:  Size  Location     Type
 10464 ;;                  4   14[BANK2 ] unsigned char 
 10465 ;; Registers used:
 10466 ;;		wreg, status,2, status,0
 10467 ;; Tracked objects:
 10468 ;;		On entry : 0/0
 10469 ;;		On exit  : 0/0
 10470 ;;		Unchanged: 0/0
 10471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10472 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 10473 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0
 10474 ;;      Temps:          0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
 10475 ;;      Totals:         0       0       0      26       0       0       0       0       0       0       0       0       
      +0       0
 10476 ;;Total ram usage:       26 bytes
 10477 ;; Hardware stack levels used: 1
 10478 ;; Hardware stack levels required when called: 5
 10479 ;; This function calls:
 10480 ;;		Nothing
 10481 ;; This function is called by:
 10482 ;;		_cc_cv_mode
 10483 ;;		_scaling
 10484 ;;		_fDISCHARGE
 10485 ;;		_fDC_res
 10486 ;;		_converter_settings
 10487 ;; This function uses a non-reentrant model
 10488 ;;
 10489                           
 10490  0000'                    ___fldiv:	
 10491                           ;psect for function ___fldiv
 10492                           
 10493  0000'                    l4683:	
 10494                           ;incstack = 0
 10495                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10496                           
 10497  0000' 0022               	movlb	2	; select bank2
 10498  0001' 0803'              	movf	(___fldiv@b^(0+256)+3),w
 10499  0002' 3980               	andlw	128
 10500  0003' 0080'              	movwf	___fldiv@sign^(0+256)
 10501  0004'                    l4685:
 10502  0004' 3503'              	lslf	(___fldiv@b^(0+256)+3),w
 10503  0005' 0080'              	movwf	___fldiv@bexp^(0+256)
 10504  0006'                    l4687:
 10505  0006' 1F82'              	btfss	(___fldiv@b^(0+256)+2),7
 10506  0007' 2800'              	goto	u4221
 10507  0008' 2800'              	goto	u4220
 10508  0009'                    u4221:
 10509  0009' 2800'              	goto	l4691
 10510  000A'                    u4220:
 10511  000A'                    l4689:
 10512  000A' 1400'              	bsf	___fldiv@bexp^(0+256),0
 10513  000B'                    l4691:
 10514  000B' 0800'              	movf	___fldiv@bexp^(0+256),w
 10515  000C' 1903               	btfsc	3,2
 10516  000D' 2800'              	goto	u4231
 10517  000E' 2800'              	goto	u4230
 10518  000F'                    u4231:
 10519  000F' 2800'              	goto	l4701
 10520  0010'                    u4230:
 10521  0010'                    l4693:
 10522  0010' 0A00'              	incf	___fldiv@bexp^(0+256),w
 10523  0011' 1D03               	btfss	3,2
 10524  0012' 2800'              	goto	u4241
 10525  0013' 2800'              	goto	u4240
 10526  0014'                    u4241:
 10527  0014' 2800'              	goto	l4697
 10528  0015'                    u4240:
 10529  0015'                    l4695:
 10530  0015' 3000               	movlw	0
 10531  0016' 0080'              	movwf	(___fldiv@b+3)^(0+256)
 10532  0017' 3000               	movlw	0
 10533  0018' 0080'              	movwf	(___fldiv@b+2)^(0+256)
 10534  0019' 3000               	movlw	0
 10535  001A' 0080'              	movwf	(___fldiv@b+1)^(0+256)
 10536  001B' 3000               	movlw	0
 10537  001C' 0080'              	movwf	___fldiv@b^(0+256)
 10538  001D'                    l4697:
 10539  001D' 1782'              	bsf	(___fldiv@b^(0+256)+2),7
 10540  001E'                    l4699:
 10541  001E' 0183'              	clrf	(___fldiv@b^(0+256)+3)
 10542  001F' 2800'              	goto	l4703
 10543  0020'                    l4701:
 10544  0020' 3000               	movlw	0
 10545  0021' 0080'              	movwf	(___fldiv@b+3)^(0+256)
 10546  0022' 3000               	movlw	0
 10547  0023' 0080'              	movwf	(___fldiv@b+2)^(0+256)
 10548  0024' 3000               	movlw	0
 10549  0025' 0080'              	movwf	(___fldiv@b+1)^(0+256)
 10550  0026' 3000               	movlw	0
 10551  0027' 0080'              	movwf	___fldiv@b^(0+256)
 10552  0028'                    l4703:
 10553  0028' 0803'              	movf	(___fldiv@a^(0+256)+3),w
 10554  0029' 3980               	andlw	128
 10555  002A' 0080'              	movwf	??___fldiv^(0+256)
 10556  002B' 0800'              	movf	??___fldiv^(0+256),w
 10557  002C' 0680'              	xorwf	___fldiv@sign^(0+256),f
 10558  002D'                    l4705:
 10559  002D' 3503'              	lslf	(___fldiv@a^(0+256)+3),w
 10560  002E' 0080'              	movwf	___fldiv@aexp^(0+256)
 10561  002F'                    l4707:
 10562  002F' 1F82'              	btfss	(___fldiv@a^(0+256)+2),7
 10563  0030' 2800'              	goto	u4251
 10564  0031' 2800'              	goto	u4250
 10565  0032'                    u4251:
 10566  0032' 2800'              	goto	l4711
 10567  0033'                    u4250:
 10568  0033'                    l4709:
 10569  0033' 1400'              	bsf	___fldiv@aexp^(0+256),0
 10570  0034'                    l4711:
 10571  0034' 0800'              	movf	___fldiv@aexp^(0+256),w
 10572  0035' 1903               	btfsc	3,2
 10573  0036' 2800'              	goto	u4261
 10574  0037' 2800'              	goto	u4260
 10575  0038'                    u4261:
 10576  0038' 2800'              	goto	l4721
 10577  0039'                    u4260:
 10578  0039'                    l4713:
 10579  0039' 0A00'              	incf	___fldiv@aexp^(0+256),w
 10580  003A' 1D03               	btfss	3,2
 10581  003B' 2800'              	goto	u4271
 10582  003C' 2800'              	goto	u4270
 10583  003D'                    u4271:
 10584  003D' 2800'              	goto	l4717
 10585  003E'                    u4270:
 10586  003E'                    l4715:
 10587  003E' 3000               	movlw	0
 10588  003F' 0080'              	movwf	(___fldiv@a+3)^(0+256)
 10589  0040' 3000               	movlw	0
 10590  0041' 0080'              	movwf	(___fldiv@a+2)^(0+256)
 10591  0042' 3000               	movlw	0
 10592  0043' 0080'              	movwf	(___fldiv@a+1)^(0+256)
 10593  0044' 3000               	movlw	0
 10594  0045' 0080'              	movwf	___fldiv@a^(0+256)
 10595  0046'                    l4717:
 10596  0046' 1782'              	bsf	(___fldiv@a^(0+256)+2),7
 10597  0047'                    l4719:
 10598  0047' 0183'              	clrf	(___fldiv@a^(0+256)+3)
 10599  0048' 2800'              	goto	l1403
 10600  0049'                    l4721:
 10601  0049' 3000               	movlw	0
 10602  004A' 0080'              	movwf	(___fldiv@a+3)^(0+256)
 10603  004B' 3000               	movlw	0
 10604  004C' 0080'              	movwf	(___fldiv@a+2)^(0+256)
 10605  004D' 3000               	movlw	0
 10606  004E' 0080'              	movwf	(___fldiv@a+1)^(0+256)
 10607  004F' 3000               	movlw	0
 10608  0050' 0080'              	movwf	___fldiv@a^(0+256)
 10609  0051'                    l1403:
 10610  0051' 0800'              	movf	(___fldiv@a+3)^(0+256),w
 10611  0052' 0400'              	iorwf	(___fldiv@a+2)^(0+256),w
 10612  0053' 0400'              	iorwf	(___fldiv@a+1)^(0+256),w
 10613  0054' 0400'              	iorwf	___fldiv@a^(0+256),w
 10614  0055' 1D03               	skipz
 10615  0056' 2800'              	goto	u4281
 10616  0057' 2800'              	goto	u4280
 10617  0058'                    u4281:
 10618  0058' 2800'              	goto	l4731
 10619  0059'                    u4280:
 10620  0059'                    l4723:
 10621  0059' 3000               	movlw	0
 10622  005A' 0080'              	movwf	(___fldiv@b+3)^(0+256)
 10623  005B' 3000               	movlw	0
 10624  005C' 0080'              	movwf	(___fldiv@b+2)^(0+256)
 10625  005D' 3000               	movlw	0
 10626  005E' 0080'              	movwf	(___fldiv@b+1)^(0+256)
 10627  005F' 3000               	movlw	0
 10628  0060' 0080'              	movwf	___fldiv@b^(0+256)
 10629  0061' 3080               	movlw	128
 10630  0062' 0482'              	iorwf	(___fldiv@b^(0+256)+2),f
 10631  0063' 307F               	movlw	127
 10632  0064' 0482'              	iorwf	((___fldiv@b+1)^(0+256)+2),f
 10633  0065'                    l4725:
 10634  0065' 0800'              	movf	___fldiv@sign^(0+256),w
 10635  0066' 0080'              	movwf	??___fldiv^(0+256)
 10636  0067' 0800'              	movf	??___fldiv^(0+256),w
 10637  0068' 0483'              	iorwf	(___fldiv@b^(0+256)+3),f
 10638  0069'                    l4727:
 10639  0069' 0800'              	movf	(___fldiv@b+3)^(0+256),w
 10640  006A' 0080'              	movwf	(?___fldiv+3)^(0+256)
 10641  006B' 0800'              	movf	(___fldiv@b+2)^(0+256),w
 10642  006C' 0080'              	movwf	(?___fldiv+2)^(0+256)
 10643  006D' 0800'              	movf	(___fldiv@b+1)^(0+256),w
 10644  006E' 0080'              	movwf	(?___fldiv+1)^(0+256)
 10645  006F' 0800'              	movf	___fldiv@b^(0+256),w
 10646  0070' 0080'              	movwf	?___fldiv^(0+256)
 10647  0071' 2800'              	goto	l1405
 10648  0072'                    l4731:
 10649  0072' 0800'              	movf	___fldiv@bexp^(0+256),w
 10650  0073' 1D03               	btfss	3,2
 10651  0074' 2800'              	goto	u4291
 10652  0075' 2800'              	goto	u4290
 10653  0076'                    u4291:
 10654  0076' 2800'              	goto	l4737
 10655  0077'                    u4290:
 10656  0077'                    l4733:
 10657  0077' 3000               	movlw	0
 10658  0078' 0080'              	movwf	(?___fldiv+3)^(0+256)
 10659  0079' 3000               	movlw	0
 10660  007A' 0080'              	movwf	(?___fldiv+2)^(0+256)
 10661  007B' 3000               	movlw	0
 10662  007C' 0080'              	movwf	(?___fldiv+1)^(0+256)
 10663  007D' 3000               	movlw	0
 10664  007E' 0080'              	movwf	?___fldiv^(0+256)
 10665  007F' 2800'              	goto	l1405
 10666  0080'                    l4737:
 10667  0080' 0800'              	movf	___fldiv@bexp^(0+256),w
 10668  0081' 0080'              	movwf	??___fldiv^(0+256)
 10669  0082' 0181'              	clrf	(??___fldiv^(0+256)+1)
 10670  0083' 0800'              	movf	(??___fldiv+1)^(0+256),w
 10671  0084' 0081'              	movwf	((??___fldiv+2)^(0+256)+1)
 10672  0085' 0800'              	movf	___fldiv@aexp^(0+256),w
 10673  0086' 0200'              	subwf	??___fldiv^(0+256),w
 10674  0087' 0080'              	movwf	(??___fldiv+2)^(0+256)
 10675  0088' 1C03               	skipc
 10676  0089' 0381'              	decf	((??___fldiv+2)^(0+256)+1),f
 10677  008A' 0800'              	movf	(??___fldiv+2)^(0+256),w
 10678  008B' 3E7F               	addlw	127
 10679  008C' 0080'              	movwf	___fldiv@new_exp^(0+256)
 10680  008D' 3000               	movlw	0
 10681  008E' 3D00'              	addwfc	(??___fldiv+3)^(0+256),w
 10682  008F' 0080'              	movwf	(___fldiv@new_exp+1)^(0+256)
 10683  0090'                    l4739:
 10684  0090' 0800'              	movf	(___fldiv@b+3)^(0+256),w
 10685  0091' 0080'              	movwf	(___fldiv@rem+3)^(0+256)
 10686  0092' 0800'              	movf	(___fldiv@b+2)^(0+256),w
 10687  0093' 0080'              	movwf	(___fldiv@rem+2)^(0+256)
 10688  0094' 0800'              	movf	(___fldiv@b+1)^(0+256),w
 10689  0095' 0080'              	movwf	(___fldiv@rem+1)^(0+256)
 10690  0096' 0800'              	movf	___fldiv@b^(0+256),w
 10691  0097' 0080'              	movwf	___fldiv@rem^(0+256)
 10692  0098'                    l4741:
 10693  0098' 3000               	movlw	0
 10694  0099' 0080'              	movwf	(___fldiv@b+3)^(0+256)
 10695  009A' 3000               	movlw	0
 10696  009B' 0080'              	movwf	(___fldiv@b+2)^(0+256)
 10697  009C' 3000               	movlw	0
 10698  009D' 0080'              	movwf	(___fldiv@b+1)^(0+256)
 10699  009E' 3000               	movlw	0
 10700  009F' 0080'              	movwf	___fldiv@b^(0+256)
 10701  00A0'                    l4743:
 10702  00A0' 3000               	movlw	0
 10703  00A1' 0080'              	movwf	(___fldiv@grs+3)^(0+256)
 10704  00A2' 3000               	movlw	0
 10705  00A3' 0080'              	movwf	(___fldiv@grs+2)^(0+256)
 10706  00A4' 3000               	movlw	0
 10707  00A5' 0080'              	movwf	(___fldiv@grs+1)^(0+256)
 10708  00A6' 3000               	movlw	0
 10709  00A7' 0080'              	movwf	___fldiv@grs^(0+256)
 10710  00A8'                    l4745:
 10711  00A8' 0180'              	clrf	___fldiv@aexp^(0+256)
 10712  00A9' 2800'              	goto	l4765
 10713  00AA'                    l4747:
 10714  00AA' 0800'              	movf	___fldiv@aexp^(0+256),w
 10715  00AB' 1903               	btfsc	3,2
 10716  00AC' 2800'              	goto	u4301
 10717  00AD' 2800'              	goto	u4300
 10718  00AE'                    u4301:
 10719  00AE' 2800'              	goto	l4757
 10720  00AF'                    u4300:
 10721  00AF'                    l4749:
 10722  00AF' 3001               	movlw	1
 10723  00B0'                    u4315:
 10724  00B0' 3580'              	lslf	___fldiv@rem^(0+256),f
 10725  00B1' 0D80'              	rlf	(___fldiv@rem+1)^(0+256),f
 10726  00B2' 0D80'              	rlf	(___fldiv@rem+2)^(0+256),f
 10727  00B3' 0D80'              	rlf	(___fldiv@rem+3)^(0+256),f
 10728  00B4' 0B89               	decfsz	9,f
 10729  00B5' 2800'              	goto	u4315
 10730  00B6' 3001               	movlw	1
 10731  00B7'                    u4325:
 10732  00B7' 3580'              	lslf	___fldiv@b^(0+256),f
 10733  00B8' 0D80'              	rlf	(___fldiv@b+1)^(0+256),f
 10734  00B9' 0D80'              	rlf	(___fldiv@b+2)^(0+256),f
 10735  00BA' 0D80'              	rlf	(___fldiv@b+3)^(0+256),f
 10736  00BB' 0B89               	decfsz	9,f
 10737  00BC' 2800'              	goto	u4325
 10738  00BD'                    l4751:
 10739  00BD' 1F80'              	btfss	(___fldiv@grs+3)^(0+256),7
 10740  00BE' 2800'              	goto	u4331
 10741  00BF' 2800'              	goto	u4330
 10742  00C0'                    u4331:
 10743  00C0' 2800'              	goto	l4755
 10744  00C1'                    u4330:
 10745  00C1'                    l4753:
 10746  00C1' 1400'              	bsf	___fldiv@b^(0+256),0
 10747  00C2'                    l4755:
 10748  00C2' 3001               	movlw	1
 10749  00C3'                    u4345:
 10750  00C3' 3580'              	lslf	___fldiv@grs^(0+256),f
 10751  00C4' 0D80'              	rlf	(___fldiv@grs+1)^(0+256),f
 10752  00C5' 0D80'              	rlf	(___fldiv@grs+2)^(0+256),f
 10753  00C6' 0D80'              	rlf	(___fldiv@grs+3)^(0+256),f
 10754  00C7' 0B89               	decfsz	9,f
 10755  00C8' 2800'              	goto	u4345
 10756  00C9'                    l4757:
 10757  00C9' 0800'              	movf	(___fldiv@a+3)^(0+256),w
 10758  00CA' 0200'              	subwf	(___fldiv@rem+3)^(0+256),w
 10759  00CB' 1D03               	skipz
 10760  00CC' 2800'              	goto	u4355
 10761  00CD' 0800'              	movf	(___fldiv@a+2)^(0+256),w
 10762  00CE' 0200'              	subwf	(___fldiv@rem+2)^(0+256),w
 10763  00CF' 1D03               	skipz
 10764  00D0' 2800'              	goto	u4355
 10765  00D1' 0800'              	movf	(___fldiv@a+1)^(0+256),w
 10766  00D2' 0200'              	subwf	(___fldiv@rem+1)^(0+256),w
 10767  00D3' 1D03               	skipz
 10768  00D4' 2800'              	goto	u4355
 10769  00D5' 0800'              	movf	___fldiv@a^(0+256),w
 10770  00D6' 0200'              	subwf	___fldiv@rem^(0+256),w
 10771  00D7'                    u4355:
 10772  00D7' 1C03               	skipc
 10773  00D8' 2800'              	goto	u4351
 10774  00D9' 2800'              	goto	u4350
 10775  00DA'                    u4351:
 10776  00DA' 2800'              	goto	l4763
 10777  00DB'                    u4350:
 10778  00DB'                    l4759:
 10779  00DB' 1703'              	bsf	(___fldiv@grs^(0+256)+3),6
 10780  00DC'                    l4761:
 10781  00DC' 0800'              	movf	___fldiv@a^(0+256),w
 10782  00DD' 0280'              	subwf	___fldiv@rem^(0+256),f
 10783  00DE' 0800'              	movf	(___fldiv@a+1)^(0+256),w
 10784  00DF' 3B80'              	subwfb	(___fldiv@rem+1)^(0+256),f
 10785  00E0' 0800'              	movf	(___fldiv@a+2)^(0+256),w
 10786  00E1' 3B80'              	subwfb	(___fldiv@rem+2)^(0+256),f
 10787  00E2' 0800'              	movf	(___fldiv@a+3)^(0+256),w
 10788  00E3' 3B80'              	subwfb	(___fldiv@rem+3)^(0+256),f
 10789  00E4'                    l4763:
 10790  00E4' 3001               	movlw	1
 10791  00E5' 0080'              	movwf	??___fldiv^(0+256)
 10792  00E6' 0800'              	movf	??___fldiv^(0+256),w
 10793  00E7' 0780'              	addwf	___fldiv@aexp^(0+256),f
 10794  00E8'                    l4765:
 10795  00E8' 301A               	movlw	26
 10796  00E9' 0200'              	subwf	___fldiv@aexp^(0+256),w
 10797  00EA' 1C03               	skipc
 10798  00EB' 2800'              	goto	u4361
 10799  00EC' 2800'              	goto	u4360
 10800  00ED'                    u4361:
 10801  00ED' 2800'              	goto	l4747
 10802  00EE'                    u4360:
 10803  00EE'                    l4767:
 10804  00EE' 0800'              	movf	(___fldiv@rem+3)^(0+256),w
 10805  00EF' 0400'              	iorwf	(___fldiv@rem+2)^(0+256),w
 10806  00F0' 0400'              	iorwf	(___fldiv@rem+1)^(0+256),w
 10807  00F1' 0400'              	iorwf	___fldiv@rem^(0+256),w
 10808  00F2' 1903               	skipnz
 10809  00F3' 2800'              	goto	u4371
 10810  00F4' 2800'              	goto	u4370
 10811  00F5'                    u4371:
 10812  00F5' 2800'              	goto	l4781
 10813  00F6'                    u4370:
 10814  00F6'                    l4769:
 10815  00F6' 1400'              	bsf	___fldiv@grs^(0+256),0
 10816  00F7' 2800'              	goto	l4781
 10817  00F8'                    l4771:
 10818  00F8' 3001               	movlw	1
 10819  00F9'                    u4385:
 10820  00F9' 3580'              	lslf	___fldiv@b^(0+256),f
 10821  00FA' 0D80'              	rlf	(___fldiv@b+1)^(0+256),f
 10822  00FB' 0D80'              	rlf	(___fldiv@b+2)^(0+256),f
 10823  00FC' 0D80'              	rlf	(___fldiv@b+3)^(0+256),f
 10824  00FD' 0B89               	decfsz	9,f
 10825  00FE' 2800'              	goto	u4385
 10826  00FF'                    l4773:
 10827  00FF' 1F80'              	btfss	(___fldiv@grs+3)^(0+256),7
 10828  0100' 2800'              	goto	u4391
 10829  0101' 2800'              	goto	u4390
 10830  0102'                    u4391:
 10831  0102' 2800'              	goto	l4777
 10832  0103'                    u4390:
 10833  0103'                    l4775:
 10834  0103' 1400'              	bsf	___fldiv@b^(0+256),0
 10835  0104'                    l4777:
 10836  0104' 3001               	movlw	1
 10837  0105'                    u4405:
 10838  0105' 3580'              	lslf	___fldiv@grs^(0+256),f
 10839  0106' 0D80'              	rlf	(___fldiv@grs+1)^(0+256),f
 10840  0107' 0D80'              	rlf	(___fldiv@grs+2)^(0+256),f
 10841  0108' 0D80'              	rlf	(___fldiv@grs+3)^(0+256),f
 10842  0109' 0B89               	decfsz	9,f
 10843  010A' 2800'              	goto	u4405
 10844  010B'                    l4779:
 10845  010B' 30FF               	movlw	255
 10846  010C' 0780'              	addwf	___fldiv@new_exp^(0+256),f
 10847  010D' 30FF               	movlw	255
 10848  010E' 3D80'              	addwfc	(___fldiv@new_exp+1)^(0+256),f
 10849  010F'                    l4781:
 10850  010F' 1F80'              	btfss	(___fldiv@b+2)^(0+256),7
 10851  0110' 2800'              	goto	u4411
 10852  0111' 2800'              	goto	u4410
 10853  0112'                    u4411:
 10854  0112' 2800'              	goto	l4771
 10855  0113'                    u4410:
 10856  0113'                    l4783:
 10857  0113' 0180'              	clrf	___fldiv@aexp^(0+256)
 10858  0114'                    l4785:
 10859  0114' 1F80'              	btfss	(___fldiv@grs+3)^(0+256),7
 10860  0115' 2800'              	goto	u4421
 10861  0116' 2800'              	goto	u4420
 10862  0117'                    u4421:
 10863  0117' 2800'              	goto	l4793
 10864  0118'                    u4420:
 10865  0118'                    l4787:
 10866  0118' 30FF               	movlw	255
 10867  0119' 0500'              	andwf	___fldiv@grs^(0+256),w
 10868  011A' 0080'              	movwf	??___fldiv^(0+256)
 10869  011B' 30FF               	movlw	255
 10870  011C' 0500'              	andwf	(___fldiv@grs+1)^(0+256),w
 10871  011D' 0081'              	movwf	(??___fldiv^(0+256)+1)
 10872  011E' 30FF               	movlw	255
 10873  011F' 0500'              	andwf	(___fldiv@grs+2)^(0+256),w
 10874  0120' 0082'              	movwf	(??___fldiv^(0+256)+2)
 10875  0121' 307F               	movlw	127
 10876  0122' 0500'              	andwf	(___fldiv@grs+3)^(0+256),w
 10877  0123' 0083'              	movwf	(??___fldiv^(0+256)+3)
 10878  0124' 0800'              	movf	(??___fldiv+3)^(0+256),w
 10879  0125' 0400'              	iorwf	(??___fldiv+2)^(0+256),w
 10880  0126' 0400'              	iorwf	(??___fldiv+1)^(0+256),w
 10881  0127' 0400'              	iorwf	??___fldiv^(0+256),w
 10882  0128' 1903               	skipnz
 10883  0129' 2800'              	goto	u4431
 10884  012A' 2800'              	goto	u4430
 10885  012B'                    u4431:
 10886  012B' 2800'              	goto	l1419
 10887  012C'                    u4430:
 10888  012C'                    l4789:
 10889  012C' 0180'              	clrf	___fldiv@aexp^(0+256)
 10890  012D' 0A80'              	incf	___fldiv@aexp^(0+256),f
 10891  012E' 2800'              	goto	l4793
 10892  012F'                    l1419:
 10893  012F' 1C00'              	btfss	___fldiv@b^(0+256),0
 10894  0130' 2800'              	goto	u4441
 10895  0131' 2800'              	goto	u4440
 10896  0132'                    u4441:
 10897  0132' 2800'              	goto	l4793
 10898  0133'                    u4440:
 10899  0133' 2800'              	goto	l4789
 10900  0134'                    l4793:
 10901  0134' 0800'              	movf	___fldiv@aexp^(0+256),w
 10902  0135' 1903               	btfsc	3,2
 10903  0136' 2800'              	goto	u4451
 10904  0137' 2800'              	goto	u4450
 10905  0138'                    u4451:
 10906  0138' 2800'              	goto	l4803
 10907  0139'                    u4450:
 10908  0139'                    l4795:
 10909  0139' 3001               	movlw	1
 10910  013A' 0780'              	addwf	___fldiv@b^(0+256),f
 10911  013B' 3000               	movlw	0
 10912  013C' 3D80'              	addwfc	(___fldiv@b+1)^(0+256),f
 10913  013D' 3000               	movlw	0
 10914  013E' 3D80'              	addwfc	(___fldiv@b+2)^(0+256),f
 10915  013F' 3000               	movlw	0
 10916  0140' 3D80'              	addwfc	(___fldiv@b+3)^(0+256),f
 10917  0141'                    l4797:
 10918  0141' 1C00'              	btfss	(___fldiv@b+3)^(0+256),0
 10919  0142' 2800'              	goto	u4461
 10920  0143' 2800'              	goto	u4460
 10921  0144'                    u4461:
 10922  0144' 2800'              	goto	l4803
 10923  0145'                    u4460:
 10924  0145'                    l4799:
 10925  0145' 0800'              	movf	___fldiv@b^(0+256),w
 10926  0146' 0080'              	movwf	??___fldiv^(0+256)
 10927  0147' 0800'              	movf	(___fldiv@b+1)^(0+256),w
 10928  0148' 0081'              	movwf	(??___fldiv^(0+256)+1)
 10929  0149' 0800'              	movf	(___fldiv@b+2)^(0+256),w
 10930  014A' 0082'              	movwf	(??___fldiv^(0+256)+2)
 10931  014B' 0800'              	movf	(___fldiv@b+3)^(0+256),w
 10932  014C' 0083'              	movwf	(??___fldiv^(0+256)+3)
 10933  014D' 3001               	movlw	1
 10934  014E' 0080'              	movwf	(??___fldiv+4)^(0+256)
 10935  014F'                    u4475:
 10936  014F' 3783'              	asrf	(??___fldiv^(0+256)+3),f
 10937  0150' 0C82'              	rrf	(??___fldiv^(0+256)+2),f
 10938  0151' 0C81'              	rrf	(??___fldiv^(0+256)+1),f
 10939  0152' 0C80'              	rrf	??___fldiv^(0+256),f
 10940  0153'                    u4470:
 10941  0153' 0B80'              	decfsz	(??___fldiv+4)^(0+256),f
 10942  0154' 2800'              	goto	u4475
 10943  0155' 0800'              	movf	(??___fldiv+3)^(0+256),w
 10944  0156' 0080'              	movwf	(___fldiv@b+3)^(0+256)
 10945  0157' 0800'              	movf	(??___fldiv+2)^(0+256),w
 10946  0158' 0080'              	movwf	(___fldiv@b+2)^(0+256)
 10947  0159' 0800'              	movf	(??___fldiv+1)^(0+256),w
 10948  015A' 0080'              	movwf	(___fldiv@b+1)^(0+256)
 10949  015B' 0800'              	movf	??___fldiv^(0+256),w
 10950  015C' 0080'              	movwf	___fldiv@b^(0+256)
 10951  015D'                    l4801:
 10952  015D' 3001               	movlw	1
 10953  015E' 0780'              	addwf	___fldiv@new_exp^(0+256),f
 10954  015F' 3000               	movlw	0
 10955  0160' 3D80'              	addwfc	(___fldiv@new_exp+1)^(0+256),f
 10956  0161'                    l4803:
 10957  0161' 0800'              	movf	(___fldiv@new_exp+1)^(0+256),w
 10958  0162' 3A80               	xorlw	128
 10959  0163' 0080'              	movwf	??___fldiv^(0+256)
 10960  0164' 3080               	movlw	128
 10961  0165' 0200'              	subwf	??___fldiv^(0+256),w
 10962  0166' 1D03               	skipz
 10963  0167' 2800'              	goto	u4485
 10964  0168' 30FF               	movlw	255
 10965  0169' 0200'              	subwf	___fldiv@new_exp^(0+256),w
 10966  016A'                    u4485:
 10967  016A' 1C03               	skipc
 10968  016B' 2800'              	goto	u4481
 10969  016C' 2800'              	goto	u4480
 10970  016D'                    u4481:
 10971  016D' 2800'              	goto	l1424
 10972  016E'                    u4480:
 10973  016E'                    l4805:
 10974  016E' 30FF               	movlw	255
 10975  016F' 0022               	movlb	2	; select bank2
 10976  0170' 0080'              	movwf	___fldiv@new_exp^(0+256)
 10977  0171' 3000               	movlw	0
 10978  0172' 0081'              	movwf	(___fldiv@new_exp^(0+256)+1)
 10979  0173' 3000               	movlw	0
 10980  0174' 0080'              	movwf	(___fldiv@b+3)^(0+256)
 10981  0175' 3000               	movlw	0
 10982  0176' 0080'              	movwf	(___fldiv@b+2)^(0+256)
 10983  0177' 3000               	movlw	0
 10984  0178' 0080'              	movwf	(___fldiv@b+1)^(0+256)
 10985  0179' 3000               	movlw	0
 10986  017A' 0080'              	movwf	___fldiv@b^(0+256)
 10987  017B'                    l1424:
 10988  017B' 0022               	movlb	2	; select bank2
 10989  017C' 0800'              	movf	(___fldiv@new_exp+1)^(0+256),w
 10990  017D' 3A80               	xorlw	128
 10991  017E' 0080'              	movwf	??___fldiv^(0+256)
 10992  017F' 3080               	movlw	128
 10993  0180' 0200'              	subwf	??___fldiv^(0+256),w
 10994  0181' 1D03               	skipz
 10995  0182' 2800'              	goto	u4495
 10996  0183' 3001               	movlw	1
 10997  0184' 0200'              	subwf	___fldiv@new_exp^(0+256),w
 10998  0185'                    u4495:
 10999  0185' 1803               	skipnc
 11000  0186' 2800'              	goto	u4491
 11001  0187' 2800'              	goto	u4490
 11002  0188'                    u4491:
 11003  0188' 2800'              	goto	l1425
 11004  0189'                    u4490:
 11005  0189'                    l4807:
 11006  0189' 0022               	movlb	2	; select bank2
 11007  018A' 0180'              	clrf	___fldiv@new_exp^(0+256)
 11008  018B' 0180'              	clrf	(___fldiv@new_exp+1)^(0+256)
 11009  018C'                    l4809:
 11010  018C' 3000               	movlw	0
 11011  018D' 0080'              	movwf	(___fldiv@b+3)^(0+256)
 11012  018E' 3000               	movlw	0
 11013  018F' 0080'              	movwf	(___fldiv@b+2)^(0+256)
 11014  0190' 3000               	movlw	0
 11015  0191' 0080'              	movwf	(___fldiv@b+1)^(0+256)
 11016  0192' 3000               	movlw	0
 11017  0193' 0080'              	movwf	___fldiv@b^(0+256)
 11018  0194'                    l4811:
 11019  0194' 0180'              	clrf	___fldiv@sign^(0+256)
 11020  0195'                    l1425:
 11021  0195' 0022               	movlb	2	; select bank2
 11022  0196' 0800'              	movf	___fldiv@new_exp^(0+256),w
 11023  0197' 0080'              	movwf	___fldiv@bexp^(0+256)
 11024  0198'                    l4813:
 11025  0198' 1C00'              	btfss	___fldiv@bexp^(0+256),0
 11026  0199' 2800'              	goto	u4501
 11027  019A' 2800'              	goto	u4500
 11028  019B'                    u4501:
 11029  019B' 2800'              	goto	l4817
 11030  019C'                    u4500:
 11031  019C'                    l4815:
 11032  019C' 1782'              	bsf	(___fldiv@b^(0+256)+2),7
 11033  019D' 2800'              	goto	l1427
 11034  019E'                    l4817:
 11035  019E' 307F               	movlw	127
 11036  019F' 0080'              	movwf	??___fldiv^(0+256)
 11037  01A0' 0800'              	movf	??___fldiv^(0+256),w
 11038  01A1' 0582'              	andwf	(___fldiv@b^(0+256)+2),f
 11039  01A2'                    l1427:
 11040  01A2' 3600'              	lsrf	___fldiv@bexp^(0+256),w
 11041  01A3' 0083'              	movwf	(___fldiv@b^(0+256)+3)
 11042  01A4' 0800'              	movf	___fldiv@sign^(0+256),w
 11043  01A5' 0080'              	movwf	??___fldiv^(0+256)
 11044  01A6' 0800'              	movf	??___fldiv^(0+256),w
 11045  01A7' 0483'              	iorwf	(___fldiv@b^(0+256)+3),f
 11046  01A8' 2800'              	goto	l4727
 11047  01A9'                    l1405:
 11048  01A9' 0008               	return
 11049  01AA'                    __end_of___fldiv:
 11050                           
 11051                           	psect	text28
 11052  0000'                    __ptext28:	
 11053 ;; *************** function ___fladd *****************
 11054 ;; Defined at:
 11055 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 11056 ;; Parameters:    Size  Location     Type
 11057 ;;  b               4   66[BANK2 ] unsigned char 
 11058 ;;  a               4   70[BANK2 ] unsigned char 
 11059 ;; Auto vars:     Size  Location     Type
 11060 ;;  grs             1   77[BANK2 ] unsigned char 
 11061 ;;  bexp            1   76[BANK2 ] unsigned char 
 11062 ;;  aexp            1   75[BANK2 ] unsigned char 
 11063 ;;  signs           1   74[BANK2 ] unsigned char 
 11064 ;; Return value:  Size  Location     Type
 11065 ;;                  4   66[BANK2 ] unsigned char 
 11066 ;; Registers used:
 11067 ;;		wreg, status,2, status,0
 11068 ;; Tracked objects:
 11069 ;;		On entry : 0/0
 11070 ;;		On exit  : 0/0
 11071 ;;		Unchanged: 0/0
 11072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11073 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 11074 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 11075 ;;      Temps:          0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
 11076 ;;      Totals:         0       0       0      12       8       0       0       0       0       0       0       0       
      +0       0
 11077 ;;Total ram usage:       20 bytes
 11078 ;; Hardware stack levels used: 1
 11079 ;; Hardware stack levels required when called: 5
 11080 ;; This function calls:
 11081 ;;		Nothing
 11082 ;; This function is called by:
 11083 ;;		_cc_cv_mode
 11084 ;;		_scaling
 11085 ;;		_fDISCHARGE
 11086 ;;		_fDC_res
 11087 ;;		_converter_settings
 11088 ;; This function uses a non-reentrant model
 11089 ;;
 11090                           
 11091  0000'                    ___fladd:	
 11092                           ;psect for function ___fladd
 11093                           
 11094  0000'                    l4489:	
 11095                           ;incstack = 0
 11096                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 11097                           
 11098  0000' 0022               	movlb	2	; select bank2
 11099  0001' 0803'              	movf	(___fladd@b^(0+256)+3),w
 11100  0002' 3980               	andlw	128
 11101  0003' 0080'              	movwf	___fladd@signs^(0+256)
 11102  0004'                    l4491:
 11103  0004' 3503'              	lslf	(___fladd@b^(0+256)+3),w
 11104  0005' 0080'              	movwf	___fladd@bexp^(0+256)
 11105  0006'                    l4493:
 11106  0006' 1F82'              	btfss	(___fladd@b^(0+256)+2),7
 11107  0007' 2800'              	goto	u3791
 11108  0008' 2800'              	goto	u3790
 11109  0009'                    u3791:
 11110  0009' 2800'              	goto	l4497
 11111  000A'                    u3790:
 11112  000A'                    l4495:
 11113  000A' 1400'              	bsf	___fladd@bexp^(0+256),0
 11114  000B'                    l4497:
 11115  000B' 0800'              	movf	___fladd@bexp^(0+256),w
 11116  000C' 1903               	btfsc	3,2
 11117  000D' 2800'              	goto	u3801
 11118  000E' 2800'              	goto	u3800
 11119  000F'                    u3801:
 11120  000F' 2800'              	goto	l4507
 11121  0010'                    u3800:
 11122  0010'                    l4499:
 11123  0010' 0A00'              	incf	___fladd@bexp^(0+256),w
 11124  0011' 1D03               	btfss	3,2
 11125  0012' 2800'              	goto	u3811
 11126  0013' 2800'              	goto	u3810
 11127  0014'                    u3811:
 11128  0014' 2800'              	goto	l4503
 11129  0015'                    u3810:
 11130  0015'                    l4501:
 11131  0015' 3000               	movlw	0
 11132  0016' 0080'              	movwf	(___fladd@b+3)^(0+256)
 11133  0017' 3000               	movlw	0
 11134  0018' 0080'              	movwf	(___fladd@b+2)^(0+256)
 11135  0019' 3000               	movlw	0
 11136  001A' 0080'              	movwf	(___fladd@b+1)^(0+256)
 11137  001B' 3000               	movlw	0
 11138  001C' 0080'              	movwf	___fladd@b^(0+256)
 11139  001D'                    l4503:
 11140  001D' 1782'              	bsf	(___fladd@b^(0+256)+2),7
 11141  001E'                    l4505:
 11142  001E' 0183'              	clrf	(___fladd@b^(0+256)+3)
 11143  001F' 2800'              	goto	l4509
 11144  0020'                    l4507:
 11145  0020' 3000               	movlw	0
 11146  0021' 0080'              	movwf	(___fladd@b+3)^(0+256)
 11147  0022' 3000               	movlw	0
 11148  0023' 0080'              	movwf	(___fladd@b+2)^(0+256)
 11149  0024' 3000               	movlw	0
 11150  0025' 0080'              	movwf	(___fladd@b+1)^(0+256)
 11151  0026' 3000               	movlw	0
 11152  0027' 0080'              	movwf	___fladd@b^(0+256)
 11153  0028'                    l4509:
 11154  0028' 0803'              	movf	(___fladd@a^(0+256)+3),w
 11155  0029' 3980               	andlw	128
 11156  002A' 0080'              	movwf	___fladd@aexp^(0+256)
 11157  002B'                    l4511:
 11158  002B' 0800'              	movf	___fladd@aexp^(0+256),w
 11159  002C' 0600'              	xorwf	___fladd@signs^(0+256),w
 11160  002D' 1903               	skipnz
 11161  002E' 2800'              	goto	u3821
 11162  002F' 2800'              	goto	u3820
 11163  0030'                    u3821:
 11164  0030' 2800'              	goto	l4515
 11165  0031'                    u3820:
 11166  0031'                    l4513:
 11167  0031' 1700'              	bsf	___fladd@signs^(0+256),6
 11168  0032'                    l4515:
 11169  0032' 3503'              	lslf	(___fladd@a^(0+256)+3),w
 11170  0033' 0080'              	movwf	___fladd@aexp^(0+256)
 11171  0034'                    l4517:
 11172  0034' 1F82'              	btfss	(___fladd@a^(0+256)+2),7
 11173  0035' 2800'              	goto	u3831
 11174  0036' 2800'              	goto	u3830
 11175  0037'                    u3831:
 11176  0037' 2800'              	goto	l4521
 11177  0038'                    u3830:
 11178  0038'                    l4519:
 11179  0038' 1400'              	bsf	___fladd@aexp^(0+256),0
 11180  0039'                    l4521:
 11181  0039' 0800'              	movf	___fladd@aexp^(0+256),w
 11182  003A' 1903               	btfsc	3,2
 11183  003B' 2800'              	goto	u3841
 11184  003C' 2800'              	goto	u3840
 11185  003D'                    u3841:
 11186  003D' 2800'              	goto	l4531
 11187  003E'                    u3840:
 11188  003E'                    l4523:
 11189  003E' 0A00'              	incf	___fladd@aexp^(0+256),w
 11190  003F' 1D03               	btfss	3,2
 11191  0040' 2800'              	goto	u3851
 11192  0041' 2800'              	goto	u3850
 11193  0042'                    u3851:
 11194  0042' 2800'              	goto	l4527
 11195  0043'                    u3850:
 11196  0043'                    l4525:
 11197  0043' 3000               	movlw	0
 11198  0044' 0080'              	movwf	(___fladd@a+3)^(0+256)
 11199  0045' 3000               	movlw	0
 11200  0046' 0080'              	movwf	(___fladd@a+2)^(0+256)
 11201  0047' 3000               	movlw	0
 11202  0048' 0080'              	movwf	(___fladd@a+1)^(0+256)
 11203  0049' 3000               	movlw	0
 11204  004A' 0080'              	movwf	___fladd@a^(0+256)
 11205  004B'                    l4527:
 11206  004B' 1782'              	bsf	(___fladd@a^(0+256)+2),7
 11207  004C'                    l4529:
 11208  004C' 0183'              	clrf	(___fladd@a^(0+256)+3)
 11209  004D' 2800'              	goto	l1347
 11210  004E'                    l4531:
 11211  004E' 3000               	movlw	0
 11212  004F' 0080'              	movwf	(___fladd@a+3)^(0+256)
 11213  0050' 3000               	movlw	0
 11214  0051' 0080'              	movwf	(___fladd@a+2)^(0+256)
 11215  0052' 3000               	movlw	0
 11216  0053' 0080'              	movwf	(___fladd@a+1)^(0+256)
 11217  0054' 3000               	movlw	0
 11218  0055' 0080'              	movwf	___fladd@a^(0+256)
 11219  0056'                    l1347:
 11220  0056' 0800'              	movf	___fladd@bexp^(0+256),w
 11221  0057' 0200'              	subwf	___fladd@aexp^(0+256),w
 11222  0058' 1803               	skipnc
 11223  0059' 2800'              	goto	u3861
 11224  005A' 2800'              	goto	u3860
 11225  005B'                    u3861:
 11226  005B' 2800'              	goto	l4567
 11227  005C'                    u3860:
 11228  005C'                    l4533:
 11229  005C' 1F00'              	btfss	___fladd@signs^(0+256),6
 11230  005D' 2800'              	goto	u3871
 11231  005E' 2800'              	goto	u3870
 11232  005F'                    u3871:
 11233  005F' 2800'              	goto	l4537
 11234  0060'                    u3870:
 11235  0060'                    l4535:
 11236  0060' 3080               	movlw	128
 11237  0061' 0023               	movlb	3	; select bank3
 11238  0062' 0080'              	movwf	??___fladd^(0+384)
 11239  0063' 0800'              	movf	??___fladd^(0+384),w
 11240  0064' 0022               	movlb	2	; select bank2
 11241  0065' 0680'              	xorwf	___fladd@signs^(0+256),f
 11242  0066'                    l4537:
 11243  0066' 0800'              	movf	___fladd@bexp^(0+256),w
 11244  0067' 0080'              	movwf	___fladd@grs^(0+256)
 11245  0068'                    l4539:
 11246  0068' 0800'              	movf	___fladd@aexp^(0+256),w
 11247  0069' 0080'              	movwf	___fladd@bexp^(0+256)
 11248  006A'                    l4541:
 11249  006A' 0800'              	movf	___fladd@grs^(0+256),w
 11250  006B' 0080'              	movwf	___fladd@aexp^(0+256)
 11251  006C'                    l4543:
 11252  006C' 0800'              	movf	___fladd@b^(0+256),w
 11253  006D' 0080'              	movwf	___fladd@grs^(0+256)
 11254  006E'                    l4545:
 11255  006E' 0800'              	movf	___fladd@a^(0+256),w
 11256  006F' 0080'              	movwf	___fladd@b^(0+256)
 11257  0070'                    l4547:
 11258  0070' 0800'              	movf	___fladd@grs^(0+256),w
 11259  0071' 0080'              	movwf	___fladd@a^(0+256)
 11260  0072'                    l4549:
 11261  0072' 0801'              	movf	(___fladd@b^(0+256)+1),w
 11262  0073' 0080'              	movwf	___fladd@grs^(0+256)
 11263  0074'                    l4551:
 11264  0074' 0801'              	movf	(___fladd@a^(0+256)+1),w
 11265  0075' 0081'              	movwf	(___fladd@b^(0+256)+1)
 11266  0076'                    l4553:
 11267  0076' 0800'              	movf	___fladd@grs^(0+256),w
 11268  0077' 0081'              	movwf	(___fladd@a^(0+256)+1)
 11269  0078'                    l4555:
 11270  0078' 0802'              	movf	(___fladd@b^(0+256)+2),w
 11271  0079' 0080'              	movwf	___fladd@grs^(0+256)
 11272  007A'                    l4557:
 11273  007A' 0802'              	movf	(___fladd@a^(0+256)+2),w
 11274  007B' 0082'              	movwf	(___fladd@b^(0+256)+2)
 11275  007C'                    l4559:
 11276  007C' 0800'              	movf	___fladd@grs^(0+256),w
 11277  007D' 0082'              	movwf	(___fladd@a^(0+256)+2)
 11278  007E'                    l4561:
 11279  007E' 0803'              	movf	(___fladd@b^(0+256)+3),w
 11280  007F' 0080'              	movwf	___fladd@grs^(0+256)
 11281  0080'                    l4563:
 11282  0080' 0803'              	movf	(___fladd@a^(0+256)+3),w
 11283  0081' 0083'              	movwf	(___fladd@b^(0+256)+3)
 11284  0082'                    l4565:
 11285  0082' 0800'              	movf	___fladd@grs^(0+256),w
 11286  0083' 0083'              	movwf	(___fladd@a^(0+256)+3)
 11287  0084'                    l4567:
 11288  0084' 0180'              	clrf	___fladd@grs^(0+256)
 11289  0085'                    l4569:
 11290  0085' 0800'              	movf	___fladd@aexp^(0+256),w
 11291  0086' 0023               	movlb	3	; select bank3
 11292  0087' 0080'              	movwf	??___fladd^(0+384)
 11293  0088' 0181'              	clrf	(??___fladd^(0+384)+1)
 11294  0089' 0800'              	movf	(??___fladd+1)^(0+384),w
 11295  008A' 0081'              	movwf	((??___fladd+2)^(0+384)+1)
 11296  008B' 0022               	movlb	2	; select bank2
 11297  008C' 0800'              	movf	___fladd@bexp^(0+256),w
 11298  008D' 0023               	movlb	3	; select bank3
 11299  008E' 0200'              	subwf	??___fladd^(0+384),w
 11300  008F' 0080'              	movwf	(??___fladd+2)^(0+384)
 11301  0090' 1C03               	skipc
 11302  0091' 0381'              	decf	((??___fladd+2)^(0+384)+1),f
 11303  0092' 0800'              	movf	(??___fladd+3)^(0+384),w
 11304  0093' 3A80               	xorlw	128
 11305  0094' 0080'              	movwf	(??___fladd+4)^(0+384)
 11306  0095' 3080               	movlw	128
 11307  0096' 0200'              	subwf	(??___fladd+4)^(0+384),w
 11308  0097' 1D03               	skipz
 11309  0098' 2800'              	goto	u3885
 11310  0099' 301A               	movlw	26
 11311  009A' 0200'              	subwf	(??___fladd+2)^(0+384),w
 11312  009B'                    u3885:
 11313  009B' 1C03               	skipc
 11314  009C' 2800'              	goto	u3881
 11315  009D' 2800'              	goto	u3880
 11316  009E'                    u3881:
 11317  009E' 2800'              	goto	l4585
 11318  009F'                    u3880:
 11319  009F'                    l4571:
 11320  009F' 0022               	movlb	2	; select bank2
 11321  00A0' 0800'              	movf	(___fladd@b+3)^(0+256),w
 11322  00A1' 0400'              	iorwf	(___fladd@b+2)^(0+256),w
 11323  00A2' 0400'              	iorwf	(___fladd@b+1)^(0+256),w
 11324  00A3' 0400'              	iorwf	___fladd@b^(0+256),w
 11325  00A4' 1D03               	skipz
 11326  00A5' 2800'              	goto	u3891
 11327  00A6' 2800'              	goto	u3890
 11328  00A7'                    u3891:
 11329  00A7' 3001               	movlw	1
 11330  00A8' 2800'              	goto	u3900
 11331  00A9'                    u3890:
 11332  00A9' 3000               	movlw	0
 11333  00AA'                    u3900:
 11334  00AA' 0080'              	movwf	___fladd@grs^(0+256)
 11335  00AB' 3000               	movlw	0
 11336  00AC' 0080'              	movwf	(___fladd@b+3)^(0+256)
 11337  00AD' 3000               	movlw	0
 11338  00AE' 0080'              	movwf	(___fladd@b+2)^(0+256)
 11339  00AF' 3000               	movlw	0
 11340  00B0' 0080'              	movwf	(___fladd@b+1)^(0+256)
 11341  00B1' 3000               	movlw	0
 11342  00B2' 0080'              	movwf	___fladd@b^(0+256)
 11343  00B3' 0800'              	movf	___fladd@aexp^(0+256),w
 11344  00B4' 0080'              	movwf	___fladd@bexp^(0+256)
 11345  00B5' 2800'              	goto	l1351
 11346  00B6'                    l1353:
 11347  00B6' 1C00'              	btfss	___fladd@grs^(0+256),0
 11348  00B7' 2800'              	goto	u3911
 11349  00B8' 2800'              	goto	u3910
 11350  00B9'                    u3911:
 11351  00B9' 2800'              	goto	l4575
 11352  00BA'                    u3910:
 11353  00BA'                    l4573:
 11354  00BA' 3600'              	lsrf	___fladd@grs^(0+256),w
 11355  00BB' 3801               	iorlw	1
 11356  00BC' 0080'              	movwf	___fladd@grs^(0+256)
 11357  00BD' 2800'              	goto	l4577
 11358  00BE'                    l4575:
 11359  00BE' 1003               	clrc
 11360  00BF' 0C80'              	rrf	___fladd@grs^(0+256),f
 11361  00C0'                    l4577:
 11362  00C0' 1C00'              	btfss	___fladd@b^(0+256),0
 11363  00C1' 2800'              	goto	u3921
 11364  00C2' 2800'              	goto	u3920
 11365  00C3'                    u3921:
 11366  00C3' 2800'              	goto	l4581
 11367  00C4'                    u3920:
 11368  00C4'                    l4579:
 11369  00C4' 1780'              	bsf	___fladd@grs^(0+256),7
 11370  00C5'                    l4581:
 11371  00C5' 3001               	movlw	1
 11372  00C6' 0023               	movlb	3	; select bank3
 11373  00C7' 0080'              	movwf	??___fladd^(0+384)
 11374  00C8'                    u3935:
 11375  00C8' 0022               	movlb	2	; select bank2
 11376  00C9' 3780'              	asrf	(___fladd@b+3)^(0+256),f
 11377  00CA' 0C80'              	rrf	(___fladd@b+2)^(0+256),f
 11378  00CB' 0C80'              	rrf	(___fladd@b+1)^(0+256),f
 11379  00CC' 0C80'              	rrf	___fladd@b^(0+256),f
 11380  00CD' 0023               	movlb	3	; select bank3
 11381  00CE' 0B80'              	decfsz	(??___fladd^(0+384))& (0+127),f
 11382  00CF' 2800'              	goto	u3935
 11383  00D0'                    l4583:
 11384  00D0' 3001               	movlw	1
 11385  00D1' 0080'              	movwf	??___fladd^(0+384)
 11386  00D2' 0800'              	movf	??___fladd^(0+384),w
 11387  00D3' 0022               	movlb	2	; select bank2
 11388  00D4' 0780'              	addwf	___fladd@bexp^(0+256),f
 11389  00D5'                    l4585:
 11390  00D5' 0022               	movlb	2	; select bank2
 11391  00D6' 0800'              	movf	___fladd@aexp^(0+256),w
 11392  00D7' 0200'              	subwf	___fladd@bexp^(0+256),w
 11393  00D8' 1C03               	skipc
 11394  00D9' 2800'              	goto	u3941
 11395  00DA' 2800'              	goto	u3940
 11396  00DB'                    u3941:
 11397  00DB' 2800'              	goto	l1353
 11398  00DC'                    u3940:
 11399  00DC'                    l1351:
 11400  00DC' 1B00'              	btfsc	___fladd@signs^(0+256),6
 11401  00DD' 2800'              	goto	u3951
 11402  00DE' 2800'              	goto	u3950
 11403  00DF'                    u3951:
 11404  00DF' 2800'              	goto	l4611
 11405  00E0'                    u3950:
 11406  00E0'                    l4587:
 11407  00E0' 0800'              	movf	___fladd@bexp^(0+256),w
 11408  00E1' 1D03               	btfss	3,2
 11409  00E2' 2800'              	goto	u3961
 11410  00E3' 2800'              	goto	u3960
 11411  00E4'                    u3961:
 11412  00E4' 2800'              	goto	l4593
 11413  00E5'                    u3960:
 11414  00E5'                    l4589:
 11415  00E5' 3000               	movlw	0
 11416  00E6' 0080'              	movwf	(?___fladd+3)^(0+256)
 11417  00E7' 3000               	movlw	0
 11418  00E8' 0080'              	movwf	(?___fladd+2)^(0+256)
 11419  00E9' 3000               	movlw	0
 11420  00EA' 0080'              	movwf	(?___fladd+1)^(0+256)
 11421  00EB' 3000               	movlw	0
 11422  00EC' 0080'              	movwf	?___fladd^(0+256)
 11423  00ED' 2800'              	goto	l1360
 11424  00EE'                    l4593:
 11425  00EE' 0800'              	movf	___fladd@a^(0+256),w
 11426  00EF' 0780'              	addwf	___fladd@b^(0+256),f
 11427  00F0' 0800'              	movf	(___fladd@a+1)^(0+256),w
 11428  00F1' 3D80'              	addwfc	(___fladd@b+1)^(0+256),f
 11429  00F2' 0800'              	movf	(___fladd@a+2)^(0+256),w
 11430  00F3' 3D80'              	addwfc	(___fladd@b+2)^(0+256),f
 11431  00F4' 0800'              	movf	(___fladd@a+3)^(0+256),w
 11432  00F5' 3D80'              	addwfc	(___fladd@b+3)^(0+256),f
 11433  00F6'                    l4595:
 11434  00F6' 1C00'              	btfss	(___fladd@b+3)^(0+256),0
 11435  00F7' 2800'              	goto	u3971
 11436  00F8' 2800'              	goto	u3970
 11437  00F9'                    u3971:
 11438  00F9' 2800'              	goto	l4645
 11439  00FA'                    u3970:
 11440  00FA'                    l4597:
 11441  00FA' 1C00'              	btfss	___fladd@grs^(0+256),0
 11442  00FB' 2800'              	goto	u3981
 11443  00FC' 2800'              	goto	u3980
 11444  00FD'                    u3981:
 11445  00FD' 2800'              	goto	l4601
 11446  00FE'                    u3980:
 11447  00FE'                    l4599:
 11448  00FE' 3600'              	lsrf	___fladd@grs^(0+256),w
 11449  00FF' 3801               	iorlw	1
 11450  0100' 0080'              	movwf	___fladd@grs^(0+256)
 11451  0101' 2800'              	goto	l4603
 11452  0102'                    l4601:
 11453  0102' 1003               	clrc
 11454  0103' 0C80'              	rrf	___fladd@grs^(0+256),f
 11455  0104'                    l4603:
 11456  0104' 1C00'              	btfss	___fladd@b^(0+256),0
 11457  0105' 2800'              	goto	u3991
 11458  0106' 2800'              	goto	u3990
 11459  0107'                    u3991:
 11460  0107' 2800'              	goto	l4607
 11461  0108'                    u3990:
 11462  0108'                    l4605:
 11463  0108' 1780'              	bsf	___fladd@grs^(0+256),7
 11464  0109'                    l4607:
 11465  0109' 3001               	movlw	1
 11466  010A' 0023               	movlb	3	; select bank3
 11467  010B' 0080'              	movwf	??___fladd^(0+384)
 11468  010C'                    u4005:
 11469  010C' 0022               	movlb	2	; select bank2
 11470  010D' 3780'              	asrf	(___fladd@b+3)^(0+256),f
 11471  010E' 0C80'              	rrf	(___fladd@b+2)^(0+256),f
 11472  010F' 0C80'              	rrf	(___fladd@b+1)^(0+256),f
 11473  0110' 0C80'              	rrf	___fladd@b^(0+256),f
 11474  0111' 0023               	movlb	3	; select bank3
 11475  0112' 0B80'              	decfsz	(??___fladd^(0+384))& (0+127),f
 11476  0113' 2800'              	goto	u4005
 11477  0114'                    l4609:
 11478  0114' 3001               	movlw	1
 11479  0115' 0080'              	movwf	??___fladd^(0+384)
 11480  0116' 0800'              	movf	??___fladd^(0+384),w
 11481  0117' 0022               	movlb	2	; select bank2
 11482  0118' 0780'              	addwf	___fladd@bexp^(0+256),f
 11483  0119' 2800'              	goto	l4645
 11484  011A'                    l4611:
 11485  011A' 0800'              	movf	(___fladd@b+3)^(0+256),w
 11486  011B' 3A80               	xorlw	128
 11487  011C' 0023               	movlb	3	; select bank3
 11488  011D' 0080'              	movwf	??___fladd^(0+384)
 11489  011E' 0022               	movlb	2	; select bank2
 11490  011F' 0800'              	movf	(___fladd@a+3)^(0+256),w
 11491  0120' 3A80               	xorlw	128
 11492  0121' 0023               	movlb	3	; select bank3
 11493  0122' 0200'              	subwf	??___fladd^(0+384),w
 11494  0123' 0022               	movlb	2	; select bank2
 11495  0124' 1D03               	skipz
 11496  0125' 2800'              	goto	u4013
 11497  0126' 0800'              	movf	(___fladd@a+2)^(0+256),w
 11498  0127' 0200'              	subwf	(___fladd@b+2)^(0+256),w
 11499  0128' 1D03               	skipz
 11500  0129' 2800'              	goto	u4013
 11501  012A' 0800'              	movf	(___fladd@a+1)^(0+256),w
 11502  012B' 0200'              	subwf	(___fladd@b+1)^(0+256),w
 11503  012C' 1D03               	skipz
 11504  012D' 2800'              	goto	u4013
 11505  012E' 0800'              	movf	___fladd@a^(0+256),w
 11506  012F' 0200'              	subwf	___fladd@b^(0+256),w
 11507  0130'                    u4013:
 11508  0130' 1803               	skipnc
 11509  0131' 2800'              	goto	u4011
 11510  0132' 2800'              	goto	u4010
 11511  0133'                    u4011:
 11512  0133' 2800'              	goto	l4621
 11513  0134'                    u4010:
 11514  0134'                    l4613:
 11515  0134' 30FF               	movlw	255
 11516  0135' 0023               	movlb	3	; select bank3
 11517  0136' 0080'              	movwf	??___fladd^(0+384)
 11518  0137' 30FF               	movlw	255
 11519  0138' 0081'              	movwf	(??___fladd^(0+384)+1)
 11520  0139' 30FF               	movlw	255
 11521  013A' 0082'              	movwf	(??___fladd^(0+384)+2)
 11522  013B' 30FF               	movlw	255
 11523  013C' 0083'              	movwf	(??___fladd^(0+384)+3)
 11524  013D' 0022               	movlb	2	; select bank2
 11525  013E' 0800'              	movf	___fladd@b^(0+256),w
 11526  013F' 0200'              	subwf	___fladd@a^(0+256),w
 11527  0140' 0023               	movlb	3	; select bank3
 11528  0141' 0080'              	movwf	(??___fladd+4)^(0+384)
 11529  0142' 0022               	movlb	2	; select bank2
 11530  0143' 0800'              	movf	(___fladd@b+1)^(0+256),w
 11531  0144' 3B00'              	subwfb	(___fladd@a+1)^(0+256),w
 11532  0145' 0023               	movlb	3	; select bank3
 11533  0146' 0081'              	movwf	((??___fladd+4)^(0+384)+1)
 11534  0147' 0022               	movlb	2	; select bank2
 11535  0148' 0800'              	movf	(___fladd@b+2)^(0+256),w
 11536  0149' 3B00'              	subwfb	(___fladd@a+2)^(0+256),w
 11537  014A' 0023               	movlb	3	; select bank3
 11538  014B' 0082'              	movwf	((??___fladd+4)^(0+384)+2)
 11539  014C' 0022               	movlb	2	; select bank2
 11540  014D' 0800'              	movf	(___fladd@b+3)^(0+256),w
 11541  014E' 3B00'              	subwfb	(___fladd@a+3)^(0+256),w
 11542  014F' 0023               	movlb	3	; select bank3
 11543  0150' 0083'              	movwf	((??___fladd+4)^(0+384)+3)
 11544  0151' 0800'              	movf	(??___fladd+4)^(0+384),w
 11545  0152' 0780'              	addwf	??___fladd^(0+384),f
 11546  0153' 0800'              	movf	(??___fladd+5)^(0+384),w
 11547  0154' 3D81'              	addwfc	(??___fladd^(0+384)+1),f
 11548  0155' 0800'              	movf	(??___fladd+6)^(0+384),w
 11549  0156' 3D82'              	addwfc	(??___fladd^(0+384)+2),f
 11550  0157' 0800'              	movf	(??___fladd+7)^(0+384),w
 11551  0158' 3D83'              	addwfc	(??___fladd^(0+384)+3),f
 11552  0159' 0800'              	movf	(??___fladd+3)^(0+384),w
 11553  015A' 0022               	movlb	2	; select bank2
 11554  015B' 0080'              	movwf	(___fladd@b+3)^(0+256)
 11555  015C' 0023               	movlb	3	; select bank3
 11556  015D' 0800'              	movf	(??___fladd+2)^(0+384),w
 11557  015E' 0022               	movlb	2	; select bank2
 11558  015F' 0080'              	movwf	(___fladd@b+2)^(0+256)
 11559  0160' 0023               	movlb	3	; select bank3
 11560  0161' 0800'              	movf	(??___fladd+1)^(0+384),w
 11561  0162' 0022               	movlb	2	; select bank2
 11562  0163' 0080'              	movwf	(___fladd@b+1)^(0+256)
 11563  0164' 0023               	movlb	3	; select bank3
 11564  0165' 0800'              	movf	??___fladd^(0+384),w
 11565  0166' 0022               	movlb	2	; select bank2
 11566  0167' 0080'              	movwf	___fladd@b^(0+256)
 11567  0168'                    l4615:
 11568  0168' 3080               	movlw	128
 11569  0169' 0023               	movlb	3	; select bank3
 11570  016A' 0080'              	movwf	??___fladd^(0+384)
 11571  016B' 0800'              	movf	??___fladd^(0+384),w
 11572  016C' 0022               	movlb	2	; select bank2
 11573  016D' 0680'              	xorwf	___fladd@signs^(0+256),f
 11574  016E' 0980'              	comf	___fladd@grs^(0+256),f
 11575  016F' 0A80'              	incf	___fladd@grs^(0+256),f
 11576  0170'                    l4617:
 11577  0170' 0800'              	movf	___fladd@grs^(0+256),w
 11578  0171' 1D03               	btfss	3,2
 11579  0172' 2800'              	goto	u4021
 11580  0173' 2800'              	goto	u4020
 11581  0174'                    u4021:
 11582  0174' 2800'              	goto	l1368
 11583  0175'                    u4020:
 11584  0175'                    l4619:
 11585  0175' 3001               	movlw	1
 11586  0176' 0780'              	addwf	___fladd@b^(0+256),f
 11587  0177' 3000               	movlw	0
 11588  0178' 3D80'              	addwfc	(___fladd@b+1)^(0+256),f
 11589  0179' 3000               	movlw	0
 11590  017A' 3D80'              	addwfc	(___fladd@b+2)^(0+256),f
 11591  017B' 3000               	movlw	0
 11592  017C' 3D80'              	addwfc	(___fladd@b+3)^(0+256),f
 11593  017D' 2800'              	goto	l1368
 11594  017E'                    l4621:
 11595  017E' 0800'              	movf	___fladd@a^(0+256),w
 11596  017F' 0280'              	subwf	___fladd@b^(0+256),f
 11597  0180' 0800'              	movf	(___fladd@a+1)^(0+256),w
 11598  0181' 3B80'              	subwfb	(___fladd@b+1)^(0+256),f
 11599  0182' 0800'              	movf	(___fladd@a+2)^(0+256),w
 11600  0183' 3B80'              	subwfb	(___fladd@b+2)^(0+256),f
 11601  0184' 0800'              	movf	(___fladd@a+3)^(0+256),w
 11602  0185' 3B80'              	subwfb	(___fladd@b+3)^(0+256),f
 11603  0186'                    l1368:
 11604  0186' 0800'              	movf	(___fladd@b+3)^(0+256),w
 11605  0187' 0400'              	iorwf	(___fladd@b+2)^(0+256),w
 11606  0188' 0400'              	iorwf	(___fladd@b+1)^(0+256),w
 11607  0189' 0400'              	iorwf	___fladd@b^(0+256),w
 11608  018A' 1D03               	skipz
 11609  018B' 2800'              	goto	u4031
 11610  018C' 2800'              	goto	u4030
 11611  018D'                    u4031:
 11612  018D' 2800'              	goto	l4643
 11613  018E'                    u4030:
 11614  018E'                    l4623:
 11615  018E' 0800'              	movf	___fladd@grs^(0+256),w
 11616  018F' 1D03               	btfss	3,2
 11617  0190' 2800'              	goto	u4041
 11618  0191' 2800'              	goto	u4040
 11619  0192'                    u4041:
 11620  0192' 2800'              	goto	l4643
 11621  0193'                    u4040:
 11622  0193'                    l4625:
 11623  0193' 3000               	movlw	0
 11624  0194' 0080'              	movwf	(?___fladd+3)^(0+256)
 11625  0195' 3000               	movlw	0
 11626  0196' 0080'              	movwf	(?___fladd+2)^(0+256)
 11627  0197' 3000               	movlw	0
 11628  0198' 0080'              	movwf	(?___fladd+1)^(0+256)
 11629  0199' 3000               	movlw	0
 11630  019A' 0080'              	movwf	?___fladd^(0+256)
 11631  019B' 2800'              	goto	l1360
 11632  019C'                    l4629:
 11633  019C' 3001               	movlw	1
 11634  019D'                    u4055:
 11635  019D' 3580'              	lslf	___fladd@b^(0+256),f
 11636  019E' 0D80'              	rlf	(___fladd@b+1)^(0+256),f
 11637  019F' 0D80'              	rlf	(___fladd@b+2)^(0+256),f
 11638  01A0' 0D80'              	rlf	(___fladd@b+3)^(0+256),f
 11639  01A1' 0B89               	decfsz	9,f
 11640  01A2' 2800'              	goto	u4055
 11641  01A3'                    l4631:
 11642  01A3' 1F80'              	btfss	___fladd@grs^(0+256),7
 11643  01A4' 2800'              	goto	u4061
 11644  01A5' 2800'              	goto	u4060
 11645  01A6'                    u4061:
 11646  01A6' 2800'              	goto	l1372
 11647  01A7'                    u4060:
 11648  01A7'                    l4633:
 11649  01A7' 1400'              	bsf	___fladd@b^(0+256),0
 11650  01A8'                    l1372:
 11651  01A8' 1C00'              	btfss	___fladd@grs^(0+256),0
 11652  01A9' 2800'              	goto	u4071
 11653  01AA' 2800'              	goto	u4070
 11654  01AB'                    u4071:
 11655  01AB' 2800'              	goto	l4637
 11656  01AC'                    u4070:
 11657  01AC'                    l4635:
 11658  01AC' 1403               	setc
 11659  01AD' 0D80'              	rlf	___fladd@grs^(0+256),f
 11660  01AE' 2800'              	goto	l4639
 11661  01AF'                    l4637:
 11662  01AF' 1003               	clrc
 11663  01B0' 0D80'              	rlf	___fladd@grs^(0+256),f
 11664  01B1'                    l4639:
 11665  01B1' 0800'              	movf	___fladd@bexp^(0+256),w
 11666  01B2' 1903               	btfsc	3,2
 11667  01B3' 2800'              	goto	u4081
 11668  01B4' 2800'              	goto	u4080
 11669  01B5'                    u4081:
 11670  01B5' 2800'              	goto	l4643
 11671  01B6'                    u4080:
 11672  01B6'                    l4641:
 11673  01B6' 3001               	movlw	1
 11674  01B7' 0280'              	subwf	___fladd@bexp^(0+256),f
 11675  01B8'                    l4643:
 11676  01B8' 1F80'              	btfss	(___fladd@b+2)^(0+256),7
 11677  01B9' 2800'              	goto	u4091
 11678  01BA' 2800'              	goto	u4090
 11679  01BB'                    u4091:
 11680  01BB' 2800'              	goto	l4629
 11681  01BC'                    u4090:
 11682  01BC'                    l4645:
 11683  01BC' 0180'              	clrf	___fladd@aexp^(0+256)
 11684  01BD'                    l4647:
 11685  01BD' 1F80'              	btfss	___fladd@grs^(0+256),7
 11686  01BE' 2800'              	goto	u4101
 11687  01BF' 2800'              	goto	u4100
 11688  01C0'                    u4101:
 11689  01C0' 2800'              	goto	l4655
 11690  01C1'                    u4100:
 11691  01C1'                    l4649:
 11692  01C1' 0800'              	movf	___fladd@grs^(0+256),w
 11693  01C2' 397F               	andlw	127
 11694  01C3' 1903               	btfsc	3,2
 11695  01C4' 2800'              	goto	u4111
 11696  01C5' 2800'              	goto	u4110
 11697  01C6'                    u4111:
 11698  01C6' 2800'              	goto	l1378
 11699  01C7'                    u4110:
 11700  01C7'                    l4651:
 11701  01C7' 0180'              	clrf	___fladd@aexp^(0+256)
 11702  01C8' 0A80'              	incf	___fladd@aexp^(0+256),f
 11703  01C9' 2800'              	goto	l4655
 11704  01CA'                    l1378:
 11705  01CA' 1C00'              	btfss	___fladd@b^(0+256),0
 11706  01CB' 2800'              	goto	u4121
 11707  01CC' 2800'              	goto	u4120
 11708  01CD'                    u4121:
 11709  01CD' 2800'              	goto	l4655
 11710  01CE'                    u4120:
 11711  01CE' 2800'              	goto	l4651
 11712  01CF'                    l4655:
 11713  01CF' 0800'              	movf	___fladd@aexp^(0+256),w
 11714  01D0' 1903               	btfsc	3,2
 11715  01D1' 2800'              	goto	u4131
 11716  01D2' 2800'              	goto	u4130
 11717  01D3'                    u4131:
 11718  01D3' 2800'              	goto	l1381
 11719  01D4'                    u4130:
 11720  01D4'                    l4657:
 11721  01D4' 3001               	movlw	1
 11722  01D5' 0780'              	addwf	___fladd@b^(0+256),f
 11723  01D6' 3000               	movlw	0
 11724  01D7' 3D80'              	addwfc	(___fladd@b+1)^(0+256),f
 11725  01D8' 3000               	movlw	0
 11726  01D9' 3D80'              	addwfc	(___fladd@b+2)^(0+256),f
 11727  01DA' 3000               	movlw	0
 11728  01DB' 3D80'              	addwfc	(___fladd@b+3)^(0+256),f
 11729  01DC'                    l4659:
 11730  01DC' 1C00'              	btfss	(___fladd@b+3)^(0+256),0
 11731  01DD' 2800'              	goto	u4141
 11732  01DE' 2800'              	goto	u4140
 11733  01DF'                    u4141:
 11734  01DF' 2800'              	goto	l1381
 11735  01E0'                    u4140:
 11736  01E0'                    l4661:
 11737  01E0' 0800'              	movf	___fladd@b^(0+256),w
 11738  01E1' 0023               	movlb	3	; select bank3
 11739  01E2' 0080'              	movwf	??___fladd^(0+384)
 11740  01E3' 0022               	movlb	2	; select bank2
 11741  01E4' 0800'              	movf	(___fladd@b+1)^(0+256),w
 11742  01E5' 0023               	movlb	3	; select bank3
 11743  01E6' 0081'              	movwf	(??___fladd^(0+384)+1)
 11744  01E7' 0022               	movlb	2	; select bank2
 11745  01E8' 0800'              	movf	(___fladd@b+2)^(0+256),w
 11746  01E9' 0023               	movlb	3	; select bank3
 11747  01EA' 0082'              	movwf	(??___fladd^(0+384)+2)
 11748  01EB' 0022               	movlb	2	; select bank2
 11749  01EC' 0800'              	movf	(___fladd@b+3)^(0+256),w
 11750  01ED' 0023               	movlb	3	; select bank3
 11751  01EE' 0083'              	movwf	(??___fladd^(0+384)+3)
 11752  01EF' 3001               	movlw	1
 11753  01F0' 0080'              	movwf	(??___fladd+4)^(0+384)
 11754  01F1'                    u4155:
 11755  01F1' 3783'              	asrf	(??___fladd^(0+384)+3),f
 11756  01F2' 0C82'              	rrf	(??___fladd^(0+384)+2),f
 11757  01F3' 0C81'              	rrf	(??___fladd^(0+384)+1),f
 11758  01F4' 0C80'              	rrf	??___fladd^(0+384),f
 11759  01F5'                    u4150:
 11760  01F5' 0B80'              	decfsz	(??___fladd+4)^(0+384),f
 11761  01F6' 2800'              	goto	u4155
 11762  01F7' 0800'              	movf	(??___fladd+3)^(0+384),w
 11763  01F8' 0022               	movlb	2	; select bank2
 11764  01F9' 0080'              	movwf	(___fladd@b+3)^(0+256)
 11765  01FA' 0023               	movlb	3	; select bank3
 11766  01FB' 0800'              	movf	(??___fladd+2)^(0+384),w
 11767  01FC' 0022               	movlb	2	; select bank2
 11768  01FD' 0080'              	movwf	(___fladd@b+2)^(0+256)
 11769  01FE' 0023               	movlb	3	; select bank3
 11770  01FF' 0800'              	movf	(??___fladd+1)^(0+384),w
 11771  0200' 0022               	movlb	2	; select bank2
 11772  0201' 0080'              	movwf	(___fladd@b+1)^(0+256)
 11773  0202' 0023               	movlb	3	; select bank3
 11774  0203' 0800'              	movf	??___fladd^(0+384),w
 11775  0204' 0022               	movlb	2	; select bank2
 11776  0205' 0080'              	movwf	___fladd@b^(0+256)
 11777  0206' 0A00'              	incf	___fladd@bexp^(0+256),w
 11778  0207' 1903               	btfsc	3,2
 11779  0208' 2800'              	goto	u4161
 11780  0209' 2800'              	goto	u4160
 11781  020A'                    u4161:
 11782  020A' 2800'              	goto	l1381
 11783  020B'                    u4160:
 11784  020B'                    l4663:
 11785  020B' 3001               	movlw	1
 11786  020C' 0023               	movlb	3	; select bank3
 11787  020D' 0080'              	movwf	??___fladd^(0+384)
 11788  020E' 0800'              	movf	??___fladd^(0+384),w
 11789  020F' 0022               	movlb	2	; select bank2
 11790  0210' 0780'              	addwf	___fladd@bexp^(0+256),f
 11791  0211'                    l1381:
 11792  0211' 0A00'              	incf	___fladd@bexp^(0+256),w
 11793  0212' 1903               	btfsc	3,2
 11794  0213' 2800'              	goto	u4171
 11795  0214' 2800'              	goto	u4170
 11796  0215'                    u4171:
 11797  0215' 2800'              	goto	l4667
 11798  0216'                    u4170:
 11799  0216'                    l4665:
 11800  0216' 0800'              	movf	___fladd@bexp^(0+256),w
 11801  0217' 1D03               	btfss	3,2
 11802  0218' 2800'              	goto	u4181
 11803  0219' 2800'              	goto	u4180
 11804  021A'                    u4181:
 11805  021A' 2800'              	goto	l4673
 11806  021B'                    u4180:
 11807  021B'                    l4667:
 11808  021B' 3000               	movlw	0
 11809  021C' 0080'              	movwf	(___fladd@b+3)^(0+256)
 11810  021D' 3000               	movlw	0
 11811  021E' 0080'              	movwf	(___fladd@b+2)^(0+256)
 11812  021F' 3000               	movlw	0
 11813  0220' 0080'              	movwf	(___fladd@b+1)^(0+256)
 11814  0221' 3000               	movlw	0
 11815  0222' 0080'              	movwf	___fladd@b^(0+256)
 11816  0223'                    l4669:
 11817  0223' 0800'              	movf	___fladd@bexp^(0+256),w
 11818  0224' 1D03               	btfss	3,2
 11819  0225' 2800'              	goto	u4191
 11820  0226' 2800'              	goto	u4190
 11821  0227'                    u4191:
 11822  0227' 2800'              	goto	l4673
 11823  0228'                    u4190:
 11824  0228'                    l4671:
 11825  0228' 0180'              	clrf	___fladd@signs^(0+256)
 11826  0229'                    l4673:
 11827  0229' 1C00'              	btfss	___fladd@bexp^(0+256),0
 11828  022A' 2800'              	goto	u4201
 11829  022B' 2800'              	goto	u4200
 11830  022C'                    u4201:
 11831  022C' 2800'              	goto	l4677
 11832  022D'                    u4200:
 11833  022D'                    l4675:
 11834  022D' 1782'              	bsf	(___fladd@b^(0+256)+2),7
 11835  022E' 2800'              	goto	l1389
 11836  022F'                    l4677:
 11837  022F' 307F               	movlw	127
 11838  0230' 0023               	movlb	3	; select bank3
 11839  0231' 0080'              	movwf	??___fladd^(0+384)
 11840  0232' 0800'              	movf	??___fladd^(0+384),w
 11841  0233' 0022               	movlb	2	; select bank2
 11842  0234' 0582'              	andwf	(___fladd@b^(0+256)+2),f
 11843  0235'                    l1389:
 11844  0235' 3600'              	lsrf	___fladd@bexp^(0+256),w
 11845  0236' 0083'              	movwf	(___fladd@b^(0+256)+3)
 11846  0237'                    l4679:
 11847  0237' 1F80'              	btfss	___fladd@signs^(0+256),7
 11848  0238' 2800'              	goto	u4211
 11849  0239' 2800'              	goto	u4210
 11850  023A'                    u4211:
 11851  023A' 2800'              	goto	l1390
 11852  023B'                    u4210:
 11853  023B'                    l4681:
 11854  023B' 1783'              	bsf	(___fladd@b^(0+256)+3),7
 11855  023C'                    l1390:
 11856  023C'                    l1360:
 11857  023C' 0008               	return
 11858  023D'                    __end_of___fladd:
 11859                           
 11860                           	psect	intentry
 11861  0000'                    __pintentry:	
 11862 ;; *************** function _ISR *****************
 11863 ;; Defined at:
 11864 ;;		line 46 in file "main.c"
 11865 ;; Parameters:    Size  Location     Type
 11866 ;;		None
 11867 ;; Auto vars:     Size  Location     Type
 11868 ;;		None
 11869 ;; Return value:  Size  Location     Type
 11870 ;;                  1    wreg      void 
 11871 ;; Registers used:
 11872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11873 ;; Tracked objects:
 11874 ;;		On entry : 0/0
 11875 ;;		On exit  : 0/0
 11876 ;;		Unchanged: 0/0
 11877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11880 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11881 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11882 ;;Total ram usage:        2 bytes
 11883 ;; Hardware stack levels used: 1
 11884 ;; Hardware stack levels required when called: 4
 11885 ;; This function calls:
 11886 ;;		_UART_send_string
 11887 ;;		_abs
 11888 ;;		_calculate_avg
 11889 ;;		_command_interpreter
 11890 ;;		_control_loop
 11891 ;;		_read_ADC
 11892 ;;		_timing
 11893 ;;		i1_UART_send_byte
 11894 ;; This function is called by:
 11895 ;;		Interrupt level 1
 11896 ;; This function uses a non-reentrant model
 11897 ;;
 11898                           
 11899  0000'                    _ISR:
 11900                           
 11901                           ;incstack = 0
 11902  0000' 147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11903                           
 11904                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11905  0001' 3180'              	pagesel	$
 11906  0002'                    i1l7489:
 11907                           
 11908                           ;main.c: 48:     if(RCIF)
 11909  0002' 0020               	movlb	0	; select bank0
 11910  0003' 1E91               	btfss	17,5	;volatile
 11911  0004' 2800'              	goto	u737_21
 11912  0005' 2800'              	goto	u737_20
 11913  0006'                    u737_21:
 11914  0006' 2800'              	goto	i1l7501
 11915  0007'                    u737_20:
 11916  0007'                    i1l7491:
 11917                           
 11918                           ;main.c: 49:     {;main.c: 50:         RCIF = 0;
 11919  0007' 1291               	bcf	17,5	;volatile
 11920                           
 11921                           ;main.c: 51:         if(RC1STAbits.OERR)
 11922  0008' 0023               	movlb	3	; select bank3
 11923  0009' 1C9D               	btfss	29,1	;volatile
 11924  000A' 2800'              	goto	u738_21
 11925  000B' 2800'              	goto	u738_20
 11926  000C'                    u738_21:
 11927  000C' 2800'              	goto	i1l7499
 11928  000D'                    u738_20:
 11929  000D'                    i1l7493:
 11930                           
 11931                           ;main.c: 52:         {;main.c: 53:             RC1STAbits.CREN = 0;
 11932  000D' 121D               	bcf	29,4	;volatile
 11933                           
 11934                           ;main.c: 54:             RC1STAbits.CREN = 1;
 11935  000E' 161D               	bsf	29,4	;volatile
 11936  000F'                    i1l7495:
 11937                           
 11938                           ;main.c: 56:             UART_send_string((char*)"OERR_ERROR");
 11939  000F' 3000'              	movlw	low (STR_1| (0+32768))
 11940  0010' 0081'              	movwf	UART_send_string@st_pt
 11941  0011' 3000'              	movlw	high (STR_1| (0+32768))
 11942  0012' 0082'              	movwf	UART_send_string@st_pt+1
 11943  0013' 3180' 2000' 3180'  	fcall	_UART_send_string
 11944  0016'                    i1l7497:
 11945                           
 11946                           ;main.c: 57:             state = IDLE;
 11947  0016' 0023               	movlb	3	; select bank3
 11948  0017' 0180'              	clrf	_state^(0+384)
 11949  0018' 0A80'              	incf	_state^(0+384),f
 11950                           
 11951                           ;main.c: 58:         }
 11952  0019' 2800'              	goto	i1l7501
 11953  001A'                    i1l7499:
 11954                           
 11955                           ;main.c: 60:         {;main.c: 61:             UART_send_byte(command_interpreter());
 11956  001A' 3180' 2000' 3180'  	fcall	_command_interpreter
 11957  001D' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 11958  0020'                    i1l7501:
 11959                           
 11960                           ;main.c: 65:     if(TMR1IF)
 11961  0020' 0020               	movlb	0	; select bank0
 11962  0021' 1C11               	btfss	17,0	;volatile
 11963  0022' 2800'              	goto	u739_21
 11964  0023' 2800'              	goto	u739_20
 11965  0024'                    u739_21:
 11966  0024' 2800'              	goto	i1l664
 11967  0025'                    u739_20:
 11968  0025'                    i1l7503:
 11969                           
 11970                           ;main.c: 66:     {;main.c: 67:         TMR1H = 0xE1;
 11971  0025' 30E1               	movlw	225
 11972  0026' 0097               	movwf	23	;volatile
 11973                           
 11974                           ;main.c: 68:         TMR1L = 0x83;
 11975  0027' 3083               	movlw	131
 11976  0028' 0096               	movwf	22	;volatile
 11977  0029'                    i1l7505:
 11978                           
 11979                           ;main.c: 69:         TMR1IF = 0;
 11980  0029' 1011               	bcf	17,0	;volatile
 11981  002A'                    i1l7507:
 11982                           
 11983                           ;main.c: 70:         v = read_ADC(0b01010);
 11984  002A' 300A               	movlw	10
 11985  002B' 0080'              	movwf	read_ADC@channel
 11986  002C' 3000               	movlw	0
 11987  002D' 0081'              	movwf	read_ADC@channel+1
 11988  002E' 3180' 2000' 3180'  	fcall	_read_ADC
 11989  0031' 0801'              	movf	?_read_ADC+1,w
 11990  0032' 0021               	movlb	1	; select bank1
 11991  0033' 0080'              	movwf	(_v+1)^(0+128)
 11992  0034' 0800'              	movf	?_read_ADC,w
 11993  0035' 0080'              	movwf	_v^(0+128)
 11994  0036'                    i1l7509:
 11995                           
 11996                           ;main.c: 71:         i = read_ADC(0b01100);
 11997  0036' 300C               	movlw	12
 11998  0037' 0080'              	movwf	read_ADC@channel
 11999  0038' 3000               	movlw	0
 12000  0039' 0081'              	movwf	read_ADC@channel+1
 12001  003A' 3180' 2000' 3180'  	fcall	_read_ADC
 12002  003D' 0801'              	movf	?_read_ADC+1,w
 12003  003E' 0021               	movlb	1	; select bank1
 12004  003F' 0080'              	movwf	(_i+1)^(0+128)
 12005  0040' 0800'              	movf	?_read_ADC,w
 12006  0041' 0080'              	movwf	_i^(0+128)
 12007  0042'                    i1l7511:
 12008                           
 12009                           ;main.c: 72:         i = (uint16_t) (abs ( 2048 - (int)i ) );
 12010  0042' 3000               	movlw	0
 12011  0043' 0080'              	movwf	??_ISR^(0+128)
 12012  0044' 3008               	movlw	8
 12013  0045' 0081'              	movwf	(??_ISR^(0+128)+1)
 12014  0046' 0800'              	movf	_i^(0+128),w
 12015  0047' 0200'              	subwf	??_ISR^(0+128),w
 12016  0048' 0080'              	movwf	abs@a
 12017  0049' 0800'              	movf	(_i+1)^(0+128),w
 12018  004A' 3B00'              	subwfb	(??_ISR+1)^(0+128),w
 12019  004B' 0081'              	movwf	abs@a+1
 12020  004C' 3180' 2000' 3180'  	fcall	_abs
 12021  004F' 0801'              	movf	?_abs+1,w
 12022  0050' 0021               	movlb	1	; select bank1
 12023  0051' 0080'              	movwf	(_i+1)^(0+128)
 12024  0052' 0800'              	movf	?_abs,w
 12025  0053' 0080'              	movwf	_i^(0+128)
 12026  0054'                    i1l7513:
 12027                           
 12028                           ;main.c: 73:         if (conv) control_loop();
 12029  0054' 0800'              	movf	_conv^(0+128),w
 12030  0055' 1903               	btfsc	3,2
 12031  0056' 2800'              	goto	u740_21
 12032  0057' 2800'              	goto	u740_20
 12033  0058'                    u740_21:
 12034  0058' 2800'              	goto	i1l7517
 12035  0059'                    u740_20:
 12036  0059'                    i1l7515:
 12037  0059' 3180' 2000' 3180'  	fcall	_control_loop
 12038  005C' 2800'              	goto	i1l7519
 12039  005D'                    i1l7517:
 12040  005D' 3000               	movlw	0
 12041  005E' 0024               	movlb	4	; select bank4
 12042  005F' 0080'              	movwf	(_pidi+3)^(0+512)
 12043  0060' 3000               	movlw	0
 12044  0061' 0080'              	movwf	(_pidi+2)^(0+512)
 12045  0062' 3000               	movlw	0
 12046  0063' 0080'              	movwf	(_pidi+1)^(0+512)
 12047  0064' 3000               	movlw	0
 12048  0065' 0080'              	movwf	_pidi^(0+512)
 12049  0066'                    i1l7519:
 12050                           
 12051                           ;main.c: 75:         calculate_avg();
 12052  0066' 3180' 2000' 3180'  	fcall	_calculate_avg
 12053  0069'                    i1l7521:
 12054                           
 12055                           ;main.c: 76:         timing();
 12056  0069' 3180' 2000' 3180'  	fcall	_timing
 12057  006C'                    i1l7523:
 12058                           
 12059                           ;main.c: 77:         if (TMR1IF) UART_send_string((char*)"TIMING_ERROR");
 12060  006C' 0020               	movlb	0	; select bank0
 12061  006D' 1C11               	btfss	17,0	;volatile
 12062  006E' 2800'              	goto	u741_21
 12063  006F' 2800'              	goto	u741_20
 12064  0070'                    u741_21:
 12065  0070' 2800'              	goto	i1l664
 12066  0071'                    u741_20:
 12067  0071'                    i1l7525:
 12068  0071' 3000'              	movlw	low (STR_2| (0+32768))
 12069  0072' 0081'              	movwf	UART_send_string@st_pt
 12070  0073' 3000'              	movlw	high (STR_2| (0+32768))
 12071  0074' 0082'              	movwf	UART_send_string@st_pt+1
 12072  0075' 3180' 2000' 3180'  	fcall	_UART_send_string
 12073  0078'                    i1l664:
 12074  0078' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 12075  0079' 0009               	retfie
 12076  007A'                    __end_of_ISR:
 12077                           
 12078                           	psect	text30
 12079  0000'                    __ptext30:	
 12080 ;; *************** function _timing *****************
 12081 ;; Defined at:
 12082 ;;		line 367 in file "charger_discharger.c"
 12083 ;; Parameters:    Size  Location     Type
 12084 ;;		None
 12085 ;; Auto vars:     Size  Location     Type
 12086 ;;		None
 12087 ;; Return value:  Size  Location     Type
 12088 ;;                  1    wreg      void 
 12089 ;; Registers used:
 12090 ;;		wreg, status,2, status,0
 12091 ;; Tracked objects:
 12092 ;;		On entry : 0/0
 12093 ;;		On exit  : 0/0
 12094 ;;		Unchanged: 0/0
 12095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12100 ;;Total ram usage:        0 bytes
 12101 ;; Hardware stack levels used: 1
 12102 ;; This function calls:
 12103 ;;		Nothing
 12104 ;; This function is called by:
 12105 ;;		_ISR
 12106 ;; This function uses a non-reentrant model
 12107 ;;
 12108                           
 12109  0000'                    _timing:	
 12110                           ;psect for function _timing
 12111                           
 12112  0000'                    i1l6879:	
 12113                           ;incstack = 0
 12114                           ; Regs used in _timing: [wreg+status,2+status,0]
 12115                           
 12116                           
 12117                           ;charger_discharger.c: 369:     if(!count)
 12118  0000' 0021               	movlb	1	; select bank1
 12119  0001' 0800'              	movf	_count^(0+128),w
 12120  0002' 0400'              	iorwf	(_count+1)^(0+128),w
 12121  0003' 1D03               	btfss	3,2
 12122  0004' 2800'              	goto	u708_21
 12123  0005' 2800'              	goto	u708_20
 12124  0006'                    u708_21:
 12125  0006' 2800'              	goto	i1l6885
 12126  0007'                    u708_20:
 12127  0007'                    i1l6881:
 12128                           
 12129                           ;charger_discharger.c: 370:     {;charger_discharger.c: 371:         SECF = 1;
 12130  0007' 0023               	movlb	3	; select bank3
 12131  0008' 0180'              	clrf	_SECF^(0+384)
 12132  0009' 0A80'              	incf	_SECF^(0+384),f
 12133  000A'                    i1l6883:
 12134                           
 12135                           ;charger_discharger.c: 372:         count = 1024;
 12136  000A' 3000               	movlw	0
 12137  000B' 0021               	movlb	1	; select bank1
 12138  000C' 0080'              	movwf	_count^(0+128)
 12139  000D' 3004               	movlw	4
 12140  000E' 0081'              	movwf	(_count^(0+128)+1)
 12141                           
 12142                           ;charger_discharger.c: 373:         second++;
 12143  000F' 3001               	movlw	1
 12144  0010' 0023               	movlb	3	; select bank3
 12145  0011' 0780'              	addwf	_second^(0+384),f
 12146  0012' 3000               	movlw	0
 12147  0013' 3D80'              	addwfc	(_second+1)^(0+384),f
 12148                           
 12149                           ;charger_discharger.c: 374:     }else
 12150  0014' 2800'              	goto	i1l407
 12151  0015'                    i1l6885:
 12152                           
 12153                           ;charger_discharger.c: 375:     {;charger_discharger.c: 376:         count--;
 12154  0015' 3001               	movlw	1
 12155  0016' 0280'              	subwf	_count^(0+128),f
 12156  0017' 3000               	movlw	0
 12157  0018' 3B80'              	subwfb	(_count+1)^(0+128),f
 12158  0019'                    i1l407:
 12159  0019' 0008               	return
 12160  001A'                    __end_of_timing:
 12161                           
 12162                           	psect	text31
 12163  0000'                    __ptext31:	
 12164 ;; *************** function _read_ADC *****************
 12165 ;; Defined at:
 12166 ;;		line 353 in file "charger_discharger.c"
 12167 ;; Parameters:    Size  Location     Type
 12168 ;;  channel         2    0[COMMON] unsigned short 
 12169 ;; Auto vars:     Size  Location     Type
 12170 ;;  ad_res          2    9[COMMON] unsigned short 
 12171 ;; Return value:  Size  Location     Type
 12172 ;;                  2    0[COMMON] unsigned short 
 12173 ;; Registers used:
 12174 ;;		wreg, status,2, status,0
 12175 ;; Tracked objects:
 12176 ;;		On entry : 0/0
 12177 ;;		On exit  : 0/0
 12178 ;;		Unchanged: 0/0
 12179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12182 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12183 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12184 ;;Total ram usage:       11 bytes
 12185 ;; Hardware stack levels used: 1
 12186 ;; This function calls:
 12187 ;;		Nothing
 12188 ;; This function is called by:
 12189 ;;		_ISR
 12190 ;; This function uses a non-reentrant model
 12191 ;;
 12192                           
 12193  0000'                    _read_ADC:	
 12194                           ;psect for function _read_ADC
 12195                           
 12196  0000'                    i1l6865:	
 12197                           ;incstack = 0
 12198                           ; Regs used in _read_ADC: [wreg+status,2+status,0]
 12199                           
 12200  0000'                    i1l6867:
 12201                           
 12202                           ;charger_discharger.c: 356:     _delay((unsigned long)((10)*(32000000/4000000.0)));
 12203  0000' 301A               	movlw	26
 12204  0001'                    u790_27:
 12205  0001' 0B89               	decfsz	9,f
 12206  0002' 2800'              	goto	u790_27
 12207  0003' 3200               	nop2
 12208  0004'                    i1l6869:
 12209                           
 12210                           ;charger_discharger.c: 357:     ADCON0bits.CHS = channel;
 12211  0004' 0800'              	movf	read_ADC@channel,w
 12212  0005' 0082'              	movwf	??_read_ADC
 12213  0006' 0D82'              	rlf	??_read_ADC,f
 12214  0007' 0D82'              	rlf	??_read_ADC,f
 12215  0008' 0021               	movlb	1	; select bank1
 12216  0009' 081D               	movf	29,w	;volatile
 12217  000A' 0602'              	xorwf	??_read_ADC,w
 12218  000B' 3983               	andlw	-125
 12219  000C' 0602'              	xorwf	??_read_ADC,w
 12220  000D' 009D               	movwf	29	;volatile
 12221  000E'                    i1l6871:
 12222                           
 12223                           ;charger_discharger.c: 358:     _delay((unsigned long)((10)*(32000000/4000000.0)));
 12224  000E' 301A               	movlw	26
 12225  000F'                    u791_27:
 12226  000F' 0B89               	decfsz	9,f
 12227  0010' 2800'              	goto	u791_27
 12228  0011' 3200               	nop2
 12229  0012'                    i1l6873:
 12230                           
 12231                           ;charger_discharger.c: 359:     GO_nDONE = 1;
 12232  0012' 0021               	movlb	1	; select bank1
 12233  0013' 149D               	bsf	29,1	;volatile
 12234  0014'                    i1l399:	
 12235                           ;charger_discharger.c: 360:     while(GO_nDONE);
 12236                           
 12237  0014' 189D               	btfsc	29,1	;volatile
 12238  0015' 2800'              	goto	u707_21
 12239  0016' 2800'              	goto	u707_20
 12240  0017'                    u707_21:
 12241  0017' 2800'              	goto	i1l399
 12242  0018'                    u707_20:
 12243  0018'                    i1l6875:
 12244                           
 12245                           ;charger_discharger.c: 361:     ad_res = (uint16_t)((ADRESL & 0xFF)|((ADRESH << 8) & 0xF
      +                          00));
 12246  0018' 081C               	movf	28,w	;volatile
 12247  0019' 0082'              	movwf	??_read_ADC
 12248  001A' 0183'              	clrf	??_read_ADC+1
 12249  001B' 0802'              	movf	??_read_ADC,w
 12250  001C' 0083'              	movwf	??_read_ADC+1
 12251  001D' 0182'              	clrf	??_read_ADC
 12252  001E' 3000               	movlw	0
 12253  001F' 0502'              	andwf	??_read_ADC,w
 12254  0020' 0085'              	movwf	??_read_ADC+3
 12255  0021' 300F               	movlw	15
 12256  0022' 0503'              	andwf	??_read_ADC+1,w
 12257  0023' 0086'              	movwf	??_read_ADC+4
 12258  0024' 0805'              	movf	??_read_ADC+3,w
 12259  0025' 041B               	iorwf	27,w	;volatile
 12260  0026' 0087'              	movwf	??_read_ADC+5
 12261  0027' 0806'              	movf	??_read_ADC+4,w
 12262  0028' 0088'              	movwf	??_read_ADC+6
 12263  0029' 0807'              	movf	??_read_ADC+5,w
 12264  002A' 0089'              	movwf	read_ADC@ad_res
 12265  002B' 0808'              	movf	??_read_ADC+6,w
 12266  002C' 008A'              	movwf	read_ADC@ad_res+1
 12267                           
 12268                           ;charger_discharger.c: 362:     return ad_res;
 12269  002D' 080A'              	movf	read_ADC@ad_res+1,w
 12270  002E' 0081'              	movwf	?_read_ADC+1
 12271  002F' 0809'              	movf	read_ADC@ad_res,w
 12272  0030' 0080'              	movwf	?_read_ADC
 12273  0031'                    i1l402:
 12274  0031' 0008               	return
 12275  0032'                    __end_of_read_ADC:
 12276                           
 12277                           	psect	text32
 12278  0000'                    __ptext32:	
 12279 ;; *************** function _control_loop *****************
 12280 ;; Defined at:
 12281 ;;		line 257 in file "charger_discharger.c"
 12282 ;; Parameters:    Size  Location     Type
 12283 ;;		None
 12284 ;; Auto vars:     Size  Location     Type
 12285 ;;		None
 12286 ;; Return value:  Size  Location     Type
 12287 ;;                  1    wreg      void 
 12288 ;; Registers used:
 12289 ;;		wreg, status,2, status,0, pclath, cstack
 12290 ;; Tracked objects:
 12291 ;;		On entry : 0/0
 12292 ;;		On exit  : 0/0
 12293 ;;		Unchanged: 0/0
 12294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12299 ;;Total ram usage:        0 bytes
 12300 ;; Hardware stack levels used: 1
 12301 ;; Hardware stack levels required when called: 3
 12302 ;; This function calls:
 12303 ;;		_pid
 12304 ;;		i1___xxtofl
 12305 ;;		i1_set_DC
 12306 ;; This function is called by:
 12307 ;;		_ISR
 12308 ;; This function uses a non-reentrant model
 12309 ;;
 12310                           
 12311  0000'                    _control_loop:	
 12312                           ;psect for function _control_loop
 12313                           
 12314  0000'                    i1l6823:	
 12315                           ;incstack = 0
 12316                           ; Regs used in _control_loop: [wreg+status,2+status,0+pclath+cstack]
 12317                           
 12318                           
 12319                           ;charger_discharger.c: 259:     if(!cmode)
 12320  0000' 0021               	movlb	1	; select bank1
 12321  0001' 0800'              	movf	_cmode^(0+128),w
 12322  0002' 1D03               	btfss	3,2
 12323  0003' 2800'              	goto	u701_21
 12324  0004' 2800'              	goto	u701_20
 12325  0005'                    u701_21:
 12326  0005' 2800'              	goto	i1l6827
 12327  0006'                    u701_20:
 12328  0006'                    i1l6825:
 12329                           
 12330                           ;charger_discharger.c: 260:     {;charger_discharger.c: 261:         pid(v, vref);
 12331  0006' 0800'              	movf	_v^(0+128),w
 12332  0007' 0080'              	movwf	i1___xxtofl@val
 12333  0008' 0800'              	movf	(_v+1)^(0+128),w
 12334  0009' 0081'              	movwf	i1___xxtofl@val+1
 12335  000A' 0182'              	clrf	i1___xxtofl@val+2
 12336  000B' 0183'              	clrf	i1___xxtofl@val+3
 12337  000C' 3000               	movlw	0
 12338  000D' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12339  0010' 0803'              	movf	?i1___xxtofl+3,w
 12340  0011' 0020               	movlb	0	; select bank0
 12341  0012' 00B9'              	movwf	pid@feedback+3
 12342  0013' 0802'              	movf	?i1___xxtofl+2,w
 12343  0014' 00B8'              	movwf	pid@feedback+2
 12344  0015' 0801'              	movf	?i1___xxtofl+1,w
 12345  0016' 00B7'              	movwf	pid@feedback+1
 12346  0017' 0800'              	movf	?i1___xxtofl,w
 12347  0018' 00B6'              	movwf	pid@feedback
 12348  0019' 0024               	movlb	4	; select bank4
 12349  001A' 0800'              	movf	(_vref+3)^(0+512),w
 12350  001B' 0020               	movlb	0	; select bank0
 12351  001C' 00BD'              	movwf	pid@setpoint+3
 12352  001D' 0024               	movlb	4	; select bank4
 12353  001E' 0800'              	movf	(_vref+2)^(0+512),w
 12354  001F' 0020               	movlb	0	; select bank0
 12355  0020' 00BC'              	movwf	pid@setpoint+2
 12356  0021' 0024               	movlb	4	; select bank4
 12357  0022' 0800'              	movf	(_vref+1)^(0+512),w
 12358  0023' 0020               	movlb	0	; select bank0
 12359  0024' 00BB'              	movwf	pid@setpoint+1
 12360  0025' 0024               	movlb	4	; select bank4
 12361  0026' 0800'              	movf	_vref^(0+512),w
 12362  0027' 0020               	movlb	0	; select bank0
 12363  0028' 00BA'              	movwf	pid@setpoint
 12364  0029' 3180' 2000' 3180'  	fcall	_pid
 12365                           
 12366                           ;charger_discharger.c: 262:     }else
 12367  002C' 2800'              	goto	i1l370
 12368  002D'                    i1l6827:
 12369                           
 12370                           ;charger_discharger.c: 263:     {;charger_discharger.c: 264:         pid(i, iref);
 12371  002D' 0800'              	movf	_i^(0+128),w
 12372  002E' 0080'              	movwf	i1___xxtofl@val
 12373  002F' 0800'              	movf	(_i+1)^(0+128),w
 12374  0030' 0081'              	movwf	i1___xxtofl@val+1
 12375  0031' 0182'              	clrf	i1___xxtofl@val+2
 12376  0032' 0183'              	clrf	i1___xxtofl@val+3
 12377  0033' 3000               	movlw	0
 12378  0034' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12379  0037' 0803'              	movf	?i1___xxtofl+3,w
 12380  0038' 0020               	movlb	0	; select bank0
 12381  0039' 00B9'              	movwf	pid@feedback+3
 12382  003A' 0802'              	movf	?i1___xxtofl+2,w
 12383  003B' 00B8'              	movwf	pid@feedback+2
 12384  003C' 0801'              	movf	?i1___xxtofl+1,w
 12385  003D' 00B7'              	movwf	pid@feedback+1
 12386  003E' 0800'              	movf	?i1___xxtofl,w
 12387  003F' 00B6'              	movwf	pid@feedback
 12388  0040' 0021               	movlb	1	; select bank1
 12389  0041' 0800'              	movf	_iref^(0+128),w
 12390  0042' 0080'              	movwf	i1___xxtofl@val
 12391  0043' 0800'              	movf	(_iref+1)^(0+128),w
 12392  0044' 0081'              	movwf	i1___xxtofl@val+1
 12393  0045' 0182'              	clrf	i1___xxtofl@val+2
 12394  0046' 0183'              	clrf	i1___xxtofl@val+3
 12395  0047' 3000               	movlw	0
 12396  0048' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12397  004B' 0803'              	movf	?i1___xxtofl+3,w
 12398  004C' 0020               	movlb	0	; select bank0
 12399  004D' 00BD'              	movwf	pid@setpoint+3
 12400  004E' 0802'              	movf	?i1___xxtofl+2,w
 12401  004F' 00BC'              	movwf	pid@setpoint+2
 12402  0050' 0801'              	movf	?i1___xxtofl+1,w
 12403  0051' 00BB'              	movwf	pid@setpoint+1
 12404  0052' 0800'              	movf	?i1___xxtofl,w
 12405  0053' 00BA'              	movwf	pid@setpoint
 12406  0054' 3180' 2000' 3180'  	fcall	_pid
 12407  0057'                    i1l370:	
 12408                           ;charger_discharger.c: 265:     }
 12409                           
 12410                           
 12411                           ;charger_discharger.c: 266:     set_DC();
 12412  0057' 3180' 2000' 3180'  	fcall	i1_set_DC
 12413  005A'                    i1l371:
 12414  005A' 0008               	return
 12415  005B'                    __end_of_control_loop:
 12416                           
 12417                           	psect	text33
 12418  0000'                    __ptext33:	
 12419 ;; *************** function _pid *****************
 12420 ;; Defined at:
 12421 ;;		line 273 in file "charger_discharger.c"
 12422 ;; Parameters:    Size  Location     Type
 12423 ;;  feedback        4   54[BANK0 ] float 
 12424 ;;  setpoint        4   58[BANK0 ] float 
 12425 ;; Auto vars:     Size  Location     Type
 12426 ;;		None
 12427 ;; Return value:  Size  Location     Type
 12428 ;;                  1    wreg      void 
 12429 ;; Registers used:
 12430 ;;		wreg, status,2, status,0, pclath, cstack
 12431 ;; Tracked objects:
 12432 ;;		On entry : 0/0
 12433 ;;		On exit  : 0/0
 12434 ;;		Unchanged: 0/0
 12435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12436 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12437 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12439 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12440 ;;Total ram usage:       20 bytes
 12441 ;; Hardware stack levels used: 1
 12442 ;; Hardware stack levels required when called: 2
 12443 ;; This function calls:
 12444 ;;		___flsub
 12445 ;;		i1___fladd
 12446 ;;		i1___flge
 12447 ;;		i1___flmul
 12448 ;; This function is called by:
 12449 ;;		_control_loop
 12450 ;; This function uses a non-reentrant model
 12451 ;;
 12452                           
 12453  0000'                    _pid:	
 12454                           ;psect for function _pid
 12455                           
 12456  0000'                    i1l5965:	
 12457                           ;incstack = 0
 12458                           ; Regs used in _pid: [wreg+status,2+status,0+pclath+cstack]
 12459                           
 12460                           
 12461                           ;charger_discharger.c: 273: void pid(float feedback, float setpoint);charger_discharger.
      +                          c: 274: {;charger_discharger.c: 275:     pidt += kd * (setpoint - feedback - er);
 12462  0000' 0020               	movlb	0	; select bank0
 12463  0001' 083D'              	movf	pid@setpoint+3,w
 12464  0002' 009B'              	movwf	___flsub@b+3
 12465  0003' 083C'              	movf	pid@setpoint+2,w
 12466  0004' 009A'              	movwf	___flsub@b+2
 12467  0005' 083B'              	movf	pid@setpoint+1,w
 12468  0006' 0099'              	movwf	___flsub@b+1
 12469  0007' 083A'              	movf	pid@setpoint,w
 12470  0008' 0098'              	movwf	___flsub@b
 12471  0009' 0839'              	movf	pid@feedback+3,w
 12472  000A' 0097'              	movwf	___flsub@a+3
 12473  000B' 0838'              	movf	pid@feedback+2,w
 12474  000C' 0096'              	movwf	___flsub@a+2
 12475  000D' 0837'              	movf	pid@feedback+1,w
 12476  000E' 0095'              	movwf	___flsub@a+1
 12477  000F' 0836'              	movf	pid@feedback,w
 12478  0010' 0094'              	movwf	___flsub@a
 12479  0011' 3180' 2000' 3180'  	fcall	___flsub
 12480  0014' 0020               	movlb	0	; select bank0
 12481  0015' 0817'              	movf	?___flsub+3,w
 12482  0016' 00C1'              	movwf	_pid$1605+3
 12483  0017' 0816'              	movf	?___flsub+2,w
 12484  0018' 00C0'              	movwf	_pid$1605+2
 12485  0019' 0815'              	movf	?___flsub+1,w
 12486  001A' 00BF'              	movwf	_pid$1605+1
 12487  001B' 0814'              	movf	?___flsub,w
 12488  001C' 00BE'              	movwf	_pid$1605
 12489                           
 12490                           ;charger_discharger.c: 273: void pid(float feedback, float setpoint);charger_discharger.
      +                          c: 274: {;charger_discharger.c: 275:     pidt += kd * (setpoint - feedback - er);
 12491  001D' 0841'              	movf	_pid$1605+3,w
 12492  001E' 009B'              	movwf	___flsub@b+3
 12493  001F' 0840'              	movf	_pid$1605+2,w
 12494  0020' 009A'              	movwf	___flsub@b+2
 12495  0021' 083F'              	movf	_pid$1605+1,w
 12496  0022' 0099'              	movwf	___flsub@b+1
 12497  0023' 083E'              	movf	_pid$1605,w
 12498  0024' 0098'              	movwf	___flsub@b
 12499  0025' 0021               	movlb	1	; select bank1
 12500  0026' 0800'              	movf	(_er+3)^(0+128),w
 12501  0027' 0020               	movlb	0	; select bank0
 12502  0028' 0097'              	movwf	___flsub@a+3
 12503  0029' 0021               	movlb	1	; select bank1
 12504  002A' 0800'              	movf	(_er+2)^(0+128),w
 12505  002B' 0020               	movlb	0	; select bank0
 12506  002C' 0096'              	movwf	___flsub@a+2
 12507  002D' 0021               	movlb	1	; select bank1
 12508  002E' 0800'              	movf	(_er+1)^(0+128),w
 12509  002F' 0020               	movlb	0	; select bank0
 12510  0030' 0095'              	movwf	___flsub@a+1
 12511  0031' 0021               	movlb	1	; select bank1
 12512  0032' 0800'              	movf	_er^(0+128),w
 12513  0033' 0020               	movlb	0	; select bank0
 12514  0034' 0094'              	movwf	___flsub@a
 12515  0035' 3180' 2000' 3180'  	fcall	___flsub
 12516  0038' 0020               	movlb	0	; select bank0
 12517  0039' 0817'              	movf	?___flsub+3,w
 12518  003A' 00A3'              	movwf	i1___flmul@a+3
 12519  003B' 0816'              	movf	?___flsub+2,w
 12520  003C' 00A2'              	movwf	i1___flmul@a+2
 12521  003D' 0815'              	movf	?___flsub+1,w
 12522  003E' 00A1'              	movwf	i1___flmul@a+1
 12523  003F' 0814'              	movf	?___flsub,w
 12524  0040' 00A0'              	movwf	i1___flmul@a
 12525  0041' 0024               	movlb	4	; select bank4
 12526  0042' 0800'              	movf	(_kd+3)^(0+512),w
 12527  0043' 0020               	movlb	0	; select bank0
 12528  0044' 009F'              	movwf	i1___flmul@b+3
 12529  0045' 0024               	movlb	4	; select bank4
 12530  0046' 0800'              	movf	(_kd+2)^(0+512),w
 12531  0047' 0020               	movlb	0	; select bank0
 12532  0048' 009E'              	movwf	i1___flmul@b+2
 12533  0049' 0024               	movlb	4	; select bank4
 12534  004A' 0800'              	movf	(_kd+1)^(0+512),w
 12535  004B' 0020               	movlb	0	; select bank0
 12536  004C' 009D'              	movwf	i1___flmul@b+1
 12537  004D' 0024               	movlb	4	; select bank4
 12538  004E' 0800'              	movf	_kd^(0+512),w
 12539  004F' 0020               	movlb	0	; select bank0
 12540  0050' 009C'              	movwf	i1___flmul@b
 12541  0051' 3180' 2000' 3180'  	fcall	i1___flmul
 12542  0054' 0020               	movlb	0	; select bank0
 12543  0055' 081F'              	movf	?i1___flmul+3,w
 12544  0056' 00C5'              	movwf	_pid$1746+3
 12545  0057' 081E'              	movf	?i1___flmul+2,w
 12546  0058' 00C4'              	movwf	_pid$1746+2
 12547  0059' 081D'              	movf	?i1___flmul+1,w
 12548  005A' 00C3'              	movwf	_pid$1746+1
 12549  005B' 081C'              	movf	?i1___flmul,w
 12550  005C' 00C2'              	movwf	_pid$1746
 12551                           
 12552                           ;charger_discharger.c: 273: void pid(float feedback, float setpoint);charger_discharger.
      +                          c: 274: {;charger_discharger.c: 275:     pidt += kd * (setpoint - feedback - er);
 12553  005D' 0845'              	movf	_pid$1746+3,w
 12554  005E' 0083'              	movwf	i1___fladd@b+3
 12555  005F' 0844'              	movf	_pid$1746+2,w
 12556  0060' 0082'              	movwf	i1___fladd@b+2
 12557  0061' 0843'              	movf	_pid$1746+1,w
 12558  0062' 0081'              	movwf	i1___fladd@b+1
 12559  0063' 0842'              	movf	_pid$1746,w
 12560  0064' 0080'              	movwf	i1___fladd@b
 12561  0065' 0023               	movlb	3	; select bank3
 12562  0066' 0800'              	movf	(_pidt+3)^(0+384),w
 12563  0067' 0020               	movlb	0	; select bank0
 12564  0068' 0087'              	movwf	i1___fladd@a+3
 12565  0069' 0023               	movlb	3	; select bank3
 12566  006A' 0800'              	movf	(_pidt+2)^(0+384),w
 12567  006B' 0020               	movlb	0	; select bank0
 12568  006C' 0086'              	movwf	i1___fladd@a+2
 12569  006D' 0023               	movlb	3	; select bank3
 12570  006E' 0800'              	movf	(_pidt+1)^(0+384),w
 12571  006F' 0020               	movlb	0	; select bank0
 12572  0070' 0085'              	movwf	i1___fladd@a+1
 12573  0071' 0023               	movlb	3	; select bank3
 12574  0072' 0800'              	movf	_pidt^(0+384),w
 12575  0073' 0020               	movlb	0	; select bank0
 12576  0074' 0084'              	movwf	i1___fladd@a
 12577  0075' 3180' 2000' 3180'  	fcall	i1___fladd
 12578  0078' 0020               	movlb	0	; select bank0
 12579  0079' 0803'              	movf	?i1___fladd+3,w
 12580  007A' 0023               	movlb	3	; select bank3
 12581  007B' 0080'              	movwf	(_pidt+3)^(0+384)
 12582  007C' 0020               	movlb	0	; select bank0
 12583  007D' 0802'              	movf	?i1___fladd+2,w
 12584  007E' 0023               	movlb	3	; select bank3
 12585  007F' 0080'              	movwf	(_pidt+2)^(0+384)
 12586  0080' 0020               	movlb	0	; select bank0
 12587  0081' 0801'              	movf	?i1___fladd+1,w
 12588  0082' 0023               	movlb	3	; select bank3
 12589  0083' 0080'              	movwf	(_pidt+1)^(0+384)
 12590  0084' 0020               	movlb	0	; select bank0
 12591  0085' 0800'              	movf	?i1___fladd,w
 12592  0086' 0023               	movlb	3	; select bank3
 12593  0087' 0080'              	movwf	_pidt^(0+384)
 12594                           
 12595                           ;charger_discharger.c: 277:     er = setpoint - feedback;
 12596  0088' 0020               	movlb	0	; select bank0
 12597  0089' 0839'              	movf	pid@feedback+3,w
 12598  008A' 0097'              	movwf	___flsub@a+3
 12599  008B' 0838'              	movf	pid@feedback+2,w
 12600  008C' 0096'              	movwf	___flsub@a+2
 12601  008D' 0837'              	movf	pid@feedback+1,w
 12602  008E' 0095'              	movwf	___flsub@a+1
 12603  008F' 0836'              	movf	pid@feedback,w
 12604  0090' 0094'              	movwf	___flsub@a
 12605  0091' 083D'              	movf	pid@setpoint+3,w
 12606  0092' 009B'              	movwf	___flsub@b+3
 12607  0093' 083C'              	movf	pid@setpoint+2,w
 12608  0094' 009A'              	movwf	___flsub@b+2
 12609  0095' 083B'              	movf	pid@setpoint+1,w
 12610  0096' 0099'              	movwf	___flsub@b+1
 12611  0097' 083A'              	movf	pid@setpoint,w
 12612  0098' 0098'              	movwf	___flsub@b
 12613  0099' 3180' 2000' 3180'  	fcall	___flsub
 12614  009C' 0020               	movlb	0	; select bank0
 12615  009D' 0817'              	movf	?___flsub+3,w
 12616  009E' 0021               	movlb	1	; select bank1
 12617  009F' 0080'              	movwf	(_er+3)^(0+128)
 12618  00A0' 0020               	movlb	0	; select bank0
 12619  00A1' 0816'              	movf	?___flsub+2,w
 12620  00A2' 0021               	movlb	1	; select bank1
 12621  00A3' 0080'              	movwf	(_er+2)^(0+128)
 12622  00A4' 0020               	movlb	0	; select bank0
 12623  00A5' 0815'              	movf	?___flsub+1,w
 12624  00A6' 0021               	movlb	1	; select bank1
 12625  00A7' 0080'              	movwf	(_er+1)^(0+128)
 12626  00A8' 0020               	movlb	0	; select bank0
 12627  00A9' 0814'              	movf	?___flsub,w
 12628  00AA' 0021               	movlb	1	; select bank1
 12629  00AB' 0080'              	movwf	_er^(0+128)
 12630                           
 12631                           ;charger_discharger.c: 278:     if(er > 1000) er = 1000;
 12632  00AC' 3044               	movlw	68
 12633  00AD' 0083'              	movwf	i1___flge@ff1+3
 12634  00AE' 307A               	movlw	122
 12635  00AF' 0082'              	movwf	i1___flge@ff1+2
 12636  00B0' 3000               	movlw	0
 12637  00B1' 0081'              	movwf	i1___flge@ff1+1
 12638  00B2' 3000               	movlw	0
 12639  00B3' 0080'              	movwf	i1___flge@ff1
 12640  00B4' 0800'              	movf	(_er+3)^(0+128),w
 12641  00B5' 0087'              	movwf	i1___flge@ff2+3
 12642  00B6' 0800'              	movf	(_er+2)^(0+128),w
 12643  00B7' 0086'              	movwf	i1___flge@ff2+2
 12644  00B8' 0800'              	movf	(_er+1)^(0+128),w
 12645  00B9' 0085'              	movwf	i1___flge@ff2+1
 12646  00BA' 0800'              	movf	_er^(0+128),w
 12647  00BB' 0084'              	movwf	i1___flge@ff2
 12648  00BC' 3180' 2000' 3180'  	fcall	i1___flge
 12649  00BF' 1803               	btfsc	3,0
 12650  00C0' 2800'              	goto	u649_21
 12651  00C1' 2800'              	goto	u649_20
 12652  00C2'                    u649_21:
 12653  00C2' 2800'              	goto	i1l5969
 12654  00C3'                    u649_20:
 12655  00C3'                    i1l5967:
 12656  00C3' 3044               	movlw	68
 12657  00C4' 0021               	movlb	1	; select bank1
 12658  00C5' 0080'              	movwf	(_er+3)^(0+128)
 12659  00C6' 307A               	movlw	122
 12660  00C7' 0080'              	movwf	(_er+2)^(0+128)
 12661  00C8' 3000               	movlw	0
 12662  00C9' 0080'              	movwf	(_er+1)^(0+128)
 12663  00CA' 3000               	movlw	0
 12664  00CB' 0080'              	movwf	_er^(0+128)
 12665  00CC'                    i1l5969:
 12666                           
 12667                           ;charger_discharger.c: 279:     if(er < -1000) er = -1000;
 12668  00CC' 0021               	movlb	1	; select bank1
 12669  00CD' 0800'              	movf	(_er+3)^(0+128),w
 12670  00CE' 0083'              	movwf	i1___flge@ff1+3
 12671  00CF' 0800'              	movf	(_er+2)^(0+128),w
 12672  00D0' 0082'              	movwf	i1___flge@ff1+2
 12673  00D1' 0800'              	movf	(_er+1)^(0+128),w
 12674  00D2' 0081'              	movwf	i1___flge@ff1+1
 12675  00D3' 0800'              	movf	_er^(0+128),w
 12676  00D4' 0080'              	movwf	i1___flge@ff1
 12677  00D5' 30C4               	movlw	196
 12678  00D6' 0087'              	movwf	i1___flge@ff2+3
 12679  00D7' 307A               	movlw	122
 12680  00D8' 0086'              	movwf	i1___flge@ff2+2
 12681  00D9' 3000               	movlw	0
 12682  00DA' 0085'              	movwf	i1___flge@ff2+1
 12683  00DB' 3000               	movlw	0
 12684  00DC' 0084'              	movwf	i1___flge@ff2
 12685  00DD' 3180' 2000' 3180'  	fcall	i1___flge
 12686  00E0' 1803               	btfsc	3,0
 12687  00E1' 2800'              	goto	u650_21
 12688  00E2' 2800'              	goto	u650_20
 12689  00E3'                    u650_21:
 12690  00E3' 2800'              	goto	i1l5973
 12691  00E4'                    u650_20:
 12692  00E4'                    i1l5971:
 12693  00E4' 30C4               	movlw	196
 12694  00E5' 0021               	movlb	1	; select bank1
 12695  00E6' 0080'              	movwf	(_er+3)^(0+128)
 12696  00E7' 307A               	movlw	122
 12697  00E8' 0080'              	movwf	(_er+2)^(0+128)
 12698  00E9' 3000               	movlw	0
 12699  00EA' 0080'              	movwf	(_er+1)^(0+128)
 12700  00EB' 3000               	movlw	0
 12701  00EC' 0080'              	movwf	_er^(0+128)
 12702  00ED'                    i1l5973:
 12703                           
 12704                           ;charger_discharger.c: 282:  pidi += (ki * er);
 12705  00ED' 0024               	movlb	4	; select bank4
 12706  00EE' 0800'              	movf	(_ki+3)^(0+512),w
 12707  00EF' 0020               	movlb	0	; select bank0
 12708  00F0' 00A3'              	movwf	i1___flmul@a+3
 12709  00F1' 0024               	movlb	4	; select bank4
 12710  00F2' 0800'              	movf	(_ki+2)^(0+512),w
 12711  00F3' 0020               	movlb	0	; select bank0
 12712  00F4' 00A2'              	movwf	i1___flmul@a+2
 12713  00F5' 0024               	movlb	4	; select bank4
 12714  00F6' 0800'              	movf	(_ki+1)^(0+512),w
 12715  00F7' 0020               	movlb	0	; select bank0
 12716  00F8' 00A1'              	movwf	i1___flmul@a+1
 12717  00F9' 0024               	movlb	4	; select bank4
 12718  00FA' 0800'              	movf	_ki^(0+512),w
 12719  00FB' 0020               	movlb	0	; select bank0
 12720  00FC' 00A0'              	movwf	i1___flmul@a
 12721  00FD' 0021               	movlb	1	; select bank1
 12722  00FE' 0800'              	movf	(_er+3)^(0+128),w
 12723  00FF' 0020               	movlb	0	; select bank0
 12724  0100' 009F'              	movwf	i1___flmul@b+3
 12725  0101' 0021               	movlb	1	; select bank1
 12726  0102' 0800'              	movf	(_er+2)^(0+128),w
 12727  0103' 0020               	movlb	0	; select bank0
 12728  0104' 009E'              	movwf	i1___flmul@b+2
 12729  0105' 0021               	movlb	1	; select bank1
 12730  0106' 0800'              	movf	(_er+1)^(0+128),w
 12731  0107' 0020               	movlb	0	; select bank0
 12732  0108' 009D'              	movwf	i1___flmul@b+1
 12733  0109' 0021               	movlb	1	; select bank1
 12734  010A' 0800'              	movf	_er^(0+128),w
 12735  010B' 0020               	movlb	0	; select bank0
 12736  010C' 009C'              	movwf	i1___flmul@b
 12737  010D' 3180' 2000' 3180'  	fcall	i1___flmul
 12738  0110' 0020               	movlb	0	; select bank0
 12739  0111' 081F'              	movf	?i1___flmul+3,w
 12740  0112' 0083'              	movwf	i1___fladd@b+3
 12741  0113' 081E'              	movf	?i1___flmul+2,w
 12742  0114' 0082'              	movwf	i1___fladd@b+2
 12743  0115' 081D'              	movf	?i1___flmul+1,w
 12744  0116' 0081'              	movwf	i1___fladd@b+1
 12745  0117' 081C'              	movf	?i1___flmul,w
 12746  0118' 0080'              	movwf	i1___fladd@b
 12747  0119' 0024               	movlb	4	; select bank4
 12748  011A' 0800'              	movf	(_pidi+3)^(0+512),w
 12749  011B' 0020               	movlb	0	; select bank0
 12750  011C' 0087'              	movwf	i1___fladd@a+3
 12751  011D' 0024               	movlb	4	; select bank4
 12752  011E' 0800'              	movf	(_pidi+2)^(0+512),w
 12753  011F' 0020               	movlb	0	; select bank0
 12754  0120' 0086'              	movwf	i1___fladd@a+2
 12755  0121' 0024               	movlb	4	; select bank4
 12756  0122' 0800'              	movf	(_pidi+1)^(0+512),w
 12757  0123' 0020               	movlb	0	; select bank0
 12758  0124' 0085'              	movwf	i1___fladd@a+1
 12759  0125' 0024               	movlb	4	; select bank4
 12760  0126' 0800'              	movf	_pidi^(0+512),w
 12761  0127' 0020               	movlb	0	; select bank0
 12762  0128' 0084'              	movwf	i1___fladd@a
 12763  0129' 3180' 2000' 3180'  	fcall	i1___fladd
 12764  012C' 0020               	movlb	0	; select bank0
 12765  012D' 0803'              	movf	?i1___fladd+3,w
 12766  012E' 0024               	movlb	4	; select bank4
 12767  012F' 0080'              	movwf	(_pidi+3)^(0+512)
 12768  0130' 0020               	movlb	0	; select bank0
 12769  0131' 0802'              	movf	?i1___fladd+2,w
 12770  0132' 0024               	movlb	4	; select bank4
 12771  0133' 0080'              	movwf	(_pidi+2)^(0+512)
 12772  0134' 0020               	movlb	0	; select bank0
 12773  0135' 0801'              	movf	?i1___fladd+1,w
 12774  0136' 0024               	movlb	4	; select bank4
 12775  0137' 0080'              	movwf	(_pidi+1)^(0+512)
 12776  0138' 0020               	movlb	0	; select bank0
 12777  0139' 0800'              	movf	?i1___fladd,w
 12778  013A' 0024               	movlb	4	; select bank4
 12779  013B' 0080'              	movwf	_pidi^(0+512)
 12780  013C'                    i1l5975:
 12781                           
 12782                           ;charger_discharger.c: 283:     pidt += (er * kp + pidi);
 12783  013C' 0021               	movlb	1	; select bank1
 12784  013D' 0800'              	movf	(_er+3)^(0+128),w
 12785  013E' 0020               	movlb	0	; select bank0
 12786  013F' 00A3'              	movwf	i1___flmul@a+3
 12787  0140' 0021               	movlb	1	; select bank1
 12788  0141' 0800'              	movf	(_er+2)^(0+128),w
 12789  0142' 0020               	movlb	0	; select bank0
 12790  0143' 00A2'              	movwf	i1___flmul@a+2
 12791  0144' 0021               	movlb	1	; select bank1
 12792  0145' 0800'              	movf	(_er+1)^(0+128),w
 12793  0146' 0020               	movlb	0	; select bank0
 12794  0147' 00A1'              	movwf	i1___flmul@a+1
 12795  0148' 0021               	movlb	1	; select bank1
 12796  0149' 0800'              	movf	_er^(0+128),w
 12797  014A' 0020               	movlb	0	; select bank0
 12798  014B' 00A0'              	movwf	i1___flmul@a
 12799  014C' 0024               	movlb	4	; select bank4
 12800  014D' 0800'              	movf	(_kp+3)^(0+512),w
 12801  014E' 0020               	movlb	0	; select bank0
 12802  014F' 009F'              	movwf	i1___flmul@b+3
 12803  0150' 0024               	movlb	4	; select bank4
 12804  0151' 0800'              	movf	(_kp+2)^(0+512),w
 12805  0152' 0020               	movlb	0	; select bank0
 12806  0153' 009E'              	movwf	i1___flmul@b+2
 12807  0154' 0024               	movlb	4	; select bank4
 12808  0155' 0800'              	movf	(_kp+1)^(0+512),w
 12809  0156' 0020               	movlb	0	; select bank0
 12810  0157' 009D'              	movwf	i1___flmul@b+1
 12811  0158' 0024               	movlb	4	; select bank4
 12812  0159' 0800'              	movf	_kp^(0+512),w
 12813  015A' 0020               	movlb	0	; select bank0
 12814  015B' 009C'              	movwf	i1___flmul@b
 12815  015C' 3180' 2000' 3180'  	fcall	i1___flmul
 12816  015F' 0020               	movlb	0	; select bank0
 12817  0160' 081F'              	movf	?i1___flmul+3,w
 12818  0161' 0087'              	movwf	i1___fladd@a+3
 12819  0162' 081E'              	movf	?i1___flmul+2,w
 12820  0163' 0086'              	movwf	i1___fladd@a+2
 12821  0164' 081D'              	movf	?i1___flmul+1,w
 12822  0165' 0085'              	movwf	i1___fladd@a+1
 12823  0166' 081C'              	movf	?i1___flmul,w
 12824  0167' 0084'              	movwf	i1___fladd@a
 12825  0168' 0024               	movlb	4	; select bank4
 12826  0169' 0800'              	movf	(_pidi+3)^(0+512),w
 12827  016A' 0020               	movlb	0	; select bank0
 12828  016B' 0083'              	movwf	i1___fladd@b+3
 12829  016C' 0024               	movlb	4	; select bank4
 12830  016D' 0800'              	movf	(_pidi+2)^(0+512),w
 12831  016E' 0020               	movlb	0	; select bank0
 12832  016F' 0082'              	movwf	i1___fladd@b+2
 12833  0170' 0024               	movlb	4	; select bank4
 12834  0171' 0800'              	movf	(_pidi+1)^(0+512),w
 12835  0172' 0020               	movlb	0	; select bank0
 12836  0173' 0081'              	movwf	i1___fladd@b+1
 12837  0174' 0024               	movlb	4	; select bank4
 12838  0175' 0800'              	movf	_pidi^(0+512),w
 12839  0176' 0020               	movlb	0	; select bank0
 12840  0177' 0080'              	movwf	i1___fladd@b
 12841  0178' 3180' 2000' 3180'  	fcall	i1___fladd
 12842  017B' 0020               	movlb	0	; select bank0
 12843  017C' 0803'              	movf	?i1___fladd+3,w
 12844  017D' 00C9'              	movwf	_pid$1747+3
 12845  017E' 0802'              	movf	?i1___fladd+2,w
 12846  017F' 00C8'              	movwf	_pid$1747+2
 12847  0180' 0801'              	movf	?i1___fladd+1,w
 12848  0181' 00C7'              	movwf	_pid$1747+1
 12849  0182' 0800'              	movf	?i1___fladd,w
 12850  0183' 00C6'              	movwf	_pid$1747
 12851  0184'                    i1l5977:
 12852                           
 12853                           ;charger_discharger.c: 283:     pidt += (er * kp + pidi);
 12854  0184' 0849'              	movf	_pid$1747+3,w
 12855  0185' 0083'              	movwf	i1___fladd@b+3
 12856  0186' 0848'              	movf	_pid$1747+2,w
 12857  0187' 0082'              	movwf	i1___fladd@b+2
 12858  0188' 0847'              	movf	_pid$1747+1,w
 12859  0189' 0081'              	movwf	i1___fladd@b+1
 12860  018A' 0846'              	movf	_pid$1747,w
 12861  018B' 0080'              	movwf	i1___fladd@b
 12862  018C' 0023               	movlb	3	; select bank3
 12863  018D' 0800'              	movf	(_pidt+3)^(0+384),w
 12864  018E' 0020               	movlb	0	; select bank0
 12865  018F' 0087'              	movwf	i1___fladd@a+3
 12866  0190' 0023               	movlb	3	; select bank3
 12867  0191' 0800'              	movf	(_pidt+2)^(0+384),w
 12868  0192' 0020               	movlb	0	; select bank0
 12869  0193' 0086'              	movwf	i1___fladd@a+2
 12870  0194' 0023               	movlb	3	; select bank3
 12871  0195' 0800'              	movf	(_pidt+1)^(0+384),w
 12872  0196' 0020               	movlb	0	; select bank0
 12873  0197' 0085'              	movwf	i1___fladd@a+1
 12874  0198' 0023               	movlb	3	; select bank3
 12875  0199' 0800'              	movf	_pidt^(0+384),w
 12876  019A' 0020               	movlb	0	; select bank0
 12877  019B' 0084'              	movwf	i1___fladd@a
 12878  019C' 3180' 2000' 3180'  	fcall	i1___fladd
 12879  019F' 0020               	movlb	0	; select bank0
 12880  01A0' 0803'              	movf	?i1___fladd+3,w
 12881  01A1' 0023               	movlb	3	; select bank3
 12882  01A2' 0080'              	movwf	(_pidt+3)^(0+384)
 12883  01A3' 0020               	movlb	0	; select bank0
 12884  01A4' 0802'              	movf	?i1___fladd+2,w
 12885  01A5' 0023               	movlb	3	; select bank3
 12886  01A6' 0080'              	movwf	(_pidt+2)^(0+384)
 12887  01A7' 0020               	movlb	0	; select bank0
 12888  01A8' 0801'              	movf	?i1___fladd+1,w
 12889  01A9' 0023               	movlb	3	; select bank3
 12890  01AA' 0080'              	movwf	(_pidt+1)^(0+384)
 12891  01AB' 0020               	movlb	0	; select bank0
 12892  01AC' 0800'              	movf	?i1___fladd,w
 12893  01AD' 0023               	movlb	3	; select bank3
 12894  01AE' 0080'              	movwf	_pidt^(0+384)
 12895  01AF'                    i1l5979:
 12896                           
 12897                           ;charger_discharger.c: 285:     if (pidt >= 300.0) pidt = 300.0;
 12898  01AF' 0800'              	movf	(_pidt+3)^(0+384),w
 12899  01B0' 0083'              	movwf	i1___flge@ff1+3
 12900  01B1' 0800'              	movf	(_pidt+2)^(0+384),w
 12901  01B2' 0082'              	movwf	i1___flge@ff1+2
 12902  01B3' 0800'              	movf	(_pidt+1)^(0+384),w
 12903  01B4' 0081'              	movwf	i1___flge@ff1+1
 12904  01B5' 0800'              	movf	_pidt^(0+384),w
 12905  01B6' 0080'              	movwf	i1___flge@ff1
 12906  01B7' 3043               	movlw	67
 12907  01B8' 0087'              	movwf	i1___flge@ff2+3
 12908  01B9' 3096               	movlw	150
 12909  01BA' 0086'              	movwf	i1___flge@ff2+2
 12910  01BB' 3000               	movlw	0
 12911  01BC' 0085'              	movwf	i1___flge@ff2+1
 12912  01BD' 3000               	movlw	0
 12913  01BE' 0084'              	movwf	i1___flge@ff2
 12914  01BF' 3180' 2000' 3180'  	fcall	i1___flge
 12915  01C2' 1C03               	btfss	3,0
 12916  01C3' 2800'              	goto	u651_21
 12917  01C4' 2800'              	goto	u651_20
 12918  01C5'                    u651_21:
 12919  01C5' 2800'              	goto	i1l5983
 12920  01C6'                    u651_20:
 12921  01C6'                    i1l5981:
 12922  01C6' 3043               	movlw	67
 12923  01C7' 0023               	movlb	3	; select bank3
 12924  01C8' 0080'              	movwf	(_pidt+3)^(0+384)
 12925  01C9' 3096               	movlw	150
 12926  01CA' 0080'              	movwf	(_pidt+2)^(0+384)
 12927  01CB' 3000               	movlw	0
 12928  01CC' 0080'              	movwf	(_pidt+1)^(0+384)
 12929  01CD' 3000               	movlw	0
 12930  01CE' 0080'              	movwf	_pidt^(0+384)
 12931  01CF' 2800'              	goto	i1l379
 12932  01D0'                    i1l5983:
 12933  01D0' 3042               	movlw	66
 12934  01D1' 0083'              	movwf	i1___flge@ff1+3
 12935  01D2' 3048               	movlw	72
 12936  01D3' 0082'              	movwf	i1___flge@ff1+2
 12937  01D4' 3000               	movlw	0
 12938  01D5' 0081'              	movwf	i1___flge@ff1+1
 12939  01D6' 3000               	movlw	0
 12940  01D7' 0080'              	movwf	i1___flge@ff1
 12941  01D8' 0023               	movlb	3	; select bank3
 12942  01D9' 0800'              	movf	(_pidt+3)^(0+384),w
 12943  01DA' 0087'              	movwf	i1___flge@ff2+3
 12944  01DB' 0800'              	movf	(_pidt+2)^(0+384),w
 12945  01DC' 0086'              	movwf	i1___flge@ff2+2
 12946  01DD' 0800'              	movf	(_pidt+1)^(0+384),w
 12947  01DE' 0085'              	movwf	i1___flge@ff2+1
 12948  01DF' 0800'              	movf	_pidt^(0+384),w
 12949  01E0' 0084'              	movwf	i1___flge@ff2
 12950  01E1' 3180' 2000' 3180'  	fcall	i1___flge
 12951  01E4' 1C03               	btfss	3,0
 12952  01E5' 2800'              	goto	u652_21
 12953  01E6' 2800'              	goto	u652_20
 12954  01E7'                    u652_21:
 12955  01E7' 2800'              	goto	i1l379
 12956  01E8'                    u652_20:
 12957  01E8'                    i1l5985:
 12958  01E8' 3042               	movlw	66
 12959  01E9' 0023               	movlb	3	; select bank3
 12960  01EA' 0080'              	movwf	(_pidt+3)^(0+384)
 12961  01EB' 3048               	movlw	72
 12962  01EC' 0080'              	movwf	(_pidt+2)^(0+384)
 12963  01ED' 3000               	movlw	0
 12964  01EE' 0080'              	movwf	(_pidt+1)^(0+384)
 12965  01EF' 3000               	movlw	0
 12966  01F0' 0080'              	movwf	_pidt^(0+384)
 12967  01F1'                    i1l379:
 12968  01F1' 0008               	return
 12969  01F2'                    __end_of_pid:
 12970                           
 12971                           	psect	text34
 12972  0000'                    __ptext34:	
 12973 ;; *************** function i1___flge *****************
 12974 ;; Defined at:
 12975 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 12976 ;; Parameters:    Size  Location     Type
 12977 ;;  ff1             4    0[COMMON] void 
 12978 ;;  ff2             4    4[COMMON] void 
 12979 ;; Auto vars:     Size  Location     Type
 12980 ;;		None
 12981 ;; Return value:  Size  Location     Type
 12982 ;;		None               void
 12983 ;; Registers used:
 12984 ;;		wreg, status,2, status,0
 12985 ;; Tracked objects:
 12986 ;;		On entry : 0/0
 12987 ;;		On exit  : 0/0
 12988 ;;		Unchanged: 0/0
 12989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12990 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12992 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12993 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12994 ;;Total ram usage:       12 bytes
 12995 ;; Hardware stack levels used: 1
 12996 ;; This function calls:
 12997 ;;		Nothing
 12998 ;; This function is called by:
 12999 ;;		_pid
 13000 ;; This function uses a non-reentrant model
 13001 ;;
 13002                           
 13003  0000'                    i1___flge:	
 13004                           ;psect for function i1___flge
 13005                           
 13006  0000'                    i1l5577:	
 13007                           ;incstack = 0
 13008                           ; Regs used in i1___flge: [wreg+status,2+status,0]
 13009                           
 13010  0000' 3000               	movlw	0
 13011  0001' 0500'              	andwf	i1___flge@ff1,w
 13012  0002' 0088'              	movwf	??i1___flge
 13013  0003' 3000               	movlw	0
 13014  0004' 0501'              	andwf	i1___flge@ff1+1,w
 13015  0005' 0089'              	movwf	??i1___flge+1
 13016  0006' 3080               	movlw	128
 13017  0007' 0502'              	andwf	i1___flge@ff1+2,w
 13018  0008' 008A'              	movwf	??i1___flge+2
 13019  0009' 307F               	movlw	127
 13020  000A' 0503'              	andwf	i1___flge@ff1+3,w
 13021  000B' 008B'              	movwf	??i1___flge+3
 13022  000C' 080B'              	movf	??i1___flge+3,w
 13023  000D' 040A'              	iorwf	??i1___flge+2,w
 13024  000E' 0409'              	iorwf	??i1___flge+1,w
 13025  000F' 0408'              	iorwf	??i1___flge,w
 13026  0010' 1D03               	skipz
 13027  0011' 2800'              	goto	u570_21
 13028  0012' 2800'              	goto	u570_20
 13029  0013'                    u570_21:
 13030  0013' 2800'              	goto	i1l1224
 13031  0014'                    u570_20:
 13032  0014'                    i1l5579:
 13033  0014' 3000               	movlw	0
 13034  0015' 0083'              	movwf	i1___flge@ff1+3
 13035  0016' 3000               	movlw	0
 13036  0017' 0082'              	movwf	i1___flge@ff1+2
 13037  0018' 3000               	movlw	0
 13038  0019' 0081'              	movwf	i1___flge@ff1+1
 13039  001A' 3000               	movlw	0
 13040  001B' 0080'              	movwf	i1___flge@ff1
 13041  001C'                    i1l1224:
 13042  001C' 3000               	movlw	0
 13043  001D' 0504'              	andwf	i1___flge@ff2,w
 13044  001E' 0088'              	movwf	??i1___flge
 13045  001F' 3000               	movlw	0
 13046  0020' 0505'              	andwf	i1___flge@ff2+1,w
 13047  0021' 0089'              	movwf	??i1___flge+1
 13048  0022' 3080               	movlw	128
 13049  0023' 0506'              	andwf	i1___flge@ff2+2,w
 13050  0024' 008A'              	movwf	??i1___flge+2
 13051  0025' 307F               	movlw	127
 13052  0026' 0507'              	andwf	i1___flge@ff2+3,w
 13053  0027' 008B'              	movwf	??i1___flge+3
 13054  0028' 080B'              	movf	??i1___flge+3,w
 13055  0029' 040A'              	iorwf	??i1___flge+2,w
 13056  002A' 0409'              	iorwf	??i1___flge+1,w
 13057  002B' 0408'              	iorwf	??i1___flge,w
 13058  002C' 1D03               	skipz
 13059  002D' 2800'              	goto	u571_21
 13060  002E' 2800'              	goto	u571_20
 13061  002F'                    u571_21:
 13062  002F' 2800'              	goto	i1l5583
 13063  0030'                    u571_20:
 13064  0030'                    i1l5581:
 13065  0030' 3000               	movlw	0
 13066  0031' 0087'              	movwf	i1___flge@ff2+3
 13067  0032' 3000               	movlw	0
 13068  0033' 0086'              	movwf	i1___flge@ff2+2
 13069  0034' 3000               	movlw	0
 13070  0035' 0085'              	movwf	i1___flge@ff2+1
 13071  0036' 3000               	movlw	0
 13072  0037' 0084'              	movwf	i1___flge@ff2
 13073  0038'                    i1l5583:
 13074  0038' 1F83'              	btfss	i1___flge@ff1+3,7
 13075  0039' 2800'              	goto	u572_21
 13076  003A' 2800'              	goto	u572_20
 13077  003B'                    u572_21:
 13078  003B' 2800'              	goto	i1l5587
 13079  003C'                    u572_20:
 13080  003C'                    i1l5585:
 13081  003C' 3000               	movlw	0
 13082  003D' 0088'              	movwf	??i1___flge
 13083  003E' 3000               	movlw	0
 13084  003F' 0089'              	movwf	??i1___flge+1
 13085  0040' 3000               	movlw	0
 13086  0041' 008A'              	movwf	??i1___flge+2
 13087  0042' 3080               	movlw	128
 13088  0043' 008B'              	movwf	??i1___flge+3
 13089  0044' 0800'              	movf	i1___flge@ff1,w
 13090  0045' 0288'              	subwf	??i1___flge,f
 13091  0046' 0801'              	movf	i1___flge@ff1+1,w
 13092  0047' 3B89'              	subwfb	??i1___flge+1,f
 13093  0048' 0802'              	movf	i1___flge@ff1+2,w
 13094  0049' 3B8A'              	subwfb	??i1___flge+2,f
 13095  004A' 0803'              	movf	i1___flge@ff1+3,w
 13096  004B' 3B8B'              	subwfb	??i1___flge+3,f
 13097  004C' 080B'              	movf	??i1___flge+3,w
 13098  004D' 0083'              	movwf	i1___flge@ff1+3
 13099  004E' 080A'              	movf	??i1___flge+2,w
 13100  004F' 0082'              	movwf	i1___flge@ff1+2
 13101  0050' 0809'              	movf	??i1___flge+1,w
 13102  0051' 0081'              	movwf	i1___flge@ff1+1
 13103  0052' 0808'              	movf	??i1___flge,w
 13104  0053' 0080'              	movwf	i1___flge@ff1
 13105  0054'                    i1l5587:
 13106  0054' 1F87'              	btfss	i1___flge@ff2+3,7
 13107  0055' 2800'              	goto	u573_21
 13108  0056' 2800'              	goto	u573_20
 13109  0057'                    u573_21:
 13110  0057' 2800'              	goto	i1l1227
 13111  0058'                    u573_20:
 13112  0058'                    i1l5589:
 13113  0058' 3000               	movlw	0
 13114  0059' 0088'              	movwf	??i1___flge
 13115  005A' 3000               	movlw	0
 13116  005B' 0089'              	movwf	??i1___flge+1
 13117  005C' 3000               	movlw	0
 13118  005D' 008A'              	movwf	??i1___flge+2
 13119  005E' 3080               	movlw	128
 13120  005F' 008B'              	movwf	??i1___flge+3
 13121  0060' 0804'              	movf	i1___flge@ff2,w
 13122  0061' 0288'              	subwf	??i1___flge,f
 13123  0062' 0805'              	movf	i1___flge@ff2+1,w
 13124  0063' 3B89'              	subwfb	??i1___flge+1,f
 13125  0064' 0806'              	movf	i1___flge@ff2+2,w
 13126  0065' 3B8A'              	subwfb	??i1___flge+2,f
 13127  0066' 0807'              	movf	i1___flge@ff2+3,w
 13128  0067' 3B8B'              	subwfb	??i1___flge+3,f
 13129  0068' 080B'              	movf	??i1___flge+3,w
 13130  0069' 0087'              	movwf	i1___flge@ff2+3
 13131  006A' 080A'              	movf	??i1___flge+2,w
 13132  006B' 0086'              	movwf	i1___flge@ff2+2
 13133  006C' 0809'              	movf	??i1___flge+1,w
 13134  006D' 0085'              	movwf	i1___flge@ff2+1
 13135  006E' 0808'              	movf	??i1___flge,w
 13136  006F' 0084'              	movwf	i1___flge@ff2
 13137  0070'                    i1l1227:
 13138  0070' 3080               	movlw	128
 13139  0071' 0683'              	xorwf	i1___flge@ff1+3,f
 13140  0072' 3080               	movlw	128
 13141  0073' 0687'              	xorwf	i1___flge@ff2+3,f
 13142  0074' 0807'              	movf	i1___flge@ff2+3,w
 13143  0075' 0203'              	subwf	i1___flge@ff1+3,w
 13144  0076' 1D03               	skipz
 13145  0077' 2800'              	goto	u574_25
 13146  0078' 0806'              	movf	i1___flge@ff2+2,w
 13147  0079' 0202'              	subwf	i1___flge@ff1+2,w
 13148  007A' 1D03               	skipz
 13149  007B' 2800'              	goto	u574_25
 13150  007C' 0805'              	movf	i1___flge@ff2+1,w
 13151  007D' 0201'              	subwf	i1___flge@ff1+1,w
 13152  007E' 1D03               	skipz
 13153  007F' 2800'              	goto	u574_25
 13154  0080' 0804'              	movf	i1___flge@ff2,w
 13155  0081' 0200'              	subwf	i1___flge@ff1,w
 13156  0082'                    u574_25:
 13157  0082' 1803               	skipnc
 13158  0083' 2800'              	goto	u574_21
 13159  0084' 2800'              	goto	u574_20
 13160  0085'                    u574_21:
 13161  0085' 2800'              	goto	i1l5593
 13162  0086'                    u574_20:
 13163  0086'                    i1l5591:
 13164  0086' 1003               	clrc
 13165  0087' 2800'              	goto	i1l1232
 13166  0088'                    i1l5593:
 13167  0088' 1403               	setc
 13168  0089'                    i1l1232:
 13169  0089' 0008               	return
 13170  008A'                    __end_ofi1___flge:
 13171                           
 13172                           	psect	text35
 13173  0000'                    __ptext35:	
 13174 ;; *************** function ___flsub *****************
 13175 ;; Defined at:
 13176 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13177 ;; Parameters:    Size  Location     Type
 13178 ;;  a               4   20[BANK0 ] void 
 13179 ;;  b               4   24[BANK0 ] void 
 13180 ;; Auto vars:     Size  Location     Type
 13181 ;;		None
 13182 ;; Return value:  Size  Location     Type
 13183 ;;                  4   20[BANK0 ] void 
 13184 ;; Registers used:
 13185 ;;		wreg, status,2, status,0, pclath, cstack
 13186 ;; Tracked objects:
 13187 ;;		On entry : 0/0
 13188 ;;		On exit  : 0/0
 13189 ;;		Unchanged: 0/0
 13190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13191 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13194 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13195 ;;Total ram usage:        8 bytes
 13196 ;; Hardware stack levels used: 1
 13197 ;; Hardware stack levels required when called: 1
 13198 ;; This function calls:
 13199 ;;		i1___fladd
 13200 ;; This function is called by:
 13201 ;;		_pid
 13202 ;; This function uses a non-reentrant model
 13203 ;;
 13204                           
 13205  0000'                    ___flsub:	
 13206                           ;psect for function ___flsub
 13207                           
 13208  0000'                    i1l5511:	
 13209                           ;incstack = 0
 13210                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 13211                           
 13212  0000' 3080               	movlw	128
 13213  0001' 0020               	movlb	0	; select bank0
 13214  0002' 0697'              	xorwf	___flsub@a+3,f
 13215  0003'                    i1l5513:
 13216  0003' 081B'              	movf	___flsub@b+3,w
 13217  0004' 0083'              	movwf	i1___fladd@b+3
 13218  0005' 081A'              	movf	___flsub@b+2,w
 13219  0006' 0082'              	movwf	i1___fladd@b+2
 13220  0007' 0819'              	movf	___flsub@b+1,w
 13221  0008' 0081'              	movwf	i1___fladd@b+1
 13222  0009' 0818'              	movf	___flsub@b,w
 13223  000A' 0080'              	movwf	i1___fladd@b
 13224  000B' 0817'              	movf	___flsub@a+3,w
 13225  000C' 0087'              	movwf	i1___fladd@a+3
 13226  000D' 0816'              	movf	___flsub@a+2,w
 13227  000E' 0086'              	movwf	i1___fladd@a+2
 13228  000F' 0815'              	movf	___flsub@a+1,w
 13229  0010' 0085'              	movwf	i1___fladd@a+1
 13230  0011' 0814'              	movf	___flsub@a,w
 13231  0012' 0084'              	movwf	i1___fladd@a
 13232  0013' 3180' 2000' 3180'  	fcall	i1___fladd
 13233  0016' 0020               	movlb	0	; select bank0
 13234  0017' 0803'              	movf	?i1___fladd+3,w
 13235  0018' 0097'              	movwf	?___flsub+3
 13236  0019' 0802'              	movf	?i1___fladd+2,w
 13237  001A' 0096'              	movwf	?___flsub+2
 13238  001B' 0801'              	movf	?i1___fladd+1,w
 13239  001C' 0095'              	movwf	?___flsub+1
 13240  001D' 0800'              	movf	?i1___fladd,w
 13241  001E' 0094'              	movwf	?___flsub
 13242  001F'                    i1l1393:
 13243  001F' 0008               	return
 13244  0020'                    __end_of___flsub:
 13245                           
 13246                           	psect	text36
 13247  0000'                    __ptext36:	
 13248 ;; *************** function _command_interpreter *****************
 13249 ;; Defined at:
 13250 ;;		line 126 in file "charger_discharger.c"
 13251 ;; Parameters:    Size  Location     Type
 13252 ;;		None
 13253 ;; Auto vars:     Size  Location     Type
 13254 ;;  data           20   23[BANK1 ] unsigned char [20]
 13255 ;;  calc_checksu    2   47[BANK1 ] unsigned short 
 13256 ;;  checksum        2   43[BANK1 ] unsigned short 
 13257 ;;  length          1   50[BANK1 ] unsigned char 
 13258 ;;  code            1   49[BANK1 ] unsigned char 
 13259 ;;  operation       1   46[BANK1 ] unsigned char 
 13260 ;;  test            1   45[BANK1 ] _Bool 
 13261 ;; Return value:  Size  Location     Type
 13262 ;;                  1    wreg      _Bool 
 13263 ;; Registers used:
 13264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13265 ;; Tracked objects:
 13266 ;;		On entry : 0/0
 13267 ;;		On exit  : 0/0
 13268 ;;		Unchanged: 0/0
 13269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13271 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
 13272 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13273 ;;      Totals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0
 13274 ;;Total ram usage:       31 bytes
 13275 ;; Hardware stack levels used: 1
 13276 ;; Hardware stack levels required when called: 3
 13277 ;; This function calls:
 13278 ;;		_UART_get_byte
 13279 ;;		_UART_get_some_bytes
 13280 ;;		_UART_send_header
 13281 ;;		_calculate_checksum
 13282 ;;		_put_data_into_structure
 13283 ;;		i1_UART_send_byte
 13284 ;;		i1_UART_send_some_bytes
 13285 ;;		i1___fladd
 13286 ;;		i1___fldiv
 13287 ;;		i1___flmul
 13288 ;;		i1___fltol
 13289 ;;		i1___xxtofl
 13290 ;;		i1_converter_settings
 13291 ;;		i1_getTime
 13292 ;; This function is called by:
 13293 ;;		_ISR
 13294 ;; This function uses a non-reentrant model
 13295 ;;
 13296                           
 13297  0000'                    _command_interpreter:	
 13298                           ;psect for function _command_interpreter
 13299                           
 13300  0000'                    i1l7273:	
 13301                           ;incstack = 0
 13302                           ; Regs used in _command_interpreter: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13303                           
 13304                           
 13305                           ;charger_discharger.c: 128:     _Bool test = 1;
 13306  0000' 0021               	movlb	1	; select bank1
 13307  0001' 0180'              	clrf	command_interpreter@test^(0+128)
 13308  0002' 0A80'              	incf	command_interpreter@test^(0+128),f
 13309  0003'                    i1l7275:
 13310                           
 13311                           ;charger_discharger.c: 130:     uint8_t code = 0x00;
 13312  0003' 0180'              	clrf	command_interpreter@code^(0+128)
 13313                           
 13314                           ;charger_discharger.c: 131:     uint8_t length = 0x00;
 13315  0004' 0180'              	clrf	command_interpreter@length^(0+128)
 13316  0005'                    i1l7277:
 13317                           
 13318                           ;charger_discharger.c: 132:     uint8_t data[20] = {0x00};
 13319  0005' 3000'              	movlw	low command_interpreter@F5995
 13320  0006' 0086               	movwf	6
 13321  0007' 3000'              	movlw	high command_interpreter@F5995
 13322  0008' 0087               	movwf	7
 13323  0009' 3000'              	movlw	low command_interpreter@data
 13324  000A' 0084               	movwf	4
 13325  000B' 3000'              	movlw	high command_interpreter@data
 13326  000C' 0085               	movwf	5
 13327  000D' 3014               	movlw	20
 13328  000E' 0080'              	movwf	??_command_interpreter^(0+128)
 13329  000F'                    u726_20:
 13330  000F' 0016               	moviw fsr1++
 13331  0010' 001A               	movwi fsr0++
 13332  0011' 0B80'              	decfsz	??_command_interpreter^(0+128),f
 13333  0012' 2800'              	goto	u726_20
 13334  0013'                    i1l7279:
 13335  0013'                    i1l7281:
 13336  0013'                    i1l7283:
 13337                           
 13338                           ;charger_discharger.c: 135:     basic_configuration_ptr = &basic_configuration;
 13339  0013' 3000'              	movlw	(low (_basic_configuration| (0+512)))& (0+255)
 13340  0014' 0080'              	movwf	_basic_configuration_ptr^(0+128)
 13341  0015'                    i1l7285:
 13342                           
 13343                           ;charger_discharger.c: 136:     test_configuration_ptr = &test_configuration;
 13344  0015' 3000'              	movlw	(low (_test_configuration| (0+512)))& (0+255)
 13345  0016' 0080'              	movwf	_test_configuration_ptr^(0+128)
 13346  0017'                    i1l7287:
 13347                           
 13348                           ;charger_discharger.c: 137:     converter_configuration_ptr = &converter_configuration;
 13349  0017' 3000'              	movlw	(low (_converter_configuration| (0+512)))& (0+255)
 13350  0018' 0080'              	movwf	_converter_configuration_ptr^(0+128)
 13351  0019'                    i1l7289:
 13352                           
 13353                           ;charger_discharger.c: 138:     if (!start)
 13354  0019' 0800'              	movf	_start^(0+128),w
 13355  001A' 1D03               	btfss	3,2
 13356  001B' 2800'              	goto	u727_21
 13357  001C' 2800'              	goto	u727_20
 13358  001D'                    u727_21:
 13359  001D' 2800'              	goto	i1l7409
 13360  001E'                    u727_20:
 13361  001E'                    i1l7291:
 13362                           
 13363                           ;charger_discharger.c: 139:     {;charger_discharger.c: 140:         if(UART_get_byte()=
      +                          =0xDD)
 13364  001E' 3180' 2000' 3180'  	fcall	_UART_get_byte
 13365  0021' 3ADD               	xorlw	221
 13366  0022' 1D03               	skipz
 13367  0023' 2800'              	goto	u728_21
 13368  0024' 2800'              	goto	u728_20
 13369  0025'                    u728_21:
 13370  0025' 2800'              	goto	i1l7407
 13371  0026'                    u728_20:
 13372  0026'                    i1l7293:
 13373                           
 13374                           ;charger_discharger.c: 141:         {;charger_discharger.c: 142:             operation =
      +                           UART_get_byte();
 13375  0026' 3180' 2000' 3180'  	fcall	_UART_get_byte
 13376  0029' 0021               	movlb	1	; select bank1
 13377  002A' 0080'              	movwf	command_interpreter@operation^(0+128)
 13378                           
 13379                           ;charger_discharger.c: 143:             code = UART_get_byte();
 13380  002B' 3180' 2000' 3180'  	fcall	_UART_get_byte
 13381  002E' 0021               	movlb	1	; select bank1
 13382  002F' 0080'              	movwf	command_interpreter@code^(0+128)
 13383                           
 13384                           ;charger_discharger.c: 144:             length = UART_get_byte();
 13385  0030' 3180' 2000' 3180'  	fcall	_UART_get_byte
 13386  0033' 0021               	movlb	1	; select bank1
 13387  0034' 0080'              	movwf	command_interpreter@length^(0+128)
 13388  0035'                    i1l7295:
 13389                           
 13390                           ;charger_discharger.c: 145:             if (length>0) UART_get_some_bytes(length, (uint8
      +                          _t*)data);
 13391  0035' 0800'              	movf	command_interpreter@length^(0+128),w
 13392  0036' 1903               	btfsc	3,2
 13393  0037' 2800'              	goto	u729_21
 13394  0038' 2800'              	goto	u729_20
 13395  0039'                    u729_21:
 13396  0039' 2800'              	goto	i1l7299
 13397  003A'                    u729_20:
 13398  003A'                    i1l7297:
 13399  003A' 3000'              	movlw	(low (command_interpreter@data| 0))& (0+255)
 13400  003B' 0080'              	movwf	UART_get_some_bytes@data
 13401  003C' 0800'              	movf	command_interpreter@length^(0+128),w
 13402  003D' 3180' 2000' 3180'  	fcall	_UART_get_some_bytes
 13403  0040'                    i1l7299:
 13404                           
 13405                           ;charger_discharger.c: 146:             checksum = UART_get_byte();
 13406  0040' 3180' 2000' 3180'  	fcall	_UART_get_byte
 13407  0043' 0021               	movlb	1	; select bank1
 13408  0044' 0080'              	movwf	??_command_interpreter^(0+128)
 13409  0045' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 13410  0046' 0800'              	movf	??_command_interpreter^(0+128),w
 13411  0047' 0080'              	movwf	command_interpreter@checksum^(0+128)
 13412  0048' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 13413  0049' 0080'              	movwf	(command_interpreter@checksum+1)^(0+128)
 13414  004A'                    i1l7301:
 13415                           
 13416                           ;charger_discharger.c: 147:             checksum += UART_get_byte()* 256;
 13417  004A' 3180' 2000' 3180'  	fcall	_UART_get_byte
 13418  004D' 0021               	movlb	1	; select bank1
 13419  004E' 0080'              	movwf	??_command_interpreter^(0+128)
 13420  004F' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 13421  0050' 0800'              	movf	??_command_interpreter^(0+128),w
 13422  0051' 0081'              	movwf	(??_command_interpreter^(0+128)+1)
 13423  0052' 0180'              	clrf	??_command_interpreter^(0+128)
 13424  0053' 0800'              	movf	??_command_interpreter^(0+128),w
 13425  0054' 0780'              	addwf	command_interpreter@checksum^(0+128),f
 13426  0055' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 13427  0056' 3D80'              	addwfc	(command_interpreter@checksum+1)^(0+128),f
 13428                           
 13429                           ;charger_discharger.c: 148:             calc_checksum = calculate_checksum(code, length,
      +                           (uint8_t*)data);
 13430  0057' 0800'              	movf	command_interpreter@length^(0+128),w
 13431  0058' 0080'              	movwf	calculate_checksum@length
 13432  0059' 3000'              	movlw	low command_interpreter@data
 13433  005A' 0081'              	movwf	calculate_checksum@data
 13434  005B' 3000'              	movlw	high command_interpreter@data
 13435  005C' 0082'              	movwf	calculate_checksum@data+1
 13436  005D' 0800'              	movf	command_interpreter@code^(0+128),w
 13437  005E' 3180' 2000' 3180'  	fcall	_calculate_checksum
 13438  0061' 0801'              	movf	?_calculate_checksum+1,w
 13439  0062' 0021               	movlb	1	; select bank1
 13440  0063' 0080'              	movwf	(command_interpreter@calc_checksum+1)^(0+128)
 13441  0064' 0800'              	movf	?_calculate_checksum,w
 13442  0065' 0080'              	movwf	command_interpreter@calc_checksum^(0+128)
 13443  0066'                    i1l7303:
 13444                           
 13445                           ;charger_discharger.c: 149:             if(UART_get_byte() != 0x77)
 13446  0066' 3180' 2000' 3180'  	fcall	_UART_get_byte
 13447  0069' 3A77               	xorlw	119
 13448  006A' 1903               	skipnz
 13449  006B' 2800'              	goto	u730_21
 13450  006C' 2800'              	goto	u730_20
 13451  006D'                    u730_21:
 13452  006D' 2800'              	goto	i1l7307
 13453  006E'                    u730_20:
 13454  006E'                    i1l7305:
 13455                           
 13456                           ;charger_discharger.c: 150:             {;charger_discharger.c: 151:                 tes
      +                          t = 0;
 13457  006E' 0021               	movlb	1	; select bank1
 13458  006F' 0180'              	clrf	command_interpreter@test^(0+128)
 13459  0070'                    i1l7307:
 13460                           
 13461                           ;charger_discharger.c: 153:             if (checksum != calc_checksum)
 13462  0070' 0021               	movlb	1	; select bank1
 13463  0071' 0800'              	movf	(command_interpreter@calc_checksum+1)^(0+128),w
 13464  0072' 0600'              	xorwf	(command_interpreter@checksum+1)^(0+128),w
 13465  0073' 1D03               	skipz
 13466  0074' 2800'              	goto	u731_25
 13467  0075' 0800'              	movf	command_interpreter@calc_checksum^(0+128),w
 13468  0076' 0600'              	xorwf	command_interpreter@checksum^(0+128),w
 13469  0077'                    u731_25:
 13470  0077' 1903               	skipnz
 13471  0078' 2800'              	goto	u731_21
 13472  0079' 2800'              	goto	u731_20
 13473  007A'                    u731_21:
 13474  007A' 2800'              	goto	i1l7311
 13475  007B'                    u731_20:
 13476  007B'                    i1l7309:
 13477                           
 13478                           ;charger_discharger.c: 154:             {;charger_discharger.c: 155:                 tes
      +                          t = 0;
 13479  007B' 0180'              	clrf	command_interpreter@test^(0+128)
 13480  007C'                    i1l7311:
 13481                           
 13482                           ;charger_discharger.c: 157:             if(!start)
 13483  007C' 0800'              	movf	_start^(0+128),w
 13484  007D' 1D03               	btfss	3,2
 13485  007E' 2800'              	goto	u732_21
 13486  007F' 2800'              	goto	u732_20
 13487  0080'                    u732_21:
 13488  0080' 2800'              	goto	i1l7427
 13489  0081'                    u732_20:
 13490  0081' 2800'              	goto	i1l7405
 13491  0082'                    i1l7315:
 13492                           
 13493                           ;charger_discharger.c: 162:                         UART_send_header(0xDD, operation, co
      +                          de);
 13494  0082' 0800'              	movf	command_interpreter@operation^(0+128),w
 13495  0083' 0081'              	movwf	UART_send_header@operation
 13496  0084' 0800'              	movf	command_interpreter@code^(0+128),w
 13497  0085' 0082'              	movwf	UART_send_header@code
 13498  0086' 30DD               	movlw	221
 13499  0087' 3180' 2000' 3180'  	fcall	_UART_send_header
 13500                           
 13501                           ;charger_discharger.c: 163:                         switch (code)
 13502  008A' 2800'              	goto	i1l7343
 13503  008B'                    i1l7317:
 13504  008B'                    i1l7319:
 13505                           
 13506                           ;charger_discharger.c: 167:                                 UART_send_byte(length);
 13507  008B' 3011               	movlw	17
 13508  008C' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 13509  008F'                    i1l7321:
 13510                           
 13511                           ;charger_discharger.c: 168:                                 UART_send_some_bytes(length,
      +                           (uint8_t*)basic_configuration_ptr);
 13512  008F' 0021               	movlb	1	; select bank1
 13513  0090' 0800'              	movf	_basic_configuration_ptr^(0+128),w
 13514  0091' 0081'              	movwf	i1UART_send_some_bytes@data
 13515  0092' 39FF               	andlw	255
 13516  0093' 1D03               	skipz
 13517  0094' 3002               	movlw	2
 13518  0095' 0082'              	movwf	i1UART_send_some_bytes@data+1
 13519  0096' 3011               	movlw	17
 13520  0097' 3180' 2000' 3180'  	fcall	i1_UART_send_some_bytes
 13521  009A'                    i1l7323:
 13522                           
 13523                           ;charger_discharger.c: 169:                                 calc_checksum = calculate_ch
      +                          ecksum(code, length, (uint8_t*)basic_configuration_ptr);
 13524  009A' 3011               	movlw	17
 13525  009B' 0080'              	movwf	calculate_checksum@length
 13526  009C' 0021               	movlb	1	; select bank1
 13527  009D' 0800'              	movf	_basic_configuration_ptr^(0+128),w
 13528  009E' 0081'              	movwf	calculate_checksum@data
 13529  009F' 39FF               	andlw	255
 13530  00A0' 1D03               	skipz
 13531  00A1' 3002               	movlw	2
 13532  00A2' 0082'              	movwf	calculate_checksum@data+1
 13533  00A3' 0800'              	movf	command_interpreter@code^(0+128),w
 13534  00A4' 3180' 2000' 3180'  	fcall	_calculate_checksum
 13535  00A7' 0801'              	movf	?_calculate_checksum+1,w
 13536  00A8' 0021               	movlb	1	; select bank1
 13537  00A9' 0080'              	movwf	(command_interpreter@calc_checksum+1)^(0+128)
 13538  00AA' 0800'              	movf	?_calculate_checksum,w
 13539  00AB' 0080'              	movwf	command_interpreter@calc_checksum^(0+128)
 13540                           
 13541                           ;charger_discharger.c: 170:                                 break;
 13542  00AC' 2800'              	goto	i1l7345
 13543  00AD'                    i1l7325:
 13544  00AD'                    i1l7327:
 13545                           
 13546                           ;charger_discharger.c: 173:                                 UART_send_byte(length);
 13547  00AD' 3011               	movlw	17
 13548  00AE' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 13549  00B1'                    i1l7329:
 13550                           
 13551                           ;charger_discharger.c: 174:                                 UART_send_some_bytes(length,
      +                           (uint8_t*)test_configuration_ptr);
 13552  00B1' 0021               	movlb	1	; select bank1
 13553  00B2' 0800'              	movf	_test_configuration_ptr^(0+128),w
 13554  00B3' 0081'              	movwf	i1UART_send_some_bytes@data
 13555  00B4' 39FF               	andlw	255
 13556  00B5' 1D03               	skipz
 13557  00B6' 3002               	movlw	2
 13558  00B7' 0082'              	movwf	i1UART_send_some_bytes@data+1
 13559  00B8' 3011               	movlw	17
 13560  00B9' 3180' 2000' 3180'  	fcall	i1_UART_send_some_bytes
 13561  00BC'                    i1l7331:
 13562                           
 13563                           ;charger_discharger.c: 175:                                 calc_checksum = calculate_ch
      +                          ecksum(code, length, (uint8_t*)test_configuration_ptr);
 13564  00BC' 3011               	movlw	17
 13565  00BD' 0080'              	movwf	calculate_checksum@length
 13566  00BE' 0021               	movlb	1	; select bank1
 13567  00BF' 0800'              	movf	_test_configuration_ptr^(0+128),w
 13568  00C0' 0081'              	movwf	calculate_checksum@data
 13569  00C1' 39FF               	andlw	255
 13570  00C2' 1D03               	skipz
 13571  00C3' 3002               	movlw	2
 13572  00C4' 0082'              	movwf	calculate_checksum@data+1
 13573  00C5' 0800'              	movf	command_interpreter@code^(0+128),w
 13574  00C6' 3180' 2000' 3180'  	fcall	_calculate_checksum
 13575  00C9' 0801'              	movf	?_calculate_checksum+1,w
 13576  00CA' 0021               	movlb	1	; select bank1
 13577  00CB' 0080'              	movwf	(command_interpreter@calc_checksum+1)^(0+128)
 13578  00CC' 0800'              	movf	?_calculate_checksum,w
 13579  00CD' 0080'              	movwf	command_interpreter@calc_checksum^(0+128)
 13580                           
 13581                           ;charger_discharger.c: 176:                                 break;
 13582  00CE' 2800'              	goto	i1l7345
 13583  00CF'                    i1l7333:
 13584  00CF'                    i1l7335:
 13585                           
 13586                           ;charger_discharger.c: 179:                                 UART_send_byte(length);
 13587  00CF' 300E               	movlw	14
 13588  00D0' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 13589  00D3'                    i1l7337:
 13590                           
 13591                           ;charger_discharger.c: 180:                                 UART_send_some_bytes(length,
      +                           (uint8_t*)converter_configuration_ptr);
 13592  00D3' 0021               	movlb	1	; select bank1
 13593  00D4' 0800'              	movf	_converter_configuration_ptr^(0+128),w
 13594  00D5' 0081'              	movwf	i1UART_send_some_bytes@data
 13595  00D6' 39FF               	andlw	255
 13596  00D7' 1D03               	skipz
 13597  00D8' 3002               	movlw	2
 13598  00D9' 0082'              	movwf	i1UART_send_some_bytes@data+1
 13599  00DA' 300E               	movlw	14
 13600  00DB' 3180' 2000' 3180'  	fcall	i1_UART_send_some_bytes
 13601  00DE'                    i1l7339:
 13602                           
 13603                           ;charger_discharger.c: 181:                                 calc_checksum = calculate_ch
      +                          ecksum(code, length, (uint8_t*)converter_configuration_ptr);
 13604  00DE' 300E               	movlw	14
 13605  00DF' 0080'              	movwf	calculate_checksum@length
 13606  00E0' 0021               	movlb	1	; select bank1
 13607  00E1' 0800'              	movf	_converter_configuration_ptr^(0+128),w
 13608  00E2' 0081'              	movwf	calculate_checksum@data
 13609  00E3' 39FF               	andlw	255
 13610  00E4' 1D03               	skipz
 13611  00E5' 3002               	movlw	2
 13612  00E6' 0082'              	movwf	calculate_checksum@data+1
 13613  00E7' 0800'              	movf	command_interpreter@code^(0+128),w
 13614  00E8' 3180' 2000' 3180'  	fcall	_calculate_checksum
 13615  00EB' 0801'              	movf	?_calculate_checksum+1,w
 13616  00EC' 0021               	movlb	1	; select bank1
 13617  00ED' 0080'              	movwf	(command_interpreter@calc_checksum+1)^(0+128)
 13618  00EE' 0800'              	movf	?_calculate_checksum,w
 13619  00EF' 0080'              	movwf	command_interpreter@calc_checksum^(0+128)
 13620                           
 13621                           ;charger_discharger.c: 182:                                 break;
 13622  00F0' 2800'              	goto	i1l7345
 13623  00F1'                    i1l7343:
 13624  00F1' 0021               	movlb	1	; select bank1
 13625  00F2' 0800'              	movf	command_interpreter@code^(0+128),w
 13626  00F3' 0080'              	movwf	??_command_interpreter^(0+128)
 13627  00F4' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 13628                           
 13629                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13630                           ; Switch size 1, requested type "simple"
 13631                           ; Number of cases is 1, Range of values is 0 to 0
 13632                           ; switch strategies available:
 13633                           ; Name         Instructions Cycles
 13634                           ; simple_byte            4     3 (average)
 13635                           ; direct_byte            8     6 (fixed)
 13636                           ; jumptable            260     6 (fixed)
 13637                           ;	Chosen strategy is simple_byte
 13638  00F5' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 13639  00F6' 3A00               	xorlw	0	; case 0
 13640  00F7' 1903               	skipnz
 13641  00F8' 2800'              	goto	i1l7761
 13642  00F9' 2800'              	goto	i1l7345
 13643  00FA'                    i1l7761:
 13644                           
 13645                           ; Switch size 1, requested type "simple"
 13646                           ; Number of cases is 3, Range of values is 3 to 7
 13647                           ; switch strategies available:
 13648                           ; Name         Instructions Cycles
 13649                           ; simple_byte           10     6 (average)
 13650                           ; direct_byte           19     9 (fixed)
 13651                           ; jumptable            263     9 (fixed)
 13652                           ;	Chosen strategy is simple_byte
 13653  00FA' 0800'              	movf	??_command_interpreter^(0+128),w
 13654  00FB' 3A03               	xorlw	3	; case 3
 13655  00FC' 1903               	skipnz
 13656  00FD' 2800'              	goto	i1l7317
 13657  00FE' 3A06               	xorlw	6	; case 5
 13658  00FF' 1903               	skipnz
 13659  0100' 2800'              	goto	i1l7325
 13660  0101' 3A02               	xorlw	2	; case 7
 13661  0102' 1903               	skipnz
 13662  0103' 2800'              	goto	i1l7333
 13663  0104' 2800'              	goto	i1l7345
 13664  0105'                    i1l7345:
 13665                           
 13666                           ;charger_discharger.c: 184:                         UART_send_some_bytes(2,(uint8_t*)&ca
      +                          lc_checksum);
 13667  0105' 3000'              	movlw	low command_interpreter@calc_checksum
 13668  0106' 0081'              	movwf	i1UART_send_some_bytes@data
 13669  0107' 3000'              	movlw	high command_interpreter@calc_checksum
 13670  0108' 0082'              	movwf	i1UART_send_some_bytes@data+1
 13671  0109' 3002               	movlw	2
 13672  010A' 3180' 2000' 3180'  	fcall	i1_UART_send_some_bytes
 13673  010D'                    i1l7347:
 13674                           
 13675                           ;charger_discharger.c: 185:                         UART_send_byte(0x77);
 13676  010D' 3077               	movlw	119
 13677  010E' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 13678                           
 13679                           ;charger_discharger.c: 186:                         break;
 13680  0111' 2800'              	goto	i1l7427
 13681  0112'                    i1l7349:
 13682                           
 13683                           ;charger_discharger.c: 191:                                 put_data_into_structure(leng
      +                          th, (uint8_t*)data, (uint8_t*)basic_configuration_ptr);
 13684  0112' 3000'              	movlw	(low (command_interpreter@data| 0))& (0+255)
 13685  0113' 0080'              	movwf	put_data_into_structure@data
 13686  0114' 0800'              	movf	_basic_configuration_ptr^(0+128),w
 13687  0115' 0081'              	movwf	put_data_into_structure@structure
 13688  0116' 0800'              	movf	command_interpreter@length^(0+128),w
 13689  0117' 3180' 2000' 3180'  	fcall	_put_data_into_structure
 13690  011A'                    i1l7351:
 13691                           
 13692                           ;charger_discharger.c: 192:                                 vref = ( ( (float) basic_con
      +                          figuration.const_voltage * 4096.0 ) / 5000.0 ) + 0.5 ;
 13693  011A' 303F               	movlw	63
 13694  011B' 0020               	movlb	0	; select bank0
 13695  011C' 0083'              	movwf	i1___fladd@b+3
 13696  011D' 3000               	movlw	0
 13697  011E' 0082'              	movwf	i1___fladd@b+2
 13698  011F' 3000               	movlw	0
 13699  0120' 0081'              	movwf	i1___fladd@b+1
 13700  0121' 3000               	movlw	0
 13701  0122' 0080'              	movwf	i1___fladd@b
 13702  0123' 3045               	movlw	69
 13703  0124' 00B9'              	movwf	i1___fldiv@a+3
 13704  0125' 309C               	movlw	156
 13705  0126' 00B8'              	movwf	i1___fldiv@a+2
 13706  0127' 3040               	movlw	64
 13707  0128' 00B7'              	movwf	i1___fldiv@a+1
 13708  0129' 3000               	movlw	0
 13709  012A' 00B6'              	movwf	i1___fldiv@a
 13710  012B' 3045               	movlw	69
 13711  012C' 009F'              	movwf	i1___flmul@b+3
 13712  012D' 3080               	movlw	128
 13713  012E' 009E'              	movwf	i1___flmul@b+2
 13714  012F' 3000               	movlw	0
 13715  0130' 009D'              	movwf	i1___flmul@b+1
 13716  0131' 3000               	movlw	0
 13717  0132' 009C'              	movwf	i1___flmul@b
 13718  0133' 0024               	movlb	4	; select bank4
 13719  0134' 0801'              	movf	(_basic_configuration^(0+512)+1),w
 13720  0135' 0080'              	movwf	i1___xxtofl@val
 13721  0136' 0801'              	movf	((_basic_configuration+1)^(0+512)+1),w
 13722  0137' 0081'              	movwf	i1___xxtofl@val+1
 13723  0138' 0182'              	clrf	i1___xxtofl@val+2
 13724  0139' 0183'              	clrf	i1___xxtofl@val+3
 13725  013A' 3000               	movlw	0
 13726  013B' 3180' 2000' 3180'  	fcall	i1___xxtofl
 13727  013E' 0803'              	movf	?i1___xxtofl+3,w
 13728  013F' 0020               	movlb	0	; select bank0
 13729  0140' 00A3'              	movwf	i1___flmul@a+3
 13730  0141' 0802'              	movf	?i1___xxtofl+2,w
 13731  0142' 00A2'              	movwf	i1___flmul@a+2
 13732  0143' 0801'              	movf	?i1___xxtofl+1,w
 13733  0144' 00A1'              	movwf	i1___flmul@a+1
 13734  0145' 0800'              	movf	?i1___xxtofl,w
 13735  0146' 00A0'              	movwf	i1___flmul@a
 13736  0147' 3180' 2000' 3180'  	fcall	i1___flmul
 13737  014A' 0020               	movlb	0	; select bank0
 13738  014B' 081F'              	movf	?i1___flmul+3,w
 13739  014C' 00BD'              	movwf	i1___fldiv@b+3
 13740  014D' 081E'              	movf	?i1___flmul+2,w
 13741  014E' 00BC'              	movwf	i1___fldiv@b+2
 13742  014F' 081D'              	movf	?i1___flmul+1,w
 13743  0150' 00BB'              	movwf	i1___fldiv@b+1
 13744  0151' 081C'              	movf	?i1___flmul,w
 13745  0152' 00BA'              	movwf	i1___fldiv@b
 13746  0153' 3180' 2000' 3180'  	fcall	i1___fldiv
 13747  0156' 0020               	movlb	0	; select bank0
 13748  0157' 0839'              	movf	?i1___fldiv+3,w
 13749  0158' 0087'              	movwf	i1___fladd@a+3
 13750  0159' 0838'              	movf	?i1___fldiv+2,w
 13751  015A' 0086'              	movwf	i1___fladd@a+2
 13752  015B' 0837'              	movf	?i1___fldiv+1,w
 13753  015C' 0085'              	movwf	i1___fladd@a+1
 13754  015D' 0836'              	movf	?i1___fldiv,w
 13755  015E' 0084'              	movwf	i1___fladd@a
 13756  015F' 3180' 2000' 3180'  	fcall	i1___fladd
 13757  0162' 0020               	movlb	0	; select bank0
 13758  0163' 0803'              	movf	?i1___fladd+3,w
 13759  0164' 0024               	movlb	4	; select bank4
 13760  0165' 0080'              	movwf	(_vref+3)^(0+512)
 13761  0166' 0020               	movlb	0	; select bank0
 13762  0167' 0802'              	movf	?i1___fladd+2,w
 13763  0168' 0024               	movlb	4	; select bank4
 13764  0169' 0080'              	movwf	(_vref+2)^(0+512)
 13765  016A' 0020               	movlb	0	; select bank0
 13766  016B' 0801'              	movf	?i1___fladd+1,w
 13767  016C' 0024               	movlb	4	; select bank4
 13768  016D' 0080'              	movwf	(_vref+1)^(0+512)
 13769  016E' 0020               	movlb	0	; select bank0
 13770  016F' 0800'              	movf	?i1___fladd,w
 13771  0170' 0024               	movlb	4	; select bank4
 13772  0171' 0080'              	movwf	_vref^(0+512)
 13773  0172'                    i1l7353:
 13774                           
 13775                           ;charger_discharger.c: 193:                                 i_char = (uint16_t) ( ( ( (f
      +                          loat) basic_configuration.const_current_char * 4096.0 ) / (5000.0 * 2.5 ) ) + 0.5 );
 13776  0172' 0803'              	movf	(_basic_configuration^(0+512)+3),w
 13777  0173' 0080'              	movwf	i1___xxtofl@val
 13778  0174' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
 13779  0175' 0081'              	movwf	i1___xxtofl@val+1
 13780  0176' 0182'              	clrf	i1___xxtofl@val+2
 13781  0177' 0183'              	clrf	i1___xxtofl@val+3
 13782  0178' 3000               	movlw	0
 13783  0179' 3180' 2000' 3180'  	fcall	i1___xxtofl
 13784  017C' 0803'              	movf	?i1___xxtofl+3,w
 13785  017D' 0020               	movlb	0	; select bank0
 13786  017E' 00A3'              	movwf	i1___flmul@a+3
 13787  017F' 0802'              	movf	?i1___xxtofl+2,w
 13788  0180' 00A2'              	movwf	i1___flmul@a+2
 13789  0181' 0801'              	movf	?i1___xxtofl+1,w
 13790  0182' 00A1'              	movwf	i1___flmul@a+1
 13791  0183' 0800'              	movf	?i1___xxtofl,w
 13792  0184' 00A0'              	movwf	i1___flmul@a
 13793  0185' 3045               	movlw	69
 13794  0186' 009F'              	movwf	i1___flmul@b+3
 13795  0187' 3080               	movlw	128
 13796  0188' 009E'              	movwf	i1___flmul@b+2
 13797  0189' 3000               	movlw	0
 13798  018A' 009D'              	movwf	i1___flmul@b+1
 13799  018B' 3000               	movlw	0
 13800  018C' 009C'              	movwf	i1___flmul@b
 13801  018D' 3180' 2000' 3180'  	fcall	i1___flmul
 13802  0190' 0020               	movlb	0	; select bank0
 13803  0191' 081F'              	movf	?i1___flmul+3,w
 13804  0192' 00BD'              	movwf	i1___fldiv@b+3
 13805  0193' 081E'              	movf	?i1___flmul+2,w
 13806  0194' 00BC'              	movwf	i1___fldiv@b+2
 13807  0195' 081D'              	movf	?i1___flmul+1,w
 13808  0196' 00BB'              	movwf	i1___fldiv@b+1
 13809  0197' 081C'              	movf	?i1___flmul,w
 13810  0198' 00BA'              	movwf	i1___fldiv@b
 13811  0199' 3046               	movlw	70
 13812  019A' 00B9'              	movwf	i1___fldiv@a+3
 13813  019B' 3043               	movlw	67
 13814  019C' 00B8'              	movwf	i1___fldiv@a+2
 13815  019D' 3050               	movlw	80
 13816  019E' 00B7'              	movwf	i1___fldiv@a+1
 13817  019F' 3000               	movlw	0
 13818  01A0' 00B6'              	movwf	i1___fldiv@a
 13819  01A1' 3180' 2000' 3180'  	fcall	i1___fldiv
 13820  01A4' 0020               	movlb	0	; select bank0
 13821  01A5' 0839'              	movf	?i1___fldiv+3,w
 13822  01A6' 0087'              	movwf	i1___fladd@a+3
 13823  01A7' 0838'              	movf	?i1___fldiv+2,w
 13824  01A8' 0086'              	movwf	i1___fladd@a+2
 13825  01A9' 0837'              	movf	?i1___fldiv+1,w
 13826  01AA' 0085'              	movwf	i1___fladd@a+1
 13827  01AB' 0836'              	movf	?i1___fldiv,w
 13828  01AC' 0084'              	movwf	i1___fladd@a
 13829  01AD' 303F               	movlw	63
 13830  01AE' 0083'              	movwf	i1___fladd@b+3
 13831  01AF' 3000               	movlw	0
 13832  01B0' 0082'              	movwf	i1___fladd@b+2
 13833  01B1' 3000               	movlw	0
 13834  01B2' 0081'              	movwf	i1___fladd@b+1
 13835  01B3' 3000               	movlw	0
 13836  01B4' 0080'              	movwf	i1___fladd@b
 13837  01B5' 3180' 2000' 3180'  	fcall	i1___fladd
 13838  01B8' 0020               	movlb	0	; select bank0
 13839  01B9' 0803'              	movf	?i1___fladd+3,w
 13840  01BA' 0021               	movlb	1	; select bank1
 13841  01BB' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 13842  01BC' 0020               	movlb	0	; select bank0
 13843  01BD' 0802'              	movf	?i1___fladd+2,w
 13844  01BE' 0021               	movlb	1	; select bank1
 13845  01BF' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 13846  01C0' 0020               	movlb	0	; select bank0
 13847  01C1' 0801'              	movf	?i1___fladd+1,w
 13848  01C2' 0021               	movlb	1	; select bank1
 13849  01C3' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 13850  01C4' 0020               	movlb	0	; select bank0
 13851  01C5' 0800'              	movf	?i1___fladd,w
 13852  01C6' 0021               	movlb	1	; select bank1
 13853  01C7' 0080'              	movwf	i1___fltol@f1^(0+128)
 13854  01C8' 3180' 2000' 3180'  	fcall	i1___fltol
 13855  01CB' 0021               	movlb	1	; select bank1
 13856  01CC' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 13857  01CD' 0023               	movlb	3	; select bank3
 13858  01CE' 0080'              	movwf	(_i_char+1)^(0+384)
 13859  01CF' 0021               	movlb	1	; select bank1
 13860  01D0' 0800'              	movf	?i1___fltol^(0+128),w
 13861  01D1' 0023               	movlb	3	; select bank3
 13862  01D2' 0080'              	movwf	_i_char^(0+384)
 13863  01D3'                    i1l7355:
 13864                           
 13865                           ;charger_discharger.c: 194:                                 i_disc = (uint16_t) ( ( ( (f
      +                          loat) basic_configuration.const_current_disc * 4096.0 ) / (5000.0 * 2.5 ) ) + 0.5 );
 13866  01D3' 0024               	movlb	4	; select bank4
 13867  01D4' 0805'              	movf	(_basic_configuration^(0+512)+5),w
 13868  01D5' 0080'              	movwf	i1___xxtofl@val
 13869  01D6' 0805'              	movf	((_basic_configuration+1)^(0+512)+5),w
 13870  01D7' 0081'              	movwf	i1___xxtofl@val+1
 13871  01D8' 0182'              	clrf	i1___xxtofl@val+2
 13872  01D9' 0183'              	clrf	i1___xxtofl@val+3
 13873  01DA' 3000               	movlw	0
 13874  01DB' 3180' 2000' 3180'  	fcall	i1___xxtofl
 13875  01DE' 0803'              	movf	?i1___xxtofl+3,w
 13876  01DF' 0020               	movlb	0	; select bank0
 13877  01E0' 00A3'              	movwf	i1___flmul@a+3
 13878  01E1' 0802'              	movf	?i1___xxtofl+2,w
 13879  01E2' 00A2'              	movwf	i1___flmul@a+2
 13880  01E3' 0801'              	movf	?i1___xxtofl+1,w
 13881  01E4' 00A1'              	movwf	i1___flmul@a+1
 13882  01E5' 0800'              	movf	?i1___xxtofl,w
 13883  01E6' 00A0'              	movwf	i1___flmul@a
 13884  01E7' 3045               	movlw	69
 13885  01E8' 009F'              	movwf	i1___flmul@b+3
 13886  01E9' 3080               	movlw	128
 13887  01EA' 009E'              	movwf	i1___flmul@b+2
 13888  01EB' 3000               	movlw	0
 13889  01EC' 009D'              	movwf	i1___flmul@b+1
 13890  01ED' 3000               	movlw	0
 13891  01EE' 009C'              	movwf	i1___flmul@b
 13892  01EF' 3180' 2000' 3180'  	fcall	i1___flmul
 13893  01F2' 0020               	movlb	0	; select bank0
 13894  01F3' 081F'              	movf	?i1___flmul+3,w
 13895  01F4' 00BD'              	movwf	i1___fldiv@b+3
 13896  01F5' 081E'              	movf	?i1___flmul+2,w
 13897  01F6' 00BC'              	movwf	i1___fldiv@b+2
 13898  01F7' 081D'              	movf	?i1___flmul+1,w
 13899  01F8' 00BB'              	movwf	i1___fldiv@b+1
 13900  01F9' 081C'              	movf	?i1___flmul,w
 13901  01FA' 00BA'              	movwf	i1___fldiv@b
 13902  01FB' 3046               	movlw	70
 13903  01FC' 00B9'              	movwf	i1___fldiv@a+3
 13904  01FD' 3043               	movlw	67
 13905  01FE' 00B8'              	movwf	i1___fldiv@a+2
 13906  01FF' 3050               	movlw	80
 13907  0200' 00B7'              	movwf	i1___fldiv@a+1
 13908  0201' 3000               	movlw	0
 13909  0202' 00B6'              	movwf	i1___fldiv@a
 13910  0203' 3180' 2000' 3180'  	fcall	i1___fldiv
 13911  0206' 0020               	movlb	0	; select bank0
 13912  0207' 0839'              	movf	?i1___fldiv+3,w
 13913  0208' 0087'              	movwf	i1___fladd@a+3
 13914  0209' 0838'              	movf	?i1___fldiv+2,w
 13915  020A' 0086'              	movwf	i1___fladd@a+2
 13916  020B' 0837'              	movf	?i1___fldiv+1,w
 13917  020C' 0085'              	movwf	i1___fladd@a+1
 13918  020D' 0836'              	movf	?i1___fldiv,w
 13919  020E' 0084'              	movwf	i1___fladd@a
 13920  020F' 303F               	movlw	63
 13921  0210' 0083'              	movwf	i1___fladd@b+3
 13922  0211' 3000               	movlw	0
 13923  0212' 0082'              	movwf	i1___fladd@b+2
 13924  0213' 3000               	movlw	0
 13925  0214' 0081'              	movwf	i1___fladd@b+1
 13926  0215' 3000               	movlw	0
 13927  0216' 0080'              	movwf	i1___fladd@b
 13928  0217' 3180' 2000' 3180'  	fcall	i1___fladd
 13929  021A' 0020               	movlb	0	; select bank0
 13930  021B' 0803'              	movf	?i1___fladd+3,w
 13931  021C' 0021               	movlb	1	; select bank1
 13932  021D' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 13933  021E' 0020               	movlb	0	; select bank0
 13934  021F' 0802'              	movf	?i1___fladd+2,w
 13935  0220' 0021               	movlb	1	; select bank1
 13936  0221' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 13937  0222' 0020               	movlb	0	; select bank0
 13938  0223' 0801'              	movf	?i1___fladd+1,w
 13939  0224' 0021               	movlb	1	; select bank1
 13940  0225' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 13941  0226' 0020               	movlb	0	; select bank0
 13942  0227' 0800'              	movf	?i1___fladd,w
 13943  0228' 0021               	movlb	1	; select bank1
 13944  0229' 0080'              	movwf	i1___fltol@f1^(0+128)
 13945  022A' 3180' 2000' 3180'  	fcall	i1___fltol
 13946  022D' 0021               	movlb	1	; select bank1
 13947  022E' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 13948  022F' 0023               	movlb	3	; select bank3
 13949  0230' 0080'              	movwf	(_i_disc+1)^(0+384)
 13950  0231' 0021               	movlb	1	; select bank1
 13951  0232' 0800'              	movf	?i1___fltol^(0+128),w
 13952  0233' 0023               	movlb	3	; select bank3
 13953  0234' 0080'              	movwf	_i_disc^(0+384)
 13954  0235'                    i1l7357:
 13955                           
 13956                           ;charger_discharger.c: 195:                                 capacity = basic_configurati
      +                          on.capacity;
 13957  0235' 0024               	movlb	4	; select bank4
 13958  0236' 0807'              	movf	((_basic_configuration+1)^(0+512)+7),w
 13959  0237' 0023               	movlb	3	; select bank3
 13960  0238' 0080'              	movwf	(_capacity+1)^(0+384)
 13961  0239' 0024               	movlb	4	; select bank4
 13962  023A' 0807'              	movf	(_basic_configuration^(0+512)+7),w
 13963  023B' 0023               	movlb	3	; select bank3
 13964  023C' 0080'              	movwf	_capacity^(0+384)
 13965  023D'                    i1l7359:
 13966                           
 13967                           ;charger_discharger.c: 196:                                 EOC_variable = basic_configu
      +                          ration.end_of_charge;
 13968  023D' 0024               	movlb	4	; select bank4
 13969  023E' 0809'              	movf	((_basic_configuration+1)^(0+512)+9),w
 13970  023F' 0023               	movlb	3	; select bank3
 13971  0240' 0080'              	movwf	(_EOC_variable+1)^(0+384)
 13972  0241' 0024               	movlb	4	; select bank4
 13973  0242' 0809'              	movf	(_basic_configuration^(0+512)+9),w
 13974  0243' 0023               	movlb	3	; select bank3
 13975  0244' 0080'              	movwf	_EOC_variable^(0+384)
 13976  0245'                    i1l7361:
 13977                           
 13978                           ;charger_discharger.c: 197:                                 EOPC_variable = basic_config
      +                          uration.end_of_precharge;
 13979  0245' 0024               	movlb	4	; select bank4
 13980  0246' 080B'              	movf	((_basic_configuration+1)^(0+512)+11),w
 13981  0247' 0080'              	movwf	(_EOPC_variable+1)^(0+512)
 13982  0248' 080B'              	movf	(_basic_configuration^(0+512)+11),w
 13983  0249' 0080'              	movwf	_EOPC_variable^(0+512)
 13984  024A'                    i1l7363:
 13985                           
 13986                           ;charger_discharger.c: 198:                                 EOD_voltage = basic_configur
      +                          ation.end_of_discharge;
 13987  024A' 080D'              	movf	((_basic_configuration+1)^(0+512)+13),w
 13988  024B' 0080'              	movwf	(_EOD_voltage+1)^(0+512)
 13989  024C' 080D'              	movf	(_basic_configuration^(0+512)+13),w
 13990  024D' 0080'              	movwf	_EOD_voltage^(0+512)
 13991  024E'                    i1l7365:
 13992                           
 13993                           ;charger_discharger.c: 199:                                 EOPD_capacity = basic_config
      +                          uration.end_of_postdischarge;
 13994  024E' 080F'              	movf	((_basic_configuration+1)^(0+512)+15),w
 13995  024F' 0080'              	movwf	(_EOPD_capacity+1)^(0+512)
 13996  0250' 080F'              	movf	(_basic_configuration^(0+512)+15),w
 13997  0251' 0080'              	movwf	_EOPD_capacity^(0+512)
 13998                           
 13999                           ;charger_discharger.c: 200:                                 break;
 14000  0252' 2800'              	goto	i1l7427
 14001  0253'                    i1l7367:
 14002                           
 14003                           ;charger_discharger.c: 202:                                 put_data_into_structure(leng
      +                          th, (uint8_t*)data, (uint8_t*)test_configuration_ptr);
 14004  0253' 3000'              	movlw	(low (command_interpreter@data| 0))& (0+255)
 14005  0254' 0080'              	movwf	put_data_into_structure@data
 14006  0255' 0800'              	movf	_test_configuration_ptr^(0+128),w
 14007  0256' 0081'              	movwf	put_data_into_structure@structure
 14008  0257' 0800'              	movf	command_interpreter@length^(0+128),w
 14009  0258' 3180' 2000' 3180'  	fcall	_put_data_into_structure
 14010                           
 14011                           ;charger_discharger.c: 203:                                 break;
 14012  025B' 2800'              	goto	i1l7427
 14013  025C'                    i1l7369:
 14014                           
 14015                           ;charger_discharger.c: 205:                                 put_data_into_structure(leng
      +                          th, (uint8_t*)data, (uint8_t*)converter_configuration_ptr);
 14016  025C' 3000'              	movlw	(low (command_interpreter@data| 0))& (0+255)
 14017  025D' 0080'              	movwf	put_data_into_structure@data
 14018  025E' 0800'              	movf	_converter_configuration_ptr^(0+128),w
 14019  025F' 0081'              	movwf	put_data_into_structure@structure
 14020  0260' 0800'              	movf	command_interpreter@length^(0+128),w
 14021  0261' 3180' 2000' 3180'  	fcall	_put_data_into_structure
 14022  0264'                    i1l7371:
 14023                           
 14024                           ;charger_discharger.c: 206:                                 CV_kp = (float) ((converter_
      +                          configuration.CVKp) / 1000000.0);
 14025  0264' 3049               	movlw	73
 14026  0265' 0020               	movlb	0	; select bank0
 14027  0266' 00B9'              	movwf	i1___fldiv@a+3
 14028  0267' 3074               	movlw	116
 14029  0268' 00B8'              	movwf	i1___fldiv@a+2
 14030  0269' 3024               	movlw	36
 14031  026A' 00B7'              	movwf	i1___fldiv@a+1
 14032  026B' 3000               	movlw	0
 14033  026C' 00B6'              	movwf	i1___fldiv@a
 14034  026D' 0025               	movlb	5	; select bank5
 14035  026E' 0800'              	movf	_converter_configuration^(0+640),w
 14036  026F' 0080'              	movwf	i1___xxtofl@val
 14037  0270' 0800'              	movf	(_converter_configuration+1)^(0+640),w
 14038  0271' 0081'              	movwf	i1___xxtofl@val+1
 14039  0272' 0182'              	clrf	i1___xxtofl@val+2
 14040  0273' 0183'              	clrf	i1___xxtofl@val+3
 14041  0274' 3000               	movlw	0
 14042  0275' 3180' 2000' 3180'  	fcall	i1___xxtofl
 14043  0278' 0803'              	movf	?i1___xxtofl+3,w
 14044  0279' 0020               	movlb	0	; select bank0
 14045  027A' 00BD'              	movwf	i1___fldiv@b+3
 14046  027B' 0802'              	movf	?i1___xxtofl+2,w
 14047  027C' 00BC'              	movwf	i1___fldiv@b+2
 14048  027D' 0801'              	movf	?i1___xxtofl+1,w
 14049  027E' 00BB'              	movwf	i1___fldiv@b+1
 14050  027F' 0800'              	movf	?i1___xxtofl,w
 14051  0280' 00BA'              	movwf	i1___fldiv@b
 14052  0281' 3180' 2000' 3180'  	fcall	i1___fldiv
 14053  0284' 0020               	movlb	0	; select bank0
 14054  0285' 0839'              	movf	?i1___fldiv+3,w
 14055  0286' 0024               	movlb	4	; select bank4
 14056  0287' 0080'              	movwf	(_CV_kp+3)^(0+512)
 14057  0288' 0020               	movlb	0	; select bank0
 14058  0289' 0838'              	movf	?i1___fldiv+2,w
 14059  028A' 0024               	movlb	4	; select bank4
 14060  028B' 0080'              	movwf	(_CV_kp+2)^(0+512)
 14061  028C' 0020               	movlb	0	; select bank0
 14062  028D' 0837'              	movf	?i1___fldiv+1,w
 14063  028E' 0024               	movlb	4	; select bank4
 14064  028F' 0080'              	movwf	(_CV_kp+1)^(0+512)
 14065  0290' 0020               	movlb	0	; select bank0
 14066  0291' 0836'              	movf	?i1___fldiv,w
 14067  0292' 0024               	movlb	4	; select bank4
 14068  0293' 0080'              	movwf	_CV_kp^(0+512)
 14069  0294'                    i1l7373:
 14070                           
 14071                           ;charger_discharger.c: 207:                                 CV_ki = (float) ((converter_
      +                          configuration.CVKi) / 1000000.0);
 14072  0294' 3049               	movlw	73
 14073  0295' 0020               	movlb	0	; select bank0
 14074  0296' 00B9'              	movwf	i1___fldiv@a+3
 14075  0297' 3074               	movlw	116
 14076  0298' 00B8'              	movwf	i1___fldiv@a+2
 14077  0299' 3024               	movlw	36
 14078  029A' 00B7'              	movwf	i1___fldiv@a+1
 14079  029B' 3000               	movlw	0
 14080  029C' 00B6'              	movwf	i1___fldiv@a
 14081  029D' 0025               	movlb	5	; select bank5
 14082  029E' 0802'              	movf	(_converter_configuration^(0+640)+2),w
 14083  029F' 0080'              	movwf	i1___xxtofl@val
 14084  02A0' 0802'              	movf	((_converter_configuration+1)^(0+640)+2),w
 14085  02A1' 0081'              	movwf	i1___xxtofl@val+1
 14086  02A2' 0182'              	clrf	i1___xxtofl@val+2
 14087  02A3' 0183'              	clrf	i1___xxtofl@val+3
 14088  02A4' 3000               	movlw	0
 14089  02A5' 3180' 2000' 3180'  	fcall	i1___xxtofl
 14090  02A8' 0803'              	movf	?i1___xxtofl+3,w
 14091  02A9' 0020               	movlb	0	; select bank0
 14092  02AA' 00BD'              	movwf	i1___fldiv@b+3
 14093  02AB' 0802'              	movf	?i1___xxtofl+2,w
 14094  02AC' 00BC'              	movwf	i1___fldiv@b+2
 14095  02AD' 0801'              	movf	?i1___xxtofl+1,w
 14096  02AE' 00BB'              	movwf	i1___fldiv@b+1
 14097  02AF' 0800'              	movf	?i1___xxtofl,w
 14098  02B0' 00BA'              	movwf	i1___fldiv@b
 14099  02B1' 3180' 2000' 3180'  	fcall	i1___fldiv
 14100  02B4' 0020               	movlb	0	; select bank0
 14101  02B5' 0839'              	movf	?i1___fldiv+3,w
 14102  02B6' 0024               	movlb	4	; select bank4
 14103  02B7' 0080'              	movwf	(_CV_ki+3)^(0+512)
 14104  02B8' 0020               	movlb	0	; select bank0
 14105  02B9' 0838'              	movf	?i1___fldiv+2,w
 14106  02BA' 0024               	movlb	4	; select bank4
 14107  02BB' 0080'              	movwf	(_CV_ki+2)^(0+512)
 14108  02BC' 0020               	movlb	0	; select bank0
 14109  02BD' 0837'              	movf	?i1___fldiv+1,w
 14110  02BE' 0024               	movlb	4	; select bank4
 14111  02BF' 0080'              	movwf	(_CV_ki+1)^(0+512)
 14112  02C0' 0020               	movlb	0	; select bank0
 14113  02C1' 0836'              	movf	?i1___fldiv,w
 14114  02C2' 0024               	movlb	4	; select bank4
 14115  02C3' 0080'              	movwf	_CV_ki^(0+512)
 14116  02C4'                    i1l7375:
 14117                           
 14118                           ;charger_discharger.c: 208:                                 CV_kd = (float) ((converter_
      +                          configuration.CVKd) / 1000.0);
 14119  02C4' 3044               	movlw	68
 14120  02C5' 0020               	movlb	0	; select bank0
 14121  02C6' 00B9'              	movwf	i1___fldiv@a+3
 14122  02C7' 307A               	movlw	122
 14123  02C8' 00B8'              	movwf	i1___fldiv@a+2
 14124  02C9' 3000               	movlw	0
 14125  02CA' 00B7'              	movwf	i1___fldiv@a+1
 14126  02CB' 3000               	movlw	0
 14127  02CC' 00B6'              	movwf	i1___fldiv@a
 14128  02CD' 0025               	movlb	5	; select bank5
 14129  02CE' 0804'              	movf	(_converter_configuration^(0+640)+4),w
 14130  02CF' 0080'              	movwf	i1___xxtofl@val
 14131  02D0' 0804'              	movf	((_converter_configuration+1)^(0+640)+4),w
 14132  02D1' 0081'              	movwf	i1___xxtofl@val+1
 14133  02D2' 0182'              	clrf	i1___xxtofl@val+2
 14134  02D3' 0183'              	clrf	i1___xxtofl@val+3
 14135  02D4' 3000               	movlw	0
 14136  02D5' 3180' 2000' 3180'  	fcall	i1___xxtofl
 14137  02D8' 0803'              	movf	?i1___xxtofl+3,w
 14138  02D9' 0020               	movlb	0	; select bank0
 14139  02DA' 00BD'              	movwf	i1___fldiv@b+3
 14140  02DB' 0802'              	movf	?i1___xxtofl+2,w
 14141  02DC' 00BC'              	movwf	i1___fldiv@b+2
 14142  02DD' 0801'              	movf	?i1___xxtofl+1,w
 14143  02DE' 00BB'              	movwf	i1___fldiv@b+1
 14144  02DF' 0800'              	movf	?i1___xxtofl,w
 14145  02E0' 00BA'              	movwf	i1___fldiv@b
 14146  02E1' 3180' 2000' 3180'  	fcall	i1___fldiv
 14147  02E4' 0020               	movlb	0	; select bank0
 14148  02E5' 0839'              	movf	?i1___fldiv+3,w
 14149  02E6' 0024               	movlb	4	; select bank4
 14150  02E7' 0080'              	movwf	(_CV_kd+3)^(0+512)
 14151  02E8' 0020               	movlb	0	; select bank0
 14152  02E9' 0838'              	movf	?i1___fldiv+2,w
 14153  02EA' 0024               	movlb	4	; select bank4
 14154  02EB' 0080'              	movwf	(_CV_kd+2)^(0+512)
 14155  02EC' 0020               	movlb	0	; select bank0
 14156  02ED' 0837'              	movf	?i1___fldiv+1,w
 14157  02EE' 0024               	movlb	4	; select bank4
 14158  02EF' 0080'              	movwf	(_CV_kd+1)^(0+512)
 14159  02F0' 0020               	movlb	0	; select bank0
 14160  02F1' 0836'              	movf	?i1___fldiv,w
 14161  02F2' 0024               	movlb	4	; select bank4
 14162  02F3' 0080'              	movwf	_CV_kd^(0+512)
 14163  02F4'                    i1l7377:
 14164                           
 14165                           ;charger_discharger.c: 209:                                 CC_char_kp = (float) ((conve
      +                          rter_configuration.CCKpC) / 1000000.0);
 14166  02F4' 3049               	movlw	73
 14167  02F5' 0020               	movlb	0	; select bank0
 14168  02F6' 00B9'              	movwf	i1___fldiv@a+3
 14169  02F7' 3074               	movlw	116
 14170  02F8' 00B8'              	movwf	i1___fldiv@a+2
 14171  02F9' 3024               	movlw	36
 14172  02FA' 00B7'              	movwf	i1___fldiv@a+1
 14173  02FB' 3000               	movlw	0
 14174  02FC' 00B6'              	movwf	i1___fldiv@a
 14175  02FD' 0025               	movlb	5	; select bank5
 14176  02FE' 0806'              	movf	(_converter_configuration^(0+640)+6),w
 14177  02FF' 0080'              	movwf	i1___xxtofl@val
 14178  0300' 0806'              	movf	((_converter_configuration+1)^(0+640)+6),w
 14179  0301' 0081'              	movwf	i1___xxtofl@val+1
 14180  0302' 0182'              	clrf	i1___xxtofl@val+2
 14181  0303' 0183'              	clrf	i1___xxtofl@val+3
 14182  0304' 3000               	movlw	0
 14183  0305' 3180' 2000' 3180'  	fcall	i1___xxtofl
 14184  0308' 0803'              	movf	?i1___xxtofl+3,w
 14185  0309' 0020               	movlb	0	; select bank0
 14186  030A' 00BD'              	movwf	i1___fldiv@b+3
 14187  030B' 0802'              	movf	?i1___xxtofl+2,w
 14188  030C' 00BC'              	movwf	i1___fldiv@b+2
 14189  030D' 0801'              	movf	?i1___xxtofl+1,w
 14190  030E' 00BB'              	movwf	i1___fldiv@b+1
 14191  030F' 0800'              	movf	?i1___xxtofl,w
 14192  0310' 00BA'              	movwf	i1___fldiv@b
 14193  0311' 3180' 2000' 3180'  	fcall	i1___fldiv
 14194  0314' 0020               	movlb	0	; select bank0
 14195  0315' 0839'              	movf	?i1___fldiv+3,w
 14196  0316' 0023               	movlb	3	; select bank3
 14197  0317' 0080'              	movwf	(_CC_char_kp+3)^(0+384)
 14198  0318' 0020               	movlb	0	; select bank0
 14199  0319' 0838'              	movf	?i1___fldiv+2,w
 14200  031A' 0023               	movlb	3	; select bank3
 14201  031B' 0080'              	movwf	(_CC_char_kp+2)^(0+384)
 14202  031C' 0020               	movlb	0	; select bank0
 14203  031D' 0837'              	movf	?i1___fldiv+1,w
 14204  031E' 0023               	movlb	3	; select bank3
 14205  031F' 0080'              	movwf	(_CC_char_kp+1)^(0+384)
 14206  0320' 0020               	movlb	0	; select bank0
 14207  0321' 0836'              	movf	?i1___fldiv,w
 14208  0322' 0023               	movlb	3	; select bank3
 14209  0323' 0080'              	movwf	_CC_char_kp^(0+384)
 14210  0324'                    i1l7379:
 14211                           
 14212                           ;charger_discharger.c: 210:                                 CC_char_ki = (float) ((conve
      +                          rter_configuration.CCKiC) / 1000000.0);
 14213  0324' 3049               	movlw	73
 14214  0325' 0020               	movlb	0	; select bank0
 14215  0326' 00B9'              	movwf	i1___fldiv@a+3
 14216  0327' 3074               	movlw	116
 14217  0328' 00B8'              	movwf	i1___fldiv@a+2
 14218  0329' 3024               	movlw	36
 14219  032A' 00B7'              	movwf	i1___fldiv@a+1
 14220  032B' 3000               	movlw	0
 14221  032C' 00B6'              	movwf	i1___fldiv@a
 14222  032D' 0025               	movlb	5	; select bank5
 14223  032E' 0808'              	movf	(_converter_configuration^(0+640)+8),w
 14224  032F' 0080'              	movwf	i1___xxtofl@val
 14225  0330' 0808'              	movf	((_converter_configuration+1)^(0+640)+8),w
 14226  0331' 0081'              	movwf	i1___xxtofl@val+1
 14227  0332' 0182'              	clrf	i1___xxtofl@val+2
 14228  0333' 0183'              	clrf	i1___xxtofl@val+3
 14229  0334' 3000               	movlw	0
 14230  0335' 3180' 2000' 3180'  	fcall	i1___xxtofl
 14231  0338' 0803'              	movf	?i1___xxtofl+3,w
 14232  0339' 0020               	movlb	0	; select bank0
 14233  033A' 00BD'              	movwf	i1___fldiv@b+3
 14234  033B' 0802'              	movf	?i1___xxtofl+2,w
 14235  033C' 00BC'              	movwf	i1___fldiv@b+2
 14236  033D' 0801'              	movf	?i1___xxtofl+1,w
 14237  033E' 00BB'              	movwf	i1___fldiv@b+1
 14238  033F' 0800'              	movf	?i1___xxtofl,w
 14239  0340' 00BA'              	movwf	i1___fldiv@b
 14240  0341' 3180' 2000' 3180'  	fcall	i1___fldiv
 14241  0344' 0020               	movlb	0	; select bank0
 14242  0345' 0839'              	movf	?i1___fldiv+3,w
 14243  0346' 0023               	movlb	3	; select bank3
 14244  0347' 0080'              	movwf	(_CC_char_ki+3)^(0+384)
 14245  0348' 0020               	movlb	0	; select bank0
 14246  0349' 0838'              	movf	?i1___fldiv+2,w
 14247  034A' 0023               	movlb	3	; select bank3
 14248  034B' 0080'              	movwf	(_CC_char_ki+2)^(0+384)
 14249  034C' 0020               	movlb	0	; select bank0
 14250  034D' 0837'              	movf	?i1___fldiv+1,w
 14251  034E' 0023               	movlb	3	; select bank3
 14252  034F' 0080'              	movwf	(_CC_char_ki+1)^(0+384)
 14253  0350' 0020               	movlb	0	; select bank0
 14254  0351' 0836'              	movf	?i1___fldiv,w
 14255  0352' 0023               	movlb	3	; select bank3
 14256  0353' 0080'              	movwf	_CC_char_ki^(0+384)
 14257  0354'                    i1l7381:
 14258                           
 14259                           ;charger_discharger.c: 211:                                 CC_disc_kp = (float) ((conve
      +                          rter_configuration.CCKpD) / 1000000.0);
 14260  0354' 3049               	movlw	73
 14261  0355' 0020               	movlb	0	; select bank0
 14262  0356' 00B9'              	movwf	i1___fldiv@a+3
 14263  0357' 3074               	movlw	116
 14264  0358' 00B8'              	movwf	i1___fldiv@a+2
 14265  0359' 3024               	movlw	36
 14266  035A' 00B7'              	movwf	i1___fldiv@a+1
 14267  035B' 3000               	movlw	0
 14268  035C' 00B6'              	movwf	i1___fldiv@a
 14269  035D' 0025               	movlb	5	; select bank5
 14270  035E' 080A'              	movf	(_converter_configuration^(0+640)+10),w
 14271  035F' 0080'              	movwf	i1___xxtofl@val
 14272  0360' 080A'              	movf	((_converter_configuration+1)^(0+640)+10),w
 14273  0361' 0081'              	movwf	i1___xxtofl@val+1
 14274  0362' 0182'              	clrf	i1___xxtofl@val+2
 14275  0363' 0183'              	clrf	i1___xxtofl@val+3
 14276  0364' 3000               	movlw	0
 14277  0365' 3180' 2000' 3180'  	fcall	i1___xxtofl
 14278  0368' 0803'              	movf	?i1___xxtofl+3,w
 14279  0369' 0020               	movlb	0	; select bank0
 14280  036A' 00BD'              	movwf	i1___fldiv@b+3
 14281  036B' 0802'              	movf	?i1___xxtofl+2,w
 14282  036C' 00BC'              	movwf	i1___fldiv@b+2
 14283  036D' 0801'              	movf	?i1___xxtofl+1,w
 14284  036E' 00BB'              	movwf	i1___fldiv@b+1
 14285  036F' 0800'              	movf	?i1___xxtofl,w
 14286  0370' 00BA'              	movwf	i1___fldiv@b
 14287  0371' 3180' 2000' 3180'  	fcall	i1___fldiv
 14288  0374' 0020               	movlb	0	; select bank0
 14289  0375' 0839'              	movf	?i1___fldiv+3,w
 14290  0376' 0023               	movlb	3	; select bank3
 14291  0377' 0080'              	movwf	(_CC_disc_kp+3)^(0+384)
 14292  0378' 0020               	movlb	0	; select bank0
 14293  0379' 0838'              	movf	?i1___fldiv+2,w
 14294  037A' 0023               	movlb	3	; select bank3
 14295  037B' 0080'              	movwf	(_CC_disc_kp+2)^(0+384)
 14296  037C' 0020               	movlb	0	; select bank0
 14297  037D' 0837'              	movf	?i1___fldiv+1,w
 14298  037E' 0023               	movlb	3	; select bank3
 14299  037F' 0080'              	movwf	(_CC_disc_kp+1)^(0+384)
 14300  0380' 0020               	movlb	0	; select bank0
 14301  0381' 0836'              	movf	?i1___fldiv,w
 14302  0382' 0023               	movlb	3	; select bank3
 14303  0383' 0080'              	movwf	_CC_disc_kp^(0+384)
 14304  0384'                    i1l7383:
 14305                           
 14306                           ;charger_discharger.c: 212:                                 CC_disc_ki = (float) ((conve
      +                          rter_configuration.CCKiD) / 1000000.0);
 14307  0384' 3049               	movlw	73
 14308  0385' 0020               	movlb	0	; select bank0
 14309  0386' 00B9'              	movwf	i1___fldiv@a+3
 14310  0387' 3074               	movlw	116
 14311  0388' 00B8'              	movwf	i1___fldiv@a+2
 14312  0389' 3024               	movlw	36
 14313  038A' 00B7'              	movwf	i1___fldiv@a+1
 14314  038B' 3000               	movlw	0
 14315  038C' 00B6'              	movwf	i1___fldiv@a
 14316  038D' 0025               	movlb	5	; select bank5
 14317  038E' 080C'              	movf	(_converter_configuration^(0+640)+12),w
 14318  038F' 0080'              	movwf	i1___xxtofl@val
 14319  0390' 080C'              	movf	((_converter_configuration+1)^(0+640)+12),w
 14320  0391' 0081'              	movwf	i1___xxtofl@val+1
 14321  0392' 0182'              	clrf	i1___xxtofl@val+2
 14322  0393' 0183'              	clrf	i1___xxtofl@val+3
 14323  0394' 3000               	movlw	0
 14324  0395' 3180' 2000' 3180'  	fcall	i1___xxtofl
 14325  0398' 0803'              	movf	?i1___xxtofl+3,w
 14326  0399' 0020               	movlb	0	; select bank0
 14327  039A' 00BD'              	movwf	i1___fldiv@b+3
 14328  039B' 0802'              	movf	?i1___xxtofl+2,w
 14329  039C' 00BC'              	movwf	i1___fldiv@b+2
 14330  039D' 0801'              	movf	?i1___xxtofl+1,w
 14331  039E' 00BB'              	movwf	i1___fldiv@b+1
 14332  039F' 0800'              	movf	?i1___xxtofl,w
 14333  03A0' 00BA'              	movwf	i1___fldiv@b
 14334  03A1' 3180' 2000' 3180'  	fcall	i1___fldiv
 14335  03A4' 0020               	movlb	0	; select bank0
 14336  03A5' 0839'              	movf	?i1___fldiv+3,w
 14337  03A6' 0023               	movlb	3	; select bank3
 14338  03A7' 0080'              	movwf	(_CC_disc_ki+3)^(0+384)
 14339  03A8' 0020               	movlb	0	; select bank0
 14340  03A9' 0838'              	movf	?i1___fldiv+2,w
 14341  03AA' 0023               	movlb	3	; select bank3
 14342  03AB' 0080'              	movwf	(_CC_disc_ki+2)^(0+384)
 14343  03AC' 0020               	movlb	0	; select bank0
 14344  03AD' 0837'              	movf	?i1___fldiv+1,w
 14345  03AE' 0023               	movlb	3	; select bank3
 14346  03AF' 0080'              	movwf	(_CC_disc_ki+1)^(0+384)
 14347  03B0' 0020               	movlb	0	; select bank0
 14348  03B1' 0836'              	movf	?i1___fldiv,w
 14349  03B2' 0023               	movlb	3	; select bank3
 14350  03B3' 0080'              	movwf	_CC_disc_ki^(0+384)
 14351                           
 14352                           ;charger_discharger.c: 213:                                 break;
 14353  03B4' 2800'              	goto	i1l7427
 14354  03B5'                    i1l7387:
 14355  03B5' 0800'              	movf	command_interpreter@code^(0+128),w
 14356  03B6' 0080'              	movwf	??_command_interpreter^(0+128)
 14357  03B7' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 14358                           
 14359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14360                           ; Switch size 1, requested type "simple"
 14361                           ; Number of cases is 1, Range of values is 0 to 0
 14362                           ; switch strategies available:
 14363                           ; Name         Instructions Cycles
 14364                           ; simple_byte            4     3 (average)
 14365                           ; direct_byte            8     6 (fixed)
 14366                           ; jumptable            260     6 (fixed)
 14367                           ;	Chosen strategy is simple_byte
 14368  03B8' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 14369  03B9' 3A00               	xorlw	0	; case 0
 14370  03BA' 1903               	skipnz
 14371  03BB' 2800'              	goto	i1l7763
 14372  03BC' 2800'              	goto	i1l358
 14373  03BD'                    i1l7763:
 14374                           
 14375                           ; Switch size 1, requested type "simple"
 14376                           ; Number of cases is 3, Range of values is 3 to 7
 14377                           ; switch strategies available:
 14378                           ; Name         Instructions Cycles
 14379                           ; simple_byte           10     6 (average)
 14380                           ; direct_byte           19     9 (fixed)
 14381                           ; jumptable            263     9 (fixed)
 14382                           ;	Chosen strategy is simple_byte
 14383  03BD' 0800'              	movf	??_command_interpreter^(0+128),w
 14384  03BE' 3A03               	xorlw	3	; case 3
 14385  03BF' 1903               	skipnz
 14386  03C0' 2800'              	goto	i1l7349
 14387  03C1' 3A06               	xorlw	6	; case 5
 14388  03C2' 1903               	skipnz
 14389  03C3' 2800'              	goto	i1l7367
 14390  03C4' 3A02               	xorlw	2	; case 7
 14391  03C5' 1903               	skipnz
 14392  03C6' 2800'              	goto	i1l7369
 14393  03C7' 2800'              	goto	i1l358
 14394  03C8'                    i1l7389:
 14395                           
 14396                           ;charger_discharger.c: 217:                         if (code == 0x05)
 14397  03C8' 3005               	movlw	5
 14398  03C9' 0600'              	xorwf	command_interpreter@code^(0+128),w
 14399  03CA' 1D03               	btfss	3,2
 14400  03CB' 2800'              	goto	u733_21
 14401  03CC' 2800'              	goto	u733_20
 14402  03CD'                    u733_21:
 14403  03CD' 2800'              	goto	i1l358
 14404  03CE'                    u733_20:
 14405  03CE'                    i1l7391:
 14406                           
 14407                           ;charger_discharger.c: 218:                         {;charger_discharger.c: 219:        
      +                                               counter_state = 0;
 14408  03CE' 0180'              	clrf	_counter_state^(0+128)
 14409  03CF'                    i1l7393:
 14410                           
 14411                           ;charger_discharger.c: 220:                             state = test_configuration.order
      +                          _of_states[counter_state];
 14412  03CF' 0800'              	movf	_counter_state^(0+128),w
 14413  03D0' 3E00'              	addlw	(low ((_test_configuration| (0+512)+7)))& (0+255)
 14414  03D1' 0086               	movwf	6
 14415  03D2' 3002               	movlw	2	; select bank4/5
 14416  03D3' 0087               	movwf	7
 14417  03D4' 0801               	movf	1,w
 14418  03D5' 0023               	movlb	3	; select bank3
 14419  03D6' 0080'              	movwf	_state^(0+384)
 14420  03D7'                    i1l7395:
 14421                           
 14422                           ;charger_discharger.c: 221:                             cell_count = 0x01;
 14423  03D7' 0180'              	clrf	_cell_count^(0+384)
 14424  03D8' 0A80'              	incf	_cell_count^(0+384),f
 14425  03D9'                    i1l7397:
 14426                           
 14427                           ;charger_discharger.c: 222:                             repetition_counter = 0x01;
 14428  03D9' 0180'              	clrf	_repetition_counter^(0+384)
 14429  03DA' 0A80'              	incf	_repetition_counter^(0+384),f
 14430  03DB'                    i1l7399:
 14431                           
 14432                           ;charger_discharger.c: 223:                             converter_settings();
 14433  03DB' 3180' 2000' 3180'  	fcall	i1_converter_settings
 14434  03DE'                    i1l7401:
 14435                           
 14436                           ;charger_discharger.c: 224:                             start = 1;
 14437  03DE' 0021               	movlb	1	; select bank1
 14438  03DF' 0180'              	clrf	_start^(0+128)
 14439  03E0' 0A80'              	incf	_start^(0+128),f
 14440  03E1' 2800'              	goto	i1l7427
 14441  03E2'                    i1l7405:
 14442  03E2' 0800'              	movf	command_interpreter@operation^(0+128),w
 14443  03E3' 0080'              	movwf	??_command_interpreter^(0+128)
 14444  03E4' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 14445                           
 14446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14447                           ; Switch size 1, requested type "simple"
 14448                           ; Number of cases is 1, Range of values is 0 to 0
 14449                           ; switch strategies available:
 14450                           ; Name         Instructions Cycles
 14451                           ; simple_byte            4     3 (average)
 14452                           ; direct_byte            8     6 (fixed)
 14453                           ; jumptable            260     6 (fixed)
 14454                           ;	Chosen strategy is simple_byte
 14455  03E5' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 14456  03E6' 3A00               	xorlw	0	; case 0
 14457  03E7' 1903               	skipnz
 14458  03E8' 2800'              	goto	i1l7765
 14459  03E9' 2800'              	goto	i1l7427
 14460  03EA'                    i1l7765:
 14461                           
 14462                           ; Switch size 1, requested type "simple"
 14463                           ; Number of cases is 3, Range of values is 15 to 165
 14464                           ; switch strategies available:
 14465                           ; Name         Instructions Cycles
 14466                           ; simple_byte           10     6 (average)
 14467                           ; jumptable            263     9 (fixed)
 14468                           ;	Chosen strategy is simple_byte
 14469  03EA' 0800'              	movf	??_command_interpreter^(0+128),w
 14470  03EB' 3A0F               	xorlw	15	; case 15
 14471  03EC' 1903               	skipnz
 14472  03ED' 2800'              	goto	i1l7389
 14473  03EE' 3A55               	xorlw	85	; case 90
 14474  03EF' 1903               	skipnz
 14475  03F0' 2800'              	goto	i1l7387
 14476  03F1' 3AFF               	xorlw	255	; case 165
 14477  03F2' 1903               	skipnz
 14478  03F3' 2800'              	goto	i1l7315
 14479  03F4' 2800'              	goto	i1l7427
 14480  03F5'                    i1l7407:
 14481  03F5' 0021               	movlb	1	; select bank1
 14482  03F6' 0180'              	clrf	command_interpreter@test^(0+128)
 14483  03F7' 2800'              	goto	i1l7427
 14484  03F8'                    i1l358:
 14485                           
 14486                           ;charger_discharger.c: 230:     }else
 14487  03F8' 2800'              	goto	i1l7427
 14488  03F9'                    i1l7409:
 14489                           
 14490                           ;charger_discharger.c: 231:     {;charger_discharger.c: 232:         code = UART_get_byt
      +                          e();
 14491  03F9' 3180' 2000' 3180'  	fcall	_UART_get_byte
 14492  03FC' 0021               	movlb	1	; select bank1
 14493  03FD' 0080'              	movwf	command_interpreter@code^(0+128)
 14494                           
 14495                           ;charger_discharger.c: 233:         switch (code)
 14496  03FE' 2800'              	goto	i1l7425
 14497  03FF'                    i1l361:	
 14498                           ;charger_discharger.c: 234:         {;charger_discharger.c: 235:             case 0x03:
 14499                           
 14500                           
 14501                           ;charger_discharger.c: 236:                 state = IDLE;
 14502  03FF' 0023               	movlb	3	; select bank3
 14503  0400' 0180'              	clrf	_state^(0+384)
 14504  0401' 0A80'              	incf	_state^(0+384),f
 14505                           
 14506                           ;charger_discharger.c: 237:                 break;
 14507  0402' 2800'              	goto	i1l7427
 14508  0403'                    i1l7411:
 14509                           
 14510                           ;charger_discharger.c: 239:                 counter_state = test_configuration.number_of
      +                          _states + 1;
 14511  0403' 0024               	movlb	4	; select bank4
 14512  0404' 0801'              	movf	(_test_configuration^(0+512)+1),w
 14513  0405' 3E01               	addlw	1
 14514  0406' 0021               	movlb	1	; select bank1
 14515  0407' 0080'              	movwf	_counter_state^(0+128)
 14516  0408'                    i1l7413:
 14517                           
 14518                           ;charger_discharger.c: 240:                 wait_count = getTime();
 14519  0408' 3180' 2000' 3180'  	fcall	i1_getTime
 14520  040B' 0021               	movlb	1	; select bank1
 14521  040C' 0080'              	movwf	??_command_interpreter^(0+128)
 14522  040D' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 14523  040E' 0800'              	movf	??_command_interpreter^(0+128),w
 14524  040F' 0023               	movlb	3	; select bank3
 14525  0410' 0080'              	movwf	_wait_count^(0+384)
 14526  0411' 0021               	movlb	1	; select bank1
 14527  0412' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 14528  0413' 0023               	movlb	3	; select bank3
 14529  0414' 0080'              	movwf	(_wait_count+1)^(0+384)
 14530  0415'                    i1l7415:
 14531                           
 14532                           ;charger_discharger.c: 241:                 state = WAIT;
 14533  0415' 300D               	movlw	13
 14534  0416' 0080'              	movwf	_state^(0+384)
 14535                           
 14536                           ;charger_discharger.c: 242:                 break;
 14537  0417' 2800'              	goto	i1l7427
 14538  0418'                    i1l7425:
 14539  0418' 0800'              	movf	command_interpreter@code^(0+128),w
 14540  0419' 0080'              	movwf	??_command_interpreter^(0+128)
 14541  041A' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 14542                           
 14543                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14544                           ; Switch size 1, requested type "simple"
 14545                           ; Number of cases is 1, Range of values is 0 to 0
 14546                           ; switch strategies available:
 14547                           ; Name         Instructions Cycles
 14548                           ; simple_byte            4     3 (average)
 14549                           ; direct_byte            8     6 (fixed)
 14550                           ; jumptable            260     6 (fixed)
 14551                           ;	Chosen strategy is simple_byte
 14552  041B' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 14553  041C' 3A00               	xorlw	0	; case 0
 14554  041D' 1903               	skipnz
 14555  041E' 2800'              	goto	i1l7767
 14556  041F' 2800'              	goto	i1l7407
 14557  0420'                    i1l7767:
 14558                           
 14559                           ; Switch size 1, requested type "simple"
 14560                           ; Number of cases is 3, Range of values is 3 to 9
 14561                           ; switch strategies available:
 14562                           ; Name         Instructions Cycles
 14563                           ; simple_byte           10     6 (average)
 14564                           ; direct_byte           23     9 (fixed)
 14565                           ; jumptable            263     9 (fixed)
 14566                           ;	Chosen strategy is simple_byte
 14567  0420' 0800'              	movf	??_command_interpreter^(0+128),w
 14568  0421' 3A03               	xorlw	3	; case 3
 14569  0422' 1903               	skipnz
 14570  0423' 2800'              	goto	i1l361
 14571  0424' 3A04               	xorlw	4	; case 7
 14572  0425' 1903               	skipnz
 14573  0426' 2800'              	goto	i1l7411
 14574  0427' 3A0E               	xorlw	14	; case 9
 14575  0428' 1903               	skipnz
 14576  0429' 2800'              	goto	i1l7413
 14577  042A' 2800'              	goto	i1l7407
 14578  042B'                    i1l7427:
 14579                           
 14580                           ;charger_discharger.c: 252:     return (test);
 14581  042B' 0021               	movlb	1	; select bank1
 14582  042C' 0800'              	movf	command_interpreter@test^(0+128),w
 14583  042D'                    i1l366:
 14584  042D' 0008               	return
 14585  042E'                    __end_of_command_interpreter:
 14586                           
 14587                           	psect	text37
 14588  0000'                    __ptext37:	
 14589 ;; *************** function i1_getTime *****************
 14590 ;; Defined at:
 14591 ;;		line 565 in file "charger_discharger.c"
 14592 ;; Parameters:    Size  Location     Type
 14593 ;;		None
 14594 ;; Auto vars:     Size  Location     Type
 14595 ;;		None
 14596 ;; Return value:  Size  Location     Type
 14597 ;;                  1    wreg      unsigned char 
 14598 ;; Registers used:
 14599 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14600 ;; Tracked objects:
 14601 ;;		On entry : 0/0
 14602 ;;		On exit  : 0/0
 14603 ;;		Unchanged: 0/0
 14604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14608 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14609 ;;Total ram usage:        2 bytes
 14610 ;; Hardware stack levels used: 1
 14611 ;; This function calls:
 14612 ;;		Nothing
 14613 ;; This function is called by:
 14614 ;;		_command_interpreter
 14615 ;; This function uses a non-reentrant model
 14616 ;;
 14617                           
 14618  0000'                    i1_getTime:	
 14619                           ;psect for function i1_getTime
 14620                           
 14621  0000'                    i1l6253:	
 14622                           ;incstack = 0
 14623                           ; Regs used in i1_getTime: [wreg+fsr1l+fsr1h+status,2+status,0]
 14624                           
 14625                           
 14626                           ;charger_discharger.c: 566:     if ((counter_state + 1 <= test_configuration.number_of_s
      +                          tates) && (test_configuration.order_of_states[counter_state + 1] != 0x00)){
 14627  0000' 0021               	movlb	1	; select bank1
 14628  0001' 0800'              	movf	_counter_state^(0+128),w
 14629  0002' 3E01               	addlw	1
 14630  0003' 0080'              	movwf	??i1_getTime
 14631  0004' 3000               	movlw	0
 14632  0005' 1803               	skipnc
 14633  0006' 3001               	movlw	1
 14634  0007' 0081'              	movwf	??i1_getTime+1
 14635  0008' 0801'              	movf	??i1_getTime+1,w
 14636  0009' 3A80               	xorlw	128
 14637  000A' 3C80               	sublw	128
 14638  000B' 1D03               	skipz
 14639  000C' 2800'              	goto	u687_25
 14640  000D' 0800'              	movf	??i1_getTime,w
 14641  000E' 0024               	movlb	4	; select bank4
 14642  000F' 0201'              	subwf	(_test_configuration^(0+512)+1),w
 14643  0010'                    u687_25:
 14644  0010' 1C03               	skipc
 14645  0011' 2800'              	goto	u687_21
 14646  0012' 2800'              	goto	u687_20
 14647  0013'                    u687_21:
 14648  0013' 2800'              	goto	i1l6263
 14649  0014'                    u687_20:
 14650  0014'                    i1l6255:
 14651  0014' 0021               	movlb	1	; select bank1
 14652  0015' 0800'              	movf	_counter_state^(0+128),w
 14653  0016' 3E00'              	addlw	(low ((_test_configuration| (0+512)+8)))& (0+255)
 14654  0017' 0086               	movwf	6
 14655  0018' 3002               	movlw	2	; select bank4/5
 14656  0019' 0087               	movwf	7
 14657  001A' 0801               	movf	1,w
 14658  001B' 1903               	btfsc	3,2
 14659  001C' 2800'              	goto	u688_21
 14660  001D' 2800'              	goto	u688_20
 14661  001E'                    u688_21:
 14662  001E' 2800'              	goto	i1l6263
 14663  001F'                    u688_20:
 14664  001F'                    i1l6257:
 14665                           
 14666                           ;charger_discharger.c: 567:         return test_configuration.wait_time;
 14667  001F' 0024               	movlb	4	; select bank4
 14668  0020' 0803'              	movf	(_test_configuration^(0+512)+3),w
 14669  0021' 2800'              	goto	i1l491
 14670  0022'                    i1l6263:
 14671  0022' 0024               	movlb	4	; select bank4
 14672  0023' 0800'              	movf	_test_configuration^(0+512),w
 14673  0024' 0023               	movlb	3	; select bank3
 14674  0025' 0200'              	subwf	_cell_count^(0+384),w
 14675  0026' 1803               	skipnc
 14676  0027' 2800'              	goto	u689_21
 14677  0028' 2800'              	goto	u689_20
 14678  0029'                    u689_21:
 14679  0029' 2800'              	goto	i1l6271
 14680  002A'                    u689_20:
 14681  002A' 2800'              	goto	i1l6257
 14682  002B'                    i1l6271:
 14683                           
 14684                           ;charger_discharger.c: 573:         return test_configuration.end_wait_time;
 14685  002B' 0024               	movlb	4	; select bank4
 14686  002C' 0805'              	movf	(_test_configuration^(0+512)+5),w
 14687  002D'                    i1l491:
 14688  002D' 0008               	return
 14689  002E'                    __end_ofi1_getTime:
 14690                           
 14691                           	psect	text38
 14692  0000'                    __ptext38:	
 14693 ;; *************** function i1_converter_settings *****************
 14694 ;; Defined at:
 14695 ;;		line 208 in file "state_machine_b.c"
 14696 ;; Parameters:    Size  Location     Type
 14697 ;;		None
 14698 ;; Auto vars:     Size  Location     Type
 14699 ;;		None
 14700 ;; Return value:  Size  Location     Type
 14701 ;;                  1    wreg      void 
 14702 ;; Registers used:
 14703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14704 ;; Tracked objects:
 14705 ;;		On entry : 0/0
 14706 ;;		On exit  : 0/0
 14707 ;;		Unchanged: 0/0
 14708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14710 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14711 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14712 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 14713 ;;Total ram usage:        8 bytes
 14714 ;; Hardware stack levels used: 1
 14715 ;; Hardware stack levels required when called: 2
 14716 ;; This function calls:
 14717 ;;		i1_Cell_ON
 14718 ;;		i1___fladd
 14719 ;;		i1___fldiv
 14720 ;;		i1___flmul
 14721 ;;		i1___fltol
 14722 ;;		i1___xxtofl
 14723 ;;		i1_set_DC
 14724 ;; This function is called by:
 14725 ;;		_command_interpreter
 14726 ;; This function uses a non-reentrant model
 14727 ;;
 14728                           
 14729  0000'                    i1_converter_settings:	
 14730                           ;psect for function i1_converter_settings
 14731                           
 14732  0000'                    i1l6275:	
 14733                           ;incstack = 0
 14734                           ; Regs used in i1_converter_settings: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14735                           
 14736                           
 14737                           ;state_machine_b.c: 211:     cmode = 1;
 14738  0000' 0021               	movlb	1	; select bank1
 14739  0001' 0180'              	clrf	_cmode^(0+128)
 14740  0002' 0A80'              	incf	_cmode^(0+128),f
 14741  0003'                    i1l6277:
 14742                           
 14743                           ;state_machine_b.c: 212:     pidi = 0;
 14744  0003' 3000               	movlw	0
 14745  0004' 0024               	movlb	4	; select bank4
 14746  0005' 0080'              	movwf	(_pidi+3)^(0+512)
 14747  0006' 3000               	movlw	0
 14748  0007' 0080'              	movwf	(_pidi+2)^(0+512)
 14749  0008' 3000               	movlw	0
 14750  0009' 0080'              	movwf	(_pidi+1)^(0+512)
 14751  000A' 3000               	movlw	0
 14752  000B' 0080'              	movwf	_pidi^(0+512)
 14753                           
 14754                           ;state_machine_b.c: 213:     qavg = 0;
 14755  000C' 3000               	movlw	0
 14756  000D' 0023               	movlb	3	; select bank3
 14757  000E' 0080'              	movwf	(_qavg+3)^(0+384)
 14758  000F' 3000               	movlw	0
 14759  0010' 0080'              	movwf	(_qavg+2)^(0+384)
 14760  0011' 3000               	movlw	0
 14761  0012' 0080'              	movwf	(_qavg+1)^(0+384)
 14762  0013' 3000               	movlw	0
 14763  0014' 0080'              	movwf	_qavg^(0+384)
 14764  0015'                    i1l6279:
 14765                           
 14766                           ;state_machine_b.c: 214:     vmax = 0;
 14767  0015' 0180'              	clrf	_vmax^(0+384)
 14768  0016' 0180'              	clrf	(_vmax+1)^(0+384)
 14769  0017'                    i1l6281:
 14770                           
 14771                           ;state_machine_b.c: 215:     pidt = 50.0;
 14772  0017' 3042               	movlw	66
 14773  0018' 0080'              	movwf	(_pidt+3)^(0+384)
 14774  0019' 3048               	movlw	72
 14775  001A' 0080'              	movwf	(_pidt+2)^(0+384)
 14776  001B' 3000               	movlw	0
 14777  001C' 0080'              	movwf	(_pidt+1)^(0+384)
 14778  001D' 3000               	movlw	0
 14779  001E' 0080'              	movwf	_pidt^(0+384)
 14780  001F'                    i1l6283:
 14781                           
 14782                           ;state_machine_b.c: 216:     set_DC();
 14783  001F' 3180' 2000' 3180'  	fcall	i1_set_DC
 14784  0022'                    i1l6285:
 14785                           
 14786                           ;state_machine_b.c: 217:     Cell_ON();
 14787  0022' 3180' 2000' 3180'  	fcall	i1_Cell_ON
 14788                           
 14789                           ;state_machine_b.c: 218:     switch(state)
 14790  0025' 2800'              	goto	i1l6423
 14791  0026'                    i1l6287:
 14792                           
 14793                           ;state_machine_b.c: 221:             iref = i_char;
 14794  0026' 0023               	movlb	3	; select bank3
 14795  0027' 0800'              	movf	(_i_char+1)^(0+384),w
 14796  0028' 0021               	movlb	1	; select bank1
 14797  0029' 0080'              	movwf	(_iref+1)^(0+128)
 14798  002A' 0023               	movlb	3	; select bank3
 14799  002B' 0800'              	movf	_i_char^(0+384),w
 14800  002C' 0021               	movlb	1	; select bank1
 14801  002D' 0080'              	movwf	_iref^(0+128)
 14802  002E'                    i1l6289:
 14803                           
 14804                           ;state_machine_b.c: 222:             if(basic_configuration.version == 0x02) timeout = (
      +                          uint16_t)(((float)capacity / (float)basic_configuration.const_current_char) * 3600 * 1.1
      +                          );
 14805  002E' 3002               	movlw	2
 14806  002F' 0024               	movlb	4	; select bank4
 14807  0030' 0600'              	xorwf	_basic_configuration^(0+512),w
 14808  0031' 1D03               	btfss	3,2
 14809  0032' 2800'              	goto	u690_21
 14810  0033' 2800'              	goto	u690_20
 14811  0034'                    u690_21:
 14812  0034' 2800'              	goto	i1l6293
 14813  0035'                    u690_20:
 14814  0035'                    i1l6291:
 14815  0035' 0023               	movlb	3	; select bank3
 14816  0036' 0800'              	movf	_capacity^(0+384),w
 14817  0037' 0080'              	movwf	i1___xxtofl@val
 14818  0038' 0800'              	movf	(_capacity+1)^(0+384),w
 14819  0039' 0081'              	movwf	i1___xxtofl@val+1
 14820  003A' 0182'              	clrf	i1___xxtofl@val+2
 14821  003B' 0183'              	clrf	i1___xxtofl@val+3
 14822  003C' 3000               	movlw	0
 14823  003D' 3180' 2000' 3180'  	fcall	i1___xxtofl
 14824  0040' 0803'              	movf	?i1___xxtofl+3,w
 14825  0041' 0020               	movlb	0	; select bank0
 14826  0042' 00BD'              	movwf	i1___fldiv@b+3
 14827  0043' 0802'              	movf	?i1___xxtofl+2,w
 14828  0044' 00BC'              	movwf	i1___fldiv@b+2
 14829  0045' 0801'              	movf	?i1___xxtofl+1,w
 14830  0046' 00BB'              	movwf	i1___fldiv@b+1
 14831  0047' 0800'              	movf	?i1___xxtofl,w
 14832  0048' 00BA'              	movwf	i1___fldiv@b
 14833  0049' 0024               	movlb	4	; select bank4
 14834  004A' 0803'              	movf	(_basic_configuration^(0+512)+3),w
 14835  004B' 0080'              	movwf	i1___xxtofl@val
 14836  004C' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
 14837  004D' 0081'              	movwf	i1___xxtofl@val+1
 14838  004E' 0182'              	clrf	i1___xxtofl@val+2
 14839  004F' 0183'              	clrf	i1___xxtofl@val+3
 14840  0050' 3000               	movlw	0
 14841  0051' 3180' 2000' 3180'  	fcall	i1___xxtofl
 14842  0054' 0803'              	movf	?i1___xxtofl+3,w
 14843  0055' 0020               	movlb	0	; select bank0
 14844  0056' 00B9'              	movwf	i1___fldiv@a+3
 14845  0057' 0802'              	movf	?i1___xxtofl+2,w
 14846  0058' 00B8'              	movwf	i1___fldiv@a+2
 14847  0059' 0801'              	movf	?i1___xxtofl+1,w
 14848  005A' 00B7'              	movwf	i1___fldiv@a+1
 14849  005B' 0800'              	movf	?i1___xxtofl,w
 14850  005C' 00B6'              	movwf	i1___fldiv@a
 14851  005D' 3180' 2000' 3180'  	fcall	i1___fldiv
 14852  0060' 0020               	movlb	0	; select bank0
 14853  0061' 0839'              	movf	?i1___fldiv+3,w
 14854  0062' 00A3'              	movwf	i1___flmul@a+3
 14855  0063' 0838'              	movf	?i1___fldiv+2,w
 14856  0064' 00A2'              	movwf	i1___flmul@a+2
 14857  0065' 0837'              	movf	?i1___fldiv+1,w
 14858  0066' 00A1'              	movwf	i1___flmul@a+1
 14859  0067' 0836'              	movf	?i1___fldiv,w
 14860  0068' 00A0'              	movwf	i1___flmul@a
 14861  0069' 3045               	movlw	69
 14862  006A' 009F'              	movwf	i1___flmul@b+3
 14863  006B' 3061               	movlw	97
 14864  006C' 009E'              	movwf	i1___flmul@b+2
 14865  006D' 3000               	movlw	0
 14866  006E' 009D'              	movwf	i1___flmul@b+1
 14867  006F' 3000               	movlw	0
 14868  0070' 009C'              	movwf	i1___flmul@b
 14869  0071' 3180' 2000' 3180'  	fcall	i1___flmul
 14870  0074' 0020               	movlb	0	; select bank0
 14871  0075' 081F'              	movf	?i1___flmul+3,w
 14872  0076' 0021               	movlb	1	; select bank1
 14873  0077' 0080'              	movwf	(i1_converter_settings$1748+3)^(0+128)
 14874  0078' 0020               	movlb	0	; select bank0
 14875  0079' 081E'              	movf	?i1___flmul+2,w
 14876  007A' 0021               	movlb	1	; select bank1
 14877  007B' 0080'              	movwf	(i1_converter_settings$1748+2)^(0+128)
 14878  007C' 0020               	movlb	0	; select bank0
 14879  007D' 081D'              	movf	?i1___flmul+1,w
 14880  007E' 0021               	movlb	1	; select bank1
 14881  007F' 0080'              	movwf	(i1_converter_settings$1748+1)^(0+128)
 14882  0080' 0020               	movlb	0	; select bank0
 14883  0081' 081C'              	movf	?i1___flmul,w
 14884  0082' 0021               	movlb	1	; select bank1
 14885  0083' 0080'              	movwf	i1_converter_settings$1748^(0+128)
 14886  0084' 0800'              	movf	(i1_converter_settings$1748+3)^(0+128),w
 14887  0085' 0020               	movlb	0	; select bank0
 14888  0086' 00A3'              	movwf	i1___flmul@a+3
 14889  0087' 0021               	movlb	1	; select bank1
 14890  0088' 0800'              	movf	(i1_converter_settings$1748+2)^(0+128),w
 14891  0089' 0020               	movlb	0	; select bank0
 14892  008A' 00A2'              	movwf	i1___flmul@a+2
 14893  008B' 0021               	movlb	1	; select bank1
 14894  008C' 0800'              	movf	(i1_converter_settings$1748+1)^(0+128),w
 14895  008D' 0020               	movlb	0	; select bank0
 14896  008E' 00A1'              	movwf	i1___flmul@a+1
 14897  008F' 0021               	movlb	1	; select bank1
 14898  0090' 0800'              	movf	i1_converter_settings$1748^(0+128),w
 14899  0091' 0020               	movlb	0	; select bank0
 14900  0092' 00A0'              	movwf	i1___flmul@a
 14901  0093' 303F               	movlw	63
 14902  0094' 009F'              	movwf	i1___flmul@b+3
 14903  0095' 308C               	movlw	140
 14904  0096' 009E'              	movwf	i1___flmul@b+2
 14905  0097' 30CC               	movlw	204
 14906  0098' 009D'              	movwf	i1___flmul@b+1
 14907  0099' 30CD               	movlw	205
 14908  009A' 009C'              	movwf	i1___flmul@b
 14909  009B' 3180' 2000' 3180'  	fcall	i1___flmul
 14910  009E' 0020               	movlb	0	; select bank0
 14911  009F' 081F'              	movf	?i1___flmul+3,w
 14912  00A0' 0021               	movlb	1	; select bank1
 14913  00A1' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 14914  00A2' 0020               	movlb	0	; select bank0
 14915  00A3' 081E'              	movf	?i1___flmul+2,w
 14916  00A4' 0021               	movlb	1	; select bank1
 14917  00A5' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 14918  00A6' 0020               	movlb	0	; select bank0
 14919  00A7' 081D'              	movf	?i1___flmul+1,w
 14920  00A8' 0021               	movlb	1	; select bank1
 14921  00A9' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 14922  00AA' 0020               	movlb	0	; select bank0
 14923  00AB' 081C'              	movf	?i1___flmul,w
 14924  00AC' 0021               	movlb	1	; select bank1
 14925  00AD' 0080'              	movwf	i1___fltol@f1^(0+128)
 14926  00AE' 3180' 2000' 3180'  	fcall	i1___fltol
 14927  00B1' 0021               	movlb	1	; select bank1
 14928  00B2' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 14929  00B3' 0023               	movlb	3	; select bank3
 14930  00B4' 0080'              	movwf	(_timeout+1)^(0+384)
 14931  00B5' 0021               	movlb	1	; select bank1
 14932  00B6' 0800'              	movf	?i1___fltol^(0+128),w
 14933  00B7' 0023               	movlb	3	; select bank3
 14934  00B8' 0080'              	movwf	_timeout^(0+384)
 14935  00B9'                    i1l6293:
 14936                           
 14937                           ;state_machine_b.c: 223:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC4 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC4 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_char_kp; ki = CC_char_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
 14938  00B9' 0020               	movlb	0	; select bank0
 14939  00BA' 118E               	bcf	14,3	;volatile
 14940  00BB'                    i1l6295:
 14941  00BB' 120E               	bcf	14,4	;volatile
 14942  00BC'                    i1l6297:
 14943  00BC' 3005               	movlw	5
 14944  00BD' 0021               	movlb	1	; select bank1
 14945  00BE' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 14946  00BF' 300F               	movlw	15
 14947  00C0' 0080'              	movwf	??i1_converter_settings^(0+128)
 14948  00C1' 30F1               	movlw	241
 14949  00C2'                    u792_27:
 14950  00C2' 0B89               	decfsz	9,f
 14951  00C3' 2800'              	goto	u792_27
 14952  00C4' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 14953  00C5' 2800'              	goto	u792_27
 14954  00C6' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 14955  00C7' 2800'              	goto	u792_27
 14956  00C8'                    i1l6299:
 14957  00C8' 0020               	movlb	0	; select bank0
 14958  00C9' 160E               	bsf	14,4	;volatile
 14959  00CA'                    i1l6301:
 14960  00CA' 3005               	movlw	5
 14961  00CB' 0021               	movlb	1	; select bank1
 14962  00CC' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 14963  00CD' 300F               	movlw	15
 14964  00CE' 0080'              	movwf	??i1_converter_settings^(0+128)
 14965  00CF' 30F1               	movlw	241
 14966  00D0'                    u793_27:
 14967  00D0' 0B89               	decfsz	9,f
 14968  00D1' 2800'              	goto	u793_27
 14969  00D2' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 14970  00D3' 2800'              	goto	u793_27
 14971  00D4' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 14972  00D5' 2800'              	goto	u793_27
 14973  00D6'                    i1l6303:
 14974  00D6' 0020               	movlb	0	; select bank0
 14975  00D7' 120E               	bcf	14,4	;volatile
 14976  00D8'                    i1l6305:
 14977  00D8' 3005               	movlw	5
 14978  00D9' 0021               	movlb	1	; select bank1
 14979  00DA' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 14980  00DB' 300F               	movlw	15
 14981  00DC' 0080'              	movwf	??i1_converter_settings^(0+128)
 14982  00DD' 30F1               	movlw	241
 14983  00DE'                    u794_27:
 14984  00DE' 0B89               	decfsz	9,f
 14985  00DF' 2800'              	goto	u794_27
 14986  00E0' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 14987  00E1' 2800'              	goto	u794_27
 14988  00E2' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 14989  00E3' 2800'              	goto	u794_27
 14990  00E4'                    i1l6307:
 14991  00E4' 0020               	movlb	0	; select bank0
 14992  00E5' 168E               	bsf	14,5	;volatile
 14993  00E6'                    i1l6309:
 14994  00E6' 3005               	movlw	5
 14995  00E7' 0021               	movlb	1	; select bank1
 14996  00E8' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 14997  00E9' 300F               	movlw	15
 14998  00EA' 0080'              	movwf	??i1_converter_settings^(0+128)
 14999  00EB' 30F1               	movlw	241
 15000  00EC'                    u795_27:
 15001  00EC' 0B89               	decfsz	9,f
 15002  00ED' 2800'              	goto	u795_27
 15003  00EE' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 15004  00EF' 2800'              	goto	u795_27
 15005  00F0' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 15006  00F1' 2800'              	goto	u795_27
 15007  00F2'                    i1l6311:
 15008  00F2' 0023               	movlb	3	; select bank3
 15009  00F3' 0800'              	movf	(_CC_char_kp+3)^(0+384),w
 15010  00F4' 0024               	movlb	4	; select bank4
 15011  00F5' 0080'              	movwf	(_kp+3)^(0+512)
 15012  00F6' 0023               	movlb	3	; select bank3
 15013  00F7' 0800'              	movf	(_CC_char_kp+2)^(0+384),w
 15014  00F8' 0024               	movlb	4	; select bank4
 15015  00F9' 0080'              	movwf	(_kp+2)^(0+512)
 15016  00FA' 0023               	movlb	3	; select bank3
 15017  00FB' 0800'              	movf	(_CC_char_kp+1)^(0+384),w
 15018  00FC' 0024               	movlb	4	; select bank4
 15019  00FD' 0080'              	movwf	(_kp+1)^(0+512)
 15020  00FE' 0023               	movlb	3	; select bank3
 15021  00FF' 0800'              	movf	_CC_char_kp^(0+384),w
 15022  0100' 0024               	movlb	4	; select bank4
 15023  0101' 0080'              	movwf	_kp^(0+512)
 15024  0102'                    i1l6313:
 15025  0102' 0023               	movlb	3	; select bank3
 15026  0103' 0800'              	movf	(_CC_char_ki+3)^(0+384),w
 15027  0104' 0024               	movlb	4	; select bank4
 15028  0105' 0080'              	movwf	(_ki+3)^(0+512)
 15029  0106' 0023               	movlb	3	; select bank3
 15030  0107' 0800'              	movf	(_CC_char_ki+2)^(0+384),w
 15031  0108' 0024               	movlb	4	; select bank4
 15032  0109' 0080'              	movwf	(_ki+2)^(0+512)
 15033  010A' 0023               	movlb	3	; select bank3
 15034  010B' 0800'              	movf	(_CC_char_ki+1)^(0+384),w
 15035  010C' 0024               	movlb	4	; select bank4
 15036  010D' 0080'              	movwf	(_ki+1)^(0+512)
 15037  010E' 0023               	movlb	3	; select bank3
 15038  010F' 0800'              	movf	_CC_char_ki^(0+384),w
 15039  0110' 0024               	movlb	4	; select bank4
 15040  0111' 0080'              	movwf	_ki^(0+512)
 15041  0112' 0023               	movlb	3	; select bank3
 15042  0113' 0800'              	movf	_CC_char_disc_kd^(0+384),w
 15043  0114' 0021               	movlb	1	; select bank1
 15044  0115' 0080'              	movwf	??i1_converter_settings^(0+128)
 15045  0116' 0181'              	clrf	(??i1_converter_settings^(0+128)+1)
 15046  0117' 0182'              	clrf	(??i1_converter_settings^(0+128)+2)
 15047  0118' 0183'              	clrf	(??i1_converter_settings^(0+128)+3)
 15048  0119' 0800'              	movf	(??i1_converter_settings+3)^(0+128),w
 15049  011A' 0083'              	movwf	i1___xxtofl@val+3
 15050  011B' 0800'              	movf	(??i1_converter_settings+2)^(0+128),w
 15051  011C' 0082'              	movwf	i1___xxtofl@val+2
 15052  011D' 0800'              	movf	(??i1_converter_settings+1)^(0+128),w
 15053  011E' 0081'              	movwf	i1___xxtofl@val+1
 15054  011F' 0800'              	movf	??i1_converter_settings^(0+128),w
 15055  0120' 0080'              	movwf	i1___xxtofl@val
 15056  0121' 3000               	movlw	0
 15057  0122' 3180' 2000' 3180'  	fcall	i1___xxtofl
 15058  0125' 0803'              	movf	?i1___xxtofl+3,w
 15059  0126' 0024               	movlb	4	; select bank4
 15060  0127' 0080'              	movwf	(_kd+3)^(0+512)
 15061  0128' 0802'              	movf	?i1___xxtofl+2,w
 15062  0129' 0080'              	movwf	(_kd+2)^(0+512)
 15063  012A' 0801'              	movf	?i1___xxtofl+1,w
 15064  012B' 0080'              	movwf	(_kd+1)^(0+512)
 15065  012C' 0800'              	movf	?i1___xxtofl,w
 15066  012D' 0080'              	movwf	_kd^(0+512)
 15067  012E'                    i1l6315:
 15068  012E' 3000               	movlw	0
 15069  012F' 0080'              	movwf	(_pidi+3)^(0+512)
 15070  0130' 3000               	movlw	0
 15071  0131' 0080'              	movwf	(_pidi+2)^(0+512)
 15072  0132' 3000               	movlw	0
 15073  0133' 0080'              	movwf	(_pidi+1)^(0+512)
 15074  0134' 3000               	movlw	0
 15075  0135' 0080'              	movwf	_pidi^(0+512)
 15076                           
 15077                           ;state_machine_b.c: 224:             break;
 15078  0136' 2800'              	goto	i1l6425
 15079  0137'                    i1l6317:
 15080                           
 15081                           ;state_machine_b.c: 226:             iref = i_disc;
 15082  0137' 0023               	movlb	3	; select bank3
 15083  0138' 0800'              	movf	(_i_disc+1)^(0+384),w
 15084  0139' 0021               	movlb	1	; select bank1
 15085  013A' 0080'              	movwf	(_iref+1)^(0+128)
 15086  013B' 0023               	movlb	3	; select bank3
 15087  013C' 0800'              	movf	_i_disc^(0+384),w
 15088  013D' 0021               	movlb	1	; select bank1
 15089  013E' 0080'              	movwf	_iref^(0+128)
 15090  013F'                    i1l6319:
 15091                           
 15092                           ;state_machine_b.c: 227:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
 15093  013F' 0020               	movlb	0	; select bank0
 15094  0140' 118E               	bcf	14,3	;volatile
 15095  0141'                    i1l6321:
 15096  0141' 120E               	bcf	14,4	;volatile
 15097  0142' 3005               	movlw	5
 15098  0143' 0021               	movlb	1	; select bank1
 15099  0144' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 15100  0145' 300F               	movlw	15
 15101  0146' 0080'              	movwf	??i1_converter_settings^(0+128)
 15102  0147' 30F1               	movlw	241
 15103  0148'                    u796_27:
 15104  0148' 0B89               	decfsz	9,f
 15105  0149' 2800'              	goto	u796_27
 15106  014A' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 15107  014B' 2800'              	goto	u796_27
 15108  014C' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 15109  014D' 2800'              	goto	u796_27
 15110  014E'                    i1l6323:
 15111  014E' 0020               	movlb	0	; select bank0
 15112  014F' 158E               	bsf	14,3	;volatile
 15113  0150' 3005               	movlw	5
 15114  0151' 0021               	movlb	1	; select bank1
 15115  0152' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 15116  0153' 300F               	movlw	15
 15117  0154' 0080'              	movwf	??i1_converter_settings^(0+128)
 15118  0155' 30F1               	movlw	241
 15119  0156'                    u797_27:
 15120  0156' 0B89               	decfsz	9,f
 15121  0157' 2800'              	goto	u797_27
 15122  0158' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 15123  0159' 2800'              	goto	u797_27
 15124  015A' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 15125  015B' 2800'              	goto	u797_27
 15126  015C'                    i1l6325:
 15127  015C' 0020               	movlb	0	; select bank0
 15128  015D' 118E               	bcf	14,3	;volatile
 15129  015E' 3005               	movlw	5
 15130  015F' 0021               	movlb	1	; select bank1
 15131  0160' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 15132  0161' 300F               	movlw	15
 15133  0162' 0080'              	movwf	??i1_converter_settings^(0+128)
 15134  0163' 30F1               	movlw	241
 15135  0164'                    u798_27:
 15136  0164' 0B89               	decfsz	9,f
 15137  0165' 2800'              	goto	u798_27
 15138  0166' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 15139  0167' 2800'              	goto	u798_27
 15140  0168' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 15141  0169' 2800'              	goto	u798_27
 15142  016A'                    i1l6327:
 15143  016A' 0020               	movlb	0	; select bank0
 15144  016B' 168E               	bsf	14,5	;volatile
 15145  016C' 3005               	movlw	5
 15146  016D' 0021               	movlb	1	; select bank1
 15147  016E' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 15148  016F' 300F               	movlw	15
 15149  0170' 0080'              	movwf	??i1_converter_settings^(0+128)
 15150  0171' 30F1               	movlw	241
 15151  0172'                    u799_27:
 15152  0172' 0B89               	decfsz	9,f
 15153  0173' 2800'              	goto	u799_27
 15154  0174' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 15155  0175' 2800'              	goto	u799_27
 15156  0176' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 15157  0177' 2800'              	goto	u799_27
 15158  0178' 0023               	movlb	3	; select bank3
 15159  0179' 0800'              	movf	(_CC_disc_kp+3)^(0+384),w
 15160  017A' 0024               	movlb	4	; select bank4
 15161  017B' 0080'              	movwf	(_kp+3)^(0+512)
 15162  017C' 0023               	movlb	3	; select bank3
 15163  017D' 0800'              	movf	(_CC_disc_kp+2)^(0+384),w
 15164  017E' 0024               	movlb	4	; select bank4
 15165  017F' 0080'              	movwf	(_kp+2)^(0+512)
 15166  0180' 0023               	movlb	3	; select bank3
 15167  0181' 0800'              	movf	(_CC_disc_kp+1)^(0+384),w
 15168  0182' 0024               	movlb	4	; select bank4
 15169  0183' 0080'              	movwf	(_kp+1)^(0+512)
 15170  0184' 0023               	movlb	3	; select bank3
 15171  0185' 0800'              	movf	_CC_disc_kp^(0+384),w
 15172  0186' 0024               	movlb	4	; select bank4
 15173  0187' 0080'              	movwf	_kp^(0+512)
 15174  0188' 0023               	movlb	3	; select bank3
 15175  0189' 0800'              	movf	(_CC_disc_ki+3)^(0+384),w
 15176  018A' 0024               	movlb	4	; select bank4
 15177  018B' 0080'              	movwf	(_ki+3)^(0+512)
 15178  018C' 0023               	movlb	3	; select bank3
 15179  018D' 0800'              	movf	(_CC_disc_ki+2)^(0+384),w
 15180  018E' 0024               	movlb	4	; select bank4
 15181  018F' 0080'              	movwf	(_ki+2)^(0+512)
 15182  0190' 0023               	movlb	3	; select bank3
 15183  0191' 0800'              	movf	(_CC_disc_ki+1)^(0+384),w
 15184  0192' 0024               	movlb	4	; select bank4
 15185  0193' 0080'              	movwf	(_ki+1)^(0+512)
 15186  0194' 0023               	movlb	3	; select bank3
 15187  0195' 0800'              	movf	_CC_disc_ki^(0+384),w
 15188  0196' 0024               	movlb	4	; select bank4
 15189  0197' 0080'              	movwf	_ki^(0+512)
 15190  0198'                    i1l6329:
 15191  0198' 0023               	movlb	3	; select bank3
 15192  0199' 0800'              	movf	_CC_char_disc_kd^(0+384),w
 15193  019A' 0021               	movlb	1	; select bank1
 15194  019B' 0080'              	movwf	??i1_converter_settings^(0+128)
 15195  019C' 0181'              	clrf	(??i1_converter_settings^(0+128)+1)
 15196  019D' 0182'              	clrf	(??i1_converter_settings^(0+128)+2)
 15197  019E' 0183'              	clrf	(??i1_converter_settings^(0+128)+3)
 15198  019F' 0800'              	movf	(??i1_converter_settings+3)^(0+128),w
 15199  01A0' 0083'              	movwf	i1___xxtofl@val+3
 15200  01A1' 0800'              	movf	(??i1_converter_settings+2)^(0+128),w
 15201  01A2' 0082'              	movwf	i1___xxtofl@val+2
 15202  01A3' 0800'              	movf	(??i1_converter_settings+1)^(0+128),w
 15203  01A4' 0081'              	movwf	i1___xxtofl@val+1
 15204  01A5' 0800'              	movf	??i1_converter_settings^(0+128),w
 15205  01A6' 0080'              	movwf	i1___xxtofl@val
 15206  01A7' 3000               	movlw	0
 15207  01A8' 3180' 2000' 3180'  	fcall	i1___xxtofl
 15208  01AB' 0803'              	movf	?i1___xxtofl+3,w
 15209  01AC' 0024               	movlb	4	; select bank4
 15210  01AD' 0080'              	movwf	(_kd+3)^(0+512)
 15211  01AE' 0802'              	movf	?i1___xxtofl+2,w
 15212  01AF' 0080'              	movwf	(_kd+2)^(0+512)
 15213  01B0' 0801'              	movf	?i1___xxtofl+1,w
 15214  01B1' 0080'              	movwf	(_kd+1)^(0+512)
 15215  01B2' 0800'              	movf	?i1___xxtofl,w
 15216  01B3' 0080'              	movwf	_kd^(0+512)
 15217  01B4'                    i1l6331:
 15218  01B4' 3000               	movlw	0
 15219  01B5' 0080'              	movwf	(_pidi+3)^(0+512)
 15220  01B6' 3000               	movlw	0
 15221  01B7' 0080'              	movwf	(_pidi+2)^(0+512)
 15222  01B8' 3000               	movlw	0
 15223  01B9' 0080'              	movwf	(_pidi+1)^(0+512)
 15224  01BA' 3000               	movlw	0
 15225  01BB' 0080'              	movwf	_pidi^(0+512)
 15226                           
 15227                           ;state_machine_b.c: 228:             break;
 15228  01BC' 2800'              	goto	i1l6425
 15229  01BD'                    i1l6333:
 15230                           
 15231                           ;state_machine_b.c: 230:             iref = (uint16_t) ( ( ( capacity * 4096.0 ) / (5000
      +                           * 2.5) ) + 0.5 );
 15232  01BD' 0023               	movlb	3	; select bank3
 15233  01BE' 0800'              	movf	_capacity^(0+384),w
 15234  01BF' 0080'              	movwf	i1___xxtofl@val
 15235  01C0' 0800'              	movf	(_capacity+1)^(0+384),w
 15236  01C1' 0081'              	movwf	i1___xxtofl@val+1
 15237  01C2' 0182'              	clrf	i1___xxtofl@val+2
 15238  01C3' 0183'              	clrf	i1___xxtofl@val+3
 15239  01C4' 3000               	movlw	0
 15240  01C5' 3180' 2000' 3180'  	fcall	i1___xxtofl
 15241  01C8' 0803'              	movf	?i1___xxtofl+3,w
 15242  01C9' 0020               	movlb	0	; select bank0
 15243  01CA' 00A3'              	movwf	i1___flmul@a+3
 15244  01CB' 0802'              	movf	?i1___xxtofl+2,w
 15245  01CC' 00A2'              	movwf	i1___flmul@a+2
 15246  01CD' 0801'              	movf	?i1___xxtofl+1,w
 15247  01CE' 00A1'              	movwf	i1___flmul@a+1
 15248  01CF' 0800'              	movf	?i1___xxtofl,w
 15249  01D0' 00A0'              	movwf	i1___flmul@a
 15250  01D1' 3045               	movlw	69
 15251  01D2' 009F'              	movwf	i1___flmul@b+3
 15252  01D3' 3080               	movlw	128
 15253  01D4' 009E'              	movwf	i1___flmul@b+2
 15254  01D5' 3000               	movlw	0
 15255  01D6' 009D'              	movwf	i1___flmul@b+1
 15256  01D7' 3000               	movlw	0
 15257  01D8' 009C'              	movwf	i1___flmul@b
 15258  01D9' 3180' 2000' 3180'  	fcall	i1___flmul
 15259  01DC' 0020               	movlb	0	; select bank0
 15260  01DD' 081F'              	movf	?i1___flmul+3,w
 15261  01DE' 00BD'              	movwf	i1___fldiv@b+3
 15262  01DF' 081E'              	movf	?i1___flmul+2,w
 15263  01E0' 00BC'              	movwf	i1___fldiv@b+2
 15264  01E1' 081D'              	movf	?i1___flmul+1,w
 15265  01E2' 00BB'              	movwf	i1___fldiv@b+1
 15266  01E3' 081C'              	movf	?i1___flmul,w
 15267  01E4' 00BA'              	movwf	i1___fldiv@b
 15268  01E5' 3046               	movlw	70
 15269  01E6' 00B9'              	movwf	i1___fldiv@a+3
 15270  01E7' 3043               	movlw	67
 15271  01E8' 00B8'              	movwf	i1___fldiv@a+2
 15272  01E9' 3050               	movlw	80
 15273  01EA' 00B7'              	movwf	i1___fldiv@a+1
 15274  01EB' 3000               	movlw	0
 15275  01EC' 00B6'              	movwf	i1___fldiv@a
 15276  01ED' 3180' 2000' 3180'  	fcall	i1___fldiv
 15277  01F0' 0020               	movlb	0	; select bank0
 15278  01F1' 0839'              	movf	?i1___fldiv+3,w
 15279  01F2' 0087'              	movwf	i1___fladd@a+3
 15280  01F3' 0838'              	movf	?i1___fldiv+2,w
 15281  01F4' 0086'              	movwf	i1___fladd@a+2
 15282  01F5' 0837'              	movf	?i1___fldiv+1,w
 15283  01F6' 0085'              	movwf	i1___fladd@a+1
 15284  01F7' 0836'              	movf	?i1___fldiv,w
 15285  01F8' 0084'              	movwf	i1___fladd@a
 15286  01F9' 303F               	movlw	63
 15287  01FA' 0083'              	movwf	i1___fladd@b+3
 15288  01FB' 3000               	movlw	0
 15289  01FC' 0082'              	movwf	i1___fladd@b+2
 15290  01FD' 3000               	movlw	0
 15291  01FE' 0081'              	movwf	i1___fladd@b+1
 15292  01FF' 3000               	movlw	0
 15293  0200' 0080'              	movwf	i1___fladd@b
 15294  0201' 3180' 2000' 3180'  	fcall	i1___fladd
 15295  0204' 0020               	movlb	0	; select bank0
 15296  0205' 0803'              	movf	?i1___fladd+3,w
 15297  0206' 0021               	movlb	1	; select bank1
 15298  0207' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 15299  0208' 0020               	movlb	0	; select bank0
 15300  0209' 0802'              	movf	?i1___fladd+2,w
 15301  020A' 0021               	movlb	1	; select bank1
 15302  020B' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 15303  020C' 0020               	movlb	0	; select bank0
 15304  020D' 0801'              	movf	?i1___fladd+1,w
 15305  020E' 0021               	movlb	1	; select bank1
 15306  020F' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 15307  0210' 0020               	movlb	0	; select bank0
 15308  0211' 0800'              	movf	?i1___fladd,w
 15309  0212' 0021               	movlb	1	; select bank1
 15310  0213' 0080'              	movwf	i1___fltol@f1^(0+128)
 15311  0214' 3180' 2000' 3180'  	fcall	i1___fltol
 15312  0217' 0021               	movlb	1	; select bank1
 15313  0218' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 15314  0219' 0080'              	movwf	(_iref+1)^(0+128)
 15315  021A' 0800'              	movf	?i1___fltol^(0+128),w
 15316  021B' 0080'              	movwf	_iref^(0+128)
 15317  021C'                    i1l6335:
 15318                           
 15319                           ;state_machine_b.c: 231:             dc_res_count = 220;
 15320  021C' 30DC               	movlw	220
 15321  021D' 0023               	movlb	3	; select bank3
 15322  021E' 0080'              	movwf	_dc_res_count^(0+384)
 15323  021F'                    i1l6337:
 15324                           
 15325                           ;state_machine_b.c: 232:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
 15326  021F' 0020               	movlb	0	; select bank0
 15327  0220' 118E               	bcf	14,3	;volatile
 15328  0221'                    i1l6339:
 15329  0221' 120E               	bcf	14,4	;volatile
 15330  0222'                    i1l6341:
 15331  0222' 3005               	movlw	5
 15332  0223' 0021               	movlb	1	; select bank1
 15333  0224' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 15334  0225' 300F               	movlw	15
 15335  0226' 0080'              	movwf	??i1_converter_settings^(0+128)
 15336  0227' 30F1               	movlw	241
 15337  0228'                    u800_27:
 15338  0228' 0B89               	decfsz	9,f
 15339  0229' 2800'              	goto	u800_27
 15340  022A' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 15341  022B' 2800'              	goto	u800_27
 15342  022C' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 15343  022D' 2800'              	goto	u800_27
 15344  022E'                    i1l6343:
 15345  022E' 0020               	movlb	0	; select bank0
 15346  022F' 158E               	bsf	14,3	;volatile
 15347  0230'                    i1l6345:
 15348  0230' 3005               	movlw	5
 15349  0231' 0021               	movlb	1	; select bank1
 15350  0232' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 15351  0233' 300F               	movlw	15
 15352  0234' 0080'              	movwf	??i1_converter_settings^(0+128)
 15353  0235' 30F1               	movlw	241
 15354  0236'                    u801_27:
 15355  0236' 0B89               	decfsz	9,f
 15356  0237' 2800'              	goto	u801_27
 15357  0238' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 15358  0239' 2800'              	goto	u801_27
 15359  023A' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 15360  023B' 2800'              	goto	u801_27
 15361  023C'                    i1l6347:
 15362  023C' 0020               	movlb	0	; select bank0
 15363  023D' 118E               	bcf	14,3	;volatile
 15364  023E'                    i1l6349:
 15365  023E' 3005               	movlw	5
 15366  023F' 0021               	movlb	1	; select bank1
 15367  0240' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 15368  0241' 300F               	movlw	15
 15369  0242' 0080'              	movwf	??i1_converter_settings^(0+128)
 15370  0243' 30F1               	movlw	241
 15371  0244'                    u802_27:
 15372  0244' 0B89               	decfsz	9,f
 15373  0245' 2800'              	goto	u802_27
 15374  0246' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 15375  0247' 2800'              	goto	u802_27
 15376  0248' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 15377  0249' 2800'              	goto	u802_27
 15378  024A'                    i1l6351:
 15379  024A' 0020               	movlb	0	; select bank0
 15380  024B' 168E               	bsf	14,5	;volatile
 15381  024C'                    i1l6353:
 15382  024C' 3005               	movlw	5
 15383  024D' 0021               	movlb	1	; select bank1
 15384  024E' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 15385  024F' 300F               	movlw	15
 15386  0250' 0080'              	movwf	??i1_converter_settings^(0+128)
 15387  0251' 30F1               	movlw	241
 15388  0252'                    u803_27:
 15389  0252' 0B89               	decfsz	9,f
 15390  0253' 2800'              	goto	u803_27
 15391  0254' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 15392  0255' 2800'              	goto	u803_27
 15393  0256' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 15394  0257' 2800'              	goto	u803_27
 15395  0258'                    i1l6355:
 15396  0258' 0023               	movlb	3	; select bank3
 15397  0259' 0800'              	movf	(_CC_disc_kp+3)^(0+384),w
 15398  025A' 0024               	movlb	4	; select bank4
 15399  025B' 0080'              	movwf	(_kp+3)^(0+512)
 15400  025C' 0023               	movlb	3	; select bank3
 15401  025D' 0800'              	movf	(_CC_disc_kp+2)^(0+384),w
 15402  025E' 0024               	movlb	4	; select bank4
 15403  025F' 0080'              	movwf	(_kp+2)^(0+512)
 15404  0260' 0023               	movlb	3	; select bank3
 15405  0261' 0800'              	movf	(_CC_disc_kp+1)^(0+384),w
 15406  0262' 0024               	movlb	4	; select bank4
 15407  0263' 0080'              	movwf	(_kp+1)^(0+512)
 15408  0264' 0023               	movlb	3	; select bank3
 15409  0265' 0800'              	movf	_CC_disc_kp^(0+384),w
 15410  0266' 0024               	movlb	4	; select bank4
 15411  0267' 0080'              	movwf	_kp^(0+512)
 15412  0268'                    i1l6357:
 15413  0268' 0023               	movlb	3	; select bank3
 15414  0269' 0800'              	movf	(_CC_disc_ki+3)^(0+384),w
 15415  026A' 0024               	movlb	4	; select bank4
 15416  026B' 0080'              	movwf	(_ki+3)^(0+512)
 15417  026C' 0023               	movlb	3	; select bank3
 15418  026D' 0800'              	movf	(_CC_disc_ki+2)^(0+384),w
 15419  026E' 0024               	movlb	4	; select bank4
 15420  026F' 0080'              	movwf	(_ki+2)^(0+512)
 15421  0270' 0023               	movlb	3	; select bank3
 15422  0271' 0800'              	movf	(_CC_disc_ki+1)^(0+384),w
 15423  0272' 0024               	movlb	4	; select bank4
 15424  0273' 0080'              	movwf	(_ki+1)^(0+512)
 15425  0274' 0023               	movlb	3	; select bank3
 15426  0275' 0800'              	movf	_CC_disc_ki^(0+384),w
 15427  0276' 0024               	movlb	4	; select bank4
 15428  0277' 0080'              	movwf	_ki^(0+512)
 15429  0278'                    i1l6359:
 15430  0278' 0023               	movlb	3	; select bank3
 15431  0279' 0800'              	movf	_CC_char_disc_kd^(0+384),w
 15432  027A' 0021               	movlb	1	; select bank1
 15433  027B' 0080'              	movwf	??i1_converter_settings^(0+128)
 15434  027C' 0181'              	clrf	(??i1_converter_settings^(0+128)+1)
 15435  027D' 0182'              	clrf	(??i1_converter_settings^(0+128)+2)
 15436  027E' 0183'              	clrf	(??i1_converter_settings^(0+128)+3)
 15437  027F' 0800'              	movf	(??i1_converter_settings+3)^(0+128),w
 15438  0280' 0083'              	movwf	i1___xxtofl@val+3
 15439  0281' 0800'              	movf	(??i1_converter_settings+2)^(0+128),w
 15440  0282' 0082'              	movwf	i1___xxtofl@val+2
 15441  0283' 0800'              	movf	(??i1_converter_settings+1)^(0+128),w
 15442  0284' 0081'              	movwf	i1___xxtofl@val+1
 15443  0285' 0800'              	movf	??i1_converter_settings^(0+128),w
 15444  0286' 0080'              	movwf	i1___xxtofl@val
 15445  0287' 3000               	movlw	0
 15446  0288' 3180' 2000' 3180'  	fcall	i1___xxtofl
 15447  028B' 0803'              	movf	?i1___xxtofl+3,w
 15448  028C' 0024               	movlb	4	; select bank4
 15449  028D' 0080'              	movwf	(_kd+3)^(0+512)
 15450  028E' 0802'              	movf	?i1___xxtofl+2,w
 15451  028F' 0080'              	movwf	(_kd+2)^(0+512)
 15452  0290' 0801'              	movf	?i1___xxtofl+1,w
 15453  0291' 0080'              	movwf	(_kd+1)^(0+512)
 15454  0292' 0800'              	movf	?i1___xxtofl,w
 15455  0293' 0080'              	movwf	_kd^(0+512)
 15456  0294' 3000               	movlw	0
 15457  0295' 0080'              	movwf	(_pidi+3)^(0+512)
 15458  0296' 3000               	movlw	0
 15459  0297' 0080'              	movwf	(_pidi+2)^(0+512)
 15460  0298' 3000               	movlw	0
 15461  0299' 0080'              	movwf	(_pidi+1)^(0+512)
 15462  029A' 3000               	movlw	0
 15463  029B' 0080'              	movwf	_pidi^(0+512)
 15464                           
 15465                           ;state_machine_b.c: 233:             break;
 15466  029C' 2800'              	goto	i1l6425
 15467  029D'                    i1l6361:
 15468                           
 15469                           ;state_machine_b.c: 235:             iref = (uint16_t) ( ( ( capacity * 4096.0 ) / (5000
      +                           * 2.5 * 2 ) ) + 0.5 );
 15470  029D' 0023               	movlb	3	; select bank3
 15471  029E' 0800'              	movf	_capacity^(0+384),w
 15472  029F' 0080'              	movwf	i1___xxtofl@val
 15473  02A0' 0800'              	movf	(_capacity+1)^(0+384),w
 15474  02A1' 0081'              	movwf	i1___xxtofl@val+1
 15475  02A2' 0182'              	clrf	i1___xxtofl@val+2
 15476  02A3' 0183'              	clrf	i1___xxtofl@val+3
 15477  02A4' 3000               	movlw	0
 15478  02A5' 3180' 2000' 3180'  	fcall	i1___xxtofl
 15479  02A8' 0803'              	movf	?i1___xxtofl+3,w
 15480  02A9' 0020               	movlb	0	; select bank0
 15481  02AA' 00A3'              	movwf	i1___flmul@a+3
 15482  02AB' 0802'              	movf	?i1___xxtofl+2,w
 15483  02AC' 00A2'              	movwf	i1___flmul@a+2
 15484  02AD' 0801'              	movf	?i1___xxtofl+1,w
 15485  02AE' 00A1'              	movwf	i1___flmul@a+1
 15486  02AF' 0800'              	movf	?i1___xxtofl,w
 15487  02B0' 00A0'              	movwf	i1___flmul@a
 15488  02B1' 3045               	movlw	69
 15489  02B2' 009F'              	movwf	i1___flmul@b+3
 15490  02B3' 3080               	movlw	128
 15491  02B4' 009E'              	movwf	i1___flmul@b+2
 15492  02B5' 3000               	movlw	0
 15493  02B6' 009D'              	movwf	i1___flmul@b+1
 15494  02B7' 3000               	movlw	0
 15495  02B8' 009C'              	movwf	i1___flmul@b
 15496  02B9' 3180' 2000' 3180'  	fcall	i1___flmul
 15497  02BC' 0020               	movlb	0	; select bank0
 15498  02BD' 081F'              	movf	?i1___flmul+3,w
 15499  02BE' 00BD'              	movwf	i1___fldiv@b+3
 15500  02BF' 081E'              	movf	?i1___flmul+2,w
 15501  02C0' 00BC'              	movwf	i1___fldiv@b+2
 15502  02C1' 081D'              	movf	?i1___flmul+1,w
 15503  02C2' 00BB'              	movwf	i1___fldiv@b+1
 15504  02C3' 081C'              	movf	?i1___flmul,w
 15505  02C4' 00BA'              	movwf	i1___fldiv@b
 15506  02C5' 3046               	movlw	70
 15507  02C6' 00B9'              	movwf	i1___fldiv@a+3
 15508  02C7' 30C3               	movlw	195
 15509  02C8' 00B8'              	movwf	i1___fldiv@a+2
 15510  02C9' 3050               	movlw	80
 15511  02CA' 00B7'              	movwf	i1___fldiv@a+1
 15512  02CB' 3000               	movlw	0
 15513  02CC' 00B6'              	movwf	i1___fldiv@a
 15514  02CD' 3180' 2000' 3180'  	fcall	i1___fldiv
 15515  02D0' 0020               	movlb	0	; select bank0
 15516  02D1' 0839'              	movf	?i1___fldiv+3,w
 15517  02D2' 0087'              	movwf	i1___fladd@a+3
 15518  02D3' 0838'              	movf	?i1___fldiv+2,w
 15519  02D4' 0086'              	movwf	i1___fladd@a+2
 15520  02D5' 0837'              	movf	?i1___fldiv+1,w
 15521  02D6' 0085'              	movwf	i1___fladd@a+1
 15522  02D7' 0836'              	movf	?i1___fldiv,w
 15523  02D8' 0084'              	movwf	i1___fladd@a
 15524  02D9' 303F               	movlw	63
 15525  02DA' 0083'              	movwf	i1___fladd@b+3
 15526  02DB' 3000               	movlw	0
 15527  02DC' 0082'              	movwf	i1___fladd@b+2
 15528  02DD' 3000               	movlw	0
 15529  02DE' 0081'              	movwf	i1___fladd@b+1
 15530  02DF' 3000               	movlw	0
 15531  02E0' 0080'              	movwf	i1___fladd@b
 15532  02E1' 3180' 2000' 3180'  	fcall	i1___fladd
 15533  02E4' 0020               	movlb	0	; select bank0
 15534  02E5' 0803'              	movf	?i1___fladd+3,w
 15535  02E6' 0021               	movlb	1	; select bank1
 15536  02E7' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 15537  02E8' 0020               	movlb	0	; select bank0
 15538  02E9' 0802'              	movf	?i1___fladd+2,w
 15539  02EA' 0021               	movlb	1	; select bank1
 15540  02EB' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 15541  02EC' 0020               	movlb	0	; select bank0
 15542  02ED' 0801'              	movf	?i1___fladd+1,w
 15543  02EE' 0021               	movlb	1	; select bank1
 15544  02EF' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 15545  02F0' 0020               	movlb	0	; select bank0
 15546  02F1' 0800'              	movf	?i1___fladd,w
 15547  02F2' 0021               	movlb	1	; select bank1
 15548  02F3' 0080'              	movwf	i1___fltol@f1^(0+128)
 15549  02F4' 3180' 2000' 3180'  	fcall	i1___fltol
 15550  02F7' 0021               	movlb	1	; select bank1
 15551  02F8' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 15552  02F9' 0080'              	movwf	(_iref+1)^(0+128)
 15553  02FA' 0800'              	movf	?i1___fltol^(0+128),w
 15554  02FB' 0080'              	movwf	_iref^(0+128)
 15555  02FC'                    i1l6363:
 15556                           
 15557                           ;state_machine_b.c: 236:             if(basic_configuration.version == 0x02) timeout = (
      +                          uint16_t)(((float)capacity / (float)basic_configuration.const_current_char) * 3600 * 1.1
      +                          );
 15558  02FC' 3002               	movlw	2
 15559  02FD' 0024               	movlb	4	; select bank4
 15560  02FE' 0600'              	xorwf	_basic_configuration^(0+512),w
 15561  02FF' 1D03               	btfss	3,2
 15562  0300' 2800'              	goto	u691_21
 15563  0301' 2800'              	goto	u691_20
 15564  0302'                    u691_21:
 15565  0302' 2800'              	goto	i1l6367
 15566  0303'                    u691_20:
 15567  0303'                    i1l6365:
 15568  0303' 0023               	movlb	3	; select bank3
 15569  0304' 0800'              	movf	_capacity^(0+384),w
 15570  0305' 0080'              	movwf	i1___xxtofl@val
 15571  0306' 0800'              	movf	(_capacity+1)^(0+384),w
 15572  0307' 0081'              	movwf	i1___xxtofl@val+1
 15573  0308' 0182'              	clrf	i1___xxtofl@val+2
 15574  0309' 0183'              	clrf	i1___xxtofl@val+3
 15575  030A' 3000               	movlw	0
 15576  030B' 3180' 2000' 3180'  	fcall	i1___xxtofl
 15577  030E' 0803'              	movf	?i1___xxtofl+3,w
 15578  030F' 0020               	movlb	0	; select bank0
 15579  0310' 00BD'              	movwf	i1___fldiv@b+3
 15580  0311' 0802'              	movf	?i1___xxtofl+2,w
 15581  0312' 00BC'              	movwf	i1___fldiv@b+2
 15582  0313' 0801'              	movf	?i1___xxtofl+1,w
 15583  0314' 00BB'              	movwf	i1___fldiv@b+1
 15584  0315' 0800'              	movf	?i1___xxtofl,w
 15585  0316' 00BA'              	movwf	i1___fldiv@b
 15586  0317' 0024               	movlb	4	; select bank4
 15587  0318' 0803'              	movf	(_basic_configuration^(0+512)+3),w
 15588  0319' 0080'              	movwf	i1___xxtofl@val
 15589  031A' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
 15590  031B' 0081'              	movwf	i1___xxtofl@val+1
 15591  031C' 0182'              	clrf	i1___xxtofl@val+2
 15592  031D' 0183'              	clrf	i1___xxtofl@val+3
 15593  031E' 3000               	movlw	0
 15594  031F' 3180' 2000' 3180'  	fcall	i1___xxtofl
 15595  0322' 0803'              	movf	?i1___xxtofl+3,w
 15596  0323' 0020               	movlb	0	; select bank0
 15597  0324' 00B9'              	movwf	i1___fldiv@a+3
 15598  0325' 0802'              	movf	?i1___xxtofl+2,w
 15599  0326' 00B8'              	movwf	i1___fldiv@a+2
 15600  0327' 0801'              	movf	?i1___xxtofl+1,w
 15601  0328' 00B7'              	movwf	i1___fldiv@a+1
 15602  0329' 0800'              	movf	?i1___xxtofl,w
 15603  032A' 00B6'              	movwf	i1___fldiv@a
 15604  032B' 3180' 2000' 3180'  	fcall	i1___fldiv
 15605  032E' 0020               	movlb	0	; select bank0
 15606  032F' 0839'              	movf	?i1___fldiv+3,w
 15607  0330' 00A3'              	movwf	i1___flmul@a+3
 15608  0331' 0838'              	movf	?i1___fldiv+2,w
 15609  0332' 00A2'              	movwf	i1___flmul@a+2
 15610  0333' 0837'              	movf	?i1___fldiv+1,w
 15611  0334' 00A1'              	movwf	i1___flmul@a+1
 15612  0335' 0836'              	movf	?i1___fldiv,w
 15613  0336' 00A0'              	movwf	i1___flmul@a
 15614  0337' 3045               	movlw	69
 15615  0338' 009F'              	movwf	i1___flmul@b+3
 15616  0339' 3061               	movlw	97
 15617  033A' 009E'              	movwf	i1___flmul@b+2
 15618  033B' 3000               	movlw	0
 15619  033C' 009D'              	movwf	i1___flmul@b+1
 15620  033D' 3000               	movlw	0
 15621  033E' 009C'              	movwf	i1___flmul@b
 15622  033F' 3180' 2000' 3180'  	fcall	i1___flmul
 15623  0342' 0020               	movlb	0	; select bank0
 15624  0343' 081F'              	movf	?i1___flmul+3,w
 15625  0344' 0021               	movlb	1	; select bank1
 15626  0345' 0080'              	movwf	(i1_converter_settings$1748+3)^(0+128)
 15627  0346' 0020               	movlb	0	; select bank0
 15628  0347' 081E'              	movf	?i1___flmul+2,w
 15629  0348' 0021               	movlb	1	; select bank1
 15630  0349' 0080'              	movwf	(i1_converter_settings$1748+2)^(0+128)
 15631  034A' 0020               	movlb	0	; select bank0
 15632  034B' 081D'              	movf	?i1___flmul+1,w
 15633  034C' 0021               	movlb	1	; select bank1
 15634  034D' 0080'              	movwf	(i1_converter_settings$1748+1)^(0+128)
 15635  034E' 0020               	movlb	0	; select bank0
 15636  034F' 081C'              	movf	?i1___flmul,w
 15637  0350' 0021               	movlb	1	; select bank1
 15638  0351' 0080'              	movwf	i1_converter_settings$1748^(0+128)
 15639  0352' 0800'              	movf	(i1_converter_settings$1748+3)^(0+128),w
 15640  0353' 0020               	movlb	0	; select bank0
 15641  0354' 00A3'              	movwf	i1___flmul@a+3
 15642  0355' 0021               	movlb	1	; select bank1
 15643  0356' 0800'              	movf	(i1_converter_settings$1748+2)^(0+128),w
 15644  0357' 0020               	movlb	0	; select bank0
 15645  0358' 00A2'              	movwf	i1___flmul@a+2
 15646  0359' 0021               	movlb	1	; select bank1
 15647  035A' 0800'              	movf	(i1_converter_settings$1748+1)^(0+128),w
 15648  035B' 0020               	movlb	0	; select bank0
 15649  035C' 00A1'              	movwf	i1___flmul@a+1
 15650  035D' 0021               	movlb	1	; select bank1
 15651  035E' 0800'              	movf	i1_converter_settings$1748^(0+128),w
 15652  035F' 0020               	movlb	0	; select bank0
 15653  0360' 00A0'              	movwf	i1___flmul@a
 15654  0361' 303F               	movlw	63
 15655  0362' 009F'              	movwf	i1___flmul@b+3
 15656  0363' 308C               	movlw	140
 15657  0364' 009E'              	movwf	i1___flmul@b+2
 15658  0365' 30CC               	movlw	204
 15659  0366' 009D'              	movwf	i1___flmul@b+1
 15660  0367' 30CD               	movlw	205
 15661  0368' 009C'              	movwf	i1___flmul@b
 15662  0369' 3180' 2000' 3180'  	fcall	i1___flmul
 15663  036C' 0020               	movlb	0	; select bank0
 15664  036D' 081F'              	movf	?i1___flmul+3,w
 15665  036E' 0021               	movlb	1	; select bank1
 15666  036F' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 15667  0370' 0020               	movlb	0	; select bank0
 15668  0371' 081E'              	movf	?i1___flmul+2,w
 15669  0372' 0021               	movlb	1	; select bank1
 15670  0373' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 15671  0374' 0020               	movlb	0	; select bank0
 15672  0375' 081D'              	movf	?i1___flmul+1,w
 15673  0376' 0021               	movlb	1	; select bank1
 15674  0377' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 15675  0378' 0020               	movlb	0	; select bank0
 15676  0379' 081C'              	movf	?i1___flmul,w
 15677  037A' 0021               	movlb	1	; select bank1
 15678  037B' 0080'              	movwf	i1___fltol@f1^(0+128)
 15679  037C' 3180' 2000' 3180'  	fcall	i1___fltol
 15680  037F' 0021               	movlb	1	; select bank1
 15681  0380' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 15682  0381' 0023               	movlb	3	; select bank3
 15683  0382' 0080'              	movwf	(_timeout+1)^(0+384)
 15684  0383' 0021               	movlb	1	; select bank1
 15685  0384' 0800'              	movf	?i1___fltol^(0+128),w
 15686  0385' 0023               	movlb	3	; select bank3
 15687  0386' 0080'              	movwf	_timeout^(0+384)
 15688  0387'                    i1l6367:
 15689                           
 15690                           ;state_machine_b.c: 237:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
 15691  0387' 0020               	movlb	0	; select bank0
 15692  0388' 118E               	bcf	14,3	;volatile
 15693  0389'                    i1l6369:
 15694  0389' 120E               	bcf	14,4	;volatile
 15695  038A'                    i1l6371:
 15696  038A' 3005               	movlw	5
 15697  038B' 0021               	movlb	1	; select bank1
 15698  038C' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 15699  038D' 300F               	movlw	15
 15700  038E' 0080'              	movwf	??i1_converter_settings^(0+128)
 15701  038F' 30F1               	movlw	241
 15702  0390'                    u804_27:
 15703  0390' 0B89               	decfsz	9,f
 15704  0391' 2800'              	goto	u804_27
 15705  0392' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 15706  0393' 2800'              	goto	u804_27
 15707  0394' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 15708  0395' 2800'              	goto	u804_27
 15709  0396'                    i1l6373:
 15710  0396' 0020               	movlb	0	; select bank0
 15711  0397' 158E               	bsf	14,3	;volatile
 15712  0398'                    i1l6375:
 15713  0398' 3005               	movlw	5
 15714  0399' 0021               	movlb	1	; select bank1
 15715  039A' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 15716  039B' 300F               	movlw	15
 15717  039C' 0080'              	movwf	??i1_converter_settings^(0+128)
 15718  039D' 30F1               	movlw	241
 15719  039E'                    u805_27:
 15720  039E' 0B89               	decfsz	9,f
 15721  039F' 2800'              	goto	u805_27
 15722  03A0' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 15723  03A1' 2800'              	goto	u805_27
 15724  03A2' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 15725  03A3' 2800'              	goto	u805_27
 15726  03A4'                    i1l6377:
 15727  03A4' 0020               	movlb	0	; select bank0
 15728  03A5' 118E               	bcf	14,3	;volatile
 15729  03A6'                    i1l6379:
 15730  03A6' 3005               	movlw	5
 15731  03A7' 0021               	movlb	1	; select bank1
 15732  03A8' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 15733  03A9' 300F               	movlw	15
 15734  03AA' 0080'              	movwf	??i1_converter_settings^(0+128)
 15735  03AB' 30F1               	movlw	241
 15736  03AC'                    u806_27:
 15737  03AC' 0B89               	decfsz	9,f
 15738  03AD' 2800'              	goto	u806_27
 15739  03AE' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 15740  03AF' 2800'              	goto	u806_27
 15741  03B0' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 15742  03B1' 2800'              	goto	u806_27
 15743  03B2'                    i1l6381:
 15744  03B2' 0020               	movlb	0	; select bank0
 15745  03B3' 168E               	bsf	14,5	;volatile
 15746  03B4'                    i1l6383:
 15747  03B4' 3005               	movlw	5
 15748  03B5' 0021               	movlb	1	; select bank1
 15749  03B6' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 15750  03B7' 300F               	movlw	15
 15751  03B8' 0080'              	movwf	??i1_converter_settings^(0+128)
 15752  03B9' 30F1               	movlw	241
 15753  03BA'                    u807_27:
 15754  03BA' 0B89               	decfsz	9,f
 15755  03BB' 2800'              	goto	u807_27
 15756  03BC' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 15757  03BD' 2800'              	goto	u807_27
 15758  03BE' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 15759  03BF' 2800'              	goto	u807_27
 15760  03C0'                    i1l6385:
 15761  03C0' 0023               	movlb	3	; select bank3
 15762  03C1' 0800'              	movf	(_CC_disc_kp+3)^(0+384),w
 15763  03C2' 0024               	movlb	4	; select bank4
 15764  03C3' 0080'              	movwf	(_kp+3)^(0+512)
 15765  03C4' 0023               	movlb	3	; select bank3
 15766  03C5' 0800'              	movf	(_CC_disc_kp+2)^(0+384),w
 15767  03C6' 0024               	movlb	4	; select bank4
 15768  03C7' 0080'              	movwf	(_kp+2)^(0+512)
 15769  03C8' 0023               	movlb	3	; select bank3
 15770  03C9' 0800'              	movf	(_CC_disc_kp+1)^(0+384),w
 15771  03CA' 0024               	movlb	4	; select bank4
 15772  03CB' 0080'              	movwf	(_kp+1)^(0+512)
 15773  03CC' 0023               	movlb	3	; select bank3
 15774  03CD' 0800'              	movf	_CC_disc_kp^(0+384),w
 15775  03CE' 0024               	movlb	4	; select bank4
 15776  03CF' 0080'              	movwf	_kp^(0+512)
 15777  03D0'                    i1l6387:
 15778  03D0' 0023               	movlb	3	; select bank3
 15779  03D1' 0800'              	movf	(_CC_disc_ki+3)^(0+384),w
 15780  03D2' 0024               	movlb	4	; select bank4
 15781  03D3' 0080'              	movwf	(_ki+3)^(0+512)
 15782  03D4' 0023               	movlb	3	; select bank3
 15783  03D5' 0800'              	movf	(_CC_disc_ki+2)^(0+384),w
 15784  03D6' 0024               	movlb	4	; select bank4
 15785  03D7' 0080'              	movwf	(_ki+2)^(0+512)
 15786  03D8' 0023               	movlb	3	; select bank3
 15787  03D9' 0800'              	movf	(_CC_disc_ki+1)^(0+384),w
 15788  03DA' 0024               	movlb	4	; select bank4
 15789  03DB' 0080'              	movwf	(_ki+1)^(0+512)
 15790  03DC' 0023               	movlb	3	; select bank3
 15791  03DD' 0800'              	movf	_CC_disc_ki^(0+384),w
 15792  03DE' 0024               	movlb	4	; select bank4
 15793  03DF' 0080'              	movwf	_ki^(0+512)
 15794  03E0' 0023               	movlb	3	; select bank3
 15795  03E1' 0800'              	movf	_CC_char_disc_kd^(0+384),w
 15796  03E2' 0021               	movlb	1	; select bank1
 15797  03E3' 0080'              	movwf	??i1_converter_settings^(0+128)
 15798  03E4' 0181'              	clrf	(??i1_converter_settings^(0+128)+1)
 15799  03E5' 0182'              	clrf	(??i1_converter_settings^(0+128)+2)
 15800  03E6' 0183'              	clrf	(??i1_converter_settings^(0+128)+3)
 15801  03E7' 0800'              	movf	(??i1_converter_settings+3)^(0+128),w
 15802  03E8' 0083'              	movwf	i1___xxtofl@val+3
 15803  03E9' 0800'              	movf	(??i1_converter_settings+2)^(0+128),w
 15804  03EA' 0082'              	movwf	i1___xxtofl@val+2
 15805  03EB' 0800'              	movf	(??i1_converter_settings+1)^(0+128),w
 15806  03EC' 0081'              	movwf	i1___xxtofl@val+1
 15807  03ED' 0800'              	movf	??i1_converter_settings^(0+128),w
 15808  03EE' 0080'              	movwf	i1___xxtofl@val
 15809  03EF' 3000               	movlw	0
 15810  03F0' 3180' 2000' 3180'  	fcall	i1___xxtofl
 15811  03F3' 0803'              	movf	?i1___xxtofl+3,w
 15812  03F4' 0024               	movlb	4	; select bank4
 15813  03F5' 0080'              	movwf	(_kd+3)^(0+512)
 15814  03F6' 0802'              	movf	?i1___xxtofl+2,w
 15815  03F7' 0080'              	movwf	(_kd+2)^(0+512)
 15816  03F8' 0801'              	movf	?i1___xxtofl+1,w
 15817  03F9' 0080'              	movwf	(_kd+1)^(0+512)
 15818  03FA' 0800'              	movf	?i1___xxtofl,w
 15819  03FB' 0080'              	movwf	_kd^(0+512)
 15820  03FC'                    i1l6389:
 15821  03FC' 3000               	movlw	0
 15822  03FD' 0080'              	movwf	(_pidi+3)^(0+512)
 15823  03FE' 3000               	movlw	0
 15824  03FF' 0080'              	movwf	(_pidi+2)^(0+512)
 15825  0400' 3000               	movlw	0
 15826  0401' 0080'              	movwf	(_pidi+1)^(0+512)
 15827  0402' 3000               	movlw	0
 15828  0403' 0080'              	movwf	_pidi^(0+512)
 15829                           
 15830                           ;state_machine_b.c: 238:             break;
 15831  0404' 2800'              	goto	i1l6425
 15832  0405'                    i1l6391:
 15833                           
 15834                           ;state_machine_b.c: 240:             iref = (uint16_t) ( ( ( capacity * 4096.0 ) / (5000
      +                           * 2.5 * 2 ) ) + 0.5 );
 15835  0405' 0023               	movlb	3	; select bank3
 15836  0406' 0800'              	movf	_capacity^(0+384),w
 15837  0407' 0080'              	movwf	i1___xxtofl@val
 15838  0408' 0800'              	movf	(_capacity+1)^(0+384),w
 15839  0409' 0081'              	movwf	i1___xxtofl@val+1
 15840  040A' 0182'              	clrf	i1___xxtofl@val+2
 15841  040B' 0183'              	clrf	i1___xxtofl@val+3
 15842  040C' 3000               	movlw	0
 15843  040D' 3180' 2000' 3180'  	fcall	i1___xxtofl
 15844  0410' 0803'              	movf	?i1___xxtofl+3,w
 15845  0411' 0020               	movlb	0	; select bank0
 15846  0412' 00A3'              	movwf	i1___flmul@a+3
 15847  0413' 0802'              	movf	?i1___xxtofl+2,w
 15848  0414' 00A2'              	movwf	i1___flmul@a+2
 15849  0415' 0801'              	movf	?i1___xxtofl+1,w
 15850  0416' 00A1'              	movwf	i1___flmul@a+1
 15851  0417' 0800'              	movf	?i1___xxtofl,w
 15852  0418' 00A0'              	movwf	i1___flmul@a
 15853  0419' 3045               	movlw	69
 15854  041A' 009F'              	movwf	i1___flmul@b+3
 15855  041B' 3080               	movlw	128
 15856  041C' 009E'              	movwf	i1___flmul@b+2
 15857  041D' 3000               	movlw	0
 15858  041E' 009D'              	movwf	i1___flmul@b+1
 15859  041F' 3000               	movlw	0
 15860  0420' 009C'              	movwf	i1___flmul@b
 15861  0421' 3180' 2000' 3180'  	fcall	i1___flmul
 15862  0424' 0020               	movlb	0	; select bank0
 15863  0425' 081F'              	movf	?i1___flmul+3,w
 15864  0426' 00BD'              	movwf	i1___fldiv@b+3
 15865  0427' 081E'              	movf	?i1___flmul+2,w
 15866  0428' 00BC'              	movwf	i1___fldiv@b+2
 15867  0429' 081D'              	movf	?i1___flmul+1,w
 15868  042A' 00BB'              	movwf	i1___fldiv@b+1
 15869  042B' 081C'              	movf	?i1___flmul,w
 15870  042C' 00BA'              	movwf	i1___fldiv@b
 15871  042D' 3046               	movlw	70
 15872  042E' 00B9'              	movwf	i1___fldiv@a+3
 15873  042F' 30C3               	movlw	195
 15874  0430' 00B8'              	movwf	i1___fldiv@a+2
 15875  0431' 3050               	movlw	80
 15876  0432' 00B7'              	movwf	i1___fldiv@a+1
 15877  0433' 3000               	movlw	0
 15878  0434' 00B6'              	movwf	i1___fldiv@a
 15879  0435' 3180' 2000' 3180'  	fcall	i1___fldiv
 15880  0438' 0020               	movlb	0	; select bank0
 15881  0439' 0839'              	movf	?i1___fldiv+3,w
 15882  043A' 0087'              	movwf	i1___fladd@a+3
 15883  043B' 0838'              	movf	?i1___fldiv+2,w
 15884  043C' 0086'              	movwf	i1___fladd@a+2
 15885  043D' 0837'              	movf	?i1___fldiv+1,w
 15886  043E' 0085'              	movwf	i1___fladd@a+1
 15887  043F' 0836'              	movf	?i1___fldiv,w
 15888  0440' 0084'              	movwf	i1___fladd@a
 15889  0441' 303F               	movlw	63
 15890  0442' 0083'              	movwf	i1___fladd@b+3
 15891  0443' 3000               	movlw	0
 15892  0444' 0082'              	movwf	i1___fladd@b+2
 15893  0445' 3000               	movlw	0
 15894  0446' 0081'              	movwf	i1___fladd@b+1
 15895  0447' 3000               	movlw	0
 15896  0448' 0080'              	movwf	i1___fladd@b
 15897  0449' 3180' 2000' 3180'  	fcall	i1___fladd
 15898  044C' 0020               	movlb	0	; select bank0
 15899  044D' 0803'              	movf	?i1___fladd+3,w
 15900  044E' 0021               	movlb	1	; select bank1
 15901  044F' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 15902  0450' 0020               	movlb	0	; select bank0
 15903  0451' 0802'              	movf	?i1___fladd+2,w
 15904  0452' 0021               	movlb	1	; select bank1
 15905  0453' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 15906  0454' 0020               	movlb	0	; select bank0
 15907  0455' 0801'              	movf	?i1___fladd+1,w
 15908  0456' 0021               	movlb	1	; select bank1
 15909  0457' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 15910  0458' 0020               	movlb	0	; select bank0
 15911  0459' 0800'              	movf	?i1___fladd,w
 15912  045A' 0021               	movlb	1	; select bank1
 15913  045B' 0080'              	movwf	i1___fltol@f1^(0+128)
 15914  045C' 3180' 2000' 3180'  	fcall	i1___fltol
 15915  045F' 0021               	movlb	1	; select bank1
 15916  0460' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 15917  0461' 0080'              	movwf	(_iref+1)^(0+128)
 15918  0462' 0800'              	movf	?i1___fltol^(0+128),w
 15919  0463' 0080'              	movwf	_iref^(0+128)
 15920  0464'                    i1l6393:
 15921                           
 15922                           ;state_machine_b.c: 241:             if(basic_configuration.version == 0x02) timeout = (
      +                          uint16_t)(((float)capacity / (float)basic_configuration.const_current_char) * 3600 * 1.1
      +                          );
 15923  0464' 3002               	movlw	2
 15924  0465' 0024               	movlb	4	; select bank4
 15925  0466' 0600'              	xorwf	_basic_configuration^(0+512),w
 15926  0467' 1D03               	btfss	3,2
 15927  0468' 2800'              	goto	u692_21
 15928  0469' 2800'              	goto	u692_20
 15929  046A'                    u692_21:
 15930  046A' 2800'              	goto	i1l6397
 15931  046B'                    u692_20:
 15932  046B'                    i1l6395:
 15933  046B' 0023               	movlb	3	; select bank3
 15934  046C' 0800'              	movf	_capacity^(0+384),w
 15935  046D' 0080'              	movwf	i1___xxtofl@val
 15936  046E' 0800'              	movf	(_capacity+1)^(0+384),w
 15937  046F' 0081'              	movwf	i1___xxtofl@val+1
 15938  0470' 0182'              	clrf	i1___xxtofl@val+2
 15939  0471' 0183'              	clrf	i1___xxtofl@val+3
 15940  0472' 3000               	movlw	0
 15941  0473' 3180' 2000' 3180'  	fcall	i1___xxtofl
 15942  0476' 0803'              	movf	?i1___xxtofl+3,w
 15943  0477' 0020               	movlb	0	; select bank0
 15944  0478' 00BD'              	movwf	i1___fldiv@b+3
 15945  0479' 0802'              	movf	?i1___xxtofl+2,w
 15946  047A' 00BC'              	movwf	i1___fldiv@b+2
 15947  047B' 0801'              	movf	?i1___xxtofl+1,w
 15948  047C' 00BB'              	movwf	i1___fldiv@b+1
 15949  047D' 0800'              	movf	?i1___xxtofl,w
 15950  047E' 00BA'              	movwf	i1___fldiv@b
 15951  047F' 0024               	movlb	4	; select bank4
 15952  0480' 0803'              	movf	(_basic_configuration^(0+512)+3),w
 15953  0481' 0080'              	movwf	i1___xxtofl@val
 15954  0482' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
 15955  0483' 0081'              	movwf	i1___xxtofl@val+1
 15956  0484' 0182'              	clrf	i1___xxtofl@val+2
 15957  0485' 0183'              	clrf	i1___xxtofl@val+3
 15958  0486' 3000               	movlw	0
 15959  0487' 3180' 2000' 3180'  	fcall	i1___xxtofl
 15960  048A' 0803'              	movf	?i1___xxtofl+3,w
 15961  048B' 0020               	movlb	0	; select bank0
 15962  048C' 00B9'              	movwf	i1___fldiv@a+3
 15963  048D' 0802'              	movf	?i1___xxtofl+2,w
 15964  048E' 00B8'              	movwf	i1___fldiv@a+2
 15965  048F' 0801'              	movf	?i1___xxtofl+1,w
 15966  0490' 00B7'              	movwf	i1___fldiv@a+1
 15967  0491' 0800'              	movf	?i1___xxtofl,w
 15968  0492' 00B6'              	movwf	i1___fldiv@a
 15969  0493' 3180' 2000' 3180'  	fcall	i1___fldiv
 15970  0496' 0020               	movlb	0	; select bank0
 15971  0497' 0839'              	movf	?i1___fldiv+3,w
 15972  0498' 00A3'              	movwf	i1___flmul@a+3
 15973  0499' 0838'              	movf	?i1___fldiv+2,w
 15974  049A' 00A2'              	movwf	i1___flmul@a+2
 15975  049B' 0837'              	movf	?i1___fldiv+1,w
 15976  049C' 00A1'              	movwf	i1___flmul@a+1
 15977  049D' 0836'              	movf	?i1___fldiv,w
 15978  049E' 00A0'              	movwf	i1___flmul@a
 15979  049F' 3045               	movlw	69
 15980  04A0' 009F'              	movwf	i1___flmul@b+3
 15981  04A1' 3061               	movlw	97
 15982  04A2' 009E'              	movwf	i1___flmul@b+2
 15983  04A3' 3000               	movlw	0
 15984  04A4' 009D'              	movwf	i1___flmul@b+1
 15985  04A5' 3000               	movlw	0
 15986  04A6' 009C'              	movwf	i1___flmul@b
 15987  04A7' 3180' 2000' 3180'  	fcall	i1___flmul
 15988  04AA' 0020               	movlb	0	; select bank0
 15989  04AB' 081F'              	movf	?i1___flmul+3,w
 15990  04AC' 0021               	movlb	1	; select bank1
 15991  04AD' 0080'              	movwf	(i1_converter_settings$1748+3)^(0+128)
 15992  04AE' 0020               	movlb	0	; select bank0
 15993  04AF' 081E'              	movf	?i1___flmul+2,w
 15994  04B0' 0021               	movlb	1	; select bank1
 15995  04B1' 0080'              	movwf	(i1_converter_settings$1748+2)^(0+128)
 15996  04B2' 0020               	movlb	0	; select bank0
 15997  04B3' 081D'              	movf	?i1___flmul+1,w
 15998  04B4' 0021               	movlb	1	; select bank1
 15999  04B5' 0080'              	movwf	(i1_converter_settings$1748+1)^(0+128)
 16000  04B6' 0020               	movlb	0	; select bank0
 16001  04B7' 081C'              	movf	?i1___flmul,w
 16002  04B8' 0021               	movlb	1	; select bank1
 16003  04B9' 0080'              	movwf	i1_converter_settings$1748^(0+128)
 16004  04BA' 0800'              	movf	(i1_converter_settings$1748+3)^(0+128),w
 16005  04BB' 0020               	movlb	0	; select bank0
 16006  04BC' 00A3'              	movwf	i1___flmul@a+3
 16007  04BD' 0021               	movlb	1	; select bank1
 16008  04BE' 0800'              	movf	(i1_converter_settings$1748+2)^(0+128),w
 16009  04BF' 0020               	movlb	0	; select bank0
 16010  04C0' 00A2'              	movwf	i1___flmul@a+2
 16011  04C1' 0021               	movlb	1	; select bank1
 16012  04C2' 0800'              	movf	(i1_converter_settings$1748+1)^(0+128),w
 16013  04C3' 0020               	movlb	0	; select bank0
 16014  04C4' 00A1'              	movwf	i1___flmul@a+1
 16015  04C5' 0021               	movlb	1	; select bank1
 16016  04C6' 0800'              	movf	i1_converter_settings$1748^(0+128),w
 16017  04C7' 0020               	movlb	0	; select bank0
 16018  04C8' 00A0'              	movwf	i1___flmul@a
 16019  04C9' 303F               	movlw	63
 16020  04CA' 009F'              	movwf	i1___flmul@b+3
 16021  04CB' 308C               	movlw	140
 16022  04CC' 009E'              	movwf	i1___flmul@b+2
 16023  04CD' 30CC               	movlw	204
 16024  04CE' 009D'              	movwf	i1___flmul@b+1
 16025  04CF' 30CD               	movlw	205
 16026  04D0' 009C'              	movwf	i1___flmul@b
 16027  04D1' 3180' 2000' 3180'  	fcall	i1___flmul
 16028  04D4' 0020               	movlb	0	; select bank0
 16029  04D5' 081F'              	movf	?i1___flmul+3,w
 16030  04D6' 0021               	movlb	1	; select bank1
 16031  04D7' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 16032  04D8' 0020               	movlb	0	; select bank0
 16033  04D9' 081E'              	movf	?i1___flmul+2,w
 16034  04DA' 0021               	movlb	1	; select bank1
 16035  04DB' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 16036  04DC' 0020               	movlb	0	; select bank0
 16037  04DD' 081D'              	movf	?i1___flmul+1,w
 16038  04DE' 0021               	movlb	1	; select bank1
 16039  04DF' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 16040  04E0' 0020               	movlb	0	; select bank0
 16041  04E1' 081C'              	movf	?i1___flmul,w
 16042  04E2' 0021               	movlb	1	; select bank1
 16043  04E3' 0080'              	movwf	i1___fltol@f1^(0+128)
 16044  04E4' 3180' 2000' 3180'  	fcall	i1___fltol
 16045  04E7' 0021               	movlb	1	; select bank1
 16046  04E8' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 16047  04E9' 0023               	movlb	3	; select bank3
 16048  04EA' 0080'              	movwf	(_timeout+1)^(0+384)
 16049  04EB' 0021               	movlb	1	; select bank1
 16050  04EC' 0800'              	movf	?i1___fltol^(0+128),w
 16051  04ED' 0023               	movlb	3	; select bank3
 16052  04EE' 0080'              	movwf	_timeout^(0+384)
 16053  04EF'                    i1l6397:
 16054                           
 16055                           ;state_machine_b.c: 242:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC4 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC4 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_char_kp; ki = CC_char_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
 16056  04EF' 0020               	movlb	0	; select bank0
 16057  04F0' 118E               	bcf	14,3	;volatile
 16058  04F1'                    i1l6399:
 16059  04F1' 120E               	bcf	14,4	;volatile
 16060  04F2'                    i1l6401:
 16061  04F2' 3005               	movlw	5
 16062  04F3' 0021               	movlb	1	; select bank1
 16063  04F4' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 16064  04F5' 300F               	movlw	15
 16065  04F6' 0080'              	movwf	??i1_converter_settings^(0+128)
 16066  04F7' 30F1               	movlw	241
 16067  04F8'                    u808_27:
 16068  04F8' 0B89               	decfsz	9,f
 16069  04F9' 2800'              	goto	u808_27
 16070  04FA' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 16071  04FB' 2800'              	goto	u808_27
 16072  04FC' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 16073  04FD' 2800'              	goto	u808_27
 16074  04FE'                    i1l6403:
 16075  04FE' 0020               	movlb	0	; select bank0
 16076  04FF' 160E               	bsf	14,4	;volatile
 16077  0500'                    i1l6405:
 16078  0500' 3005               	movlw	5
 16079  0501' 0021               	movlb	1	; select bank1
 16080  0502' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 16081  0503' 300F               	movlw	15
 16082  0504' 0080'              	movwf	??i1_converter_settings^(0+128)
 16083  0505' 30F1               	movlw	241
 16084  0506'                    u809_27:
 16085  0506' 0B89               	decfsz	9,f
 16086  0507' 2800'              	goto	u809_27
 16087  0508' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 16088  0509' 2800'              	goto	u809_27
 16089  050A' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 16090  050B' 2800'              	goto	u809_27
 16091  050C'                    i1l6407:
 16092  050C' 0020               	movlb	0	; select bank0
 16093  050D' 120E               	bcf	14,4	;volatile
 16094  050E'                    i1l6409:
 16095  050E' 3005               	movlw	5
 16096  050F' 0021               	movlb	1	; select bank1
 16097  0510' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 16098  0511' 300F               	movlw	15
 16099  0512' 0080'              	movwf	??i1_converter_settings^(0+128)
 16100  0513' 30F1               	movlw	241
 16101  0514'                    u810_27:
 16102  0514' 0B89               	decfsz	9,f
 16103  0515' 2800'              	goto	u810_27
 16104  0516' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 16105  0517' 2800'              	goto	u810_27
 16106  0518' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 16107  0519' 2800'              	goto	u810_27
 16108  051A'                    i1l6411:
 16109  051A' 0020               	movlb	0	; select bank0
 16110  051B' 168E               	bsf	14,5	;volatile
 16111  051C'                    i1l6413:
 16112  051C' 3005               	movlw	5
 16113  051D' 0021               	movlb	1	; select bank1
 16114  051E' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 16115  051F' 300F               	movlw	15
 16116  0520' 0080'              	movwf	??i1_converter_settings^(0+128)
 16117  0521' 30F1               	movlw	241
 16118  0522'                    u811_27:
 16119  0522' 0B89               	decfsz	9,f
 16120  0523' 2800'              	goto	u811_27
 16121  0524' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 16122  0525' 2800'              	goto	u811_27
 16123  0526' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 16124  0527' 2800'              	goto	u811_27
 16125  0528'                    i1l6415:
 16126  0528' 0023               	movlb	3	; select bank3
 16127  0529' 0800'              	movf	(_CC_char_kp+3)^(0+384),w
 16128  052A' 0024               	movlb	4	; select bank4
 16129  052B' 0080'              	movwf	(_kp+3)^(0+512)
 16130  052C' 0023               	movlb	3	; select bank3
 16131  052D' 0800'              	movf	(_CC_char_kp+2)^(0+384),w
 16132  052E' 0024               	movlb	4	; select bank4
 16133  052F' 0080'              	movwf	(_kp+2)^(0+512)
 16134  0530' 0023               	movlb	3	; select bank3
 16135  0531' 0800'              	movf	(_CC_char_kp+1)^(0+384),w
 16136  0532' 0024               	movlb	4	; select bank4
 16137  0533' 0080'              	movwf	(_kp+1)^(0+512)
 16138  0534' 0023               	movlb	3	; select bank3
 16139  0535' 0800'              	movf	_CC_char_kp^(0+384),w
 16140  0536' 0024               	movlb	4	; select bank4
 16141  0537' 0080'              	movwf	_kp^(0+512)
 16142  0538'                    i1l6417:
 16143  0538' 0023               	movlb	3	; select bank3
 16144  0539' 0800'              	movf	(_CC_char_ki+3)^(0+384),w
 16145  053A' 0024               	movlb	4	; select bank4
 16146  053B' 0080'              	movwf	(_ki+3)^(0+512)
 16147  053C' 0023               	movlb	3	; select bank3
 16148  053D' 0800'              	movf	(_CC_char_ki+2)^(0+384),w
 16149  053E' 0024               	movlb	4	; select bank4
 16150  053F' 0080'              	movwf	(_ki+2)^(0+512)
 16151  0540' 0023               	movlb	3	; select bank3
 16152  0541' 0800'              	movf	(_CC_char_ki+1)^(0+384),w
 16153  0542' 0024               	movlb	4	; select bank4
 16154  0543' 0080'              	movwf	(_ki+1)^(0+512)
 16155  0544' 0023               	movlb	3	; select bank3
 16156  0545' 0800'              	movf	_CC_char_ki^(0+384),w
 16157  0546' 0024               	movlb	4	; select bank4
 16158  0547' 0080'              	movwf	_ki^(0+512)
 16159  0548' 0023               	movlb	3	; select bank3
 16160  0549' 0800'              	movf	_CC_char_disc_kd^(0+384),w
 16161  054A' 0021               	movlb	1	; select bank1
 16162  054B' 0080'              	movwf	??i1_converter_settings^(0+128)
 16163  054C' 0181'              	clrf	(??i1_converter_settings^(0+128)+1)
 16164  054D' 0182'              	clrf	(??i1_converter_settings^(0+128)+2)
 16165  054E' 0183'              	clrf	(??i1_converter_settings^(0+128)+3)
 16166  054F' 0800'              	movf	(??i1_converter_settings+3)^(0+128),w
 16167  0550' 0083'              	movwf	i1___xxtofl@val+3
 16168  0551' 0800'              	movf	(??i1_converter_settings+2)^(0+128),w
 16169  0552' 0082'              	movwf	i1___xxtofl@val+2
 16170  0553' 0800'              	movf	(??i1_converter_settings+1)^(0+128),w
 16171  0554' 0081'              	movwf	i1___xxtofl@val+1
 16172  0555' 0800'              	movf	??i1_converter_settings^(0+128),w
 16173  0556' 0080'              	movwf	i1___xxtofl@val
 16174  0557' 3000               	movlw	0
 16175  0558' 3180' 2000' 3180'  	fcall	i1___xxtofl
 16176  055B' 0803'              	movf	?i1___xxtofl+3,w
 16177  055C' 0024               	movlb	4	; select bank4
 16178  055D' 0080'              	movwf	(_kd+3)^(0+512)
 16179  055E' 0802'              	movf	?i1___xxtofl+2,w
 16180  055F' 0080'              	movwf	(_kd+2)^(0+512)
 16181  0560' 0801'              	movf	?i1___xxtofl+1,w
 16182  0561' 0080'              	movwf	(_kd+1)^(0+512)
 16183  0562' 0800'              	movf	?i1___xxtofl,w
 16184  0563' 0080'              	movwf	_kd^(0+512)
 16185  0564'                    i1l6419:
 16186  0564' 3000               	movlw	0
 16187  0565' 0080'              	movwf	(_pidi+3)^(0+512)
 16188  0566' 3000               	movlw	0
 16189  0567' 0080'              	movwf	(_pidi+2)^(0+512)
 16190  0568' 3000               	movlw	0
 16191  0569' 0080'              	movwf	(_pidi+1)^(0+512)
 16192  056A' 3000               	movlw	0
 16193  056B' 0080'              	movwf	_pidi^(0+512)
 16194                           
 16195                           ;state_machine_b.c: 243:             break;
 16196  056C' 2800'              	goto	i1l6425
 16197  056D'                    i1l6423:
 16198  056D' 0023               	movlb	3	; select bank3
 16199  056E' 0800'              	movf	_state^(0+384),w
 16200  056F' 0021               	movlb	1	; select bank1
 16201  0570' 0080'              	movwf	??i1_converter_settings^(0+128)
 16202  0571' 0181'              	clrf	(??i1_converter_settings^(0+128)+1)
 16203                           
 16204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16205                           ; Switch size 1, requested type "simple"
 16206                           ; Number of cases is 1, Range of values is 0 to 0
 16207                           ; switch strategies available:
 16208                           ; Name         Instructions Cycles
 16209                           ; simple_byte            4     3 (average)
 16210                           ; direct_byte            8     6 (fixed)
 16211                           ; jumptable            260     6 (fixed)
 16212                           ;	Chosen strategy is simple_byte
 16213  0572' 0800'              	movf	(??i1_converter_settings+1)^(0+128),w
 16214  0573' 3A00               	xorlw	0	; case 0
 16215  0574' 1903               	skipnz
 16216  0575' 2800'              	goto	i1l7769
 16217  0576' 2800'              	goto	i1l6425
 16218  0577'                    i1l7769:
 16219                           
 16220                           ; Switch size 1, requested type "simple"
 16221                           ; Number of cases is 5, Range of values is 3 to 11
 16222                           ; switch strategies available:
 16223                           ; Name         Instructions Cycles
 16224                           ; simple_byte           16     9 (average)
 16225                           ; direct_byte           27     9 (fixed)
 16226                           ; jumptable            263     9 (fixed)
 16227                           ;	Chosen strategy is simple_byte
 16228  0577' 0800'              	movf	??i1_converter_settings^(0+128),w
 16229  0578' 3A03               	xorlw	3	; case 3
 16230  0579' 1903               	skipnz
 16231  057A' 2800'              	goto	i1l6287
 16232  057B' 3A06               	xorlw	6	; case 5
 16233  057C' 1903               	skipnz
 16234  057D' 2800'              	goto	i1l6391
 16235  057E' 3A02               	xorlw	2	; case 7
 16236  057F' 1903               	skipnz
 16237  0580' 2800'              	goto	i1l6317
 16238  0581' 3A0E               	xorlw	14	; case 9
 16239  0582' 1903               	skipnz
 16240  0583' 2800'              	goto	i1l6361
 16241  0584' 3A02               	xorlw	2	; case 11
 16242  0585' 1903               	skipnz
 16243  0586' 2800'              	goto	i1l6333
 16244  0587' 2800'              	goto	i1l6425
 16245  0588'                    i1l6425:
 16246                           
 16247                           ;state_machine_b.c: 245:     _delay((unsigned long)((10)*(32000000/4000.0)));
 16248  0588' 3068               	movlw	104
 16249  0589' 0021               	movlb	1	; select bank1
 16250  058A' 0080'              	movwf	??i1_converter_settings^(0+128)
 16251  058B' 30E4               	movlw	228
 16252  058C'                    u812_27:
 16253  058C' 0B89               	decfsz	9,f
 16254  058D' 2800'              	goto	u812_27
 16255  058E' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 16256  058F' 2800'              	goto	u812_27
 16257  0590' 0000               	nop
 16258  0591'                    i1l6427:
 16259                           
 16260                           ;state_machine_b.c: 246:     second = 0;
 16261  0591' 0023               	movlb	3	; select bank3
 16262  0592' 0180'              	clrf	_second^(0+384)
 16263  0593' 0180'              	clrf	(_second+1)^(0+384)
 16264  0594'                    i1l6429:
 16265                           
 16266                           ;state_machine_b.c: 247:     conv = 1;
 16267  0594' 0021               	movlb	1	; select bank1
 16268  0595' 0180'              	clrf	_conv^(0+128)
 16269  0596' 0A80'              	incf	_conv^(0+128),f
 16270  0597'                    i1l896:
 16271  0597' 0008               	return
 16272  0598'                    __end_ofi1_converter_settings:
 16273                           
 16274                           	psect	text39
 16275  0000'                    __ptext39:	
 16276 ;; *************** function i1_set_DC *****************
 16277 ;; Defined at:
 16278 ;;		line 290 in file "charger_discharger.c"
 16279 ;; Parameters:    Size  Location     Type
 16280 ;;		None
 16281 ;; Auto vars:     Size  Location     Type
 16282 ;;  dc              2   10[BANK1 ] unsigned short 
 16283 ;; Return value:  Size  Location     Type
 16284 ;;                  1    wreg      void 
 16285 ;; Registers used:
 16286 ;;		wreg, status,2, status,0, pclath, cstack
 16287 ;; Tracked objects:
 16288 ;;		On entry : 0/0
 16289 ;;		On exit  : 0/0
 16290 ;;		Unchanged: 0/0
 16291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16293 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16295 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16296 ;;Total ram usage:        2 bytes
 16297 ;; Hardware stack levels used: 1
 16298 ;; Hardware stack levels required when called: 1
 16299 ;; This function calls:
 16300 ;;		i1___fltol
 16301 ;; This function is called by:
 16302 ;;		_control_loop
 16303 ;;		i1_converter_settings
 16304 ;; This function uses a non-reentrant model
 16305 ;;
 16306                           
 16307  0000'                    i1_set_DC:	
 16308                           ;psect for function i1_set_DC
 16309                           
 16310  0000'                    i1l5517:	
 16311                           ;incstack = 0
 16312                           ; Regs used in i1_set_DC: [wreg+status,2+status,0+pclath+cstack]
 16313                           
 16314                           
 16315                           ;charger_discharger.c: 293:     uint16_t dc = (uint16_t) pidt;
 16316  0000' 0023               	movlb	3	; select bank3
 16317  0001' 0800'              	movf	(_pidt+3)^(0+384),w
 16318  0002' 0021               	movlb	1	; select bank1
 16319  0003' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 16320  0004' 0023               	movlb	3	; select bank3
 16321  0005' 0800'              	movf	(_pidt+2)^(0+384),w
 16322  0006' 0021               	movlb	1	; select bank1
 16323  0007' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 16324  0008' 0023               	movlb	3	; select bank3
 16325  0009' 0800'              	movf	(_pidt+1)^(0+384),w
 16326  000A' 0021               	movlb	1	; select bank1
 16327  000B' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 16328  000C' 0023               	movlb	3	; select bank3
 16329  000D' 0800'              	movf	_pidt^(0+384),w
 16330  000E' 0021               	movlb	1	; select bank1
 16331  000F' 0080'              	movwf	i1___fltol@f1^(0+128)
 16332  0010' 3180' 2000' 3180'  	fcall	i1___fltol
 16333  0013' 0021               	movlb	1	; select bank1
 16334  0014' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 16335  0015' 0080'              	movwf	(i1set_DC@dc+1)^(0+128)
 16336  0016' 0800'              	movf	?i1___fltol^(0+128),w
 16337  0017' 0080'              	movwf	i1set_DC@dc^(0+128)
 16338  0018'                    i1l5519:
 16339                           
 16340                           ;charger_discharger.c: 295:     PSMC1DCL = dc & 0x00FF;
 16341  0018' 0800'              	movf	i1set_DC@dc^(0+128),w
 16342  0019' 0030               	movlb	16	; select bank16
 16343  001A' 00A3               	movwf	35	;volatile
 16344  001B'                    i1l5521:
 16345                           
 16346                           ;charger_discharger.c: 296:     PSMC1DCH = (dc >> 8) & 0x01;
 16347  001B' 0021               	movlb	1	; select bank1
 16348  001C' 0800'              	movf	(i1set_DC@dc+1)^(0+128),w
 16349  001D' 3901               	andlw	1
 16350  001E' 0030               	movlb	16	; select bank16
 16351  001F' 00A4               	movwf	36	;volatile
 16352  0020'                    i1l5523:
 16353                           
 16354                           ;charger_discharger.c: 297:     PSMC1CONbits.PSMC1LD = 1;
 16355  0020' 1711               	bsf	17,6	;volatile
 16356  0021'                    i1l382:
 16357  0021' 0008               	return
 16358  0022'                    __end_ofi1_set_DC:
 16359                           
 16360                           	psect	text40
 16361  0000'                    __ptext40:	
 16362 ;; *************** function i1___fltol *****************
 16363 ;; Defined at:
 16364 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
 16365 ;; Parameters:    Size  Location     Type
 16366 ;;  f1              4    0[BANK1 ] void 
 16367 ;; Auto vars:     Size  Location     Type
 16368 ;;  exp1            1    9[BANK1 ] unsigned char 
 16369 ;;  sign1           1    8[BANK1 ] unsigned char 
 16370 ;; Return value:  Size  Location     Type
 16371 ;;                  4    0[BANK1 ] long 
 16372 ;; Registers used:
 16373 ;;		wreg, status,2, status,0
 16374 ;; Tracked objects:
 16375 ;;		On entry : 0/0
 16376 ;;		On exit  : 0/0
 16377 ;;		Unchanged: 0/0
 16378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16379 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16380 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16381 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16382 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 16383 ;;Total ram usage:       10 bytes
 16384 ;; Hardware stack levels used: 1
 16385 ;; This function calls:
 16386 ;;		Nothing
 16387 ;; This function is called by:
 16388 ;;		_command_interpreter
 16389 ;;		i1_set_DC
 16390 ;;		i1_converter_settings
 16391 ;; This function uses a non-reentrant model
 16392 ;;
 16393                           
 16394  0000'                    i1___fltol:	
 16395                           ;psect for function i1___fltol
 16396                           
 16397  0000'                    i1l5191:	
 16398                           ;incstack = 0
 16399                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
 16400                           
 16401  0000' 1003               	clrc
 16402  0001' 0021               	movlb	1	; select bank1
 16403  0002' 0D00'              	rlf	(i1___fltol@f1+2)^(0+128),w
 16404  0003' 0D00'              	rlf	(i1___fltol@f1+3)^(0+128),w
 16405  0004' 0080'              	movwf	i1___fltol@exp1^(0+128)
 16406  0005' 0800'              	movf	i1___fltol@exp1^(0+128),w
 16407  0006' 1D03               	btfss	3,2
 16408  0007' 2800'              	goto	u496_21
 16409  0008' 2800'              	goto	u496_20
 16410  0009'                    u496_21:
 16411  0009' 2800'              	goto	i1l5197
 16412  000A'                    u496_20:
 16413  000A'                    i1l5193:
 16414  000A' 3000               	movlw	0
 16415  000B' 0080'              	movwf	(?i1___fltol+3)^(0+128)
 16416  000C' 3000               	movlw	0
 16417  000D' 0080'              	movwf	(?i1___fltol+2)^(0+128)
 16418  000E' 3000               	movlw	0
 16419  000F' 0080'              	movwf	(?i1___fltol+1)^(0+128)
 16420  0010' 3000               	movlw	0
 16421  0011' 0080'              	movwf	?i1___fltol^(0+128)
 16422  0012' 2800'              	goto	i1l1240
 16423  0013'                    i1l5197:
 16424  0013' 0800'              	movf	i1___fltol@f1^(0+128),w
 16425  0014' 0080'              	movwf	??i1___fltol^(0+128)
 16426  0015' 0800'              	movf	(i1___fltol@f1+1)^(0+128),w
 16427  0016' 0081'              	movwf	(??i1___fltol^(0+128)+1)
 16428  0017' 0800'              	movf	(i1___fltol@f1+2)^(0+128),w
 16429  0018' 0082'              	movwf	(??i1___fltol^(0+128)+2)
 16430  0019' 0800'              	movf	(i1___fltol@f1+3)^(0+128),w
 16431  001A' 0083'              	movwf	(??i1___fltol^(0+128)+3)
 16432  001B' 301F               	movlw	31
 16433  001C'                    u497_25:
 16434  001C' 3683'              	lsrf	(??i1___fltol^(0+128)+3),f
 16435  001D' 0C82'              	rrf	(??i1___fltol^(0+128)+2),f
 16436  001E' 0C81'              	rrf	(??i1___fltol^(0+128)+1),f
 16437  001F' 0C80'              	rrf	??i1___fltol^(0+128),f
 16438  0020'                    u497_20:
 16439  0020' 0B89               	decfsz	9,f
 16440  0021' 2800'              	goto	u497_25
 16441  0022' 0800'              	movf	??i1___fltol^(0+128),w
 16442  0023' 0080'              	movwf	i1___fltol@sign1^(0+128)
 16443  0024'                    i1l5199:
 16444  0024' 1782'              	bsf	(i1___fltol@f1^(0+128)+2),7
 16445  0025'                    i1l5201:
 16446  0025' 30FF               	movlw	255
 16447  0026' 0580'              	andwf	i1___fltol@f1^(0+128),f
 16448  0027' 30FF               	movlw	255
 16449  0028' 0580'              	andwf	(i1___fltol@f1+1)^(0+128),f
 16450  0029' 30FF               	movlw	255
 16451  002A' 0580'              	andwf	(i1___fltol@f1+2)^(0+128),f
 16452  002B' 3000               	movlw	0
 16453  002C' 0580'              	andwf	(i1___fltol@f1+3)^(0+128),f
 16454  002D'                    i1l5203:
 16455  002D' 3096               	movlw	150
 16456  002E' 0280'              	subwf	i1___fltol@exp1^(0+128),f
 16457  002F'                    i1l5205:
 16458  002F' 1F80'              	btfss	i1___fltol@exp1^(0+128),7
 16459  0030' 2800'              	goto	u498_21
 16460  0031' 2800'              	goto	u498_20
 16461  0032'                    u498_21:
 16462  0032' 2800'              	goto	i1l5215
 16463  0033'                    u498_20:
 16464  0033'                    i1l5207:
 16465  0033' 0800'              	movf	i1___fltol@exp1^(0+128),w
 16466  0034' 3A80               	xorlw	128
 16467  0035' 3E97               	addlw	151
 16468  0036' 1803               	skipnc
 16469  0037' 2800'              	goto	u499_21
 16470  0038' 2800'              	goto	u499_20
 16471  0039'                    u499_21:
 16472  0039' 2800'              	goto	i1l5213
 16473  003A'                    u499_20:
 16474  003A' 2800'              	goto	i1l5193
 16475  003B'                    i1l5213:
 16476  003B' 3001               	movlw	1
 16477  003C'                    u500_25:
 16478  003C' 3680'              	lsrf	(i1___fltol@f1+3)^(0+128),f
 16479  003D' 0C80'              	rrf	(i1___fltol@f1+2)^(0+128),f
 16480  003E' 0C80'              	rrf	(i1___fltol@f1+1)^(0+128),f
 16481  003F' 0C80'              	rrf	i1___fltol@f1^(0+128),f
 16482  0040' 0B89               	decfsz	9,f
 16483  0041' 2800'              	goto	u500_25
 16484  0042' 3001               	movlw	1
 16485  0043' 0080'              	movwf	??i1___fltol^(0+128)
 16486  0044' 0800'              	movf	??i1___fltol^(0+128),w
 16487  0045' 0780'              	addwf	i1___fltol@exp1^(0+128),f
 16488  0046' 1D03               	btfss	3,2
 16489  0047' 2800'              	goto	u501_21
 16490  0048' 2800'              	goto	u501_20
 16491  0049'                    u501_21:
 16492  0049' 2800'              	goto	i1l5213
 16493  004A'                    u501_20:
 16494  004A' 2800'              	goto	i1l5223
 16495  004B'                    i1l5215:
 16496  004B' 3020               	movlw	32
 16497  004C' 0200'              	subwf	i1___fltol@exp1^(0+128),w
 16498  004D' 1C03               	skipc
 16499  004E' 2800'              	goto	u502_21
 16500  004F' 2800'              	goto	u502_20
 16501  0050'                    u502_21:
 16502  0050' 2800'              	goto	i1l1247
 16503  0051'                    u502_20:
 16504  0051' 2800'              	goto	i1l5193
 16505  0052'                    i1l5221:
 16506  0052' 3001               	movlw	1
 16507  0053'                    u503_25:
 16508  0053' 3580'              	lslf	i1___fltol@f1^(0+128),f
 16509  0054' 0D80'              	rlf	(i1___fltol@f1+1)^(0+128),f
 16510  0055' 0D80'              	rlf	(i1___fltol@f1+2)^(0+128),f
 16511  0056' 0D80'              	rlf	(i1___fltol@f1+3)^(0+128),f
 16512  0057' 0B89               	decfsz	9,f
 16513  0058' 2800'              	goto	u503_25
 16514  0059' 3001               	movlw	1
 16515  005A' 0280'              	subwf	i1___fltol@exp1^(0+128),f
 16516  005B'                    i1l1247:
 16517  005B' 0800'              	movf	i1___fltol@exp1^(0+128),w
 16518  005C' 1D03               	btfss	3,2
 16519  005D' 2800'              	goto	u504_21
 16520  005E' 2800'              	goto	u504_20
 16521  005F'                    u504_21:
 16522  005F' 2800'              	goto	i1l5221
 16523  0060'                    u504_20:
 16524  0060'                    i1l5223:
 16525  0060' 0800'              	movf	i1___fltol@sign1^(0+128),w
 16526  0061' 1903               	btfsc	3,2
 16527  0062' 2800'              	goto	u505_21
 16528  0063' 2800'              	goto	u505_20
 16529  0064'                    u505_21:
 16530  0064' 2800'              	goto	i1l1250
 16531  0065'                    u505_20:
 16532  0065'                    i1l5225:
 16533  0065' 0980'              	comf	i1___fltol@f1^(0+128),f
 16534  0066' 0980'              	comf	(i1___fltol@f1+1)^(0+128),f
 16535  0067' 0980'              	comf	(i1___fltol@f1+2)^(0+128),f
 16536  0068' 0980'              	comf	(i1___fltol@f1+3)^(0+128),f
 16537  0069' 0A80'              	incf	i1___fltol@f1^(0+128),f
 16538  006A' 1903               	skipnz
 16539  006B' 0A80'              	incf	(i1___fltol@f1+1)^(0+128),f
 16540  006C' 1903               	skipnz
 16541  006D' 0A80'              	incf	(i1___fltol@f1+2)^(0+128),f
 16542  006E' 1903               	skipnz
 16543  006F' 0A80'              	incf	(i1___fltol@f1+3)^(0+128),f
 16544  0070'                    i1l1250:
 16545  0070'                    i1l1240:
 16546  0070' 0008               	return
 16547  0071'                    __end_ofi1___fltol:
 16548                           
 16549                           	psect	text41
 16550  0000'                    __ptext41:	
 16551 ;; *************** function i1___xxtofl *****************
 16552 ;; Defined at:
 16553 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 16554 ;; Parameters:    Size  Location     Type
 16555 ;;  sign            1    wreg     unsigned char 
 16556 ;;  val             4    0[COMMON] long 
 16557 ;; Auto vars:     Size  Location     Type
 16558 ;;  sign            1    8[COMMON] unsigned char 
 16559 ;;  arg             4   10[COMMON] unsigned long 
 16560 ;;  exp             1    9[COMMON] unsigned char 
 16561 ;; Return value:  Size  Location     Type
 16562 ;;                  4    0[COMMON] unsigned char 
 16563 ;; Registers used:
 16564 ;;		wreg, status,2, status,0
 16565 ;; Tracked objects:
 16566 ;;		On entry : 0/0
 16567 ;;		On exit  : 0/0
 16568 ;;		Unchanged: 0/0
 16569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16570 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16571 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16572 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16573 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16574 ;;Total ram usage:       14 bytes
 16575 ;; Hardware stack levels used: 1
 16576 ;; This function calls:
 16577 ;;		Nothing
 16578 ;; This function is called by:
 16579 ;;		_command_interpreter
 16580 ;;		_control_loop
 16581 ;;		i1_converter_settings
 16582 ;; This function uses a non-reentrant model
 16583 ;;
 16584                           
 16585  0000'                    i1___xxtofl:	
 16586                           ;psect for function i1___xxtofl
 16587                           
 16588                           
 16589                           ;incstack = 0
 16590                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 16591                           ;i1___xxtofl@sign stored from wreg
 16592  0000' 0088'              	movwf	i1___xxtofl@sign
 16593  0001'                    i1l5877:
 16594  0001' 0808'              	movf	i1___xxtofl@sign,w
 16595  0002' 1903               	btfsc	3,2
 16596  0003' 2800'              	goto	u630_21
 16597  0004' 2800'              	goto	u630_20
 16598  0005'                    u630_21:
 16599  0005' 2800'              	goto	i1l5883
 16600  0006'                    u630_20:
 16601  0006'                    i1l5879:
 16602  0006' 1F83'              	btfss	i1___xxtofl@val+3,7
 16603  0007' 2800'              	goto	u631_21
 16604  0008' 2800'              	goto	u631_20
 16605  0009'                    u631_21:
 16606  0009' 2800'              	goto	i1l5883
 16607  000A'                    u631_20:
 16608  000A'                    i1l5881:
 16609  000A' 0900'              	comf	i1___xxtofl@val,w
 16610  000B' 008A'              	movwf	i1___xxtofl@arg
 16611  000C' 0901'              	comf	i1___xxtofl@val+1,w
 16612  000D' 008B'              	movwf	i1___xxtofl@arg+1
 16613  000E' 0902'              	comf	i1___xxtofl@val+2,w
 16614  000F' 008C'              	movwf	i1___xxtofl@arg+2
 16615  0010' 0903'              	comf	i1___xxtofl@val+3,w
 16616  0011' 008D'              	movwf	i1___xxtofl@arg+3
 16617  0012' 0A8A'              	incf	i1___xxtofl@arg,f
 16618  0013' 1903               	skipnz
 16619  0014' 0A8B'              	incf	i1___xxtofl@arg+1,f
 16620  0015' 1903               	skipnz
 16621  0016' 0A8C'              	incf	i1___xxtofl@arg+2,f
 16622  0017' 1903               	skipnz
 16623  0018' 0A8D'              	incf	i1___xxtofl@arg+3,f
 16624  0019' 2800'              	goto	i1l1487
 16625  001A'                    i1l5883:
 16626  001A' 0803'              	movf	i1___xxtofl@val+3,w
 16627  001B' 008D'              	movwf	i1___xxtofl@arg+3
 16628  001C' 0802'              	movf	i1___xxtofl@val+2,w
 16629  001D' 008C'              	movwf	i1___xxtofl@arg+2
 16630  001E' 0801'              	movf	i1___xxtofl@val+1,w
 16631  001F' 008B'              	movwf	i1___xxtofl@arg+1
 16632  0020' 0800'              	movf	i1___xxtofl@val,w
 16633  0021' 008A'              	movwf	i1___xxtofl@arg
 16634  0022'                    i1l1487:
 16635  0022' 0803'              	movf	i1___xxtofl@val+3,w
 16636  0023' 0402'              	iorwf	i1___xxtofl@val+2,w
 16637  0024' 0401'              	iorwf	i1___xxtofl@val+1,w
 16638  0025' 0400'              	iorwf	i1___xxtofl@val,w
 16639  0026' 1D03               	skipz
 16640  0027' 2800'              	goto	u632_21
 16641  0028' 2800'              	goto	u632_20
 16642  0029'                    u632_21:
 16643  0029' 2800'              	goto	i1l5889
 16644  002A'                    u632_20:
 16645  002A'                    i1l5885:
 16646  002A' 3000               	movlw	0
 16647  002B' 0083'              	movwf	?i1___xxtofl+3
 16648  002C' 3000               	movlw	0
 16649  002D' 0082'              	movwf	?i1___xxtofl+2
 16650  002E' 3000               	movlw	0
 16651  002F' 0081'              	movwf	?i1___xxtofl+1
 16652  0030' 3000               	movlw	0
 16653  0031' 0080'              	movwf	?i1___xxtofl
 16654  0032' 2800'              	goto	i1l1489
 16655  0033'                    i1l5889:
 16656  0033' 3096               	movlw	150
 16657  0034' 0089'              	movwf	i1___xxtofl@exp
 16658  0035' 2800'              	goto	i1l5893
 16659  0036'                    i1l5891:
 16660  0036' 3001               	movlw	1
 16661  0037' 0084'              	movwf	??i1___xxtofl
 16662  0038' 0804'              	movf	??i1___xxtofl,w
 16663  0039' 0789'              	addwf	i1___xxtofl@exp,f
 16664  003A' 3001               	movlw	1
 16665  003B'                    u633_25:
 16666  003B' 368D'              	lsrf	i1___xxtofl@arg+3,f
 16667  003C' 0C8C'              	rrf	i1___xxtofl@arg+2,f
 16668  003D' 0C8B'              	rrf	i1___xxtofl@arg+1,f
 16669  003E' 0C8A'              	rrf	i1___xxtofl@arg,f
 16670  003F' 0B89               	decfsz	9,f
 16671  0040' 2800'              	goto	u633_25
 16672  0041'                    i1l5893:
 16673  0041' 30FE               	movlw	254
 16674  0042' 050D'              	andwf	i1___xxtofl@arg+3,w
 16675  0043' 1D03               	btfss	3,2
 16676  0044' 2800'              	goto	u634_21
 16677  0045' 2800'              	goto	u634_20
 16678  0046'                    u634_21:
 16679  0046' 2800'              	goto	i1l5891
 16680  0047'                    u634_20:
 16681  0047' 2800'              	goto	i1l1493
 16682  0048'                    i1l5895:
 16683  0048' 3001               	movlw	1
 16684  0049' 0084'              	movwf	??i1___xxtofl
 16685  004A' 0804'              	movf	??i1___xxtofl,w
 16686  004B' 0789'              	addwf	i1___xxtofl@exp,f
 16687  004C'                    i1l5897:
 16688  004C' 3001               	movlw	1
 16689  004D' 078A'              	addwf	i1___xxtofl@arg,f
 16690  004E' 3000               	movlw	0
 16691  004F' 3D8B'              	addwfc	i1___xxtofl@arg+1,f
 16692  0050' 3000               	movlw	0
 16693  0051' 3D8C'              	addwfc	i1___xxtofl@arg+2,f
 16694  0052' 3000               	movlw	0
 16695  0053' 3D8D'              	addwfc	i1___xxtofl@arg+3,f
 16696  0054'                    i1l5899:
 16697  0054' 3001               	movlw	1
 16698  0055'                    u635_25:
 16699  0055' 368D'              	lsrf	i1___xxtofl@arg+3,f
 16700  0056' 0C8C'              	rrf	i1___xxtofl@arg+2,f
 16701  0057' 0C8B'              	rrf	i1___xxtofl@arg+1,f
 16702  0058' 0C8A'              	rrf	i1___xxtofl@arg,f
 16703  0059' 0B89               	decfsz	9,f
 16704  005A' 2800'              	goto	u635_25
 16705  005B'                    i1l1493:
 16706  005B' 30FF               	movlw	255
 16707  005C' 050D'              	andwf	i1___xxtofl@arg+3,w
 16708  005D' 1D03               	btfss	3,2
 16709  005E' 2800'              	goto	u636_21
 16710  005F' 2800'              	goto	u636_20
 16711  0060'                    u636_21:
 16712  0060' 2800'              	goto	i1l5895
 16713  0061'                    u636_20:
 16714  0061' 2800'              	goto	i1l5903
 16715  0062'                    i1l5901:
 16716  0062' 3001               	movlw	1
 16717  0063' 0289'              	subwf	i1___xxtofl@exp,f
 16718  0064' 3001               	movlw	1
 16719  0065'                    u637_25:
 16720  0065' 358A'              	lslf	i1___xxtofl@arg,f
 16721  0066' 0D8B'              	rlf	i1___xxtofl@arg+1,f
 16722  0067' 0D8C'              	rlf	i1___xxtofl@arg+2,f
 16723  0068' 0D8D'              	rlf	i1___xxtofl@arg+3,f
 16724  0069' 0B89               	decfsz	9,f
 16725  006A' 2800'              	goto	u637_25
 16726  006B'                    i1l5903:
 16727  006B' 1B8C'              	btfsc	i1___xxtofl@arg+2,7
 16728  006C' 2800'              	goto	u638_21
 16729  006D' 2800'              	goto	u638_20
 16730  006E'                    u638_21:
 16731  006E' 2800'              	goto	i1l1500
 16732  006F'                    u638_20:
 16733  006F'                    i1l5905:
 16734  006F' 3002               	movlw	2
 16735  0070' 0209'              	subwf	i1___xxtofl@exp,w
 16736  0071' 1803               	skipnc
 16737  0072' 2800'              	goto	u639_21
 16738  0073' 2800'              	goto	u639_20
 16739  0074'                    u639_21:
 16740  0074' 2800'              	goto	i1l5901
 16741  0075'                    u639_20:
 16742  0075'                    i1l1500:
 16743  0075' 1809'              	btfsc	i1___xxtofl@exp,0
 16744  0076' 2800'              	goto	u640_21
 16745  0077' 2800'              	goto	u640_20
 16746  0078'                    u640_21:
 16747  0078' 2800'              	goto	i1l1501
 16748  0079'                    u640_20:
 16749  0079'                    i1l5907:
 16750  0079' 30FF               	movlw	255
 16751  007A' 058A'              	andwf	i1___xxtofl@arg,f
 16752  007B' 30FF               	movlw	255
 16753  007C' 058B'              	andwf	i1___xxtofl@arg+1,f
 16754  007D' 307F               	movlw	127
 16755  007E' 058C'              	andwf	i1___xxtofl@arg+2,f
 16756  007F' 30FF               	movlw	255
 16757  0080' 058D'              	andwf	i1___xxtofl@arg+3,f
 16758  0081'                    i1l1501:
 16759  0081' 1003               	clrc
 16760  0082' 0C89'              	rrf	i1___xxtofl@exp,f
 16761  0083'                    i1l5909:
 16762  0083' 0809'              	movf	i1___xxtofl@exp,w
 16763  0084' 0084'              	movwf	??i1___xxtofl
 16764  0085' 0185'              	clrf	??i1___xxtofl+1
 16765  0086' 0186'              	clrf	??i1___xxtofl+2
 16766  0087' 0187'              	clrf	??i1___xxtofl+3
 16767  0088' 3018               	movlw	24
 16768  0089'                    u641_25:
 16769  0089' 3584'              	lslf	??i1___xxtofl,f
 16770  008A' 0D85'              	rlf	??i1___xxtofl+1,f
 16771  008B' 0D86'              	rlf	??i1___xxtofl+2,f
 16772  008C' 0D87'              	rlf	??i1___xxtofl+3,f
 16773  008D'                    u641_20:
 16774  008D' 0B89               	decfsz	9,f
 16775  008E' 2800'              	goto	u641_25
 16776  008F' 0804'              	movf	??i1___xxtofl,w
 16777  0090' 048A'              	iorwf	i1___xxtofl@arg,f
 16778  0091' 0805'              	movf	??i1___xxtofl+1,w
 16779  0092' 048B'              	iorwf	i1___xxtofl@arg+1,f
 16780  0093' 0806'              	movf	??i1___xxtofl+2,w
 16781  0094' 048C'              	iorwf	i1___xxtofl@arg+2,f
 16782  0095' 0807'              	movf	??i1___xxtofl+3,w
 16783  0096' 048D'              	iorwf	i1___xxtofl@arg+3,f
 16784  0097'                    i1l5911:
 16785  0097' 0808'              	movf	i1___xxtofl@sign,w
 16786  0098' 1903               	btfsc	3,2
 16787  0099' 2800'              	goto	u642_21
 16788  009A' 2800'              	goto	u642_20
 16789  009B'                    u642_21:
 16790  009B' 2800'              	goto	i1l5917
 16791  009C'                    u642_20:
 16792  009C'                    i1l5913:
 16793  009C' 1F83'              	btfss	i1___xxtofl@val+3,7
 16794  009D' 2800'              	goto	u643_21
 16795  009E' 2800'              	goto	u643_20
 16796  009F'                    u643_21:
 16797  009F' 2800'              	goto	i1l5917
 16798  00A0'                    u643_20:
 16799  00A0'                    i1l5915:
 16800  00A0' 178D'              	bsf	i1___xxtofl@arg+3,7
 16801  00A1'                    i1l5917:
 16802  00A1' 080D'              	movf	i1___xxtofl@arg+3,w
 16803  00A2' 0083'              	movwf	?i1___xxtofl+3
 16804  00A3' 080C'              	movf	i1___xxtofl@arg+2,w
 16805  00A4' 0082'              	movwf	?i1___xxtofl+2
 16806  00A5' 080B'              	movf	i1___xxtofl@arg+1,w
 16807  00A6' 0081'              	movwf	?i1___xxtofl+1
 16808  00A7' 080A'              	movf	i1___xxtofl@arg,w
 16809  00A8' 0080'              	movwf	?i1___xxtofl
 16810  00A9'                    i1l1489:
 16811  00A9' 0008               	return
 16812  00AA'                    __end_ofi1___xxtofl:
 16813                           
 16814                           	psect	text42
 16815  0000'                    __ptext42:	
 16816 ;; *************** function i1___flmul *****************
 16817 ;; Defined at:
 16818 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 16819 ;; Parameters:    Size  Location     Type
 16820 ;;  b               4   28[BANK0 ] unsigned char 
 16821 ;;  a               4   32[BANK0 ] unsigned char 
 16822 ;; Auto vars:     Size  Location     Type
 16823 ;;  prod            4   48[BANK0 ] struct .
 16824 ;;  grs             4   42[BANK0 ] unsigned long 
 16825 ;;  temp            2   52[BANK0 ] struct .
 16826 ;;  bexp            1   47[BANK0 ] unsigned char 
 16827 ;;  aexp            1   46[BANK0 ] unsigned char 
 16828 ;;  sign            1   41[BANK0 ] unsigned char 
 16829 ;; Return value:  Size  Location     Type
 16830 ;;                  4   28[BANK0 ] unsigned char 
 16831 ;; Registers used:
 16832 ;;		wreg, status,2, status,0, pclath, cstack
 16833 ;; Tracked objects:
 16834 ;;		On entry : 0/0
 16835 ;;		On exit  : 0/0
 16836 ;;		Unchanged: 0/0
 16837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16838 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16839 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16840 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16841 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16842 ;;Total ram usage:       26 bytes
 16843 ;; Hardware stack levels used: 1
 16844 ;; Hardware stack levels required when called: 1
 16845 ;; This function calls:
 16846 ;;		i1__Umul8_16
 16847 ;; This function is called by:
 16848 ;;		_command_interpreter
 16849 ;;		_pid
 16850 ;;		i1_converter_settings
 16851 ;; This function uses a non-reentrant model
 16852 ;;
 16853                           
 16854  0000'                    i1___flmul:	
 16855                           ;psect for function i1___flmul
 16856                           
 16857  0000'                    i1l5737:	
 16858                           ;incstack = 0
 16859                           ; Regs used in i1___flmul: [wreg+status,2+status,0+pclath+cstack]
 16860                           
 16861  0000' 0020               	movlb	0	; select bank0
 16862  0001' 081F'              	movf	i1___flmul@b+3,w
 16863  0002' 3980               	andlw	128
 16864  0003' 00A9'              	movwf	i1___flmul@sign
 16865  0004'                    i1l5739:
 16866  0004' 351F'              	lslf	i1___flmul@b+3,w
 16867  0005' 00AF'              	movwf	i1___flmul@bexp
 16868  0006'                    i1l5741:
 16869  0006' 1F9E'              	btfss	i1___flmul@b+2,7
 16870  0007' 2800'              	goto	u604_21
 16871  0008' 2800'              	goto	u604_20
 16872  0009'                    u604_21:
 16873  0009' 2800'              	goto	i1l5745
 16874  000A'                    u604_20:
 16875  000A'                    i1l5743:
 16876  000A' 142F'              	bsf	i1___flmul@bexp,0
 16877  000B'                    i1l5745:
 16878  000B' 082F'              	movf	i1___flmul@bexp,w
 16879  000C' 1903               	btfsc	3,2
 16880  000D' 2800'              	goto	u605_21
 16881  000E' 2800'              	goto	u605_20
 16882  000F'                    u605_21:
 16883  000F' 2800'              	goto	i1l5753
 16884  0010'                    u605_20:
 16885  0010'                    i1l5747:
 16886  0010' 0A2F'              	incf	i1___flmul@bexp,w
 16887  0011' 1D03               	btfss	3,2
 16888  0012' 2800'              	goto	u606_21
 16889  0013' 2800'              	goto	u606_20
 16890  0014'                    u606_21:
 16891  0014' 2800'              	goto	i1l5751
 16892  0015'                    u606_20:
 16893  0015'                    i1l5749:
 16894  0015' 3000               	movlw	0
 16895  0016' 009F'              	movwf	i1___flmul@b+3
 16896  0017' 3000               	movlw	0
 16897  0018' 009E'              	movwf	i1___flmul@b+2
 16898  0019' 3000               	movlw	0
 16899  001A' 009D'              	movwf	i1___flmul@b+1
 16900  001B' 3000               	movlw	0
 16901  001C' 009C'              	movwf	i1___flmul@b
 16902  001D'                    i1l5751:
 16903  001D' 179E'              	bsf	i1___flmul@b+2,7
 16904  001E' 2800'              	goto	i1l5755
 16905  001F'                    i1l5753:
 16906  001F' 3000               	movlw	0
 16907  0020' 009F'              	movwf	i1___flmul@b+3
 16908  0021' 3000               	movlw	0
 16909  0022' 009E'              	movwf	i1___flmul@b+2
 16910  0023' 3000               	movlw	0
 16911  0024' 009D'              	movwf	i1___flmul@b+1
 16912  0025' 3000               	movlw	0
 16913  0026' 009C'              	movwf	i1___flmul@b
 16914  0027'                    i1l5755:
 16915  0027' 0823'              	movf	i1___flmul@a+3,w
 16916  0028' 3980               	andlw	128
 16917  0029' 00A4'              	movwf	??i1___flmul
 16918  002A' 0824'              	movf	??i1___flmul,w
 16919  002B' 06A9'              	xorwf	i1___flmul@sign,f
 16920  002C'                    i1l5757:
 16921  002C' 3523'              	lslf	i1___flmul@a+3,w
 16922  002D' 00AE'              	movwf	i1___flmul@aexp
 16923  002E'                    i1l5759:
 16924  002E' 1FA2'              	btfss	i1___flmul@a+2,7
 16925  002F' 2800'              	goto	u607_21
 16926  0030' 2800'              	goto	u607_20
 16927  0031'                    u607_21:
 16928  0031' 2800'              	goto	i1l5763
 16929  0032'                    u607_20:
 16930  0032'                    i1l5761:
 16931  0032' 142E'              	bsf	i1___flmul@aexp,0
 16932  0033'                    i1l5763:
 16933  0033' 082E'              	movf	i1___flmul@aexp,w
 16934  0034' 1903               	btfsc	3,2
 16935  0035' 2800'              	goto	u608_21
 16936  0036' 2800'              	goto	u608_20
 16937  0037'                    u608_21:
 16938  0037' 2800'              	goto	i1l5771
 16939  0038'                    u608_20:
 16940  0038'                    i1l5765:
 16941  0038' 0A2E'              	incf	i1___flmul@aexp,w
 16942  0039' 1D03               	btfss	3,2
 16943  003A' 2800'              	goto	u609_21
 16944  003B' 2800'              	goto	u609_20
 16945  003C'                    u609_21:
 16946  003C' 2800'              	goto	i1l5769
 16947  003D'                    u609_20:
 16948  003D'                    i1l5767:
 16949  003D' 3000               	movlw	0
 16950  003E' 00A3'              	movwf	i1___flmul@a+3
 16951  003F' 3000               	movlw	0
 16952  0040' 00A2'              	movwf	i1___flmul@a+2
 16953  0041' 3000               	movlw	0
 16954  0042' 00A1'              	movwf	i1___flmul@a+1
 16955  0043' 3000               	movlw	0
 16956  0044' 00A0'              	movwf	i1___flmul@a
 16957  0045'                    i1l5769:
 16958  0045' 17A2'              	bsf	i1___flmul@a+2,7
 16959  0046' 2800'              	goto	i1l5773
 16960  0047'                    i1l5771:
 16961  0047' 3000               	movlw	0
 16962  0048' 00A3'              	movwf	i1___flmul@a+3
 16963  0049' 3000               	movlw	0
 16964  004A' 00A2'              	movwf	i1___flmul@a+2
 16965  004B' 3000               	movlw	0
 16966  004C' 00A1'              	movwf	i1___flmul@a+1
 16967  004D' 3000               	movlw	0
 16968  004E' 00A0'              	movwf	i1___flmul@a
 16969  004F'                    i1l5773:
 16970  004F' 082E'              	movf	i1___flmul@aexp,w
 16971  0050' 1903               	btfsc	3,2
 16972  0051' 2800'              	goto	u610_21
 16973  0052' 2800'              	goto	u610_20
 16974  0053'                    u610_21:
 16975  0053' 2800'              	goto	i1l5777
 16976  0054'                    u610_20:
 16977  0054'                    i1l5775:
 16978  0054' 082F'              	movf	i1___flmul@bexp,w
 16979  0055' 1D03               	btfss	3,2
 16980  0056' 2800'              	goto	u611_21
 16981  0057' 2800'              	goto	u611_20
 16982  0058'                    u611_21:
 16983  0058' 2800'              	goto	i1l5781
 16984  0059'                    u611_20:
 16985  0059'                    i1l5777:
 16986  0059' 3000               	movlw	0
 16987  005A' 009F'              	movwf	?i1___flmul+3
 16988  005B' 3000               	movlw	0
 16989  005C' 009E'              	movwf	?i1___flmul+2
 16990  005D' 3000               	movlw	0
 16991  005E' 009D'              	movwf	?i1___flmul+1
 16992  005F' 3000               	movlw	0
 16993  0060' 009C'              	movwf	?i1___flmul
 16994  0061' 2800'              	goto	i1l1443
 16995  0062'                    i1l5781:
 16996  0062' 081C'              	movf	i1___flmul@b,w
 16997  0063' 0080'              	movwf	i1__Umul8_16@multiplicand
 16998  0064' 0822'              	movf	i1___flmul@a+2,w
 16999  0065' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 17000  0068' 0801'              	movf	?i1__Umul8_16+1,w
 17001  0069' 0020               	movlb	0	; select bank0
 17002  006A' 00B5'              	movwf	i1___flmul@temp+1
 17003  006B' 0800'              	movf	?i1__Umul8_16,w
 17004  006C' 00B4'              	movwf	i1___flmul@temp
 17005  006D'                    i1l5783:
 17006  006D' 0834'              	movf	i1___flmul@temp,w
 17007  006E' 00A4'              	movwf	??i1___flmul
 17008  006F' 01A5'              	clrf	??i1___flmul+1
 17009  0070' 01A6'              	clrf	??i1___flmul+2
 17010  0071' 01A7'              	clrf	??i1___flmul+3
 17011  0072' 0827'              	movf	??i1___flmul+3,w
 17012  0073' 00AD'              	movwf	i1___flmul@grs+3
 17013  0074' 0826'              	movf	??i1___flmul+2,w
 17014  0075' 00AC'              	movwf	i1___flmul@grs+2
 17015  0076' 0825'              	movf	??i1___flmul+1,w
 17016  0077' 00AB'              	movwf	i1___flmul@grs+1
 17017  0078' 0824'              	movf	??i1___flmul,w
 17018  0079' 00AA'              	movwf	i1___flmul@grs
 17019  007A'                    i1l5785:
 17020  007A' 0835'              	movf	i1___flmul@temp+1,w
 17021  007B' 00A4'              	movwf	??i1___flmul
 17022  007C' 01A5'              	clrf	??i1___flmul+1
 17023  007D' 01A6'              	clrf	??i1___flmul+2
 17024  007E' 01A7'              	clrf	??i1___flmul+3
 17025  007F' 0827'              	movf	??i1___flmul+3,w
 17026  0080' 00B3'              	movwf	i1___flmul@prod+3
 17027  0081' 0826'              	movf	??i1___flmul+2,w
 17028  0082' 00B2'              	movwf	i1___flmul@prod+2
 17029  0083' 0825'              	movf	??i1___flmul+1,w
 17030  0084' 00B1'              	movwf	i1___flmul@prod+1
 17031  0085' 0824'              	movf	??i1___flmul,w
 17032  0086' 00B0'              	movwf	i1___flmul@prod
 17033  0087' 081D'              	movf	i1___flmul@b+1,w
 17034  0088' 0080'              	movwf	i1__Umul8_16@multiplicand
 17035  0089' 0821'              	movf	i1___flmul@a+1,w
 17036  008A' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 17037  008D' 0801'              	movf	?i1__Umul8_16+1,w
 17038  008E' 0020               	movlb	0	; select bank0
 17039  008F' 00B5'              	movwf	i1___flmul@temp+1
 17040  0090' 0800'              	movf	?i1__Umul8_16,w
 17041  0091' 00B4'              	movwf	i1___flmul@temp
 17042  0092'                    i1l5787:
 17043  0092' 0834'              	movf	i1___flmul@temp,w
 17044  0093' 00A4'              	movwf	??i1___flmul
 17045  0094' 01A5'              	clrf	??i1___flmul+1
 17046  0095' 01A6'              	clrf	??i1___flmul+2
 17047  0096' 01A7'              	clrf	??i1___flmul+3
 17048  0097' 0824'              	movf	??i1___flmul,w
 17049  0098' 07AA'              	addwf	i1___flmul@grs,f
 17050  0099' 0825'              	movf	??i1___flmul+1,w
 17051  009A' 3DAB'              	addwfc	i1___flmul@grs+1,f
 17052  009B' 0826'              	movf	??i1___flmul+2,w
 17053  009C' 3DAC'              	addwfc	i1___flmul@grs+2,f
 17054  009D' 0827'              	movf	??i1___flmul+3,w
 17055  009E' 3DAD'              	addwfc	i1___flmul@grs+3,f
 17056  009F'                    i1l5789:
 17057  009F' 0835'              	movf	i1___flmul@temp+1,w
 17058  00A0' 00A4'              	movwf	??i1___flmul
 17059  00A1' 01A5'              	clrf	??i1___flmul+1
 17060  00A2' 01A6'              	clrf	??i1___flmul+2
 17061  00A3' 01A7'              	clrf	??i1___flmul+3
 17062  00A4' 0824'              	movf	??i1___flmul,w
 17063  00A5' 07B0'              	addwf	i1___flmul@prod,f
 17064  00A6' 0825'              	movf	??i1___flmul+1,w
 17065  00A7' 3DB1'              	addwfc	i1___flmul@prod+1,f
 17066  00A8' 0826'              	movf	??i1___flmul+2,w
 17067  00A9' 3DB2'              	addwfc	i1___flmul@prod+2,f
 17068  00AA' 0827'              	movf	??i1___flmul+3,w
 17069  00AB' 3DB3'              	addwfc	i1___flmul@prod+3,f
 17070  00AC' 081E'              	movf	i1___flmul@b+2,w
 17071  00AD' 0080'              	movwf	i1__Umul8_16@multiplicand
 17072  00AE' 0820'              	movf	i1___flmul@a,w
 17073  00AF' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 17074  00B2' 0801'              	movf	?i1__Umul8_16+1,w
 17075  00B3' 0020               	movlb	0	; select bank0
 17076  00B4' 00B5'              	movwf	i1___flmul@temp+1
 17077  00B5' 0800'              	movf	?i1__Umul8_16,w
 17078  00B6' 00B4'              	movwf	i1___flmul@temp
 17079  00B7'                    i1l5791:
 17080  00B7' 0834'              	movf	i1___flmul@temp,w
 17081  00B8' 00A4'              	movwf	??i1___flmul
 17082  00B9' 01A5'              	clrf	??i1___flmul+1
 17083  00BA' 01A6'              	clrf	??i1___flmul+2
 17084  00BB' 01A7'              	clrf	??i1___flmul+3
 17085  00BC' 0824'              	movf	??i1___flmul,w
 17086  00BD' 07AA'              	addwf	i1___flmul@grs,f
 17087  00BE' 0825'              	movf	??i1___flmul+1,w
 17088  00BF' 3DAB'              	addwfc	i1___flmul@grs+1,f
 17089  00C0' 0826'              	movf	??i1___flmul+2,w
 17090  00C1' 3DAC'              	addwfc	i1___flmul@grs+2,f
 17091  00C2' 0827'              	movf	??i1___flmul+3,w
 17092  00C3' 3DAD'              	addwfc	i1___flmul@grs+3,f
 17093  00C4'                    i1l5793:
 17094  00C4' 0835'              	movf	i1___flmul@temp+1,w
 17095  00C5' 00A4'              	movwf	??i1___flmul
 17096  00C6' 01A5'              	clrf	??i1___flmul+1
 17097  00C7' 01A6'              	clrf	??i1___flmul+2
 17098  00C8' 01A7'              	clrf	??i1___flmul+3
 17099  00C9' 0824'              	movf	??i1___flmul,w
 17100  00CA' 07B0'              	addwf	i1___flmul@prod,f
 17101  00CB' 0825'              	movf	??i1___flmul+1,w
 17102  00CC' 3DB1'              	addwfc	i1___flmul@prod+1,f
 17103  00CD' 0826'              	movf	??i1___flmul+2,w
 17104  00CE' 3DB2'              	addwfc	i1___flmul@prod+2,f
 17105  00CF' 0827'              	movf	??i1___flmul+3,w
 17106  00D0' 3DB3'              	addwfc	i1___flmul@prod+3,f
 17107  00D1'                    i1l5795:
 17108  00D1' 3008               	movlw	8
 17109  00D2'                    u612_25:
 17110  00D2' 35AA'              	lslf	i1___flmul@grs,f
 17111  00D3' 0DAB'              	rlf	i1___flmul@grs+1,f
 17112  00D4' 0DAC'              	rlf	i1___flmul@grs+2,f
 17113  00D5' 0DAD'              	rlf	i1___flmul@grs+3,f
 17114  00D6' 0B89               	decfsz	9,f
 17115  00D7' 2800'              	goto	u612_25
 17116  00D8'                    i1l5797:
 17117  00D8' 081D'              	movf	i1___flmul@b+1,w
 17118  00D9' 0080'              	movwf	i1__Umul8_16@multiplicand
 17119  00DA' 0820'              	movf	i1___flmul@a,w
 17120  00DB' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 17121  00DE' 0801'              	movf	?i1__Umul8_16+1,w
 17122  00DF' 0020               	movlb	0	; select bank0
 17123  00E0' 00B5'              	movwf	i1___flmul@temp+1
 17124  00E1' 0800'              	movf	?i1__Umul8_16,w
 17125  00E2' 00B4'              	movwf	i1___flmul@temp
 17126  00E3'                    i1l5799:
 17127  00E3' 0834'              	movf	i1___flmul@temp,w
 17128  00E4' 07AA'              	addwf	i1___flmul@grs,f
 17129  00E5' 0835'              	movf	i1___flmul@temp+1,w
 17130  00E6' 3DAB'              	addwfc	i1___flmul@grs+1,f
 17131  00E7' 3000               	movlw	0
 17132  00E8' 3DAC'              	addwfc	i1___flmul@grs+2,f
 17133  00E9' 3DAD'              	addwfc	i1___flmul@grs+3,f
 17134  00EA'                    i1l5801:
 17135  00EA' 081C'              	movf	i1___flmul@b,w
 17136  00EB' 0080'              	movwf	i1__Umul8_16@multiplicand
 17137  00EC' 0821'              	movf	i1___flmul@a+1,w
 17138  00ED' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 17139  00F0' 0801'              	movf	?i1__Umul8_16+1,w
 17140  00F1' 0020               	movlb	0	; select bank0
 17141  00F2' 00B5'              	movwf	i1___flmul@temp+1
 17142  00F3' 0800'              	movf	?i1__Umul8_16,w
 17143  00F4' 00B4'              	movwf	i1___flmul@temp
 17144  00F5'                    i1l5803:
 17145  00F5' 0834'              	movf	i1___flmul@temp,w
 17146  00F6' 07AA'              	addwf	i1___flmul@grs,f
 17147  00F7' 0835'              	movf	i1___flmul@temp+1,w
 17148  00F8' 3DAB'              	addwfc	i1___flmul@grs+1,f
 17149  00F9' 3000               	movlw	0
 17150  00FA' 3DAC'              	addwfc	i1___flmul@grs+2,f
 17151  00FB' 3DAD'              	addwfc	i1___flmul@grs+3,f
 17152  00FC'                    i1l5805:
 17153  00FC' 3008               	movlw	8
 17154  00FD'                    u613_25:
 17155  00FD' 35AA'              	lslf	i1___flmul@grs,f
 17156  00FE' 0DAB'              	rlf	i1___flmul@grs+1,f
 17157  00FF' 0DAC'              	rlf	i1___flmul@grs+2,f
 17158  0100' 0DAD'              	rlf	i1___flmul@grs+3,f
 17159  0101' 0B89               	decfsz	9,f
 17160  0102' 2800'              	goto	u613_25
 17161  0103' 081C'              	movf	i1___flmul@b,w
 17162  0104' 0080'              	movwf	i1__Umul8_16@multiplicand
 17163  0105' 0820'              	movf	i1___flmul@a,w
 17164  0106' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 17165  0109' 0801'              	movf	?i1__Umul8_16+1,w
 17166  010A' 0020               	movlb	0	; select bank0
 17167  010B' 00B5'              	movwf	i1___flmul@temp+1
 17168  010C' 0800'              	movf	?i1__Umul8_16,w
 17169  010D' 00B4'              	movwf	i1___flmul@temp
 17170  010E'                    i1l5807:
 17171  010E' 0834'              	movf	i1___flmul@temp,w
 17172  010F' 07AA'              	addwf	i1___flmul@grs,f
 17173  0110' 0835'              	movf	i1___flmul@temp+1,w
 17174  0111' 3DAB'              	addwfc	i1___flmul@grs+1,f
 17175  0112' 3000               	movlw	0
 17176  0113' 3DAC'              	addwfc	i1___flmul@grs+2,f
 17177  0114' 3DAD'              	addwfc	i1___flmul@grs+3,f
 17178  0115'                    i1l5809:
 17179  0115' 081D'              	movf	i1___flmul@b+1,w
 17180  0116' 0080'              	movwf	i1__Umul8_16@multiplicand
 17181  0117' 0822'              	movf	i1___flmul@a+2,w
 17182  0118' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 17183  011B' 0801'              	movf	?i1__Umul8_16+1,w
 17184  011C' 0020               	movlb	0	; select bank0
 17185  011D' 00B5'              	movwf	i1___flmul@temp+1
 17186  011E' 0800'              	movf	?i1__Umul8_16,w
 17187  011F' 00B4'              	movwf	i1___flmul@temp
 17188  0120' 0834'              	movf	i1___flmul@temp,w
 17189  0121' 07B0'              	addwf	i1___flmul@prod,f
 17190  0122' 0835'              	movf	i1___flmul@temp+1,w
 17191  0123' 3DB1'              	addwfc	i1___flmul@prod+1,f
 17192  0124' 3000               	movlw	0
 17193  0125' 3DB2'              	addwfc	i1___flmul@prod+2,f
 17194  0126' 3DB3'              	addwfc	i1___flmul@prod+3,f
 17195  0127'                    i1l5811:
 17196  0127' 081E'              	movf	i1___flmul@b+2,w
 17197  0128' 0080'              	movwf	i1__Umul8_16@multiplicand
 17198  0129' 0821'              	movf	i1___flmul@a+1,w
 17199  012A' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 17200  012D' 0801'              	movf	?i1__Umul8_16+1,w
 17201  012E' 0020               	movlb	0	; select bank0
 17202  012F' 00B5'              	movwf	i1___flmul@temp+1
 17203  0130' 0800'              	movf	?i1__Umul8_16,w
 17204  0131' 00B4'              	movwf	i1___flmul@temp
 17205  0132'                    i1l5813:
 17206  0132' 0834'              	movf	i1___flmul@temp,w
 17207  0133' 07B0'              	addwf	i1___flmul@prod,f
 17208  0134' 0835'              	movf	i1___flmul@temp+1,w
 17209  0135' 3DB1'              	addwfc	i1___flmul@prod+1,f
 17210  0136' 3000               	movlw	0
 17211  0137' 3DB2'              	addwfc	i1___flmul@prod+2,f
 17212  0138' 3DB3'              	addwfc	i1___flmul@prod+3,f
 17213  0139' 081E'              	movf	i1___flmul@b+2,w
 17214  013A' 0080'              	movwf	i1__Umul8_16@multiplicand
 17215  013B' 0822'              	movf	i1___flmul@a+2,w
 17216  013C' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 17217  013F' 0801'              	movf	?i1__Umul8_16+1,w
 17218  0140' 0020               	movlb	0	; select bank0
 17219  0141' 00B5'              	movwf	i1___flmul@temp+1
 17220  0142' 0800'              	movf	?i1__Umul8_16,w
 17221  0143' 00B4'              	movwf	i1___flmul@temp
 17222  0144'                    i1l5815:
 17223  0144' 0834'              	movf	i1___flmul@temp,w
 17224  0145' 00A4'              	movwf	??i1___flmul
 17225  0146' 0835'              	movf	i1___flmul@temp+1,w
 17226  0147' 00A5'              	movwf	??i1___flmul+1
 17227  0148' 01A6'              	clrf	??i1___flmul+2
 17228  0149' 01A7'              	clrf	??i1___flmul+3
 17229  014A' 3008               	movlw	8
 17230  014B'                    u614_25:
 17231  014B' 35A4'              	lslf	??i1___flmul,f
 17232  014C' 0DA5'              	rlf	??i1___flmul+1,f
 17233  014D' 0DA6'              	rlf	??i1___flmul+2,f
 17234  014E' 0DA7'              	rlf	??i1___flmul+3,f
 17235  014F'                    u614_20:
 17236  014F' 0B89               	decfsz	9,f
 17237  0150' 2800'              	goto	u614_25
 17238  0151' 0824'              	movf	??i1___flmul,w
 17239  0152' 07B0'              	addwf	i1___flmul@prod,f
 17240  0153' 0825'              	movf	??i1___flmul+1,w
 17241  0154' 3DB1'              	addwfc	i1___flmul@prod+1,f
 17242  0155' 0826'              	movf	??i1___flmul+2,w
 17243  0156' 3DB2'              	addwfc	i1___flmul@prod+2,f
 17244  0157' 0827'              	movf	??i1___flmul+3,w
 17245  0158' 3DB3'              	addwfc	i1___flmul@prod+3,f
 17246  0159'                    i1l5817:
 17247  0159' 082A'              	movf	i1___flmul@grs,w
 17248  015A' 00A4'              	movwf	??i1___flmul
 17249  015B' 082B'              	movf	i1___flmul@grs+1,w
 17250  015C' 00A5'              	movwf	??i1___flmul+1
 17251  015D' 082C'              	movf	i1___flmul@grs+2,w
 17252  015E' 00A6'              	movwf	??i1___flmul+2
 17253  015F' 082D'              	movf	i1___flmul@grs+3,w
 17254  0160' 00A7'              	movwf	??i1___flmul+3
 17255  0161' 3018               	movlw	24
 17256  0162'                    u615_25:
 17257  0162' 36A7'              	lsrf	??i1___flmul+3,f
 17258  0163' 0CA6'              	rrf	??i1___flmul+2,f
 17259  0164' 0CA5'              	rrf	??i1___flmul+1,f
 17260  0165' 0CA4'              	rrf	??i1___flmul,f
 17261  0166'                    u615_20:
 17262  0166' 0B89               	decfsz	9,f
 17263  0167' 2800'              	goto	u615_25
 17264  0168' 0824'              	movf	??i1___flmul,w
 17265  0169' 07B0'              	addwf	i1___flmul@prod,f
 17266  016A' 0825'              	movf	??i1___flmul+1,w
 17267  016B' 3DB1'              	addwfc	i1___flmul@prod+1,f
 17268  016C' 0826'              	movf	??i1___flmul+2,w
 17269  016D' 3DB2'              	addwfc	i1___flmul@prod+2,f
 17270  016E' 0827'              	movf	??i1___flmul+3,w
 17271  016F' 3DB3'              	addwfc	i1___flmul@prod+3,f
 17272  0170'                    i1l5819:
 17273  0170' 3008               	movlw	8
 17274  0171'                    u616_25:
 17275  0171' 35AA'              	lslf	i1___flmul@grs,f
 17276  0172' 0DAB'              	rlf	i1___flmul@grs+1,f
 17277  0173' 0DAC'              	rlf	i1___flmul@grs+2,f
 17278  0174' 0DAD'              	rlf	i1___flmul@grs+3,f
 17279  0175' 0B89               	decfsz	9,f
 17280  0176' 2800'              	goto	u616_25
 17281  0177'                    i1l5821:
 17282  0177' 082F'              	movf	i1___flmul@bexp,w
 17283  0178' 072E'              	addwf	i1___flmul@aexp,w
 17284  0179' 00A4'              	movwf	??i1___flmul
 17285  017A' 01A5'              	clrf	??i1___flmul+1
 17286  017B' 0DA5'              	rlf	??i1___flmul+1,f
 17287  017C' 0824'              	movf	??i1___flmul,w
 17288  017D' 3E82               	addlw	130
 17289  017E' 00B4'              	movwf	i1___flmul@temp
 17290  017F' 30FF               	movlw	255
 17291  0180' 3D25'              	addwfc	??i1___flmul+1,w
 17292  0181' 00B5'              	movwf	i1___flmul@temp+1
 17293  0182' 2800'              	goto	i1l5833
 17294  0183'                    i1l5823:
 17295  0183' 3001               	movlw	1
 17296  0184'                    u617_25:
 17297  0184' 35B0'              	lslf	i1___flmul@prod,f
 17298  0185' 0DB1'              	rlf	i1___flmul@prod+1,f
 17299  0186' 0DB2'              	rlf	i1___flmul@prod+2,f
 17300  0187' 0DB3'              	rlf	i1___flmul@prod+3,f
 17301  0188' 0B89               	decfsz	9,f
 17302  0189' 2800'              	goto	u617_25
 17303  018A'                    i1l5825:
 17304  018A' 1FAD'              	btfss	i1___flmul@grs+3,7
 17305  018B' 2800'              	goto	u618_21
 17306  018C' 2800'              	goto	u618_20
 17307  018D'                    u618_21:
 17308  018D' 2800'              	goto	i1l5829
 17309  018E'                    u618_20:
 17310  018E'                    i1l5827:
 17311  018E' 1430'              	bsf	i1___flmul@prod,0
 17312  018F'                    i1l5829:
 17313  018F' 3001               	movlw	1
 17314  0190'                    u619_25:
 17315  0190' 35AA'              	lslf	i1___flmul@grs,f
 17316  0191' 0DAB'              	rlf	i1___flmul@grs+1,f
 17317  0192' 0DAC'              	rlf	i1___flmul@grs+2,f
 17318  0193' 0DAD'              	rlf	i1___flmul@grs+3,f
 17319  0194' 0B89               	decfsz	9,f
 17320  0195' 2800'              	goto	u619_25
 17321  0196'                    i1l5831:
 17322  0196' 30FF               	movlw	255
 17323  0197' 07B4'              	addwf	i1___flmul@temp,f
 17324  0198' 30FF               	movlw	255
 17325  0199' 3DB5'              	addwfc	i1___flmul@temp+1,f
 17326  019A'                    i1l5833:
 17327  019A' 1FB2'              	btfss	i1___flmul@prod+2,7
 17328  019B' 2800'              	goto	u620_21
 17329  019C' 2800'              	goto	u620_20
 17330  019D'                    u620_21:
 17331  019D' 2800'              	goto	i1l5823
 17332  019E'                    u620_20:
 17333  019E'                    i1l5835:
 17334  019E' 01AE'              	clrf	i1___flmul@aexp
 17335  019F'                    i1l5837:
 17336  019F' 1FAD'              	btfss	i1___flmul@grs+3,7
 17337  01A0' 2800'              	goto	u621_21
 17338  01A1' 2800'              	goto	u621_20
 17339  01A2'                    u621_21:
 17340  01A2' 2800'              	goto	i1l5845
 17341  01A3'                    u621_20:
 17342  01A3'                    i1l5839:
 17343  01A3' 30FF               	movlw	255
 17344  01A4' 052A'              	andwf	i1___flmul@grs,w
 17345  01A5' 00A4'              	movwf	??i1___flmul
 17346  01A6' 30FF               	movlw	255
 17347  01A7' 052B'              	andwf	i1___flmul@grs+1,w
 17348  01A8' 00A5'              	movwf	??i1___flmul+1
 17349  01A9' 30FF               	movlw	255
 17350  01AA' 052C'              	andwf	i1___flmul@grs+2,w
 17351  01AB' 00A6'              	movwf	??i1___flmul+2
 17352  01AC' 307F               	movlw	127
 17353  01AD' 052D'              	andwf	i1___flmul@grs+3,w
 17354  01AE' 00A7'              	movwf	??i1___flmul+3
 17355  01AF' 0827'              	movf	??i1___flmul+3,w
 17356  01B0' 0426'              	iorwf	??i1___flmul+2,w
 17357  01B1' 0425'              	iorwf	??i1___flmul+1,w
 17358  01B2' 0424'              	iorwf	??i1___flmul,w
 17359  01B3' 1903               	skipnz
 17360  01B4' 2800'              	goto	u622_21
 17361  01B5' 2800'              	goto	u622_20
 17362  01B6'                    u622_21:
 17363  01B6' 2800'              	goto	i1l1449
 17364  01B7'                    u622_20:
 17365  01B7'                    i1l5841:
 17366  01B7' 01AE'              	clrf	i1___flmul@aexp
 17367  01B8' 0AAE'              	incf	i1___flmul@aexp,f
 17368  01B9' 2800'              	goto	i1l5845
 17369  01BA'                    i1l1449:
 17370  01BA' 1C30'              	btfss	i1___flmul@prod,0
 17371  01BB' 2800'              	goto	u623_21
 17372  01BC' 2800'              	goto	u623_20
 17373  01BD'                    u623_21:
 17374  01BD' 2800'              	goto	i1l5845
 17375  01BE'                    u623_20:
 17376  01BE' 2800'              	goto	i1l5841
 17377  01BF'                    i1l5845:
 17378  01BF' 082E'              	movf	i1___flmul@aexp,w
 17379  01C0' 1903               	btfsc	3,2
 17380  01C1' 2800'              	goto	u624_21
 17381  01C2' 2800'              	goto	u624_20
 17382  01C3'                    u624_21:
 17383  01C3' 2800'              	goto	i1l5855
 17384  01C4'                    u624_20:
 17385  01C4'                    i1l5847:
 17386  01C4' 3001               	movlw	1
 17387  01C5' 07B0'              	addwf	i1___flmul@prod,f
 17388  01C6' 3000               	movlw	0
 17389  01C7' 3DB1'              	addwfc	i1___flmul@prod+1,f
 17390  01C8' 3000               	movlw	0
 17391  01C9' 3DB2'              	addwfc	i1___flmul@prod+2,f
 17392  01CA' 3000               	movlw	0
 17393  01CB' 3DB3'              	addwfc	i1___flmul@prod+3,f
 17394  01CC'                    i1l5849:
 17395  01CC' 1C33'              	btfss	i1___flmul@prod+3,0
 17396  01CD' 2800'              	goto	u625_21
 17397  01CE' 2800'              	goto	u625_20
 17398  01CF'                    u625_21:
 17399  01CF' 2800'              	goto	i1l5855
 17400  01D0'                    u625_20:
 17401  01D0'                    i1l5851:
 17402  01D0' 0830'              	movf	i1___flmul@prod,w
 17403  01D1' 00A4'              	movwf	??i1___flmul
 17404  01D2' 0831'              	movf	i1___flmul@prod+1,w
 17405  01D3' 00A5'              	movwf	??i1___flmul+1
 17406  01D4' 0832'              	movf	i1___flmul@prod+2,w
 17407  01D5' 00A6'              	movwf	??i1___flmul+2
 17408  01D6' 0833'              	movf	i1___flmul@prod+3,w
 17409  01D7' 00A7'              	movwf	??i1___flmul+3
 17410  01D8' 3001               	movlw	1
 17411  01D9' 00A8'              	movwf	??i1___flmul+4
 17412  01DA'                    u626_25:
 17413  01DA' 37A7'              	asrf	??i1___flmul+3,f
 17414  01DB' 0CA6'              	rrf	??i1___flmul+2,f
 17415  01DC' 0CA5'              	rrf	??i1___flmul+1,f
 17416  01DD' 0CA4'              	rrf	??i1___flmul,f
 17417  01DE'                    u626_20:
 17418  01DE' 0BA8'              	decfsz	??i1___flmul+4,f
 17419  01DF' 2800'              	goto	u626_25
 17420  01E0' 0827'              	movf	??i1___flmul+3,w
 17421  01E1' 00B3'              	movwf	i1___flmul@prod+3
 17422  01E2' 0826'              	movf	??i1___flmul+2,w
 17423  01E3' 00B2'              	movwf	i1___flmul@prod+2
 17424  01E4' 0825'              	movf	??i1___flmul+1,w
 17425  01E5' 00B1'              	movwf	i1___flmul@prod+1
 17426  01E6' 0824'              	movf	??i1___flmul,w
 17427  01E7' 00B0'              	movwf	i1___flmul@prod
 17428  01E8'                    i1l5853:
 17429  01E8' 3001               	movlw	1
 17430  01E9' 07B4'              	addwf	i1___flmul@temp,f
 17431  01EA' 3000               	movlw	0
 17432  01EB' 3DB5'              	addwfc	i1___flmul@temp+1,f
 17433  01EC'                    i1l5855:
 17434  01EC' 0835'              	movf	i1___flmul@temp+1,w
 17435  01ED' 3A80               	xorlw	128
 17436  01EE' 00A4'              	movwf	??i1___flmul
 17437  01EF' 3080               	movlw	128
 17438  01F0' 0224'              	subwf	??i1___flmul,w
 17439  01F1' 1D03               	skipz
 17440  01F2' 2800'              	goto	u627_25
 17441  01F3' 30FF               	movlw	255
 17442  01F4' 0234'              	subwf	i1___flmul@temp,w
 17443  01F5'                    u627_25:
 17444  01F5' 1C03               	skipc
 17445  01F6' 2800'              	goto	u627_21
 17446  01F7' 2800'              	goto	u627_20
 17447  01F8'                    u627_21:
 17448  01F8' 2800'              	goto	i1l5859
 17449  01F9'                    u627_20:
 17450  01F9'                    i1l5857:
 17451  01F9' 307F               	movlw	127
 17452  01FA' 0020               	movlb	0	; select bank0
 17453  01FB' 00B3'              	movwf	i1___flmul@prod+3
 17454  01FC' 3080               	movlw	128
 17455  01FD' 00B2'              	movwf	i1___flmul@prod+2
 17456  01FE' 3000               	movlw	0
 17457  01FF' 00B1'              	movwf	i1___flmul@prod+1
 17458  0200' 3000               	movlw	0
 17459  0201' 00B0'              	movwf	i1___flmul@prod
 17460  0202' 2800'              	goto	i1l1455
 17461  0203'                    i1l5859:
 17462  0203' 0020               	movlb	0	; select bank0
 17463  0204' 0835'              	movf	i1___flmul@temp+1,w
 17464  0205' 3A80               	xorlw	128
 17465  0206' 00A4'              	movwf	??i1___flmul
 17466  0207' 3080               	movlw	128
 17467  0208' 0224'              	subwf	??i1___flmul,w
 17468  0209' 1D03               	skipz
 17469  020A' 2800'              	goto	u628_25
 17470  020B' 3001               	movlw	1
 17471  020C' 0234'              	subwf	i1___flmul@temp,w
 17472  020D'                    u628_25:
 17473  020D' 1803               	skipnc
 17474  020E' 2800'              	goto	u628_21
 17475  020F' 2800'              	goto	u628_20
 17476  0210'                    u628_21:
 17477  0210' 2800'              	goto	i1l5865
 17478  0211'                    u628_20:
 17479  0211'                    i1l5861:
 17480  0211' 3000               	movlw	0
 17481  0212' 0020               	movlb	0	; select bank0
 17482  0213' 00B3'              	movwf	i1___flmul@prod+3
 17483  0214' 3000               	movlw	0
 17484  0215' 00B2'              	movwf	i1___flmul@prod+2
 17485  0216' 3000               	movlw	0
 17486  0217' 00B1'              	movwf	i1___flmul@prod+1
 17487  0218' 3000               	movlw	0
 17488  0219' 00B0'              	movwf	i1___flmul@prod
 17489  021A'                    i1l5863:
 17490  021A' 01A9'              	clrf	i1___flmul@sign
 17491  021B' 2800'              	goto	i1l1455
 17492  021C'                    i1l5865:
 17493  021C' 0020               	movlb	0	; select bank0
 17494  021D' 0834'              	movf	i1___flmul@temp,w
 17495  021E' 00AF'              	movwf	i1___flmul@bexp
 17496  021F' 30FF               	movlw	255
 17497  0220' 05B0'              	andwf	i1___flmul@prod,f
 17498  0221' 30FF               	movlw	255
 17499  0222' 05B1'              	andwf	i1___flmul@prod+1,f
 17500  0223' 307F               	movlw	127
 17501  0224' 05B2'              	andwf	i1___flmul@prod+2,f
 17502  0225' 3000               	movlw	0
 17503  0226' 05B3'              	andwf	i1___flmul@prod+3,f
 17504  0227'                    i1l5867:
 17505  0227' 1C2F'              	btfss	i1___flmul@bexp,0
 17506  0228' 2800'              	goto	u629_21
 17507  0229' 2800'              	goto	u629_20
 17508  022A'                    u629_21:
 17509  022A' 2800'              	goto	i1l5871
 17510  022B'                    u629_20:
 17511  022B'                    i1l5869:
 17512  022B' 17B2'              	bsf	i1___flmul@prod+2,7
 17513  022C'                    i1l5871:
 17514  022C' 362F'              	lsrf	i1___flmul@bexp,w
 17515  022D' 00B3'              	movwf	i1___flmul@prod+3
 17516  022E'                    i1l1455:
 17517  022E' 0829'              	movf	i1___flmul@sign,w
 17518  022F' 00A4'              	movwf	??i1___flmul
 17519  0230' 0824'              	movf	??i1___flmul,w
 17520  0231' 04B3'              	iorwf	i1___flmul@prod+3,f
 17521  0232'                    i1l5873:
 17522  0232' 0833'              	movf	i1___flmul@prod+3,w
 17523  0233' 009F'              	movwf	?i1___flmul+3
 17524  0234' 0832'              	movf	i1___flmul@prod+2,w
 17525  0235' 009E'              	movwf	?i1___flmul+2
 17526  0236' 0831'              	movf	i1___flmul@prod+1,w
 17527  0237' 009D'              	movwf	?i1___flmul+1
 17528  0238' 0830'              	movf	i1___flmul@prod,w
 17529  0239' 009C'              	movwf	?i1___flmul
 17530  023A'                    i1l1443:
 17531  023A' 0008               	return
 17532  023B'                    __end_ofi1___flmul:
 17533                           
 17534                           	psect	text43
 17535  0000'                    __ptext43:	
 17536 ;; *************** function i1__Umul8_16 *****************
 17537 ;; Defined at:
 17538 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8_16.c"
 17539 ;; Parameters:    Size  Location     Type
 17540 ;;  multiplier      1    wreg     unsigned char 
 17541 ;;  multiplicand    1    0[COMMON] unsigned char 
 17542 ;; Auto vars:     Size  Location     Type
 17543 ;;  multiplier      1    8[COMMON] unsigned char 
 17544 ;;  word_mpld       2    6[COMMON] unsigned int 
 17545 ;;  product         2    4[COMMON] unsigned int 
 17546 ;; Return value:  Size  Location     Type
 17547 ;;                  2    0[COMMON] unsigned int 
 17548 ;; Registers used:
 17549 ;;		wreg, status,2, status,0
 17550 ;; Tracked objects:
 17551 ;;		On entry : 0/0
 17552 ;;		On exit  : 0/0
 17553 ;;		Unchanged: 0/0
 17554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17556 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17557 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17558 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17559 ;;Total ram usage:        9 bytes
 17560 ;; Hardware stack levels used: 1
 17561 ;; This function calls:
 17562 ;;		Nothing
 17563 ;; This function is called by:
 17564 ;;		i1___flmul
 17565 ;; This function uses a non-reentrant model
 17566 ;;
 17567                           
 17568  0000'                    i1__Umul8_16:	
 17569                           ;psect for function i1__Umul8_16
 17570                           
 17571                           
 17572                           ;incstack = 0
 17573                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 17574                           ;i1__Umul8_16@multiplier stored from wreg
 17575  0000' 0088'              	movwf	i1__Umul8_16@multiplier
 17576  0001'                    i1l5421:
 17577  0001' 0184'              	clrf	i1__Umul8_16@product
 17578  0002' 0185'              	clrf	i1__Umul8_16@product+1
 17579  0003'                    i1l5423:
 17580  0003' 0800'              	movf	i1__Umul8_16@multiplicand,w
 17581  0004' 0082'              	movwf	??i1__Umul8_16
 17582  0005' 0183'              	clrf	??i1__Umul8_16+1
 17583  0006' 0802'              	movf	??i1__Umul8_16,w
 17584  0007' 0086'              	movwf	i1__Umul8_16@word_mpld
 17585  0008' 0803'              	movf	??i1__Umul8_16+1,w
 17586  0009' 0087'              	movwf	i1__Umul8_16@word_mpld+1
 17587  000A'                    i1l5425:
 17588  000A' 1C08'              	btfss	i1__Umul8_16@multiplier,0
 17589  000B' 2800'              	goto	u549_21
 17590  000C' 2800'              	goto	u549_20
 17591  000D'                    u549_21:
 17592  000D' 2800'              	goto	i1l1462
 17593  000E'                    u549_20:
 17594  000E'                    i1l5427:
 17595  000E' 0806'              	movf	i1__Umul8_16@word_mpld,w
 17596  000F' 0784'              	addwf	i1__Umul8_16@product,f
 17597  0010' 0807'              	movf	i1__Umul8_16@word_mpld+1,w
 17598  0011' 3D85'              	addwfc	i1__Umul8_16@product+1,f
 17599  0012'                    i1l1462:
 17600  0012' 3001               	movlw	1
 17601  0013'                    u550_25:
 17602  0013' 3586'              	lslf	i1__Umul8_16@word_mpld,f
 17603  0014' 0D87'              	rlf	i1__Umul8_16@word_mpld+1,f
 17604  0015' 0B89               	decfsz	9,f
 17605  0016' 2800'              	goto	u550_25
 17606  0017' 1003               	clrc
 17607  0018' 0C88'              	rrf	i1__Umul8_16@multiplier,f
 17608  0019'                    i1l5429:
 17609  0019' 0808'              	movf	i1__Umul8_16@multiplier,w
 17610  001A' 1D03               	btfss	3,2
 17611  001B' 2800'              	goto	u551_21
 17612  001C' 2800'              	goto	u551_20
 17613  001D'                    u551_21:
 17614  001D' 2800'              	goto	i1l5425
 17615  001E'                    u551_20:
 17616  001E'                    i1l5431:
 17617  001E' 0805'              	movf	i1__Umul8_16@product+1,w
 17618  001F' 0081'              	movwf	?i1__Umul8_16+1
 17619  0020' 0804'              	movf	i1__Umul8_16@product,w
 17620  0021' 0080'              	movwf	?i1__Umul8_16
 17621  0022'                    i1l1464:
 17622  0022' 0008               	return
 17623  0023'                    __end_ofi1__Umul8_16:
 17624                           
 17625                           	psect	text44
 17626  0000'                    __ptext44:	
 17627 ;; *************** function i1___fldiv *****************
 17628 ;; Defined at:
 17629 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 17630 ;; Parameters:    Size  Location     Type
 17631 ;;  a               4   54[BANK0 ] unsigned int 
 17632 ;;  b               4   58[BANK0 ] unsigned int 
 17633 ;; Auto vars:     Size  Location     Type
 17634 ;;  grs             4   74[BANK0 ] unsigned long 
 17635 ;;  rem             4   67[BANK0 ] unsigned long 
 17636 ;;  new_exp         2   72[BANK0 ] int 
 17637 ;;  aexp            1   79[BANK0 ] unsigned char 
 17638 ;;  bexp            1   78[BANK0 ] unsigned char 
 17639 ;;  sign            1   71[BANK0 ] unsigned char 
 17640 ;; Return value:  Size  Location     Type
 17641 ;;                  4   54[BANK0 ] unsigned char 
 17642 ;; Registers used:
 17643 ;;		wreg, status,2, status,0
 17644 ;; Tracked objects:
 17645 ;;		On entry : 0/0
 17646 ;;		On exit  : 0/0
 17647 ;;		Unchanged: 0/0
 17648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17649 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17650 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17651 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17652 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17653 ;;Total ram usage:       26 bytes
 17654 ;; Hardware stack levels used: 1
 17655 ;; This function calls:
 17656 ;;		Nothing
 17657 ;; This function is called by:
 17658 ;;		_command_interpreter
 17659 ;;		i1_converter_settings
 17660 ;; This function uses a non-reentrant model
 17661 ;;
 17662                           
 17663  0000'                    i1___fldiv:	
 17664                           ;psect for function i1___fldiv
 17665                           
 17666  0000'                    i1l5597:	
 17667                           ;incstack = 0
 17668                           ; Regs used in i1___fldiv: [wreg+status,2+status,0]
 17669                           
 17670  0000' 0020               	movlb	0	; select bank0
 17671  0001' 083D'              	movf	i1___fldiv@b+3,w
 17672  0002' 3980               	andlw	128
 17673  0003' 00C7'              	movwf	i1___fldiv@sign
 17674  0004'                    i1l5599:
 17675  0004' 353D'              	lslf	i1___fldiv@b+3,w
 17676  0005' 00CE'              	movwf	i1___fldiv@bexp
 17677  0006'                    i1l5601:
 17678  0006' 1FBC'              	btfss	i1___fldiv@b+2,7
 17679  0007' 2800'              	goto	u575_21
 17680  0008' 2800'              	goto	u575_20
 17681  0009'                    u575_21:
 17682  0009' 2800'              	goto	i1l5605
 17683  000A'                    u575_20:
 17684  000A'                    i1l5603:
 17685  000A' 144E'              	bsf	i1___fldiv@bexp,0
 17686  000B'                    i1l5605:
 17687  000B' 084E'              	movf	i1___fldiv@bexp,w
 17688  000C' 1903               	btfsc	3,2
 17689  000D' 2800'              	goto	u576_21
 17690  000E' 2800'              	goto	u576_20
 17691  000F'                    u576_21:
 17692  000F' 2800'              	goto	i1l5615
 17693  0010'                    u576_20:
 17694  0010'                    i1l5607:
 17695  0010' 0A4E'              	incf	i1___fldiv@bexp,w
 17696  0011' 1D03               	btfss	3,2
 17697  0012' 2800'              	goto	u577_21
 17698  0013' 2800'              	goto	u577_20
 17699  0014'                    u577_21:
 17700  0014' 2800'              	goto	i1l5611
 17701  0015'                    u577_20:
 17702  0015'                    i1l5609:
 17703  0015' 3000               	movlw	0
 17704  0016' 00BD'              	movwf	i1___fldiv@b+3
 17705  0017' 3000               	movlw	0
 17706  0018' 00BC'              	movwf	i1___fldiv@b+2
 17707  0019' 3000               	movlw	0
 17708  001A' 00BB'              	movwf	i1___fldiv@b+1
 17709  001B' 3000               	movlw	0
 17710  001C' 00BA'              	movwf	i1___fldiv@b
 17711  001D'                    i1l5611:
 17712  001D' 17BC'              	bsf	i1___fldiv@b+2,7
 17713  001E'                    i1l5613:
 17714  001E' 01BD'              	clrf	i1___fldiv@b+3
 17715  001F' 2800'              	goto	i1l5617
 17716  0020'                    i1l5615:
 17717  0020' 3000               	movlw	0
 17718  0021' 00BD'              	movwf	i1___fldiv@b+3
 17719  0022' 3000               	movlw	0
 17720  0023' 00BC'              	movwf	i1___fldiv@b+2
 17721  0024' 3000               	movlw	0
 17722  0025' 00BB'              	movwf	i1___fldiv@b+1
 17723  0026' 3000               	movlw	0
 17724  0027' 00BA'              	movwf	i1___fldiv@b
 17725  0028'                    i1l5617:
 17726  0028' 0839'              	movf	i1___fldiv@a+3,w
 17727  0029' 3980               	andlw	128
 17728  002A' 00BE'              	movwf	??i1___fldiv
 17729  002B' 083E'              	movf	??i1___fldiv,w
 17730  002C' 06C7'              	xorwf	i1___fldiv@sign,f
 17731  002D'                    i1l5619:
 17732  002D' 3539'              	lslf	i1___fldiv@a+3,w
 17733  002E' 00CF'              	movwf	i1___fldiv@aexp
 17734  002F'                    i1l5621:
 17735  002F' 1FB8'              	btfss	i1___fldiv@a+2,7
 17736  0030' 2800'              	goto	u578_21
 17737  0031' 2800'              	goto	u578_20
 17738  0032'                    u578_21:
 17739  0032' 2800'              	goto	i1l5625
 17740  0033'                    u578_20:
 17741  0033'                    i1l5623:
 17742  0033' 144F'              	bsf	i1___fldiv@aexp,0
 17743  0034'                    i1l5625:
 17744  0034' 084F'              	movf	i1___fldiv@aexp,w
 17745  0035' 1903               	btfsc	3,2
 17746  0036' 2800'              	goto	u579_21
 17747  0037' 2800'              	goto	u579_20
 17748  0038'                    u579_21:
 17749  0038' 2800'              	goto	i1l5635
 17750  0039'                    u579_20:
 17751  0039'                    i1l5627:
 17752  0039' 0A4F'              	incf	i1___fldiv@aexp,w
 17753  003A' 1D03               	btfss	3,2
 17754  003B' 2800'              	goto	u580_21
 17755  003C' 2800'              	goto	u580_20
 17756  003D'                    u580_21:
 17757  003D' 2800'              	goto	i1l5631
 17758  003E'                    u580_20:
 17759  003E'                    i1l5629:
 17760  003E' 3000               	movlw	0
 17761  003F' 00B9'              	movwf	i1___fldiv@a+3
 17762  0040' 3000               	movlw	0
 17763  0041' 00B8'              	movwf	i1___fldiv@a+2
 17764  0042' 3000               	movlw	0
 17765  0043' 00B7'              	movwf	i1___fldiv@a+1
 17766  0044' 3000               	movlw	0
 17767  0045' 00B6'              	movwf	i1___fldiv@a
 17768  0046'                    i1l5631:
 17769  0046' 17B8'              	bsf	i1___fldiv@a+2,7
 17770  0047'                    i1l5633:
 17771  0047' 01B9'              	clrf	i1___fldiv@a+3
 17772  0048' 2800'              	goto	i1l1403
 17773  0049'                    i1l5635:
 17774  0049' 3000               	movlw	0
 17775  004A' 00B9'              	movwf	i1___fldiv@a+3
 17776  004B' 3000               	movlw	0
 17777  004C' 00B8'              	movwf	i1___fldiv@a+2
 17778  004D' 3000               	movlw	0
 17779  004E' 00B7'              	movwf	i1___fldiv@a+1
 17780  004F' 3000               	movlw	0
 17781  0050' 00B6'              	movwf	i1___fldiv@a
 17782  0051'                    i1l1403:
 17783  0051' 0839'              	movf	i1___fldiv@a+3,w
 17784  0052' 0438'              	iorwf	i1___fldiv@a+2,w
 17785  0053' 0437'              	iorwf	i1___fldiv@a+1,w
 17786  0054' 0436'              	iorwf	i1___fldiv@a,w
 17787  0055' 1D03               	skipz
 17788  0056' 2800'              	goto	u581_21
 17789  0057' 2800'              	goto	u581_20
 17790  0058'                    u581_21:
 17791  0058' 2800'              	goto	i1l5645
 17792  0059'                    u581_20:
 17793  0059'                    i1l5637:
 17794  0059' 3000               	movlw	0
 17795  005A' 00BD'              	movwf	i1___fldiv@b+3
 17796  005B' 3000               	movlw	0
 17797  005C' 00BC'              	movwf	i1___fldiv@b+2
 17798  005D' 3000               	movlw	0
 17799  005E' 00BB'              	movwf	i1___fldiv@b+1
 17800  005F' 3000               	movlw	0
 17801  0060' 00BA'              	movwf	i1___fldiv@b
 17802  0061' 3080               	movlw	128
 17803  0062' 04BC'              	iorwf	i1___fldiv@b+2,f
 17804  0063' 307F               	movlw	127
 17805  0064' 04BD'              	iorwf	i1___fldiv@b+3,f
 17806  0065'                    i1l5639:
 17807  0065' 0847'              	movf	i1___fldiv@sign,w
 17808  0066' 00BE'              	movwf	??i1___fldiv
 17809  0067' 083E'              	movf	??i1___fldiv,w
 17810  0068' 04BD'              	iorwf	i1___fldiv@b+3,f
 17811  0069'                    i1l5641:
 17812  0069' 083D'              	movf	i1___fldiv@b+3,w
 17813  006A' 00B9'              	movwf	?i1___fldiv+3
 17814  006B' 083C'              	movf	i1___fldiv@b+2,w
 17815  006C' 00B8'              	movwf	?i1___fldiv+2
 17816  006D' 083B'              	movf	i1___fldiv@b+1,w
 17817  006E' 00B7'              	movwf	?i1___fldiv+1
 17818  006F' 083A'              	movf	i1___fldiv@b,w
 17819  0070' 00B6'              	movwf	?i1___fldiv
 17820  0071' 2800'              	goto	i1l1405
 17821  0072'                    i1l5645:
 17822  0072' 084E'              	movf	i1___fldiv@bexp,w
 17823  0073' 1D03               	btfss	3,2
 17824  0074' 2800'              	goto	u582_21
 17825  0075' 2800'              	goto	u582_20
 17826  0076'                    u582_21:
 17827  0076' 2800'              	goto	i1l5651
 17828  0077'                    u582_20:
 17829  0077'                    i1l5647:
 17830  0077' 3000               	movlw	0
 17831  0078' 00B9'              	movwf	?i1___fldiv+3
 17832  0079' 3000               	movlw	0
 17833  007A' 00B8'              	movwf	?i1___fldiv+2
 17834  007B' 3000               	movlw	0
 17835  007C' 00B7'              	movwf	?i1___fldiv+1
 17836  007D' 3000               	movlw	0
 17837  007E' 00B6'              	movwf	?i1___fldiv
 17838  007F' 2800'              	goto	i1l1405
 17839  0080'                    i1l5651:
 17840  0080' 084E'              	movf	i1___fldiv@bexp,w
 17841  0081' 00BE'              	movwf	??i1___fldiv
 17842  0082' 01BF'              	clrf	??i1___fldiv+1
 17843  0083' 083F'              	movf	??i1___fldiv+1,w
 17844  0084' 00C1'              	movwf	??i1___fldiv+3
 17845  0085' 084F'              	movf	i1___fldiv@aexp,w
 17846  0086' 023E'              	subwf	??i1___fldiv,w
 17847  0087' 00C0'              	movwf	??i1___fldiv+2
 17848  0088' 1C03               	skipc
 17849  0089' 03C1'              	decf	??i1___fldiv+3,f
 17850  008A' 0840'              	movf	??i1___fldiv+2,w
 17851  008B' 3E7F               	addlw	127
 17852  008C' 00C8'              	movwf	i1___fldiv@new_exp
 17853  008D' 3000               	movlw	0
 17854  008E' 3D41'              	addwfc	??i1___fldiv+3,w
 17855  008F' 00C9'              	movwf	i1___fldiv@new_exp+1
 17856  0090'                    i1l5653:
 17857  0090' 083D'              	movf	i1___fldiv@b+3,w
 17858  0091' 00C6'              	movwf	i1___fldiv@rem+3
 17859  0092' 083C'              	movf	i1___fldiv@b+2,w
 17860  0093' 00C5'              	movwf	i1___fldiv@rem+2
 17861  0094' 083B'              	movf	i1___fldiv@b+1,w
 17862  0095' 00C4'              	movwf	i1___fldiv@rem+1
 17863  0096' 083A'              	movf	i1___fldiv@b,w
 17864  0097' 00C3'              	movwf	i1___fldiv@rem
 17865  0098'                    i1l5655:
 17866  0098' 3000               	movlw	0
 17867  0099' 00BD'              	movwf	i1___fldiv@b+3
 17868  009A' 3000               	movlw	0
 17869  009B' 00BC'              	movwf	i1___fldiv@b+2
 17870  009C' 3000               	movlw	0
 17871  009D' 00BB'              	movwf	i1___fldiv@b+1
 17872  009E' 3000               	movlw	0
 17873  009F' 00BA'              	movwf	i1___fldiv@b
 17874  00A0'                    i1l5657:
 17875  00A0' 3000               	movlw	0
 17876  00A1' 00CD'              	movwf	i1___fldiv@grs+3
 17877  00A2' 3000               	movlw	0
 17878  00A3' 00CC'              	movwf	i1___fldiv@grs+2
 17879  00A4' 3000               	movlw	0
 17880  00A5' 00CB'              	movwf	i1___fldiv@grs+1
 17881  00A6' 3000               	movlw	0
 17882  00A7' 00CA'              	movwf	i1___fldiv@grs
 17883  00A8'                    i1l5659:
 17884  00A8' 01CF'              	clrf	i1___fldiv@aexp
 17885  00A9' 2800'              	goto	i1l5679
 17886  00AA'                    i1l5661:
 17887  00AA' 084F'              	movf	i1___fldiv@aexp,w
 17888  00AB' 1903               	btfsc	3,2
 17889  00AC' 2800'              	goto	u583_21
 17890  00AD' 2800'              	goto	u583_20
 17891  00AE'                    u583_21:
 17892  00AE' 2800'              	goto	i1l5671
 17893  00AF'                    u583_20:
 17894  00AF'                    i1l5663:
 17895  00AF' 3001               	movlw	1
 17896  00B0'                    u584_25:
 17897  00B0' 35C3'              	lslf	i1___fldiv@rem,f
 17898  00B1' 0DC4'              	rlf	i1___fldiv@rem+1,f
 17899  00B2' 0DC5'              	rlf	i1___fldiv@rem+2,f
 17900  00B3' 0DC6'              	rlf	i1___fldiv@rem+3,f
 17901  00B4' 0B89               	decfsz	9,f
 17902  00B5' 2800'              	goto	u584_25
 17903  00B6' 3001               	movlw	1
 17904  00B7'                    u585_25:
 17905  00B7' 35BA'              	lslf	i1___fldiv@b,f
 17906  00B8' 0DBB'              	rlf	i1___fldiv@b+1,f
 17907  00B9' 0DBC'              	rlf	i1___fldiv@b+2,f
 17908  00BA' 0DBD'              	rlf	i1___fldiv@b+3,f
 17909  00BB' 0B89               	decfsz	9,f
 17910  00BC' 2800'              	goto	u585_25
 17911  00BD'                    i1l5665:
 17912  00BD' 1FCD'              	btfss	i1___fldiv@grs+3,7
 17913  00BE' 2800'              	goto	u586_21
 17914  00BF' 2800'              	goto	u586_20
 17915  00C0'                    u586_21:
 17916  00C0' 2800'              	goto	i1l5669
 17917  00C1'                    u586_20:
 17918  00C1'                    i1l5667:
 17919  00C1' 143A'              	bsf	i1___fldiv@b,0
 17920  00C2'                    i1l5669:
 17921  00C2' 3001               	movlw	1
 17922  00C3'                    u587_25:
 17923  00C3' 35CA'              	lslf	i1___fldiv@grs,f
 17924  00C4' 0DCB'              	rlf	i1___fldiv@grs+1,f
 17925  00C5' 0DCC'              	rlf	i1___fldiv@grs+2,f
 17926  00C6' 0DCD'              	rlf	i1___fldiv@grs+3,f
 17927  00C7' 0B89               	decfsz	9,f
 17928  00C8' 2800'              	goto	u587_25
 17929  00C9'                    i1l5671:
 17930  00C9' 0839'              	movf	i1___fldiv@a+3,w
 17931  00CA' 0246'              	subwf	i1___fldiv@rem+3,w
 17932  00CB' 1D03               	skipz
 17933  00CC' 2800'              	goto	u588_25
 17934  00CD' 0838'              	movf	i1___fldiv@a+2,w
 17935  00CE' 0245'              	subwf	i1___fldiv@rem+2,w
 17936  00CF' 1D03               	skipz
 17937  00D0' 2800'              	goto	u588_25
 17938  00D1' 0837'              	movf	i1___fldiv@a+1,w
 17939  00D2' 0244'              	subwf	i1___fldiv@rem+1,w
 17940  00D3' 1D03               	skipz
 17941  00D4' 2800'              	goto	u588_25
 17942  00D5' 0836'              	movf	i1___fldiv@a,w
 17943  00D6' 0243'              	subwf	i1___fldiv@rem,w
 17944  00D7'                    u588_25:
 17945  00D7' 1C03               	skipc
 17946  00D8' 2800'              	goto	u588_21
 17947  00D9' 2800'              	goto	u588_20
 17948  00DA'                    u588_21:
 17949  00DA' 2800'              	goto	i1l5677
 17950  00DB'                    u588_20:
 17951  00DB'                    i1l5673:
 17952  00DB' 174D'              	bsf	i1___fldiv@grs+3,6
 17953  00DC'                    i1l5675:
 17954  00DC' 0836'              	movf	i1___fldiv@a,w
 17955  00DD' 02C3'              	subwf	i1___fldiv@rem,f
 17956  00DE' 0837'              	movf	i1___fldiv@a+1,w
 17957  00DF' 3BC4'              	subwfb	i1___fldiv@rem+1,f
 17958  00E0' 0838'              	movf	i1___fldiv@a+2,w
 17959  00E1' 3BC5'              	subwfb	i1___fldiv@rem+2,f
 17960  00E2' 0839'              	movf	i1___fldiv@a+3,w
 17961  00E3' 3BC6'              	subwfb	i1___fldiv@rem+3,f
 17962  00E4'                    i1l5677:
 17963  00E4' 3001               	movlw	1
 17964  00E5' 00BE'              	movwf	??i1___fldiv
 17965  00E6' 083E'              	movf	??i1___fldiv,w
 17966  00E7' 07CF'              	addwf	i1___fldiv@aexp,f
 17967  00E8'                    i1l5679:
 17968  00E8' 301A               	movlw	26
 17969  00E9' 024F'              	subwf	i1___fldiv@aexp,w
 17970  00EA' 1C03               	skipc
 17971  00EB' 2800'              	goto	u589_21
 17972  00EC' 2800'              	goto	u589_20
 17973  00ED'                    u589_21:
 17974  00ED' 2800'              	goto	i1l5661
 17975  00EE'                    u589_20:
 17976  00EE'                    i1l5681:
 17977  00EE' 0846'              	movf	i1___fldiv@rem+3,w
 17978  00EF' 0445'              	iorwf	i1___fldiv@rem+2,w
 17979  00F0' 0444'              	iorwf	i1___fldiv@rem+1,w
 17980  00F1' 0443'              	iorwf	i1___fldiv@rem,w
 17981  00F2' 1903               	skipnz
 17982  00F3' 2800'              	goto	u590_21
 17983  00F4' 2800'              	goto	u590_20
 17984  00F5'                    u590_21:
 17985  00F5' 2800'              	goto	i1l5695
 17986  00F6'                    u590_20:
 17987  00F6'                    i1l5683:
 17988  00F6' 144A'              	bsf	i1___fldiv@grs,0
 17989  00F7' 2800'              	goto	i1l5695
 17990  00F8'                    i1l5685:
 17991  00F8' 3001               	movlw	1
 17992  00F9'                    u591_25:
 17993  00F9' 35BA'              	lslf	i1___fldiv@b,f
 17994  00FA' 0DBB'              	rlf	i1___fldiv@b+1,f
 17995  00FB' 0DBC'              	rlf	i1___fldiv@b+2,f
 17996  00FC' 0DBD'              	rlf	i1___fldiv@b+3,f
 17997  00FD' 0B89               	decfsz	9,f
 17998  00FE' 2800'              	goto	u591_25
 17999  00FF'                    i1l5687:
 18000  00FF' 1FCD'              	btfss	i1___fldiv@grs+3,7
 18001  0100' 2800'              	goto	u592_21
 18002  0101' 2800'              	goto	u592_20
 18003  0102'                    u592_21:
 18004  0102' 2800'              	goto	i1l5691
 18005  0103'                    u592_20:
 18006  0103'                    i1l5689:
 18007  0103' 143A'              	bsf	i1___fldiv@b,0
 18008  0104'                    i1l5691:
 18009  0104' 3001               	movlw	1
 18010  0105'                    u593_25:
 18011  0105' 35CA'              	lslf	i1___fldiv@grs,f
 18012  0106' 0DCB'              	rlf	i1___fldiv@grs+1,f
 18013  0107' 0DCC'              	rlf	i1___fldiv@grs+2,f
 18014  0108' 0DCD'              	rlf	i1___fldiv@grs+3,f
 18015  0109' 0B89               	decfsz	9,f
 18016  010A' 2800'              	goto	u593_25
 18017  010B'                    i1l5693:
 18018  010B' 30FF               	movlw	255
 18019  010C' 07C8'              	addwf	i1___fldiv@new_exp,f
 18020  010D' 30FF               	movlw	255
 18021  010E' 3DC9'              	addwfc	i1___fldiv@new_exp+1,f
 18022  010F'                    i1l5695:
 18023  010F' 1FBC'              	btfss	i1___fldiv@b+2,7
 18024  0110' 2800'              	goto	u594_21
 18025  0111' 2800'              	goto	u594_20
 18026  0112'                    u594_21:
 18027  0112' 2800'              	goto	i1l5685
 18028  0113'                    u594_20:
 18029  0113'                    i1l5697:
 18030  0113' 01CF'              	clrf	i1___fldiv@aexp
 18031  0114'                    i1l5699:
 18032  0114' 1FCD'              	btfss	i1___fldiv@grs+3,7
 18033  0115' 2800'              	goto	u595_21
 18034  0116' 2800'              	goto	u595_20
 18035  0117'                    u595_21:
 18036  0117' 2800'              	goto	i1l5707
 18037  0118'                    u595_20:
 18038  0118'                    i1l5701:
 18039  0118' 30FF               	movlw	255
 18040  0119' 054A'              	andwf	i1___fldiv@grs,w
 18041  011A' 00BE'              	movwf	??i1___fldiv
 18042  011B' 30FF               	movlw	255
 18043  011C' 054B'              	andwf	i1___fldiv@grs+1,w
 18044  011D' 00BF'              	movwf	??i1___fldiv+1
 18045  011E' 30FF               	movlw	255
 18046  011F' 054C'              	andwf	i1___fldiv@grs+2,w
 18047  0120' 00C0'              	movwf	??i1___fldiv+2
 18048  0121' 307F               	movlw	127
 18049  0122' 054D'              	andwf	i1___fldiv@grs+3,w
 18050  0123' 00C1'              	movwf	??i1___fldiv+3
 18051  0124' 0841'              	movf	??i1___fldiv+3,w
 18052  0125' 0440'              	iorwf	??i1___fldiv+2,w
 18053  0126' 043F'              	iorwf	??i1___fldiv+1,w
 18054  0127' 043E'              	iorwf	??i1___fldiv,w
 18055  0128' 1903               	skipnz
 18056  0129' 2800'              	goto	u596_21
 18057  012A' 2800'              	goto	u596_20
 18058  012B'                    u596_21:
 18059  012B' 2800'              	goto	i1l1419
 18060  012C'                    u596_20:
 18061  012C'                    i1l5703:
 18062  012C' 01CF'              	clrf	i1___fldiv@aexp
 18063  012D' 0ACF'              	incf	i1___fldiv@aexp,f
 18064  012E' 2800'              	goto	i1l5707
 18065  012F'                    i1l1419:
 18066  012F' 1C3A'              	btfss	i1___fldiv@b,0
 18067  0130' 2800'              	goto	u597_21
 18068  0131' 2800'              	goto	u597_20
 18069  0132'                    u597_21:
 18070  0132' 2800'              	goto	i1l5707
 18071  0133'                    u597_20:
 18072  0133' 2800'              	goto	i1l5703
 18073  0134'                    i1l5707:
 18074  0134' 084F'              	movf	i1___fldiv@aexp,w
 18075  0135' 1903               	btfsc	3,2
 18076  0136' 2800'              	goto	u598_21
 18077  0137' 2800'              	goto	u598_20
 18078  0138'                    u598_21:
 18079  0138' 2800'              	goto	i1l5717
 18080  0139'                    u598_20:
 18081  0139'                    i1l5709:
 18082  0139' 3001               	movlw	1
 18083  013A' 07BA'              	addwf	i1___fldiv@b,f
 18084  013B' 3000               	movlw	0
 18085  013C' 3DBB'              	addwfc	i1___fldiv@b+1,f
 18086  013D' 3000               	movlw	0
 18087  013E' 3DBC'              	addwfc	i1___fldiv@b+2,f
 18088  013F' 3000               	movlw	0
 18089  0140' 3DBD'              	addwfc	i1___fldiv@b+3,f
 18090  0141'                    i1l5711:
 18091  0141' 1C3D'              	btfss	i1___fldiv@b+3,0
 18092  0142' 2800'              	goto	u599_21
 18093  0143' 2800'              	goto	u599_20
 18094  0144'                    u599_21:
 18095  0144' 2800'              	goto	i1l5717
 18096  0145'                    u599_20:
 18097  0145'                    i1l5713:
 18098  0145' 083A'              	movf	i1___fldiv@b,w
 18099  0146' 00BE'              	movwf	??i1___fldiv
 18100  0147' 083B'              	movf	i1___fldiv@b+1,w
 18101  0148' 00BF'              	movwf	??i1___fldiv+1
 18102  0149' 083C'              	movf	i1___fldiv@b+2,w
 18103  014A' 00C0'              	movwf	??i1___fldiv+2
 18104  014B' 083D'              	movf	i1___fldiv@b+3,w
 18105  014C' 00C1'              	movwf	??i1___fldiv+3
 18106  014D' 3001               	movlw	1
 18107  014E' 00C2'              	movwf	??i1___fldiv+4
 18108  014F'                    u600_25:
 18109  014F' 37C1'              	asrf	??i1___fldiv+3,f
 18110  0150' 0CC0'              	rrf	??i1___fldiv+2,f
 18111  0151' 0CBF'              	rrf	??i1___fldiv+1,f
 18112  0152' 0CBE'              	rrf	??i1___fldiv,f
 18113  0153'                    u600_20:
 18114  0153' 0BC2'              	decfsz	??i1___fldiv+4,f
 18115  0154' 2800'              	goto	u600_25
 18116  0155' 0841'              	movf	??i1___fldiv+3,w
 18117  0156' 00BD'              	movwf	i1___fldiv@b+3
 18118  0157' 0840'              	movf	??i1___fldiv+2,w
 18119  0158' 00BC'              	movwf	i1___fldiv@b+2
 18120  0159' 083F'              	movf	??i1___fldiv+1,w
 18121  015A' 00BB'              	movwf	i1___fldiv@b+1
 18122  015B' 083E'              	movf	??i1___fldiv,w
 18123  015C' 00BA'              	movwf	i1___fldiv@b
 18124  015D'                    i1l5715:
 18125  015D' 3001               	movlw	1
 18126  015E' 07C8'              	addwf	i1___fldiv@new_exp,f
 18127  015F' 3000               	movlw	0
 18128  0160' 3DC9'              	addwfc	i1___fldiv@new_exp+1,f
 18129  0161'                    i1l5717:
 18130  0161' 0849'              	movf	i1___fldiv@new_exp+1,w
 18131  0162' 3A80               	xorlw	128
 18132  0163' 00BE'              	movwf	??i1___fldiv
 18133  0164' 3080               	movlw	128
 18134  0165' 023E'              	subwf	??i1___fldiv,w
 18135  0166' 1D03               	skipz
 18136  0167' 2800'              	goto	u601_25
 18137  0168' 30FF               	movlw	255
 18138  0169' 0248'              	subwf	i1___fldiv@new_exp,w
 18139  016A'                    u601_25:
 18140  016A' 1C03               	skipc
 18141  016B' 2800'              	goto	u601_21
 18142  016C' 2800'              	goto	u601_20
 18143  016D'                    u601_21:
 18144  016D' 2800'              	goto	i1l1424
 18145  016E'                    u601_20:
 18146  016E'                    i1l5719:
 18147  016E' 30FF               	movlw	255
 18148  016F' 0020               	movlb	0	; select bank0
 18149  0170' 00C8'              	movwf	i1___fldiv@new_exp
 18150  0171' 3000               	movlw	0
 18151  0172' 00C9'              	movwf	i1___fldiv@new_exp+1
 18152  0173' 3000               	movlw	0
 18153  0174' 00BD'              	movwf	i1___fldiv@b+3
 18154  0175' 3000               	movlw	0
 18155  0176' 00BC'              	movwf	i1___fldiv@b+2
 18156  0177' 3000               	movlw	0
 18157  0178' 00BB'              	movwf	i1___fldiv@b+1
 18158  0179' 3000               	movlw	0
 18159  017A' 00BA'              	movwf	i1___fldiv@b
 18160  017B'                    i1l1424:
 18161  017B' 0020               	movlb	0	; select bank0
 18162  017C' 0849'              	movf	i1___fldiv@new_exp+1,w
 18163  017D' 3A80               	xorlw	128
 18164  017E' 00BE'              	movwf	??i1___fldiv
 18165  017F' 3080               	movlw	128
 18166  0180' 023E'              	subwf	??i1___fldiv,w
 18167  0181' 1D03               	skipz
 18168  0182' 2800'              	goto	u602_25
 18169  0183' 3001               	movlw	1
 18170  0184' 0248'              	subwf	i1___fldiv@new_exp,w
 18171  0185'                    u602_25:
 18172  0185' 1803               	skipnc
 18173  0186' 2800'              	goto	u602_21
 18174  0187' 2800'              	goto	u602_20
 18175  0188'                    u602_21:
 18176  0188' 2800'              	goto	i1l1425
 18177  0189'                    u602_20:
 18178  0189'                    i1l5721:
 18179  0189' 0020               	movlb	0	; select bank0
 18180  018A' 01C8'              	clrf	i1___fldiv@new_exp
 18181  018B' 01C9'              	clrf	i1___fldiv@new_exp+1
 18182  018C'                    i1l5723:
 18183  018C' 3000               	movlw	0
 18184  018D' 00BD'              	movwf	i1___fldiv@b+3
 18185  018E' 3000               	movlw	0
 18186  018F' 00BC'              	movwf	i1___fldiv@b+2
 18187  0190' 3000               	movlw	0
 18188  0191' 00BB'              	movwf	i1___fldiv@b+1
 18189  0192' 3000               	movlw	0
 18190  0193' 00BA'              	movwf	i1___fldiv@b
 18191  0194'                    i1l5725:
 18192  0194' 01C7'              	clrf	i1___fldiv@sign
 18193  0195'                    i1l1425:
 18194  0195' 0020               	movlb	0	; select bank0
 18195  0196' 0848'              	movf	i1___fldiv@new_exp,w
 18196  0197' 00CE'              	movwf	i1___fldiv@bexp
 18197  0198'                    i1l5727:
 18198  0198' 1C4E'              	btfss	i1___fldiv@bexp,0
 18199  0199' 2800'              	goto	u603_21
 18200  019A' 2800'              	goto	u603_20
 18201  019B'                    u603_21:
 18202  019B' 2800'              	goto	i1l5731
 18203  019C'                    u603_20:
 18204  019C'                    i1l5729:
 18205  019C' 17BC'              	bsf	i1___fldiv@b+2,7
 18206  019D' 2800'              	goto	i1l1427
 18207  019E'                    i1l5731:
 18208  019E' 307F               	movlw	127
 18209  019F' 00BE'              	movwf	??i1___fldiv
 18210  01A0' 083E'              	movf	??i1___fldiv,w
 18211  01A1' 05BC'              	andwf	i1___fldiv@b+2,f
 18212  01A2'                    i1l1427:
 18213  01A2' 364E'              	lsrf	i1___fldiv@bexp,w
 18214  01A3' 00BD'              	movwf	i1___fldiv@b+3
 18215  01A4' 0847'              	movf	i1___fldiv@sign,w
 18216  01A5' 00BE'              	movwf	??i1___fldiv
 18217  01A6' 083E'              	movf	??i1___fldiv,w
 18218  01A7' 04BD'              	iorwf	i1___fldiv@b+3,f
 18219  01A8' 2800'              	goto	i1l5641
 18220  01A9'                    i1l1405:
 18221  01A9' 0008               	return
 18222  01AA'                    __end_ofi1___fldiv:
 18223                           
 18224                           	psect	text45
 18225  0000'                    __ptext45:	
 18226 ;; *************** function i1___fladd *****************
 18227 ;; Defined at:
 18228 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 18229 ;; Parameters:    Size  Location     Type
 18230 ;;  b               4    0[BANK0 ] unsigned char 
 18231 ;;  a               4    4[BANK0 ] unsigned char 
 18232 ;; Auto vars:     Size  Location     Type
 18233 ;;  grs             1   19[BANK0 ] unsigned char 
 18234 ;;  bexp            1   18[BANK0 ] unsigned char 
 18235 ;;  aexp            1   17[BANK0 ] unsigned char 
 18236 ;;  signs           1   16[BANK0 ] unsigned char 
 18237 ;; Return value:  Size  Location     Type
 18238 ;;                  4    0[BANK0 ] unsigned char 
 18239 ;; Registers used:
 18240 ;;		wreg, status,2, status,0
 18241 ;; Tracked objects:
 18242 ;;		On entry : 0/0
 18243 ;;		On exit  : 0/0
 18244 ;;		Unchanged: 0/0
 18245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18246 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18247 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18248 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18249 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18250 ;;Total ram usage:       20 bytes
 18251 ;; Hardware stack levels used: 1
 18252 ;; This function calls:
 18253 ;;		Nothing
 18254 ;; This function is called by:
 18255 ;;		_command_interpreter
 18256 ;;		_pid
 18257 ;;		___flsub
 18258 ;;		i1_converter_settings
 18259 ;; This function uses a non-reentrant model
 18260 ;;
 18261                           
 18262  0000'                    i1___fladd:	
 18263                           ;psect for function i1___fladd
 18264                           
 18265  0000'                    i1l5227:	
 18266                           ;incstack = 0
 18267                           ; Regs used in i1___fladd: [wreg+status,2+status,0]
 18268                           
 18269  0000' 0020               	movlb	0	; select bank0
 18270  0001' 0803'              	movf	i1___fladd@b+3,w
 18271  0002' 3980               	andlw	128
 18272  0003' 0090'              	movwf	i1___fladd@signs
 18273  0004'                    i1l5229:
 18274  0004' 3503'              	lslf	i1___fladd@b+3,w
 18275  0005' 0092'              	movwf	i1___fladd@bexp
 18276  0006'                    i1l5231:
 18277  0006' 1F82'              	btfss	i1___fladd@b+2,7
 18278  0007' 2800'              	goto	u506_21
 18279  0008' 2800'              	goto	u506_20
 18280  0009'                    u506_21:
 18281  0009' 2800'              	goto	i1l5235
 18282  000A'                    u506_20:
 18283  000A'                    i1l5233:
 18284  000A' 1412'              	bsf	i1___fladd@bexp,0
 18285  000B'                    i1l5235:
 18286  000B' 0812'              	movf	i1___fladd@bexp,w
 18287  000C' 1903               	btfsc	3,2
 18288  000D' 2800'              	goto	u507_21
 18289  000E' 2800'              	goto	u507_20
 18290  000F'                    u507_21:
 18291  000F' 2800'              	goto	i1l5245
 18292  0010'                    u507_20:
 18293  0010'                    i1l5237:
 18294  0010' 0A12'              	incf	i1___fladd@bexp,w
 18295  0011' 1D03               	btfss	3,2
 18296  0012' 2800'              	goto	u508_21
 18297  0013' 2800'              	goto	u508_20
 18298  0014'                    u508_21:
 18299  0014' 2800'              	goto	i1l5241
 18300  0015'                    u508_20:
 18301  0015'                    i1l5239:
 18302  0015' 3000               	movlw	0
 18303  0016' 0083'              	movwf	i1___fladd@b+3
 18304  0017' 3000               	movlw	0
 18305  0018' 0082'              	movwf	i1___fladd@b+2
 18306  0019' 3000               	movlw	0
 18307  001A' 0081'              	movwf	i1___fladd@b+1
 18308  001B' 3000               	movlw	0
 18309  001C' 0080'              	movwf	i1___fladd@b
 18310  001D'                    i1l5241:
 18311  001D' 1782'              	bsf	i1___fladd@b+2,7
 18312  001E'                    i1l5243:
 18313  001E' 0183'              	clrf	i1___fladd@b+3
 18314  001F' 2800'              	goto	i1l5247
 18315  0020'                    i1l5245:
 18316  0020' 3000               	movlw	0
 18317  0021' 0083'              	movwf	i1___fladd@b+3
 18318  0022' 3000               	movlw	0
 18319  0023' 0082'              	movwf	i1___fladd@b+2
 18320  0024' 3000               	movlw	0
 18321  0025' 0081'              	movwf	i1___fladd@b+1
 18322  0026' 3000               	movlw	0
 18323  0027' 0080'              	movwf	i1___fladd@b
 18324  0028'                    i1l5247:
 18325  0028' 0807'              	movf	i1___fladd@a+3,w
 18326  0029' 3980               	andlw	128
 18327  002A' 0091'              	movwf	i1___fladd@aexp
 18328  002B'                    i1l5249:
 18329  002B' 0811'              	movf	i1___fladd@aexp,w
 18330  002C' 0610'              	xorwf	i1___fladd@signs,w
 18331  002D' 1903               	skipnz
 18332  002E' 2800'              	goto	u509_21
 18333  002F' 2800'              	goto	u509_20
 18334  0030'                    u509_21:
 18335  0030' 2800'              	goto	i1l5253
 18336  0031'                    u509_20:
 18337  0031'                    i1l5251:
 18338  0031' 1710'              	bsf	i1___fladd@signs,6
 18339  0032'                    i1l5253:
 18340  0032' 3507'              	lslf	i1___fladd@a+3,w
 18341  0033' 0091'              	movwf	i1___fladd@aexp
 18342  0034'                    i1l5255:
 18343  0034' 1F86'              	btfss	i1___fladd@a+2,7
 18344  0035' 2800'              	goto	u510_21
 18345  0036' 2800'              	goto	u510_20
 18346  0037'                    u510_21:
 18347  0037' 2800'              	goto	i1l5259
 18348  0038'                    u510_20:
 18349  0038'                    i1l5257:
 18350  0038' 1411'              	bsf	i1___fladd@aexp,0
 18351  0039'                    i1l5259:
 18352  0039' 0811'              	movf	i1___fladd@aexp,w
 18353  003A' 1903               	btfsc	3,2
 18354  003B' 2800'              	goto	u511_21
 18355  003C' 2800'              	goto	u511_20
 18356  003D'                    u511_21:
 18357  003D' 2800'              	goto	i1l5269
 18358  003E'                    u511_20:
 18359  003E'                    i1l5261:
 18360  003E' 0A11'              	incf	i1___fladd@aexp,w
 18361  003F' 1D03               	btfss	3,2
 18362  0040' 2800'              	goto	u512_21
 18363  0041' 2800'              	goto	u512_20
 18364  0042'                    u512_21:
 18365  0042' 2800'              	goto	i1l5265
 18366  0043'                    u512_20:
 18367  0043'                    i1l5263:
 18368  0043' 3000               	movlw	0
 18369  0044' 0087'              	movwf	i1___fladd@a+3
 18370  0045' 3000               	movlw	0
 18371  0046' 0086'              	movwf	i1___fladd@a+2
 18372  0047' 3000               	movlw	0
 18373  0048' 0085'              	movwf	i1___fladd@a+1
 18374  0049' 3000               	movlw	0
 18375  004A' 0084'              	movwf	i1___fladd@a
 18376  004B'                    i1l5265:
 18377  004B' 1786'              	bsf	i1___fladd@a+2,7
 18378  004C'                    i1l5267:
 18379  004C' 0187'              	clrf	i1___fladd@a+3
 18380  004D' 2800'              	goto	i1l1347
 18381  004E'                    i1l5269:
 18382  004E' 3000               	movlw	0
 18383  004F' 0087'              	movwf	i1___fladd@a+3
 18384  0050' 3000               	movlw	0
 18385  0051' 0086'              	movwf	i1___fladd@a+2
 18386  0052' 3000               	movlw	0
 18387  0053' 0085'              	movwf	i1___fladd@a+1
 18388  0054' 3000               	movlw	0
 18389  0055' 0084'              	movwf	i1___fladd@a
 18390  0056'                    i1l1347:
 18391  0056' 0812'              	movf	i1___fladd@bexp,w
 18392  0057' 0211'              	subwf	i1___fladd@aexp,w
 18393  0058' 1803               	skipnc
 18394  0059' 2800'              	goto	u513_21
 18395  005A' 2800'              	goto	u513_20
 18396  005B'                    u513_21:
 18397  005B' 2800'              	goto	i1l5305
 18398  005C'                    u513_20:
 18399  005C'                    i1l5271:
 18400  005C' 1F10'              	btfss	i1___fladd@signs,6
 18401  005D' 2800'              	goto	u514_21
 18402  005E' 2800'              	goto	u514_20
 18403  005F'                    u514_21:
 18404  005F' 2800'              	goto	i1l5275
 18405  0060'                    u514_20:
 18406  0060'                    i1l5273:
 18407  0060' 3080               	movlw	128
 18408  0061' 0088'              	movwf	??i1___fladd
 18409  0062' 0808'              	movf	??i1___fladd,w
 18410  0063' 0690'              	xorwf	i1___fladd@signs,f
 18411  0064'                    i1l5275:
 18412  0064' 0812'              	movf	i1___fladd@bexp,w
 18413  0065' 0093'              	movwf	i1___fladd@grs
 18414  0066'                    i1l5277:
 18415  0066' 0811'              	movf	i1___fladd@aexp,w
 18416  0067' 0092'              	movwf	i1___fladd@bexp
 18417  0068'                    i1l5279:
 18418  0068' 0813'              	movf	i1___fladd@grs,w
 18419  0069' 0091'              	movwf	i1___fladd@aexp
 18420  006A'                    i1l5281:
 18421  006A' 0800'              	movf	i1___fladd@b,w
 18422  006B' 0093'              	movwf	i1___fladd@grs
 18423  006C'                    i1l5283:
 18424  006C' 0804'              	movf	i1___fladd@a,w
 18425  006D' 0080'              	movwf	i1___fladd@b
 18426  006E'                    i1l5285:
 18427  006E' 0813'              	movf	i1___fladd@grs,w
 18428  006F' 0084'              	movwf	i1___fladd@a
 18429  0070'                    i1l5287:
 18430  0070' 0801'              	movf	i1___fladd@b+1,w
 18431  0071' 0093'              	movwf	i1___fladd@grs
 18432  0072'                    i1l5289:
 18433  0072' 0805'              	movf	i1___fladd@a+1,w
 18434  0073' 0081'              	movwf	i1___fladd@b+1
 18435  0074'                    i1l5291:
 18436  0074' 0813'              	movf	i1___fladd@grs,w
 18437  0075' 0085'              	movwf	i1___fladd@a+1
 18438  0076'                    i1l5293:
 18439  0076' 0802'              	movf	i1___fladd@b+2,w
 18440  0077' 0093'              	movwf	i1___fladd@grs
 18441  0078'                    i1l5295:
 18442  0078' 0806'              	movf	i1___fladd@a+2,w
 18443  0079' 0082'              	movwf	i1___fladd@b+2
 18444  007A'                    i1l5297:
 18445  007A' 0813'              	movf	i1___fladd@grs,w
 18446  007B' 0086'              	movwf	i1___fladd@a+2
 18447  007C'                    i1l5299:
 18448  007C' 0803'              	movf	i1___fladd@b+3,w
 18449  007D' 0093'              	movwf	i1___fladd@grs
 18450  007E'                    i1l5301:
 18451  007E' 0807'              	movf	i1___fladd@a+3,w
 18452  007F' 0083'              	movwf	i1___fladd@b+3
 18453  0080'                    i1l5303:
 18454  0080' 0813'              	movf	i1___fladd@grs,w
 18455  0081' 0087'              	movwf	i1___fladd@a+3
 18456  0082'                    i1l5305:
 18457  0082' 0193'              	clrf	i1___fladd@grs
 18458  0083'                    i1l5307:
 18459  0083' 0811'              	movf	i1___fladd@aexp,w
 18460  0084' 0088'              	movwf	??i1___fladd
 18461  0085' 0189'              	clrf	??i1___fladd+1
 18462  0086' 0809'              	movf	??i1___fladd+1,w
 18463  0087' 008B'              	movwf	??i1___fladd+3
 18464  0088' 0812'              	movf	i1___fladd@bexp,w
 18465  0089' 0208'              	subwf	??i1___fladd,w
 18466  008A' 008A'              	movwf	??i1___fladd+2
 18467  008B' 1C03               	skipc
 18468  008C' 038B'              	decf	??i1___fladd+3,f
 18469  008D' 080B'              	movf	??i1___fladd+3,w
 18470  008E' 3A80               	xorlw	128
 18471  008F' 008C'              	movwf	??i1___fladd+4
 18472  0090' 3080               	movlw	128
 18473  0091' 020C'              	subwf	??i1___fladd+4,w
 18474  0092' 1D03               	skipz
 18475  0093' 2800'              	goto	u515_25
 18476  0094' 301A               	movlw	26
 18477  0095' 020A'              	subwf	??i1___fladd+2,w
 18478  0096'                    u515_25:
 18479  0096' 1C03               	skipc
 18480  0097' 2800'              	goto	u515_21
 18481  0098' 2800'              	goto	u515_20
 18482  0099'                    u515_21:
 18483  0099' 2800'              	goto	i1l5323
 18484  009A'                    u515_20:
 18485  009A'                    i1l5309:
 18486  009A' 0020               	movlb	0	; select bank0
 18487  009B' 0803'              	movf	i1___fladd@b+3,w
 18488  009C' 0402'              	iorwf	i1___fladd@b+2,w
 18489  009D' 0401'              	iorwf	i1___fladd@b+1,w
 18490  009E' 0400'              	iorwf	i1___fladd@b,w
 18491  009F' 1D03               	skipz
 18492  00A0' 2800'              	goto	u516_21
 18493  00A1' 2800'              	goto	u516_20
 18494  00A2'                    u516_21:
 18495  00A2' 3001               	movlw	1
 18496  00A3' 2800'              	goto	u517_20
 18497  00A4'                    u516_20:
 18498  00A4' 3000               	movlw	0
 18499  00A5'                    u517_20:
 18500  00A5' 0093'              	movwf	i1___fladd@grs
 18501  00A6' 3000               	movlw	0
 18502  00A7' 0083'              	movwf	i1___fladd@b+3
 18503  00A8' 3000               	movlw	0
 18504  00A9' 0082'              	movwf	i1___fladd@b+2
 18505  00AA' 3000               	movlw	0
 18506  00AB' 0081'              	movwf	i1___fladd@b+1
 18507  00AC' 3000               	movlw	0
 18508  00AD' 0080'              	movwf	i1___fladd@b
 18509  00AE' 0811'              	movf	i1___fladd@aexp,w
 18510  00AF' 0092'              	movwf	i1___fladd@bexp
 18511  00B0' 2800'              	goto	i1l1351
 18512  00B1'                    i1l1353:
 18513  00B1' 1C13'              	btfss	i1___fladd@grs,0
 18514  00B2' 2800'              	goto	u518_21
 18515  00B3' 2800'              	goto	u518_20
 18516  00B4'                    u518_21:
 18517  00B4' 2800'              	goto	i1l5313
 18518  00B5'                    u518_20:
 18519  00B5'                    i1l5311:
 18520  00B5' 3613'              	lsrf	i1___fladd@grs,w
 18521  00B6' 3801               	iorlw	1
 18522  00B7' 0093'              	movwf	i1___fladd@grs
 18523  00B8' 2800'              	goto	i1l5315
 18524  00B9'                    i1l5313:
 18525  00B9' 1003               	clrc
 18526  00BA' 0C93'              	rrf	i1___fladd@grs,f
 18527  00BB'                    i1l5315:
 18528  00BB' 1C00'              	btfss	i1___fladd@b,0
 18529  00BC' 2800'              	goto	u519_21
 18530  00BD' 2800'              	goto	u519_20
 18531  00BE'                    u519_21:
 18532  00BE' 2800'              	goto	i1l5319
 18533  00BF'                    u519_20:
 18534  00BF'                    i1l5317:
 18535  00BF' 1793'              	bsf	i1___fladd@grs,7
 18536  00C0'                    i1l5319:
 18537  00C0' 3001               	movlw	1
 18538  00C1' 0088'              	movwf	??i1___fladd
 18539  00C2'                    u520_25:
 18540  00C2' 3783'              	asrf	i1___fladd@b+3,f
 18541  00C3' 0C82'              	rrf	i1___fladd@b+2,f
 18542  00C4' 0C81'              	rrf	i1___fladd@b+1,f
 18543  00C5' 0C80'              	rrf	i1___fladd@b,f
 18544  00C6' 0B80'              	decfsz	??i1___fladd& (0+127),f
 18545  00C7' 2800'              	goto	u520_25
 18546  00C8'                    i1l5321:
 18547  00C8' 3001               	movlw	1
 18548  00C9' 0088'              	movwf	??i1___fladd
 18549  00CA' 0808'              	movf	??i1___fladd,w
 18550  00CB' 0792'              	addwf	i1___fladd@bexp,f
 18551  00CC'                    i1l5323:
 18552  00CC' 0020               	movlb	0	; select bank0
 18553  00CD' 0811'              	movf	i1___fladd@aexp,w
 18554  00CE' 0212'              	subwf	i1___fladd@bexp,w
 18555  00CF' 1C03               	skipc
 18556  00D0' 2800'              	goto	u521_21
 18557  00D1' 2800'              	goto	u521_20
 18558  00D2'                    u521_21:
 18559  00D2' 2800'              	goto	i1l1353
 18560  00D3'                    u521_20:
 18561  00D3'                    i1l1351:
 18562  00D3' 1B10'              	btfsc	i1___fladd@signs,6
 18563  00D4' 2800'              	goto	u522_21
 18564  00D5' 2800'              	goto	u522_20
 18565  00D6'                    u522_21:
 18566  00D6' 2800'              	goto	i1l5349
 18567  00D7'                    u522_20:
 18568  00D7'                    i1l5325:
 18569  00D7' 0812'              	movf	i1___fladd@bexp,w
 18570  00D8' 1D03               	btfss	3,2
 18571  00D9' 2800'              	goto	u523_21
 18572  00DA' 2800'              	goto	u523_20
 18573  00DB'                    u523_21:
 18574  00DB' 2800'              	goto	i1l5331
 18575  00DC'                    u523_20:
 18576  00DC'                    i1l5327:
 18577  00DC' 3000               	movlw	0
 18578  00DD' 0083'              	movwf	?i1___fladd+3
 18579  00DE' 3000               	movlw	0
 18580  00DF' 0082'              	movwf	?i1___fladd+2
 18581  00E0' 3000               	movlw	0
 18582  00E1' 0081'              	movwf	?i1___fladd+1
 18583  00E2' 3000               	movlw	0
 18584  00E3' 0080'              	movwf	?i1___fladd
 18585  00E4' 2800'              	goto	i1l1360
 18586  00E5'                    i1l5331:
 18587  00E5' 0804'              	movf	i1___fladd@a,w
 18588  00E6' 0780'              	addwf	i1___fladd@b,f
 18589  00E7' 0805'              	movf	i1___fladd@a+1,w
 18590  00E8' 3D81'              	addwfc	i1___fladd@b+1,f
 18591  00E9' 0806'              	movf	i1___fladd@a+2,w
 18592  00EA' 3D82'              	addwfc	i1___fladd@b+2,f
 18593  00EB' 0807'              	movf	i1___fladd@a+3,w
 18594  00EC' 3D83'              	addwfc	i1___fladd@b+3,f
 18595  00ED'                    i1l5333:
 18596  00ED' 1C03'              	btfss	i1___fladd@b+3,0
 18597  00EE' 2800'              	goto	u524_21
 18598  00EF' 2800'              	goto	u524_20
 18599  00F0'                    u524_21:
 18600  00F0' 2800'              	goto	i1l5383
 18601  00F1'                    u524_20:
 18602  00F1'                    i1l5335:
 18603  00F1' 1C13'              	btfss	i1___fladd@grs,0
 18604  00F2' 2800'              	goto	u525_21
 18605  00F3' 2800'              	goto	u525_20
 18606  00F4'                    u525_21:
 18607  00F4' 2800'              	goto	i1l5339
 18608  00F5'                    u525_20:
 18609  00F5'                    i1l5337:
 18610  00F5' 3613'              	lsrf	i1___fladd@grs,w
 18611  00F6' 3801               	iorlw	1
 18612  00F7' 0093'              	movwf	i1___fladd@grs
 18613  00F8' 2800'              	goto	i1l5341
 18614  00F9'                    i1l5339:
 18615  00F9' 1003               	clrc
 18616  00FA' 0C93'              	rrf	i1___fladd@grs,f
 18617  00FB'                    i1l5341:
 18618  00FB' 1C00'              	btfss	i1___fladd@b,0
 18619  00FC' 2800'              	goto	u526_21
 18620  00FD' 2800'              	goto	u526_20
 18621  00FE'                    u526_21:
 18622  00FE' 2800'              	goto	i1l5345
 18623  00FF'                    u526_20:
 18624  00FF'                    i1l5343:
 18625  00FF' 1793'              	bsf	i1___fladd@grs,7
 18626  0100'                    i1l5345:
 18627  0100' 3001               	movlw	1
 18628  0101' 0088'              	movwf	??i1___fladd
 18629  0102'                    u527_25:
 18630  0102' 3783'              	asrf	i1___fladd@b+3,f
 18631  0103' 0C82'              	rrf	i1___fladd@b+2,f
 18632  0104' 0C81'              	rrf	i1___fladd@b+1,f
 18633  0105' 0C80'              	rrf	i1___fladd@b,f
 18634  0106' 0B80'              	decfsz	??i1___fladd& (0+127),f
 18635  0107' 2800'              	goto	u527_25
 18636  0108'                    i1l5347:
 18637  0108' 3001               	movlw	1
 18638  0109' 0088'              	movwf	??i1___fladd
 18639  010A' 0808'              	movf	??i1___fladd,w
 18640  010B' 0792'              	addwf	i1___fladd@bexp,f
 18641  010C' 2800'              	goto	i1l5383
 18642  010D'                    i1l5349:
 18643  010D' 0803'              	movf	i1___fladd@b+3,w
 18644  010E' 3A80               	xorlw	128
 18645  010F' 0088'              	movwf	??i1___fladd
 18646  0110' 0807'              	movf	i1___fladd@a+3,w
 18647  0111' 3A80               	xorlw	128
 18648  0112' 0208'              	subwf	??i1___fladd,w
 18649  0113' 1D03               	skipz
 18650  0114' 2800'              	goto	u528_23
 18651  0115' 0806'              	movf	i1___fladd@a+2,w
 18652  0116' 0202'              	subwf	i1___fladd@b+2,w
 18653  0117' 1D03               	skipz
 18654  0118' 2800'              	goto	u528_23
 18655  0119' 0805'              	movf	i1___fladd@a+1,w
 18656  011A' 0201'              	subwf	i1___fladd@b+1,w
 18657  011B' 1D03               	skipz
 18658  011C' 2800'              	goto	u528_23
 18659  011D' 0804'              	movf	i1___fladd@a,w
 18660  011E' 0200'              	subwf	i1___fladd@b,w
 18661  011F'                    u528_23:
 18662  011F' 1803               	skipnc
 18663  0120' 2800'              	goto	u528_21
 18664  0121' 2800'              	goto	u528_20
 18665  0122'                    u528_21:
 18666  0122' 2800'              	goto	i1l5359
 18667  0123'                    u528_20:
 18668  0123'                    i1l5351:
 18669  0123' 30FF               	movlw	255
 18670  0124' 0088'              	movwf	??i1___fladd
 18671  0125' 30FF               	movlw	255
 18672  0126' 0089'              	movwf	??i1___fladd+1
 18673  0127' 30FF               	movlw	255
 18674  0128' 008A'              	movwf	??i1___fladd+2
 18675  0129' 30FF               	movlw	255
 18676  012A' 008B'              	movwf	??i1___fladd+3
 18677  012B' 0800'              	movf	i1___fladd@b,w
 18678  012C' 0204'              	subwf	i1___fladd@a,w
 18679  012D' 008C'              	movwf	??i1___fladd+4
 18680  012E' 0801'              	movf	i1___fladd@b+1,w
 18681  012F' 3B05'              	subwfb	i1___fladd@a+1,w
 18682  0130' 008D'              	movwf	??i1___fladd+5
 18683  0131' 0802'              	movf	i1___fladd@b+2,w
 18684  0132' 3B06'              	subwfb	i1___fladd@a+2,w
 18685  0133' 008E'              	movwf	??i1___fladd+6
 18686  0134' 0803'              	movf	i1___fladd@b+3,w
 18687  0135' 3B07'              	subwfb	i1___fladd@a+3,w
 18688  0136' 008F'              	movwf	??i1___fladd+7
 18689  0137' 080C'              	movf	??i1___fladd+4,w
 18690  0138' 0788'              	addwf	??i1___fladd,f
 18691  0139' 080D'              	movf	??i1___fladd+5,w
 18692  013A' 3D89'              	addwfc	??i1___fladd+1,f
 18693  013B' 080E'              	movf	??i1___fladd+6,w
 18694  013C' 3D8A'              	addwfc	??i1___fladd+2,f
 18695  013D' 080F'              	movf	??i1___fladd+7,w
 18696  013E' 3D8B'              	addwfc	??i1___fladd+3,f
 18697  013F' 080B'              	movf	??i1___fladd+3,w
 18698  0140' 0083'              	movwf	i1___fladd@b+3
 18699  0141' 080A'              	movf	??i1___fladd+2,w
 18700  0142' 0082'              	movwf	i1___fladd@b+2
 18701  0143' 0809'              	movf	??i1___fladd+1,w
 18702  0144' 0081'              	movwf	i1___fladd@b+1
 18703  0145' 0808'              	movf	??i1___fladd,w
 18704  0146' 0080'              	movwf	i1___fladd@b
 18705  0147'                    i1l5353:
 18706  0147' 3080               	movlw	128
 18707  0148' 0088'              	movwf	??i1___fladd
 18708  0149' 0808'              	movf	??i1___fladd,w
 18709  014A' 0690'              	xorwf	i1___fladd@signs,f
 18710  014B' 0993'              	comf	i1___fladd@grs,f
 18711  014C' 0A93'              	incf	i1___fladd@grs,f
 18712  014D'                    i1l5355:
 18713  014D' 0813'              	movf	i1___fladd@grs,w
 18714  014E' 1D03               	btfss	3,2
 18715  014F' 2800'              	goto	u529_21
 18716  0150' 2800'              	goto	u529_20
 18717  0151'                    u529_21:
 18718  0151' 2800'              	goto	i1l1368
 18719  0152'                    u529_20:
 18720  0152'                    i1l5357:
 18721  0152' 3001               	movlw	1
 18722  0153' 0780'              	addwf	i1___fladd@b,f
 18723  0154' 3000               	movlw	0
 18724  0155' 3D81'              	addwfc	i1___fladd@b+1,f
 18725  0156' 3000               	movlw	0
 18726  0157' 3D82'              	addwfc	i1___fladd@b+2,f
 18727  0158' 3000               	movlw	0
 18728  0159' 3D83'              	addwfc	i1___fladd@b+3,f
 18729  015A' 2800'              	goto	i1l1368
 18730  015B'                    i1l5359:
 18731  015B' 0804'              	movf	i1___fladd@a,w
 18732  015C' 0280'              	subwf	i1___fladd@b,f
 18733  015D' 0805'              	movf	i1___fladd@a+1,w
 18734  015E' 3B81'              	subwfb	i1___fladd@b+1,f
 18735  015F' 0806'              	movf	i1___fladd@a+2,w
 18736  0160' 3B82'              	subwfb	i1___fladd@b+2,f
 18737  0161' 0807'              	movf	i1___fladd@a+3,w
 18738  0162' 3B83'              	subwfb	i1___fladd@b+3,f
 18739  0163'                    i1l1368:
 18740  0163' 0803'              	movf	i1___fladd@b+3,w
 18741  0164' 0402'              	iorwf	i1___fladd@b+2,w
 18742  0165' 0401'              	iorwf	i1___fladd@b+1,w
 18743  0166' 0400'              	iorwf	i1___fladd@b,w
 18744  0167' 1D03               	skipz
 18745  0168' 2800'              	goto	u530_21
 18746  0169' 2800'              	goto	u530_20
 18747  016A'                    u530_21:
 18748  016A' 2800'              	goto	i1l5381
 18749  016B'                    u530_20:
 18750  016B'                    i1l5361:
 18751  016B' 0813'              	movf	i1___fladd@grs,w
 18752  016C' 1D03               	btfss	3,2
 18753  016D' 2800'              	goto	u531_21
 18754  016E' 2800'              	goto	u531_20
 18755  016F'                    u531_21:
 18756  016F' 2800'              	goto	i1l5381
 18757  0170'                    u531_20:
 18758  0170'                    i1l5363:
 18759  0170' 3000               	movlw	0
 18760  0171' 0083'              	movwf	?i1___fladd+3
 18761  0172' 3000               	movlw	0
 18762  0173' 0082'              	movwf	?i1___fladd+2
 18763  0174' 3000               	movlw	0
 18764  0175' 0081'              	movwf	?i1___fladd+1
 18765  0176' 3000               	movlw	0
 18766  0177' 0080'              	movwf	?i1___fladd
 18767  0178' 2800'              	goto	i1l1360
 18768  0179'                    i1l5367:
 18769  0179' 3001               	movlw	1
 18770  017A'                    u532_25:
 18771  017A' 3580'              	lslf	i1___fladd@b,f
 18772  017B' 0D81'              	rlf	i1___fladd@b+1,f
 18773  017C' 0D82'              	rlf	i1___fladd@b+2,f
 18774  017D' 0D83'              	rlf	i1___fladd@b+3,f
 18775  017E' 0B89               	decfsz	9,f
 18776  017F' 2800'              	goto	u532_25
 18777  0180'                    i1l5369:
 18778  0180' 1F93'              	btfss	i1___fladd@grs,7
 18779  0181' 2800'              	goto	u533_21
 18780  0182' 2800'              	goto	u533_20
 18781  0183'                    u533_21:
 18782  0183' 2800'              	goto	i1l1372
 18783  0184'                    u533_20:
 18784  0184'                    i1l5371:
 18785  0184' 1400'              	bsf	i1___fladd@b,0
 18786  0185'                    i1l1372:
 18787  0185' 1C13'              	btfss	i1___fladd@grs,0
 18788  0186' 2800'              	goto	u534_21
 18789  0187' 2800'              	goto	u534_20
 18790  0188'                    u534_21:
 18791  0188' 2800'              	goto	i1l5375
 18792  0189'                    u534_20:
 18793  0189'                    i1l5373:
 18794  0189' 1403               	setc
 18795  018A' 0D93'              	rlf	i1___fladd@grs,f
 18796  018B' 2800'              	goto	i1l5377
 18797  018C'                    i1l5375:
 18798  018C' 1003               	clrc
 18799  018D' 0D93'              	rlf	i1___fladd@grs,f
 18800  018E'                    i1l5377:
 18801  018E' 0812'              	movf	i1___fladd@bexp,w
 18802  018F' 1903               	btfsc	3,2
 18803  0190' 2800'              	goto	u535_21
 18804  0191' 2800'              	goto	u535_20
 18805  0192'                    u535_21:
 18806  0192' 2800'              	goto	i1l5381
 18807  0193'                    u535_20:
 18808  0193'                    i1l5379:
 18809  0193' 3001               	movlw	1
 18810  0194' 0292'              	subwf	i1___fladd@bexp,f
 18811  0195'                    i1l5381:
 18812  0195' 1F82'              	btfss	i1___fladd@b+2,7
 18813  0196' 2800'              	goto	u536_21
 18814  0197' 2800'              	goto	u536_20
 18815  0198'                    u536_21:
 18816  0198' 2800'              	goto	i1l5367
 18817  0199'                    u536_20:
 18818  0199'                    i1l5383:
 18819  0199' 0191'              	clrf	i1___fladd@aexp
 18820  019A'                    i1l5385:
 18821  019A' 1F93'              	btfss	i1___fladd@grs,7
 18822  019B' 2800'              	goto	u537_21
 18823  019C' 2800'              	goto	u537_20
 18824  019D'                    u537_21:
 18825  019D' 2800'              	goto	i1l5393
 18826  019E'                    u537_20:
 18827  019E'                    i1l5387:
 18828  019E' 0813'              	movf	i1___fladd@grs,w
 18829  019F' 397F               	andlw	127
 18830  01A0' 1903               	btfsc	3,2
 18831  01A1' 2800'              	goto	u538_21
 18832  01A2' 2800'              	goto	u538_20
 18833  01A3'                    u538_21:
 18834  01A3' 2800'              	goto	i1l1378
 18835  01A4'                    u538_20:
 18836  01A4'                    i1l5389:
 18837  01A4' 0191'              	clrf	i1___fladd@aexp
 18838  01A5' 0A91'              	incf	i1___fladd@aexp,f
 18839  01A6' 2800'              	goto	i1l5393
 18840  01A7'                    i1l1378:
 18841  01A7' 1C00'              	btfss	i1___fladd@b,0
 18842  01A8' 2800'              	goto	u539_21
 18843  01A9' 2800'              	goto	u539_20
 18844  01AA'                    u539_21:
 18845  01AA' 2800'              	goto	i1l5393
 18846  01AB'                    u539_20:
 18847  01AB' 2800'              	goto	i1l5389
 18848  01AC'                    i1l5393:
 18849  01AC' 0811'              	movf	i1___fladd@aexp,w
 18850  01AD' 1903               	btfsc	3,2
 18851  01AE' 2800'              	goto	u540_21
 18852  01AF' 2800'              	goto	u540_20
 18853  01B0'                    u540_21:
 18854  01B0' 2800'              	goto	i1l1381
 18855  01B1'                    u540_20:
 18856  01B1'                    i1l5395:
 18857  01B1' 3001               	movlw	1
 18858  01B2' 0780'              	addwf	i1___fladd@b,f
 18859  01B3' 3000               	movlw	0
 18860  01B4' 3D81'              	addwfc	i1___fladd@b+1,f
 18861  01B5' 3000               	movlw	0
 18862  01B6' 3D82'              	addwfc	i1___fladd@b+2,f
 18863  01B7' 3000               	movlw	0
 18864  01B8' 3D83'              	addwfc	i1___fladd@b+3,f
 18865  01B9'                    i1l5397:
 18866  01B9' 1C03'              	btfss	i1___fladd@b+3,0
 18867  01BA' 2800'              	goto	u541_21
 18868  01BB' 2800'              	goto	u541_20
 18869  01BC'                    u541_21:
 18870  01BC' 2800'              	goto	i1l1381
 18871  01BD'                    u541_20:
 18872  01BD'                    i1l5399:
 18873  01BD' 0800'              	movf	i1___fladd@b,w
 18874  01BE' 0088'              	movwf	??i1___fladd
 18875  01BF' 0801'              	movf	i1___fladd@b+1,w
 18876  01C0' 0089'              	movwf	??i1___fladd+1
 18877  01C1' 0802'              	movf	i1___fladd@b+2,w
 18878  01C2' 008A'              	movwf	??i1___fladd+2
 18879  01C3' 0803'              	movf	i1___fladd@b+3,w
 18880  01C4' 008B'              	movwf	??i1___fladd+3
 18881  01C5' 3001               	movlw	1
 18882  01C6' 008C'              	movwf	??i1___fladd+4
 18883  01C7'                    u542_25:
 18884  01C7' 378B'              	asrf	??i1___fladd+3,f
 18885  01C8' 0C8A'              	rrf	??i1___fladd+2,f
 18886  01C9' 0C89'              	rrf	??i1___fladd+1,f
 18887  01CA' 0C88'              	rrf	??i1___fladd,f
 18888  01CB'                    u542_20:
 18889  01CB' 0B8C'              	decfsz	??i1___fladd+4,f
 18890  01CC' 2800'              	goto	u542_25
 18891  01CD' 080B'              	movf	??i1___fladd+3,w
 18892  01CE' 0083'              	movwf	i1___fladd@b+3
 18893  01CF' 080A'              	movf	??i1___fladd+2,w
 18894  01D0' 0082'              	movwf	i1___fladd@b+2
 18895  01D1' 0809'              	movf	??i1___fladd+1,w
 18896  01D2' 0081'              	movwf	i1___fladd@b+1
 18897  01D3' 0808'              	movf	??i1___fladd,w
 18898  01D4' 0080'              	movwf	i1___fladd@b
 18899  01D5' 0A12'              	incf	i1___fladd@bexp,w
 18900  01D6' 1903               	btfsc	3,2
 18901  01D7' 2800'              	goto	u543_21
 18902  01D8' 2800'              	goto	u543_20
 18903  01D9'                    u543_21:
 18904  01D9' 2800'              	goto	i1l1381
 18905  01DA'                    u543_20:
 18906  01DA'                    i1l5401:
 18907  01DA' 3001               	movlw	1
 18908  01DB' 0088'              	movwf	??i1___fladd
 18909  01DC' 0808'              	movf	??i1___fladd,w
 18910  01DD' 0792'              	addwf	i1___fladd@bexp,f
 18911  01DE'                    i1l1381:
 18912  01DE' 0A12'              	incf	i1___fladd@bexp,w
 18913  01DF' 1903               	btfsc	3,2
 18914  01E0' 2800'              	goto	u544_21
 18915  01E1' 2800'              	goto	u544_20
 18916  01E2'                    u544_21:
 18917  01E2' 2800'              	goto	i1l5405
 18918  01E3'                    u544_20:
 18919  01E3'                    i1l5403:
 18920  01E3' 0812'              	movf	i1___fladd@bexp,w
 18921  01E4' 1D03               	btfss	3,2
 18922  01E5' 2800'              	goto	u545_21
 18923  01E6' 2800'              	goto	u545_20
 18924  01E7'                    u545_21:
 18925  01E7' 2800'              	goto	i1l5411
 18926  01E8'                    u545_20:
 18927  01E8'                    i1l5405:
 18928  01E8' 3000               	movlw	0
 18929  01E9' 0083'              	movwf	i1___fladd@b+3
 18930  01EA' 3000               	movlw	0
 18931  01EB' 0082'              	movwf	i1___fladd@b+2
 18932  01EC' 3000               	movlw	0
 18933  01ED' 0081'              	movwf	i1___fladd@b+1
 18934  01EE' 3000               	movlw	0
 18935  01EF' 0080'              	movwf	i1___fladd@b
 18936  01F0'                    i1l5407:
 18937  01F0' 0812'              	movf	i1___fladd@bexp,w
 18938  01F1' 1D03               	btfss	3,2
 18939  01F2' 2800'              	goto	u546_21
 18940  01F3' 2800'              	goto	u546_20
 18941  01F4'                    u546_21:
 18942  01F4' 2800'              	goto	i1l5411
 18943  01F5'                    u546_20:
 18944  01F5'                    i1l5409:
 18945  01F5' 0190'              	clrf	i1___fladd@signs
 18946  01F6'                    i1l5411:
 18947  01F6' 1C12'              	btfss	i1___fladd@bexp,0
 18948  01F7' 2800'              	goto	u547_21
 18949  01F8' 2800'              	goto	u547_20
 18950  01F9'                    u547_21:
 18951  01F9' 2800'              	goto	i1l5415
 18952  01FA'                    u547_20:
 18953  01FA'                    i1l5413:
 18954  01FA' 1782'              	bsf	i1___fladd@b+2,7
 18955  01FB' 2800'              	goto	i1l1389
 18956  01FC'                    i1l5415:
 18957  01FC' 307F               	movlw	127
 18958  01FD' 0088'              	movwf	??i1___fladd
 18959  01FE' 0808'              	movf	??i1___fladd,w
 18960  01FF' 0582'              	andwf	i1___fladd@b+2,f
 18961  0200'                    i1l1389:
 18962  0200' 3612'              	lsrf	i1___fladd@bexp,w
 18963  0201' 0083'              	movwf	i1___fladd@b+3
 18964  0202'                    i1l5417:
 18965  0202' 1F90'              	btfss	i1___fladd@signs,7
 18966  0203' 2800'              	goto	u548_21
 18967  0204' 2800'              	goto	u548_20
 18968  0205'                    u548_21:
 18969  0205' 2800'              	goto	i1l1390
 18970  0206'                    u548_20:
 18971  0206'                    i1l5419:
 18972  0206' 1783'              	bsf	i1___fladd@b+3,7
 18973  0207'                    i1l1390:
 18974  0207'                    i1l1360:
 18975  0207' 0008               	return
 18976  0208'                    __end_ofi1___fladd:
 18977                           
 18978                           	psect	text46
 18979  0000'                    __ptext46:	
 18980 ;; *************** function i1_Cell_ON *****************
 18981 ;; Defined at:
 18982 ;;		line 508 in file "charger_discharger.c"
 18983 ;; Parameters:    Size  Location     Type
 18984 ;;		None
 18985 ;; Auto vars:     Size  Location     Type
 18986 ;;		None
 18987 ;; Return value:  Size  Location     Type
 18988 ;;                  1    wreg      void 
 18989 ;; Registers used:
 18990 ;;		wreg, status,2, status,0
 18991 ;; Tracked objects:
 18992 ;;		On entry : 0/0
 18993 ;;		On exit  : 0/0
 18994 ;;		Unchanged: 0/0
 18995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18998 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18999 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19000 ;;Total ram usage:        1 bytes
 19001 ;; Hardware stack levels used: 1
 19002 ;; This function calls:
 19003 ;;		Nothing
 19004 ;; This function is called by:
 19005 ;;		i1_converter_settings
 19006 ;; This function uses a non-reentrant model
 19007 ;;
 19008                           
 19009  0000'                    i1_Cell_ON:	
 19010                           ;psect for function i1_Cell_ON
 19011                           
 19012  0000'                    i1l5529:	
 19013                           ;incstack = 0
 19014                           ; Regs used in i1_Cell_ON: [wreg+status,2+status,0]
 19015                           
 19016                           
 19017                           ;charger_discharger.c: 510:     if (cell_count == 1)
 19018  0000' 0023               	movlb	3	; select bank3
 19019  0001' 0300'              	decf	_cell_count^(0+384),w
 19020  0002' 1D03               	btfss	3,2
 19021  0003' 2800'              	goto	u566_21
 19022  0004' 2800'              	goto	u566_20
 19023  0005'                    u566_21:
 19024  0005' 2800'              	goto	i1l5541
 19025  0006'                    u566_20:
 19026  0006'                    i1l5531:
 19027                           
 19028                           ;charger_discharger.c: 511:     {;charger_discharger.c: 512:         { RB2 = 1; };
 19029  0006' 0020               	movlb	0	; select bank0
 19030  0007' 150D               	bsf	13,2	;volatile
 19031  0008'                    i1l5533:
 19032                           
 19033                           ;charger_discharger.c: 513:         _delay((unsigned long)((10)*(32000000/4000.0)));
 19034  0008' 3068               	movlw	104
 19035  0009' 0080'              	movwf	??i1_Cell_ON
 19036  000A' 30E4               	movlw	228
 19037  000B'                    u813_27:
 19038  000B' 0B89               	decfsz	9,f
 19039  000C' 2800'              	goto	u813_27
 19040  000D' 0B80'              	decfsz	??i1_Cell_ON,f
 19041  000E' 2800'              	goto	u813_27
 19042  000F' 3200               	nop2
 19043  0010'                    i1l5535:
 19044                           
 19045                           ;charger_discharger.c: 514:         { RB3 = 0; };
 19046  0010' 0020               	movlb	0	; select bank0
 19047  0011' 118D               	bcf	13,3	;volatile
 19048                           
 19049                           ;charger_discharger.c: 515:         _delay((unsigned long)((10)*(32000000/4000.0)));
 19050  0012' 3068               	movlw	104
 19051  0013' 0080'              	movwf	??i1_Cell_ON
 19052  0014' 30E4               	movlw	228
 19053  0015'                    u814_27:
 19054  0015' 0B89               	decfsz	9,f
 19055  0016' 2800'              	goto	u814_27
 19056  0017' 0B80'              	decfsz	??i1_Cell_ON,f
 19057  0018' 2800'              	goto	u814_27
 19058  0019' 3200               	nop2
 19059  001A'                    i1l5537:
 19060                           
 19061                           ;charger_discharger.c: 516:         { RB4 = 0; };
 19062  001A' 0020               	movlb	0	; select bank0
 19063  001B' 120D               	bcf	13,4	;volatile
 19064                           
 19065                           ;charger_discharger.c: 517:         _delay((unsigned long)((10)*(32000000/4000.0)));
 19066  001C' 3068               	movlw	104
 19067  001D' 0080'              	movwf	??i1_Cell_ON
 19068  001E' 30E4               	movlw	228
 19069  001F'                    u815_27:
 19070  001F' 0B89               	decfsz	9,f
 19071  0020' 2800'              	goto	u815_27
 19072  0021' 0B80'              	decfsz	??i1_Cell_ON,f
 19073  0022' 2800'              	goto	u815_27
 19074  0023' 3200               	nop2
 19075  0024'                    i1l5539:
 19076                           
 19077                           ;charger_discharger.c: 518:         { RB5 = 0; };
 19078  0024' 0020               	movlb	0	; select bank0
 19079  0025' 128D               	bcf	13,5	;volatile
 19080                           
 19081                           ;charger_discharger.c: 519:         _delay((unsigned long)((10)*(32000000/4000.0)));
 19082  0026' 3068               	movlw	104
 19083  0027' 0080'              	movwf	??i1_Cell_ON
 19084  0028' 30E4               	movlw	228
 19085  0029'                    u816_27:
 19086  0029' 0B89               	decfsz	9,f
 19087  002A' 2800'              	goto	u816_27
 19088  002B' 0B80'              	decfsz	??i1_Cell_ON,f
 19089  002C' 2800'              	goto	u816_27
 19090  002D' 3200               	nop2
 19091                           
 19092                           ;charger_discharger.c: 520:     }else if (cell_count == 2)
 19093  002E' 2800'              	goto	i1l484
 19094  002F'                    i1l5541:
 19095  002F' 3002               	movlw	2
 19096  0030' 0600'              	xorwf	_cell_count^(0+384),w
 19097  0031' 1D03               	btfss	3,2
 19098  0032' 2800'              	goto	u567_21
 19099  0033' 2800'              	goto	u567_20
 19100  0034'                    u567_21:
 19101  0034' 2800'              	goto	i1l5553
 19102  0035'                    u567_20:
 19103  0035'                    i1l5543:
 19104                           
 19105                           ;charger_discharger.c: 521:     {;charger_discharger.c: 522:         { RB2 = 0; };
 19106  0035' 0020               	movlb	0	; select bank0
 19107  0036' 110D               	bcf	13,2	;volatile
 19108  0037'                    i1l5545:
 19109                           
 19110                           ;charger_discharger.c: 523:         _delay((unsigned long)((10)*(32000000/4000.0)));
 19111  0037' 3068               	movlw	104
 19112  0038' 0080'              	movwf	??i1_Cell_ON
 19113  0039' 30E4               	movlw	228
 19114  003A'                    u817_27:
 19115  003A' 0B89               	decfsz	9,f
 19116  003B' 2800'              	goto	u817_27
 19117  003C' 0B80'              	decfsz	??i1_Cell_ON,f
 19118  003D' 2800'              	goto	u817_27
 19119  003E' 3200               	nop2
 19120  003F'                    i1l5547:
 19121                           
 19122                           ;charger_discharger.c: 524:         { RB3 = 1; };
 19123  003F' 0020               	movlb	0	; select bank0
 19124  0040' 158D               	bsf	13,3	;volatile
 19125                           
 19126                           ;charger_discharger.c: 525:         _delay((unsigned long)((10)*(32000000/4000.0)));
 19127  0041' 3068               	movlw	104
 19128  0042' 0080'              	movwf	??i1_Cell_ON
 19129  0043' 30E4               	movlw	228
 19130  0044'                    u818_27:
 19131  0044' 0B89               	decfsz	9,f
 19132  0045' 2800'              	goto	u818_27
 19133  0046' 0B80'              	decfsz	??i1_Cell_ON,f
 19134  0047' 2800'              	goto	u818_27
 19135  0048' 3200               	nop2
 19136  0049' 2800'              	goto	i1l5537
 19137  004A'                    i1l5553:
 19138  004A' 3003               	movlw	3
 19139  004B' 0600'              	xorwf	_cell_count^(0+384),w
 19140  004C' 1D03               	btfss	3,2
 19141  004D' 2800'              	goto	u568_21
 19142  004E' 2800'              	goto	u568_20
 19143  004F'                    u568_21:
 19144  004F' 2800'              	goto	i1l5565
 19145  0050'                    u568_20:
 19146  0050'                    i1l5555:
 19147                           
 19148                           ;charger_discharger.c: 531:     {;charger_discharger.c: 532:         { RB2 = 0; };
 19149  0050' 0020               	movlb	0	; select bank0
 19150  0051' 110D               	bcf	13,2	;volatile
 19151  0052'                    i1l5557:
 19152                           
 19153                           ;charger_discharger.c: 533:         _delay((unsigned long)((10)*(32000000/4000.0)));
 19154  0052' 3068               	movlw	104
 19155  0053' 0080'              	movwf	??i1_Cell_ON
 19156  0054' 30E4               	movlw	228
 19157  0055'                    u819_27:
 19158  0055' 0B89               	decfsz	9,f
 19159  0056' 2800'              	goto	u819_27
 19160  0057' 0B80'              	decfsz	??i1_Cell_ON,f
 19161  0058' 2800'              	goto	u819_27
 19162  0059' 3200               	nop2
 19163  005A'                    i1l5559:
 19164                           
 19165                           ;charger_discharger.c: 534:         { RB3 = 0; };
 19166  005A' 0020               	movlb	0	; select bank0
 19167  005B' 118D               	bcf	13,3	;volatile
 19168                           
 19169                           ;charger_discharger.c: 535:         _delay((unsigned long)((10)*(32000000/4000.0)));
 19170  005C' 3068               	movlw	104
 19171  005D' 0080'              	movwf	??i1_Cell_ON
 19172  005E' 30E4               	movlw	228
 19173  005F'                    u820_27:
 19174  005F' 0B89               	decfsz	9,f
 19175  0060' 2800'              	goto	u820_27
 19176  0061' 0B80'              	decfsz	??i1_Cell_ON,f
 19177  0062' 2800'              	goto	u820_27
 19178  0063' 3200               	nop2
 19179  0064'                    i1l5561:
 19180                           
 19181                           ;charger_discharger.c: 536:         { RB4 = 1; };
 19182  0064' 0020               	movlb	0	; select bank0
 19183  0065' 160D               	bsf	13,4	;volatile
 19184                           
 19185                           ;charger_discharger.c: 537:         _delay((unsigned long)((10)*(32000000/4000.0)));
 19186  0066' 3068               	movlw	104
 19187  0067' 0080'              	movwf	??i1_Cell_ON
 19188  0068' 30E4               	movlw	228
 19189  0069'                    u821_27:
 19190  0069' 0B89               	decfsz	9,f
 19191  006A' 2800'              	goto	u821_27
 19192  006B' 0B80'              	decfsz	??i1_Cell_ON,f
 19193  006C' 2800'              	goto	u821_27
 19194  006D' 3200               	nop2
 19195  006E'                    i1l5563:
 19196                           
 19197                           ;charger_discharger.c: 538:         { RB5 = 0; };
 19198  006E' 0020               	movlb	0	; select bank0
 19199  006F' 128D               	bcf	13,5	;volatile
 19200                           
 19201                           ;charger_discharger.c: 539:     }else if (cell_count == 4)
 19202  0070' 2800'              	goto	i1l484
 19203  0071'                    i1l5565:
 19204  0071' 3004               	movlw	4
 19205  0072' 0600'              	xorwf	_cell_count^(0+384),w
 19206  0073' 1D03               	btfss	3,2
 19207  0074' 2800'              	goto	u569_21
 19208  0075' 2800'              	goto	u569_20
 19209  0076'                    u569_21:
 19210  0076' 2800'              	goto	i1l480
 19211  0077'                    u569_20:
 19212  0077'                    i1l5567:
 19213                           
 19214                           ;charger_discharger.c: 540:     {;charger_discharger.c: 541:         { RB2 = 0; };
 19215  0077' 0020               	movlb	0	; select bank0
 19216  0078' 110D               	bcf	13,2	;volatile
 19217  0079'                    i1l5569:
 19218                           
 19219                           ;charger_discharger.c: 542:         _delay((unsigned long)((10)*(32000000/4000.0)));
 19220  0079' 3068               	movlw	104
 19221  007A' 0080'              	movwf	??i1_Cell_ON
 19222  007B' 30E4               	movlw	228
 19223  007C'                    u822_27:
 19224  007C' 0B89               	decfsz	9,f
 19225  007D' 2800'              	goto	u822_27
 19226  007E' 0B80'              	decfsz	??i1_Cell_ON,f
 19227  007F' 2800'              	goto	u822_27
 19228  0080' 3200               	nop2
 19229  0081'                    i1l5571:
 19230                           
 19231                           ;charger_discharger.c: 543:         { RB3 = 0; };
 19232  0081' 0020               	movlb	0	; select bank0
 19233  0082' 118D               	bcf	13,3	;volatile
 19234                           
 19235                           ;charger_discharger.c: 544:         _delay((unsigned long)((10)*(32000000/4000.0)));
 19236  0083' 3068               	movlw	104
 19237  0084' 0080'              	movwf	??i1_Cell_ON
 19238  0085' 30E4               	movlw	228
 19239  0086'                    u823_27:
 19240  0086' 0B89               	decfsz	9,f
 19241  0087' 2800'              	goto	u823_27
 19242  0088' 0B80'              	decfsz	??i1_Cell_ON,f
 19243  0089' 2800'              	goto	u823_27
 19244  008A' 3200               	nop2
 19245  008B'                    i1l5573:
 19246                           
 19247                           ;charger_discharger.c: 545:         { RB4 = 0; };
 19248  008B' 0020               	movlb	0	; select bank0
 19249  008C' 120D               	bcf	13,4	;volatile
 19250                           
 19251                           ;charger_discharger.c: 546:         _delay((unsigned long)((10)*(32000000/4000.0)));
 19252  008D' 3068               	movlw	104
 19253  008E' 0080'              	movwf	??i1_Cell_ON
 19254  008F' 30E4               	movlw	228
 19255  0090'                    u824_27:
 19256  0090' 0B89               	decfsz	9,f
 19257  0091' 2800'              	goto	u824_27
 19258  0092' 0B80'              	decfsz	??i1_Cell_ON,f
 19259  0093' 2800'              	goto	u824_27
 19260  0094' 3200               	nop2
 19261  0095'                    i1l5575:
 19262                           
 19263                           ;charger_discharger.c: 547:         { RB5 = 1; };
 19264  0095' 0020               	movlb	0	; select bank0
 19265  0096' 168D               	bsf	13,5	;volatile
 19266                           
 19267                           ;charger_discharger.c: 548:         _delay((unsigned long)((10)*(32000000/4000.0)));
 19268  0097' 3068               	movlw	104
 19269  0098' 0080'              	movwf	??i1_Cell_ON
 19270  0099' 30E4               	movlw	228
 19271  009A'                    u825_27:
 19272  009A' 0B89               	decfsz	9,f
 19273  009B' 2800'              	goto	u825_27
 19274  009C' 0B80'              	decfsz	??i1_Cell_ON,f
 19275  009D' 2800'              	goto	u825_27
 19276  009E' 3200               	nop2
 19277  009F' 2800'              	goto	i1l484
 19278  00A0'                    i1l480:
 19279  00A0'                    i1l484:
 19280  00A0' 0008               	return
 19281  00A1'                    __end_ofi1_Cell_ON:
 19282                           
 19283                           	psect	text47
 19284  0000'                    __ptext47:	
 19285 ;; *************** function i1_UART_send_some_bytes *****************
 19286 ;; Defined at:
 19287 ;;		line 469 in file "charger_discharger.c"
 19288 ;; Parameters:    Size  Location     Type
 19289 ;;  length          1    wreg     unsigned char 
 19290 ;;  data            2    1[COMMON] PTR unsigned char 
 19291 ;;		 -> NULL(0), log_data(15), converter_configuration(14), test_configuration(17), 
 19292 ;;		 -> basic_configuration(17), command_interpreter@calc_checksum(2), 
 19293 ;; Auto vars:     Size  Location     Type
 19294 ;;  length          1    3[COMMON] unsigned char 
 19295 ;; Return value:  Size  Location     Type
 19296 ;;                  1    wreg      void 
 19297 ;; Registers used:
 19298 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19299 ;; Tracked objects:
 19300 ;;		On entry : 0/0
 19301 ;;		On exit  : 0/0
 19302 ;;		Unchanged: 0/0
 19303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19307 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19308 ;;Total ram usage:        3 bytes
 19309 ;; Hardware stack levels used: 1
 19310 ;; Hardware stack levels required when called: 1
 19311 ;; This function calls:
 19312 ;;		i1_UART_send_byte
 19313 ;; This function is called by:
 19314 ;;		_command_interpreter
 19315 ;; This function uses a non-reentrant model
 19316 ;;
 19317                           
 19318  0000'                    i1_UART_send_some_bytes:	
 19319                           ;psect for function i1_UART_send_some_bytes
 19320                           
 19321                           
 19322                           ;incstack = 0
 19323                           ; Regs used in i1_UART_send_some_bytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 19324                           ;i1UART_send_some_bytes@length stored from wreg
 19325  0000' 0083'              	movwf	i1UART_send_some_bytes@length
 19326  0001'                    i1l7265:
 19327                           
 19328                           ;charger_discharger.c: 469: void UART_send_some_bytes(uint8_t length, uint8_t* data);cha
      +                          rger_discharger.c: 470: {;charger_discharger.c: 471:     while(length--)
 19329  0001' 2800'              	goto	i1l7271
 19330  0002'                    i1l7267:
 19331                           
 19332                           ;charger_discharger.c: 472:     {;charger_discharger.c: 473:         UART_send_byte(*dat
      +                          a++);
 19333  0002' 0801'              	movf	i1UART_send_some_bytes@data,w
 19334  0003' 0086               	movwf	6
 19335  0004' 0802'              	movf	i1UART_send_some_bytes@data+1,w
 19336  0005' 0087               	movwf	7
 19337  0006' 0801               	movf	1,w
 19338  0007' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 19339  000A'                    i1l7269:
 19340  000A' 3001               	movlw	1
 19341  000B' 0781'              	addwf	i1UART_send_some_bytes@data,f
 19342  000C' 3000               	movlw	0
 19343  000D' 3D82'              	addwfc	i1UART_send_some_bytes@data+1,f
 19344  000E'                    i1l7271:
 19345                           
 19346                           ;charger_discharger.c: 471:     while(length--)
 19347  000E' 3001               	movlw	1
 19348  000F' 0283'              	subwf	i1UART_send_some_bytes@length,f
 19349  0010' 0A03'              	incf	i1UART_send_some_bytes@length,w
 19350  0011' 1D03               	btfss	3,2
 19351  0012' 2800'              	goto	u725_21
 19352  0013' 2800'              	goto	u725_20
 19353  0014'                    u725_21:
 19354  0014' 2800'              	goto	i1l7267
 19355  0015'                    u725_20:
 19356  0015'                    i1l456:
 19357  0015' 0008               	return
 19358  0016'                    __end_ofi1_UART_send_some_bytes:
 19359                           
 19360                           	psect	text48
 19361  0000'                    __ptext48:	
 19362 ;; *************** function _put_data_into_structure *****************
 19363 ;; Defined at:
 19364 ;;		line 488 in file "charger_discharger.c"
 19365 ;; Parameters:    Size  Location     Type
 19366 ;;  length          1    wreg     unsigned char 
 19367 ;;  data            1    0[COMMON] PTR unsigned char 
 19368 ;;		 -> command_interpreter@data(20), 
 19369 ;;  structure       1    1[COMMON] PTR unsigned char 
 19370 ;;		 -> NULL(0), converter_configuration(14), test_configuration(17), basic_configuration(17), 
 19371 ;; Auto vars:     Size  Location     Type
 19372 ;;  length          1    3[COMMON] unsigned char 
 19373 ;; Return value:  Size  Location     Type
 19374 ;;                  1    wreg      void 
 19375 ;; Registers used:
 19376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19377 ;; Tracked objects:
 19378 ;;		On entry : 0/0
 19379 ;;		On exit  : 0/0
 19380 ;;		Unchanged: 0/0
 19381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19383 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19384 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19385 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19386 ;;Total ram usage:        4 bytes
 19387 ;; Hardware stack levels used: 1
 19388 ;; This function calls:
 19389 ;;		Nothing
 19390 ;; This function is called by:
 19391 ;;		_command_interpreter
 19392 ;; This function uses a non-reentrant model
 19393 ;;
 19394                           
 19395  0000'                    _put_data_into_structure:	
 19396                           ;psect for function _put_data_into_structure
 19397                           
 19398                           
 19399                           ;incstack = 0
 19400                           ; Regs used in _put_data_into_structure: [wreg-fsr1h+status,2+status,0]
 19401                           ;put_data_into_structure@length stored from wreg
 19402  0000' 0083'              	movwf	put_data_into_structure@length
 19403  0001'                    i1l5955:
 19404                           
 19405                           ;charger_discharger.c: 488: void put_data_into_structure(uint8_t length, uint8_t* data, 
      +                          uint8_t* structure);charger_discharger.c: 489: {;charger_discharger.c: 490:     while(le
      +                          ngth--)
 19406  0001' 2800'              	goto	i1l5963
 19407  0002'                    i1l5957:
 19408                           
 19409                           ;charger_discharger.c: 491:     {;charger_discharger.c: 492:         *structure++ = *dat
      +                          a++;
 19410  0002' 0801'              	movf	put_data_into_structure@structure,w
 19411  0003' 0086               	movwf	6
 19412  0004' 3002               	movlw	2	; select bank4/5
 19413  0005' 0087               	movwf	7
 19414  0006' 0800'              	movf	put_data_into_structure@data,w
 19415  0007' 0084               	movwf	4
 19416  0008' 0185               	clrf	5
 19417  0009' 0800               	movf	0,w
 19418  000A' 0081               	movwf	1
 19419  000B'                    i1l5959:
 19420  000B' 3001               	movlw	1
 19421  000C' 0082'              	movwf	??_put_data_into_structure
 19422  000D' 0802'              	movf	??_put_data_into_structure,w
 19423  000E' 0780'              	addwf	put_data_into_structure@data,f
 19424  000F'                    i1l5961:
 19425  000F' 3001               	movlw	1
 19426  0010' 0082'              	movwf	??_put_data_into_structure
 19427  0011' 0802'              	movf	??_put_data_into_structure,w
 19428  0012' 0781'              	addwf	put_data_into_structure@structure,f
 19429  0013'                    i1l5963:
 19430                           
 19431                           ;charger_discharger.c: 490:     while(length--)
 19432  0013' 3001               	movlw	1
 19433  0014' 0283'              	subwf	put_data_into_structure@length,f
 19434  0015' 0A03'              	incf	put_data_into_structure@length,w
 19435  0016' 1D03               	btfss	3,2
 19436  0017' 2800'              	goto	u648_21
 19437  0018' 2800'              	goto	u648_20
 19438  0019'                    u648_21:
 19439  0019' 2800'              	goto	i1l5957
 19440  001A'                    u648_20:
 19441  001A'                    i1l468:
 19442  001A' 0008               	return
 19443  001B'                    __end_of_put_data_into_structure:
 19444                           
 19445                           	psect	text49
 19446  0000'                    __ptext49:	
 19447 ;; *************** function _calculate_checksum *****************
 19448 ;; Defined at:
 19449 ;;		line 477 in file "charger_discharger.c"
 19450 ;; Parameters:    Size  Location     Type
 19451 ;;  code            1    wreg     unsigned char 
 19452 ;;  length          1    0[COMMON] unsigned char 
 19453 ;;  data            2    1[COMMON] PTR unsigned char 
 19454 ;;		 -> NULL(0), converter_configuration(14), test_configuration(17), basic_configuration(17), 
 19455 ;;		 -> command_interpreter@data(20), 
 19456 ;; Auto vars:     Size  Location     Type
 19457 ;;  code            1    5[COMMON] unsigned char 
 19458 ;;  result          2    6[COMMON] unsigned short 
 19459 ;; Return value:  Size  Location     Type
 19460 ;;                  2    0[COMMON] unsigned short 
 19461 ;; Registers used:
 19462 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19463 ;; Tracked objects:
 19464 ;;		On entry : 0/0
 19465 ;;		On exit  : 0/0
 19466 ;;		Unchanged: 0/0
 19467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19468 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19469 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19470 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19471 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19472 ;;Total ram usage:        8 bytes
 19473 ;; Hardware stack levels used: 1
 19474 ;; This function calls:
 19475 ;;		Nothing
 19476 ;; This function is called by:
 19477 ;;		_command_interpreter
 19478 ;; This function uses a non-reentrant model
 19479 ;;
 19480                           
 19481  0000'                    _calculate_checksum:	
 19482                           ;psect for function _calculate_checksum
 19483                           
 19484                           
 19485                           ;incstack = 0
 19486                           ; Regs used in _calculate_checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
 19487                           ;calculate_checksum@code stored from wreg
 19488  0000' 0085'              	movwf	calculate_checksum@code
 19489  0001'                    i1l7243:
 19490  0001'                    i1l7245:
 19491                           
 19492                           ;charger_discharger.c: 480:     result = (uint16_t)code + (uint16_t)length;
 19493  0001' 0805'              	movf	calculate_checksum@code,w
 19494  0002' 0700'              	addwf	calculate_checksum@length,w
 19495  0003' 0086'              	movwf	calculate_checksum@result
 19496  0004' 0187'              	clrf	calculate_checksum@result+1
 19497  0005' 0D87'              	rlf	calculate_checksum@result+1,f
 19498                           
 19499                           ;charger_discharger.c: 481:     while(length--)
 19500  0006' 2800'              	goto	i1l7251
 19501  0007'                    i1l7247:
 19502                           
 19503                           ;charger_discharger.c: 482:     {;charger_discharger.c: 483:         result += *data++;
 19504  0007' 0801'              	movf	calculate_checksum@data,w
 19505  0008' 0086               	movwf	6
 19506  0009' 0802'              	movf	calculate_checksum@data+1,w
 19507  000A' 0087               	movwf	7
 19508  000B' 0801               	movf	1,w
 19509  000C' 0083'              	movwf	??_calculate_checksum
 19510  000D' 0184'              	clrf	??_calculate_checksum+1
 19511  000E' 0803'              	movf	??_calculate_checksum,w
 19512  000F' 0786'              	addwf	calculate_checksum@result,f
 19513  0010' 0804'              	movf	??_calculate_checksum+1,w
 19514  0011' 3D87'              	addwfc	calculate_checksum@result+1,f
 19515  0012'                    i1l7249:
 19516  0012' 3001               	movlw	1
 19517  0013' 0781'              	addwf	calculate_checksum@data,f
 19518  0014' 3000               	movlw	0
 19519  0015' 3D82'              	addwfc	calculate_checksum@data+1,f
 19520  0016'                    i1l7251:
 19521                           
 19522                           ;charger_discharger.c: 481:     while(length--)
 19523  0016' 3001               	movlw	1
 19524  0017' 0280'              	subwf	calculate_checksum@length,f
 19525  0018' 0A00'              	incf	calculate_checksum@length,w
 19526  0019' 1D03               	btfss	3,2
 19527  001A' 2800'              	goto	u723_21
 19528  001B' 2800'              	goto	u723_20
 19529  001C'                    u723_21:
 19530  001C' 2800'              	goto	i1l7247
 19531  001D'                    u723_20:
 19532  001D'                    i1l7253:
 19533                           
 19534                           ;charger_discharger.c: 485:     return (result);
 19535  001D' 0807'              	movf	calculate_checksum@result+1,w
 19536  001E' 0081'              	movwf	?_calculate_checksum+1
 19537  001F' 0806'              	movf	calculate_checksum@result,w
 19538  0020' 0080'              	movwf	?_calculate_checksum
 19539  0021'                    i1l462:
 19540  0021' 0008               	return
 19541  0022'                    __end_of_calculate_checksum:
 19542                           
 19543                           	psect	text50
 19544  0000'                    __ptext50:	
 19545 ;; *************** function _UART_send_header *****************
 19546 ;; Defined at:
 19547 ;;		line 427 in file "charger_discharger.c"
 19548 ;; Parameters:    Size  Location     Type
 19549 ;;  start           1    wreg     unsigned char 
 19550 ;;  operation       1    1[COMMON] unsigned char 
 19551 ;;  code            1    2[COMMON] unsigned char 
 19552 ;; Auto vars:     Size  Location     Type
 19553 ;;  start           1    3[COMMON] unsigned char 
 19554 ;; Return value:  Size  Location     Type
 19555 ;;                  1    wreg      void 
 19556 ;; Registers used:
 19557 ;;		wreg, status,2, status,0, pclath, cstack
 19558 ;; Tracked objects:
 19559 ;;		On entry : 0/0
 19560 ;;		On exit  : 0/0
 19561 ;;		Unchanged: 0/0
 19562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19566 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19567 ;;Total ram usage:        3 bytes
 19568 ;; Hardware stack levels used: 1
 19569 ;; Hardware stack levels required when called: 1
 19570 ;; This function calls:
 19571 ;;		i1_UART_send_byte
 19572 ;; This function is called by:
 19573 ;;		_command_interpreter
 19574 ;; This function uses a non-reentrant model
 19575 ;;
 19576                           
 19577  0000'                    _UART_send_header:	
 19578                           ;psect for function _UART_send_header
 19579                           
 19580                           
 19581                           ;incstack = 0
 19582                           ; Regs used in _UART_send_header: [wreg+status,2+status,0+pclath+cstack]
 19583                           ;UART_send_header@start stored from wreg
 19584  0000' 0083'              	movwf	UART_send_header@start
 19585  0001'                    i1l5945:
 19586                           
 19587                           ;charger_discharger.c: 427: void UART_send_header(uint8_t start, uint8_t operation, uint
      +                          8_t code);charger_discharger.c: 428: {;charger_discharger.c: 429:     UART_send_byte(sta
      +                          rt);
 19588  0001' 0803'              	movf	UART_send_header@start,w
 19589  0002' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 19590                           
 19591                           ;charger_discharger.c: 430:     UART_send_byte(operation);
 19592  0005' 0801'              	movf	UART_send_header@operation,w
 19593  0006' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 19594                           
 19595                           ;charger_discharger.c: 431:     UART_send_byte(code);
 19596  0009' 0802'              	movf	UART_send_header@code,w
 19597  000A' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 19598  000D'                    i1l430:
 19599  000D' 0008               	return
 19600  000E'                    __end_of_UART_send_header:
 19601                           
 19602                           	psect	text51
 19603  0000'                    __ptext51:	
 19604 ;; *************** function i1_UART_send_byte *****************
 19605 ;; Defined at:
 19606 ;;		line 461 in file "charger_discharger.c"
 19607 ;; Parameters:    Size  Location     Type
 19608 ;;  byte            1    wreg     unsigned char 
 19609 ;; Auto vars:     Size  Location     Type
 19610 ;;  byte            1    0[COMMON] unsigned char 
 19611 ;; Return value:  Size  Location     Type
 19612 ;;                  1    wreg      void 
 19613 ;; Registers used:
 19614 ;;		wreg
 19615 ;; Tracked objects:
 19616 ;;		On entry : 0/0
 19617 ;;		On exit  : 0/0
 19618 ;;		Unchanged: 0/0
 19619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19623 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19624 ;;Total ram usage:        1 bytes
 19625 ;; Hardware stack levels used: 1
 19626 ;; This function calls:
 19627 ;;		Nothing
 19628 ;; This function is called by:
 19629 ;;		_command_interpreter
 19630 ;;		_UART_send_header
 19631 ;;		_ISR
 19632 ;;		i1_UART_send_some_bytes
 19633 ;; This function uses a non-reentrant model
 19634 ;;
 19635                           
 19636  0000'                    i1_UART_send_byte:	
 19637                           ;psect for function i1_UART_send_byte
 19638                           
 19639                           
 19640                           ;incstack = 0
 19641                           ; Regs used in i1_UART_send_byte: [wreg]
 19642                           ;i1UART_send_byte@byte stored from wreg
 19643  0000' 0080'              	movwf	i1UART_send_byte@byte
 19644  0001'                    i1l5525:
 19645  0001'                    i1l447:	
 19646                           ;charger_discharger.c: 464:     {;charger_discharger.c: 465:     }
 19647                           
 19648                           
 19649                           ;charger_discharger.c: 463:     while(0 == TXIF)
 19650  0001' 0020               	movlb	0	; select bank0
 19651  0002' 1E11               	btfss	17,4	;volatile
 19652  0003' 2800'              	goto	u565_21
 19653  0004' 2800'              	goto	u565_20
 19654  0005'                    u565_21:
 19655  0005' 2800'              	goto	i1l447
 19656  0006'                    u565_20:
 19657  0006'                    i1l5527:
 19658                           
 19659                           ;charger_discharger.c: 466:     TX1REG = byte;
 19660  0006' 0800'              	movf	i1UART_send_byte@byte,w
 19661  0007' 0023               	movlb	3	; select bank3
 19662  0008' 009A               	movwf	26	;volatile
 19663  0009'                    i1l450:
 19664  0009' 0008               	return
 19665  000A'                    __end_ofi1_UART_send_byte:
 19666                           
 19667                           	psect	text52
 19668  0000'                    __ptext52:	
 19669 ;; *************** function _UART_get_some_bytes *****************
 19670 ;; Defined at:
 19671 ;;		line 448 in file "charger_discharger.c"
 19672 ;; Parameters:    Size  Location     Type
 19673 ;;  length          1    wreg     unsigned char 
 19674 ;;  data            1    0[COMMON] PTR unsigned char 
 19675 ;;		 -> command_interpreter@data(20), 
 19676 ;; Auto vars:     Size  Location     Type
 19677 ;;  length          1    2[COMMON] unsigned char 
 19678 ;; Return value:  Size  Location     Type
 19679 ;;                  1    wreg      void 
 19680 ;; Registers used:
 19681 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19682 ;; Tracked objects:
 19683 ;;		On entry : 0/0
 19684 ;;		On exit  : 0/0
 19685 ;;		Unchanged: 0/0
 19686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19687 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19689 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19690 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19691 ;;Total ram usage:        3 bytes
 19692 ;; Hardware stack levels used: 1
 19693 ;; Hardware stack levels required when called: 1
 19694 ;; This function calls:
 19695 ;;		_UART_get_byte
 19696 ;; This function is called by:
 19697 ;;		_command_interpreter
 19698 ;; This function uses a non-reentrant model
 19699 ;;
 19700                           
 19701  0000'                    _UART_get_some_bytes:	
 19702                           ;psect for function _UART_get_some_bytes
 19703                           
 19704                           
 19705                           ;incstack = 0
 19706                           ; Regs used in _UART_get_some_bytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19707                           ;UART_get_some_bytes@length stored from wreg
 19708  0000' 0082'              	movwf	UART_get_some_bytes@length
 19709  0001'                    i1l5921:
 19710                           
 19711                           ;charger_discharger.c: 448: void UART_get_some_bytes(uint8_t length, uint8_t* data);char
      +                          ger_discharger.c: 449: {;charger_discharger.c: 450:     if(OERR)
 19712  0001' 0023               	movlb	3	; select bank3
 19713  0002' 1C9D               	btfss	29,1	;volatile
 19714  0003' 2800'              	goto	u644_21
 19715  0004' 2800'              	goto	u644_20
 19716  0005'                    u644_21:
 19717  0005' 2800'              	goto	i1l5929
 19718  0006'                    u644_20:
 19719  0006'                    i1l5923:
 19720                           
 19721                           ;charger_discharger.c: 451:     {;charger_discharger.c: 452:         CREN = 0;
 19722  0006' 121D               	bcf	29,4	;volatile
 19723                           
 19724                           ;charger_discharger.c: 453:         CREN = 1;
 19725  0007' 161D               	bsf	29,4	;volatile
 19726  0008' 2800'              	goto	i1l5929
 19727  0009'                    i1l5925:
 19728                           
 19729                           ;charger_discharger.c: 456:     {;charger_discharger.c: 457:         *data++ = UART_get_
      +                          byte();
 19730  0009' 0800'              	movf	UART_get_some_bytes@data,w
 19731  000A' 0086               	movwf	6
 19732  000B' 0187               	clrf	7
 19733  000C' 3180' 2000' 3180'  	fcall	_UART_get_byte
 19734  000F' 0081               	movwf	1
 19735  0010'                    i1l5927:
 19736  0010' 3001               	movlw	1
 19737  0011' 0081'              	movwf	??_UART_get_some_bytes
 19738  0012' 0801'              	movf	??_UART_get_some_bytes,w
 19739  0013' 0780'              	addwf	UART_get_some_bytes@data,f
 19740  0014'                    i1l5929:
 19741                           
 19742                           ;charger_discharger.c: 455:     while(length--)
 19743  0014' 3001               	movlw	1
 19744  0015' 0282'              	subwf	UART_get_some_bytes@length,f
 19745  0016' 0A02'              	incf	UART_get_some_bytes@length,w
 19746  0017' 1D03               	btfss	3,2
 19747  0018' 2800'              	goto	u645_21
 19748  0019' 2800'              	goto	u645_20
 19749  001A'                    u645_21:
 19750  001A' 2800'              	goto	i1l5925
 19751  001B'                    u645_20:
 19752  001B'                    i1l444:
 19753  001B' 0008               	return
 19754  001C'                    __end_of_UART_get_some_bytes:
 19755                           
 19756                           	psect	text53
 19757  0000'                    __ptext53:	
 19758 ;; *************** function _UART_get_byte *****************
 19759 ;; Defined at:
 19760 ;;		line 437 in file "charger_discharger.c"
 19761 ;; Parameters:    Size  Location     Type
 19762 ;;		None
 19763 ;; Auto vars:     Size  Location     Type
 19764 ;;		None
 19765 ;; Return value:  Size  Location     Type
 19766 ;;                  1    wreg      unsigned char 
 19767 ;; Registers used:
 19768 ;;		wreg
 19769 ;; Tracked objects:
 19770 ;;		On entry : 0/0
 19771 ;;		On exit  : 0/0
 19772 ;;		Unchanged: 0/0
 19773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19778 ;;Total ram usage:        0 bytes
 19779 ;; Hardware stack levels used: 1
 19780 ;; This function calls:
 19781 ;;		Nothing
 19782 ;; This function is called by:
 19783 ;;		_command_interpreter
 19784 ;;		_UART_get_some_bytes
 19785 ;; This function uses a non-reentrant model
 19786 ;;
 19787                           
 19788  0000'                    _UART_get_byte:	
 19789                           ;psect for function _UART_get_byte
 19790                           
 19791  0000'                    i1l5445:	
 19792                           ;incstack = 0
 19793                           ; Regs used in _UART_get_byte: [wreg]
 19794                           
 19795                           
 19796                           ;charger_discharger.c: 439:     if(OERR)
 19797  0000' 0023               	movlb	3	; select bank3
 19798  0001' 1C9D               	btfss	29,1	;volatile
 19799  0002' 2800'              	goto	u552_21
 19800  0003' 2800'              	goto	u552_20
 19801  0004'                    u552_21:
 19802  0004' 2800'              	goto	i1l434
 19803  0005'                    u552_20:
 19804  0005'                    i1l5447:
 19805                           
 19806                           ;charger_discharger.c: 440:     {;charger_discharger.c: 441:         CREN = 0;
 19807  0005' 121D               	bcf	29,4	;volatile
 19808                           
 19809                           ;charger_discharger.c: 442:         CREN = 1;
 19810  0006' 161D               	bsf	29,4	;volatile
 19811  0007'                    i1l434:
 19812  0007' 0020               	movlb	0	; select bank0
 19813  0008' 1E91               	btfss	17,5	;volatile
 19814  0009' 2800'              	goto	u553_21
 19815  000A' 2800'              	goto	u553_20
 19816  000B'                    u553_21:
 19817  000B' 2800'              	goto	i1l434
 19818  000C'                    u553_20:
 19819  000C'                    i1l5449:
 19820                           
 19821                           ;charger_discharger.c: 445:     return RC1REG;
 19822  000C' 0023               	movlb	3	; select bank3
 19823  000D' 0819               	movf	25,w	;volatile
 19824  000E'                    i1l437:
 19825  000E' 0008               	return
 19826  000F'                    __end_of_UART_get_byte:
 19827                           
 19828                           	psect	text54
 19829  0000'                    __ptext54:	
 19830 ;; *************** function _calculate_avg *****************
 19831 ;; Defined at:
 19832 ;;		line 381 in file "charger_discharger.c"
 19833 ;; Parameters:    Size  Location     Type
 19834 ;;		None
 19835 ;; Auto vars:     Size  Location     Type
 19836 ;;		None
 19837 ;; Return value:  Size  Location     Type
 19838 ;;                  1    wreg      void 
 19839 ;; Registers used:
 19840 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 19841 ;; Tracked objects:
 19842 ;;		On entry : 0/0
 19843 ;;		On exit  : 0/0
 19844 ;;		Unchanged: 0/0
 19845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19848 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19849 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19850 ;;Total ram usage:        8 bytes
 19851 ;; Hardware stack levels used: 1
 19852 ;; This function calls:
 19853 ;;		Nothing
 19854 ;; This function is called by:
 19855 ;;		_ISR
 19856 ;; This function uses a non-reentrant model
 19857 ;;
 19858                           
 19859  0000'                    _calculate_avg:	
 19860                           ;psect for function _calculate_avg
 19861                           
 19862  0000'                    i1l6887:	
 19863                           ;incstack = 0
 19864                           ; Regs used in _calculate_avg: [wreg-fsr0h+status,2+status,0]
 19865                           
 19866                           
 19867                           ;charger_discharger.c: 383:     switch(count)
 19868  0000' 2800'              	goto	i1l6895
 19869  0001'                    i1l6889:
 19870                           
 19871                           ;charger_discharger.c: 386:             iacum = (uint24_t) i;
 19872  0001' 0800'              	movf	_i^(0+128),w
 19873  0002' 0080'              	movwf	_iacum^(0+128)
 19874  0003' 0800'              	movf	(_i+1)^(0+128),w
 19875  0004' 0080'              	movwf	(_iacum+1)^(0+128)
 19876  0005' 0180'              	clrf	(_iacum+2)^(0+128)
 19877                           
 19878                           ;charger_discharger.c: 387:             vacum = (uint24_t) v;
 19879  0006' 0800'              	movf	_v^(0+128),w
 19880  0007' 0080'              	movwf	_vacum^(0+128)
 19881  0008' 0800'              	movf	(_v+1)^(0+128),w
 19882  0009' 0080'              	movwf	(_vacum+1)^(0+128)
 19883  000A' 0180'              	clrf	(_vacum+2)^(0+128)
 19884                           
 19885                           ;charger_discharger.c: 388:             break;
 19886  000B' 2800'              	goto	i1l415
 19887  000C'                    i1l6891:
 19888                           
 19889                           ;charger_discharger.c: 390:             iavg = ((iacum >> 10) + ((iacum >> 9) & 0x01));
 19890  000C' 0800'              	movf	_iacum^(0+128),w
 19891  000D' 0080'              	movwf	??_calculate_avg
 19892  000E' 0800'              	movf	(_iacum+1)^(0+128),w
 19893  000F' 0081'              	movwf	??_calculate_avg+1
 19894  0010' 0800'              	movf	(_iacum+2)^(0+128),w
 19895  0011' 0082'              	movwf	??_calculate_avg+2
 19896  0012' 3009               	movlw	9
 19897  0013'                    u709_25:
 19898  0013' 3682'              	lsrf	??_calculate_avg+2,f
 19899  0014' 0C81'              	rrf	??_calculate_avg+1,f
 19900  0015' 0C80'              	rrf	??_calculate_avg,f
 19901  0016'                    u709_20:
 19902  0016' 0B89               	decfsz	9,f
 19903  0017' 2800'              	goto	u709_25
 19904  0018' 3001               	movlw	1
 19905  0019' 0500'              	andwf	??_calculate_avg,w
 19906  001A' 0083'              	movwf	??_calculate_avg+3
 19907  001B' 3000               	movlw	0
 19908  001C' 0501'              	andwf	??_calculate_avg+1,w
 19909  001D' 0084'              	movwf	??_calculate_avg+4
 19910  001E' 0800'              	movf	_iacum^(0+128),w
 19911  001F' 0085'              	movwf	??_calculate_avg+5
 19912  0020' 0800'              	movf	(_iacum+1)^(0+128),w
 19913  0021' 0086'              	movwf	??_calculate_avg+6
 19914  0022' 0800'              	movf	(_iacum+2)^(0+128),w
 19915  0023' 0087'              	movwf	??_calculate_avg+7
 19916  0024' 300A               	movlw	10
 19917  0025'                    u710_25:
 19918  0025' 3687'              	lsrf	??_calculate_avg+7,f
 19919  0026' 0C86'              	rrf	??_calculate_avg+6,f
 19920  0027' 0C85'              	rrf	??_calculate_avg+5,f
 19921  0028'                    u710_20:
 19922  0028' 0B89               	decfsz	9,f
 19923  0029' 2800'              	goto	u710_25
 19924  002A' 0803'              	movf	??_calculate_avg+3,w
 19925  002B' 0705'              	addwf	??_calculate_avg+5,w
 19926  002C' 0023               	movlb	3	; select bank3
 19927  002D' 0080'              	movwf	_iavg^(0+384)
 19928  002E' 0804'              	movf	??_calculate_avg+4,w
 19929  002F' 3D06'              	addwfc	??_calculate_avg+6,w
 19930  0030' 0080'              	movwf	(_iavg+1)^(0+384)
 19931                           
 19932                           ;charger_discharger.c: 391:             vavg = ((vacum >> 10) + ((vacum >> 9) & 0x01));
 19933  0031' 0021               	movlb	1	; select bank1
 19934  0032' 0800'              	movf	_vacum^(0+128),w
 19935  0033' 0080'              	movwf	??_calculate_avg
 19936  0034' 0800'              	movf	(_vacum+1)^(0+128),w
 19937  0035' 0081'              	movwf	??_calculate_avg+1
 19938  0036' 0800'              	movf	(_vacum+2)^(0+128),w
 19939  0037' 0082'              	movwf	??_calculate_avg+2
 19940  0038' 3009               	movlw	9
 19941  0039'                    u711_25:
 19942  0039' 3682'              	lsrf	??_calculate_avg+2,f
 19943  003A' 0C81'              	rrf	??_calculate_avg+1,f
 19944  003B' 0C80'              	rrf	??_calculate_avg,f
 19945  003C'                    u711_20:
 19946  003C' 0B89               	decfsz	9,f
 19947  003D' 2800'              	goto	u711_25
 19948  003E' 3001               	movlw	1
 19949  003F' 0500'              	andwf	??_calculate_avg,w
 19950  0040' 0083'              	movwf	??_calculate_avg+3
 19951  0041' 3000               	movlw	0
 19952  0042' 0501'              	andwf	??_calculate_avg+1,w
 19953  0043' 0084'              	movwf	??_calculate_avg+4
 19954  0044' 0800'              	movf	_vacum^(0+128),w
 19955  0045' 0085'              	movwf	??_calculate_avg+5
 19956  0046' 0800'              	movf	(_vacum+1)^(0+128),w
 19957  0047' 0086'              	movwf	??_calculate_avg+6
 19958  0048' 0800'              	movf	(_vacum+2)^(0+128),w
 19959  0049' 0087'              	movwf	??_calculate_avg+7
 19960  004A' 300A               	movlw	10
 19961  004B'                    u712_25:
 19962  004B' 3687'              	lsrf	??_calculate_avg+7,f
 19963  004C' 0C86'              	rrf	??_calculate_avg+6,f
 19964  004D' 0C85'              	rrf	??_calculate_avg+5,f
 19965  004E'                    u712_20:
 19966  004E' 0B89               	decfsz	9,f
 19967  004F' 2800'              	goto	u712_25
 19968  0050' 0803'              	movf	??_calculate_avg+3,w
 19969  0051' 0705'              	addwf	??_calculate_avg+5,w
 19970  0052' 0023               	movlb	3	; select bank3
 19971  0053' 0080'              	movwf	_vavg^(0+384)
 19972  0054' 0804'              	movf	??_calculate_avg+4,w
 19973  0055' 3D06'              	addwfc	??_calculate_avg+6,w
 19974  0056' 0080'              	movwf	(_vavg+1)^(0+384)
 19975                           
 19976                           ;charger_discharger.c: 392:             break;
 19977  0057' 2800'              	goto	i1l415
 19978  0058'                    i1l6893:
 19979                           
 19980                           ;charger_discharger.c: 394:             iacum += (uint24_t) i;
 19981  0058' 0800'              	movf	_i^(0+128),w
 19982  0059' 0080'              	movwf	??_calculate_avg
 19983  005A' 0800'              	movf	(_i+1)^(0+128),w
 19984  005B' 0081'              	movwf	??_calculate_avg+1
 19985  005C' 0182'              	clrf	??_calculate_avg+2
 19986  005D' 0800'              	movf	??_calculate_avg,w
 19987  005E' 0780'              	addwf	_iacum^(0+128),f
 19988  005F' 0801'              	movf	??_calculate_avg+1,w
 19989  0060' 3D80'              	addwfc	(_iacum+1)^(0+128),f
 19990  0061' 0802'              	movf	??_calculate_avg+2,w
 19991  0062' 3D80'              	addwfc	(_iacum+2)^(0+128),f
 19992                           
 19993                           ;charger_discharger.c: 395:             vacum += (uint24_t) v;
 19994  0063' 0800'              	movf	_v^(0+128),w
 19995  0064' 0080'              	movwf	??_calculate_avg
 19996  0065' 0800'              	movf	(_v+1)^(0+128),w
 19997  0066' 0081'              	movwf	??_calculate_avg+1
 19998  0067' 0182'              	clrf	??_calculate_avg+2
 19999  0068' 0800'              	movf	??_calculate_avg,w
 20000  0069' 0780'              	addwf	_vacum^(0+128),f
 20001  006A' 0801'              	movf	??_calculate_avg+1,w
 20002  006B' 3D80'              	addwfc	(_vacum+1)^(0+128),f
 20003  006C' 0802'              	movf	??_calculate_avg+2,w
 20004  006D' 3D80'              	addwfc	(_vacum+2)^(0+128),f
 20005                           
 20006                           ;charger_discharger.c: 396:     }
 20007  006E' 2800'              	goto	i1l415
 20008  006F'                    i1l6895:
 20009                           
 20010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 20011                           ; Switch size 1, requested type "simple"
 20012                           ; Number of cases is 2, Range of values is 0 to 4
 20013                           ; switch strategies available:
 20014                           ; Name         Instructions Cycles
 20015                           ; simple_byte            7     4 (average)
 20016                           ; direct_byte           16     6 (fixed)
 20017                           ; jumptable            260     6 (fixed)
 20018                           ;	Chosen strategy is simple_byte
 20019  006F' 0021               	movlb	1	; select bank1
 20020  0070' 0800'              	movf	(_count+1)^(0+128),w
 20021  0071' 3A00               	xorlw	0	; case 0
 20022  0072' 1903               	skipnz
 20023  0073' 2800'              	goto	i1l7771
 20024  0074' 3A04               	xorlw	4	; case 4
 20025  0075' 1903               	skipnz
 20026  0076' 2800'              	goto	i1l7773
 20027  0077' 2800'              	goto	i1l6893
 20028  0078'                    i1l7771:
 20029                           
 20030                           ; Switch size 1, requested type "simple"
 20031                           ; Number of cases is 1, Range of values is 0 to 0
 20032                           ; switch strategies available:
 20033                           ; Name         Instructions Cycles
 20034                           ; simple_byte            4     3 (average)
 20035                           ; direct_byte            8     6 (fixed)
 20036                           ; jumptable            260     6 (fixed)
 20037                           ;	Chosen strategy is simple_byte
 20038  0078' 0800'              	movf	_count^(0+128),w
 20039  0079' 3A00               	xorlw	0	; case 0
 20040  007A' 1903               	skipnz
 20041  007B' 2800'              	goto	i1l6891
 20042  007C' 2800'              	goto	i1l6893
 20043  007D'                    i1l7773:
 20044                           
 20045                           ; Switch size 1, requested type "simple"
 20046                           ; Number of cases is 1, Range of values is 0 to 0
 20047                           ; switch strategies available:
 20048                           ; Name         Instructions Cycles
 20049                           ; simple_byte            4     3 (average)
 20050                           ; direct_byte            8     6 (fixed)
 20051                           ; jumptable            260     6 (fixed)
 20052                           ;	Chosen strategy is simple_byte
 20053  007D' 0800'              	movf	_count^(0+128),w
 20054  007E' 3A00               	xorlw	0	; case 0
 20055  007F' 1903               	skipnz
 20056  0080' 2800'              	goto	i1l6889
 20057  0081' 2800'              	goto	i1l6893
 20058  0082'                    i1l415:
 20059  0082' 0008               	return
 20060  0083'                    __end_of_calculate_avg:
 20061                           
 20062                           	psect	text55
 20063  0000'                    __ptext55:	
 20064 ;; *************** function _abs *****************
 20065 ;; Defined at:
 20066 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
 20067 ;; Parameters:    Size  Location     Type
 20068 ;;  a               2    0[COMMON] int 
 20069 ;; Auto vars:     Size  Location     Type
 20070 ;;		None
 20071 ;; Return value:  Size  Location     Type
 20072 ;;                  2    0[COMMON] int 
 20073 ;; Registers used:
 20074 ;;		wreg, status,2, status,0
 20075 ;; Tracked objects:
 20076 ;;		On entry : 0/0
 20077 ;;		On exit  : 0/0
 20078 ;;		Unchanged: 0/0
 20079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20082 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20083 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20084 ;;Total ram usage:        4 bytes
 20085 ;; Hardware stack levels used: 1
 20086 ;; This function calls:
 20087 ;;		Nothing
 20088 ;; This function is called by:
 20089 ;;		_ISR
 20090 ;; This function uses a non-reentrant model
 20091 ;;
 20092                           
 20093  0000'                    _abs:	
 20094                           ;psect for function _abs
 20095                           
 20096  0000'                    i1l6951:	
 20097                           ;incstack = 0
 20098                           ; Regs used in _abs: [wreg+status,2+status,0]
 20099                           
 20100  0000' 0801'              	movf	abs@a+1,w
 20101  0001' 3A80               	xorlw	128
 20102  0002' 0082'              	movwf	??_abs
 20103  0003' 3080               	movlw	128
 20104  0004' 0202'              	subwf	??_abs,w
 20105  0005' 1D03               	skipz
 20106  0006' 2800'              	goto	u715_25
 20107  0007' 3001               	movlw	1
 20108  0008' 0200'              	subwf	abs@a,w
 20109  0009'                    u715_25:
 20110  0009' 1803               	skipnc
 20111  000A' 2800'              	goto	u715_21
 20112  000B' 2800'              	goto	u715_20
 20113  000C'                    u715_21:
 20114  000C' 2800'              	goto	i1l1506
 20115  000D'                    u715_20:
 20116  000D'                    i1l6953:
 20117  000D' 0900'              	comf	abs@a,w
 20118  000E' 0082'              	movwf	??_abs
 20119  000F' 0901'              	comf	abs@a+1,w
 20120  0010' 0083'              	movwf	??_abs+1
 20121  0011' 0A82'              	incf	??_abs,f
 20122  0012' 1903               	skipnz
 20123  0013' 0A83'              	incf	??_abs+1,f
 20124  0014' 0802'              	movf	??_abs,w
 20125  0015' 0080'              	movwf	?_abs
 20126  0016' 0803'              	movf	??_abs+1,w
 20127  0017' 0081'              	movwf	?_abs+1
 20128  0018' 2800'              	goto	i1l1509
 20129  0019'                    i1l1506:
 20130  0019'                    i1l1509:
 20131  0019' 0008               	return
 20132  001A'                    __end_of_abs:
 20133                           
 20134                           	psect	text56
 20135  0000'                    __ptext56:	
 20136 ;; *************** function _UART_send_string *****************
 20137 ;; Defined at:
 20138 ;;		line 499 in file "charger_discharger.c"
 20139 ;; Parameters:    Size  Location     Type
 20140 ;;  st_pt           2    1[COMMON] PTR unsigned char 
 20141 ;;		 -> STR_2(13), STR_1(11), 
 20142 ;; Auto vars:     Size  Location     Type
 20143 ;;		None
 20144 ;; Return value:  Size  Location     Type
 20145 ;;                  1    wreg      void 
 20146 ;; Registers used:
 20147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 20148 ;; Tracked objects:
 20149 ;;		On entry : 0/0
 20150 ;;		On exit  : 0/0
 20151 ;;		Unchanged: 0/0
 20152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20156 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20157 ;;Total ram usage:        3 bytes
 20158 ;; Hardware stack levels used: 1
 20159 ;; Hardware stack levels required when called: 1
 20160 ;; This function calls:
 20161 ;;		_UART_send_char
 20162 ;; This function is called by:
 20163 ;;		_ISR
 20164 ;; This function uses a non-reentrant model
 20165 ;;
 20166                           
 20167  0000'                    _UART_send_string:	
 20168                           ;psect for function _UART_send_string
 20169                           
 20170  0000'                    i1l6917:	
 20171                           ;incstack = 0
 20172                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 20173                           
 20174                           
 20175                           ;charger_discharger.c: 499: void UART_send_string(char* st_pt);charger_discharger.c: 500
      +                          : {;charger_discharger.c: 501:     while(*st_pt)
 20176  0000' 2800'              	goto	i1l6923
 20177  0001'                    i1l6919:
 20178                           
 20179                           ;charger_discharger.c: 502:         UART_send_char(*st_pt++);
 20180  0001' 0801'              	movf	UART_send_string@st_pt,w
 20181  0002' 0084               	movwf	4
 20182  0003' 0802'              	movf	UART_send_string@st_pt+1,w
 20183  0004' 0085               	movwf	5
 20184  0005' 0800               	movf	0,w	;code access
 20185  0006' 3180' 2000' 3180'  	fcall	_UART_send_char
 20186  0009'                    i1l6921:
 20187  0009' 3001               	movlw	1
 20188  000A' 0781'              	addwf	UART_send_string@st_pt,f
 20189  000B' 3000               	movlw	0
 20190  000C' 3D82'              	addwfc	UART_send_string@st_pt+1,f
 20191  000D'                    i1l6923:
 20192                           
 20193                           ;charger_discharger.c: 501:     while(*st_pt)
 20194  000D' 0801'              	movf	UART_send_string@st_pt,w
 20195  000E' 0084               	movwf	4
 20196  000F' 0802'              	movf	UART_send_string@st_pt+1,w
 20197  0010' 0085               	movwf	5
 20198  0011' 0012               	moviw fsr0++
 20199  0012' 1D03               	btfss	3,2
 20200  0013' 2800'              	goto	u714_21
 20201  0014' 2800'              	goto	u714_20
 20202  0015'                    u714_21:
 20203  0015' 2800'              	goto	i1l6919
 20204  0016'                    u714_20:
 20205  0016'                    i1l474:
 20206  0016' 0008               	return
 20207  0017'                    __end_of_UART_send_string:
 20208                           
 20209                           	psect	text57
 20210  0000'                    __ptext57:	
 20211 ;; *************** function _UART_send_char *****************
 20212 ;; Defined at:
 20213 ;;		line 419 in file "charger_discharger.c"
 20214 ;; Parameters:    Size  Location     Type
 20215 ;;  bt              1    wreg     unsigned char 
 20216 ;; Auto vars:     Size  Location     Type
 20217 ;;  bt              1    0[COMMON] unsigned char 
 20218 ;; Return value:  Size  Location     Type
 20219 ;;                  1    wreg      void 
 20220 ;; Registers used:
 20221 ;;		wreg
 20222 ;; Tracked objects:
 20223 ;;		On entry : 0/0
 20224 ;;		On exit  : 0/0
 20225 ;;		Unchanged: 0/0
 20226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20230 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20231 ;;Total ram usage:        1 bytes
 20232 ;; Hardware stack levels used: 1
 20233 ;; This function calls:
 20234 ;;		Nothing
 20235 ;; This function is called by:
 20236 ;;		_UART_send_string
 20237 ;; This function uses a non-reentrant model
 20238 ;;
 20239                           
 20240  0000'                    _UART_send_char:	
 20241                           ;psect for function _UART_send_char
 20242                           
 20243                           
 20244                           ;incstack = 0
 20245                           ; Regs used in _UART_send_char: [wreg]
 20246                           ;UART_send_char@bt stored from wreg
 20247  0000' 0080'              	movwf	UART_send_char@bt
 20248  0001'                    i1l5987:
 20249  0001'                    i1l424:	
 20250                           ;charger_discharger.c: 422:     {;charger_discharger.c: 423:     }
 20251                           
 20252                           
 20253                           ;charger_discharger.c: 421:     while(0 == TXIF)
 20254  0001' 0020               	movlb	0	; select bank0
 20255  0002' 1E11               	btfss	17,4	;volatile
 20256  0003' 2800'              	goto	u653_21
 20257  0004' 2800'              	goto	u653_20
 20258  0005'                    u653_21:
 20259  0005' 2800'              	goto	i1l424
 20260  0006'                    u653_20:
 20261  0006'                    i1l5989:
 20262                           
 20263                           ;charger_discharger.c: 424:     TX1REG = bt;
 20264  0006' 0800'              	movf	UART_send_char@bt,w
 20265  0007' 0023               	movlb	3	; select bank3
 20266  0008' 009A               	movwf	26	;volatile
 20267  0009'                    i1l427:
 20268  0009' 0008               	return
 20269  000A'                    __end_of_UART_send_char:
 20270  007E                     btemp	set	126	;btemp
 20271  007E                     int$flags	set	126
 20272  007E                     wtemp0	set	126
 20273                           
 20274                           	psect	idloc
 20275                           
 20276                           ;Config register IDLOC0 @ 0x8000
 20277                           ;	unspecified, using default values
 20278  8000                     	org	32768
 20279  8000  3FFF               	dw	16383
 20280                           
 20281                           ;Config register IDLOC1 @ 0x8001
 20282                           ;	unspecified, using default values
 20283  8001                     	org	32769
 20284  8001  3FFF               	dw	16383
 20285                           
 20286                           ;Config register IDLOC2 @ 0x8002
 20287                           ;	unspecified, using default values
 20288  8002                     	org	32770
 20289  8002  3FFF               	dw	16383
 20290                           
 20291                           ;Config register IDLOC3 @ 0x8003
 20292                           ;	unspecified, using default values
 20293  8003                     	org	32771
 20294  8003  3FFF               	dw	16383
 20295                           
 20296                           	psect	config
 20297                           
 20298                           ;Config register CONFIG1 @ 0x8007
 20299                           ;	Oscillator Selection
 20300                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 20301                           ;	Watchdog Timer Enable
 20302                           ;	WDTE = OFF, WDT disabled
 20303                           ;	Power-up Timer Enable
 20304                           ;	PWRTE = OFF, PWRT disabled
 20305                           ;	MCLR Pin Function Select
 20306                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 20307                           ;	Flash Program Memory Code Protection
 20308                           ;	CP = OFF, Program memory code protection is disabled
 20309                           ;	Data Memory Code Protection
 20310                           ;	CPD = OFF, Data memory code protection is disabled
 20311                           ;	Brown-out Reset Enable
 20312                           ;	BOREN = OFF, Brown-out Reset disabled
 20313                           ;	Clock Out Enable
 20314                           ;	CLKOUTEN = ON, CLKOUT function is enabled on the CLKOUT pin
 20315                           ;	Internal/External Switchover
 20316                           ;	IESO = ON, Internal/External Switchover mode is enabled
 20317                           ;	Fail-Safe Clock Monitor Enable
 20318                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 20319  8007                     	org	32775
 20320  8007  31E4               	dw	12772
 20321                           
 20322                           ;Config register CONFIG2 @ 0x8008
 20323                           ;	Flash Memory Self-Write Protection
 20324                           ;	WRT = OFF, Write protection off
 20325                           ;	Voltage Regulator Capacitor Enable bit
 20326                           ;	VCAPEN = OFF, Vcap functionality is disabled on RA6.
 20327                           ;	PLL Enable
 20328                           ;	PLLEN = OFF, 4x PLL disabled
 20329                           ;	Stack Overflow/Underflow Reset Enable
 20330                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 20331                           ;	Brown-out Reset Voltage Selection
 20332                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 20333                           ;	Low Power Brown-Out Reset Enable Bit
 20334                           ;	LPBOR = OFF, Low power brown-out is disabled
 20335                           ;	Low-Voltage Programming Enable
 20336                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 20337  8008                     	org	32776
 20338  8008  1EFF               	dw	7935

Data Sizes:
    Strings     24
    Constant    0
    Data        34
    BSS         165
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     53      80
    BANK2            80     80      80
    BANK3            80     29      80
    BANK4            80      0      72
    BANK5            80      0      49
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    UART_send_string@st_pt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[11]), 

    put_data_into_structure@data	PTR unsigned char  size(1) Largest target is 20
		 -> command_interpreter@data(BANK1[20]), 

    put_data_into_structure@structure	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), converter_configuration(BANK5[14]), test_configuration(BANK4[17]), basic_configuration(BANK4[17]), 

    calculate_checksum@data	PTR unsigned char  size(2) Largest target is 20
		 -> NULL(NULL[0]), converter_configuration(BANK5[14]), test_configuration(BANK4[17]), basic_configuration(BANK4[17]), 
		 -> command_interpreter@data(BANK1[20]), 

    UART_send_some_bytes@data	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), log_data(BANK5[15]), converter_configuration(BANK5[14]), test_configuration(BANK4[17]), 
		 -> basic_configuration(BANK4[17]), command_interpreter@calc_checksum(BANK1[2]), 

    UART_get_some_bytes@data	PTR unsigned char  size(1) Largest target is 20
		 -> command_interpreter@data(BANK1[20]), 

    log_data_ptr	PTR struct log_data_struct size(1) Largest target is 15
		 -> NULL(NULL[0]), log_data(BANK5[15]), 

    converter_configuration_ptr	PTR struct converter_configuration_struct size(1) Largest target is 14
		 -> NULL(NULL[0]), converter_configuration(BANK5[14]), 

    test_configuration_ptr	PTR struct test_configuration_struct size(1) Largest target is 17
		 -> NULL(NULL[0]), test_configuration(BANK4[17]), 

    basic_configuration_ptr	PTR struct basic_configuration_struct size(1) Largest target is 17
		 -> NULL(NULL[0]), basic_configuration(BANK4[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _control_loop->i1___xxtofl
    _pid->i1___xxtofl
    _command_interpreter->i1___xxtofl
    i1_converter_settings->i1___xxtofl
    i1___fltol->i1___xxtofl
    i1___flmul->i1___xxtofl
    i1___fldiv->i1___xxtofl
    i1___fladd->i1___xxtofl
    i1_UART_send_some_bytes->i1_UART_send_byte
    _UART_send_header->i1_UART_send_byte
    _UART_send_string->_UART_send_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _pid->i1___flmul
    ___flsub->i1___fladd
    _command_interpreter->i1___fldiv
    i1_converter_settings->i1___fldiv
    i1___fltol->i1___fldiv
    i1___flmul->___flsub
    i1___fldiv->i1___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    _ISR->_command_interpreter
    _control_loop->i1_set_DC
    _command_interpreter->i1_converter_settings
    i1_converter_settings->i1_set_DC
    i1_set_DC->i1___fltol

Critical Paths under _main in BANK2

    _converter_settings->___fltol
    _fDISCHARGE->___fltol
    _fDC_res->___fltol
    ___flge->___xxtofl
    _scaling->___fltol
    _log_control->___fltol
    _UART_send_some_bytes->_UART_send_byte
    _set_DC->___fltol
    _cc_cv_mode->___fltol
    ___fltol->___fladd
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    ___fladd->___flmul

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_state_machine
    _state_machine->_fDC_res
    _fNEXTSTATE->_converter_settings
    _fNEXTCELL->_converter_settings
    _fNEXTREPETITION->_converter_settings
    _converter_settings->_set_DC
    _fIDLE->_set_DC
    _fDISCHARGE->_set_DC
    _fDC_res->_set_DC
    _fCHARGE->_set_DC
    _scaling->___fltol
    _log_control->___fltol
    _initialize->_set_DC
    _set_DC->___fltol
    _cc_cv_mode->___fltol
    ___fltol->___fladd

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  168617
                                             28 BANK3      1     1      0
                         _cc_cv_mode
                         _initialize
                   _interrupt_enable
                        _log_control
                            _scaling
                      _state_machine
 ---------------------------------------------------------------------------------
 (1) _state_machine                                        2     2      0  120732
                                             26 BANK3      2     2      0
                            _fCHARGE
                            _fDC_res
                         _fDISCHARGE
                              _fIDLE
                              _fWAIT
 ---------------------------------------------------------------------------------
 (2) _fWAIT                                                0     0      0   67828
                           _Cell_OFF
                         _fNEXTSTATE
                             _set_DC
 ---------------------------------------------------------------------------------
 (3) _fNEXTSTATE                                           0     0      0   66162
                 _converter_settings
                          _fNEXTCELL
 ---------------------------------------------------------------------------------
 (4) _fNEXTCELL                                            0     0      0   44108
                 _converter_settings
                    _fNEXTREPETITION
 ---------------------------------------------------------------------------------
 (5) _fNEXTREPETITION                                      0     0      0   22054
                 _converter_settings
 ---------------------------------------------------------------------------------
 (6) _converter_settings                                   8     8      0   22054
                                             18 BANK3      8     8      0
                            _Cell_ON
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _set_DC
 ---------------------------------------------------------------------------------
 (7) _Cell_ON                                              1     1      0       0
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (2) _fIDLE                                                0     0      0    1666
                           _Cell_OFF
                             _set_DC
 ---------------------------------------------------------------------------------
 (2) _fDISCHARGE                                           2     2      0   23175
                                             18 BANK3      2     2      0
                           _Cell_OFF
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _getTime
                             _set_DC
 ---------------------------------------------------------------------------------
 (2) _fDC_res                                              8     8      0   22031
                                             18 BANK3      8     8      0
                           _Cell_OFF
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _getTime
                             _set_DC
 ---------------------------------------------------------------------------------
 (2) _fCHARGE                                              2     2      0    6032
                                             18 BANK3      2     2      0
                           _Cell_OFF
                             ___flge
                           ___xxtofl
                            _getTime
                             _set_DC
 ---------------------------------------------------------------------------------
 (3) _getTime                                              2     2      0       0
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1190
                                             14 BANK2     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _scaling                                              8     8      0   20388
                                             16 BANK3      8     8      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _log_control                                          0     0      0    2040
                     _UART_send_byte
               _UART_send_some_bytes
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) _UART_send_some_bytes                                 3     1      2     397
                                              1 BANK2      3     1      2
                     _UART_send_byte
 ---------------------------------------------------------------------------------
 (3) _UART_send_byte                                       1     1      0      22
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _interrupt_enable                                     1     1      0       2
 ---------------------------------------------------------------------------------
 (1) _initialize                                           4     4      0    4842
                                             18 BANK3      4     4      0
                           _Cell_OFF
                           ___xxtofl
                             _set_DC
 ---------------------------------------------------------------------------------
 (3) _set_DC                                               2     2      0    1666
                                             16 BANK3      2     2      0
                            ___fltol
 ---------------------------------------------------------------------------------
 (3) _Cell_OFF                                             1     1      0       0
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           5     0      5   20613
                                             16 BANK3      5     0      5
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___xxtofl                                            14    10      4    3176
                                              0 BANK2     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4    1621
                                             78 BANK2      2     2      0
                                              8 BANK3      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    6209
                                             40 BANK2     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              0 BANK2      9     7      2
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    4553
                                             14 BANK2     26    18      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    4760
                                             66 BANK2     12     4      8
                                              0 BANK3      8     8      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  2     2      0   32127
                                             51 BANK1      2     2      0
                   _UART_send_string
                                _abs
                      _calculate_avg
                _command_interpreter
                       _control_loop
                           _read_ADC
                             _timing
                   i1_UART_send_byte
 ---------------------------------------------------------------------------------
 (10) _timing                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _read_ADC                                           11     9      2     198
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (10) _control_loop                                        0     0      0   10591
                                _pid
                         i1___xxtofl
                           i1_set_DC
 ---------------------------------------------------------------------------------
 (11) _pid                                                20    12      8    9059
                                             54 BANK0     20    12      8
                            ___flsub
                          i1___fladd
                           i1___flge
                          i1___flmul
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (12) i1___flge                                           12     4      8     390
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (12) ___flsub                                             8     0      8    3057
                                             20 BANK0      8     0      8
                          i1___fladd
 ---------------------------------------------------------------------------------
 (10) _command_interpreter                                31    31      0   20955
                                             20 BANK1     31    31      0
                      _UART_get_byte
                _UART_get_some_bytes
                   _UART_send_header
                 _calculate_checksum
            _put_data_into_structure
                   i1_UART_send_byte
             i1_UART_send_some_bytes
                          i1___fladd
                          i1___fldiv
                          i1___flmul
                          i1___fltol
                         i1___xxtofl
               i1_converter_settings
                          i1_getTime
 ---------------------------------------------------------------------------------
 (11) i1_getTime                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) i1_converter_settings                                8     8      0    9168
                                             12 BANK1      8     8      0
                          i1_Cell_ON
                          i1___fladd
                          i1___fldiv
                          i1___flmul
                          i1___fltol
                         i1___xxtofl
                           i1_set_DC
 ---------------------------------------------------------------------------------
 (11) i1_set_DC                                            2     2      0     508
                                             10 BANK1      2     2      0
                          i1___fltol
 ---------------------------------------------------------------------------------
 (12) i1___fltol                                          10     6      4     463
                                              0 BANK1     10     6      4
                          i1___fladd (ARG)
                          i1___fldiv (ARG)
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (11) i1___xxtofl                                         14    10      4    1024
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (12) i1___flmul                                          26    18      8    2595
                                             28 BANK0     26    18      8
                            ___flsub (ARG)
                        i1__Umul8_16
                          i1___fladd (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) i1__Umul8_16                                         9     7      2     349
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (12) i1___fldiv                                          26    18      8    1953
                                             54 BANK0     26    18      8
                          i1___fladd (ARG)
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (12) i1___fladd                                          20    12      8    2556
                                              0 BANK0     20    12      8
                        i1__Umul8_16 (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (12) i1_Cell_ON                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) i1_UART_send_some_bytes                              3     1      2     227
                                              1 COMMON     3     1      2
                   i1_UART_send_byte
 ---------------------------------------------------------------------------------
 (11) _put_data_into_structure                             4     2      2     524
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (11) _calculate_checksum                                  8     5      3     887
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (11) _UART_send_header                                    3     1      2     240
                                              1 COMMON     3     1      2
                   i1_UART_send_byte
 ---------------------------------------------------------------------------------
 (10) i1_UART_send_byte                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _UART_get_some_bytes                                 3     2      1     121
                                              0 COMMON     3     2      1
                      _UART_get_byte
 ---------------------------------------------------------------------------------
 (12) _UART_get_byte                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _calculate_avg                                       8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (10) _abs                                                 4     2      2     142
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _UART_send_string                                    3     1      2     219
                                              1 COMMON     3     1      2
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (11) _UART_send_char                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cc_cv_mode
     ___fladd
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _initialize
     _Cell_OFF
     ___xxtofl
     _set_DC
       ___fltol
   _interrupt_enable
   _log_control
     _UART_send_byte
     _UART_send_some_bytes
       _UART_send_byte
     ___fltol
   _scaling
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
   _state_machine
     _fCHARGE
       _Cell_OFF
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
       _getTime
       _set_DC
     _fDC_res
       _Cell_OFF
       ___fladd
       ___fldiv
       ___flmul
       ___fltol
       ___xxtofl
       _getTime
       _set_DC
     _fDISCHARGE
       _Cell_OFF
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___fltol
       ___xxtofl
       _getTime
       _set_DC
     _fIDLE
       _Cell_OFF
       _set_DC
     _fWAIT
       _Cell_OFF
       _fNEXTSTATE
         _converter_settings
           _Cell_ON
           ___fladd
           ___fldiv
           ___flmul
           ___fltol
           ___xxtofl
           _set_DC
         _fNEXTCELL
           _converter_settings
           _fNEXTREPETITION
             _converter_settings
       _set_DC

 _ISR (ROOT)
   _UART_send_string
     _UART_send_char
   _abs
   _calculate_avg
   _command_interpreter
     _UART_get_byte
     _UART_get_some_bytes
       _UART_get_byte
     _UART_send_header
       i1_UART_send_byte
     _calculate_checksum
     _put_data_into_structure
     i1_UART_send_byte
     i1_UART_send_some_bytes
       i1_UART_send_byte
     i1___fladd
       i1__Umul8_16 (ARG)
       i1___xxtofl (ARG)
     i1___fldiv
       i1___fladd (ARG)
       i1___flmul (ARG)
         ___flsub (ARG)
           i1___fladd
         i1__Umul8_16 (ARG)
         i1___fladd (ARG)
         i1___xxtofl (ARG)
       i1___xxtofl (ARG)
     i1___flmul
     i1___fltol
       i1___fladd (ARG)
       i1___fldiv (ARG)
       i1___flmul (ARG)
       i1___xxtofl (ARG)
     i1___xxtofl
     i1_converter_settings
       i1_Cell_ON
       i1___fladd
       i1___fldiv
       i1___flmul
       i1___fltol
       i1___xxtofl
       i1_set_DC
         i1___fltol
     i1_getTime
   _control_loop
     _pid
       ___flsub
       i1___fladd
       i1___flge
       i1___flmul
       i1___xxtofl (ARG)
     i1___xxtofl
     i1_set_DC
   _read_ADC
   _timing
   i1_UART_send_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     35      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     1D      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      48      13       90.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      31      15       61.3%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1C7      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1C7      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Oct 17 14:39:48 2024

   put_data_into_structure@length 0003                      ___fldiv@aexp 0027                      ___fldiv@bexp 0026  
                               _i 000C                                 _v 000E                       i1___fladd@a 0004  
                     i1___fladd@b 0000                      ___fldiv@sign 001F                       i1___fldiv@a 0036  
                     i1___fldiv@b 003A                                _kd 0004                                _er 0000  
                     i1___flmul@a 0020                                _ki 0008                       i1___flmul@b 001C  
                              _kp 000C                      i1___flge@ff1 0000                      i1___flge@ff2 0004  
             __Umul8_16@word_mpld 0006                        i1___xxtofl 0000                               l331 013D  
                             l420 0008                               l421 0015                               l450 000B  
                             l382 001A                               l447 0002                               l391 01E7  
                             l456 0017                               l480 00AD                               l386 0091  
                             l491 002E                               l396 0048                               l484 00AD  
                             l822 001E                               l487 002C                               l841 013C  
                             l818 0035                               l836 013C                               l854 01CF  
                             l863 0254                               l849 01CF                               l881 001B  
                             l873 0025                               l883 001D                               l868 002E  
                             l878 001D                               l896 05ED                               _GIE 005F  
                             _RB2 006A                               _RB3 006B                               _RB4 006C  
                             _RC3 0073                               _RB5 006D                               _RC4 0074  
                             _RC5 0075                               _ISR 0000                               _RX9 0CEE  
                             _TX9 0CF6                               _abs 0000                               _pid 0000  
                    i1___fltol@f1 0000           _basic_configuration_ptr 0017                               wreg 0009  
                   i1___fladd@grs 0013                      ___flmul@aexp 003A                      ___flmul@bexp 003B  
                    ___flmul@sign 0035                      ___flmul@temp 0040                      ___flmul@prod 003C  
                 _fNEXTREPETITION 0000                              ?_ISR 0000                     i1___fldiv@grs 004A  
                   i1___fldiv@rem 0043                      ___fltol@exp1 004F                              ?_abs 0000  
                            l1240 007B                              l1232 008A                              l1224 001D  
                            l1250 007B                              l1403 0051                              l1227 0071  
                            l1500 0076                              l1405 01A9                              l1501 0082  
                            l1351 00DC                              l1247 0065                              l1360 023C  
                            l1424 017B                              l1353 00B6                              l1425 0195  
                            l1347 0056                              l1427 01A2                              l1419 012F  
                            l1443 023A                              l1372 01A8                              l1381 0211  
                            l1390 023C                              l1462 0013                              l1455 022E  
                            l1368 0186                              l1464 0023                              l1449 01BA  
                            l5001 00A1                              l1378 01CA                              l5003 00A2  
                            l5011 0015                              l1389 0235                              l1493 005C  
                            l5101 03BE                              l5021 002D                              l5013 0017  
                            l1487 0023                              l5111 03DB                              l5103 03BF  
                            l5031 00CA                              l5023 0034                              l5015 001F  
                            l5007 0000                              l1489 00AA                              l6001 0016  
                            l5121 043E                              l5113 03E7                              l5105 03CB  
                            l5041 00E8                              l5033 00CC                              l5025 00BB  
                            l5017 0022                              l5009 0003                              l6011 0074  
                            l6003 0019                              l5131 053B                              l5123 0447  
                            l5115 03E9                              l5107 03CD                              l5051 014D  
                            l5043 00F4                              l5035 00D8                              l5027 00BD  
                            l5019 0026                              l4501 0015                              l4421 0004  
                            l4413 005A                              l4405 0041                              l6101 004F  
                            l6021 0085                              l6013 0076                              l6005 001C  
                            l5141 0558                              l5133 053C                              l5125 04AB  
                            l5117 03F5                              l5109 03D9                              l5061 01A6  
                            l5053 014F                              l5045 0104                              l5037 00DA  
                            l5029 00BE                              l4511 002B                              l4503 001D  
                            l4423 000B                              l4415 006A                              l4407 0053  
                            l6103 0051                              l6111 0062                              l6031 009D  
                            l6023 0087                              l6015 0080                              l6007 0000  
                            l5151 05BB                              l5143 0564                              l5135 0548  
                            l5127 04B2                              l5119 0405                              l5071 0241  
                            l5063 01CF                              l5055 015C                              l5047 013D  
                            l5039 00E6                              l4601 0102                              l4521 0039  
                            l4513 0031                              l4505 001E                              l4425 000F  
                            l4417 006F                              l4433 0000                              l6121 00AC  
                            l6113 0069                              l6105 0053                              l6201 01C5  
                            l6041 00EA                              l6033 00A3                              l6025 0090  
                            l6017 0082                              l6009 006B                              l4441 0000  
                            l5161 05EA                              l5145 0566                              l5137 054A  
                            l5129 0539                              l5081 025E                              l5073 0242  
                            l5065 01D8                              l5057 016A                              l5049 0146  
                            l4603 0104                              l4611 011A                              l4523 003E  
                            l4531 004E                              l4515 0032                              l4507 0020  
                            l4427 001A                              l4419 0002                              l4435 0011  
                            l6131 00BD                              l6123 00B6                              l6115 006F  
                            l6107 005C                              l6211 0236                              l6203 0229  
                            l6051 00FA                              l6043 00EC                              l6035 00D7  
                            l6027 0093                              l6019 0083                              l4451 0027  
                            l4443 0006                              l5147 0572                              l5139 0556  
                            l5091 0298                              l5083 026A                              l5075 024E  
                            l5067 023C                              l5059 0178                              l5155 05C4  
                            l5171 000A                              l4613 0134                              l4621 017E  
                            l4605 0108                              l4541 006A                              l4533 005C  
                            l4525 0043                              l4517 0034                              l4509 0028  
                            l4701 0020                              l4429 001F                              l4437 0014  
                            l5501 0055                              l6141 00E0                              l6133 00C6  
                            l6125 00B8                              l6117 00A3                              l6109 005F  
                            l6213 023F                              l6205 022F                              l6221 0252  
                            l6061 01A6                              l6053 00FD                              l6045 00ED  
                            l6037 00DE                              l6029 0096                              l4445 0008  
                            l4453 0033                              l5149 0582                              l5093 02CA  
                            l5085 026C                              l5077 0250                              l5069 023F  
                            l5157 05DE                              l5173 0012                              l5181 0002  
                            l4631 01A3                              l4623 018E                              l4615 0168  
                            l4607 0109                              l4551 0074                              l4543 006C  
                            l4535 0060                              l4527 004B                              l4519 0038  
                            l4711 0034                              l4703 0028                              l4391 0028  
                            l4383 0000                              l4439 0019                              l5503 0059  
                            l6151 012D                              l6143 0113                              l6135 00C9  
                            l6127 00B9                              l6119 00AA                              l6215 0242  
                            l6207 0232                              l6071 01C1                              l6063 01B1  
                            l6047 00EF                              l6039 00E0                              l6055 0101  
                            l4471 0061                              l4455 0039                              l4447 0011  
                            l5159 05E7                              l5095 032E                              l5087 0278  
                            l5079 025C                              l5175 0014                              l5167 0000  
                            l5183 000A                              l6231 0010                              l6223 0000  
                            l4641 01B6                              l4633 01A7                              l4625 0193  
                            l4617 0170                              l4609 0114                              l4561 007E  
                            l4553 0076                              l4545 006E                              l4537 0066  
                            l4529 004C                              l4801 015D                              l4713 0039  
                            l4721 0049                              l4705 002D                              l4393 002A  
                            l4385 000B                              l5441 0016                              l5505 0087  
                            l6153 012E                              l6145 011E                              l6129 00BB  
                            l6137 00CD                              l6081 0000                              l6217 0245  
                            l6209 0234                              l6073 01C3                              l6065 01B4  
                            l6057 0107                              l6049 00F1                              l4481 0082  
                            l4473 006C                              l4457 003B                              l4465 0050  
                            l4449 001C                              l5097 0335                              l5089 0288  
                            l5177 0017                              l5169 0008                              l5185 0013  
                            l6241 0025                              l6233 0013                              l6225 0003  
                            l4651 01C7                              l4635 01AC                              l4643 01B8  
                            l4619 0175                              l4571 009F                              l4563 0080  
                            l4555 0078                              l4547 0070                              l4539 0068  
                            l4491 0004                              l4811 0194                              l4803 0161  
                            l4723 0059                              l4731 0072                              l4715 003E  
                            l4707 002F                              l4395 0032                              l5443 0021  
                            l5435 0000                              l5507 0089                              l6155 0130  
                            l6147 0121                              l6139 00D3                              l6091 0036  
                            l6083 000E                              l6219 024F                              l6171 009F  
                            l6163 0000                              l6075 01C5                              l6067 01BE  
                            l6059 0172                              l4483 008B                              l4475 0077  
                            l4467 0056                              l4459 0044                              l5099 03BC  
                            l5187 0016                              l5179 0000                              l6243 002B  
                            l6235 0016                              l6227 0005                              l4661 01E0  
                            l4637 01AF                              l4629 019C                              l4645 01BC  
                            l4581 00C5                              l4573 00BA                              l4565 0082  
                            l4557 007A                              l4549 0072                              l4493 0006  
                            l4813 0198                              l4805 016E                              l4741 0098  
                            l4733 0077                              l4725 0065                              l4717 0046  
                            l4709 0033                              l4901 0144                              l4397 0035  
                            l4389 0015                              l5437 0002                              l6501 0040  
                            l5453 0002                              l5461 0020                              l6157 0132  
                            l6149 012B                              l6093 0040                              l6085 0014  
                            l6181 0143                              l6173 00A6                              l6165 0007  
                            l6069 01C0                              l4485 0096                              l4469 0058  
                            l4477 007A                              l5189 001A                              l6237 001B  
                            l6229 0007                              l4671 0228                              l4663 020B  
                            l4655 01CF                              l4647 01BD                              l4639 01B1  
                            l4583 00D0                              l4575 00BE                              l4559 007C  
                            l4567 0084                              l4495 000A                              l4815 019C  
                            l4807 0189                              l4751 00BD                              l4743 00A0  
                            l4727 0069                              l4719 0047                              l4911 018A  
                            l4903 0159                              l4831 000B                              l4823 0000  
                            l4399 0039                              l5439 000B                              l6511 0048  
                            l6503 0041                              l5455 0007                              l6095 0042  
                            l6087 0025                              l6191 0161                              l6183 0145  
                            l6175 0134                              l6167 0095                              l4487 00A1  
                            l4479 0080                              l6239 0021                              l4681 023B  
                            l4673 0229                              l4665 0216                              l4657 01D4  
                            l4649 01C1                              l4593 00EE                              l4577 00C0  
                            l4585 00D5                              l4569 0085                              l4497 000B  
                            l4489 0000                              l4817 019E                              l4809 018C  
                            l4761 00DC                              l4753 00C1                              l4745 00A8  
                            l4737 0080                              l4921 019E                              l4913 018E  
                            l4905 0170                              l4841 0027                              l4833 0010  
                            l4825 0004                              l6601 0091                              l6521 004E  
                            l6513 004A                              l6505 0043                              l6441 000B  
                            l5457 0000                              l6097 004C                              l6089 002F  
                            l6193 016D                              l6185 0151                              l6177 0136  
                            l6169 009C                              l5481 0004                              l4675 022D  
                            l4667 021B                              l4659 01DC                              l4595 00F6  
                            l4587 00E0                              l4579 00C4                              l4499 0010  
                            l4771 00F8                              l4763 00E4                              l4755 00C2  
                            l4747 00AA                              l4739 0090                              l4691 000B  
                            l4683 0000                              l4931 01BF                              l4923 019F  
                            l4915 018F                              l4907 0177                              l4851 0038  
                            l4843 002C                              l4835 0015                              l4827 0006  
                            l6611 00AE                              l6603 0093                              l6531 0054  
                            l6523 004F                              l6515 004B                              l6507 0045  
                            l6451 0014                              l6443 000C                              l6435 0000  
                            l5491 0000                              l5475 002C                              l5459 0015  
                            l5467 0023                              l6099 004E                              l6195 017D  
                            l6187 0153                              l6179 0137                              l5483 000B  
                            l4677 022F                              l4669 0223                              l4597 00FA  
                            l4589 00E5                              l4773 00FF                              l4781 010F  
                            l4749 00AF                              l4757 00C9                              l4765 00E8  
                            l4693 0010                              l4685 0004                              l4933 01C4  
                            l4941 01EC                              l4925 01A3                              l4917 0196  
                            l4909 0183                              l4861 0054                              l4853 003D  
                            l4845 002E                              l4837 001D                              l4829 000A  
                            l6621 00DA                              l6613 00B0                              l6605 0094  
                            l6541 005E                              l6533 0056                              l6525 0050  
                            l6517 004C                              l6509 0047                              l6461 001E  
                            l6453 0016                              l6445 000E                              l6437 0005  
                            l7261 000B                              l5493 0015                              l6197 01B6  
                            l6189 015F                              l5485 0016                              ?_pid 0036  
                            l4679 0237                              l4599 00FE                              l4783 0113  
                            l4775 0103                              l4767 00EE                              l4759 00DB  
                            l4695 0015                              l4687 0006                              l4951 021C  
                            l4943 01F9                              l4935 01CC                              l4927 01B7  
                            l4919 019A                              l4871 007A                              l4863 0059  
                            l4855 0045                              l4847 0032                              l4839 001F  
                            l6631 012A                              l6623 0113                              l6615 00BC  
                            l6607 00A0                              l6551 0068                              l6543 0060  
                            l6535 0058                              l6527 0051                              l6519 004D  
                            l6471 0028                              l6463 0020                              l6455 0018  
                            l6447 0010                              l6439 000A                              l7263 0010  
                            l5495 0031                              l6199 01BE                              l5487 001E  
                            l5479 0000                              l4793 0134                              l4785 0114  
                            l4777 0104                              l4769 00F6                              l4697 001D  
                            l4689 000A                              l4953 0227                              l4945 0203  
                            l4937 01D0                              l4881 00D1                              l4873 0092  
                            l4857 0047                              l4849 0033                              l6633 012C  
                            l6625 011B                              l6617 00BE                              l6609 00A2  
                            l6561 0072                              l6553 006A                              l6545 0062  
                            l6537 005A                              l6529 0052                              l6481 0033  
                            l6473 002A                              l6465 0022                              l6457 001A  
                            l6449 0012                              l7257 0002                              l5497 0039  
                            l5489 0022                              l4795 0139                              l4787 0118  
                            l4779 010B                              l4699 001E                              l4955 022B  
                            l4947 0211                              l4939 01E8                              l4891 00FC  
                            l4883 00D8                              l4875 009F                              l4867 0062  
                            l4859 004F                              l4971 002B                              l4963 0002  
                            l6635 012E                              l6627 0127                              l6619 00CA  
                            l6571 007E                              l6563 0076                              l6555 006C  
                            l6547 0064                              l6539 005C                              l6491 0038  
                            l6483 0034                              l6475 002C                              l6467 0024  
                            l6459 001C                              l7259 0003                              l5499 003D  
                            l4797 0141                              l4789 012C                              l4957 022C  
                            l4949 021A                              l4893 010E                              l4885 00E3  
                            l4877 00B7                              l4869 006D                              l4981 0049  
                            l4965 0007                              l6637 0137                              l6629 0129  
                            l6581 0086                              l6573 007F                              l6565 0077  
                            l6557 006E                              l6549 0066                              l6493 0039  
                            l6485 0035                              l6477 002E                              l6469 0026  
                            l7461 0030                              l4799 0145                              l4959 0232  
                            l4895 0115                              l4887 00EA                              l4879 00C4  
                            l4991 0070                              l4983 004D                              l4975 0034  
                            l4967 000B                              l6831 0068                              l6639 013A  
                            l6591 008B                              l6583 0087                              l6575 0081  
                            l6567 007B                              l6559 0070                              l6495 003A  
                            l6487 0036                              l6479 0031                              l6911 000E  
                            l7463 0034                              l7455 0000                              l7471 0003  
                            l4897 0127                              l4889 00F5                              l4993 007A  
                            l4985 0055                              l4977 0037                              l4969 001B  
                            l6841 0089                              l6833 006D                              l6593 008C  
                            l6585 0088                              l6577 0082                              l6569 007C  
                            l6497 003C                              l6489 0037                              l6913 0012  
                            l6905 0000                              l7465 0040                              l7457 0006  
                            l7481 001B                              l7473 000C                              l4899 0132  
                            l4995 0084                              l4987 0063                              l4979 0042  
                            l6835 0076                              l6595 008D                              l6587 0089  
                            l6579 0084                              l6499 003E                              l6915 0014  
                            l6907 0001                              l7459 001C                              l7467 0045  
                            l6843 0000                              l7483 001E                              l7475 000F  
                            l4997 0098                              l4989 006C                              l6837 0078  
                            l6829 0000                              l6597 008E                              l6589 008A  
                            l6909 0003                              l6845 01D1                              l6933 0009  
                            l6925 0000                              l7485 0024                              l7477 0015  
                            l7469 0000                              l4999 009D                              l6839 0081  
                            l6599 0090                              l6847 01D8                              l5991 0000  
                            l6927 0001                              l6943 0015                              l7487 0038  
                            l7479 0018                              l6849 01E3                              l5993 0006  
                            l6937 000D                              l6929 0005                              l5995 0009  
                            l6939 0011                              l5997 000B                              l7757 001E  
                            l5999 000D                              l7759 05CD                              STR_1 0000  
                            STR_2 0000                              _BRGH 0CF2                              _CREN 0CEC  
                            u4010 0134                              u4011 0133                              u4100 01C1  
                            u4020 0175                              u4101 01C0                              u4021 0174  
                            u4013 0130                              u4005 010C                              u4110 01C7  
                            u4030 018E                              u4111 01C6                              u4031 018D  
                            u4200 022D                              u4120 01CE                              u4040 0193  
                            u4201 022C                              u4121 01CD                              u4041 0192  
                            u4210 023B                              u4130 01D4                              u4211 023A  
                            u4131 01D3                              u4140 01E0                              u4060 01A7  
                            u4300 00AF                              u4220 000A                              u4141 01DF  
                            u4061 01A6                              u4301 00AE                              u4221 0009  
                            u4150 01F5                              u4070 01AC                              u4230 0010  
                            u4071 01AB                              u4055 019D                              u4231 000F  
                            u4160 020B                              u4080 01B6                              u4240 0015  
                            u4161 020A                              u4081 01B5                              u4241 0014  
                            u4170 0216                              u4090 01BC                              u4410 0113  
                            u4330 00C1                              u4250 0033                              u4171 0215  
                            u4155 01F1                              u4091 01BB                              u4411 0112  
                            u4331 00C0                              u4315 00B0                              u4251 0032  
                            u4180 021B                              u4500 019C                              u4420 0118  
                            u4260 0039                              u3700 006A                              u3620 000B  
                            u4181 021A                              u4501 019B                              u4421 0117  
                            u4405 0105                              u4325 00B7                              u4261 0038  
                            u3701 0069                              u3621 000A                              u4190 0228  
                            u4430 012C                              u4350 00DB                              u4270 003E  
                            u4510 000A                              u3710 006F                              u3630 0023  
                            u4191 0227                              u4431 012B                              u4351 00DA  
                            u4271 003D                              u4511 0009                              u3711 006E  
                            u3800 0010                              u4440 0133                              u4360 00EE  
                            u4280 0059                              u3720 000F                              u4520 0010  
                            u3640 0039                              u3801 000F                              u4441 0132  
                            u4361 00ED                              u4345 00C3                              u4281 0058  
                            u3721 000E                              u4521 000F                              u3641 0038  
                            u3810 0015                              u4450 0139                              u4370 00F6  
                            u4290 0077                              u4610 014F                              u4530 0015  
                            u3650 0040                              u3811 0014                              u4451 0138  
                            u4371 00F5                              u4355 00D7                              u4291 0076  
                            u4531 0014                              u3651 003F                              u3635 001F  
                            _PEIE 005E                              u3900 00AA                              u3820 0031  
                            u4460 0145                              u3740 001F                              u4700 01BE  
                            u4620 0166                              u4540 0032                              u7020 0068  
                            u3821 0030                              u4461 0144                              u3741 001E  
                            u4701 01BD                              u4605 00FD                              u4541 0031  
                            u7021 0067                              u3910 00BA                              u3830 0038  
                            u4470 0153                              u4390 0103                              u4710 01C4  
                            u4550 0038                              u3670 0052                              u7030 006D  
                            u3750 0006                              u3911 00B9                              u3831 0037  
                            u4391 0102                              u3735 0014                              u4711 01C3  
                            u4615 014B                              u4551 0037                              u3671 0051  
                            u7031 006C                              u3751 0005                              u3920 00C4  
                            u3840 003E                              u4480 016E                              u4720 01D0  
                            u4560 003D                              u3680 0059                              u7040 01D8  
                            u5600 0015                              u3760 0039                              u3921 00C3  
                            u3841 003D                              u4481 016D                              u4385 00F9  
                            u4721 01CF                              u4625 0162                              u4561 003C  
                            u3681 0058                              u3665 0042                              u7025 0064  
                            u7041 01D7                              u5601 0014                              u3761 0038  
                            u3850 0043                              u4490 0189                              u4730 01DE  
                            u4650 018E                              u4570 0054                              u4810 0048  
                            u7130 0008                              u7050 01E3                              u5610 0031  
                            u3770 0056                              u3851 0042                              u4491 0188  
                            u4475 014F                              u4651 018D                              u4635 0171  
                            u4571 0053                              u4811 0047                              u7131 0007  
                            u7051 01E2                              u5611 0030                              u3771 0055  
                            _RCIE 048D                              u3940 00DC                              u3860 005C  
                            u4740 01F9                              u4580 0059                              u4900 00A1  
                            u5540 0007                              u5620 003D                              u3780 0080  
                            _RCIF 008D                              u3941 00DB                              u3861 005B  
                            u4485 016A                              u4741 01F8                              u4645 0184  
                            u4581 0058                              u4901 00A0                              u4805 003C  
                            u5541 0006                              u5621 003C                              u3781 007F  
                            u3950 00E0                              u3870 0060                              u3790 000A  
                            u4750 0211                              u4670 019E                              u4830 0062  
                            u5630 0059                              u5550 0015                              u4910 0034  
                            u3951 00DF                              u3935 00C8                              u3871 005F  
                            u3791 0009                              u4495 0185                              u4751 0210  
                            u4735 01DA                              u4671 019D                              u3695 005B  
                            u4831 0061                              u7055 01DF                              u5631 0058  
                            u5551 0014                              u4911 0033                              u3960 00E5  
                            u3880 009F                              u4760 022B                              u4680 01A3  
                            u7240 0017                              u5640 0087                              u5560 0020  
                            u6600 00DE                              u4920 0335                              _SECF 0012  
                            u3961 00E4                              u3881 009E                              u4761 022A  
                            u4745 01F5                              u4681 01A2                              u4665 0190  
                            u4825 0056                              u7241 0016                              u5641 0086  
                            u5561 001F                              u6601 00DD                              u4921 0334  
                            u3970 00FA                              u3890 00A9                              u4690 01B7  
                            u4850 0070                              u4770 0007                              u5570 002B  
                            u6610 0107                              u4930 04B2                              u3971 00F9  
                            u3891 00A7                              u4755 020D                              u4691 01B6  
                            u4595 00D2                              u4851 006F                              u4771 0006  
                            u5571 002A                              u5555 0011                              u6611 0106  
                            u4931 04B1                              u3980 00FE                              u4860 0076  
                            u4780 000B                              u7340 0006                              u6700 0040  
                            u6620 0172                              u6540 0006                              u4940 0008  
                            u5580 000B                              u3981 00FD                              u3885 009B  
                            u4861 0075                              u4845 0066                              u4781 000A  
                            u7341 0005                              u5645 0083                              u6701 003F  
                            u6621 0171                              u6541 0005                              u4941 0007  
                            u5581 000A                              u3990 0108                              u4870 007A  
                            u4790 002B                              u6710 0069                              u6630 01A6  
                            u6550 006B                              u4950 000A                              u5590 0016  
                            u7350 0015                              u3991 0107                              u4871 0079  
                            u4791 002A                              u6711 0068                              u6631 01A5  
                            u6551 006A                              u4951 0009                              u5591 0015  
                            u7351 0014                              u4880 008E                              u6720 006F  
                            u6800 009C                              u6640 01B1                              u6560 0074  
                            u7360 0024                              u6721 006E                              u6801 009B  
                            u6641 01B0                              u6625 016E                              u6561 0073  
                            u7361 0023                              u4890 009D                              u6730 00A3  
                            u6650 000E                              u6810 00A6                              u6570 009D  
                            _OERR 0CE9                              u4891 009C                              u6731 00A2  
                            u6651 000D                              u6811 00A5                              u6571 009C  
                            u6555 0067                              u7507 0180                              u7427 0007  
                            u6740 00AA                              u6660 0014                              u6820 01C5  
                            u6580 00A3                              u4885 008A                              u6741 00A9  
                            u6661 0013                              u6821 01C4                              u6645 01AD  
                            u6581 00A2                              u7517 0248                              u7437 00C4  
                            u6750 00D3                              u6670 0025                              u6830 022F  
                            u6590 00D7                              u6751 00D2                              u6671 0024  
                            u6655 000A                              u6831 022E                              u6591 00D6  
                            u7607 0550                              u7527 0256                              u7447 00D2  
                            u6760 00E0                              u6680 002F                              u6840 0021  
                            u6761 00DF                              u6681 002E                              u7617 055E  
                            u7537 0264                              u7457 00E0                              u6841 0020  
                            u6770 0113                              u6690 0036                              u6850 002B  
                            u6771 0112                              u6691 0035                              u6675 0021  
                            u7707 005C                              u7627 056C                              u7547 0272  
                            u7467 00EE                              u6851 002A                              u6780 011E  
                            u6781 011D                              u6765 00DC                              u6685 002B  
                            u7717 0067                              u7637 05E2                              u7557 03C5  
                            u7477 0156                              u6790 0007                              u7807 0167  
                            u6791 0006                              u7727 0072                              u7647 000C  
                            u7567 03D3                              u7487 0164                              u7817 009A  
                            u6785 011A                              u7737 0086                              u7657 0017  
                            u7577 03E1                              u7497 0172                              u7827 00A8  
                            u7747 0091                              u7667 0022                              u7587 03EF  
                            u7837 00B6                              u7757 009C                              u7677 002D  
                            u7597 0542                              u7847 00C4                              u7767 00A7  
                            u7687 003F                              u7857 0121                              u7777 013D  
                            u7697 004A                              u7867 0006                              u7787 014B  
                            u7877 0011                              u7797 0159                              u7887 001C  
                            u7897 0027                              _SPEN 0CEF                              _SRXF 0013  
                            _TXIE 048C                              _TXEN 0CF5                              _TXIF 008C  
                            _SYNC 0CF4                     _state_machine 0000                              abs@a 0000  
                            _iavg 000E                              _conv 0010                              _main 0000  
                            _iref 000A                              _pidi 0010                              _qavg 0004  
                            _pidt 0000                     i1___flmul@grs 002A                              _vavg 0010  
                            fsr0h 0005                              fsr1h 0007                              indf0 0000  
                            fsr0l 0004                              indf1 0001                              _vmax 000C  
                            fsr1l 0006                              _vref 0000                              btemp 007E  
                  i1___fladd@aexp 0011                    i1___fladd@bexp 0012                              start 0000* 
                 __end_of_Cell_ON 00AE          ??i1_UART_send_some_bytes 0003                   ___fldiv@new_exp 0020  
                 __end_of_fCHARGE 013D                   __end_of_fDC_res 0255                             ??_ISR 0033  
                      _fDISCHARGE 0000                             ??_abs 0002                             ??_pid 000E  
        __end_of_interrupt_enable 0016                    i1___fldiv@aexp 004F                    i1___fldiv@bexp 004E  
                  i1___fldiv@sign 0047                     ___fltol@sign1 004E                   __end_of___fladd 023D  
                           ?_main 0000                     ?_control_loop 0000                   __end_of___fldiv 01AA  
                           _BRG16 0CFB                   __end_of___flmul 023B                             _ANSB0 0C68  
                           _ANSA3 0C63                             _ANSB1 0C69                             _ANSB2 0C6A  
                 __end_of___flsub 0020                             _ANSB3 0C6B                             _ANSA5 0C65  
                           _ANSB4 0C6C                   __end_of___fltol 007C                             _ANSB5 0C6D  
                           _P1OEC 40AA                             i1l402 0031                             i1l430 000D  
                           i1l415 0082                             i1l407 0019                             i1l424 0001  
                           i1l361 03FF                             i1l434 0007                             i1l450 0009  
                           i1l370 0057                             i1l427 0009                             i1l371 005A  
                           i1l444 001B                             i1l437 000E                             i1l462 0021  
                           i1l382 0021                             i1l366 042D                             i1l358 03F8  
                           i1l447 0001                             i1l456 0015                             i1l480 00A0  
                           i1l474 0016                             i1l491 002D                             i1l379 01F1  
                           i1l468 001A                             i1l484 00A0                             i1l399 0014  
                           i1l664 0078       _converter_configuration_ptr 0015                             i1l896 0597  
                           _CV_kd 0000                             _TMR1H 0017                             _CV_ki 0004  
                           _TMR1L 0016                             _CV_kp 0008                             _WPUB0 1068  
                           _WPUA3 1063                             _WPUB1 1069                             _WPUB2 106A  
                           _WPUB3 106B                             _WPUA5 1065                             _WPUB4 106C  
                           _WPUC2 1072                             _WPUC3 1073                             _WPUB5 106D  
                           _WPUC4 1074                             _WPUC5 1075                             _WPUE3 1083  
                           _RXSEL 08E9                             _TXSEL 08EA                             _fIDLE 0000  
        __end_ofi1_UART_send_byte 000A                             _fWAIT 0000                   __end_of_getTime 002F  
                      i1set_DC@dc 000A                _test_configuration 001A                             _iacum 0004  
                           _cmode 0002                             _count 0000  put_data_into_structure@structure 0001  
                  i1___flmul@aexp 002E                    i1___flmul@bexp 002F                             _vacum 0007  
                  i1___flmul@sign 0029                    i1___flmul@temp 0034                    i1___flmul@prod 0030  
                 __end_of_scaling 01E8                      ?_log_control 0000                             _state 0010  
                           _start 0014                  __end_ofi1___flge 008A                    ?_state_machine 0000  
                     pid@feedback 0036                    i1___fltol@exp1 0009                             status 0003  
                __end_of_Cell_OFF 002D                             wtemp0 007E                   i1___fladd@signs 0010  
                __end_ofi1_set_DC 0022                        _fNEXTSTATE 0000                   __initialization 0000  
        command_interpreter@F5995 0000                      __end_of_main 003D                    ??_control_loop 000E  
         __end_of_fNEXTREPETITION 001E                            ??_main 001C                       ?i1___xxtofl 0000  
                     pid@setpoint 003A                            ?_fIDLE 0000                            ?_fWAIT 0000  
                   _counter_state 0011                            _ADRESH 009C                            _ADRESL 009B  
                          _P1DCST 40D8                            _P1POLC 40B2                            _P1PHST 40D0  
                          _P1PRST 40E0                            _P1STRC 4172                            _RC1REG 0199  
                          i1l1240 0070                            i1l1232 0089                            i1l1224 001C  
                          i1l1250 0070                            i1l1403 0051                            i1l1227 0070  
                          i1l1500 0075                            i1l1405 01A9                            i1l1501 0081  
                          i1l1351 00D3                            i1l1247 005B                            i1l1360 0207  
                          i1l1424 017B                            i1l1353 00B1                            i1l1425 0195  
                          i1l1506 0019                            i1l1347 0056                            i1l1427 01A2  
                          i1l1419 012F                            i1l1443 023A                            i1l1372 0185  
                          i1l1509 0019                            i1l1381 01DE                            i1l1390 0207  
                          i1l1462 0012                            i1l1455 022E                            i1l1368 0163  
                          i1l1464 0022                            i1l1449 01BA                            i1l1393 001F  
                          i1l1378 01A7                         ??_Cell_ON 0000                            i1l1389 0200  
                          i1l1493 005B                            i1l1487 0022                            i1l1489 00A9  
                          i1l5201 0025                            i1l5203 002D                            i1l5301 007E  
                          i1l5221 0052                            i1l5213 003B                            i1l5205 002F  
                          i1l5311 00B5                            i1l5303 0080                            i1l5231 0006  
                          i1l5223 0060                            i1l5207 0033                            i1l5215 004B  
                          i1l5401 01DA                            i1l5321 00C8                            i1l5313 00B9  
                          i1l5305 0082                            i1l5241 001D                            i1l5233 000A  
                          i1l5225 0065                            i1l5411 01F6                            i1l5403 01E3  
                          i1l5331 00E5                            i1l5315 00BB                            i1l5323 00CC  
                          i1l5307 0083                            i1l5251 0031                            i1l5243 001E  
                          i1l5235 000B                            i1l5227 0000                            i1l5413 01FA  
                          i1l5405 01E8                            i1l5341 00FB                            i1l5333 00ED  
                          i1l5325 00D7                            i1l5317 00BF                            i1l5309 009A  
                          i1l5261 003E                            i1l5253 0032                            i1l5237 0010  
                          i1l5245 0020                            i1l5229 0004                            i1l5421 0001  
                          i1l6301 00CA                            i1l5415 01FC                            i1l5407 01F0  
                          i1l5351 0123                            i1l5343 00FF                            i1l5335 00F1  
                          i1l5327 00DC                            i1l5319 00C0                            i1l5271 005C  
                          i1l5263 0043                            i1l5255 0034                            i1l5247 0028  
                          i1l5239 0015                            i1l5431 001E                            i1l5423 0003  
                          i1l5191 0000                            i1l6311 00F2                            i1l6303 00D6  
                          i1l5511 0000                            i1l5417 0202                            i1l5409 01F5  
                          i1l5361 016B                            i1l5353 0147                            i1l5345 0100  
                          i1l5337 00F5                            i1l5281 006A                            i1l5273 0060  
                          i1l5265 004B                            i1l5257 0038                            i1l5249 002B  
                          i1l5601 0006                            i1l5425 000A                            i1l5193 000A  
                          i1l5521 001B                            i1l6401 04F2                            i1l6321 0141  
                          i1l6313 0102                            i1l6305 00D8                            i1l5513 0003  
                          i1l5531 0006                            i1l5419 0206                            i1l5371 0184  
                          i1l5363 0170                            i1l5355 014D                            i1l5347 0108  
                          i1l5339 00F9                            i1l5291 0074                            i1l5283 006C  
                          i1l5275 0064                            i1l5267 004C                            i1l5259 0039  
                          i1l5611 001D                            i1l5603 000A                            i1l5427 000E  
                          i1l5523 0020                            i1l6411 051A                            i1l6403 04FE  
                          i1l6331 01B4                            i1l6323 014E                            i1l6315 012E  
                          i1l6307 00E4                            i1l5445 0000                            i1l5525 0001  
                          i1l5533 0008                            i1l5541 002F                            i1l5373 0189  
                          i1l5381 0195                            i1l5357 0152                            i1l5349 010D  
                          i1l5293 0076                            i1l5285 006E                            i1l5277 0066  
                          i1l5269 004E                            i1l5701 0118                            i1l5621 002F  
                          i1l5613 001E                            i1l5605 000B                            i1l5429 0019  
                          i1l5197 0013                            i1l5517 0000                            i1l6413 051C  
                          i1l6405 0500                            i1l6341 0222                            i1l6333 01BD  
                          i1l6325 015C                            i1l6317 0137                            i1l6309 00E6  
                          i1l6253 0000                            i1l7301 004A                            i1l5447 0005  
                          i1l5527 0006                            i1l5543 0035                            i1l5535 0010  
                          i1l5375 018C                            i1l5367 0179                            i1l5359 015B  
                          i1l5383 0199                            i1l5295 0078                            i1l5287 0070  
                          i1l5279 0068                            i1l5711 0141                            i1l5703 012C  
                          i1l5631 0046                            i1l5623 0033                            i1l5607 0010  
                          i1l5615 0020                            i1l5199 0024                            i1l5519 0018  
                          i1l6415 0528                            i1l6407 050C                            i1l6351 024A  
                          i1l6343 022E                            i1l6335 021C                            i1l6327 016A  
                          i1l6319 013F                            i1l6423 056D                            i1l6271 002B  
                          i1l6255 0014                            i1l6263 0022                            i1l7311 007C  
                          i1l7303 0066                            i1l5449 000C                            i1l5561 0064  
                          i1l5545 0037                            i1l5553 004A                            i1l5537 001A  
                          i1l5529 0000                            i1l5393 01AC                            i1l5385 019A  
                          i1l5377 018E                            i1l5369 0180                            i1l5297 007A  
                          i1l5289 0072                            i1l5721 0189                            i1l5713 0145  
                          i1l5641 0069                            i1l5633 0047                            i1l5625 0034  
                          i1l5617 0028                            i1l5609 0015                            i1l5801 00EA  
                          i1l6417 0538                            i1l6409 050E                            i1l6361 029D  
                          i1l6353 024C                            i1l6345 0230                            i1l6337 021F  
                          i1l6329 0198                            i1l6425 0588                            i1l6281 0017  
                          i1l6257 001F                            i1l7401 03DE                            i1l7321 008F  
                          i1l7305 006E                            i1l7251 0016                            i1l7243 0001  
                          i1l5571 0081                            i1l5563 006E                            i1l5555 0050  
                          i1l5547 003F                            i1l5539 0024                            i1l5395 01B1  
                          i1l5387 019E                            i1l5379 0193                            i1l5299 007C  
                          i1l5731 019E                            i1l5723 018C                            i1l5715 015D  
                          i1l5707 0134                            i1l5651 0080                            i1l5627 0039  
                          i1l5635 0049                            i1l5619 002D                            i1l5811 0127  
                          i1l5803 00F5                            i1l6427 0591                            i1l6419 0564  
                          i1l6371 038A                            i1l6363 02FC                            i1l6355 0258  
                          i1l6347 023C                            i1l6339 0221                            i1l6291 0035  
                          i1l6283 001F                            i1l6275 0000                            i1l7411 0403  
                          i1l7331 00BC                            i1l7323 009A                            i1l7315 0082  
                          i1l7307 0070                            i1l7253 001D                            i1l7245 0001  
                          i1l5573 008B                            i1l5557 0052                            i1l5565 0071  
                          i1l5397 01B9                            i1l5389 01A4                            i1l5725 0194  
                          i1l5709 0139                            i1l5717 0161                            i1l5661 00AA  
                          i1l5653 0090                            i1l5637 0059                            i1l5645 0072  
                          i1l5629 003E                            i1l5821 0177                            i1l5813 0132  
                          i1l5805 00FC                            i1l5741 0006                            i1l5901 0062  
                          i1l6429 0594                            i1l6381 03B2                            i1l6373 0396  
                          i1l6365 0303                            i1l6357 0268                            i1l6349 023E  
                          i1l6293 00B9                            i1l6285 0022                            i1l6277 0003  
                          i1l7413 0408                            i1l7333 00CF                            i1l7325 00AD  
                          i1l7317 008B                            i1l7405 03E2                            i1l7309 007B  
                          i1l5581 0030                            i1l7501 0020                            i1l7247 0007  
                          i1l7271 000E                            i1l5575 0095                            i1l5567 0077  
                          i1l5559 005A                            i1l5399 01BD                            i1l5727 0198  
                          i1l5719 016E                            i1l5663 00AF                            i1l5671 00C9  
                          i1l5655 0098                            i1l5647 0077                            i1l5639 0065  
                          i1l5831 0196                            i1l5823 0183                            i1l5815 0144  
                          i1l5807 010E                            i1l5751 001D                            i1l5743 000A  
                          i1l5911 0097                            i1l5903 006B                            i1l6391 0405  
                          i1l6383 03B4                            i1l6375 0398                            i1l6367 0387  
                          i1l6359 0278                            i1l6295 00BB                            i1l6287 0026  
                          i1l6279 0015                            i1l7415 0415                            i1l7351 011A  
                          i1l7335 00CF                            i1l7327 00AD                            i1l7319 008B  
                          i1l7343 00F1                            i1l7407 03F5                            i1l5591 0086  
                          i1l5583 0038                            i1l7511 0042                            i1l7503 0025  
                          i1l5921 0001                            i1l7249 0012                            i1l7265 0001  
                          i1l5569 0079                            i1l5729 019C                            i1l5681 00EE  
                          i1l5673 00DB                            i1l5665 00BD                            i1l5657 00A0  
                          i1l5841 01B7                            i1l5825 018A                            i1l5833 019A  
                          i1l5817 0159                            i1l5809 0115                            i1l5761 0032  
                          i1l5753 001F                            i1l5745 000B                            i1l5737 0000  
                          i1l5913 009C                            i1l5905 006F                            i1l6393 0464  
                          i1l6385 03C0                            i1l6377 03A4                            i1l6369 0389  
                          i1l6297 00BC                            i1l6289 002E                            i1l7425 0418  
                          i1l7361 0245                            i1l7353 0172                            i1l7337 00D3  
                          i1l7329 00B1                            i1l7345 0105                            i1l7409 03F9  
                          i1l7281 0013                            i1l7273 0000                            i1l5593 0088  
                          i1l5585 003C                            i1l5577 0000                            i1l7521 0069  
                          i1l7513 0054                            i1l7505 0029                            i1l5923 0006  
                          i1l7267 0002                            i1l5691 0104                            i1l5683 00F6  
                          i1l5675 00DC                            i1l5667 00C1                            i1l5659 00A8  
                          i1l5851 01D0                            i1l5835 019E                            i1l5827 018E  
                          i1l5819 0170                            i1l5771 0047                            i1l5763 0033  
                          i1l5755 0027                            i1l5747 0010                            i1l5739 0004  
                          i1l5915 00A0                            i1l5907 0079                            i1l6395 046B  
                          i1l6387 03D0                            i1l6379 03A6                            i1l6299 00C8  
                          i1l7371 0264                            i1l7363 024A                            i1l7355 01D3  
                          i1l7347 010D                            i1l7339 00DE                            i1l7427 042B  
                          i1l7291 001E                            i1l7283 0013                            i1l7275 0003  
                          i1l5587 0054                            i1l5579 0014                            i1l7523 006C  
                          i1l7515 0059                            i1l7507 002A                            i1l5925 0009  
                          i1l7269 000A                            i1l5693 010B                            i1l5685 00F8  
                          i1l5677 00E4                            i1l5669 00C2                            i1l5597 0000  
                          i1l5861 0211                            i1l5853 01E8                            i1l5845 01BF  
                          i1l5837 019F                            i1l5829 018F                            i1l5781 0062  
                          i1l5773 004F                            i1l5765 0038                            i1l5757 002C  
                          i1l5749 0015                            i1l5917 00A1                            i1l5909 0083  
                          i1l6397 04EF                            i1l6389 03FC                            i1l7381 0354  
                          i1l7373 0294                            i1l7365 024E                            i1l7357 0235  
                          i1l7349 0112                            i1l7293 0026                            i1l7285 0015  
                          i1l7277 0005                            i1l5589 0058                            i1l7525 0071  
                          i1l7517 005D                            i1l7509 0036                            i1l5927 0010  
                          i1l5687 00FF                            i1l5695 010F                            i1l5679 00E8  
                          i1l5599 0004                            i1l5871 022C                            i1l5863 021A  
                          i1l5847 01C4                            i1l5855 01EC                            i1l5839 01A3  
                          i1l5791 00B7                            i1l5783 006D                            i1l5775 0054  
                          i1l5767 003D                            i1l5759 002E                            i1l6399 04F1  
                          i1l7391 03CE                            i1l7383 0384                            i1l7375 02C4  
                          i1l7367 0253                            i1l7359 023D                            i1l7295 0035  
                          i1l7287 0017                            i1l7279 0013                            i1l6823 0000  
                          i1l7519 0066                            i1l6921 0009                            i1l5929 0014  
                          i1l5945 0001                            i1l5961 000F                            i1l5697 0113  
                          i1l5689 0103                            i1l5873 0232                            i1l5865 021C  
                          i1l5857 01F9                            i1l5849 01CC                            i1l5793 00C4  
                          i1l5785 007A                            i1l5777 0059                            i1l5769 0045  
                          i1l5881 000A                            i1l7393 03CF                            i1l7377 02F4  
                          i1l7369 025C                            i1l7297 003A                            i1l7289 0019  
                          i1l6825 0006                            i1l6923 000D                            i1l5963 0013  
                          i1l5955 0001                            i1l5699 0114                            i1l5867 0227  
                          i1l5859 0203                            i1l5795 00D1                            i1l5787 0092  
                          i1l5891 0036                            i1l5883 001A                            i1l7395 03D7  
                          i1l7387 03B5                            i1l7379 0324                            i1l7299 0040  
                          i1l5971 00E4                            i1l6827 002D                            i1l7491 0007  
                          i1l6917 0000                            i1l5957 0002                            i1l5869 022B  
                          i1l5797 00D8                            i1l5789 009F                            i1l5893 0041  
                          i1l5885 002A                            i1l5877 0001                            i1l7397 03D9  
                          i1l7389 03C8                            i1l5981 01C6                            i1l5973 00ED  
                          i1l5965 0000                            i1l7493 000D                            i1l6919 0001  
                          i1l6951 0000                            i1l5959 000B                            i1l5799 00E3  
                          i1l5895 0048                            i1l5879 0006                            i1l7399 03DB  
                          i1l5983 01D0                            i1l5975 013C                            i1l5967 00C3  
                          i1l6871 000E                            i1l7495 000F                            i1l6953 000D  
                          i1l5897 004C                            i1l5889 0033                            i1l7761 00FA  
                          i1l5985 01E8                            i1l5977 0184                            i1l5969 00CC  
                          i1l6873 0012                            i1l6865 0000                            i1l6881 0007  
                          i1l7497 0016                            i1l7489 0002                            i1l5987 0001  
                          i1l7771 0078                            i1l6891 000C                            i1l5899 0054  
                          i1l7763 03BD                            i1l5979 01AF                            i1l6875 0018  
                          i1l6867 0000                            i1l6883 000A                            i1l7499 001A  
                          i1l5989 0006                            i1l7773 007D                            i1l6893 0058  
                          i1l7765 03EA                            i1l6869 0004                            i1l6885 0015  
                          i1l6895 006F                            i1l6887 0000                            i1l7767 0420  
                          i1l6879 0000                            i1l6889 0001                            i1l7769 0577  
                          u500_25 003C                            u501_20 004A                            u501_21 0049  
                          u510_20 0038                            u502_20 0051                            u510_21 0037  
                          u502_21 0050                            u511_20 003E                            u511_21 003D  
                          u503_25 0053                            u512_20 0043                            u600_20 0153  
                          u504_20 0060                            u512_21 0042                            u504_21 005F  
                          u520_25 00C2                            u600_25 014F                            u521_20 00D3  
                          u513_20 005C                            u601_20 016E                            u505_20 0065  
                          u521_21 00D2                            u513_21 005B                            u601_21 016D  
                          u505_21 0064                            u601_25 016A                            u530_20 016B  
                          u522_20 00D7                            u514_20 0060                            u506_20 000A  
                          u602_20 0189                            u610_20 0054                            u530_21 016A  
                          u522_21 00D6                            u514_21 005F                            u506_21 0009  
                          u602_21 0188                            u610_21 0053                            u602_25 0185  
                          u531_20 0170                            u523_20 00DC                            u515_20 009A  
                          u507_20 0010                            u603_20 019C                            u611_20 0059  
                          u531_21 016F                            u523_21 00DB                            u515_21 0099  
                          u507_21 000F                            u603_21 019B                            u611_21 0058  
                          u515_25 0096                            u540_20 01B1                            u524_20 00F1  
                          u516_20 00A4                            u508_20 0015                            u620_20 019E  
                          u604_20 000A                            u540_21 01B0                            u524_21 00F0  
                          u516_21 00A2                            u508_21 0014                            u620_21 019D  
                          u604_21 0009                            u532_25 017A                            u612_25 00D2  
                       ??_fCHARGE 0012                            u541_20 01BD                            u533_20 0184  
                          u525_20 00F5                            u517_20 00A5                            u509_20 0031  
                          u621_20 01A3                            u605_20 0010                            u701_20 0006  
                          u541_21 01BC                            u533_21 0183                            u525_21 00F4  
                          u509_21 0030                            u621_21 01A2                            u605_21 000F  
                          u701_21 0005                            u613_25 00FD                            u710_20 0028  
                          u542_20 01CB                            u534_20 0189                            u526_20 00FF  
                          u518_20 00B5                            u622_20 01B7                            u614_20 014F  
                          u606_20 0015                            u630_20 0006                            u534_21 0188  
                          u526_21 00FE                            u518_21 00B4                            u622_21 01B6  
                          u606_21 0014                            u630_21 0005                            u710_25 0025  
                          u542_25 01C7                            u550_25 0013                            u614_25 014B  
                          u711_20 003C                            u543_20 01DA                            u535_20 0193  
                          u519_20 00BF                            u551_20 001E                            u623_20 01BE  
                          u615_20 0166                            u607_20 0032                            u631_20 000A  
                          u543_21 01D9                            u535_21 0192                            u519_21 00BE  
                          u551_21 001D                            u623_21 01BD                            u607_21 0031  
                          u631_21 0009                            u711_25 0039                            u527_25 0102  
                          u615_25 0162                            u712_20 004E                            u552_20 0005  
                          u544_20 01E3                            u536_20 0199                            u528_20 0123  
                          u624_20 01C4                            u608_20 0038                            u640_20 0079  
                          u632_20 002A                            u552_21 0004                            u544_21 01E2  
                          u536_21 0198                            u528_21 0122                            u624_21 01C3  
                          u608_21 0037                            u640_21 0078                            u632_21 0029  
                          u528_23 011F                            u712_25 004B                            u616_25 0171  
                          u800_27 0228                            u553_20 000C                            u545_20 01E8  
                          u537_20 019E                            u529_20 0152                            u625_20 01D0  
                          u609_20 003D                            u641_20 008D                            u553_21 000B  
                          u545_21 01E7                            u537_21 019D                            u529_21 0151  
                          u625_21 01CF                            u609_21 003C                            u617_25 0184  
                          u641_25 0089                            u633_25 003B                            u801_27 0236  
                          u714_20 0016                            u546_20 01F5                            u538_20 01A4  
                          u626_20 01DE                            u618_20 018E                            u642_20 009C  
                          u634_20 0047                            u730_20 006E                            u570_20 0014  
                          u650_20 00E4                            u714_21 0015                            u546_21 01F4  
                          u538_21 01A3                            u618_21 018D                            u642_21 009B  
                          u634_21 0046                            u730_21 006D                            u570_21 0013  
                          u650_21 00E3                            u626_25 01DA                            u810_27 0514  
                          u802_27 0244                            u715_20 000D                            u723_20 001D  
                          u547_20 01FA                            u539_20 01AB                            u627_20 01F9  
                          u643_20 00A0                            u731_20 007B                            u571_20 0030  
                          u651_20 01C6                            u707_20 0018                            u715_21 000C  
                          u723_21 001C                            u547_21 01F9                            u539_21 01AA  
                          u627_21 01F8                            u643_21 009F                            u731_21 007A  
                          u571_21 002F                            u651_21 01C5                            u707_21 0017  
                          u715_25 0009                            u627_25 01F5                            u619_25 0190  
                          u635_25 0055                            u731_25 0077                            u811_27 0522  
                          u803_27 0252                            u644_20 0006                            u548_20 0206  
                          u580_20 003E                            u628_20 0211                            u636_20 0061  
                          u732_20 0081                            u572_20 003C                            u652_20 01E8  
                          u708_20 0007                            u740_20 0059                            u644_21 0005  
                          u548_21 0205                            u580_21 003D                            u628_21 0210  
                          u636_21 0060                            u732_21 0080                            u572_21 003B  
                          u652_21 01E7                            u708_21 0006                            u740_21 0058  
                          u628_25 020D                            u820_27 005F                            u812_27 058C  
                          u804_27 0390                            u653_20 0006                            u709_20 0016  
                          u645_20 001B                            u565_20 0006                            u725_20 0015  
                          u581_20 0059                            u549_20 000E                            u629_20 022B  
                          u733_20 03CE                            u573_20 0058                            u741_20 0071  
                          u653_21 0005                            u645_21 001A                            u565_21 0005  
                          u725_21 0014                            u581_21 0058                            u549_21 000D  
                          u629_21 022A                            u733_21 03CD                            u573_21 0057  
                          u741_21 0070                            u709_25 0013                            u637_25 0065  
                          u821_27 0069                            u813_27 000B                            u805_27 039E  
                          u566_20 0006                            u590_20 00F6                            u582_20 0077  
                          u638_20 006F                            u726_20 000F                            u574_20 0086  
                          u566_21 0005                            u590_21 00F5                            u582_21 0076  
                          u638_21 006E                            u574_21 0085                            u574_25 0082  
                          u822_27 007C                            u814_27 0015                            u806_27 03AC  
                          u567_20 0035                            u583_20 00AF                            u575_20 000A  
                          u639_20 0075                            u727_20 001E                            u567_21 0034  
                          u583_21 00AE                            u575_21 0009                            u639_21 0074  
                          u727_21 001D                            u591_25 00F9                            u823_27 0086  
                          u815_27 001F                            u807_27 03BA                            u648_20 001A  
                          u568_20 0050                            u592_20 0103                            u576_20 0010  
                          u496_20 000A                            u728_20 0026                            u648_21 0019  
                          u568_21 004F                            u592_21 0102                            u576_21 000F  
                          u496_21 0009                            u728_21 0025                            u584_25 00B0  
                          u824_27 0090                            u816_27 0029                            u808_27 04F8  
                          u569_20 0077                            u577_20 0015                            u497_20 0020  
                          u729_20 003A                            u649_20 00C3                            u737_20 0007  
                          u569_21 0076                            u577_21 0014                            u729_21 0039  
                          u649_21 00C2                            u737_21 0006                            u593_25 0105  
                          u585_25 00B7                            u497_25 001C                            u825_27 009A  
                          u817_27 003A                            u809_27 0506                            u594_20 0113  
                          u586_20 00C1                            u578_20 0033                            u498_20 0033  
                          u690_20 0035                            u738_20 000D                            u594_21 0112  
                          u586_21 00C0                            u578_21 0032                            u498_21 0032  
                          u690_21 0034                            u738_21 000C                            u818_27 0044  
                          u595_20 0118                            u579_20 0039                            u499_20 003A  
                          u691_20 0303                            u739_20 0025                            u595_21 0117  
                          u579_21 0038                            u499_21 0039                            u691_21 0302  
                          u739_21 0024                            u587_25 00C3                            u819_27 0055  
                          u596_20 012C                            u588_20 00DB                            u692_20 046B  
                          u596_21 012B                            u588_21 00DA                            u692_21 046A  
                          u588_25 00D7                            _TMR1GE 00CF                            u597_20 0133  
                          u589_20 00EE                            u597_21 0132                            u589_21 00ED  
                          _TMR1IE 0488                            _TMR1IF 0088                            u598_20 0139  
                          u598_21 0138                            u790_27 0001                            u599_20 0145  
                          u687_20 0014                            u599_21 0144                            u687_21 0013  
                          u687_25 0010                            u791_27 000F                            u688_20 001F  
                          _TMR1ON 00C0                            u688_21 001E                            u792_27 00C2  
                          u689_20 002A                            u689_21 0029                            u793_27 00D0  
                          _TX1REG 019A                            u794_27 00DE                            u795_27 00EC  
                          u796_27 0148                            u797_27 0156                            u798_27 0164  
                          u799_27 0172                            _TRISB0 0468                            _TRISA3 0463  
                          _TRISB1 0469                            _TRISB2 046A                            _TRISB3 046B  
                          _TRISA5 0465                            _TRISB4 046C                            _TRISC2 0472  
                          _TRISC3 0473                            _TRISB5 046D                            _TRISC4 0474  
                          _TRISC5 0475                  __end_of___xxtofl 00AB                         ??_fDC_res 0012  
         _put_data_into_structure 0000      __end_of_UART_send_some_bytes 0018                 __end_ofi1_Cell_ON 00A1  
                          _nWPUEN 04AF                            ___flge 0000                         ??___fladd 0000  
                       ??___fldiv 0016                         ??___flmul 0030                         ??___flsub 000E  
                       ??___fltol 000C                            _i_char 0018                       ?_fDISCHARGE 0000  
                          _i_disc 0016                  __end_of_read_ADC 0032                            _set_DC 0000  
                          _second 000A                            _timing 0000                         ??_getTime 0000  
                    _dc_res_count 001E                 __end_ofi1___fladd 0208                 __end_ofi1___fldiv 01AA  
               __end_ofi1___flmul 023B                 __end_ofi1___fltol 0071       __end_of_command_interpreter 042E  
    command_interpreter@operation 002E                         ??_scaling 0050       __end_of_UART_get_some_bytes 001C  
                 i1___fltol@sign1 0008                 __end_ofi1_getTime 002E         UART_get_some_bytes@length 0002  
                 ??_state_machine 001A                        ___flge@ff1 000E                        ___flge@ff2 0012  
                    ___xxtofl@arg 000A                      ___xxtofl@exp 0009                      ___xxtofl@val 0000  
     put_data_into_structure@data 0000           __end_of__initialization 0044                        ___fltol@f1 0008  
                    ?i1__Umul8_16 0000                       ?_fNEXTSTATE 0000                  _UART_send_header 0000  
                   __end_of_fIDLE 001F                    read_ADC@ad_res 0009                     __end_of_fWAIT 002F  
                  __pcstackCOMMON 0000                      __pidataBANK1 0000                      __pidataBANK3 0000  
                    __pidataBANK4 0000                  _UART_send_string 0000  command_interpreter@calc_checksum 002F  
         _converter_settings$1611 0016                 __end_of_fNEXTCELL 001E                         ?i1___flge 0000  
                      _cc_cv_mode 0000                  ?_fNEXTREPETITION 0000             __end_of_UART_get_byte 000F  
                       ?_Cell_OFF 0000            i1_UART_send_some_bytes 0000                         ?i1_set_DC 0000  
                         ??_fIDLE 0050                           ??_fWAIT 0050         i1_converter_settings$1748 0010  
                      __pbssBANK1 0000                        __pbssBANK3 0000                        __pbssBANK4 0000  
                      __pbssBANK5 0000         ??_put_data_into_structure 0002              __end_of_control_loop 005B  
                  i1___xxtofl@arg 000A                    i1___xxtofl@exp 0009                        _cell_count 0011  
                  i1___xxtofl@val 0000                 __end_of__Umul8_16 0024                        __pmaintext 0000  
                         ?___flge 000E                        __pintentry 0000           _converter_configuration 0023  
                         ?_set_DC 0000                 ?_interrupt_enable 0000                        ??i1___flge 0008  
                         ?_timing 0000                           _T1CKPS0 00C4                           _T1CKPS1 00C5  
              ??_interrupt_enable 0000                           _T1OSCEN 00C3                        ??_Cell_OFF 0000  
                       ?___xxtofl 0000                        ??i1_set_DC 000E                           _SP1BRGH 019C  
                         _SP1BRGL 019B               i1__Umul8_16@product 0004              _UART_send_some_bytes 0000  
               ?i1_UART_send_byte 0000                           _TMR1CS0 00C6                           _TMR1CS1 00C7  
              ??i1_UART_send_byte 0000                           _Cell_ON 0000                           _fCHARGE 0000  
                       ?_read_ADC 0000        __end_of_calculate_checksum 0022                           _fDC_res 0000  
                         _nT1SYNC 00C2                           ___fladd 0000                           ___fldiv 0000  
                         ___flmul 0000                           ___flsub 0000                           ___fltol 0000  
 __end_of_put_data_into_structure 001B      __end_ofi1_converter_settings 0598                        _initialize 0000  
                    ??i1___xxtofl 0004                           __ptext1 0000                           __ptext2 0000  
                         __ptext3 0000                           _getTime 0000                           __ptext4 0000  
                         __ptext5 0000                           __ptext6 0000                           __ptext7 0000  
                         __ptext8 0000                           __ptext9 0000                       ?_cc_cv_mode 0010  
                      ??___xxtofl 0004                           _scaling 0000             ?_UART_send_some_bytes 0001  
                         _timeout 0008                      _fDC_res$1610 0016               _basic_configuration 002B  
                         clrloop0 0001              end_of_initialization 0044                        ??_read_ADC 0002  
      UART_send_some_bytes@length 0003                           init_ram 0000                           initloop 0001  
                   _calculate_avg 0000                __end_ofi1___xxtofl 00AA                      ??_fDISCHARGE 0012  
                       i1_Cell_ON 0000                        _wait_count 0014                _repetition_counter 001D  
           i1__Umul8_16@word_mpld 0006                       ___fladd@grs 004D          __end_of_UART_send_header 000E  
                   ___xxtofl@sign 0008                         i1___fladd 0000                         i1___fldiv 0000  
                       i1___flmul 0000                       ___fldiv@grs 0022                         i1___fltol 0000  
                     ___fldiv@rem 001B              i1UART_send_byte@byte 0000          __end_of_UART_send_string 0017  
                       i1_getTime 0000                __end_of_fDISCHARGE 01D0                       ___flmul@grs 0036  
                  ?_calculate_avg 0000                      ??_fNEXTSTATE 0050                   read_ADC@channel 0000  
                    _EOC_variable 0012                        ?i1_Cell_ON 0000                    __end_of___flge 008B  
                     ?_initialize 0000           ?i1_UART_send_some_bytes 0001                      _control_loop 0000  
                  __end_of_set_DC 001B            ??_UART_send_some_bytes 0003                    __end_of_timing 001A  
      __end_of_converter_settings 05EE                         _fNEXTCELL 0000               start_initialization 0000  
                  _UART_send_char 0000                       __end_of_ISR 007A                    _UART_send_byte 0000  
                     __end_of_abs 001A                        ?i1___fladd 0000                __end_of_fNEXTSTATE 0026  
                      ?i1___fldiv 0036                       __end_of_pid 01F2                        ?i1___flmul 001C  
                      ?i1___fltol 0000           command_interpreter@data 0017           command_interpreter@code 0031  
         command_interpreter@test 002D             __end_of_state_machine 0036                        ?i1_getTime 0000  
            i1_converter_settings 0000                          ??___flge 0016                         __Umul8_16 0000  
  __end_ofi1_UART_send_some_bytes 0016                       __pdataBANK1 0000                       __pdataBANK3 0000  
                     __pdataBANK4 0000          calculate_checksum@length 0000                          ??_set_DC 0050  
        cc_cv_mode@CC_mode_status 0014          calculate_checksum@result 0006                          ??_timing 0000  
                       ___fladd@a 0046                         ___fladd@b 0042            __end_of_UART_send_char 000A  
          __end_of_UART_send_byte 000C                         ___fldiv@a 000E                         ___fldiv@b 0012  
                      ?_fNEXTCELL 0000                         ___flmul@a 002C                         ___flmul@b 0028  
                       ___flsub@a 0014                         ___flsub@b 0018                         ___latbits 0002  
                   __pcstackBANK0 0000                     __pcstackBANK1 0000                     __pcstackBANK2 0000  
                   __pcstackBANK3 0000                     ??_log_control 0050      i1UART_send_some_bytes@length 0003  
                 i1___xxtofl@sign 0008                          ?_Cell_ON 0000                   ??_calculate_avg 0000  
                        ?_fCHARGE 0000             ?i1_converter_settings 0000                 i1___fldiv@new_exp 0048  
          _test_configuration_ptr 0016                          ?_fDC_res 0000           UART_get_some_bytes@data 0000  
                    _log_data_ptr 001F          i1__Umul8_16@multiplicand 0000                          ?___fladd 0042  
                        ?___fldiv 000E                          ?___flmul 0028                          ?___flsub 0014  
                        ?___fltol 0008                       ??i1_Cell_ON 0000                _calculate_checksum 0000  
                      ?__Umul8_16 0000                  UART_send_char@bt 0000                      ??_cc_cv_mode 0050  
                        ?_getTime 0000                   ?_UART_send_char 0000               ?_calculate_checksum 0000  
                 ?_UART_send_byte 0000                          ?_scaling 0000                      _scaling$1608 0014  
                    _scaling$1609 0010         cc_cv_mode@current_voltage 0010                       ??i1___fladd 0008  
                     ??i1___fldiv 003E          ?_put_data_into_structure 0000                       ??i1___flmul 0024  
                     ??i1___fltol 0004                       ??i1_getTime 0000              ??_calculate_checksum 0003  
                       clear_ram0 0000               __end_of_log_control 0049                __end_of_cc_cv_mode 0092  
                        _PSMC1DCH 0824                          _PSMC1DCL 0823                          _PSMC1CLK 0814  
                        _PSMC1CON 0811                          _PSMC1MDL 0812                          _PSMC1PHH 0822  
                        _PSMC1PHL 0821                          _GO_nDONE 04E9                          _PSMC1PRH 0826  
                        _PSMC1PRL 0825                      _PSMC1CONbits 0811                          i1___flge 0000  
                      _ADCON0bits 009D                        _ADCON1bits 009E                        _ADCON2bits 009F  
           UART_send_string@st_pt 0001                          _Cell_OFF 0000                       ??_fNEXTCELL 0050  
                   _UART_get_byte 0000                          i1_set_DC 0000                 ?_UART_send_header 0001  
              UART_send_byte@byte 0000                ??_UART_send_header 0003            ??i1_converter_settings 000C  
               ?_UART_send_string 0001                       _EOD_voltage 0016       command_interpreter@checksum 002B  
              ??_UART_send_string 0003                     ??i1__Umul8_16 0002                 ??_fNEXTREPETITION 0050  
                     ??__Umul8_16 0002               _command_interpreter 0000                      ??_initialize 0012  
             _UART_get_some_bytes 0000          UART_send_some_bytes@data 0001                    ?_UART_get_byte 0000  
                        _capacity 001A                          _pid$1605 003E                          _pid$1746 0042  
                        _pid$1747 0046                          ___xxtofl 0000                          _cell_max 0012  
                        __ptext10 0000                          __ptext11 0000                          __ptext20 0000  
                        __ptext12 0000                          __ptext21 0000                          __ptext13 0000  
                        __ptext30 0000                          __ptext22 0000                          __ptext14 0000  
                        __ptext31 0000                          __ptext23 0000                          __ptext15 0000  
                        __ptext40 0000                          __ptext32 0000                          __ptext24 0000  
                        __ptext16 0000                          __ptext41 0000                          __ptext33 0000  
                        __ptext25 0000                          __ptext17 0000                          __ptext50 0000  
                        __ptext42 0000                          __ptext34 0000                          __ptext26 0000  
                        __ptext18 0000                          __ptext51 0000                          __ptext43 0000  
                        __ptext35 0000                          __ptext27 0000                          __ptext19 0000  
                        __ptext52 0000                          __ptext44 0000                          __ptext36 0000  
                        __ptext28 0000                          __ptext53 0000                          __ptext45 0000  
                        __ptext37 0000                          __ptext54 0000                          __ptext46 0000  
                        __ptext38 0000                          __ptext55 0000                          __ptext47 0000  
                        __ptext39 0000                          __ptext56 0000                          __ptext48 0000  
                        __ptext57 0000                          __ptext49 0000                       _log_control 0000  
                _interrupt_enable 0000              ?_command_interpreter 0000              ?_UART_get_some_bytes 0000  
                        _read_ADC 0000                _converter_settings 0000                          _log_data 0014  
              __end_of_initialize 013E                  i1_UART_send_byte 0000        i1UART_send_some_bytes@data 0001  
                      _RC1STAbits 019D         UART_send_header@operation 0001               ?_converter_settings 0000  
                      _CC_char_ki 0008                          int$flags 007E                        _CC_char_kp 000C  
             __end_ofi1__Umul8_16 0023                        _CC_disc_ki 0000                        _CC_disc_kp 0004  
            ??_converter_settings 0012            calculate_checksum@data 0001            calculate_checksum@code 0005  
       command_interpreter@length 0032             ??_command_interpreter 0014                          set_DC@dc 0010  
           ??_UART_get_some_bytes 0001                          intlevel1 0000*           i1__Umul8_16@multiplier 0008  
                      _OSCCONbits 0099                  ??_UART_send_char 0000                  ??_UART_send_byte 0000  
                 _CC_char_disc_kd 001C                   ??_UART_get_byte 0000                     __pstringtext1 0000  
                   __pstringtext2 0000                     __pstringtext3 0000            __Umul8_16@multiplicand 0000  
           UART_send_header@start 0003       cc_cv_mode@reference_voltage 0012                     _EOPD_capacity 0014  
                   ___fladd@signs 004A              UART_send_header@code 0002                      ___fladd@aexp 004B  
                    ___fladd@bexp 004C             __end_of_calculate_avg 0083              __Umul8_16@multiplier 0008  
                     i1__Umul8_16 0000                 __Umul8_16@product 0004                     _EOPC_variable 0018  
