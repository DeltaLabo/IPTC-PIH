

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Oct 17 14:39:39 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	16F1786
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    16                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,delta=2
    74                           	psect	text49,local,class=CODE,merge=1,delta=2
    75                           	psect	text50,local,class=CODE,merge=1,delta=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2
    77                           	psect	text52,local,class=CODE,merge=1,delta=2
    78                           	psect	text53,local,class=CODE,merge=1,delta=2
    79                           	psect	text54,local,class=CODE,merge=1,delta=2
    80                           	psect	text55,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text56,local,class=CODE,merge=1,delta=2
    82                           	psect	text57,local,class=CODE,merge=1,delta=2
    83                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    85                           	dabs	1,0x7E,2
    86  0000                     
    87                           ; Version 2.40
    88                           ; Generated 17/11/2021 GMT
    89                           ; 
    90                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution. Publication is not required when
   104                           ;        this file is used in an embedded application.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC16F1786 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  0008                     	;# 
   131  0009                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0090                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0095                     	;# 
   160  0096                     	;# 
   161  0097                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009A                     	;# 
   165  009B                     	;# 
   166  009B                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  0111                     	;# 
   175  0112                     	;# 
   176  0113                     	;# 
   177  0114                     	;# 
   178  0115                     	;# 
   179  0116                     	;# 
   180  0117                     	;# 
   181  0118                     	;# 
   182  0119                     	;# 
   183  011A                     	;# 
   184  011B                     	;# 
   185  011C                     	;# 
   186  011D                     	;# 
   187  011D                     	;# 
   188  011D                     	;# 
   189  011E                     	;# 
   190  011F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  0191                     	;# 
   194  0191                     	;# 
   195  0192                     	;# 
   196  0193                     	;# 
   197  0193                     	;# 
   198  0193                     	;# 
   199  0194                     	;# 
   200  0195                     	;# 
   201  0196                     	;# 
   202  0197                     	;# 
   203  0199                     	;# 
   204  0199                     	;# 
   205  0199                     	;# 
   206  019A                     	;# 
   207  019A                     	;# 
   208  019A                     	;# 
   209  019B                     	;# 
   210  019B                     	;# 
   211  019B                     	;# 
   212  019B                     	;# 
   213  019B                     	;# 
   214  019C                     	;# 
   215  019C                     	;# 
   216  019C                     	;# 
   217  019D                     	;# 
   218  019D                     	;# 
   219  019D                     	;# 
   220  019E                     	;# 
   221  019E                     	;# 
   222  019E                     	;# 
   223  019F                     	;# 
   224  019F                     	;# 
   225  019F                     	;# 
   226  019F                     	;# 
   227  019F                     	;# 
   228  020C                     	;# 
   229  020D                     	;# 
   230  020E                     	;# 
   231  0210                     	;# 
   232  0211                     	;# 
   233  0211                     	;# 
   234  0212                     	;# 
   235  0212                     	;# 
   236  0213                     	;# 
   237  0213                     	;# 
   238  0214                     	;# 
   239  0214                     	;# 
   240  0215                     	;# 
   241  0215                     	;# 
   242  0215                     	;# 
   243  0215                     	;# 
   244  0216                     	;# 
   245  0216                     	;# 
   246  0217                     	;# 
   247  0217                     	;# 
   248  028C                     	;# 
   249  028D                     	;# 
   250  028E                     	;# 
   251  0291                     	;# 
   252  0291                     	;# 
   253  0292                     	;# 
   254  0293                     	;# 
   255  0298                     	;# 
   256  0298                     	;# 
   257  0299                     	;# 
   258  029A                     	;# 
   259  030C                     	;# 
   260  030D                     	;# 
   261  030E                     	;# 
   262  0311                     	;# 
   263  0311                     	;# 
   264  0312                     	;# 
   265  0313                     	;# 
   266  038C                     	;# 
   267  038D                     	;# 
   268  038E                     	;# 
   269  0390                     	;# 
   270  0391                     	;# 
   271  0392                     	;# 
   272  0393                     	;# 
   273  0394                     	;# 
   274  0395                     	;# 
   275  0396                     	;# 
   276  0397                     	;# 
   277  0398                     	;# 
   278  0399                     	;# 
   279  039D                     	;# 
   280  039E                     	;# 
   281  039F                     	;# 
   282  0511                     	;# 
   283  0513                     	;# 
   284  051A                     	;# 
   285  0811                     	;# 
   286  0812                     	;# 
   287  0813                     	;# 
   288  0814                     	;# 
   289  0815                     	;# 
   290  0816                     	;# 
   291  0817                     	;# 
   292  0818                     	;# 
   293  0819                     	;# 
   294  081A                     	;# 
   295  081B                     	;# 
   296  081C                     	;# 
   297  081D                     	;# 
   298  081E                     	;# 
   299  081F                     	;# 
   300  0820                     	;# 
   301  0821                     	;# 
   302  0821                     	;# 
   303  0822                     	;# 
   304  0823                     	;# 
   305  0823                     	;# 
   306  0824                     	;# 
   307  0825                     	;# 
   308  0825                     	;# 
   309  0826                     	;# 
   310  0827                     	;# 
   311  0827                     	;# 
   312  0828                     	;# 
   313  0829                     	;# 
   314  082A                     	;# 
   315  082B                     	;# 
   316  082C                     	;# 
   317  082D                     	;# 
   318  082E                     	;# 
   319  082F                     	;# 
   320  0831                     	;# 
   321  0832                     	;# 
   322  0833                     	;# 
   323  0834                     	;# 
   324  0835                     	;# 
   325  0836                     	;# 
   326  0837                     	;# 
   327  0838                     	;# 
   328  0839                     	;# 
   329  083A                     	;# 
   330  083B                     	;# 
   331  083C                     	;# 
   332  083D                     	;# 
   333  083E                     	;# 
   334  083F                     	;# 
   335  0840                     	;# 
   336  0841                     	;# 
   337  0841                     	;# 
   338  0842                     	;# 
   339  0843                     	;# 
   340  0843                     	;# 
   341  0844                     	;# 
   342  0845                     	;# 
   343  0845                     	;# 
   344  0846                     	;# 
   345  0847                     	;# 
   346  0847                     	;# 
   347  0848                     	;# 
   348  0849                     	;# 
   349  084A                     	;# 
   350  084B                     	;# 
   351  084C                     	;# 
   352  084D                     	;# 
   353  084E                     	;# 
   354  084F                     	;# 
   355  0851                     	;# 
   356  0852                     	;# 
   357  0853                     	;# 
   358  0854                     	;# 
   359  0855                     	;# 
   360  0856                     	;# 
   361  0857                     	;# 
   362  0858                     	;# 
   363  0859                     	;# 
   364  085A                     	;# 
   365  085B                     	;# 
   366  085C                     	;# 
   367  085D                     	;# 
   368  085E                     	;# 
   369  085F                     	;# 
   370  0860                     	;# 
   371  0861                     	;# 
   372  0861                     	;# 
   373  0862                     	;# 
   374  0863                     	;# 
   375  0863                     	;# 
   376  0864                     	;# 
   377  0865                     	;# 
   378  0865                     	;# 
   379  0866                     	;# 
   380  0867                     	;# 
   381  0867                     	;# 
   382  0868                     	;# 
   383  0869                     	;# 
   384  086A                     	;# 
   385  086B                     	;# 
   386  086C                     	;# 
   387  086D                     	;# 
   388  086E                     	;# 
   389  086F                     	;# 
   390  0FE4                     	;# 
   391  0FE5                     	;# 
   392  0FE6                     	;# 
   393  0FE7                     	;# 
   394  0FE8                     	;# 
   395  0FE9                     	;# 
   396  0FEA                     	;# 
   397  0FEB                     	;# 
   398  0FED                     	;# 
   399  0FEE                     	;# 
   400  0FEF                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  0010                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0013                     	;# 
   420  0014                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0016                     	;# 
   424  0017                     	;# 
   425  0018                     	;# 
   426  0019                     	;# 
   427  001A                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  008C                     	;# 
   431  008D                     	;# 
   432  008E                     	;# 
   433  0090                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009B                     	;# 
   446  009C                     	;# 
   447  009D                     	;# 
   448  009E                     	;# 
   449  009F                     	;# 
   450  010C                     	;# 
   451  010D                     	;# 
   452  010E                     	;# 
   453  0111                     	;# 
   454  0112                     	;# 
   455  0113                     	;# 
   456  0114                     	;# 
   457  0115                     	;# 
   458  0116                     	;# 
   459  0117                     	;# 
   460  0118                     	;# 
   461  0119                     	;# 
   462  011A                     	;# 
   463  011B                     	;# 
   464  011C                     	;# 
   465  011D                     	;# 
   466  011D                     	;# 
   467  011D                     	;# 
   468  011E                     	;# 
   469  011F                     	;# 
   470  018C                     	;# 
   471  018D                     	;# 
   472  0191                     	;# 
   473  0191                     	;# 
   474  0192                     	;# 
   475  0193                     	;# 
   476  0193                     	;# 
   477  0193                     	;# 
   478  0194                     	;# 
   479  0195                     	;# 
   480  0196                     	;# 
   481  0197                     	;# 
   482  0199                     	;# 
   483  0199                     	;# 
   484  0199                     	;# 
   485  019A                     	;# 
   486  019A                     	;# 
   487  019A                     	;# 
   488  019B                     	;# 
   489  019B                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019C                     	;# 
   494  019C                     	;# 
   495  019C                     	;# 
   496  019D                     	;# 
   497  019D                     	;# 
   498  019D                     	;# 
   499  019E                     	;# 
   500  019E                     	;# 
   501  019E                     	;# 
   502  019F                     	;# 
   503  019F                     	;# 
   504  019F                     	;# 
   505  019F                     	;# 
   506  019F                     	;# 
   507  020C                     	;# 
   508  020D                     	;# 
   509  020E                     	;# 
   510  0210                     	;# 
   511  0211                     	;# 
   512  0211                     	;# 
   513  0212                     	;# 
   514  0212                     	;# 
   515  0213                     	;# 
   516  0213                     	;# 
   517  0214                     	;# 
   518  0214                     	;# 
   519  0215                     	;# 
   520  0215                     	;# 
   521  0215                     	;# 
   522  0215                     	;# 
   523  0216                     	;# 
   524  0216                     	;# 
   525  0217                     	;# 
   526  0217                     	;# 
   527  028C                     	;# 
   528  028D                     	;# 
   529  028E                     	;# 
   530  0291                     	;# 
   531  0291                     	;# 
   532  0292                     	;# 
   533  0293                     	;# 
   534  0298                     	;# 
   535  0298                     	;# 
   536  0299                     	;# 
   537  029A                     	;# 
   538  030C                     	;# 
   539  030D                     	;# 
   540  030E                     	;# 
   541  0311                     	;# 
   542  0311                     	;# 
   543  0312                     	;# 
   544  0313                     	;# 
   545  038C                     	;# 
   546  038D                     	;# 
   547  038E                     	;# 
   548  0390                     	;# 
   549  0391                     	;# 
   550  0392                     	;# 
   551  0393                     	;# 
   552  0394                     	;# 
   553  0395                     	;# 
   554  0396                     	;# 
   555  0397                     	;# 
   556  0398                     	;# 
   557  0399                     	;# 
   558  039D                     	;# 
   559  039E                     	;# 
   560  039F                     	;# 
   561  0511                     	;# 
   562  0513                     	;# 
   563  051A                     	;# 
   564  0811                     	;# 
   565  0812                     	;# 
   566  0813                     	;# 
   567  0814                     	;# 
   568  0815                     	;# 
   569  0816                     	;# 
   570  0817                     	;# 
   571  0818                     	;# 
   572  0819                     	;# 
   573  081A                     	;# 
   574  081B                     	;# 
   575  081C                     	;# 
   576  081D                     	;# 
   577  081E                     	;# 
   578  081F                     	;# 
   579  0820                     	;# 
   580  0821                     	;# 
   581  0821                     	;# 
   582  0822                     	;# 
   583  0823                     	;# 
   584  0823                     	;# 
   585  0824                     	;# 
   586  0825                     	;# 
   587  0825                     	;# 
   588  0826                     	;# 
   589  0827                     	;# 
   590  0827                     	;# 
   591  0828                     	;# 
   592  0829                     	;# 
   593  082A                     	;# 
   594  082B                     	;# 
   595  082C                     	;# 
   596  082D                     	;# 
   597  082E                     	;# 
   598  082F                     	;# 
   599  0831                     	;# 
   600  0832                     	;# 
   601  0833                     	;# 
   602  0834                     	;# 
   603  0835                     	;# 
   604  0836                     	;# 
   605  0837                     	;# 
   606  0838                     	;# 
   607  0839                     	;# 
   608  083A                     	;# 
   609  083B                     	;# 
   610  083C                     	;# 
   611  083D                     	;# 
   612  083E                     	;# 
   613  083F                     	;# 
   614  0840                     	;# 
   615  0841                     	;# 
   616  0841                     	;# 
   617  0842                     	;# 
   618  0843                     	;# 
   619  0843                     	;# 
   620  0844                     	;# 
   621  0845                     	;# 
   622  0845                     	;# 
   623  0846                     	;# 
   624  0847                     	;# 
   625  0847                     	;# 
   626  0848                     	;# 
   627  0849                     	;# 
   628  084A                     	;# 
   629  084B                     	;# 
   630  084C                     	;# 
   631  084D                     	;# 
   632  084E                     	;# 
   633  084F                     	;# 
   634  0851                     	;# 
   635  0852                     	;# 
   636  0853                     	;# 
   637  0854                     	;# 
   638  0855                     	;# 
   639  0856                     	;# 
   640  0857                     	;# 
   641  0858                     	;# 
   642  0859                     	;# 
   643  085A                     	;# 
   644  085B                     	;# 
   645  085C                     	;# 
   646  085D                     	;# 
   647  085E                     	;# 
   648  085F                     	;# 
   649  0860                     	;# 
   650  0861                     	;# 
   651  0861                     	;# 
   652  0862                     	;# 
   653  0863                     	;# 
   654  0863                     	;# 
   655  0864                     	;# 
   656  0865                     	;# 
   657  0865                     	;# 
   658  0866                     	;# 
   659  0867                     	;# 
   660  0867                     	;# 
   661  0868                     	;# 
   662  0869                     	;# 
   663  086A                     	;# 
   664  086B                     	;# 
   665  086C                     	;# 
   666  086D                     	;# 
   667  086E                     	;# 
   668  086F                     	;# 
   669  0FE4                     	;# 
   670  0FE5                     	;# 
   671  0FE6                     	;# 
   672  0FE7                     	;# 
   673  0FE8                     	;# 
   674  0FE9                     	;# 
   675  0FEA                     	;# 
   676  0FEB                     	;# 
   677  0FED                     	;# 
   678  0FEE                     	;# 
   679  0FEF                     	;# 
   680  0000                     	;# 
   681  0001                     	;# 
   682  0002                     	;# 
   683  0003                     	;# 
   684  0004                     	;# 
   685  0005                     	;# 
   686  0006                     	;# 
   687  0007                     	;# 
   688  0008                     	;# 
   689  0009                     	;# 
   690  000A                     	;# 
   691  000B                     	;# 
   692  000C                     	;# 
   693  000D                     	;# 
   694  000E                     	;# 
   695  0010                     	;# 
   696  0011                     	;# 
   697  0012                     	;# 
   698  0013                     	;# 
   699  0014                     	;# 
   700  0015                     	;# 
   701  0016                     	;# 
   702  0016                     	;# 
   703  0017                     	;# 
   704  0018                     	;# 
   705  0019                     	;# 
   706  001A                     	;# 
   707  001B                     	;# 
   708  001C                     	;# 
   709  008C                     	;# 
   710  008D                     	;# 
   711  008E                     	;# 
   712  0090                     	;# 
   713  0091                     	;# 
   714  0092                     	;# 
   715  0093                     	;# 
   716  0094                     	;# 
   717  0095                     	;# 
   718  0096                     	;# 
   719  0097                     	;# 
   720  0098                     	;# 
   721  0099                     	;# 
   722  009A                     	;# 
   723  009B                     	;# 
   724  009B                     	;# 
   725  009C                     	;# 
   726  009D                     	;# 
   727  009E                     	;# 
   728  009F                     	;# 
   729  010C                     	;# 
   730  010D                     	;# 
   731  010E                     	;# 
   732  0111                     	;# 
   733  0112                     	;# 
   734  0113                     	;# 
   735  0114                     	;# 
   736  0115                     	;# 
   737  0116                     	;# 
   738  0117                     	;# 
   739  0118                     	;# 
   740  0119                     	;# 
   741  011A                     	;# 
   742  011B                     	;# 
   743  011C                     	;# 
   744  011D                     	;# 
   745  011D                     	;# 
   746  011D                     	;# 
   747  011E                     	;# 
   748  011F                     	;# 
   749  018C                     	;# 
   750  018D                     	;# 
   751  0191                     	;# 
   752  0191                     	;# 
   753  0192                     	;# 
   754  0193                     	;# 
   755  0193                     	;# 
   756  0193                     	;# 
   757  0194                     	;# 
   758  0195                     	;# 
   759  0196                     	;# 
   760  0197                     	;# 
   761  0199                     	;# 
   762  0199                     	;# 
   763  0199                     	;# 
   764  019A                     	;# 
   765  019A                     	;# 
   766  019A                     	;# 
   767  019B                     	;# 
   768  019B                     	;# 
   769  019B                     	;# 
   770  019B                     	;# 
   771  019B                     	;# 
   772  019C                     	;# 
   773  019C                     	;# 
   774  019C                     	;# 
   775  019D                     	;# 
   776  019D                     	;# 
   777  019D                     	;# 
   778  019E                     	;# 
   779  019E                     	;# 
   780  019E                     	;# 
   781  019F                     	;# 
   782  019F                     	;# 
   783  019F                     	;# 
   784  019F                     	;# 
   785  019F                     	;# 
   786  020C                     	;# 
   787  020D                     	;# 
   788  020E                     	;# 
   789  0210                     	;# 
   790  0211                     	;# 
   791  0211                     	;# 
   792  0212                     	;# 
   793  0212                     	;# 
   794  0213                     	;# 
   795  0213                     	;# 
   796  0214                     	;# 
   797  0214                     	;# 
   798  0215                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0216                     	;# 
   803  0216                     	;# 
   804  0217                     	;# 
   805  0217                     	;# 
   806  028C                     	;# 
   807  028D                     	;# 
   808  028E                     	;# 
   809  0291                     	;# 
   810  0291                     	;# 
   811  0292                     	;# 
   812  0293                     	;# 
   813  0298                     	;# 
   814  0298                     	;# 
   815  0299                     	;# 
   816  029A                     	;# 
   817  030C                     	;# 
   818  030D                     	;# 
   819  030E                     	;# 
   820  0311                     	;# 
   821  0311                     	;# 
   822  0312                     	;# 
   823  0313                     	;# 
   824  038C                     	;# 
   825  038D                     	;# 
   826  038E                     	;# 
   827  0390                     	;# 
   828  0391                     	;# 
   829  0392                     	;# 
   830  0393                     	;# 
   831  0394                     	;# 
   832  0395                     	;# 
   833  0396                     	;# 
   834  0397                     	;# 
   835  0398                     	;# 
   836  0399                     	;# 
   837  039D                     	;# 
   838  039E                     	;# 
   839  039F                     	;# 
   840  0511                     	;# 
   841  0513                     	;# 
   842  051A                     	;# 
   843  0811                     	;# 
   844  0812                     	;# 
   845  0813                     	;# 
   846  0814                     	;# 
   847  0815                     	;# 
   848  0816                     	;# 
   849  0817                     	;# 
   850  0818                     	;# 
   851  0819                     	;# 
   852  081A                     	;# 
   853  081B                     	;# 
   854  081C                     	;# 
   855  081D                     	;# 
   856  081E                     	;# 
   857  081F                     	;# 
   858  0820                     	;# 
   859  0821                     	;# 
   860  0821                     	;# 
   861  0822                     	;# 
   862  0823                     	;# 
   863  0823                     	;# 
   864  0824                     	;# 
   865  0825                     	;# 
   866  0825                     	;# 
   867  0826                     	;# 
   868  0827                     	;# 
   869  0827                     	;# 
   870  0828                     	;# 
   871  0829                     	;# 
   872  082A                     	;# 
   873  082B                     	;# 
   874  082C                     	;# 
   875  082D                     	;# 
   876  082E                     	;# 
   877  082F                     	;# 
   878  0831                     	;# 
   879  0832                     	;# 
   880  0833                     	;# 
   881  0834                     	;# 
   882  0835                     	;# 
   883  0836                     	;# 
   884  0837                     	;# 
   885  0838                     	;# 
   886  0839                     	;# 
   887  083A                     	;# 
   888  083B                     	;# 
   889  083C                     	;# 
   890  083D                     	;# 
   891  083E                     	;# 
   892  083F                     	;# 
   893  0840                     	;# 
   894  0841                     	;# 
   895  0841                     	;# 
   896  0842                     	;# 
   897  0843                     	;# 
   898  0843                     	;# 
   899  0844                     	;# 
   900  0845                     	;# 
   901  0845                     	;# 
   902  0846                     	;# 
   903  0847                     	;# 
   904  0847                     	;# 
   905  0848                     	;# 
   906  0849                     	;# 
   907  084A                     	;# 
   908  084B                     	;# 
   909  084C                     	;# 
   910  084D                     	;# 
   911  084E                     	;# 
   912  084F                     	;# 
   913  0851                     	;# 
   914  0852                     	;# 
   915  0853                     	;# 
   916  0854                     	;# 
   917  0855                     	;# 
   918  0856                     	;# 
   919  0857                     	;# 
   920  0858                     	;# 
   921  0859                     	;# 
   922  085A                     	;# 
   923  085B                     	;# 
   924  085C                     	;# 
   925  085D                     	;# 
   926  085E                     	;# 
   927  085F                     	;# 
   928  0860                     	;# 
   929  0861                     	;# 
   930  0861                     	;# 
   931  0862                     	;# 
   932  0863                     	;# 
   933  0863                     	;# 
   934  0864                     	;# 
   935  0865                     	;# 
   936  0865                     	;# 
   937  0866                     	;# 
   938  0867                     	;# 
   939  0867                     	;# 
   940  0868                     	;# 
   941  0869                     	;# 
   942  086A                     	;# 
   943  086B                     	;# 
   944  086C                     	;# 
   945  086D                     	;# 
   946  086E                     	;# 
   947  086F                     	;# 
   948  0FE4                     	;# 
   949  0FE5                     	;# 
   950  0FE6                     	;# 
   951  0FE7                     	;# 
   952  0FE8                     	;# 
   953  0FE9                     	;# 
   954  0FEA                     	;# 
   955  0FEB                     	;# 
   956  0FED                     	;# 
   957  0FEE                     	;# 
   958  0FEF                     	;# 
   959  0000                     	;# 
   960  0001                     	;# 
   961  0002                     	;# 
   962  0003                     	;# 
   963  0004                     	;# 
   964  0005                     	;# 
   965  0006                     	;# 
   966  0007                     	;# 
   967  0008                     	;# 
   968  0009                     	;# 
   969  000A                     	;# 
   970  000B                     	;# 
   971  000C                     	;# 
   972  000D                     	;# 
   973  000E                     	;# 
   974  0010                     	;# 
   975  0011                     	;# 
   976  0012                     	;# 
   977  0013                     	;# 
   978  0014                     	;# 
   979  0015                     	;# 
   980  0016                     	;# 
   981  0016                     	;# 
   982  0017                     	;# 
   983  0018                     	;# 
   984  0019                     	;# 
   985  001A                     	;# 
   986  001B                     	;# 
   987  001C                     	;# 
   988  008C                     	;# 
   989  008D                     	;# 
   990  008E                     	;# 
   991  0090                     	;# 
   992  0091                     	;# 
   993  0092                     	;# 
   994  0093                     	;# 
   995  0094                     	;# 
   996  0095                     	;# 
   997  0096                     	;# 
   998  0097                     	;# 
   999  0098                     	;# 
  1000  0099                     	;# 
  1001  009A                     	;# 
  1002  009B                     	;# 
  1003  009B                     	;# 
  1004  009C                     	;# 
  1005  009D                     	;# 
  1006  009E                     	;# 
  1007  009F                     	;# 
  1008  010C                     	;# 
  1009  010D                     	;# 
  1010  010E                     	;# 
  1011  0111                     	;# 
  1012  0112                     	;# 
  1013  0113                     	;# 
  1014  0114                     	;# 
  1015  0115                     	;# 
  1016  0116                     	;# 
  1017  0117                     	;# 
  1018  0118                     	;# 
  1019  0119                     	;# 
  1020  011A                     	;# 
  1021  011B                     	;# 
  1022  011C                     	;# 
  1023  011D                     	;# 
  1024  011D                     	;# 
  1025  011D                     	;# 
  1026  011E                     	;# 
  1027  011F                     	;# 
  1028  018C                     	;# 
  1029  018D                     	;# 
  1030  0191                     	;# 
  1031  0191                     	;# 
  1032  0192                     	;# 
  1033  0193                     	;# 
  1034  0193                     	;# 
  1035  0193                     	;# 
  1036  0194                     	;# 
  1037  0195                     	;# 
  1038  0196                     	;# 
  1039  0197                     	;# 
  1040  0199                     	;# 
  1041  0199                     	;# 
  1042  0199                     	;# 
  1043  019A                     	;# 
  1044  019A                     	;# 
  1045  019A                     	;# 
  1046  019B                     	;# 
  1047  019B                     	;# 
  1048  019B                     	;# 
  1049  019B                     	;# 
  1050  019B                     	;# 
  1051  019C                     	;# 
  1052  019C                     	;# 
  1053  019C                     	;# 
  1054  019D                     	;# 
  1055  019D                     	;# 
  1056  019D                     	;# 
  1057  019E                     	;# 
  1058  019E                     	;# 
  1059  019E                     	;# 
  1060  019F                     	;# 
  1061  019F                     	;# 
  1062  019F                     	;# 
  1063  019F                     	;# 
  1064  019F                     	;# 
  1065  020C                     	;# 
  1066  020D                     	;# 
  1067  020E                     	;# 
  1068  0210                     	;# 
  1069  0211                     	;# 
  1070  0211                     	;# 
  1071  0212                     	;# 
  1072  0212                     	;# 
  1073  0213                     	;# 
  1074  0213                     	;# 
  1075  0214                     	;# 
  1076  0214                     	;# 
  1077  0215                     	;# 
  1078  0215                     	;# 
  1079  0215                     	;# 
  1080  0215                     	;# 
  1081  0216                     	;# 
  1082  0216                     	;# 
  1083  0217                     	;# 
  1084  0217                     	;# 
  1085  028C                     	;# 
  1086  028D                     	;# 
  1087  028E                     	;# 
  1088  0291                     	;# 
  1089  0291                     	;# 
  1090  0292                     	;# 
  1091  0293                     	;# 
  1092  0298                     	;# 
  1093  0298                     	;# 
  1094  0299                     	;# 
  1095  029A                     	;# 
  1096  030C                     	;# 
  1097  030D                     	;# 
  1098  030E                     	;# 
  1099  0311                     	;# 
  1100  0311                     	;# 
  1101  0312                     	;# 
  1102  0313                     	;# 
  1103  038C                     	;# 
  1104  038D                     	;# 
  1105  038E                     	;# 
  1106  0390                     	;# 
  1107  0391                     	;# 
  1108  0392                     	;# 
  1109  0393                     	;# 
  1110  0394                     	;# 
  1111  0395                     	;# 
  1112  0396                     	;# 
  1113  0397                     	;# 
  1114  0398                     	;# 
  1115  0399                     	;# 
  1116  039D                     	;# 
  1117  039E                     	;# 
  1118  039F                     	;# 
  1119  0511                     	;# 
  1120  0513                     	;# 
  1121  051A                     	;# 
  1122  0811                     	;# 
  1123  0812                     	;# 
  1124  0813                     	;# 
  1125  0814                     	;# 
  1126  0815                     	;# 
  1127  0816                     	;# 
  1128  0817                     	;# 
  1129  0818                     	;# 
  1130  0819                     	;# 
  1131  081A                     	;# 
  1132  081B                     	;# 
  1133  081C                     	;# 
  1134  081D                     	;# 
  1135  081E                     	;# 
  1136  081F                     	;# 
  1137  0820                     	;# 
  1138  0821                     	;# 
  1139  0821                     	;# 
  1140  0822                     	;# 
  1141  0823                     	;# 
  1142  0823                     	;# 
  1143  0824                     	;# 
  1144  0825                     	;# 
  1145  0825                     	;# 
  1146  0826                     	;# 
  1147  0827                     	;# 
  1148  0827                     	;# 
  1149  0828                     	;# 
  1150  0829                     	;# 
  1151  082A                     	;# 
  1152  082B                     	;# 
  1153  082C                     	;# 
  1154  082D                     	;# 
  1155  082E                     	;# 
  1156  082F                     	;# 
  1157  0831                     	;# 
  1158  0832                     	;# 
  1159  0833                     	;# 
  1160  0834                     	;# 
  1161  0835                     	;# 
  1162  0836                     	;# 
  1163  0837                     	;# 
  1164  0838                     	;# 
  1165  0839                     	;# 
  1166  083A                     	;# 
  1167  083B                     	;# 
  1168  083C                     	;# 
  1169  083D                     	;# 
  1170  083E                     	;# 
  1171  083F                     	;# 
  1172  0840                     	;# 
  1173  0841                     	;# 
  1174  0841                     	;# 
  1175  0842                     	;# 
  1176  0843                     	;# 
  1177  0843                     	;# 
  1178  0844                     	;# 
  1179  0845                     	;# 
  1180  0845                     	;# 
  1181  0846                     	;# 
  1182  0847                     	;# 
  1183  0847                     	;# 
  1184  0848                     	;# 
  1185  0849                     	;# 
  1186  084A                     	;# 
  1187  084B                     	;# 
  1188  084C                     	;# 
  1189  084D                     	;# 
  1190  084E                     	;# 
  1191  084F                     	;# 
  1192  0851                     	;# 
  1193  0852                     	;# 
  1194  0853                     	;# 
  1195  0854                     	;# 
  1196  0855                     	;# 
  1197  0856                     	;# 
  1198  0857                     	;# 
  1199  0858                     	;# 
  1200  0859                     	;# 
  1201  085A                     	;# 
  1202  085B                     	;# 
  1203  085C                     	;# 
  1204  085D                     	;# 
  1205  085E                     	;# 
  1206  085F                     	;# 
  1207  0860                     	;# 
  1208  0861                     	;# 
  1209  0861                     	;# 
  1210  0862                     	;# 
  1211  0863                     	;# 
  1212  0863                     	;# 
  1213  0864                     	;# 
  1214  0865                     	;# 
  1215  0865                     	;# 
  1216  0866                     	;# 
  1217  0867                     	;# 
  1218  0867                     	;# 
  1219  0868                     	;# 
  1220  0869                     	;# 
  1221  086A                     	;# 
  1222  086B                     	;# 
  1223  086C                     	;# 
  1224  086D                     	;# 
  1225  086E                     	;# 
  1226  086F                     	;# 
  1227  0FE4                     	;# 
  1228  0FE5                     	;# 
  1229  0FE6                     	;# 
  1230  0FE7                     	;# 
  1231  0FE8                     	;# 
  1232  0FE9                     	;# 
  1233  0FEA                     	;# 
  1234  0FEB                     	;# 
  1235  0FED                     	;# 
  1236  0FEE                     	;# 
  1237  0FEF                     	;# 
  1238                           
  1239                           	psect	idataBANK1
  1240  0000'                    __pidataBANK1:
  1241                           
  1242                           ;initializer for _count
  1243  0000' 3400               	retlw	0
  1244  0001' 3404               	retlw	4
  1245                           
  1246                           ;initializer for _cmode
  1247  0002' 3401               	retlw	1
  1248                           
  1249                           	psect	idataBANK3
  1250  0000'                    __pidataBANK3:
  1251                           
  1252                           ;initializer for _CC_disc_ki
  1253  0000' 346F               	retlw	111
  1254  0001' 3412               	retlw	18
  1255  0002' 3483               	retlw	131
  1256  0003' 343A               	retlw	58
  1257                           
  1258                           ;initializer for _CC_disc_kp
  1259  0004' 34A6               	retlw	166
  1260  0005' 349B               	retlw	155
  1261  0006' 34C4               	retlw	196
  1262  0007' 343B               	retlw	59
  1263                           
  1264                           ;initializer for _CC_char_ki
  1265  0008' 340A               	retlw	10
  1266  0009' 34D7               	retlw	215
  1267  000A' 3423               	retlw	35
  1268  000B' 343B               	retlw	59
  1269                           
  1270                           ;initializer for _CC_char_kp
  1271  000C' 34F4               	retlw	244
  1272  000D' 34FD               	retlw	253
  1273  000E' 3454               	retlw	84
  1274  000F' 343C               	retlw	60
  1275                           
  1276                           ;initializer for _state
  1277  0010' 3401               	retlw	1
  1278                           
  1279                           ;initializer for _cell_count
  1280  0011' 3401               	retlw	1
  1281                           
  1282                           ;initializer for _SECF
  1283  0012' 3401               	retlw	1
  1284                           
  1285                           	psect	idataBANK4
  1286  0000'                    __pidataBANK4:
  1287                           
  1288                           ;initializer for _CV_kd
  1289  0000' 340A               	retlw	10
  1290  0001' 34D7               	retlw	215
  1291  0002' 34A3               	retlw	163
  1292  0003' 343C               	retlw	60
  1293                           
  1294                           ;initializer for _CV_ki
  1295  0004' 346F               	retlw	111
  1296  0005' 3412               	retlw	18
  1297  0006' 3403               	retlw	3
  1298  0007' 343A               	retlw	58
  1299                           
  1300                           ;initializer for _CV_kp
  1301  0008' 34FA               	retlw	250
  1302  0009' 34ED               	retlw	237
  1303  000A' 34EB               	retlw	235
  1304  000B' 343A               	retlw	58
  1305  0016                     _TMR1L	set	22
  1306  0017                     _TMR1H	set	23
  1307  006D                     _RB5	set	109
  1308  006C                     _RB4	set	108
  1309  006B                     _RB3	set	107
  1310  006A                     _RB2	set	106
  1311  008C                     _TXIF	set	140
  1312  0088                     _TMR1IF	set	136
  1313  005F                     _GIE	set	95
  1314  005E                     _PEIE	set	94
  1315  008D                     _RCIF	set	141
  1316  0075                     _RC5	set	117
  1317  0074                     _RC4	set	116
  1318  0073                     _RC3	set	115
  1319  00C5                     _T1CKPS1	set	197
  1320  00C4                     _T1CKPS0	set	196
  1321  00C7                     _TMR1CS1	set	199
  1322  00C6                     _TMR1CS0	set	198
  1323  00CF                     _TMR1GE	set	207
  1324  00C0                     _TMR1ON	set	192
  1325  00C3                     _T1OSCEN	set	195
  1326  00C2                     _nT1SYNC	set	194
  1327  009C                     _ADRESH	set	156
  1328  009B                     _ADRESL	set	155
  1329  009F                     _ADCON2bits	set	159
  1330  009E                     _ADCON1bits	set	158
  1331  009D                     _ADCON0bits	set	157
  1332  0099                     _OSCCONbits	set	153
  1333  0488                     _TMR1IE	set	1160
  1334  04E9                     _GO_nDONE	set	1257
  1335  048C                     _TXIE	set	1164
  1336  048D                     _RCIE	set	1165
  1337  0465                     _TRISA5	set	1125
  1338  0468                     _TRISB0	set	1128
  1339  0469                     _TRISB1	set	1129
  1340  0463                     _TRISA3	set	1123
  1341  0472                     _TRISC2	set	1138
  1342  046D                     _TRISB5	set	1133
  1343  046C                     _TRISB4	set	1132
  1344  046B                     _TRISB3	set	1131
  1345  046A                     _TRISB2	set	1130
  1346  0475                     _TRISC5	set	1141
  1347  0474                     _TRISC4	set	1140
  1348  0473                     _TRISC3	set	1139
  1349  04AF                     _nWPUEN	set	1199
  1350  08E9                     _RXSEL	set	2281
  1351  08EA                     _TXSEL	set	2282
  1352  019D                     _RC1STAbits	set	413
  1353  019A                     _TX1REG	set	410
  1354  0199                     _RC1REG	set	409
  1355  019B                     _SP1BRGL	set	411
  1356  019C                     _SP1BRGH	set	412
  1357  0CE9                     _OERR	set	3305
  1358  0CEE                     _RX9	set	3310
  1359  0CF6                     _TX9	set	3318
  1360  0CEC                     _CREN	set	3308
  1361  0CF5                     _TXEN	set	3317
  1362  0CEF                     _SPEN	set	3311
  1363  0CF4                     _SYNC	set	3316
  1364  0CFB                     _BRG16	set	3323
  1365  0CF2                     _BRGH	set	3314
  1366  0C65                     _ANSA5	set	3173
  1367  0C68                     _ANSB0	set	3176
  1368  0C69                     _ANSB1	set	3177
  1369  0C63                     _ANSA3	set	3171
  1370  0C6D                     _ANSB5	set	3181
  1371  0C6C                     _ANSB4	set	3180
  1372  0C6B                     _ANSB3	set	3179
  1373  0C6A                     _ANSB2	set	3178
  1374  1065                     _WPUA5	set	4197
  1375  1068                     _WPUB0	set	4200
  1376  1069                     _WPUB1	set	4201
  1377  1063                     _WPUA3	set	4195
  1378  1072                     _WPUC2	set	4210
  1379  106D                     _WPUB5	set	4205
  1380  106C                     _WPUB4	set	4204
  1381  106B                     _WPUB3	set	4203
  1382  106A                     _WPUB2	set	4202
  1383  1075                     _WPUC5	set	4213
  1384  1074                     _WPUC4	set	4212
  1385  1073                     _WPUC3	set	4211
  1386  1083                     _WPUE3	set	4227
  1387  0811                     _PSMC1CONbits	set	2065
  1388  0821                     _PSMC1PHL	set	2081
  1389  0822                     _PSMC1PHH	set	2082
  1390  0823                     _PSMC1DCL	set	2083
  1391  0824                     _PSMC1DCH	set	2084
  1392  0825                     _PSMC1PRL	set	2085
  1393  0826                     _PSMC1PRH	set	2086
  1394  0814                     _PSMC1CLK	set	2068
  1395  0812                     _PSMC1MDL	set	2066
  1396  0811                     _PSMC1CON	set	2065
  1397  40D8                     _P1DCST	set	16600
  1398  40D0                     _P1PHST	set	16592
  1399  40E0                     _P1PRST	set	16608
  1400  40AA                     _P1OEC	set	16554
  1401  40B2                     _P1POLC	set	16562
  1402  4172                     _P1STRC	set	16754
  1403                           
  1404                           	psect	stringtext1
  1405  0000'                    __pstringtext1:
  1406  0000'                    STR_2:
  1407  0000' 3454               	retlw	84	;'T'
  1408  0001' 3449               	retlw	73	;'I'
  1409  0002' 344D               	retlw	77	;'M'
  1410  0003' 3449               	retlw	73	;'I'
  1411  0004' 344E               	retlw	78	;'N'
  1412  0005' 3447               	retlw	71	;'G'
  1413  0006' 345F               	retlw	95	;'_'
  1414  0007' 3445               	retlw	69	;'E'
  1415  0008' 3452               	retlw	82	;'R'
  1416  0009' 3452               	retlw	82	;'R'
  1417  000A' 344F               	retlw	79	;'O'
  1418  000B' 3452               	retlw	82	;'R'
  1419  000C' 3400               	retlw	0
  1420                           
  1421                           	psect	stringtext2
  1422  0000'                    __pstringtext2:
  1423  0000'                    STR_1:
  1424  0000' 344F               	retlw	79	;'O'
  1425  0001' 3445               	retlw	69	;'E'
  1426  0002' 3452               	retlw	82	;'R'
  1427  0003' 3452               	retlw	82	;'R'
  1428  0004' 345F               	retlw	95	;'_'
  1429  0005' 3445               	retlw	69	;'E'
  1430  0006' 3452               	retlw	82	;'R'
  1431  0007' 3452               	retlw	82	;'R'
  1432  0008' 344F               	retlw	79	;'O'
  1433  0009' 3452               	retlw	82	;'R'
  1434  000A' 3400               	retlw	0
  1435                           
  1436                           	psect	stringtext3
  1437  0000'                    __pstringtext3:
  1438                           
  1439                           	psect	cinit
  1440  0000'                    start_initialization:	
  1441                           ; #config settings
  1442                           
  1443  0000'                    __initialization:
  1444                           
  1445                           ; Initialize objects allocated to BANK1
  1446  0000' 3000'              	movlw	low __pidataBANK1
  1447  0001' 0084               	movwf	4
  1448  0002' 3000'              	movlw	(high __pidataBANK1)| (0+128)
  1449  0003' 0085               	movwf	5
  1450  0004' 3000'              	movlw	low __pdataBANK1
  1451  0005' 0086               	movwf	6
  1452  0006' 3000'              	movlw	high __pdataBANK1
  1453  0007' 0087               	movwf	7
  1454  0008' 3003               	movlw	3
  1455  0009' 3180' 2000' 3180'  	fcall	init_ram
  1456                           
  1457                           ; Initialize objects allocated to BANK3
  1458  000C' 3000'              	movlw	low __pidataBANK3
  1459  000D' 0084               	movwf	4
  1460  000E' 3000'              	movlw	(high __pidataBANK3)| (0+128)
  1461  000F' 0085               	movwf	5
  1462  0010' 3000'              	movlw	low __pdataBANK3
  1463  0011' 0086               	movwf	6
  1464  0012' 3000'              	movlw	high __pdataBANK3
  1465  0013' 0087               	movwf	7
  1466  0014' 3013               	movlw	19
  1467  0015' 3180' 2000' 3180'  	fcall	init_ram
  1468                           
  1469                           ; Initialize objects allocated to BANK4
  1470  0018' 3000'              	movlw	low __pidataBANK4
  1471  0019' 0084               	movwf	4
  1472  001A' 3000'              	movlw	(high __pidataBANK4)| (0+128)
  1473  001B' 0085               	movwf	5
  1474  001C' 3000'              	movlw	low __pdataBANK4
  1475  001D' 0086               	movwf	6
  1476  001E' 3000'              	movlw	high __pdataBANK4
  1477  001F' 0087               	movwf	7
  1478  0020' 300C               	movlw	12
  1479  0021' 3180' 2000' 3180'  	fcall	init_ram
  1480                           
  1481                           ; Clear objects allocated to BANK1
  1482  0024' 3000'              	movlw	low __pbssBANK1
  1483  0025' 0084               	movwf	4
  1484  0026' 3000'              	movlw	high __pbssBANK1
  1485  0027' 0085               	movwf	5
  1486  0028' 3018               	movlw	24
  1487  0029' 3180' 2000' 3180'  	fcall	clear_ram0
  1488                           
  1489                           ; Clear objects allocated to BANK3
  1490  002C' 3000'              	movlw	low __pbssBANK3
  1491  002D' 0084               	movwf	4
  1492  002E' 3000'              	movlw	high __pbssBANK3
  1493  002F' 0085               	movwf	5
  1494  0030' 3020               	movlw	32
  1495  0031' 3180' 2000' 3180'  	fcall	clear_ram0
  1496                           
  1497                           ; Clear objects allocated to BANK4
  1498  0034' 3000'              	movlw	low __pbssBANK4
  1499  0035' 0084               	movwf	4
  1500  0036' 3000'              	movlw	high __pbssBANK4
  1501  0037' 0085               	movwf	5
  1502  0038' 303C               	movlw	60
  1503  0039' 3180' 2000' 3180'  	fcall	clear_ram0
  1504                           
  1505                           ; Clear objects allocated to BANK5
  1506  003C' 3000'              	movlw	low __pbssBANK5
  1507  003D' 0084               	movwf	4
  1508  003E' 3000'              	movlw	high __pbssBANK5
  1509  003F' 0085               	movwf	5
  1510  0040' 3031               	movlw	49
  1511  0041' 3180' 2000'        	fcall	clear_ram0
  1512  0043'                    end_of_initialization:	
  1513                           ;End of C runtime variable initialization code
  1514                           
  1515  0043'                    __end_of__initialization:
  1516  0043' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1517  0044' 0020               	movlb	0
  1518  0045' 3180' 2800'        	ljmp	_main	;jump to C main() function
  1519                           
  1520                           	psect	bssBANK1
  1521  0000'                    __pbssBANK1:
  1522  0000'                    _er:
  1523  0000'                    	ds	4
  1524  0004'                    _iacum:
  1525  0004'                    	ds	3
  1526  0007'                    _vacum:
  1527  0007'                    	ds	3
  1528  000A'                    _iref:
  1529  000A'                    	ds	2
  1530  000C'                    _i:
  1531  000C'                    	ds	2
  1532  000E'                    _v:
  1533  000E'                    	ds	2
  1534  0010'                    _conv:
  1535  0010'                    	ds	1
  1536  0011'                    _counter_state:
  1537  0011'                    	ds	1
  1538  0012'                    _cell_max:
  1539  0012'                    	ds	1
  1540  0013'                    _SRXF:
  1541  0013'                    	ds	1
  1542  0014'                    _start:
  1543  0014'                    	ds	1
  1544  0015'                    _converter_configuration_ptr:
  1545  0015'                    	ds	1
  1546  0016'                    _test_configuration_ptr:
  1547  0016'                    	ds	1
  1548  0017'                    _basic_configuration_ptr:
  1549  0017'                    	ds	1
  1550                           
  1551                           	psect	dataBANK1
  1552  0000'                    __pdataBANK1:
  1553  0000'                    _count:
  1554  0000'                    	ds	2
  1555  0002'                    _cmode:
  1556  0002'                    	ds	1
  1557                           
  1558                           	psect	bssBANK3
  1559  0000'                    __pbssBANK3:
  1560  0000'                    _pidt:
  1561  0000'                    	ds	4
  1562  0004'                    _qavg:
  1563  0004'                    	ds	4
  1564  0008'                    _timeout:
  1565  0008'                    	ds	2
  1566  000A'                    _second:
  1567  000A'                    	ds	2
  1568  000C'                    _vmax:
  1569  000C'                    	ds	2
  1570  000E'                    _iavg:
  1571  000E'                    	ds	2
  1572  0010'                    _vavg:
  1573  0010'                    	ds	2
  1574  0012'                    _EOC_variable:
  1575  0012'                    	ds	2
  1576  0014'                    _wait_count:
  1577  0014'                    	ds	2
  1578  0016'                    _i_disc:
  1579  0016'                    	ds	2
  1580  0018'                    _i_char:
  1581  0018'                    	ds	2
  1582  001A'                    _capacity:
  1583  001A'                    	ds	2
  1584  001C'                    _CC_char_disc_kd:
  1585  001C'                    	ds	1
  1586  001D'                    _repetition_counter:
  1587  001D'                    	ds	1
  1588  001E'                    _dc_res_count:
  1589  001E'                    	ds	1
  1590  001F'                    _log_data_ptr:
  1591  001F'                    	ds	1
  1592                           
  1593                           	psect	dataBANK3
  1594  0000'                    __pdataBANK3:
  1595  0000'                    _CC_disc_ki:
  1596  0000'                    	ds	4
  1597  0004'                    _CC_disc_kp:
  1598  0004'                    	ds	4
  1599  0008'                    _CC_char_ki:
  1600  0008'                    	ds	4
  1601  000C'                    _CC_char_kp:
  1602  000C'                    	ds	4
  1603  0010'                    _state:
  1604  0010'                    	ds	1
  1605  0011'                    _cell_count:
  1606  0011'                    	ds	1
  1607  0012'                    _SECF:
  1608  0012'                    	ds	1
  1609                           
  1610                           	psect	bssBANK4
  1611  0000'                    __pbssBANK4:
  1612  0000'                    _vref:
  1613  0000'                    	ds	4
  1614  0004'                    _kd:
  1615  0004'                    	ds	4
  1616  0008'                    _ki:
  1617  0008'                    	ds	4
  1618  000C'                    _kp:
  1619  000C'                    	ds	4
  1620  0010'                    _pidi:
  1621  0010'                    	ds	4
  1622  0014'                    _EOPD_capacity:
  1623  0014'                    	ds	2
  1624  0016'                    _EOD_voltage:
  1625  0016'                    	ds	2
  1626  0018'                    _EOPC_variable:
  1627  0018'                    	ds	2
  1628  001A'                    _test_configuration:
  1629  001A'                    	ds	17
  1630  002B'                    _basic_configuration:
  1631  002B'                    	ds	17
  1632                           
  1633                           	psect	dataBANK4
  1634  0000'                    __pdataBANK4:
  1635  0000'                    _CV_kd:
  1636  0000'                    	ds	4
  1637  0004'                    _CV_ki:
  1638  0004'                    	ds	4
  1639  0008'                    _CV_kp:
  1640  0008'                    	ds	4
  1641                           
  1642                           	psect	bssBANK5
  1643  0000'                    __pbssBANK5:
  1644  0000'                    command_interpreter@F5995:
  1645  0000'                    	ds	20
  1646  0014'                    _log_data:
  1647  0014'                    	ds	15
  1648  0023'                    _converter_configuration:
  1649  0023'                    	ds	14
  1650                           
  1651                           	psect	inittext
  1652  0000'                    init_ram:
  1653  0000' 00FE               	movwf	126
  1654  0001'                    initloop:
  1655  0001' 0012               	moviw fsr0++
  1656  0002' 001E               	movwi fsr1++
  1657  0003' 0BFE               	decfsz	126,f
  1658  0004' 2800'              	goto	initloop
  1659  0005' 3400               	retlw	0
  1660                           
  1661                           	psect	clrtext
  1662  0000'                    clear_ram0:	
  1663                           ;	Called with FSR0 containing the base address, and
  1664                           ;	WREG with the size to clear
  1665                           
  1666  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
  1667  0001'                    clrloop0:
  1668  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
  1669  0002' 3101               	addfsr 0,1
  1670  0003' 0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1671  0004' 2800'              	goto	clrloop0	;have we reached the end yet?
  1672  0005' 3400               	retlw	0	;all done for this memory range, return
  1673                           
  1674                           	psect	cstackBANK3
  1675  0000'                    __pcstackBANK3:
  1676  0000'                    ??___fladd:
  1677                           
  1678                           ; 1 bytes @ 0x0
  1679  0000'                    	ds	8
  1680  0008'                    ?___fltol:
  1681  0008'                    ___fltol@f1:	
  1682                           ; 4 bytes @ 0x8
  1683                           
  1684                           
  1685                           ; 4 bytes @ 0x8
  1686  0008'                    	ds	4
  1687  000C'                    ??___fltol:
  1688                           
  1689                           ; 1 bytes @ 0xC
  1690  000C'                    	ds	4
  1691  0010'                    ?_cc_cv_mode:
  1692  0010'                    set_DC@dc:	
  1693                           ; 1 bytes @ 0x10
  1694                           
  1695  0010'                    cc_cv_mode@current_voltage:	
  1696                           ; 2 bytes @ 0x10
  1697                           
  1698  0010'                    _scaling$1609:	
  1699                           ; 2 bytes @ 0x10
  1700                           
  1701                           
  1702                           ; 4 bytes @ 0x10
  1703  0010'                    	ds	2
  1704  0012'                    ??_converter_settings:
  1705  0012'                    ??_fDISCHARGE:	
  1706                           ; 1 bytes @ 0x12
  1707                           
  1708  0012'                    ??_fCHARGE:	
  1709                           ; 1 bytes @ 0x12
  1710                           
  1711  0012'                    ??_fDC_res:	
  1712                           ; 1 bytes @ 0x12
  1713                           
  1714  0012'                    ??_initialize:	
  1715                           ; 1 bytes @ 0x12
  1716                           
  1717  0012'                    cc_cv_mode@reference_voltage:	
  1718                           ; 1 bytes @ 0x12
  1719                           
  1720                           
  1721                           ; 2 bytes @ 0x12
  1722  0012'                    	ds	2
  1723  0014'                    cc_cv_mode@CC_mode_status:
  1724  0014'                    _scaling$1608:	
  1725                           ; 1 bytes @ 0x14
  1726                           
  1727                           
  1728                           ; 4 bytes @ 0x14
  1729  0014'                    	ds	2
  1730  0016'                    _fDC_res$1610:
  1731  0016'                    _converter_settings$1611:	
  1732                           ; 4 bytes @ 0x16
  1733                           
  1734                           
  1735                           ; 4 bytes @ 0x16
  1736  0016'                    	ds	4
  1737  001A'                    ??_state_machine:
  1738                           
  1739                           ; 1 bytes @ 0x1A
  1740  001A'                    	ds	2
  1741  001C'                    ??_main:
  1742                           
  1743                           ; 1 bytes @ 0x1C
  1744  001C'                    	ds	1
  1745                           
  1746                           	psect	cstackBANK2
  1747  0000'                    __pcstackBANK2:
  1748  0000'                    ??_Cell_OFF:
  1749  0000'                    ??_UART_send_byte:	
  1750                           ; 1 bytes @ 0x0
  1751                           
  1752  0000'                    ??_getTime:	
  1753                           ; 1 bytes @ 0x0
  1754                           
  1755  0000'                    ??_interrupt_enable:	
  1756                           ; 1 bytes @ 0x0
  1757                           
  1758  0000'                    ??_Cell_ON:	
  1759                           ; 1 bytes @ 0x0
  1760                           
  1761  0000'                    ?__Umul8_16:	
  1762                           ; 1 bytes @ 0x0
  1763                           
  1764  0000'                    ?___xxtofl:	
  1765                           ; 2 bytes @ 0x0
  1766                           
  1767  0000'                    UART_send_byte@byte:	
  1768                           ; 4 bytes @ 0x0
  1769                           
  1770  0000'                    __Umul8_16@multiplicand:	
  1771                           ; 1 bytes @ 0x0
  1772                           
  1773  0000'                    ___xxtofl@val:	
  1774                           ; 1 bytes @ 0x0
  1775                           
  1776                           
  1777                           ; 4 bytes @ 0x0
  1778  0000'                    	ds	1
  1779  0001'                    ?_UART_send_some_bytes:
  1780  0001'                    UART_send_some_bytes@data:	
  1781                           ; 1 bytes @ 0x1
  1782                           
  1783                           
  1784                           ; 2 bytes @ 0x1
  1785  0001'                    	ds	1
  1786  0002'                    ??__Umul8_16:
  1787                           
  1788                           ; 1 bytes @ 0x2
  1789  0002'                    	ds	1
  1790  0003'                    ??_UART_send_some_bytes:
  1791  0003'                    UART_send_some_bytes@length:	
  1792                           ; 1 bytes @ 0x3
  1793                           
  1794                           
  1795                           ; 1 bytes @ 0x3
  1796  0003'                    	ds	1
  1797  0004'                    ??___xxtofl:
  1798  0004'                    __Umul8_16@product:	
  1799                           ; 1 bytes @ 0x4
  1800                           
  1801                           
  1802                           ; 2 bytes @ 0x4
  1803  0004'                    	ds	2
  1804  0006'                    __Umul8_16@word_mpld:
  1805                           
  1806                           ; 2 bytes @ 0x6
  1807  0006'                    	ds	2
  1808  0008'                    __Umul8_16@multiplier:
  1809  0008'                    ___xxtofl@sign:	
  1810                           ; 1 bytes @ 0x8
  1811                           
  1812                           
  1813                           ; 1 bytes @ 0x8
  1814  0008'                    	ds	1
  1815  0009'                    ___xxtofl@exp:
  1816                           
  1817                           ; 1 bytes @ 0x9
  1818  0009'                    	ds	1
  1819  000A'                    ___xxtofl@arg:
  1820                           
  1821                           ; 4 bytes @ 0xA
  1822  000A'                    	ds	4
  1823  000E'                    ?___flge:
  1824  000E'                    ?___fldiv:	
  1825                           ; 1 bit 
  1826                           
  1827  000E'                    ___flge@ff1:	
  1828                           ; 4 bytes @ 0xE
  1829                           
  1830  000E'                    ___fldiv@a:	
  1831                           ; 4 bytes @ 0xE
  1832                           
  1833                           
  1834                           ; 4 bytes @ 0xE
  1835  000E'                    	ds	4
  1836  0012'                    ___flge@ff2:
  1837  0012'                    ___fldiv@b:	
  1838                           ; 4 bytes @ 0x12
  1839                           
  1840                           
  1841                           ; 4 bytes @ 0x12
  1842  0012'                    	ds	4
  1843  0016'                    ??___flge:
  1844  0016'                    ??___fldiv:	
  1845                           ; 1 bytes @ 0x16
  1846                           
  1847                           
  1848                           ; 1 bytes @ 0x16
  1849  0016'                    	ds	5
  1850  001B'                    ___fldiv@rem:
  1851                           
  1852                           ; 4 bytes @ 0x1B
  1853  001B'                    	ds	4
  1854  001F'                    ___fldiv@sign:
  1855                           
  1856                           ; 1 bytes @ 0x1F
  1857  001F'                    	ds	1
  1858  0020'                    ___fldiv@new_exp:
  1859                           
  1860                           ; 2 bytes @ 0x20
  1861  0020'                    	ds	2
  1862  0022'                    ___fldiv@grs:
  1863                           
  1864                           ; 4 bytes @ 0x22
  1865  0022'                    	ds	4
  1866  0026'                    ___fldiv@bexp:
  1867                           
  1868                           ; 1 bytes @ 0x26
  1869  0026'                    	ds	1
  1870  0027'                    ___fldiv@aexp:
  1871                           
  1872                           ; 1 bytes @ 0x27
  1873  0027'                    	ds	1
  1874  0028'                    ?___flmul:
  1875  0028'                    ___flmul@b:	
  1876                           ; 4 bytes @ 0x28
  1877                           
  1878                           
  1879                           ; 4 bytes @ 0x28
  1880  0028'                    	ds	4
  1881  002C'                    ___flmul@a:
  1882                           
  1883                           ; 4 bytes @ 0x2C
  1884  002C'                    	ds	4
  1885  0030'                    ??___flmul:
  1886                           
  1887                           ; 1 bytes @ 0x30
  1888  0030'                    	ds	5
  1889  0035'                    ___flmul@sign:
  1890                           
  1891                           ; 1 bytes @ 0x35
  1892  0035'                    	ds	1
  1893  0036'                    ___flmul@aexp:
  1894                           
  1895                           ; 1 bytes @ 0x36
  1896  0036'                    	ds	1
  1897  0037'                    ___flmul@grs:
  1898                           
  1899                           ; 4 bytes @ 0x37
  1900  0037'                    	ds	4
  1901  003B'                    ___flmul@bexp:
  1902                           
  1903                           ; 1 bytes @ 0x3B
  1904  003B'                    	ds	1
  1905  003C'                    ___flmul@prod:
  1906                           
  1907                           ; 4 bytes @ 0x3C
  1908  003C'                    	ds	4
  1909  0040'                    ___flmul@temp:
  1910                           
  1911                           ; 2 bytes @ 0x40
  1912  0040'                    	ds	2
  1913  0042'                    ?___fladd:
  1914  0042'                    ___fladd@b:	
  1915                           ; 4 bytes @ 0x42
  1916                           
  1917                           
  1918                           ; 4 bytes @ 0x42
  1919  0042'                    	ds	4
  1920  0046'                    ___fladd@a:
  1921                           
  1922                           ; 4 bytes @ 0x46
  1923  0046'                    	ds	4
  1924  004A'                    ___fladd@signs:
  1925                           
  1926                           ; 1 bytes @ 0x4A
  1927  004A'                    	ds	1
  1928  004B'                    ___fladd@aexp:
  1929                           
  1930                           ; 1 bytes @ 0x4B
  1931  004B'                    	ds	1
  1932  004C'                    ___fladd@bexp:
  1933                           
  1934                           ; 1 bytes @ 0x4C
  1935  004C'                    	ds	1
  1936  004D'                    ___fladd@grs:
  1937                           
  1938                           ; 1 bytes @ 0x4D
  1939  004D'                    	ds	1
  1940  004E'                    ___fltol@sign1:
  1941                           
  1942                           ; 1 bytes @ 0x4E
  1943  004E'                    	ds	1
  1944  004F'                    ___fltol@exp1:
  1945                           
  1946                           ; 1 bytes @ 0x4F
  1947  004F'                    	ds	1
  1948  0050'                    ??_set_DC:
  1949  0050'                    ??_fIDLE:	
  1950                           ; 1 bytes @ 0x50
  1951                           
  1952  0050'                    ??_fWAIT:	
  1953                           ; 1 bytes @ 0x50
  1954                           
  1955  0050'                    ??_fNEXTSTATE:	
  1956                           ; 1 bytes @ 0x50
  1957                           
  1958  0050'                    ??_fNEXTCELL:	
  1959                           ; 1 bytes @ 0x50
  1960                           
  1961  0050'                    ??_fNEXTREPETITION:	
  1962                           ; 1 bytes @ 0x50
  1963                           
  1964  0050'                    ??_cc_cv_mode:	
  1965                           ; 1 bytes @ 0x50
  1966                           
  1967  0050'                    ??_scaling:	
  1968                           ; 1 bytes @ 0x50
  1969                           
  1970  0050'                    ??_log_control:	
  1971                           ; 1 bytes @ 0x50
  1972                           
  1973                           
  1974                           	psect	cstackBANK1
  1975  0000'                    __pcstackBANK1:	
  1976                           ; 1 bytes @ 0x50
  1977                           
  1978  0000'                    ?i1___fltol:
  1979  0000'                    i1___fltol@f1:	
  1980                           ; 4 bytes @ 0x0
  1981                           
  1982                           
  1983                           ; 4 bytes @ 0x0
  1984  0000'                    	ds	4
  1985  0004'                    ??i1___fltol:
  1986                           
  1987                           ; 1 bytes @ 0x4
  1988  0004'                    	ds	4
  1989  0008'                    i1___fltol@sign1:
  1990                           
  1991                           ; 1 bytes @ 0x8
  1992  0008'                    	ds	1
  1993  0009'                    i1___fltol@exp1:
  1994                           
  1995                           ; 1 bytes @ 0x9
  1996  0009'                    	ds	1
  1997  000A'                    i1set_DC@dc:
  1998                           
  1999                           ; 2 bytes @ 0xA
  2000  000A'                    	ds	2
  2001  000C'                    ??i1_converter_settings:
  2002                           
  2003                           ; 1 bytes @ 0xC
  2004  000C'                    	ds	4
  2005  0010'                    i1_converter_settings$1748:
  2006                           
  2007                           ; 4 bytes @ 0x10
  2008  0010'                    	ds	4
  2009  0014'                    ??_command_interpreter:
  2010                           
  2011                           ; 1 bytes @ 0x14
  2012  0014'                    	ds	3
  2013  0017'                    command_interpreter@data:
  2014                           
  2015                           ; 20 bytes @ 0x17
  2016  0017'                    	ds	20
  2017  002B'                    command_interpreter@checksum:
  2018                           
  2019                           ; 2 bytes @ 0x2B
  2020  002B'                    	ds	2
  2021  002D'                    command_interpreter@test:
  2022                           
  2023                           ; 1 bytes @ 0x2D
  2024  002D'                    	ds	1
  2025  002E'                    command_interpreter@operation:
  2026                           
  2027                           ; 1 bytes @ 0x2E
  2028  002E'                    	ds	1
  2029  002F'                    command_interpreter@calc_checksum:
  2030                           
  2031                           ; 2 bytes @ 0x2F
  2032  002F'                    	ds	2
  2033  0031'                    command_interpreter@code:
  2034                           
  2035                           ; 1 bytes @ 0x31
  2036  0031'                    	ds	1
  2037  0032'                    command_interpreter@length:
  2038                           
  2039                           ; 1 bytes @ 0x32
  2040  0032'                    	ds	1
  2041  0033'                    ??_ISR:
  2042                           
  2043                           ; 1 bytes @ 0x33
  2044  0033'                    	ds	2
  2045                           
  2046                           	psect	cstackCOMMON
  2047  0000'                    __pcstackCOMMON:
  2048  0000'                    ?i1___flge:
  2049  0000'                    ?_Cell_OFF:	
  2050                           ; 1 bit 
  2051                           
  2052  0000'                    ?_set_DC:	
  2053                           ; 1 bytes @ 0x0
  2054                           
  2055  0000'                    ?_UART_get_byte:	
  2056                           ; 1 bytes @ 0x0
  2057                           
  2058  0000'                    ??_UART_get_byte:	
  2059                           ; 1 bytes @ 0x0
  2060                           
  2061  0000'                    ?_UART_get_some_bytes:	
  2062                           ; 1 bytes @ 0x0
  2063                           
  2064  0000'                    ?_UART_send_byte:	
  2065                           ; 1 bytes @ 0x0
  2066                           
  2067  0000'                    ?_put_data_into_structure:	
  2068                           ; 1 bytes @ 0x0
  2069                           
  2070  0000'                    ?_converter_settings:	
  2071                           ; 1 bytes @ 0x0
  2072                           
  2073  0000'                    ?_getTime:	
  2074                           ; 1 bytes @ 0x0
  2075                           
  2076  0000'                    ?_state_machine:	
  2077                           ; 1 bytes @ 0x0
  2078                           
  2079  0000'                    ?_fIDLE:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082  0000'                    ?_fDISCHARGE:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085  0000'                    ?_fCHARGE:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088  0000'                    ?_fDC_res:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091  0000'                    ?_fWAIT:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094  0000'                    ?_fNEXTSTATE:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097  0000'                    ?_fNEXTCELL:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100  0000'                    ?_fNEXTREPETITION:	
  2101                           ; 1 bytes @ 0x0
  2102                           
  2103  0000'                    ?_initialize:	
  2104                           ; 1 bytes @ 0x0
  2105                           
  2106  0000'                    ?_command_interpreter:	
  2107                           ; 1 bytes @ 0x0
  2108                           
  2109  0000'                    ?_control_loop:	
  2110                           ; 1 bytes @ 0x0
  2111                           
  2112  0000'                    ?_scaling:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115  0000'                    ?_log_control:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118  0000'                    ?_timing:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121  0000'                    ??_timing:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124  0000'                    ?_calculate_avg:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127  0000'                    ??_calculate_avg:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130  0000'                    ?_interrupt_enable:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133  0000'                    ?_UART_send_char:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136  0000'                    ??_UART_send_char:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139  0000'                    ?_Cell_ON:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142  0000'                    ?_main:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145  0000'                    ?_ISR:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148  0000'                    ?i1_set_DC:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151  0000'                    ?i1_UART_send_byte:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154  0000'                    ??i1_UART_send_byte:	
  2155                           ; 1 bytes @ 0x0
  2156                           
  2157  0000'                    ?i1_Cell_ON:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160  0000'                    ??i1_Cell_ON:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163  0000'                    ?i1_getTime:	
  2164                           ; 1 bytes @ 0x0
  2165                           
  2166  0000'                    ??i1_getTime:	
  2167                           ; 1 bytes @ 0x0
  2168                           
  2169  0000'                    ?i1_converter_settings:	
  2170                           ; 1 bytes @ 0x0
  2171                           
  2172  0000'                    ?_calculate_checksum:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175  0000'                    ?_abs:	
  2176                           ; 2 bytes @ 0x0
  2177                           
  2178  0000'                    ?_read_ADC:	
  2179                           ; 2 bytes @ 0x0
  2180                           
  2181  0000'                    ?i1__Umul8_16:	
  2182                           ; 2 bytes @ 0x0
  2183                           
  2184  0000'                    ?i1___xxtofl:	
  2185                           ; 2 bytes @ 0x0
  2186                           
  2187  0000'                    UART_send_char@bt:	
  2188                           ; 4 bytes @ 0x0
  2189                           
  2190  0000'                    UART_get_some_bytes@data:	
  2191                           ; 1 bytes @ 0x0
  2192                           
  2193  0000'                    calculate_checksum@length:	
  2194                           ; 1 bytes @ 0x0
  2195                           
  2196  0000'                    put_data_into_structure@data:	
  2197                           ; 1 bytes @ 0x0
  2198                           
  2199  0000'                    i1UART_send_byte@byte:	
  2200                           ; 1 bytes @ 0x0
  2201                           
  2202  0000'                    i1__Umul8_16@multiplicand:	
  2203                           ; 1 bytes @ 0x0
  2204                           
  2205  0000'                    read_ADC@channel:	
  2206                           ; 1 bytes @ 0x0
  2207                           
  2208  0000'                    abs@a:	
  2209                           ; 2 bytes @ 0x0
  2210                           
  2211  0000'                    i1___flge@ff1:	
  2212                           ; 2 bytes @ 0x0
  2213                           
  2214  0000'                    i1___xxtofl@val:	
  2215                           ; 4 bytes @ 0x0
  2216                           
  2217                           
  2218                           ; 4 bytes @ 0x0
  2219  0000'                    	ds	1
  2220  0001'                    ??_UART_get_some_bytes:
  2221  0001'                    ?_UART_send_header:	
  2222                           ; 1 bytes @ 0x1
  2223                           
  2224  0001'                    ?_UART_send_string:	
  2225                           ; 1 bytes @ 0x1
  2226                           
  2227  0001'                    ?i1_UART_send_some_bytes:	
  2228                           ; 1 bytes @ 0x1
  2229                           
  2230  0001'                    UART_send_header@operation:	
  2231                           ; 1 bytes @ 0x1
  2232                           
  2233  0001'                    put_data_into_structure@structure:	
  2234                           ; 1 bytes @ 0x1
  2235                           
  2236  0001'                    calculate_checksum@data:	
  2237                           ; 1 bytes @ 0x1
  2238                           
  2239  0001'                    UART_send_string@st_pt:	
  2240                           ; 2 bytes @ 0x1
  2241                           
  2242  0001'                    i1UART_send_some_bytes@data:	
  2243                           ; 2 bytes @ 0x1
  2244                           
  2245                           
  2246                           ; 2 bytes @ 0x1
  2247  0001'                    	ds	1
  2248  0002'                    ??_put_data_into_structure:
  2249  0002'                    ??_abs:	
  2250                           ; 1 bytes @ 0x2
  2251                           
  2252  0002'                    ??_read_ADC:	
  2253                           ; 1 bytes @ 0x2
  2254                           
  2255  0002'                    ??i1__Umul8_16:	
  2256                           ; 1 bytes @ 0x2
  2257                           
  2258  0002'                    UART_send_header@code:	
  2259                           ; 1 bytes @ 0x2
  2260                           
  2261  0002'                    UART_get_some_bytes@length:	
  2262                           ; 1 bytes @ 0x2
  2263                           
  2264                           
  2265                           ; 1 bytes @ 0x2
  2266  0002'                    	ds	1
  2267  0003'                    ??_calculate_checksum:
  2268  0003'                    ??_UART_send_header:	
  2269                           ; 1 bytes @ 0x3
  2270                           
  2271  0003'                    ??_UART_send_string:	
  2272                           ; 1 bytes @ 0x3
  2273                           
  2274  0003'                    ??i1_UART_send_some_bytes:	
  2275                           ; 1 bytes @ 0x3
  2276                           
  2277  0003'                    UART_send_header@start:	
  2278                           ; 1 bytes @ 0x3
  2279                           
  2280  0003'                    put_data_into_structure@length:	
  2281                           ; 1 bytes @ 0x3
  2282                           
  2283  0003'                    i1UART_send_some_bytes@length:	
  2284                           ; 1 bytes @ 0x3
  2285                           
  2286                           
  2287                           ; 1 bytes @ 0x3
  2288  0003'                    	ds	1
  2289  0004'                    ??i1___xxtofl:
  2290  0004'                    i1__Umul8_16@product:	
  2291                           ; 1 bytes @ 0x4
  2292                           
  2293  0004'                    i1___flge@ff2:	
  2294                           ; 2 bytes @ 0x4
  2295                           
  2296                           
  2297                           ; 4 bytes @ 0x4
  2298  0004'                    	ds	1
  2299  0005'                    calculate_checksum@code:
  2300                           
  2301                           ; 1 bytes @ 0x5
  2302  0005'                    	ds	1
  2303  0006'                    calculate_checksum@result:
  2304  0006'                    i1__Umul8_16@word_mpld:	
  2305                           ; 2 bytes @ 0x6
  2306                           
  2307                           
  2308                           ; 2 bytes @ 0x6
  2309  0006'                    	ds	2
  2310  0008'                    ??i1___flge:
  2311  0008'                    i1__Umul8_16@multiplier:	
  2312                           ; 1 bytes @ 0x8
  2313                           
  2314  0008'                    i1___xxtofl@sign:	
  2315                           ; 1 bytes @ 0x8
  2316                           
  2317                           
  2318                           ; 1 bytes @ 0x8
  2319  0008'                    	ds	1
  2320  0009'                    i1___xxtofl@exp:
  2321  0009'                    read_ADC@ad_res:	
  2322                           ; 1 bytes @ 0x9
  2323                           
  2324                           
  2325                           ; 2 bytes @ 0x9
  2326  0009'                    	ds	1
  2327  000A'                    i1___xxtofl@arg:
  2328                           
  2329                           ; 4 bytes @ 0xA
  2330  000A'                    	ds	4
  2331  000E'                    ??_pid:
  2332  000E'                    ??_control_loop:	
  2333                           ; 1 bytes @ 0xE
  2334                           
  2335  000E'                    ??___flsub:	
  2336                           ; 1 bytes @ 0xE
  2337                           
  2338  000E'                    ??i1_set_DC:	
  2339                           ; 1 bytes @ 0xE
  2340                           
  2341                           
  2342                           	psect	cstackBANK0
  2343  0000'                    __pcstackBANK0:	
  2344                           ; 1 bytes @ 0xE
  2345                           
  2346  0000'                    ?i1___fladd:
  2347  0000'                    i1___fladd@b:	
  2348                           ; 4 bytes @ 0x0
  2349                           
  2350                           
  2351                           ; 4 bytes @ 0x0
  2352  0000'                    	ds	4
  2353  0004'                    i1___fladd@a:
  2354                           
  2355                           ; 4 bytes @ 0x4
  2356  0004'                    	ds	4
  2357  0008'                    ??i1___fladd:
  2358                           
  2359                           ; 1 bytes @ 0x8
  2360  0008'                    	ds	8
  2361  0010'                    i1___fladd@signs:
  2362                           
  2363                           ; 1 bytes @ 0x10
  2364  0010'                    	ds	1
  2365  0011'                    i1___fladd@aexp:
  2366                           
  2367                           ; 1 bytes @ 0x11
  2368  0011'                    	ds	1
  2369  0012'                    i1___fladd@bexp:
  2370                           
  2371                           ; 1 bytes @ 0x12
  2372  0012'                    	ds	1
  2373  0013'                    i1___fladd@grs:
  2374                           
  2375                           ; 1 bytes @ 0x13
  2376  0013'                    	ds	1
  2377  0014'                    ?___flsub:
  2378  0014'                    ___flsub@a:	
  2379                           ; 4 bytes @ 0x14
  2380                           
  2381                           
  2382                           ; 4 bytes @ 0x14
  2383  0014'                    	ds	4
  2384  0018'                    ___flsub@b:
  2385                           
  2386                           ; 4 bytes @ 0x18
  2387  0018'                    	ds	4
  2388  001C'                    ?i1___flmul:
  2389  001C'                    i1___flmul@b:	
  2390                           ; 4 bytes @ 0x1C
  2391                           
  2392                           
  2393                           ; 4 bytes @ 0x1C
  2394  001C'                    	ds	4
  2395  0020'                    i1___flmul@a:
  2396                           
  2397                           ; 4 bytes @ 0x20
  2398  0020'                    	ds	4
  2399  0024'                    ??i1___flmul:
  2400                           
  2401                           ; 1 bytes @ 0x24
  2402  0024'                    	ds	5
  2403  0029'                    i1___flmul@sign:
  2404                           
  2405                           ; 1 bytes @ 0x29
  2406  0029'                    	ds	1
  2407  002A'                    i1___flmul@aexp:
  2408                           
  2409                           ; 1 bytes @ 0x2A
  2410  002A'                    	ds	1
  2411  002B'                    i1___flmul@grs:
  2412                           
  2413                           ; 4 bytes @ 0x2B
  2414  002B'                    	ds	4
  2415  002F'                    i1___flmul@bexp:
  2416                           
  2417                           ; 1 bytes @ 0x2F
  2418  002F'                    	ds	1
  2419  0030'                    i1___flmul@prod:
  2420                           
  2421                           ; 4 bytes @ 0x30
  2422  0030'                    	ds	4
  2423  0034'                    i1___flmul@temp:
  2424                           
  2425                           ; 2 bytes @ 0x34
  2426  0034'                    	ds	2
  2427  0036'                    ?_pid:
  2428  0036'                    ?i1___fldiv:	
  2429                           ; 1 bytes @ 0x36
  2430                           
  2431  0036'                    pid@feedback:	
  2432                           ; 4 bytes @ 0x36
  2433                           
  2434  0036'                    i1___fldiv@a:	
  2435                           ; 4 bytes @ 0x36
  2436                           
  2437                           
  2438                           ; 4 bytes @ 0x36
  2439  0036'                    	ds	4
  2440  003A'                    pid@setpoint:
  2441  003A'                    i1___fldiv@b:	
  2442                           ; 4 bytes @ 0x3A
  2443                           
  2444                           
  2445                           ; 4 bytes @ 0x3A
  2446  003A'                    	ds	4
  2447  003E'                    ??i1___fldiv:
  2448  003E'                    _pid$1605:	
  2449                           ; 1 bytes @ 0x3E
  2450                           
  2451                           
  2452                           ; 4 bytes @ 0x3E
  2453  003E'                    	ds	4
  2454  0042'                    _pid$1746:
  2455                           
  2456                           ; 4 bytes @ 0x42
  2457  0042'                    	ds	1
  2458  0043'                    i1___fldiv@rem:
  2459                           
  2460                           ; 4 bytes @ 0x43
  2461  0043'                    	ds	3
  2462  0046'                    _pid$1747:
  2463                           
  2464                           ; 4 bytes @ 0x46
  2465  0046'                    	ds	1
  2466  0047'                    i1___fldiv@sign:
  2467                           
  2468                           ; 1 bytes @ 0x47
  2469  0047'                    	ds	1
  2470  0048'                    i1___fldiv@new_exp:
  2471                           
  2472                           ; 2 bytes @ 0x48
  2473  0048'                    	ds	2
  2474  004A'                    i1___fldiv@grs:
  2475                           
  2476                           ; 4 bytes @ 0x4A
  2477  004A'                    	ds	4
  2478  004E'                    i1___fldiv@bexp:
  2479                           
  2480                           ; 1 bytes @ 0x4E
  2481  004E'                    	ds	1
  2482  004F'                    i1___fldiv@aexp:
  2483                           
  2484                           ; 1 bytes @ 0x4F
  2485  004F'                    	ds	1
  2486                           
  2487                           	psect	maintext
  2488  0000'                    __pmaintext:	
  2489 ;;
  2490 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2491 ;;
  2492 ;; *************** function _main *****************
  2493 ;; Defined at:
  2494 ;;		line 24 in file "main.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : B1F/0
  2505 ;;		On exit  : 1F/3
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2510 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  2511 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  2512 ;;Total ram usage:        1 bytes
  2513 ;; Hardware stack levels required when called: 13
  2514 ;; This function calls:
  2515 ;;		_cc_cv_mode
  2516 ;;		_initialize
  2517 ;;		_interrupt_enable
  2518 ;;		_log_control
  2519 ;;		_scaling
  2520 ;;		_state_machine
  2521 ;; This function is called by:
  2522 ;;		Startup code after reset
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526  0000'                    _main:	
  2527                           ;psect for function _main
  2528                           
  2529                           
  2530                           ;main.c: 26:     initialize();
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2534  0000' 3180' 2000' 3180'  	fcall	_initialize
  2535                           
  2536                           ;main.c: 27:     _delay((unsigned long)((10)*(32000000/4000.0)));
  2537  0003' 3068               	movlw	104
  2538  0004' 0023               	movlb	3	; select bank3
  2539  0005' 0080'              	movwf	??_main^(0+384)
  2540  0006' 30E4               	movlw	228
  2541  0007'                    u7387:
  2542  0007' 0B89               	decfsz	9,f
  2543  0008' 2800'              	goto	u7387
  2544  0009' 0B80'              	decfsz	??_main^(0+384),f
  2545  000A' 2800'              	goto	u7387
  2546  000B' 0000               	nop
  2547                           
  2548                           ;main.c: 28:     interrupt_enable();
  2549  000C' 3180' 2000' 3180'  	fcall	_interrupt_enable
  2550  000F'                    l7477:
  2551                           
  2552                           ;main.c: 30:     {;main.c: 31:         if (SECF)
  2553  000F' 0023               	movlb	3	; select bank3
  2554  0010' 0800'              	movf	_SECF^(0+384),w
  2555  0011' 1903               	btfsc	3,2
  2556  0012' 2800'              	goto	l7477
  2557                           
  2558                           ;main.c: 32:         {;main.c: 33:             scaling();
  2559  0013' 3180' 2000' 3180'  	fcall	_scaling
  2560                           
  2561                           ;main.c: 34:             state_machine();
  2562  0016' 3180' 2000' 3180'  	fcall	_state_machine
  2563                           
  2564                           ;main.c: 35:             log_control();
  2565  0019' 3180' 2000' 3180'  	fcall	_log_control
  2566                           
  2567                           ;main.c: 36:             if (basic_configuration.version == 1){
  2568  001C' 0024               	movlb	4	; select bank4
  2569  001D' 0300'              	decf	_basic_configuration^(0+512),w
  2570  001E' 1D03               	btfss	3,2
  2571  001F' 2800'              	goto	l7489
  2572                           
  2573                           ;main.c: 37:                 cc_cv_mode(vavg, basic_configuration.const_voltage, cmode);
  2574  0020' 0023               	movlb	3	; select bank3
  2575  0021' 0800'              	movf	(_vavg+1)^(0+384),w
  2576  0022' 0080'              	movwf	(cc_cv_mode@current_voltage+1)^(0+384)
  2577  0023' 0800'              	movf	_vavg^(0+384),w
  2578  0024' 0080'              	movwf	cc_cv_mode@current_voltage^(0+384)
  2579  0025' 0024               	movlb	4	; select bank4
  2580  0026' 0801'              	movf	((_basic_configuration+1)^(0+512)+1),w
  2581  0027' 0023               	movlb	3	; select bank3
  2582  0028' 0080'              	movwf	(cc_cv_mode@reference_voltage+1)^(0+384)
  2583  0029' 0024               	movlb	4	; select bank4
  2584  002A' 0801'              	movf	(_basic_configuration^(0+512)+1),w
  2585  002B' 0023               	movlb	3	; select bank3
  2586  002C' 0080'              	movwf	cc_cv_mode@reference_voltage^(0+384)
  2587  002D' 0021               	movlb	1	; select bank1
  2588  002E' 0800'              	movf	_cmode^(0+128),w
  2589  002F' 0023               	movlb	3	; select bank3
  2590  0030' 0080'              	movwf	cc_cv_mode@CC_mode_status^(0+384)
  2591  0031' 3180' 2000' 3180'  	fcall	_cc_cv_mode
  2592  0034'                    l7489:
  2593                           
  2594                           ;main.c: 39:             SECF = 0;
  2595  0034' 0023               	movlb	3	; select bank3
  2596  0035' 0180'              	clrf	_SECF^(0+384)
  2597  0036' 2800'              	goto	l7477
  2598  0037'                    __end_of_main:
  2599                           
  2600                           	psect	text1
  2601  0000'                    __ptext1:	
  2602 ;; *************** function _state_machine *****************
  2603 ;; Defined at:
  2604 ;;		line 18 in file "state_machine_b.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;		None
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 18/3
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2620 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  2621 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  2622 ;;Total ram usage:        2 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; Hardware stack levels required when called: 12
  2625 ;; This function calls:
  2626 ;;		_fCHARGE
  2627 ;;		_fDC_res
  2628 ;;		_fDISCHARGE
  2629 ;;		_fIDLE
  2630 ;;		_fWAIT
  2631 ;; This function is called by:
  2632 ;;		_main
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636  0000'                    _state_machine:	
  2637                           ;psect for function _state_machine
  2638                           
  2639                           
  2640                           ;state_machine_b.c: 20:     switch(state){
  2641                           
  2642                           ;incstack = 0
  2643                           ; Regs used in _state_machine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2644  0000' 2800'              	goto	l6955
  2645  0001'                    l6939:
  2646                           
  2647                           ;state_machine_b.c: 23:                 fIDLE();
  2648  0001' 3180' 2000'        	fcall	_fIDLE
  2649                           
  2650                           ;state_machine_b.c: 24:                 break;
  2651  0003' 0008               	return
  2652  0004'                    l6941:
  2653                           
  2654                           ;state_machine_b.c: 28:                 fDISCHARGE();
  2655  0004' 3180' 2000'        	fcall	_fDISCHARGE
  2656                           
  2657                           ;state_machine_b.c: 29:                 break;
  2658  0006' 0008               	return
  2659  0007'                    l6945:
  2660                           
  2661                           ;state_machine_b.c: 36:                 fCHARGE();
  2662  0007' 3180' 2000'        	fcall	_fCHARGE
  2663                           
  2664                           ;state_machine_b.c: 37:                 break;
  2665  0009' 0008               	return
  2666  000A'                    l6949:
  2667                           
  2668                           ;state_machine_b.c: 44:                 fDC_res();
  2669  000A' 3180' 2000'        	fcall	_fDC_res
  2670                           
  2671                           ;state_machine_b.c: 45:                 break;
  2672  000C' 0008               	return
  2673  000D'                    l6951:
  2674                           
  2675                           ;state_machine_b.c: 49:                 fWAIT();
  2676  000D' 3180' 2000'        	fcall	_fWAIT
  2677                           
  2678                           ;state_machine_b.c: 50:                 break;
  2679  000F' 0008               	return
  2680  0010'                    l6955:
  2681  0010' 0023               	movlb	3	; select bank3
  2682  0011' 0800'              	movf	_state^(0+384),w
  2683  0012' 0080'              	movwf	??_state_machine^(0+384)
  2684  0013' 0181'              	clrf	(??_state_machine^(0+384)+1)
  2685                           
  2686                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2687                           ; Switch size 1, requested type "simple"
  2688                           ; Number of cases is 1, Range of values is 0 to 0
  2689                           ; switch strategies available:
  2690                           ; Name         Instructions Cycles
  2691                           ; simple_byte            4     3 (average)
  2692                           ; direct_byte            8     6 (fixed)
  2693                           ; jumptable            260     6 (fixed)
  2694                           ;	Chosen strategy is simple_byte
  2695  0014' 0800'              	movf	(??_state_machine+1)^(0+384),w
  2696  0015' 3A00               	xorlw	0	; case 0
  2697  0016' 1903               	skipnz
  2698  0017' 2800'              	goto	l7749
  2699  0018' 2800'              	goto	l818
  2700  0019'                    l7749:
  2701                           
  2702                           ; Switch size 1, requested type "simple"
  2703                           ; Number of cases is 7, Range of values is 1 to 13
  2704                           ; switch strategies available:
  2705                           ; Name         Instructions Cycles
  2706                           ; simple_byte           22    12 (average)
  2707                           ; direct_byte           35     9 (fixed)
  2708                           ; jumptable            263     9 (fixed)
  2709                           ;	Chosen strategy is simple_byte
  2710  0019' 0800'              	movf	??_state_machine^(0+384),w
  2711  001A' 3A01               	xorlw	1	; case 1
  2712  001B' 1903               	skipnz
  2713  001C' 2800'              	goto	l6939
  2714  001D' 3A02               	xorlw	2	; case 3
  2715  001E' 1903               	skipnz
  2716  001F' 2800'              	goto	l6945
  2717  0020' 3A06               	xorlw	6	; case 5
  2718  0021' 1903               	skipnz
  2719  0022' 2800'              	goto	l6945
  2720  0023' 3A02               	xorlw	2	; case 7
  2721  0024' 1903               	skipnz
  2722  0025' 2800'              	goto	l6941
  2723  0026' 3A0E               	xorlw	14	; case 9
  2724  0027' 1903               	skipnz
  2725  0028' 2800'              	goto	l6941
  2726  0029' 3A02               	xorlw	2	; case 11
  2727  002A' 1903               	skipnz
  2728  002B' 2800'              	goto	l6949
  2729  002C' 3A06               	xorlw	6	; case 13
  2730  002D' 1903               	skipnz
  2731  002E' 2800'              	goto	l6951
  2732  002F' 2800'              	goto	l818
  2733  0030'                    l818:
  2734  0030' 0008               	return
  2735  0031'                    __end_of_state_machine:
  2736                           
  2737                           	psect	text2
  2738  0000'                    __ptext2:	
  2739 ;; *************** function _fWAIT *****************
  2740 ;; Defined at:
  2741 ;;		line 162 in file "state_machine_b.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 18/3
  2752 ;;		On exit  : 1D/1
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; Hardware stack levels required when called: 11
  2762 ;; This function calls:
  2763 ;;		_Cell_OFF
  2764 ;;		_fNEXTSTATE
  2765 ;;		_set_DC
  2766 ;; This function is called by:
  2767 ;;		_state_machine
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771  0000'                    _fWAIT:	
  2772                           ;psect for function _fWAIT
  2773                           
  2774                           
  2775                           ;state_machine_b.c: 164:     { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50.0; set_DC(
      +                          ); Cell_OFF();};
  2776                           
  2777                           ;incstack = 0
  2778                           ; Regs used in _fWAIT: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2779  0000' 0020               	movlb	0	; select bank0
  2780  0001' 118E               	bcf	14,3	;volatile
  2781  0002' 120E               	bcf	14,4	;volatile
  2782  0003' 0021               	movlb	1	; select bank1
  2783  0004' 0180'              	clrf	_conv^(0+128)
  2784  0005' 0020               	movlb	0	; select bank0
  2785  0006' 128E               	bcf	14,5	;volatile
  2786  0007' 3042               	movlw	66
  2787  0008' 0023               	movlb	3	; select bank3
  2788  0009' 0080'              	movwf	(_pidt+3)^(0+384)
  2789  000A' 3048               	movlw	72
  2790  000B' 0080'              	movwf	(_pidt+2)^(0+384)
  2791  000C' 3000               	movlw	0
  2792  000D' 0080'              	movwf	(_pidt+1)^(0+384)
  2793  000E' 3000               	movlw	0
  2794  000F' 0080'              	movwf	_pidt^(0+384)
  2795  0010' 3180' 2000' 3180'  	fcall	_set_DC
  2796  0013' 3180' 2000' 3180'  	fcall	_Cell_OFF
  2797                           
  2798                           ;state_machine_b.c: 165:     second = wait_count;
  2799  0016' 0023               	movlb	3	; select bank3
  2800  0017' 0800'              	movf	(_wait_count+1)^(0+384),w
  2801  0018' 0080'              	movwf	(_second+1)^(0+384)
  2802  0019' 0800'              	movf	_wait_count^(0+384),w
  2803  001A' 0080'              	movwf	_second^(0+384)
  2804                           
  2805                           ;state_machine_b.c: 166:     if (wait_count) wait_count--;
  2806  001B' 0800'              	movf	_wait_count^(0+384),w
  2807  001C' 0400'              	iorwf	(_wait_count+1)^(0+384),w
  2808  001D' 1903               	btfsc	3,2
  2809  001E' 2800'              	goto	l6253
  2810  001F' 3001               	movlw	1
  2811  0020' 0280'              	subwf	_wait_count^(0+384),f
  2812  0021' 3000               	movlw	0
  2813  0022' 3B80'              	subwfb	(_wait_count+1)^(0+384),f
  2814  0023'                    l6253:
  2815                           
  2816                           ;state_machine_b.c: 167:     if(!wait_count) fNEXTSTATE();
  2817  0023' 0800'              	movf	_wait_count^(0+384),w
  2818  0024' 0400'              	iorwf	(_wait_count+1)^(0+384),w
  2819  0025' 1D03               	btfss	3,2
  2820  0026' 0008               	return
  2821  0027' 3180' 2000'        	fcall	_fNEXTSTATE
  2822  0029' 0008               	return
  2823  002A'                    __end_of_fWAIT:
  2824                           
  2825                           	psect	text3
  2826  0000'                    __ptext3:	
  2827 ;; *************** function _fNEXTSTATE *****************
  2828 ;; Defined at:
  2829 ;;		line 170 in file "state_machine_b.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 1F/3
  2840 ;;		On exit  : 1D/1
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;Total ram usage:        0 bytes
  2848 ;; Hardware stack levels used: 1
  2849 ;; Hardware stack levels required when called: 10
  2850 ;; This function calls:
  2851 ;;		_converter_settings
  2852 ;;		_fNEXTCELL
  2853 ;; This function is called by:
  2854 ;;		_fWAIT
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858  0000'                    _fNEXTSTATE:	
  2859                           ;psect for function _fNEXTSTATE
  2860                           
  2861                           
  2862                           ;state_machine_b.c: 171:     counter_state = counter_state + 1;
  2863                           
  2864                           ;incstack = 0
  2865                           ; Regs used in _fNEXTSTATE: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2866  0000' 0021               	movlb	1	; select bank1
  2867  0001' 0800'              	movf	_counter_state^(0+128),w
  2868  0002' 3E01               	addlw	1
  2869  0003' 0080'              	movwf	_counter_state^(0+128)
  2870                           
  2871                           ;state_machine_b.c: 172:     if ((counter_state <= test_configuration.number_of_states) 
      +                          && (test_configuration.order_of_states[counter_state] != 0x00)){
  2872  0004' 0800'              	movf	_counter_state^(0+128),w
  2873  0005' 0024               	movlb	4	; select bank4
  2874  0006' 0201'              	subwf	(_test_configuration^(0+512)+1),w
  2875  0007' 1C03               	skipc
  2876  0008' 2800'              	goto	l5501
  2877  0009' 0021               	movlb	1	; select bank1
  2878  000A' 0800'              	movf	_counter_state^(0+128),w
  2879  000B' 3E00'              	addlw	(low ((_test_configuration| (0+512)+7)))& (0+255)
  2880  000C' 0086               	movwf	6
  2881  000D' 3002               	movlw	2	; select bank4/5
  2882  000E' 0087               	movwf	7
  2883  000F' 0801               	movf	1,w
  2884  0010' 1903               	btfsc	3,2
  2885  0011' 2800'              	goto	l5501
  2886                           
  2887                           ;state_machine_b.c: 173:         state = test_configuration.order_of_states[counter_stat
      +                          e];
  2888  0012' 0800'              	movf	_counter_state^(0+128),w
  2889  0013' 3E00'              	addlw	(low ((_test_configuration| (0+512)+7)))& (0+255)
  2890  0014' 0086               	movwf	6
  2891  0015' 3002               	movlw	2	; select bank4/5
  2892  0016' 0087               	movwf	7
  2893  0017' 0801               	movf	1,w
  2894  0018' 0023               	movlb	3	; select bank3
  2895  0019' 0080'              	movwf	_state^(0+384)
  2896                           
  2897                           ;state_machine_b.c: 174:         converter_settings();
  2898  001A' 3180' 2000'        	fcall	_converter_settings
  2899                           
  2900                           ;state_machine_b.c: 175:     }
  2901  001C' 0008               	return
  2902  001D'                    l5501:
  2903                           
  2904                           ;state_machine_b.c: 177:         fNEXTCELL();
  2905  001D' 3180' 2000'        	fcall	_fNEXTCELL
  2906  001F' 0008               	return
  2907  0020'                    __end_of_fNEXTSTATE:
  2908                           
  2909                           	psect	text4
  2910  0000'                    __ptext4:	
  2911 ;; *************** function _fNEXTCELL *****************
  2912 ;; Defined at:
  2913 ;;		line 181 in file "state_machine_b.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 1A/4
  2924 ;;		On exit  : 1D/1
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2931 ;;Total ram usage:        0 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; Hardware stack levels required when called: 9
  2934 ;; This function calls:
  2935 ;;		_converter_settings
  2936 ;;		_fNEXTREPETITION
  2937 ;; This function is called by:
  2938 ;;		_fNEXTSTATE
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942  0000'                    _fNEXTCELL:	
  2943                           ;psect for function _fNEXTCELL
  2944                           
  2945                           
  2946                           ;state_machine_b.c: 182:     counter_state = 0;
  2947                           
  2948                           ;incstack = 0
  2949                           ; Regs used in _fNEXTCELL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2950  0000' 0021               	movlb	1	; select bank1
  2951  0001' 0180'              	clrf	_counter_state^(0+128)
  2952                           
  2953                           ;state_machine_b.c: 183:     if (cell_count < test_configuration.number_of_cells){
  2954  0002' 0024               	movlb	4	; select bank4
  2955  0003' 0800'              	movf	_test_configuration^(0+512),w
  2956  0004' 0023               	movlb	3	; select bank3
  2957  0005' 0200'              	subwf	_cell_count^(0+384),w
  2958  0006' 1803               	skipnc
  2959  0007' 2800'              	goto	l5201
  2960                           
  2961                           ;state_machine_b.c: 184:         state = test_configuration.order_of_states[counter_stat
      +                          e];
  2962  0008' 0021               	movlb	1	; select bank1
  2963  0009' 0800'              	movf	_counter_state^(0+128),w
  2964  000A' 3E00'              	addlw	(low ((_test_configuration| (0+512)+7)))& (0+255)
  2965  000B' 0086               	movwf	6
  2966  000C' 3002               	movlw	2	; select bank4/5
  2967  000D' 0087               	movwf	7
  2968  000E' 0801               	movf	1,w
  2969  000F' 0023               	movlb	3	; select bank3
  2970  0010' 0080'              	movwf	_state^(0+384)
  2971                           
  2972                           ;state_machine_b.c: 185:         cell_count = cell_count + 1;
  2973  0011' 0800'              	movf	_cell_count^(0+384),w
  2974  0012' 3E01               	addlw	1
  2975  0013' 0080'              	movwf	_cell_count^(0+384)
  2976                           
  2977                           ;state_machine_b.c: 186:         converter_settings();
  2978  0014' 3180' 2000'        	fcall	_converter_settings
  2979                           
  2980                           ;state_machine_b.c: 187:     }
  2981  0016' 0008               	return
  2982  0017'                    l5201:
  2983                           
  2984                           ;state_machine_b.c: 189:         fNEXTREPETITION();
  2985  0017' 3180' 2000'        	fcall	_fNEXTREPETITION
  2986  0019' 0008               	return
  2987  001A'                    __end_of_fNEXTCELL:
  2988                           
  2989                           	psect	text5
  2990  0000'                    __ptext5:	
  2991 ;; *************** function _fNEXTREPETITION *****************
  2992 ;; Defined at:
  2993 ;;		line 193 in file "state_machine_b.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;		None
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;		None
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      void 
  3000 ;; Registers used:
  3001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3002 ;; Tracked objects:
  3003 ;;		On entry : 1F/3
  3004 ;;		On exit  : 1D/1
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3011 ;;Total ram usage:        0 bytes
  3012 ;; Hardware stack levels used: 1
  3013 ;; Hardware stack levels required when called: 8
  3014 ;; This function calls:
  3015 ;;		_converter_settings
  3016 ;; This function is called by:
  3017 ;;		_fNEXTCELL
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021  0000'                    _fNEXTREPETITION:	
  3022                           ;psect for function _fNEXTREPETITION
  3023                           
  3024                           
  3025                           ;state_machine_b.c: 194:     if (repetition_counter < test_configuration.number_of_repet
      +                          itions){
  3026                           
  3027                           ;incstack = 0
  3028                           ; Regs used in _fNEXTREPETITION: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3029  0000' 0024               	movlb	4	; select bank4
  3030  0001' 0802'              	movf	(_test_configuration^(0+512)+2),w
  3031  0002' 0023               	movlb	3	; select bank3
  3032  0003' 0200'              	subwf	_repetition_counter^(0+384),w
  3033  0004' 1803               	skipnc
  3034  0005' 2800'              	goto	l881
  3035                           
  3036                           ;state_machine_b.c: 195:         counter_state = 0;
  3037  0006' 0021               	movlb	1	; select bank1
  3038  0007' 0180'              	clrf	_counter_state^(0+128)
  3039                           
  3040                           ;state_machine_b.c: 196:         state = test_configuration.order_of_states[counter_stat
      +                          e];
  3041  0008' 0800'              	movf	_counter_state^(0+128),w
  3042  0009' 3E00'              	addlw	(low ((_test_configuration| (0+512)+7)))& (0+255)
  3043  000A' 0086               	movwf	6
  3044  000B' 3002               	movlw	2	; select bank4/5
  3045  000C' 0087               	movwf	7
  3046  000D' 0801               	movf	1,w
  3047  000E' 0023               	movlb	3	; select bank3
  3048  000F' 0080'              	movwf	_state^(0+384)
  3049                           
  3050                           ;state_machine_b.c: 197:         cell_count = 0x01;
  3051  0010' 0180'              	clrf	_cell_count^(0+384)
  3052  0011' 0A80'              	incf	_cell_count^(0+384),f
  3053                           
  3054                           ;state_machine_b.c: 198:         repetition_counter = repetition_counter + 1;
  3055  0012' 0800'              	movf	_repetition_counter^(0+384),w
  3056  0013' 3E01               	addlw	1
  3057  0014' 0080'              	movwf	_repetition_counter^(0+384)
  3058                           
  3059                           ;state_machine_b.c: 199:         converter_settings();
  3060  0015' 3180' 2000'        	fcall	_converter_settings
  3061                           
  3062                           ;state_machine_b.c: 200:         }
  3063  0017' 0008               	return
  3064  0018'                    l881:	
  3065                           ;state_machine_b.c: 201:     else{
  3066                           
  3067                           
  3068                           ;state_machine_b.c: 202:         state = IDLE;
  3069  0018' 0180'              	clrf	_state^(0+384)
  3070  0019' 0A80'              	incf	_state^(0+384),f
  3071  001A' 0008               	return
  3072  001B'                    __end_of_fNEXTREPETITION:
  3073                           
  3074                           	psect	text6
  3075  0000'                    __ptext6:	
  3076 ;; *************** function _converter_settings *****************
  3077 ;; Defined at:
  3078 ;;		line 208 in file "state_machine_b.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;		None
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;		None
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 1F/3
  3089 ;;		On exit  : 1F/1
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3093 ;;      Locals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  3094 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  3095 ;;      Totals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
  3096 ;;Total ram usage:        8 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; Hardware stack levels required when called: 7
  3099 ;; This function calls:
  3100 ;;		_Cell_ON
  3101 ;;		___fladd
  3102 ;;		___fldiv
  3103 ;;		___flmul
  3104 ;;		___fltol
  3105 ;;		___xxtofl
  3106 ;;		_set_DC
  3107 ;; This function is called by:
  3108 ;;		_fNEXTSTATE
  3109 ;;		_fNEXTCELL
  3110 ;;		_fNEXTREPETITION
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114  0000'                    _converter_settings:	
  3115                           ;psect for function _converter_settings
  3116                           
  3117                           
  3118                           ;state_machine_b.c: 211:     cmode = 1;
  3119                           
  3120                           ;incstack = 0
  3121                           ; Regs used in _converter_settings: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3122  0000' 0021               	movlb	1	; select bank1
  3123  0001' 0180'              	clrf	_cmode^(0+128)
  3124  0002' 0A80'              	incf	_cmode^(0+128),f
  3125                           
  3126                           ;state_machine_b.c: 212:     pidi = 0;
  3127  0003' 3000               	movlw	0
  3128  0004' 0024               	movlb	4	; select bank4
  3129  0005' 0080'              	movwf	(_pidi+3)^(0+512)
  3130  0006' 3000               	movlw	0
  3131  0007' 0080'              	movwf	(_pidi+2)^(0+512)
  3132  0008' 3000               	movlw	0
  3133  0009' 0080'              	movwf	(_pidi+1)^(0+512)
  3134  000A' 3000               	movlw	0
  3135  000B' 0080'              	movwf	_pidi^(0+512)
  3136                           
  3137                           ;state_machine_b.c: 213:     qavg = 0;
  3138  000C' 3000               	movlw	0
  3139  000D' 0023               	movlb	3	; select bank3
  3140  000E' 0080'              	movwf	(_qavg+3)^(0+384)
  3141  000F' 3000               	movlw	0
  3142  0010' 0080'              	movwf	(_qavg+2)^(0+384)
  3143  0011' 3000               	movlw	0
  3144  0012' 0080'              	movwf	(_qavg+1)^(0+384)
  3145  0013' 3000               	movlw	0
  3146  0014' 0080'              	movwf	_qavg^(0+384)
  3147                           
  3148                           ;state_machine_b.c: 214:     vmax = 0;
  3149  0015' 0180'              	clrf	_vmax^(0+384)
  3150  0016' 0180'              	clrf	(_vmax+1)^(0+384)
  3151                           
  3152                           ;state_machine_b.c: 215:     pidt = 50.0;
  3153  0017' 3042               	movlw	66
  3154  0018' 0080'              	movwf	(_pidt+3)^(0+384)
  3155  0019' 3048               	movlw	72
  3156  001A' 0080'              	movwf	(_pidt+2)^(0+384)
  3157  001B' 3000               	movlw	0
  3158  001C' 0080'              	movwf	(_pidt+1)^(0+384)
  3159  001D' 3000               	movlw	0
  3160  001E' 0080'              	movwf	_pidt^(0+384)
  3161                           
  3162                           ;state_machine_b.c: 216:     set_DC();
  3163  001F' 3180' 2000' 3180'  	fcall	_set_DC
  3164                           
  3165                           ;state_machine_b.c: 217:     Cell_ON();
  3166  0022' 3180' 2000' 3180'  	fcall	_Cell_ON
  3167                           
  3168                           ;state_machine_b.c: 218:     switch(state)
  3169  0025' 2800'              	goto	l5167
  3170  0026'                    l5031:
  3171                           
  3172                           ;state_machine_b.c: 221:             iref = i_char;
  3173  0026' 0800'              	movf	(_i_char+1)^(0+384),w
  3174  0027' 0021               	movlb	1	; select bank1
  3175  0028' 0080'              	movwf	(_iref+1)^(0+128)
  3176  0029' 0023               	movlb	3	; select bank3
  3177  002A' 0800'              	movf	_i_char^(0+384),w
  3178  002B' 0021               	movlb	1	; select bank1
  3179  002C' 0080'              	movwf	_iref^(0+128)
  3180                           
  3181                           ;state_machine_b.c: 222:             if(basic_configuration.version == 0x02) timeout = (
      +                          uint16_t)(((float)capacity / (float)basic_configuration.const_current_char) * 3600 * 1.1
      +                          );
  3182  002D' 3002               	movlw	2
  3183  002E' 0024               	movlb	4	; select bank4
  3184  002F' 0600'              	xorwf	_basic_configuration^(0+512),w
  3185  0030' 1D03               	btfss	3,2
  3186  0031' 2800'              	goto	l5037
  3187  0032' 0023               	movlb	3	; select bank3
  3188  0033' 0800'              	movf	_capacity^(0+384),w
  3189  0034' 0022               	movlb	2	; select bank2
  3190  0035' 0080'              	movwf	___xxtofl@val^(0+256)
  3191  0036' 0023               	movlb	3	; select bank3
  3192  0037' 0800'              	movf	(_capacity+1)^(0+384),w
  3193  0038' 0022               	movlb	2	; select bank2
  3194  0039' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  3195  003A' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  3196  003B' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  3197  003C' 3000               	movlw	0
  3198  003D' 3180' 2000' 3180'  	fcall	___xxtofl
  3199  0040' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3200  0041' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  3201  0042' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3202  0043' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  3203  0044' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3204  0045' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  3205  0046' 0800'              	movf	?___xxtofl^(0+256),w
  3206  0047' 0080'              	movwf	___fldiv@b^(0+256)
  3207  0048' 0024               	movlb	4	; select bank4
  3208  0049' 0803'              	movf	(_basic_configuration^(0+512)+3),w
  3209  004A' 0022               	movlb	2	; select bank2
  3210  004B' 0080'              	movwf	___xxtofl@val^(0+256)
  3211  004C' 0024               	movlb	4	; select bank4
  3212  004D' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
  3213  004E' 0022               	movlb	2	; select bank2
  3214  004F' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  3215  0050' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  3216  0051' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  3217  0052' 3000               	movlw	0
  3218  0053' 3180' 2000' 3180'  	fcall	___xxtofl
  3219  0056' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3220  0057' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  3221  0058' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3222  0059' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  3223  005A' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3224  005B' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  3225  005C' 0800'              	movf	?___xxtofl^(0+256),w
  3226  005D' 0080'              	movwf	___fldiv@a^(0+256)
  3227  005E' 3180' 2000' 3180'  	fcall	___fldiv
  3228  0061' 0800'              	movf	(?___fldiv+3)^(0+256),w
  3229  0062' 0080'              	movwf	(___flmul@a+3)^(0+256)
  3230  0063' 0800'              	movf	(?___fldiv+2)^(0+256),w
  3231  0064' 0080'              	movwf	(___flmul@a+2)^(0+256)
  3232  0065' 0800'              	movf	(?___fldiv+1)^(0+256),w
  3233  0066' 0080'              	movwf	(___flmul@a+1)^(0+256)
  3234  0067' 0800'              	movf	?___fldiv^(0+256),w
  3235  0068' 0080'              	movwf	___flmul@a^(0+256)
  3236  0069' 3045               	movlw	69
  3237  006A' 0080'              	movwf	(___flmul@b+3)^(0+256)
  3238  006B' 3061               	movlw	97
  3239  006C' 0080'              	movwf	(___flmul@b+2)^(0+256)
  3240  006D' 3000               	movlw	0
  3241  006E' 0080'              	movwf	(___flmul@b+1)^(0+256)
  3242  006F' 3000               	movlw	0
  3243  0070' 0080'              	movwf	___flmul@b^(0+256)
  3244  0071' 3180' 2000' 3180'  	fcall	___flmul
  3245  0074' 0800'              	movf	(?___flmul+3)^(0+256),w
  3246  0075' 0023               	movlb	3	; select bank3
  3247  0076' 0080'              	movwf	(_converter_settings$1611+3)^(0+384)
  3248  0077' 0022               	movlb	2	; select bank2
  3249  0078' 0800'              	movf	(?___flmul+2)^(0+256),w
  3250  0079' 0023               	movlb	3	; select bank3
  3251  007A' 0080'              	movwf	(_converter_settings$1611+2)^(0+384)
  3252  007B' 0022               	movlb	2	; select bank2
  3253  007C' 0800'              	movf	(?___flmul+1)^(0+256),w
  3254  007D' 0023               	movlb	3	; select bank3
  3255  007E' 0080'              	movwf	(_converter_settings$1611+1)^(0+384)
  3256  007F' 0022               	movlb	2	; select bank2
  3257  0080' 0800'              	movf	?___flmul^(0+256),w
  3258  0081' 0023               	movlb	3	; select bank3
  3259  0082' 0080'              	movwf	_converter_settings$1611^(0+384)
  3260  0083' 0800'              	movf	(_converter_settings$1611+3)^(0+384),w
  3261  0084' 0022               	movlb	2	; select bank2
  3262  0085' 0080'              	movwf	(___flmul@a+3)^(0+256)
  3263  0086' 0023               	movlb	3	; select bank3
  3264  0087' 0800'              	movf	(_converter_settings$1611+2)^(0+384),w
  3265  0088' 0022               	movlb	2	; select bank2
  3266  0089' 0080'              	movwf	(___flmul@a+2)^(0+256)
  3267  008A' 0023               	movlb	3	; select bank3
  3268  008B' 0800'              	movf	(_converter_settings$1611+1)^(0+384),w
  3269  008C' 0022               	movlb	2	; select bank2
  3270  008D' 0080'              	movwf	(___flmul@a+1)^(0+256)
  3271  008E' 0023               	movlb	3	; select bank3
  3272  008F' 0800'              	movf	_converter_settings$1611^(0+384),w
  3273  0090' 0022               	movlb	2	; select bank2
  3274  0091' 0080'              	movwf	___flmul@a^(0+256)
  3275  0092' 303F               	movlw	63
  3276  0093' 0080'              	movwf	(___flmul@b+3)^(0+256)
  3277  0094' 308C               	movlw	140
  3278  0095' 0080'              	movwf	(___flmul@b+2)^(0+256)
  3279  0096' 30CC               	movlw	204
  3280  0097' 0080'              	movwf	(___flmul@b+1)^(0+256)
  3281  0098' 30CD               	movlw	205
  3282  0099' 0080'              	movwf	___flmul@b^(0+256)
  3283  009A' 3180' 2000' 3180'  	fcall	___flmul
  3284  009D' 0800'              	movf	(?___flmul+3)^(0+256),w
  3285  009E' 0023               	movlb	3	; select bank3
  3286  009F' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  3287  00A0' 0022               	movlb	2	; select bank2
  3288  00A1' 0800'              	movf	(?___flmul+2)^(0+256),w
  3289  00A2' 0023               	movlb	3	; select bank3
  3290  00A3' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  3291  00A4' 0022               	movlb	2	; select bank2
  3292  00A5' 0800'              	movf	(?___flmul+1)^(0+256),w
  3293  00A6' 0023               	movlb	3	; select bank3
  3294  00A7' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  3295  00A8' 0022               	movlb	2	; select bank2
  3296  00A9' 0800'              	movf	?___flmul^(0+256),w
  3297  00AA' 0023               	movlb	3	; select bank3
  3298  00AB' 0080'              	movwf	___fltol@f1^(0+384)
  3299  00AC' 3180' 2000' 3180'  	fcall	___fltol
  3300  00AF' 0023               	movlb	3	; select bank3
  3301  00B0' 0800'              	movf	(?___fltol+1)^(0+384),w
  3302  00B1' 0080'              	movwf	(_timeout+1)^(0+384)
  3303  00B2' 0800'              	movf	?___fltol^(0+384),w
  3304  00B3' 0080'              	movwf	_timeout^(0+384)
  3305  00B4'                    l5037:
  3306                           
  3307                           ;state_machine_b.c: 223:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC4 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC4 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_char_kp; ki = CC_char_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
  3308  00B4' 0020               	movlb	0	; select bank0
  3309  00B5' 118E               	bcf	14,3	;volatile
  3310  00B6' 120E               	bcf	14,4	;volatile
  3311  00B7' 3005               	movlw	5
  3312  00B8' 0023               	movlb	3	; select bank3
  3313  00B9' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3314  00BA' 300F               	movlw	15
  3315  00BB' 0080'              	movwf	??_converter_settings^(0+384)
  3316  00BC' 30F1               	movlw	241
  3317  00BD'                    u7397:
  3318  00BD' 0B89               	decfsz	9,f
  3319  00BE' 2800'              	goto	u7397
  3320  00BF' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3321  00C0' 2800'              	goto	u7397
  3322  00C1' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3323  00C2' 2800'              	goto	u7397
  3324  00C3' 0020               	movlb	0	; select bank0
  3325  00C4' 160E               	bsf	14,4	;volatile
  3326  00C5' 3005               	movlw	5
  3327  00C6' 0023               	movlb	3	; select bank3
  3328  00C7' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3329  00C8' 300F               	movlw	15
  3330  00C9' 0080'              	movwf	??_converter_settings^(0+384)
  3331  00CA' 30F1               	movlw	241
  3332  00CB'                    u7407:
  3333  00CB' 0B89               	decfsz	9,f
  3334  00CC' 2800'              	goto	u7407
  3335  00CD' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3336  00CE' 2800'              	goto	u7407
  3337  00CF' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3338  00D0' 2800'              	goto	u7407
  3339  00D1' 0020               	movlb	0	; select bank0
  3340  00D2' 120E               	bcf	14,4	;volatile
  3341  00D3' 3005               	movlw	5
  3342  00D4' 0023               	movlb	3	; select bank3
  3343  00D5' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3344  00D6' 300F               	movlw	15
  3345  00D7' 0080'              	movwf	??_converter_settings^(0+384)
  3346  00D8' 30F1               	movlw	241
  3347  00D9'                    u7417:
  3348  00D9' 0B89               	decfsz	9,f
  3349  00DA' 2800'              	goto	u7417
  3350  00DB' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3351  00DC' 2800'              	goto	u7417
  3352  00DD' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3353  00DE' 2800'              	goto	u7417
  3354  00DF' 0020               	movlb	0	; select bank0
  3355  00E0' 168E               	bsf	14,5	;volatile
  3356  00E1' 3005               	movlw	5
  3357  00E2' 0023               	movlb	3	; select bank3
  3358  00E3' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3359  00E4' 300F               	movlw	15
  3360  00E5' 0080'              	movwf	??_converter_settings^(0+384)
  3361  00E6' 30F1               	movlw	241
  3362  00E7'                    u7427:
  3363  00E7' 0B89               	decfsz	9,f
  3364  00E8' 2800'              	goto	u7427
  3365  00E9' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3366  00EA' 2800'              	goto	u7427
  3367  00EB' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3368  00EC' 2800'              	goto	u7427
  3369  00ED' 2800'              	goto	L4
  3370  00EE'                    l5061:	
  3371                           ;state_machine_b.c: 224:             break;
  3372                           
  3373                           
  3374                           ;state_machine_b.c: 226:             iref = i_disc;
  3375  00EE' 0800'              	movf	(_i_disc+1)^(0+384),w
  3376  00EF' 0021               	movlb	1	; select bank1
  3377  00F0' 0080'              	movwf	(_iref+1)^(0+128)
  3378  00F1' 0023               	movlb	3	; select bank3
  3379  00F2' 0800'              	movf	_i_disc^(0+384),w
  3380  00F3' 0021               	movlb	1	; select bank1
  3381  00F4' 0080'              	movwf	_iref^(0+128)
  3382                           
  3383                           ;state_machine_b.c: 227:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
  3384  00F5' 0020               	movlb	0	; select bank0
  3385  00F6' 118E               	bcf	14,3	;volatile
  3386  00F7' 120E               	bcf	14,4	;volatile
  3387  00F8' 3005               	movlw	5
  3388  00F9' 0023               	movlb	3	; select bank3
  3389  00FA' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3390  00FB' 300F               	movlw	15
  3391  00FC' 0080'              	movwf	??_converter_settings^(0+384)
  3392  00FD' 30F1               	movlw	241
  3393  00FE'                    u7437:
  3394  00FE' 0B89               	decfsz	9,f
  3395  00FF' 2800'              	goto	u7437
  3396  0100' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3397  0101' 2800'              	goto	u7437
  3398  0102' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3399  0103' 2800'              	goto	u7437
  3400  0104' 0020               	movlb	0	; select bank0
  3401  0105' 158E               	bsf	14,3	;volatile
  3402  0106' 3005               	movlw	5
  3403  0107' 0023               	movlb	3	; select bank3
  3404  0108' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3405  0109' 300F               	movlw	15
  3406  010A' 0080'              	movwf	??_converter_settings^(0+384)
  3407  010B' 30F1               	movlw	241
  3408  010C'                    u7447:
  3409  010C' 0B89               	decfsz	9,f
  3410  010D' 2800'              	goto	u7447
  3411  010E' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3412  010F' 2800'              	goto	u7447
  3413  0110' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3414  0111' 2800'              	goto	u7447
  3415  0112' 0020               	movlb	0	; select bank0
  3416  0113' 118E               	bcf	14,3	;volatile
  3417  0114' 3005               	movlw	5
  3418  0115' 0023               	movlb	3	; select bank3
  3419  0116' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3420  0117' 300F               	movlw	15
  3421  0118' 0080'              	movwf	??_converter_settings^(0+384)
  3422  0119' 30F1               	movlw	241
  3423  011A'                    u7457:
  3424  011A' 0B89               	decfsz	9,f
  3425  011B' 2800'              	goto	u7457
  3426  011C' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3427  011D' 2800'              	goto	u7457
  3428  011E' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3429  011F' 2800'              	goto	u7457
  3430  0120' 0020               	movlb	0	; select bank0
  3431  0121' 168E               	bsf	14,5	;volatile
  3432  0122' 3005               	movlw	5
  3433  0123' 0023               	movlb	3	; select bank3
  3434  0124' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3435  0125' 300F               	movlw	15
  3436  0126' 0080'              	movwf	??_converter_settings^(0+384)
  3437  0127' 30F1               	movlw	241
  3438  0128'                    u7467:
  3439  0128' 0B89               	decfsz	9,f
  3440  0129' 2800'              	goto	u7467
  3441  012A' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3442  012B' 2800'              	goto	u7467
  3443  012C' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3444  012D' 2800'              	goto	u7467
  3445  012E' 2800'              	goto	L3
  3446  012F'                    l5077:	
  3447                           ;state_machine_b.c: 228:             break;
  3448                           
  3449                           
  3450                           ;state_machine_b.c: 230:             iref = (uint16_t) ( ( ( capacity * 4096.0 ) / (5000
      +                           * 2.5) ) + 0.5 );
  3451  012F' 0800'              	movf	_capacity^(0+384),w
  3452  0130' 0022               	movlb	2	; select bank2
  3453  0131' 0080'              	movwf	___xxtofl@val^(0+256)
  3454  0132' 0023               	movlb	3	; select bank3
  3455  0133' 0800'              	movf	(_capacity+1)^(0+384),w
  3456  0134' 0022               	movlb	2	; select bank2
  3457  0135' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  3458  0136' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  3459  0137' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  3460  0138' 3000               	movlw	0
  3461  0139' 3180' 2000' 3180'  	fcall	___xxtofl
  3462  013C' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3463  013D' 0080'              	movwf	(___flmul@a+3)^(0+256)
  3464  013E' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3465  013F' 0080'              	movwf	(___flmul@a+2)^(0+256)
  3466  0140' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3467  0141' 0080'              	movwf	(___flmul@a+1)^(0+256)
  3468  0142' 0800'              	movf	?___xxtofl^(0+256),w
  3469  0143' 0080'              	movwf	___flmul@a^(0+256)
  3470  0144' 3045               	movlw	69
  3471  0145' 0080'              	movwf	(___flmul@b+3)^(0+256)
  3472  0146' 3080               	movlw	128
  3473  0147' 0080'              	movwf	(___flmul@b+2)^(0+256)
  3474  0148' 3000               	movlw	0
  3475  0149' 0080'              	movwf	(___flmul@b+1)^(0+256)
  3476  014A' 3000               	movlw	0
  3477  014B' 0080'              	movwf	___flmul@b^(0+256)
  3478  014C' 3180' 2000' 3180'  	fcall	___flmul
  3479  014F' 0800'              	movf	(?___flmul+3)^(0+256),w
  3480  0150' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  3481  0151' 0800'              	movf	(?___flmul+2)^(0+256),w
  3482  0152' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  3483  0153' 0800'              	movf	(?___flmul+1)^(0+256),w
  3484  0154' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  3485  0155' 0800'              	movf	?___flmul^(0+256),w
  3486  0156' 0080'              	movwf	___fldiv@b^(0+256)
  3487  0157' 3046               	movlw	70
  3488  0158' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  3489  0159' 3043               	movlw	67
  3490  015A' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  3491  015B' 3050               	movlw	80
  3492  015C' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  3493  015D' 3000               	movlw	0
  3494  015E' 0080'              	movwf	___fldiv@a^(0+256)
  3495  015F' 3180' 2000' 3180'  	fcall	___fldiv
  3496  0162' 0800'              	movf	(?___fldiv+3)^(0+256),w
  3497  0163' 0080'              	movwf	(___fladd@a+3)^(0+256)
  3498  0164' 0800'              	movf	(?___fldiv+2)^(0+256),w
  3499  0165' 0080'              	movwf	(___fladd@a+2)^(0+256)
  3500  0166' 0800'              	movf	(?___fldiv+1)^(0+256),w
  3501  0167' 0080'              	movwf	(___fladd@a+1)^(0+256)
  3502  0168' 0800'              	movf	?___fldiv^(0+256),w
  3503  0169' 0080'              	movwf	___fladd@a^(0+256)
  3504  016A' 303F               	movlw	63
  3505  016B' 0080'              	movwf	(___fladd@b+3)^(0+256)
  3506  016C' 3000               	movlw	0
  3507  016D' 0080'              	movwf	(___fladd@b+2)^(0+256)
  3508  016E' 3000               	movlw	0
  3509  016F' 0080'              	movwf	(___fladd@b+1)^(0+256)
  3510  0170' 3000               	movlw	0
  3511  0171' 0080'              	movwf	___fladd@b^(0+256)
  3512  0172' 3180' 2000' 3180'  	fcall	___fladd
  3513  0175' 0800'              	movf	(?___fladd+3)^(0+256),w
  3514  0176' 0023               	movlb	3	; select bank3
  3515  0177' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  3516  0178' 0022               	movlb	2	; select bank2
  3517  0179' 0800'              	movf	(?___fladd+2)^(0+256),w
  3518  017A' 0023               	movlb	3	; select bank3
  3519  017B' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  3520  017C' 0022               	movlb	2	; select bank2
  3521  017D' 0800'              	movf	(?___fladd+1)^(0+256),w
  3522  017E' 0023               	movlb	3	; select bank3
  3523  017F' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  3524  0180' 0022               	movlb	2	; select bank2
  3525  0181' 0800'              	movf	?___fladd^(0+256),w
  3526  0182' 0023               	movlb	3	; select bank3
  3527  0183' 0080'              	movwf	___fltol@f1^(0+384)
  3528  0184' 3180' 2000' 3180'  	fcall	___fltol
  3529  0187' 0023               	movlb	3	; select bank3
  3530  0188' 0800'              	movf	(?___fltol+1)^(0+384),w
  3531  0189' 0021               	movlb	1	; select bank1
  3532  018A' 0080'              	movwf	(_iref+1)^(0+128)
  3533  018B' 0023               	movlb	3	; select bank3
  3534  018C' 0800'              	movf	?___fltol^(0+384),w
  3535  018D' 0021               	movlb	1	; select bank1
  3536  018E' 0080'              	movwf	_iref^(0+128)
  3537                           
  3538                           ;state_machine_b.c: 231:             dc_res_count = 220;
  3539  018F' 30DC               	movlw	220
  3540  0190' 0023               	movlb	3	; select bank3
  3541  0191' 0080'              	movwf	_dc_res_count^(0+384)
  3542                           
  3543                           ;state_machine_b.c: 232:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
  3544  0192' 0020               	movlb	0	; select bank0
  3545  0193' 118E               	bcf	14,3	;volatile
  3546  0194' 120E               	bcf	14,4	;volatile
  3547  0195' 3005               	movlw	5
  3548  0196' 0023               	movlb	3	; select bank3
  3549  0197' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3550  0198' 300F               	movlw	15
  3551  0199' 0080'              	movwf	??_converter_settings^(0+384)
  3552  019A' 30F1               	movlw	241
  3553  019B'                    u7477:
  3554  019B' 0B89               	decfsz	9,f
  3555  019C' 2800'              	goto	u7477
  3556  019D' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3557  019E' 2800'              	goto	u7477
  3558  019F' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3559  01A0' 2800'              	goto	u7477
  3560  01A1' 0020               	movlb	0	; select bank0
  3561  01A2' 158E               	bsf	14,3	;volatile
  3562  01A3' 3005               	movlw	5
  3563  01A4' 0023               	movlb	3	; select bank3
  3564  01A5' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3565  01A6' 300F               	movlw	15
  3566  01A7' 0080'              	movwf	??_converter_settings^(0+384)
  3567  01A8' 30F1               	movlw	241
  3568  01A9'                    u7487:
  3569  01A9' 0B89               	decfsz	9,f
  3570  01AA' 2800'              	goto	u7487
  3571  01AB' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3572  01AC' 2800'              	goto	u7487
  3573  01AD' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3574  01AE' 2800'              	goto	u7487
  3575  01AF' 0020               	movlb	0	; select bank0
  3576  01B0' 118E               	bcf	14,3	;volatile
  3577  01B1' 3005               	movlw	5
  3578  01B2' 0023               	movlb	3	; select bank3
  3579  01B3' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3580  01B4' 300F               	movlw	15
  3581  01B5' 0080'              	movwf	??_converter_settings^(0+384)
  3582  01B6' 30F1               	movlw	241
  3583  01B7'                    u7497:
  3584  01B7' 0B89               	decfsz	9,f
  3585  01B8' 2800'              	goto	u7497
  3586  01B9' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3587  01BA' 2800'              	goto	u7497
  3588  01BB' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3589  01BC' 2800'              	goto	u7497
  3590  01BD' 0020               	movlb	0	; select bank0
  3591  01BE' 168E               	bsf	14,5	;volatile
  3592  01BF' 3005               	movlw	5
  3593  01C0' 0023               	movlb	3	; select bank3
  3594  01C1' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3595  01C2' 300F               	movlw	15
  3596  01C3' 0080'              	movwf	??_converter_settings^(0+384)
  3597  01C4' 30F1               	movlw	241
  3598  01C5'                    u7507:
  3599  01C5' 0B89               	decfsz	9,f
  3600  01C6' 2800'              	goto	u7507
  3601  01C7' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3602  01C8' 2800'              	goto	u7507
  3603  01C9' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3604  01CA' 2800'              	goto	u7507
  3605  01CB' 2800'              	goto	L3
  3606  01CC'                    l5105:	
  3607                           ;state_machine_b.c: 233:             break;
  3608                           
  3609                           
  3610                           ;state_machine_b.c: 235:             iref = (uint16_t) ( ( ( capacity * 4096.0 ) / (5000
      +                           * 2.5 * 2 ) ) + 0.5 );
  3611  01CC' 0800'              	movf	_capacity^(0+384),w
  3612  01CD' 0022               	movlb	2	; select bank2
  3613  01CE' 0080'              	movwf	___xxtofl@val^(0+256)
  3614  01CF' 0023               	movlb	3	; select bank3
  3615  01D0' 0800'              	movf	(_capacity+1)^(0+384),w
  3616  01D1' 0022               	movlb	2	; select bank2
  3617  01D2' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  3618  01D3' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  3619  01D4' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  3620  01D5' 3000               	movlw	0
  3621  01D6' 3180' 2000' 3180'  	fcall	___xxtofl
  3622  01D9' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3623  01DA' 0080'              	movwf	(___flmul@a+3)^(0+256)
  3624  01DB' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3625  01DC' 0080'              	movwf	(___flmul@a+2)^(0+256)
  3626  01DD' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3627  01DE' 0080'              	movwf	(___flmul@a+1)^(0+256)
  3628  01DF' 0800'              	movf	?___xxtofl^(0+256),w
  3629  01E0' 0080'              	movwf	___flmul@a^(0+256)
  3630  01E1' 3045               	movlw	69
  3631  01E2' 0080'              	movwf	(___flmul@b+3)^(0+256)
  3632  01E3' 3080               	movlw	128
  3633  01E4' 0080'              	movwf	(___flmul@b+2)^(0+256)
  3634  01E5' 3000               	movlw	0
  3635  01E6' 0080'              	movwf	(___flmul@b+1)^(0+256)
  3636  01E7' 3000               	movlw	0
  3637  01E8' 0080'              	movwf	___flmul@b^(0+256)
  3638  01E9' 3180' 2000' 3180'  	fcall	___flmul
  3639  01EC' 0800'              	movf	(?___flmul+3)^(0+256),w
  3640  01ED' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  3641  01EE' 0800'              	movf	(?___flmul+2)^(0+256),w
  3642  01EF' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  3643  01F0' 0800'              	movf	(?___flmul+1)^(0+256),w
  3644  01F1' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  3645  01F2' 0800'              	movf	?___flmul^(0+256),w
  3646  01F3' 0080'              	movwf	___fldiv@b^(0+256)
  3647  01F4' 3046               	movlw	70
  3648  01F5' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  3649  01F6' 30C3               	movlw	195
  3650  01F7' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  3651  01F8' 3050               	movlw	80
  3652  01F9' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  3653  01FA' 3000               	movlw	0
  3654  01FB' 0080'              	movwf	___fldiv@a^(0+256)
  3655  01FC' 3180' 2000' 3180'  	fcall	___fldiv
  3656  01FF' 0800'              	movf	(?___fldiv+3)^(0+256),w
  3657  0200' 0080'              	movwf	(___fladd@a+3)^(0+256)
  3658  0201' 0800'              	movf	(?___fldiv+2)^(0+256),w
  3659  0202' 0080'              	movwf	(___fladd@a+2)^(0+256)
  3660  0203' 0800'              	movf	(?___fldiv+1)^(0+256),w
  3661  0204' 0080'              	movwf	(___fladd@a+1)^(0+256)
  3662  0205' 0800'              	movf	?___fldiv^(0+256),w
  3663  0206' 0080'              	movwf	___fladd@a^(0+256)
  3664  0207' 303F               	movlw	63
  3665  0208' 0080'              	movwf	(___fladd@b+3)^(0+256)
  3666  0209' 3000               	movlw	0
  3667  020A' 0080'              	movwf	(___fladd@b+2)^(0+256)
  3668  020B' 3000               	movlw	0
  3669  020C' 0080'              	movwf	(___fladd@b+1)^(0+256)
  3670  020D' 3000               	movlw	0
  3671  020E' 0080'              	movwf	___fladd@b^(0+256)
  3672  020F' 3180' 2000' 3180'  	fcall	___fladd
  3673  0212' 0800'              	movf	(?___fladd+3)^(0+256),w
  3674  0213' 0023               	movlb	3	; select bank3
  3675  0214' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  3676  0215' 0022               	movlb	2	; select bank2
  3677  0216' 0800'              	movf	(?___fladd+2)^(0+256),w
  3678  0217' 0023               	movlb	3	; select bank3
  3679  0218' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  3680  0219' 0022               	movlb	2	; select bank2
  3681  021A' 0800'              	movf	(?___fladd+1)^(0+256),w
  3682  021B' 0023               	movlb	3	; select bank3
  3683  021C' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  3684  021D' 0022               	movlb	2	; select bank2
  3685  021E' 0800'              	movf	?___fladd^(0+256),w
  3686  021F' 0023               	movlb	3	; select bank3
  3687  0220' 0080'              	movwf	___fltol@f1^(0+384)
  3688  0221' 3180' 2000' 3180'  	fcall	___fltol
  3689  0224' 0023               	movlb	3	; select bank3
  3690  0225' 0800'              	movf	(?___fltol+1)^(0+384),w
  3691  0226' 0021               	movlb	1	; select bank1
  3692  0227' 0080'              	movwf	(_iref+1)^(0+128)
  3693  0228' 0023               	movlb	3	; select bank3
  3694  0229' 0800'              	movf	?___fltol^(0+384),w
  3695  022A' 0021               	movlb	1	; select bank1
  3696  022B' 0080'              	movwf	_iref^(0+128)
  3697                           
  3698                           ;state_machine_b.c: 236:             if(basic_configuration.version == 0x02) timeout = (
      +                          uint16_t)(((float)capacity / (float)basic_configuration.const_current_char) * 3600 * 1.1
      +                          );
  3699  022C' 3002               	movlw	2
  3700  022D' 0024               	movlb	4	; select bank4
  3701  022E' 0600'              	xorwf	_basic_configuration^(0+512),w
  3702  022F' 1D03               	btfss	3,2
  3703  0230' 2800'              	goto	l5111
  3704  0231' 0023               	movlb	3	; select bank3
  3705  0232' 0800'              	movf	_capacity^(0+384),w
  3706  0233' 0022               	movlb	2	; select bank2
  3707  0234' 0080'              	movwf	___xxtofl@val^(0+256)
  3708  0235' 0023               	movlb	3	; select bank3
  3709  0236' 0800'              	movf	(_capacity+1)^(0+384),w
  3710  0237' 0022               	movlb	2	; select bank2
  3711  0238' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  3712  0239' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  3713  023A' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  3714  023B' 3000               	movlw	0
  3715  023C' 3180' 2000' 3180'  	fcall	___xxtofl
  3716  023F' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3717  0240' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  3718  0241' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3719  0242' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  3720  0243' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3721  0244' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  3722  0245' 0800'              	movf	?___xxtofl^(0+256),w
  3723  0246' 0080'              	movwf	___fldiv@b^(0+256)
  3724  0247' 0024               	movlb	4	; select bank4
  3725  0248' 0803'              	movf	(_basic_configuration^(0+512)+3),w
  3726  0249' 0022               	movlb	2	; select bank2
  3727  024A' 0080'              	movwf	___xxtofl@val^(0+256)
  3728  024B' 0024               	movlb	4	; select bank4
  3729  024C' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
  3730  024D' 0022               	movlb	2	; select bank2
  3731  024E' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  3732  024F' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  3733  0250' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  3734  0251' 3000               	movlw	0
  3735  0252' 3180' 2000' 3180'  	fcall	___xxtofl
  3736  0255' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3737  0256' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  3738  0257' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3739  0258' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  3740  0259' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3741  025A' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  3742  025B' 0800'              	movf	?___xxtofl^(0+256),w
  3743  025C' 0080'              	movwf	___fldiv@a^(0+256)
  3744  025D' 3180' 2000' 3180'  	fcall	___fldiv
  3745  0260' 0800'              	movf	(?___fldiv+3)^(0+256),w
  3746  0261' 0080'              	movwf	(___flmul@a+3)^(0+256)
  3747  0262' 0800'              	movf	(?___fldiv+2)^(0+256),w
  3748  0263' 0080'              	movwf	(___flmul@a+2)^(0+256)
  3749  0264' 0800'              	movf	(?___fldiv+1)^(0+256),w
  3750  0265' 0080'              	movwf	(___flmul@a+1)^(0+256)
  3751  0266' 0800'              	movf	?___fldiv^(0+256),w
  3752  0267' 0080'              	movwf	___flmul@a^(0+256)
  3753  0268' 3045               	movlw	69
  3754  0269' 0080'              	movwf	(___flmul@b+3)^(0+256)
  3755  026A' 3061               	movlw	97
  3756  026B' 0080'              	movwf	(___flmul@b+2)^(0+256)
  3757  026C' 3000               	movlw	0
  3758  026D' 0080'              	movwf	(___flmul@b+1)^(0+256)
  3759  026E' 3000               	movlw	0
  3760  026F' 0080'              	movwf	___flmul@b^(0+256)
  3761  0270' 3180' 2000' 3180'  	fcall	___flmul
  3762  0273' 0800'              	movf	(?___flmul+3)^(0+256),w
  3763  0274' 0023               	movlb	3	; select bank3
  3764  0275' 0080'              	movwf	(_converter_settings$1611+3)^(0+384)
  3765  0276' 0022               	movlb	2	; select bank2
  3766  0277' 0800'              	movf	(?___flmul+2)^(0+256),w
  3767  0278' 0023               	movlb	3	; select bank3
  3768  0279' 0080'              	movwf	(_converter_settings$1611+2)^(0+384)
  3769  027A' 0022               	movlb	2	; select bank2
  3770  027B' 0800'              	movf	(?___flmul+1)^(0+256),w
  3771  027C' 0023               	movlb	3	; select bank3
  3772  027D' 0080'              	movwf	(_converter_settings$1611+1)^(0+384)
  3773  027E' 0022               	movlb	2	; select bank2
  3774  027F' 0800'              	movf	?___flmul^(0+256),w
  3775  0280' 0023               	movlb	3	; select bank3
  3776  0281' 0080'              	movwf	_converter_settings$1611^(0+384)
  3777  0282' 0800'              	movf	(_converter_settings$1611+3)^(0+384),w
  3778  0283' 0022               	movlb	2	; select bank2
  3779  0284' 0080'              	movwf	(___flmul@a+3)^(0+256)
  3780  0285' 0023               	movlb	3	; select bank3
  3781  0286' 0800'              	movf	(_converter_settings$1611+2)^(0+384),w
  3782  0287' 0022               	movlb	2	; select bank2
  3783  0288' 0080'              	movwf	(___flmul@a+2)^(0+256)
  3784  0289' 0023               	movlb	3	; select bank3
  3785  028A' 0800'              	movf	(_converter_settings$1611+1)^(0+384),w
  3786  028B' 0022               	movlb	2	; select bank2
  3787  028C' 0080'              	movwf	(___flmul@a+1)^(0+256)
  3788  028D' 0023               	movlb	3	; select bank3
  3789  028E' 0800'              	movf	_converter_settings$1611^(0+384),w
  3790  028F' 0022               	movlb	2	; select bank2
  3791  0290' 0080'              	movwf	___flmul@a^(0+256)
  3792  0291' 303F               	movlw	63
  3793  0292' 0080'              	movwf	(___flmul@b+3)^(0+256)
  3794  0293' 308C               	movlw	140
  3795  0294' 0080'              	movwf	(___flmul@b+2)^(0+256)
  3796  0295' 30CC               	movlw	204
  3797  0296' 0080'              	movwf	(___flmul@b+1)^(0+256)
  3798  0297' 30CD               	movlw	205
  3799  0298' 0080'              	movwf	___flmul@b^(0+256)
  3800  0299' 3180' 2000' 3180'  	fcall	___flmul
  3801  029C' 0800'              	movf	(?___flmul+3)^(0+256),w
  3802  029D' 0023               	movlb	3	; select bank3
  3803  029E' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  3804  029F' 0022               	movlb	2	; select bank2
  3805  02A0' 0800'              	movf	(?___flmul+2)^(0+256),w
  3806  02A1' 0023               	movlb	3	; select bank3
  3807  02A2' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  3808  02A3' 0022               	movlb	2	; select bank2
  3809  02A4' 0800'              	movf	(?___flmul+1)^(0+256),w
  3810  02A5' 0023               	movlb	3	; select bank3
  3811  02A6' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  3812  02A7' 0022               	movlb	2	; select bank2
  3813  02A8' 0800'              	movf	?___flmul^(0+256),w
  3814  02A9' 0023               	movlb	3	; select bank3
  3815  02AA' 0080'              	movwf	___fltol@f1^(0+384)
  3816  02AB' 3180' 2000' 3180'  	fcall	___fltol
  3817  02AE' 0023               	movlb	3	; select bank3
  3818  02AF' 0800'              	movf	(?___fltol+1)^(0+384),w
  3819  02B0' 0080'              	movwf	(_timeout+1)^(0+384)
  3820  02B1' 0800'              	movf	?___fltol^(0+384),w
  3821  02B2' 0080'              	movwf	_timeout^(0+384)
  3822  02B3'                    l5111:
  3823                           
  3824                           ;state_machine_b.c: 237:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
  3825  02B3' 0020               	movlb	0	; select bank0
  3826  02B4' 118E               	bcf	14,3	;volatile
  3827  02B5' 120E               	bcf	14,4	;volatile
  3828  02B6' 3005               	movlw	5
  3829  02B7' 0023               	movlb	3	; select bank3
  3830  02B8' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3831  02B9' 300F               	movlw	15
  3832  02BA' 0080'              	movwf	??_converter_settings^(0+384)
  3833  02BB' 30F1               	movlw	241
  3834  02BC'                    u7517:
  3835  02BC' 0B89               	decfsz	9,f
  3836  02BD' 2800'              	goto	u7517
  3837  02BE' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3838  02BF' 2800'              	goto	u7517
  3839  02C0' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3840  02C1' 2800'              	goto	u7517
  3841  02C2' 0020               	movlb	0	; select bank0
  3842  02C3' 158E               	bsf	14,3	;volatile
  3843  02C4' 3005               	movlw	5
  3844  02C5' 0023               	movlb	3	; select bank3
  3845  02C6' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3846  02C7' 300F               	movlw	15
  3847  02C8' 0080'              	movwf	??_converter_settings^(0+384)
  3848  02C9' 30F1               	movlw	241
  3849  02CA'                    u7527:
  3850  02CA' 0B89               	decfsz	9,f
  3851  02CB' 2800'              	goto	u7527
  3852  02CC' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3853  02CD' 2800'              	goto	u7527
  3854  02CE' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3855  02CF' 2800'              	goto	u7527
  3856  02D0' 0020               	movlb	0	; select bank0
  3857  02D1' 118E               	bcf	14,3	;volatile
  3858  02D2' 3005               	movlw	5
  3859  02D3' 0023               	movlb	3	; select bank3
  3860  02D4' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3861  02D5' 300F               	movlw	15
  3862  02D6' 0080'              	movwf	??_converter_settings^(0+384)
  3863  02D7' 30F1               	movlw	241
  3864  02D8'                    u7537:
  3865  02D8' 0B89               	decfsz	9,f
  3866  02D9' 2800'              	goto	u7537
  3867  02DA' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3868  02DB' 2800'              	goto	u7537
  3869  02DC' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3870  02DD' 2800'              	goto	u7537
  3871  02DE' 0020               	movlb	0	; select bank0
  3872  02DF' 168E               	bsf	14,5	;volatile
  3873  02E0' 3005               	movlw	5
  3874  02E1' 0023               	movlb	3	; select bank3
  3875  02E2' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3876  02E3' 300F               	movlw	15
  3877  02E4' 0080'              	movwf	??_converter_settings^(0+384)
  3878  02E5' 30F1               	movlw	241
  3879  02E6'                    u7547:
  3880  02E6' 0B89               	decfsz	9,f
  3881  02E7' 2800'              	goto	u7547
  3882  02E8' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3883  02E9' 2800'              	goto	u7547
  3884  02EA' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3885  02EB' 2800'              	goto	u7547
  3886  02EC'                    L3:
  3887  02EC' 0023               	movlb	3	; select bank3
  3888  02ED' 0800'              	movf	(_CC_disc_kp+3)^(0+384),w
  3889  02EE' 0024               	movlb	4	; select bank4
  3890  02EF' 0080'              	movwf	(_kp+3)^(0+512)
  3891  02F0' 0023               	movlb	3	; select bank3
  3892  02F1' 0800'              	movf	(_CC_disc_kp+2)^(0+384),w
  3893  02F2' 0024               	movlb	4	; select bank4
  3894  02F3' 0080'              	movwf	(_kp+2)^(0+512)
  3895  02F4' 0023               	movlb	3	; select bank3
  3896  02F5' 0800'              	movf	(_CC_disc_kp+1)^(0+384),w
  3897  02F6' 0024               	movlb	4	; select bank4
  3898  02F7' 0080'              	movwf	(_kp+1)^(0+512)
  3899  02F8' 0023               	movlb	3	; select bank3
  3900  02F9' 0800'              	movf	_CC_disc_kp^(0+384),w
  3901  02FA' 0024               	movlb	4	; select bank4
  3902  02FB' 0080'              	movwf	_kp^(0+512)
  3903  02FC' 0023               	movlb	3	; select bank3
  3904  02FD' 0800'              	movf	(_CC_disc_ki+3)^(0+384),w
  3905  02FE' 0024               	movlb	4	; select bank4
  3906  02FF' 0080'              	movwf	(_ki+3)^(0+512)
  3907  0300' 0023               	movlb	3	; select bank3
  3908  0301' 0800'              	movf	(_CC_disc_ki+2)^(0+384),w
  3909  0302' 0024               	movlb	4	; select bank4
  3910  0303' 0080'              	movwf	(_ki+2)^(0+512)
  3911  0304' 0023               	movlb	3	; select bank3
  3912  0305' 0800'              	movf	(_CC_disc_ki+1)^(0+384),w
  3913  0306' 0024               	movlb	4	; select bank4
  3914  0307' 0080'              	movwf	(_ki+1)^(0+512)
  3915  0308' 0023               	movlb	3	; select bank3
  3916  0309' 0800'              	movf	_CC_disc_ki^(0+384),w
  3917  030A' 2800'              	goto	L2
  3918  030B'                    l5135:	
  3919                           ;state_machine_b.c: 238:             break;
  3920                           
  3921                           
  3922                           ;state_machine_b.c: 240:             iref = (uint16_t) ( ( ( capacity * 4096.0 ) / (5000
      +                           * 2.5 * 2 ) ) + 0.5 );
  3923  030B' 0800'              	movf	_capacity^(0+384),w
  3924  030C' 0022               	movlb	2	; select bank2
  3925  030D' 0080'              	movwf	___xxtofl@val^(0+256)
  3926  030E' 0023               	movlb	3	; select bank3
  3927  030F' 0800'              	movf	(_capacity+1)^(0+384),w
  3928  0310' 0022               	movlb	2	; select bank2
  3929  0311' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  3930  0312' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  3931  0313' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  3932  0314' 3000               	movlw	0
  3933  0315' 3180' 2000' 3180'  	fcall	___xxtofl
  3934  0318' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3935  0319' 0080'              	movwf	(___flmul@a+3)^(0+256)
  3936  031A' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3937  031B' 0080'              	movwf	(___flmul@a+2)^(0+256)
  3938  031C' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3939  031D' 0080'              	movwf	(___flmul@a+1)^(0+256)
  3940  031E' 0800'              	movf	?___xxtofl^(0+256),w
  3941  031F' 0080'              	movwf	___flmul@a^(0+256)
  3942  0320' 3045               	movlw	69
  3943  0321' 0080'              	movwf	(___flmul@b+3)^(0+256)
  3944  0322' 3080               	movlw	128
  3945  0323' 0080'              	movwf	(___flmul@b+2)^(0+256)
  3946  0324' 3000               	movlw	0
  3947  0325' 0080'              	movwf	(___flmul@b+1)^(0+256)
  3948  0326' 3000               	movlw	0
  3949  0327' 0080'              	movwf	___flmul@b^(0+256)
  3950  0328' 3180' 2000' 3180'  	fcall	___flmul
  3951  032B' 0800'              	movf	(?___flmul+3)^(0+256),w
  3952  032C' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  3953  032D' 0800'              	movf	(?___flmul+2)^(0+256),w
  3954  032E' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  3955  032F' 0800'              	movf	(?___flmul+1)^(0+256),w
  3956  0330' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  3957  0331' 0800'              	movf	?___flmul^(0+256),w
  3958  0332' 0080'              	movwf	___fldiv@b^(0+256)
  3959  0333' 3046               	movlw	70
  3960  0334' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  3961  0335' 30C3               	movlw	195
  3962  0336' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  3963  0337' 3050               	movlw	80
  3964  0338' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  3965  0339' 3000               	movlw	0
  3966  033A' 0080'              	movwf	___fldiv@a^(0+256)
  3967  033B' 3180' 2000' 3180'  	fcall	___fldiv
  3968  033E' 0800'              	movf	(?___fldiv+3)^(0+256),w
  3969  033F' 0080'              	movwf	(___fladd@a+3)^(0+256)
  3970  0340' 0800'              	movf	(?___fldiv+2)^(0+256),w
  3971  0341' 0080'              	movwf	(___fladd@a+2)^(0+256)
  3972  0342' 0800'              	movf	(?___fldiv+1)^(0+256),w
  3973  0343' 0080'              	movwf	(___fladd@a+1)^(0+256)
  3974  0344' 0800'              	movf	?___fldiv^(0+256),w
  3975  0345' 0080'              	movwf	___fladd@a^(0+256)
  3976  0346' 303F               	movlw	63
  3977  0347' 0080'              	movwf	(___fladd@b+3)^(0+256)
  3978  0348' 3000               	movlw	0
  3979  0349' 0080'              	movwf	(___fladd@b+2)^(0+256)
  3980  034A' 3000               	movlw	0
  3981  034B' 0080'              	movwf	(___fladd@b+1)^(0+256)
  3982  034C' 3000               	movlw	0
  3983  034D' 0080'              	movwf	___fladd@b^(0+256)
  3984  034E' 3180' 2000' 3180'  	fcall	___fladd
  3985  0351' 0800'              	movf	(?___fladd+3)^(0+256),w
  3986  0352' 0023               	movlb	3	; select bank3
  3987  0353' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  3988  0354' 0022               	movlb	2	; select bank2
  3989  0355' 0800'              	movf	(?___fladd+2)^(0+256),w
  3990  0356' 0023               	movlb	3	; select bank3
  3991  0357' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  3992  0358' 0022               	movlb	2	; select bank2
  3993  0359' 0800'              	movf	(?___fladd+1)^(0+256),w
  3994  035A' 0023               	movlb	3	; select bank3
  3995  035B' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  3996  035C' 0022               	movlb	2	; select bank2
  3997  035D' 0800'              	movf	?___fladd^(0+256),w
  3998  035E' 0023               	movlb	3	; select bank3
  3999  035F' 0080'              	movwf	___fltol@f1^(0+384)
  4000  0360' 3180' 2000' 3180'  	fcall	___fltol
  4001  0363' 0023               	movlb	3	; select bank3
  4002  0364' 0800'              	movf	(?___fltol+1)^(0+384),w
  4003  0365' 0021               	movlb	1	; select bank1
  4004  0366' 0080'              	movwf	(_iref+1)^(0+128)
  4005  0367' 0023               	movlb	3	; select bank3
  4006  0368' 0800'              	movf	?___fltol^(0+384),w
  4007  0369' 0021               	movlb	1	; select bank1
  4008  036A' 0080'              	movwf	_iref^(0+128)
  4009                           
  4010                           ;state_machine_b.c: 241:             if(basic_configuration.version == 0x02) timeout = (
      +                          uint16_t)(((float)capacity / (float)basic_configuration.const_current_char) * 3600 * 1.1
      +                          );
  4011  036B' 3002               	movlw	2
  4012  036C' 0024               	movlb	4	; select bank4
  4013  036D' 0600'              	xorwf	_basic_configuration^(0+512),w
  4014  036E' 1D03               	btfss	3,2
  4015  036F' 2800'              	goto	l5141
  4016  0370' 0023               	movlb	3	; select bank3
  4017  0371' 0800'              	movf	_capacity^(0+384),w
  4018  0372' 0022               	movlb	2	; select bank2
  4019  0373' 0080'              	movwf	___xxtofl@val^(0+256)
  4020  0374' 0023               	movlb	3	; select bank3
  4021  0375' 0800'              	movf	(_capacity+1)^(0+384),w
  4022  0376' 0022               	movlb	2	; select bank2
  4023  0377' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  4024  0378' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  4025  0379' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  4026  037A' 3000               	movlw	0
  4027  037B' 3180' 2000' 3180'  	fcall	___xxtofl
  4028  037E' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  4029  037F' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  4030  0380' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  4031  0381' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  4032  0382' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  4033  0383' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  4034  0384' 0800'              	movf	?___xxtofl^(0+256),w
  4035  0385' 0080'              	movwf	___fldiv@b^(0+256)
  4036  0386' 0024               	movlb	4	; select bank4
  4037  0387' 0803'              	movf	(_basic_configuration^(0+512)+3),w
  4038  0388' 0022               	movlb	2	; select bank2
  4039  0389' 0080'              	movwf	___xxtofl@val^(0+256)
  4040  038A' 0024               	movlb	4	; select bank4
  4041  038B' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
  4042  038C' 0022               	movlb	2	; select bank2
  4043  038D' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  4044  038E' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  4045  038F' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  4046  0390' 3000               	movlw	0
  4047  0391' 3180' 2000' 3180'  	fcall	___xxtofl
  4048  0394' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  4049  0395' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  4050  0396' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  4051  0397' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  4052  0398' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  4053  0399' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  4054  039A' 0800'              	movf	?___xxtofl^(0+256),w
  4055  039B' 0080'              	movwf	___fldiv@a^(0+256)
  4056  039C' 3180' 2000' 3180'  	fcall	___fldiv
  4057  039F' 0800'              	movf	(?___fldiv+3)^(0+256),w
  4058  03A0' 0080'              	movwf	(___flmul@a+3)^(0+256)
  4059  03A1' 0800'              	movf	(?___fldiv+2)^(0+256),w
  4060  03A2' 0080'              	movwf	(___flmul@a+2)^(0+256)
  4061  03A3' 0800'              	movf	(?___fldiv+1)^(0+256),w
  4062  03A4' 0080'              	movwf	(___flmul@a+1)^(0+256)
  4063  03A5' 0800'              	movf	?___fldiv^(0+256),w
  4064  03A6' 0080'              	movwf	___flmul@a^(0+256)
  4065  03A7' 3045               	movlw	69
  4066  03A8' 0080'              	movwf	(___flmul@b+3)^(0+256)
  4067  03A9' 3061               	movlw	97
  4068  03AA' 0080'              	movwf	(___flmul@b+2)^(0+256)
  4069  03AB' 3000               	movlw	0
  4070  03AC' 0080'              	movwf	(___flmul@b+1)^(0+256)
  4071  03AD' 3000               	movlw	0
  4072  03AE' 0080'              	movwf	___flmul@b^(0+256)
  4073  03AF' 3180' 2000' 3180'  	fcall	___flmul
  4074  03B2' 0800'              	movf	(?___flmul+3)^(0+256),w
  4075  03B3' 0023               	movlb	3	; select bank3
  4076  03B4' 0080'              	movwf	(_converter_settings$1611+3)^(0+384)
  4077  03B5' 0022               	movlb	2	; select bank2
  4078  03B6' 0800'              	movf	(?___flmul+2)^(0+256),w
  4079  03B7' 0023               	movlb	3	; select bank3
  4080  03B8' 0080'              	movwf	(_converter_settings$1611+2)^(0+384)
  4081  03B9' 0022               	movlb	2	; select bank2
  4082  03BA' 0800'              	movf	(?___flmul+1)^(0+256),w
  4083  03BB' 0023               	movlb	3	; select bank3
  4084  03BC' 0080'              	movwf	(_converter_settings$1611+1)^(0+384)
  4085  03BD' 0022               	movlb	2	; select bank2
  4086  03BE' 0800'              	movf	?___flmul^(0+256),w
  4087  03BF' 0023               	movlb	3	; select bank3
  4088  03C0' 0080'              	movwf	_converter_settings$1611^(0+384)
  4089  03C1' 0800'              	movf	(_converter_settings$1611+3)^(0+384),w
  4090  03C2' 0022               	movlb	2	; select bank2
  4091  03C3' 0080'              	movwf	(___flmul@a+3)^(0+256)
  4092  03C4' 0023               	movlb	3	; select bank3
  4093  03C5' 0800'              	movf	(_converter_settings$1611+2)^(0+384),w
  4094  03C6' 0022               	movlb	2	; select bank2
  4095  03C7' 0080'              	movwf	(___flmul@a+2)^(0+256)
  4096  03C8' 0023               	movlb	3	; select bank3
  4097  03C9' 0800'              	movf	(_converter_settings$1611+1)^(0+384),w
  4098  03CA' 0022               	movlb	2	; select bank2
  4099  03CB' 0080'              	movwf	(___flmul@a+1)^(0+256)
  4100  03CC' 0023               	movlb	3	; select bank3
  4101  03CD' 0800'              	movf	_converter_settings$1611^(0+384),w
  4102  03CE' 0022               	movlb	2	; select bank2
  4103  03CF' 0080'              	movwf	___flmul@a^(0+256)
  4104  03D0' 303F               	movlw	63
  4105  03D1' 0080'              	movwf	(___flmul@b+3)^(0+256)
  4106  03D2' 308C               	movlw	140
  4107  03D3' 0080'              	movwf	(___flmul@b+2)^(0+256)
  4108  03D4' 30CC               	movlw	204
  4109  03D5' 0080'              	movwf	(___flmul@b+1)^(0+256)
  4110  03D6' 30CD               	movlw	205
  4111  03D7' 0080'              	movwf	___flmul@b^(0+256)
  4112  03D8' 3180' 2000' 3180'  	fcall	___flmul
  4113  03DB' 0800'              	movf	(?___flmul+3)^(0+256),w
  4114  03DC' 0023               	movlb	3	; select bank3
  4115  03DD' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  4116  03DE' 0022               	movlb	2	; select bank2
  4117  03DF' 0800'              	movf	(?___flmul+2)^(0+256),w
  4118  03E0' 0023               	movlb	3	; select bank3
  4119  03E1' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  4120  03E2' 0022               	movlb	2	; select bank2
  4121  03E3' 0800'              	movf	(?___flmul+1)^(0+256),w
  4122  03E4' 0023               	movlb	3	; select bank3
  4123  03E5' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  4124  03E6' 0022               	movlb	2	; select bank2
  4125  03E7' 0800'              	movf	?___flmul^(0+256),w
  4126  03E8' 0023               	movlb	3	; select bank3
  4127  03E9' 0080'              	movwf	___fltol@f1^(0+384)
  4128  03EA' 3180' 2000' 3180'  	fcall	___fltol
  4129  03ED' 0023               	movlb	3	; select bank3
  4130  03EE' 0800'              	movf	(?___fltol+1)^(0+384),w
  4131  03EF' 0080'              	movwf	(_timeout+1)^(0+384)
  4132  03F0' 0800'              	movf	?___fltol^(0+384),w
  4133  03F1' 0080'              	movwf	_timeout^(0+384)
  4134  03F2'                    l5141:
  4135                           
  4136                           ;state_machine_b.c: 242:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC4 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC4 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_char_kp; ki = CC_char_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
  4137  03F2' 0020               	movlb	0	; select bank0
  4138  03F3' 118E               	bcf	14,3	;volatile
  4139  03F4' 120E               	bcf	14,4	;volatile
  4140  03F5' 3005               	movlw	5
  4141  03F6' 0023               	movlb	3	; select bank3
  4142  03F7' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  4143  03F8' 300F               	movlw	15
  4144  03F9' 0080'              	movwf	??_converter_settings^(0+384)
  4145  03FA' 30F1               	movlw	241
  4146  03FB'                    u7557:
  4147  03FB' 0B89               	decfsz	9,f
  4148  03FC' 2800'              	goto	u7557
  4149  03FD' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4150  03FE' 2800'              	goto	u7557
  4151  03FF' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  4152  0400' 2800'              	goto	u7557
  4153  0401' 0020               	movlb	0	; select bank0
  4154  0402' 160E               	bsf	14,4	;volatile
  4155  0403' 3005               	movlw	5
  4156  0404' 0023               	movlb	3	; select bank3
  4157  0405' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  4158  0406' 300F               	movlw	15
  4159  0407' 0080'              	movwf	??_converter_settings^(0+384)
  4160  0408' 30F1               	movlw	241
  4161  0409'                    u7567:
  4162  0409' 0B89               	decfsz	9,f
  4163  040A' 2800'              	goto	u7567
  4164  040B' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4165  040C' 2800'              	goto	u7567
  4166  040D' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  4167  040E' 2800'              	goto	u7567
  4168  040F' 0020               	movlb	0	; select bank0
  4169  0410' 120E               	bcf	14,4	;volatile
  4170  0411' 3005               	movlw	5
  4171  0412' 0023               	movlb	3	; select bank3
  4172  0413' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  4173  0414' 300F               	movlw	15
  4174  0415' 0080'              	movwf	??_converter_settings^(0+384)
  4175  0416' 30F1               	movlw	241
  4176  0417'                    u7577:
  4177  0417' 0B89               	decfsz	9,f
  4178  0418' 2800'              	goto	u7577
  4179  0419' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4180  041A' 2800'              	goto	u7577
  4181  041B' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  4182  041C' 2800'              	goto	u7577
  4183  041D' 0020               	movlb	0	; select bank0
  4184  041E' 168E               	bsf	14,5	;volatile
  4185  041F' 3005               	movlw	5
  4186  0420' 0023               	movlb	3	; select bank3
  4187  0421' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  4188  0422' 300F               	movlw	15
  4189  0423' 0080'              	movwf	??_converter_settings^(0+384)
  4190  0424' 30F1               	movlw	241
  4191  0425'                    u7587:
  4192  0425' 0B89               	decfsz	9,f
  4193  0426' 2800'              	goto	u7587
  4194  0427' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4195  0428' 2800'              	goto	u7587
  4196  0429' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  4197  042A' 2800'              	goto	u7587
  4198  042B'                    L4:
  4199  042B' 0023               	movlb	3	; select bank3
  4200  042C' 0800'              	movf	(_CC_char_kp+3)^(0+384),w
  4201  042D' 0024               	movlb	4	; select bank4
  4202  042E' 0080'              	movwf	(_kp+3)^(0+512)
  4203  042F' 0023               	movlb	3	; select bank3
  4204  0430' 0800'              	movf	(_CC_char_kp+2)^(0+384),w
  4205  0431' 0024               	movlb	4	; select bank4
  4206  0432' 0080'              	movwf	(_kp+2)^(0+512)
  4207  0433' 0023               	movlb	3	; select bank3
  4208  0434' 0800'              	movf	(_CC_char_kp+1)^(0+384),w
  4209  0435' 0024               	movlb	4	; select bank4
  4210  0436' 0080'              	movwf	(_kp+1)^(0+512)
  4211  0437' 0023               	movlb	3	; select bank3
  4212  0438' 0800'              	movf	_CC_char_kp^(0+384),w
  4213  0439' 0024               	movlb	4	; select bank4
  4214  043A' 0080'              	movwf	_kp^(0+512)
  4215  043B' 0023               	movlb	3	; select bank3
  4216  043C' 0800'              	movf	(_CC_char_ki+3)^(0+384),w
  4217  043D' 0024               	movlb	4	; select bank4
  4218  043E' 0080'              	movwf	(_ki+3)^(0+512)
  4219  043F' 0023               	movlb	3	; select bank3
  4220  0440' 0800'              	movf	(_CC_char_ki+2)^(0+384),w
  4221  0441' 0024               	movlb	4	; select bank4
  4222  0442' 0080'              	movwf	(_ki+2)^(0+512)
  4223  0443' 0023               	movlb	3	; select bank3
  4224  0444' 0800'              	movf	(_CC_char_ki+1)^(0+384),w
  4225  0445' 0024               	movlb	4	; select bank4
  4226  0446' 0080'              	movwf	(_ki+1)^(0+512)
  4227  0447' 0023               	movlb	3	; select bank3
  4228  0448' 0800'              	movf	_CC_char_ki^(0+384),w
  4229  0449'                    L2:
  4230  0449' 0024               	movlb	4	; select bank4
  4231  044A' 0080'              	movwf	_ki^(0+512)
  4232  044B' 0023               	movlb	3	; select bank3
  4233  044C' 0800'              	movf	_CC_char_disc_kd^(0+384),w
  4234  044D' 0080'              	movwf	??_converter_settings^(0+384)
  4235  044E' 0181'              	clrf	(??_converter_settings^(0+384)+1)
  4236  044F' 0182'              	clrf	(??_converter_settings^(0+384)+2)
  4237  0450' 0183'              	clrf	(??_converter_settings^(0+384)+3)
  4238  0451' 0800'              	movf	(??_converter_settings+3)^(0+384),w
  4239  0452' 0022               	movlb	2	; select bank2
  4240  0453' 0080'              	movwf	(___xxtofl@val+3)^(0+256)
  4241  0454' 0023               	movlb	3	; select bank3
  4242  0455' 0800'              	movf	(??_converter_settings+2)^(0+384),w
  4243  0456' 0022               	movlb	2	; select bank2
  4244  0457' 0080'              	movwf	(___xxtofl@val+2)^(0+256)
  4245  0458' 0023               	movlb	3	; select bank3
  4246  0459' 0800'              	movf	(??_converter_settings+1)^(0+384),w
  4247  045A' 0022               	movlb	2	; select bank2
  4248  045B' 0080'              	movwf	(___xxtofl@val+1)^(0+256)
  4249  045C' 0023               	movlb	3	; select bank3
  4250  045D' 0800'              	movf	??_converter_settings^(0+384),w
  4251  045E' 0022               	movlb	2	; select bank2
  4252  045F' 0080'              	movwf	___xxtofl@val^(0+256)
  4253  0460' 3000               	movlw	0
  4254  0461' 3180' 2000' 3180'  	fcall	___xxtofl
  4255  0464' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  4256  0465' 0024               	movlb	4	; select bank4
  4257  0466' 0080'              	movwf	(_kd+3)^(0+512)
  4258  0467' 0022               	movlb	2	; select bank2
  4259  0468' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  4260  0469' 0024               	movlb	4	; select bank4
  4261  046A' 0080'              	movwf	(_kd+2)^(0+512)
  4262  046B' 0022               	movlb	2	; select bank2
  4263  046C' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  4264  046D' 0024               	movlb	4	; select bank4
  4265  046E' 0080'              	movwf	(_kd+1)^(0+512)
  4266  046F' 0022               	movlb	2	; select bank2
  4267  0470' 0800'              	movf	?___xxtofl^(0+256),w
  4268  0471' 0024               	movlb	4	; select bank4
  4269  0472' 0080'              	movwf	_kd^(0+512)
  4270  0473' 3000               	movlw	0
  4271  0474' 0080'              	movwf	(_pidi+3)^(0+512)
  4272  0475' 3000               	movlw	0
  4273  0476' 0080'              	movwf	(_pidi+2)^(0+512)
  4274  0477' 3000               	movlw	0
  4275  0478' 0080'              	movwf	(_pidi+1)^(0+512)
  4276  0479' 3000               	movlw	0
  4277  047A' 0080'              	movwf	_pidi^(0+512)
  4278                           
  4279                           ;state_machine_b.c: 243:             break;
  4280  047B' 2800'              	goto	l5169
  4281  047C'                    l5167:
  4282  047C' 0023               	movlb	3	; select bank3
  4283  047D' 0800'              	movf	_state^(0+384),w
  4284  047E' 0080'              	movwf	??_converter_settings^(0+384)
  4285  047F' 0181'              	clrf	(??_converter_settings^(0+384)+1)
  4286                           
  4287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4288                           ; Switch size 1, requested type "simple"
  4289                           ; Number of cases is 1, Range of values is 0 to 0
  4290                           ; switch strategies available:
  4291                           ; Name         Instructions Cycles
  4292                           ; simple_byte            4     3 (average)
  4293                           ; direct_byte            8     6 (fixed)
  4294                           ; jumptable            260     6 (fixed)
  4295                           ;	Chosen strategy is simple_byte
  4296  0480' 0800'              	movf	(??_converter_settings+1)^(0+384),w
  4297  0481' 3A00               	xorlw	0	; case 0
  4298  0482' 1903               	skipnz
  4299  0483' 2800'              	goto	l7751
  4300  0484' 2800'              	goto	l5169
  4301  0485'                    l7751:
  4302                           
  4303                           ; Switch size 1, requested type "simple"
  4304                           ; Number of cases is 5, Range of values is 3 to 11
  4305                           ; switch strategies available:
  4306                           ; Name         Instructions Cycles
  4307                           ; simple_byte           16     9 (average)
  4308                           ; direct_byte           27     9 (fixed)
  4309                           ; jumptable            263     9 (fixed)
  4310                           ;	Chosen strategy is simple_byte
  4311  0485' 0800'              	movf	??_converter_settings^(0+384),w
  4312  0486' 3A03               	xorlw	3	; case 3
  4313  0487' 1903               	skipnz
  4314  0488' 2800'              	goto	l5031
  4315  0489' 3A06               	xorlw	6	; case 5
  4316  048A' 1903               	skipnz
  4317  048B' 2800'              	goto	l5135
  4318  048C' 3A02               	xorlw	2	; case 7
  4319  048D' 1903               	skipnz
  4320  048E' 2800'              	goto	l5061
  4321  048F' 3A0E               	xorlw	14	; case 9
  4322  0490' 1903               	skipnz
  4323  0491' 2800'              	goto	l5105
  4324  0492' 3A02               	xorlw	2	; case 11
  4325  0493' 1903               	skipnz
  4326  0494' 2800'              	goto	l5077
  4327  0495' 2800'              	goto	l5169
  4328  0496'                    l5169:
  4329                           
  4330                           ;state_machine_b.c: 245:     _delay((unsigned long)((10)*(32000000/4000.0)));
  4331  0496' 3068               	movlw	104
  4332  0497' 0023               	movlb	3	; select bank3
  4333  0498' 0080'              	movwf	??_converter_settings^(0+384)
  4334  0499' 30E4               	movlw	228
  4335  049A'                    u7597:
  4336  049A' 0B89               	decfsz	9,f
  4337  049B' 2800'              	goto	u7597
  4338  049C' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4339  049D' 2800'              	goto	u7597
  4340  049E' 0000               	nop
  4341                           
  4342                           ;state_machine_b.c: 246:     second = 0;
  4343  049F' 0023               	movlb	3	; select bank3
  4344  04A0' 0180'              	clrf	_second^(0+384)
  4345  04A1' 0180'              	clrf	(_second+1)^(0+384)
  4346                           
  4347                           ;state_machine_b.c: 247:     conv = 1;
  4348  04A2' 0021               	movlb	1	; select bank1
  4349  04A3' 0180'              	clrf	_conv^(0+128)
  4350  04A4' 0A80'              	incf	_conv^(0+128),f
  4351  04A5' 0008               	return
  4352  04A6'                    __end_of_converter_settings:
  4353                           
  4354                           	psect	text7
  4355  0000'                    __ptext7:	
  4356 ;; *************** function _Cell_ON *****************
  4357 ;; Defined at:
  4358 ;;		line 508 in file "charger_discharger.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;		None
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;		None
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      void 
  4365 ;; Registers used:
  4366 ;;		wreg, status,2, status,0
  4367 ;; Tracked objects:
  4368 ;;		On entry : 1F/10
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4374 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4376 ;;Total ram usage:        1 bytes
  4377 ;; Hardware stack levels used: 1
  4378 ;; Hardware stack levels required when called: 5
  4379 ;; This function calls:
  4380 ;;		Nothing
  4381 ;; This function is called by:
  4382 ;;		_converter_settings
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386  0000'                    _Cell_ON:	
  4387                           ;psect for function _Cell_ON
  4388                           
  4389                           
  4390                           ;charger_discharger.c: 510:     if (cell_count == 1)
  4391                           
  4392                           ;incstack = 0
  4393                           ; Regs used in _Cell_ON: [wreg+status,2+status,0]
  4394  0000' 0023               	movlb	3	; select bank3
  4395  0001' 0300'              	decf	_cell_count^(0+384),w
  4396  0002' 1D03               	btfss	3,2
  4397  0003' 2800'              	goto	l4465
  4398                           
  4399                           ;charger_discharger.c: 511:     {;charger_discharger.c: 512:         { RB2 = 1; };
  4400  0004' 0020               	movlb	0	; select bank0
  4401  0005' 150D               	bsf	13,2	;volatile
  4402                           
  4403                           ;charger_discharger.c: 513:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4404  0006' 3068               	movlw	104
  4405  0007' 0022               	movlb	2	; select bank2
  4406  0008' 0080'              	movwf	??_Cell_ON^(0+256)
  4407  0009' 30E4               	movlw	228
  4408  000A'                    u7607:
  4409  000A' 0B89               	decfsz	9,f
  4410  000B' 2800'              	goto	u7607
  4411  000C' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4412  000D' 2800'              	goto	u7607
  4413  000E' 0000               	nop
  4414                           
  4415                           ;charger_discharger.c: 514:         { RB3 = 0; };
  4416  000F' 0020               	movlb	0	; select bank0
  4417  0010' 118D               	bcf	13,3	;volatile
  4418                           
  4419                           ;charger_discharger.c: 515:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4420  0011' 3068               	movlw	104
  4421  0012' 0022               	movlb	2	; select bank2
  4422  0013' 0080'              	movwf	??_Cell_ON^(0+256)
  4423  0014' 30E4               	movlw	228
  4424  0015'                    u7617:
  4425  0015' 0B89               	decfsz	9,f
  4426  0016' 2800'              	goto	u7617
  4427  0017' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4428  0018' 2800'              	goto	u7617
  4429  0019' 0000               	nop
  4430  001A' 2800'              	goto	l4461
  4431  001B'                    l4467:
  4432                           
  4433                           ;charger_discharger.c: 521:     {;charger_discharger.c: 522:         { RB2 = 0; };
  4434  001B' 0020               	movlb	0	; select bank0
  4435  001C' 110D               	bcf	13,2	;volatile
  4436                           
  4437                           ;charger_discharger.c: 523:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4438  001D' 3068               	movlw	104
  4439  001E' 0022               	movlb	2	; select bank2
  4440  001F' 0080'              	movwf	??_Cell_ON^(0+256)
  4441  0020' 30E4               	movlw	228
  4442  0021'                    u7647:
  4443  0021' 0B89               	decfsz	9,f
  4444  0022' 2800'              	goto	u7647
  4445  0023' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4446  0024' 2800'              	goto	u7647
  4447  0025' 0000               	nop
  4448                           
  4449                           ;charger_discharger.c: 524:         { RB3 = 1; };
  4450  0026' 0020               	movlb	0	; select bank0
  4451  0027' 158D               	bsf	13,3	;volatile
  4452                           
  4453                           ;charger_discharger.c: 525:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4454  0028' 3068               	movlw	104
  4455  0029' 0022               	movlb	2	; select bank2
  4456  002A' 0080'              	movwf	??_Cell_ON^(0+256)
  4457  002B' 30E4               	movlw	228
  4458  002C'                    u7657:
  4459  002C' 0B89               	decfsz	9,f
  4460  002D' 2800'              	goto	u7657
  4461  002E' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4462  002F' 2800'              	goto	u7657
  4463  0030' 0000               	nop
  4464  0031'                    l4461:
  4465                           
  4466                           ;charger_discharger.c: 516:         { RB4 = 0; };
  4467  0031' 0020               	movlb	0	; select bank0
  4468  0032' 120D               	bcf	13,4	;volatile
  4469                           
  4470                           ;charger_discharger.c: 517:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4471  0033' 3068               	movlw	104
  4472  0034' 0022               	movlb	2	; select bank2
  4473  0035' 0080'              	movwf	??_Cell_ON^(0+256)
  4474  0036' 30E4               	movlw	228
  4475  0037'                    u7627:
  4476  0037' 0B89               	decfsz	9,f
  4477  0038' 2800'              	goto	u7627
  4478  0039' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4479  003A' 2800'              	goto	u7627
  4480  003B' 0000               	nop
  4481                           
  4482                           ;charger_discharger.c: 518:         { RB5 = 0; };
  4483  003C' 0020               	movlb	0	; select bank0
  4484  003D' 128D               	bcf	13,5	;volatile
  4485                           
  4486                           ;charger_discharger.c: 519:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4487  003E' 3068               	movlw	104
  4488  003F' 0022               	movlb	2	; select bank2
  4489  0040' 0080'              	movwf	??_Cell_ON^(0+256)
  4490  0041' 30E4               	movlw	228
  4491  0042'                    u7637:
  4492  0042' 0B89               	decfsz	9,f
  4493  0043' 2800'              	goto	u7637
  4494  0044' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4495  0045' 2800'              	goto	u7637
  4496  0046' 0000               	nop
  4497                           
  4498                           ;charger_discharger.c: 520:     }else if (cell_count == 2)
  4499  0047' 0008               	return
  4500  0048'                    l4465:
  4501  0048' 3002               	movlw	2
  4502  0049' 0600'              	xorwf	_cell_count^(0+384),w
  4503  004A' 1903               	btfsc	3,2
  4504  004B' 2800'              	goto	l4467
  4505  004C' 3003               	movlw	3
  4506  004D' 0600'              	xorwf	_cell_count^(0+384),w
  4507  004E' 1D03               	btfss	3,2
  4508  004F' 2800'              	goto	l4489
  4509                           
  4510                           ;charger_discharger.c: 531:     {;charger_discharger.c: 532:         { RB2 = 0; };
  4511  0050' 0020               	movlb	0	; select bank0
  4512  0051' 110D               	bcf	13,2	;volatile
  4513                           
  4514                           ;charger_discharger.c: 533:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4515  0052' 3068               	movlw	104
  4516  0053' 0022               	movlb	2	; select bank2
  4517  0054' 0080'              	movwf	??_Cell_ON^(0+256)
  4518  0055' 30E4               	movlw	228
  4519  0056'                    u7667:
  4520  0056' 0B89               	decfsz	9,f
  4521  0057' 2800'              	goto	u7667
  4522  0058' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4523  0059' 2800'              	goto	u7667
  4524  005A' 0000               	nop
  4525                           
  4526                           ;charger_discharger.c: 534:         { RB3 = 0; };
  4527  005B' 0020               	movlb	0	; select bank0
  4528  005C' 118D               	bcf	13,3	;volatile
  4529                           
  4530                           ;charger_discharger.c: 535:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4531  005D' 3068               	movlw	104
  4532  005E' 0022               	movlb	2	; select bank2
  4533  005F' 0080'              	movwf	??_Cell_ON^(0+256)
  4534  0060' 30E4               	movlw	228
  4535  0061'                    u7677:
  4536  0061' 0B89               	decfsz	9,f
  4537  0062' 2800'              	goto	u7677
  4538  0063' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4539  0064' 2800'              	goto	u7677
  4540  0065' 0000               	nop
  4541                           
  4542                           ;charger_discharger.c: 536:         { RB4 = 1; };
  4543  0066' 0020               	movlb	0	; select bank0
  4544  0067' 160D               	bsf	13,4	;volatile
  4545                           
  4546                           ;charger_discharger.c: 537:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4547  0068' 3068               	movlw	104
  4548  0069' 0022               	movlb	2	; select bank2
  4549  006A' 0080'              	movwf	??_Cell_ON^(0+256)
  4550  006B' 30E4               	movlw	228
  4551  006C'                    u7687:
  4552  006C' 0B89               	decfsz	9,f
  4553  006D' 2800'              	goto	u7687
  4554  006E' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4555  006F' 2800'              	goto	u7687
  4556  0070' 0000               	nop
  4557                           
  4558                           ;charger_discharger.c: 538:         { RB5 = 0; };
  4559  0071' 0020               	movlb	0	; select bank0
  4560  0072' 128D               	bcf	13,5	;volatile
  4561                           
  4562                           ;charger_discharger.c: 539:     }else if (cell_count == 4)
  4563  0073' 0008               	return
  4564  0074'                    l4489:
  4565  0074' 3004               	movlw	4
  4566  0075' 0600'              	xorwf	_cell_count^(0+384),w
  4567  0076' 1D03               	btfss	3,2
  4568  0077' 0008               	return
  4569                           
  4570                           ;charger_discharger.c: 540:     {;charger_discharger.c: 541:         { RB2 = 0; };
  4571  0078' 0020               	movlb	0	; select bank0
  4572  0079' 110D               	bcf	13,2	;volatile
  4573                           
  4574                           ;charger_discharger.c: 542:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4575  007A' 3068               	movlw	104
  4576  007B' 0022               	movlb	2	; select bank2
  4577  007C' 0080'              	movwf	??_Cell_ON^(0+256)
  4578  007D' 30E4               	movlw	228
  4579  007E'                    u7697:
  4580  007E' 0B89               	decfsz	9,f
  4581  007F' 2800'              	goto	u7697
  4582  0080' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4583  0081' 2800'              	goto	u7697
  4584  0082' 0000               	nop
  4585                           
  4586                           ;charger_discharger.c: 543:         { RB3 = 0; };
  4587  0083' 0020               	movlb	0	; select bank0
  4588  0084' 118D               	bcf	13,3	;volatile
  4589                           
  4590                           ;charger_discharger.c: 544:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4591  0085' 3068               	movlw	104
  4592  0086' 0022               	movlb	2	; select bank2
  4593  0087' 0080'              	movwf	??_Cell_ON^(0+256)
  4594  0088' 30E4               	movlw	228
  4595  0089'                    u7707:
  4596  0089' 0B89               	decfsz	9,f
  4597  008A' 2800'              	goto	u7707
  4598  008B' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4599  008C' 2800'              	goto	u7707
  4600  008D' 0000               	nop
  4601                           
  4602                           ;charger_discharger.c: 545:         { RB4 = 0; };
  4603  008E' 0020               	movlb	0	; select bank0
  4604  008F' 120D               	bcf	13,4	;volatile
  4605                           
  4606                           ;charger_discharger.c: 546:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4607  0090' 3068               	movlw	104
  4608  0091' 0022               	movlb	2	; select bank2
  4609  0092' 0080'              	movwf	??_Cell_ON^(0+256)
  4610  0093' 30E4               	movlw	228
  4611  0094'                    u7717:
  4612  0094' 0B89               	decfsz	9,f
  4613  0095' 2800'              	goto	u7717
  4614  0096' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4615  0097' 2800'              	goto	u7717
  4616  0098' 0000               	nop
  4617                           
  4618                           ;charger_discharger.c: 547:         { RB5 = 1; };
  4619  0099' 0020               	movlb	0	; select bank0
  4620  009A' 168D               	bsf	13,5	;volatile
  4621                           
  4622                           ;charger_discharger.c: 548:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4623  009B' 3068               	movlw	104
  4624  009C' 0022               	movlb	2	; select bank2
  4625  009D' 0080'              	movwf	??_Cell_ON^(0+256)
  4626  009E' 30E4               	movlw	228
  4627  009F'                    u7727:
  4628  009F' 0B89               	decfsz	9,f
  4629  00A0' 2800'              	goto	u7727
  4630  00A1' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4631  00A2' 2800'              	goto	u7727
  4632  00A3' 0000               	nop
  4633  00A4' 0008               	return
  4634  00A5'                    __end_of_Cell_ON:
  4635                           
  4636                           	psect	text8
  4637  0000'                    __ptext8:	
  4638 ;; *************** function _fIDLE *****************
  4639 ;; Defined at:
  4640 ;;		line 55 in file "state_machine_b.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;		None
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;		None
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  1    wreg      void 
  4647 ;; Registers used:
  4648 ;;		wreg, status,2, status,0, pclath, cstack
  4649 ;; Tracked objects:
  4650 ;;		On entry : 18/3
  4651 ;;		On exit  : 1F/1
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4658 ;;Total ram usage:        0 bytes
  4659 ;; Hardware stack levels used: 1
  4660 ;; Hardware stack levels required when called: 7
  4661 ;; This function calls:
  4662 ;;		_Cell_OFF
  4663 ;;		_set_DC
  4664 ;; This function is called by:
  4665 ;;		_state_machine
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669  0000'                    _fIDLE:	
  4670                           ;psect for function _fIDLE
  4671                           
  4672                           
  4673                           ;state_machine_b.c: 58:     if (start) { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50.
      +                          0; set_DC(); Cell_OFF();};
  4674                           
  4675                           ;incstack = 0
  4676                           ; Regs used in _fIDLE: [wreg+status,2+status,0+pclath+cstack]
  4677  0000' 0021               	movlb	1	; select bank1
  4678  0001' 0800'              	movf	_start^(0+128),w
  4679  0002' 1903               	btfsc	3,2
  4680  0003' 2800'              	goto	l6017
  4681  0004' 0020               	movlb	0	; select bank0
  4682  0005' 118E               	bcf	14,3	;volatile
  4683  0006' 120E               	bcf	14,4	;volatile
  4684  0007' 0021               	movlb	1	; select bank1
  4685  0008' 0180'              	clrf	_conv^(0+128)
  4686  0009' 0020               	movlb	0	; select bank0
  4687  000A' 128E               	bcf	14,5	;volatile
  4688  000B' 3042               	movlw	66
  4689  000C' 0023               	movlb	3	; select bank3
  4690  000D' 0080'              	movwf	(_pidt+3)^(0+384)
  4691  000E' 3048               	movlw	72
  4692  000F' 0080'              	movwf	(_pidt+2)^(0+384)
  4693  0010' 3000               	movlw	0
  4694  0011' 0080'              	movwf	(_pidt+1)^(0+384)
  4695  0012' 3000               	movlw	0
  4696  0013' 0080'              	movwf	_pidt^(0+384)
  4697  0014' 3180' 2000' 3180'  	fcall	_set_DC
  4698  0017' 3180' 2000'        	fcall	_Cell_OFF
  4699  0019'                    l6017:
  4700                           
  4701                           ;state_machine_b.c: 59:     start = 0;
  4702  0019' 0021               	movlb	1	; select bank1
  4703  001A' 0180'              	clrf	_start^(0+128)
  4704  001B' 0008               	return
  4705  001C'                    __end_of_fIDLE:
  4706                           
  4707                           	psect	text9
  4708  0000'                    __ptext9:	
  4709 ;; *************** function _fDISCHARGE *****************
  4710 ;; Defined at:
  4711 ;;		line 96 in file "state_machine_b.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;		None
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;		None
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  1    wreg      void 
  4718 ;; Registers used:
  4719 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4720 ;; Tracked objects:
  4721 ;;		On entry : 18/3
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4727 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4728 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4729 ;;Total ram usage:        2 bytes
  4730 ;; Hardware stack levels used: 1
  4731 ;; Hardware stack levels required when called: 7
  4732 ;; This function calls:
  4733 ;;		_Cell_OFF
  4734 ;;		___fladd
  4735 ;;		___fldiv
  4736 ;;		___flge
  4737 ;;		___flmul
  4738 ;;		___fltol
  4739 ;;		___xxtofl
  4740 ;;		_getTime
  4741 ;;		_set_DC
  4742 ;; This function is called by:
  4743 ;;		_state_machine
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747  0000'                    _fDISCHARGE:	
  4748                           ;psect for function _fDISCHARGE
  4749                           
  4750                           
  4751                           ;state_machine_b.c: 98:     if ( (((uint16_t) ( ( ( (float)vavg * 5000.0 ) / 4096.0 ) + 
      +                          0.5 )) < basic_configuration.end_of_discharge) )
  4752                           
  4753                           ;incstack = 0
  4754                           ; Regs used in _fDISCHARGE: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4755  0000' 0023               	movlb	3	; select bank3
  4756  0001' 0800'              	movf	_vavg^(0+384),w
  4757  0002' 0022               	movlb	2	; select bank2
  4758  0003' 0080'              	movwf	___xxtofl@val^(0+256)
  4759  0004' 0023               	movlb	3	; select bank3
  4760  0005' 0800'              	movf	(_vavg+1)^(0+384),w
  4761  0006' 0022               	movlb	2	; select bank2
  4762  0007' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  4763  0008' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  4764  0009' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  4765  000A' 3000               	movlw	0
  4766  000B' 3180' 2000' 3180'  	fcall	___xxtofl
  4767  000E' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  4768  000F' 0080'              	movwf	(___flmul@a+3)^(0+256)
  4769  0010' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  4770  0011' 0080'              	movwf	(___flmul@a+2)^(0+256)
  4771  0012' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  4772  0013' 0080'              	movwf	(___flmul@a+1)^(0+256)
  4773  0014' 0800'              	movf	?___xxtofl^(0+256),w
  4774  0015' 0080'              	movwf	___flmul@a^(0+256)
  4775  0016' 3045               	movlw	69
  4776  0017' 0080'              	movwf	(___flmul@b+3)^(0+256)
  4777  0018' 309C               	movlw	156
  4778  0019' 0080'              	movwf	(___flmul@b+2)^(0+256)
  4779  001A' 3040               	movlw	64
  4780  001B' 0080'              	movwf	(___flmul@b+1)^(0+256)
  4781  001C' 3000               	movlw	0
  4782  001D' 0080'              	movwf	___flmul@b^(0+256)
  4783  001E' 3180' 2000' 3180'  	fcall	___flmul
  4784  0021' 0800'              	movf	(?___flmul+3)^(0+256),w
  4785  0022' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  4786  0023' 0800'              	movf	(?___flmul+2)^(0+256),w
  4787  0024' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  4788  0025' 0800'              	movf	(?___flmul+1)^(0+256),w
  4789  0026' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  4790  0027' 0800'              	movf	?___flmul^(0+256),w
  4791  0028' 0080'              	movwf	___fldiv@b^(0+256)
  4792  0029' 3045               	movlw	69
  4793  002A' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  4794  002B' 3080               	movlw	128
  4795  002C' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  4796  002D' 3000               	movlw	0
  4797  002E' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  4798  002F' 3000               	movlw	0
  4799  0030' 0080'              	movwf	___fldiv@a^(0+256)
  4800  0031' 3180' 2000' 3180'  	fcall	___fldiv
  4801  0034' 0800'              	movf	(?___fldiv+3)^(0+256),w
  4802  0035' 0080'              	movwf	(___fladd@a+3)^(0+256)
  4803  0036' 0800'              	movf	(?___fldiv+2)^(0+256),w
  4804  0037' 0080'              	movwf	(___fladd@a+2)^(0+256)
  4805  0038' 0800'              	movf	(?___fldiv+1)^(0+256),w
  4806  0039' 0080'              	movwf	(___fladd@a+1)^(0+256)
  4807  003A' 0800'              	movf	?___fldiv^(0+256),w
  4808  003B' 0080'              	movwf	___fladd@a^(0+256)
  4809  003C' 303F               	movlw	63
  4810  003D' 0080'              	movwf	(___fladd@b+3)^(0+256)
  4811  003E' 3000               	movlw	0
  4812  003F' 0080'              	movwf	(___fladd@b+2)^(0+256)
  4813  0040' 3000               	movlw	0
  4814  0041' 0080'              	movwf	(___fladd@b+1)^(0+256)
  4815  0042' 3000               	movlw	0
  4816  0043' 0080'              	movwf	___fladd@b^(0+256)
  4817  0044' 3180' 2000' 3180'  	fcall	___fladd
  4818  0047' 0800'              	movf	(?___fladd+3)^(0+256),w
  4819  0048' 0023               	movlb	3	; select bank3
  4820  0049' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  4821  004A' 0022               	movlb	2	; select bank2
  4822  004B' 0800'              	movf	(?___fladd+2)^(0+256),w
  4823  004C' 0023               	movlb	3	; select bank3
  4824  004D' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  4825  004E' 0022               	movlb	2	; select bank2
  4826  004F' 0800'              	movf	(?___fladd+1)^(0+256),w
  4827  0050' 0023               	movlb	3	; select bank3
  4828  0051' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  4829  0052' 0022               	movlb	2	; select bank2
  4830  0053' 0800'              	movf	?___fladd^(0+256),w
  4831  0054' 0023               	movlb	3	; select bank3
  4832  0055' 0080'              	movwf	___fltol@f1^(0+384)
  4833  0056' 3180' 2000' 3180'  	fcall	___fltol
  4834  0059' 0024               	movlb	4	; select bank4
  4835  005A' 080D'              	movf	((_basic_configuration+1)^(0+512)+13),w
  4836  005B' 0023               	movlb	3	; select bank3
  4837  005C' 0200'              	subwf	(?___fltol+1)^(0+384),w
  4838  005D' 1D03               	skipz
  4839  005E' 2800'              	goto	u6515
  4840  005F' 0024               	movlb	4	; select bank4
  4841  0060' 080D'              	movf	(_basic_configuration^(0+512)+13),w
  4842  0061' 0023               	movlb	3	; select bank3
  4843  0062' 0200'              	subwf	?___fltol^(0+384),w
  4844  0063'                    u6515:
  4845  0063' 1803               	skipnc
  4846  0064' 2800'              	goto	l6041
  4847                           
  4848                           ;state_machine_b.c: 99:     {;state_machine_b.c: 100:         if (second > 5)
  4849  0065' 3000               	movlw	0
  4850  0066' 0200'              	subwf	(_second+1)^(0+384),w
  4851  0067' 3006               	movlw	6
  4852  0068' 1903               	skipnz
  4853  0069' 0200'              	subwf	_second^(0+384),w
  4854  006A' 1C03               	skipc
  4855  006B' 2800'              	goto	l6041
  4856                           
  4857                           ;state_machine_b.c: 101:         {;state_machine_b.c: 102:             state = WAIT;
  4858  006C' 300D               	movlw	13
  4859  006D' 0080'              	movwf	_state^(0+384)
  4860                           
  4861                           ;state_machine_b.c: 103:             wait_count = getTime();
  4862  006E' 3180' 2000' 3180'  	fcall	_getTime
  4863  0071' 0023               	movlb	3	; select bank3
  4864  0072' 0080'              	movwf	??_fDISCHARGE^(0+384)
  4865  0073' 0181'              	clrf	(??_fDISCHARGE^(0+384)+1)
  4866  0074' 0800'              	movf	??_fDISCHARGE^(0+384),w
  4867  0075' 0080'              	movwf	_wait_count^(0+384)
  4868  0076' 0800'              	movf	(??_fDISCHARGE+1)^(0+384),w
  4869  0077' 0080'              	movwf	(_wait_count+1)^(0+384)
  4870                           
  4871                           ;state_machine_b.c: 104:             { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50.0;
      +                           set_DC(); Cell_OFF();};
  4872  0078' 0020               	movlb	0	; select bank0
  4873  0079' 118E               	bcf	14,3	;volatile
  4874  007A' 120E               	bcf	14,4	;volatile
  4875  007B' 0021               	movlb	1	; select bank1
  4876  007C' 0180'              	clrf	_conv^(0+128)
  4877  007D' 0020               	movlb	0	; select bank0
  4878  007E' 128E               	bcf	14,5	;volatile
  4879  007F' 3042               	movlw	66
  4880  0080' 0023               	movlb	3	; select bank3
  4881  0081' 0080'              	movwf	(_pidt+3)^(0+384)
  4882  0082' 3048               	movlw	72
  4883  0083' 0080'              	movwf	(_pidt+2)^(0+384)
  4884  0084' 3000               	movlw	0
  4885  0085' 0080'              	movwf	(_pidt+1)^(0+384)
  4886  0086' 3000               	movlw	0
  4887  0087' 0080'              	movwf	_pidt^(0+384)
  4888  0088' 3180' 2000' 3180'  	fcall	_set_DC
  4889  008B' 3180' 2000' 3180'  	fcall	_Cell_OFF
  4890  008E'                    l6041:
  4891                           
  4892                           ;state_machine_b.c: 107:     if (state == POSTDISCHARGE)
  4893  008E' 3009               	movlw	9
  4894  008F' 0023               	movlb	3	; select bank3
  4895  0090' 0600'              	xorwf	_state^(0+384),w
  4896  0091' 1D03               	btfss	3,2
  4897  0092' 0008               	return
  4898                           
  4899                           ;state_machine_b.c: 108:     {;state_machine_b.c: 109:         if (basic_configuration.v
      +                          ersion == 1)
  4900  0093' 0024               	movlb	4	; select bank4
  4901  0094' 0300'              	decf	_basic_configuration^(0+512),w
  4902  0095' 1D03               	btfss	3,2
  4903  0096' 2800'              	goto	l6067
  4904                           
  4905                           ;state_machine_b.c: 110:         {;state_machine_b.c: 111:             if (qavg >= ( (ca
      +                          pacity) / 2 ) && (second >= 1))
  4906  0097' 0023               	movlb	3	; select bank3
  4907  0098' 0800'              	movf	(_qavg+3)^(0+384),w
  4908  0099' 0022               	movlb	2	; select bank2
  4909  009A' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  4910  009B' 0023               	movlb	3	; select bank3
  4911  009C' 0800'              	movf	(_qavg+2)^(0+384),w
  4912  009D' 0022               	movlb	2	; select bank2
  4913  009E' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  4914  009F' 0023               	movlb	3	; select bank3
  4915  00A0' 0800'              	movf	(_qavg+1)^(0+384),w
  4916  00A1' 0022               	movlb	2	; select bank2
  4917  00A2' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  4918  00A3' 0023               	movlb	3	; select bank3
  4919  00A4' 0800'              	movf	_qavg^(0+384),w
  4920  00A5' 0022               	movlb	2	; select bank2
  4921  00A6' 0080'              	movwf	___flge@ff1^(0+256)
  4922  00A7' 0023               	movlb	3	; select bank3
  4923  00A8' 0800'              	movf	(_capacity+1)^(0+384),w
  4924  00A9' 0081'              	movwf	(??_fDISCHARGE^(0+384)+1)
  4925  00AA' 0800'              	movf	_capacity^(0+384),w
  4926  00AB' 0080'              	movwf	??_fDISCHARGE^(0+384)
  4927  00AC' 3681'              	lsrf	(??_fDISCHARGE^(0+384)+1),f
  4928  00AD' 0C80'              	rrf	??_fDISCHARGE^(0+384),f
  4929  00AE' 0800'              	movf	??_fDISCHARGE^(0+384),w
  4930  00AF' 0022               	movlb	2	; select bank2
  4931  00B0' 0080'              	movwf	___xxtofl@val^(0+256)
  4932  00B1' 0023               	movlb	3	; select bank3
  4933  00B2' 0800'              	movf	(??_fDISCHARGE+1)^(0+384),w
  4934  00B3' 0022               	movlb	2	; select bank2
  4935  00B4' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  4936  00B5' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  4937  00B6' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  4938  00B7' 3000               	movlw	0
  4939  00B8' 3180' 2000' 3180'  	fcall	___xxtofl
  4940  00BB' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  4941  00BC' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  4942  00BD' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  4943  00BE' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  4944  00BF' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  4945  00C0' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  4946  00C1' 0800'              	movf	?___xxtofl^(0+256),w
  4947  00C2' 0080'              	movwf	___flge@ff2^(0+256)
  4948  00C3' 3180' 2000' 3180'  	fcall	___flge
  4949  00C6' 1C03               	btfss	3,0
  4950  00C7' 0008               	return
  4951  00C8' 0023               	movlb	3	; select bank3
  4952  00C9' 0800'              	movf	_second^(0+384),w
  4953  00CA' 0400'              	iorwf	(_second+1)^(0+384),w
  4954  00CB' 1903               	btfsc	3,2
  4955  00CC' 0008               	return
  4956                           
  4957                           ;state_machine_b.c: 112:             {;state_machine_b.c: 113:                 state = W
      +                          AIT;
  4958  00CD' 300D               	movlw	13
  4959  00CE'                    L5:
  4960  00CE' 0080'              	movwf	_state^(0+384)
  4961                           
  4962                           ;state_machine_b.c: 114:                 wait_count = getTime();
  4963  00CF' 3180' 2000' 3180'  	fcall	_getTime
  4964  00D2' 0023               	movlb	3	; select bank3
  4965  00D3' 0080'              	movwf	??_fDISCHARGE^(0+384)
  4966  00D4' 0181'              	clrf	(??_fDISCHARGE^(0+384)+1)
  4967  00D5' 0800'              	movf	??_fDISCHARGE^(0+384),w
  4968  00D6' 0080'              	movwf	_wait_count^(0+384)
  4969  00D7' 0800'              	movf	(??_fDISCHARGE+1)^(0+384),w
  4970  00D8' 0080'              	movwf	(_wait_count+1)^(0+384)
  4971                           
  4972                           ;state_machine_b.c: 115:                 { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 5
      +                          0.0; set_DC(); Cell_OFF();};
  4973  00D9' 0020               	movlb	0	; select bank0
  4974  00DA' 118E               	bcf	14,3	;volatile
  4975  00DB' 120E               	bcf	14,4	;volatile
  4976  00DC' 0021               	movlb	1	; select bank1
  4977  00DD' 0180'              	clrf	_conv^(0+128)
  4978  00DE' 0020               	movlb	0	; select bank0
  4979  00DF' 128E               	bcf	14,5	;volatile
  4980  00E0' 3042               	movlw	66
  4981  00E1' 0023               	movlb	3	; select bank3
  4982  00E2' 0080'              	movwf	(_pidt+3)^(0+384)
  4983  00E3' 3048               	movlw	72
  4984  00E4' 0080'              	movwf	(_pidt+2)^(0+384)
  4985  00E5' 3000               	movlw	0
  4986  00E6' 0080'              	movwf	(_pidt+1)^(0+384)
  4987  00E7' 3000               	movlw	0
  4988  00E8' 0080'              	movwf	_pidt^(0+384)
  4989  00E9' 3180' 2000' 3180'  	fcall	_set_DC
  4990  00EC' 3180' 2000'        	fcall	_Cell_OFF
  4991  00EE' 0008               	return
  4992  00EF'                    l6067:
  4993  00EF' 3002               	movlw	2
  4994  00F0' 0600'              	xorwf	_basic_configuration^(0+512),w
  4995  00F1' 1D03               	btfss	3,2
  4996  00F2' 0008               	return
  4997                           
  4998                           ;state_machine_b.c: 119:         {;state_machine_b.c: 120:             if (((uint16_t) (
      +                           ( ( (float)vavg * 5000.0 ) / 4096.0 ) + 0.5 )) <= basic_configuration.end_of_postdischa
      +                          rge || qavg >= ( (capacity) / 2 ) || (second >= timeout))
  4999  00F3' 0023               	movlb	3	; select bank3
  5000  00F4' 0800'              	movf	_vavg^(0+384),w
  5001  00F5' 0022               	movlb	2	; select bank2
  5002  00F6' 0080'              	movwf	___xxtofl@val^(0+256)
  5003  00F7' 0023               	movlb	3	; select bank3
  5004  00F8' 0800'              	movf	(_vavg+1)^(0+384),w
  5005  00F9' 0022               	movlb	2	; select bank2
  5006  00FA' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  5007  00FB' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  5008  00FC' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  5009  00FD' 3000               	movlw	0
  5010  00FE' 3180' 2000' 3180'  	fcall	___xxtofl
  5011  0101' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  5012  0102' 0080'              	movwf	(___flmul@a+3)^(0+256)
  5013  0103' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  5014  0104' 0080'              	movwf	(___flmul@a+2)^(0+256)
  5015  0105' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  5016  0106' 0080'              	movwf	(___flmul@a+1)^(0+256)
  5017  0107' 0800'              	movf	?___xxtofl^(0+256),w
  5018  0108' 0080'              	movwf	___flmul@a^(0+256)
  5019  0109' 3045               	movlw	69
  5020  010A' 0080'              	movwf	(___flmul@b+3)^(0+256)
  5021  010B' 309C               	movlw	156
  5022  010C' 0080'              	movwf	(___flmul@b+2)^(0+256)
  5023  010D' 3040               	movlw	64
  5024  010E' 0080'              	movwf	(___flmul@b+1)^(0+256)
  5025  010F' 3000               	movlw	0
  5026  0110' 0080'              	movwf	___flmul@b^(0+256)
  5027  0111' 3180' 2000' 3180'  	fcall	___flmul
  5028  0114' 0800'              	movf	(?___flmul+3)^(0+256),w
  5029  0115' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  5030  0116' 0800'              	movf	(?___flmul+2)^(0+256),w
  5031  0117' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  5032  0118' 0800'              	movf	(?___flmul+1)^(0+256),w
  5033  0119' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  5034  011A' 0800'              	movf	?___flmul^(0+256),w
  5035  011B' 0080'              	movwf	___fldiv@b^(0+256)
  5036  011C' 3045               	movlw	69
  5037  011D' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  5038  011E' 3080               	movlw	128
  5039  011F' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  5040  0120' 3000               	movlw	0
  5041  0121' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  5042  0122' 3000               	movlw	0
  5043  0123' 0080'              	movwf	___fldiv@a^(0+256)
  5044  0124' 3180' 2000' 3180'  	fcall	___fldiv
  5045  0127' 0800'              	movf	(?___fldiv+3)^(0+256),w
  5046  0128' 0080'              	movwf	(___fladd@a+3)^(0+256)
  5047  0129' 0800'              	movf	(?___fldiv+2)^(0+256),w
  5048  012A' 0080'              	movwf	(___fladd@a+2)^(0+256)
  5049  012B' 0800'              	movf	(?___fldiv+1)^(0+256),w
  5050  012C' 0080'              	movwf	(___fladd@a+1)^(0+256)
  5051  012D' 0800'              	movf	?___fldiv^(0+256),w
  5052  012E' 0080'              	movwf	___fladd@a^(0+256)
  5053  012F' 303F               	movlw	63
  5054  0130' 0080'              	movwf	(___fladd@b+3)^(0+256)
  5055  0131' 3000               	movlw	0
  5056  0132' 0080'              	movwf	(___fladd@b+2)^(0+256)
  5057  0133' 3000               	movlw	0
  5058  0134' 0080'              	movwf	(___fladd@b+1)^(0+256)
  5059  0135' 3000               	movlw	0
  5060  0136' 0080'              	movwf	___fladd@b^(0+256)
  5061  0137' 3180' 2000' 3180'  	fcall	___fladd
  5062  013A' 0800'              	movf	(?___fladd+3)^(0+256),w
  5063  013B' 0023               	movlb	3	; select bank3
  5064  013C' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  5065  013D' 0022               	movlb	2	; select bank2
  5066  013E' 0800'              	movf	(?___fladd+2)^(0+256),w
  5067  013F' 0023               	movlb	3	; select bank3
  5068  0140' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  5069  0141' 0022               	movlb	2	; select bank2
  5070  0142' 0800'              	movf	(?___fladd+1)^(0+256),w
  5071  0143' 0023               	movlb	3	; select bank3
  5072  0144' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  5073  0145' 0022               	movlb	2	; select bank2
  5074  0146' 0800'              	movf	?___fladd^(0+256),w
  5075  0147' 0023               	movlb	3	; select bank3
  5076  0148' 0080'              	movwf	___fltol@f1^(0+384)
  5077  0149' 3180' 2000' 3180'  	fcall	___fltol
  5078  014C' 0023               	movlb	3	; select bank3
  5079  014D' 0800'              	movf	(?___fltol+1)^(0+384),w
  5080  014E' 0024               	movlb	4	; select bank4
  5081  014F' 020F'              	subwf	((_basic_configuration+1)^(0+512)+15),w
  5082  0150' 1D03               	skipz
  5083  0151' 2800'              	goto	u6585
  5084  0152' 0023               	movlb	3	; select bank3
  5085  0153' 0800'              	movf	?___fltol^(0+384),w
  5086  0154' 0024               	movlb	4	; select bank4
  5087  0155' 020F'              	subwf	(_basic_configuration^(0+512)+15),w
  5088  0156'                    u6585:
  5089  0156' 1803               	skipnc
  5090  0157' 2800'              	goto	l6075
  5091  0158' 0023               	movlb	3	; select bank3
  5092  0159' 0800'              	movf	(_qavg+3)^(0+384),w
  5093  015A' 0022               	movlb	2	; select bank2
  5094  015B' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  5095  015C' 0023               	movlb	3	; select bank3
  5096  015D' 0800'              	movf	(_qavg+2)^(0+384),w
  5097  015E' 0022               	movlb	2	; select bank2
  5098  015F' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  5099  0160' 0023               	movlb	3	; select bank3
  5100  0161' 0800'              	movf	(_qavg+1)^(0+384),w
  5101  0162' 0022               	movlb	2	; select bank2
  5102  0163' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  5103  0164' 0023               	movlb	3	; select bank3
  5104  0165' 0800'              	movf	_qavg^(0+384),w
  5105  0166' 0022               	movlb	2	; select bank2
  5106  0167' 0080'              	movwf	___flge@ff1^(0+256)
  5107  0168' 0023               	movlb	3	; select bank3
  5108  0169' 0800'              	movf	(_capacity+1)^(0+384),w
  5109  016A' 0081'              	movwf	(??_fDISCHARGE^(0+384)+1)
  5110  016B' 0800'              	movf	_capacity^(0+384),w
  5111  016C' 0080'              	movwf	??_fDISCHARGE^(0+384)
  5112  016D' 3681'              	lsrf	(??_fDISCHARGE^(0+384)+1),f
  5113  016E' 0C80'              	rrf	??_fDISCHARGE^(0+384),f
  5114  016F' 0800'              	movf	??_fDISCHARGE^(0+384),w
  5115  0170' 0022               	movlb	2	; select bank2
  5116  0171' 0080'              	movwf	___xxtofl@val^(0+256)
  5117  0172' 0023               	movlb	3	; select bank3
  5118  0173' 0800'              	movf	(??_fDISCHARGE+1)^(0+384),w
  5119  0174' 0022               	movlb	2	; select bank2
  5120  0175' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  5121  0176' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  5122  0177' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  5123  0178' 3000               	movlw	0
  5124  0179' 3180' 2000' 3180'  	fcall	___xxtofl
  5125  017C' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  5126  017D' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  5127  017E' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  5128  017F' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  5129  0180' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  5130  0181' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  5131  0182' 0800'              	movf	?___xxtofl^(0+256),w
  5132  0183' 0080'              	movwf	___flge@ff2^(0+256)
  5133  0184' 3180' 2000' 3180'  	fcall	___flge
  5134  0187' 1803               	btfsc	3,0
  5135  0188' 2800'              	goto	l6075
  5136  0189' 0023               	movlb	3	; select bank3
  5137  018A' 0800'              	movf	(_timeout+1)^(0+384),w
  5138  018B' 0200'              	subwf	(_second+1)^(0+384),w
  5139  018C' 1D03               	skipz
  5140  018D' 2800'              	goto	u6605
  5141  018E' 0800'              	movf	_timeout^(0+384),w
  5142  018F' 0200'              	subwf	_second^(0+384),w
  5143  0190'                    u6605:
  5144  0190' 1C03               	skipc
  5145  0191' 0008               	return
  5146  0192'                    l6075:
  5147                           
  5148                           ;state_machine_b.c: 121:             {;state_machine_b.c: 122:                 state = W
      +                          AIT;
  5149  0192' 300D               	movlw	13
  5150  0193' 0023               	movlb	3	; select bank3
  5151  0194' 2800'              	goto	L5
  5152  0195'                    __end_of_fDISCHARGE:	
  5153                           ;state_machine_b.c: 124:                 { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 5
      +                          0.0; set_DC(); Cell_OFF();};
  5154                           
  5155                           ;state_machine_b.c: 123:                 wait_count = getTime();
  5156                           
  5157                           
  5158                           	psect	text10
  5159  0000'                    __ptext10:	
  5160 ;; *************** function _fDC_res *****************
  5161 ;; Defined at:
  5162 ;;		line 130 in file "state_machine_b.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;		None
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;		None
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  1    wreg      void 
  5169 ;; Registers used:
  5170 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5171 ;; Tracked objects:
  5172 ;;		On entry : 18/3
  5173 ;;		On exit  : 1F/3
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5177 ;;      Locals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  5178 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  5179 ;;      Totals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
  5180 ;;Total ram usage:        8 bytes
  5181 ;; Hardware stack levels used: 1
  5182 ;; Hardware stack levels required when called: 7
  5183 ;; This function calls:
  5184 ;;		_Cell_OFF
  5185 ;;		___fladd
  5186 ;;		___fldiv
  5187 ;;		___flmul
  5188 ;;		___fltol
  5189 ;;		___xxtofl
  5190 ;;		_getTime
  5191 ;;		_set_DC
  5192 ;; This function is called by:
  5193 ;;		_state_machine
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197  0000'                    _fDC_res:	
  5198                           ;psect for function _fDC_res
  5199                           
  5200                           
  5201                           ;state_machine_b.c: 134:     if (dc_res_count == 202)
  5202                           
  5203                           ;incstack = 0
  5204                           ; Regs used in _fDC_res: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5205  0000' 30CA               	movlw	202
  5206  0001' 0023               	movlb	3	; select bank3
  5207  0002' 0600'              	xorwf	_dc_res_count^(0+384),w
  5208  0003' 1D03               	btfss	3,2
  5209  0004' 2800'              	goto	l6179
  5210                           
  5211                           ;state_machine_b.c: 135:     {;state_machine_b.c: 136:         iref = (uint16_t) ( ( ( c
      +                          apacity * 4096.0 ) / (5000.0 * 2.5) ) * 0.75 + 0.5 );
  5212  0005' 0800'              	movf	_capacity^(0+384),w
  5213  0006' 0022               	movlb	2	; select bank2
  5214  0007' 0080'              	movwf	___xxtofl@val^(0+256)
  5215  0008' 0023               	movlb	3	; select bank3
  5216  0009' 0800'              	movf	(_capacity+1)^(0+384),w
  5217  000A' 0022               	movlb	2	; select bank2
  5218  000B' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  5219  000C' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  5220  000D' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  5221  000E' 3000               	movlw	0
  5222  000F' 3180' 2000' 3180'  	fcall	___xxtofl
  5223  0012' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  5224  0013' 0080'              	movwf	(___flmul@a+3)^(0+256)
  5225  0014' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  5226  0015' 0080'              	movwf	(___flmul@a+2)^(0+256)
  5227  0016' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  5228  0017' 0080'              	movwf	(___flmul@a+1)^(0+256)
  5229  0018' 0800'              	movf	?___xxtofl^(0+256),w
  5230  0019' 0080'              	movwf	___flmul@a^(0+256)
  5231  001A' 3045               	movlw	69
  5232  001B' 0080'              	movwf	(___flmul@b+3)^(0+256)
  5233  001C' 3080               	movlw	128
  5234  001D' 0080'              	movwf	(___flmul@b+2)^(0+256)
  5235  001E' 3000               	movlw	0
  5236  001F' 0080'              	movwf	(___flmul@b+1)^(0+256)
  5237  0020' 3000               	movlw	0
  5238  0021' 0080'              	movwf	___flmul@b^(0+256)
  5239  0022' 3180' 2000' 3180'  	fcall	___flmul
  5240  0025' 0800'              	movf	(?___flmul+3)^(0+256),w
  5241  0026' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  5242  0027' 0800'              	movf	(?___flmul+2)^(0+256),w
  5243  0028' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  5244  0029' 0800'              	movf	(?___flmul+1)^(0+256),w
  5245  002A' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  5246  002B' 0800'              	movf	?___flmul^(0+256),w
  5247  002C' 0080'              	movwf	___fldiv@b^(0+256)
  5248  002D' 3046               	movlw	70
  5249  002E' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  5250  002F' 3043               	movlw	67
  5251  0030' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  5252  0031' 3050               	movlw	80
  5253  0032' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  5254  0033' 3000               	movlw	0
  5255  0034' 0080'              	movwf	___fldiv@a^(0+256)
  5256  0035' 3180' 2000' 3180'  	fcall	___fldiv
  5257  0038' 0800'              	movf	(?___fldiv+3)^(0+256),w
  5258  0039' 0023               	movlb	3	; select bank3
  5259  003A' 0080'              	movwf	(_fDC_res$1610+3)^(0+384)
  5260  003B' 0022               	movlb	2	; select bank2
  5261  003C' 0800'              	movf	(?___fldiv+2)^(0+256),w
  5262  003D' 0023               	movlb	3	; select bank3
  5263  003E' 0080'              	movwf	(_fDC_res$1610+2)^(0+384)
  5264  003F' 0022               	movlb	2	; select bank2
  5265  0040' 0800'              	movf	(?___fldiv+1)^(0+256),w
  5266  0041' 0023               	movlb	3	; select bank3
  5267  0042' 0080'              	movwf	(_fDC_res$1610+1)^(0+384)
  5268  0043' 0022               	movlb	2	; select bank2
  5269  0044' 0800'              	movf	?___fldiv^(0+256),w
  5270  0045' 0023               	movlb	3	; select bank3
  5271  0046' 0080'              	movwf	_fDC_res$1610^(0+384)
  5272                           
  5273                           ;state_machine_b.c: 135:     {;state_machine_b.c: 136:         iref = (uint16_t) ( ( ( c
      +                          apacity * 4096.0 ) / (5000.0 * 2.5) ) * 0.75 + 0.5 );
  5274  0047' 0800'              	movf	(_fDC_res$1610+3)^(0+384),w
  5275  0048' 0022               	movlb	2	; select bank2
  5276  0049' 0080'              	movwf	(___flmul@a+3)^(0+256)
  5277  004A' 0023               	movlb	3	; select bank3
  5278  004B' 0800'              	movf	(_fDC_res$1610+2)^(0+384),w
  5279  004C' 0022               	movlb	2	; select bank2
  5280  004D' 0080'              	movwf	(___flmul@a+2)^(0+256)
  5281  004E' 0023               	movlb	3	; select bank3
  5282  004F' 0800'              	movf	(_fDC_res$1610+1)^(0+384),w
  5283  0050' 0022               	movlb	2	; select bank2
  5284  0051' 0080'              	movwf	(___flmul@a+1)^(0+256)
  5285  0052' 0023               	movlb	3	; select bank3
  5286  0053' 0800'              	movf	_fDC_res$1610^(0+384),w
  5287  0054' 0022               	movlb	2	; select bank2
  5288  0055' 0080'              	movwf	___flmul@a^(0+256)
  5289  0056' 303F               	movlw	63
  5290  0057' 0080'              	movwf	(___flmul@b+3)^(0+256)
  5291  0058' 3040               	movlw	64
  5292  0059' 0080'              	movwf	(___flmul@b+2)^(0+256)
  5293  005A' 3000               	movlw	0
  5294  005B' 0080'              	movwf	(___flmul@b+1)^(0+256)
  5295  005C' 3000               	movlw	0
  5296  005D' 0080'              	movwf	___flmul@b^(0+256)
  5297  005E' 3180' 2000' 3180'  	fcall	___flmul
  5298  0061' 0800'              	movf	(?___flmul+3)^(0+256),w
  5299  0062' 0080'              	movwf	(___fladd@a+3)^(0+256)
  5300  0063' 0800'              	movf	(?___flmul+2)^(0+256),w
  5301  0064' 0080'              	movwf	(___fladd@a+2)^(0+256)
  5302  0065' 0800'              	movf	(?___flmul+1)^(0+256),w
  5303  0066' 0080'              	movwf	(___fladd@a+1)^(0+256)
  5304  0067' 0800'              	movf	?___flmul^(0+256),w
  5305  0068' 0080'              	movwf	___fladd@a^(0+256)
  5306  0069' 303F               	movlw	63
  5307  006A' 0080'              	movwf	(___fladd@b+3)^(0+256)
  5308  006B' 3000               	movlw	0
  5309  006C' 0080'              	movwf	(___fladd@b+2)^(0+256)
  5310  006D' 3000               	movlw	0
  5311  006E' 0080'              	movwf	(___fladd@b+1)^(0+256)
  5312  006F' 3000               	movlw	0
  5313  0070' 0080'              	movwf	___fladd@b^(0+256)
  5314  0071' 3180' 2000' 3180'  	fcall	___fladd
  5315  0074' 0800'              	movf	(?___fladd+3)^(0+256),w
  5316  0075' 0023               	movlb	3	; select bank3
  5317  0076' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  5318  0077' 0022               	movlb	2	; select bank2
  5319  0078' 0800'              	movf	(?___fladd+2)^(0+256),w
  5320  0079' 0023               	movlb	3	; select bank3
  5321  007A' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  5322  007B' 0022               	movlb	2	; select bank2
  5323  007C' 0800'              	movf	(?___fladd+1)^(0+256),w
  5324  007D' 0023               	movlb	3	; select bank3
  5325  007E' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  5326  007F' 0022               	movlb	2	; select bank2
  5327  0080' 0800'              	movf	?___fladd^(0+256),w
  5328  0081' 0023               	movlb	3	; select bank3
  5329  0082' 0080'              	movwf	___fltol@f1^(0+384)
  5330  0083' 3180' 2000' 3180'  	fcall	___fltol
  5331  0086' 0023               	movlb	3	; select bank3
  5332  0087' 0800'              	movf	(?___fltol+1)^(0+384),w
  5333  0088' 0021               	movlb	1	; select bank1
  5334  0089' 0080'              	movwf	(_iref+1)^(0+128)
  5335  008A' 0023               	movlb	3	; select bank3
  5336  008B' 0800'              	movf	?___fltol^(0+384),w
  5337  008C' 0021               	movlb	1	; select bank1
  5338  008D' 0080'              	movwf	_iref^(0+128)
  5339  008E'                    l6179:
  5340                           
  5341                           ;state_machine_b.c: 138:     if (dc_res_count == 100)
  5342  008E' 3064               	movlw	100
  5343  008F' 0023               	movlb	3	; select bank3
  5344  0090' 0600'              	xorwf	_dc_res_count^(0+384),w
  5345  0091' 1D03               	btfss	3,2
  5346  0092' 2800'              	goto	l6183
  5347                           
  5348                           ;state_machine_b.c: 139:     {;state_machine_b.c: 140:         iref = 0;
  5349  0093' 0021               	movlb	1	; select bank1
  5350  0094' 0180'              	clrf	_iref^(0+128)
  5351  0095' 0180'              	clrf	(_iref+1)^(0+128)
  5352  0096'                    l6183:
  5353                           
  5354                           ;state_machine_b.c: 142:     if (dc_res_count == 60)
  5355  0096' 303C               	movlw	60
  5356  0097' 0023               	movlb	3	; select bank3
  5357  0098' 0600'              	xorwf	_dc_res_count^(0+384),w
  5358  0099' 1D03               	btfss	3,2
  5359  009A' 2800'              	goto	l6211
  5360                           
  5361                           ;state_machine_b.c: 143:     {;state_machine_b.c: 144:         iref = (uint16_t) ( ( ( c
      +                          apacity * 4096.0 ) / (5000.0 * 2.5) ) * 0.75 + 0.5 );
  5362  009B' 0800'              	movf	_capacity^(0+384),w
  5363  009C' 0022               	movlb	2	; select bank2
  5364  009D' 0080'              	movwf	___xxtofl@val^(0+256)
  5365  009E' 0023               	movlb	3	; select bank3
  5366  009F' 0800'              	movf	(_capacity+1)^(0+384),w
  5367  00A0' 0022               	movlb	2	; select bank2
  5368  00A1' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  5369  00A2' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  5370  00A3' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  5371  00A4' 3000               	movlw	0
  5372  00A5' 3180' 2000' 3180'  	fcall	___xxtofl
  5373  00A8' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  5374  00A9' 0080'              	movwf	(___flmul@a+3)^(0+256)
  5375  00AA' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  5376  00AB' 0080'              	movwf	(___flmul@a+2)^(0+256)
  5377  00AC' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  5378  00AD' 0080'              	movwf	(___flmul@a+1)^(0+256)
  5379  00AE' 0800'              	movf	?___xxtofl^(0+256),w
  5380  00AF' 0080'              	movwf	___flmul@a^(0+256)
  5381  00B0' 3045               	movlw	69
  5382  00B1' 0080'              	movwf	(___flmul@b+3)^(0+256)
  5383  00B2' 3080               	movlw	128
  5384  00B3' 0080'              	movwf	(___flmul@b+2)^(0+256)
  5385  00B4' 3000               	movlw	0
  5386  00B5' 0080'              	movwf	(___flmul@b+1)^(0+256)
  5387  00B6' 3000               	movlw	0
  5388  00B7' 0080'              	movwf	___flmul@b^(0+256)
  5389  00B8' 3180' 2000' 3180'  	fcall	___flmul
  5390  00BB' 0800'              	movf	(?___flmul+3)^(0+256),w
  5391  00BC' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  5392  00BD' 0800'              	movf	(?___flmul+2)^(0+256),w
  5393  00BE' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  5394  00BF' 0800'              	movf	(?___flmul+1)^(0+256),w
  5395  00C0' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  5396  00C1' 0800'              	movf	?___flmul^(0+256),w
  5397  00C2' 0080'              	movwf	___fldiv@b^(0+256)
  5398  00C3' 3046               	movlw	70
  5399  00C4' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  5400  00C5' 3043               	movlw	67
  5401  00C6' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  5402  00C7' 3050               	movlw	80
  5403  00C8' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  5404  00C9' 3000               	movlw	0
  5405  00CA' 0080'              	movwf	___fldiv@a^(0+256)
  5406  00CB' 3180' 2000' 3180'  	fcall	___fldiv
  5407  00CE' 0800'              	movf	(?___fldiv+3)^(0+256),w
  5408  00CF' 0023               	movlb	3	; select bank3
  5409  00D0' 0080'              	movwf	(_fDC_res$1610+3)^(0+384)
  5410  00D1' 0022               	movlb	2	; select bank2
  5411  00D2' 0800'              	movf	(?___fldiv+2)^(0+256),w
  5412  00D3' 0023               	movlb	3	; select bank3
  5413  00D4' 0080'              	movwf	(_fDC_res$1610+2)^(0+384)
  5414  00D5' 0022               	movlb	2	; select bank2
  5415  00D6' 0800'              	movf	(?___fldiv+1)^(0+256),w
  5416  00D7' 0023               	movlb	3	; select bank3
  5417  00D8' 0080'              	movwf	(_fDC_res$1610+1)^(0+384)
  5418  00D9' 0022               	movlb	2	; select bank2
  5419  00DA' 0800'              	movf	?___fldiv^(0+256),w
  5420  00DB' 0023               	movlb	3	; select bank3
  5421  00DC' 0080'              	movwf	_fDC_res$1610^(0+384)
  5422                           
  5423                           ;state_machine_b.c: 143:     {;state_machine_b.c: 144:         iref = (uint16_t) ( ( ( c
      +                          apacity * 4096.0 ) / (5000.0 * 2.5) ) * 0.75 + 0.5 );
  5424  00DD' 0800'              	movf	(_fDC_res$1610+3)^(0+384),w
  5425  00DE' 0022               	movlb	2	; select bank2
  5426  00DF' 0080'              	movwf	(___flmul@a+3)^(0+256)
  5427  00E0' 0023               	movlb	3	; select bank3
  5428  00E1' 0800'              	movf	(_fDC_res$1610+2)^(0+384),w
  5429  00E2' 0022               	movlb	2	; select bank2
  5430  00E3' 0080'              	movwf	(___flmul@a+2)^(0+256)
  5431  00E4' 0023               	movlb	3	; select bank3
  5432  00E5' 0800'              	movf	(_fDC_res$1610+1)^(0+384),w
  5433  00E6' 0022               	movlb	2	; select bank2
  5434  00E7' 0080'              	movwf	(___flmul@a+1)^(0+256)
  5435  00E8' 0023               	movlb	3	; select bank3
  5436  00E9' 0800'              	movf	_fDC_res$1610^(0+384),w
  5437  00EA' 0022               	movlb	2	; select bank2
  5438  00EB' 0080'              	movwf	___flmul@a^(0+256)
  5439  00EC' 303F               	movlw	63
  5440  00ED' 0080'              	movwf	(___flmul@b+3)^(0+256)
  5441  00EE' 3040               	movlw	64
  5442  00EF' 0080'              	movwf	(___flmul@b+2)^(0+256)
  5443  00F0' 3000               	movlw	0
  5444  00F1' 0080'              	movwf	(___flmul@b+1)^(0+256)
  5445  00F2' 3000               	movlw	0
  5446  00F3' 0080'              	movwf	___flmul@b^(0+256)
  5447  00F4' 3180' 2000' 3180'  	fcall	___flmul
  5448  00F7' 0800'              	movf	(?___flmul+3)^(0+256),w
  5449  00F8' 0080'              	movwf	(___fladd@a+3)^(0+256)
  5450  00F9' 0800'              	movf	(?___flmul+2)^(0+256),w
  5451  00FA' 0080'              	movwf	(___fladd@a+2)^(0+256)
  5452  00FB' 0800'              	movf	(?___flmul+1)^(0+256),w
  5453  00FC' 0080'              	movwf	(___fladd@a+1)^(0+256)
  5454  00FD' 0800'              	movf	?___flmul^(0+256),w
  5455  00FE' 0080'              	movwf	___fladd@a^(0+256)
  5456  00FF' 303F               	movlw	63
  5457  0100' 0080'              	movwf	(___fladd@b+3)^(0+256)
  5458  0101' 3000               	movlw	0
  5459  0102' 0080'              	movwf	(___fladd@b+2)^(0+256)
  5460  0103' 3000               	movlw	0
  5461  0104' 0080'              	movwf	(___fladd@b+1)^(0+256)
  5462  0105' 3000               	movlw	0
  5463  0106' 0080'              	movwf	___fladd@b^(0+256)
  5464  0107' 3180' 2000' 3180'  	fcall	___fladd
  5465  010A' 0800'              	movf	(?___fladd+3)^(0+256),w
  5466  010B' 0023               	movlb	3	; select bank3
  5467  010C' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  5468  010D' 0022               	movlb	2	; select bank2
  5469  010E' 0800'              	movf	(?___fladd+2)^(0+256),w
  5470  010F' 0023               	movlb	3	; select bank3
  5471  0110' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  5472  0111' 0022               	movlb	2	; select bank2
  5473  0112' 0800'              	movf	(?___fladd+1)^(0+256),w
  5474  0113' 0023               	movlb	3	; select bank3
  5475  0114' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  5476  0115' 0022               	movlb	2	; select bank2
  5477  0116' 0800'              	movf	?___fladd^(0+256),w
  5478  0117' 0023               	movlb	3	; select bank3
  5479  0118' 0080'              	movwf	___fltol@f1^(0+384)
  5480  0119' 3180' 2000' 3180'  	fcall	___fltol
  5481  011C' 0023               	movlb	3	; select bank3
  5482  011D' 0800'              	movf	(?___fltol+1)^(0+384),w
  5483  011E' 0021               	movlb	1	; select bank1
  5484  011F' 0080'              	movwf	(_iref+1)^(0+128)
  5485  0120' 0023               	movlb	3	; select bank3
  5486  0121' 0800'              	movf	?___fltol^(0+384),w
  5487  0122' 0021               	movlb	1	; select bank1
  5488  0123' 0080'              	movwf	_iref^(0+128)
  5489                           
  5490                           ;state_machine_b.c: 145:         { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(32000
      +                          000/4000.0))); RC4 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC4 = 0; _dela
      +                          y((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(3200
      +                          0000/4000.0))); kp = CC_char_kp; ki = CC_char_ki; kd = (float) (CC_char_disc_kd); pidi =
      +                           0.0;};
  5491  0124' 0020               	movlb	0	; select bank0
  5492  0125' 118E               	bcf	14,3	;volatile
  5493  0126' 120E               	bcf	14,4	;volatile
  5494  0127' 3005               	movlw	5
  5495  0128' 0023               	movlb	3	; select bank3
  5496  0129' 0081'              	movwf	(??_fDC_res^(0+384)+1)
  5497  012A' 300F               	movlw	15
  5498  012B' 0080'              	movwf	??_fDC_res^(0+384)
  5499  012C' 30F1               	movlw	241
  5500  012D'                    u7737:
  5501  012D' 0B89               	decfsz	9,f
  5502  012E' 2800'              	goto	u7737
  5503  012F' 0B80'              	decfsz	??_fDC_res^(0+384),f
  5504  0130' 2800'              	goto	u7737
  5505  0131' 0B81'              	decfsz	(??_fDC_res^(0+384)+1),f
  5506  0132' 2800'              	goto	u7737
  5507  0133' 0020               	movlb	0	; select bank0
  5508  0134' 160E               	bsf	14,4	;volatile
  5509  0135' 3005               	movlw	5
  5510  0136' 0023               	movlb	3	; select bank3
  5511  0137' 0081'              	movwf	(??_fDC_res^(0+384)+1)
  5512  0138' 300F               	movlw	15
  5513  0139' 0080'              	movwf	??_fDC_res^(0+384)
  5514  013A' 30F1               	movlw	241
  5515  013B'                    u7747:
  5516  013B' 0B89               	decfsz	9,f
  5517  013C' 2800'              	goto	u7747
  5518  013D' 0B80'              	decfsz	??_fDC_res^(0+384),f
  5519  013E' 2800'              	goto	u7747
  5520  013F' 0B81'              	decfsz	(??_fDC_res^(0+384)+1),f
  5521  0140' 2800'              	goto	u7747
  5522  0141' 0020               	movlb	0	; select bank0
  5523  0142' 120E               	bcf	14,4	;volatile
  5524  0143' 3005               	movlw	5
  5525  0144' 0023               	movlb	3	; select bank3
  5526  0145' 0081'              	movwf	(??_fDC_res^(0+384)+1)
  5527  0146' 300F               	movlw	15
  5528  0147' 0080'              	movwf	??_fDC_res^(0+384)
  5529  0148' 30F1               	movlw	241
  5530  0149'                    u7757:
  5531  0149' 0B89               	decfsz	9,f
  5532  014A' 2800'              	goto	u7757
  5533  014B' 0B80'              	decfsz	??_fDC_res^(0+384),f
  5534  014C' 2800'              	goto	u7757
  5535  014D' 0B81'              	decfsz	(??_fDC_res^(0+384)+1),f
  5536  014E' 2800'              	goto	u7757
  5537  014F' 0020               	movlb	0	; select bank0
  5538  0150' 168E               	bsf	14,5	;volatile
  5539  0151' 3005               	movlw	5
  5540  0152' 0023               	movlb	3	; select bank3
  5541  0153' 0081'              	movwf	(??_fDC_res^(0+384)+1)
  5542  0154' 300F               	movlw	15
  5543  0155' 0080'              	movwf	??_fDC_res^(0+384)
  5544  0156' 30F1               	movlw	241
  5545  0157'                    u7767:
  5546  0157' 0B89               	decfsz	9,f
  5547  0158' 2800'              	goto	u7767
  5548  0159' 0B80'              	decfsz	??_fDC_res^(0+384),f
  5549  015A' 2800'              	goto	u7767
  5550  015B' 0B81'              	decfsz	(??_fDC_res^(0+384)+1),f
  5551  015C' 2800'              	goto	u7767
  5552  015D' 0023               	movlb	3	; select bank3
  5553  015E' 0800'              	movf	(_CC_char_kp+3)^(0+384),w
  5554  015F' 0024               	movlb	4	; select bank4
  5555  0160' 0080'              	movwf	(_kp+3)^(0+512)
  5556  0161' 0023               	movlb	3	; select bank3
  5557  0162' 0800'              	movf	(_CC_char_kp+2)^(0+384),w
  5558  0163' 0024               	movlb	4	; select bank4
  5559  0164' 0080'              	movwf	(_kp+2)^(0+512)
  5560  0165' 0023               	movlb	3	; select bank3
  5561  0166' 0800'              	movf	(_CC_char_kp+1)^(0+384),w
  5562  0167' 0024               	movlb	4	; select bank4
  5563  0168' 0080'              	movwf	(_kp+1)^(0+512)
  5564  0169' 0023               	movlb	3	; select bank3
  5565  016A' 0800'              	movf	_CC_char_kp^(0+384),w
  5566  016B' 0024               	movlb	4	; select bank4
  5567  016C' 0080'              	movwf	_kp^(0+512)
  5568  016D' 0023               	movlb	3	; select bank3
  5569  016E' 0800'              	movf	(_CC_char_ki+3)^(0+384),w
  5570  016F' 0024               	movlb	4	; select bank4
  5571  0170' 0080'              	movwf	(_ki+3)^(0+512)
  5572  0171' 0023               	movlb	3	; select bank3
  5573  0172' 0800'              	movf	(_CC_char_ki+2)^(0+384),w
  5574  0173' 0024               	movlb	4	; select bank4
  5575  0174' 0080'              	movwf	(_ki+2)^(0+512)
  5576  0175' 0023               	movlb	3	; select bank3
  5577  0176' 0800'              	movf	(_CC_char_ki+1)^(0+384),w
  5578  0177' 0024               	movlb	4	; select bank4
  5579  0178' 0080'              	movwf	(_ki+1)^(0+512)
  5580  0179' 0023               	movlb	3	; select bank3
  5581  017A' 0800'              	movf	_CC_char_ki^(0+384),w
  5582  017B' 0024               	movlb	4	; select bank4
  5583  017C' 0080'              	movwf	_ki^(0+512)
  5584  017D' 0023               	movlb	3	; select bank3
  5585  017E' 0800'              	movf	_CC_char_disc_kd^(0+384),w
  5586  017F' 0080'              	movwf	??_fDC_res^(0+384)
  5587  0180' 0181'              	clrf	(??_fDC_res^(0+384)+1)
  5588  0181' 0182'              	clrf	(??_fDC_res^(0+384)+2)
  5589  0182' 0183'              	clrf	(??_fDC_res^(0+384)+3)
  5590  0183' 0800'              	movf	(??_fDC_res+3)^(0+384),w
  5591  0184' 0022               	movlb	2	; select bank2
  5592  0185' 0080'              	movwf	(___xxtofl@val+3)^(0+256)
  5593  0186' 0023               	movlb	3	; select bank3
  5594  0187' 0800'              	movf	(??_fDC_res+2)^(0+384),w
  5595  0188' 0022               	movlb	2	; select bank2
  5596  0189' 0080'              	movwf	(___xxtofl@val+2)^(0+256)
  5597  018A' 0023               	movlb	3	; select bank3
  5598  018B' 0800'              	movf	(??_fDC_res+1)^(0+384),w
  5599  018C' 0022               	movlb	2	; select bank2
  5600  018D' 0080'              	movwf	(___xxtofl@val+1)^(0+256)
  5601  018E' 0023               	movlb	3	; select bank3
  5602  018F' 0800'              	movf	??_fDC_res^(0+384),w
  5603  0190' 0022               	movlb	2	; select bank2
  5604  0191' 0080'              	movwf	___xxtofl@val^(0+256)
  5605  0192' 3000               	movlw	0
  5606  0193' 3180' 2000' 3180'  	fcall	___xxtofl
  5607  0196' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  5608  0197' 0024               	movlb	4	; select bank4
  5609  0198' 0080'              	movwf	(_kd+3)^(0+512)
  5610  0199' 0022               	movlb	2	; select bank2
  5611  019A' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  5612  019B' 0024               	movlb	4	; select bank4
  5613  019C' 0080'              	movwf	(_kd+2)^(0+512)
  5614  019D' 0022               	movlb	2	; select bank2
  5615  019E' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  5616  019F' 0024               	movlb	4	; select bank4
  5617  01A0' 0080'              	movwf	(_kd+1)^(0+512)
  5618  01A1' 0022               	movlb	2	; select bank2
  5619  01A2' 0800'              	movf	?___xxtofl^(0+256),w
  5620  01A3' 0024               	movlb	4	; select bank4
  5621  01A4' 0080'              	movwf	_kd^(0+512)
  5622  01A5' 3000               	movlw	0
  5623  01A6' 0080'              	movwf	(_pidi+3)^(0+512)
  5624  01A7' 3000               	movlw	0
  5625  01A8' 0080'              	movwf	(_pidi+2)^(0+512)
  5626  01A9' 3000               	movlw	0
  5627  01AA' 0080'              	movwf	(_pidi+1)^(0+512)
  5628  01AB' 3000               	movlw	0
  5629  01AC' 0080'              	movwf	_pidi^(0+512)
  5630  01AD'                    l6211:
  5631                           
  5632                           ;state_machine_b.c: 147:     if (dc_res_count == 40)
  5633  01AD' 3028               	movlw	40
  5634  01AE' 0023               	movlb	3	; select bank3
  5635  01AF' 0600'              	xorwf	_dc_res_count^(0+384),w
  5636  01B0' 1D03               	btfss	3,2
  5637  01B1' 2800'              	goto	l6215
  5638                           
  5639                           ;state_machine_b.c: 148:     {;state_machine_b.c: 149:         iref = (uint16_t) ( ( ( c
      +                          apacity * 4096.0 ) / (5000.0 * 2.5) ) + 0.5 );
  5640  01B2' 0800'              	movf	_capacity^(0+384),w
  5641  01B3' 0022               	movlb	2	; select bank2
  5642  01B4' 0080'              	movwf	___xxtofl@val^(0+256)
  5643  01B5' 0023               	movlb	3	; select bank3
  5644  01B6' 0800'              	movf	(_capacity+1)^(0+384),w
  5645  01B7' 0022               	movlb	2	; select bank2
  5646  01B8' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  5647  01B9' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  5648  01BA' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  5649  01BB' 3000               	movlw	0
  5650  01BC' 3180' 2000' 3180'  	fcall	___xxtofl
  5651  01BF' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  5652  01C0' 0080'              	movwf	(___flmul@a+3)^(0+256)
  5653  01C1' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  5654  01C2' 0080'              	movwf	(___flmul@a+2)^(0+256)
  5655  01C3' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  5656  01C4' 0080'              	movwf	(___flmul@a+1)^(0+256)
  5657  01C5' 0800'              	movf	?___xxtofl^(0+256),w
  5658  01C6' 0080'              	movwf	___flmul@a^(0+256)
  5659  01C7' 3045               	movlw	69
  5660  01C8' 0080'              	movwf	(___flmul@b+3)^(0+256)
  5661  01C9' 3080               	movlw	128
  5662  01CA' 0080'              	movwf	(___flmul@b+2)^(0+256)
  5663  01CB' 3000               	movlw	0
  5664  01CC' 0080'              	movwf	(___flmul@b+1)^(0+256)
  5665  01CD' 3000               	movlw	0
  5666  01CE' 0080'              	movwf	___flmul@b^(0+256)
  5667  01CF' 3180' 2000' 3180'  	fcall	___flmul
  5668  01D2' 0800'              	movf	(?___flmul+3)^(0+256),w
  5669  01D3' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  5670  01D4' 0800'              	movf	(?___flmul+2)^(0+256),w
  5671  01D5' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  5672  01D6' 0800'              	movf	(?___flmul+1)^(0+256),w
  5673  01D7' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  5674  01D8' 0800'              	movf	?___flmul^(0+256),w
  5675  01D9' 0080'              	movwf	___fldiv@b^(0+256)
  5676  01DA' 3046               	movlw	70
  5677  01DB' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  5678  01DC' 3043               	movlw	67
  5679  01DD' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  5680  01DE' 3050               	movlw	80
  5681  01DF' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  5682  01E0' 3000               	movlw	0
  5683  01E1' 0080'              	movwf	___fldiv@a^(0+256)
  5684  01E2' 3180' 2000' 3180'  	fcall	___fldiv
  5685  01E5' 0800'              	movf	(?___fldiv+3)^(0+256),w
  5686  01E6' 0080'              	movwf	(___fladd@a+3)^(0+256)
  5687  01E7' 0800'              	movf	(?___fldiv+2)^(0+256),w
  5688  01E8' 0080'              	movwf	(___fladd@a+2)^(0+256)
  5689  01E9' 0800'              	movf	(?___fldiv+1)^(0+256),w
  5690  01EA' 0080'              	movwf	(___fladd@a+1)^(0+256)
  5691  01EB' 0800'              	movf	?___fldiv^(0+256),w
  5692  01EC' 0080'              	movwf	___fladd@a^(0+256)
  5693  01ED' 303F               	movlw	63
  5694  01EE' 0080'              	movwf	(___fladd@b+3)^(0+256)
  5695  01EF' 3000               	movlw	0
  5696  01F0' 0080'              	movwf	(___fladd@b+2)^(0+256)
  5697  01F1' 3000               	movlw	0
  5698  01F2' 0080'              	movwf	(___fladd@b+1)^(0+256)
  5699  01F3' 3000               	movlw	0
  5700  01F4' 0080'              	movwf	___fladd@b^(0+256)
  5701  01F5' 3180' 2000' 3180'  	fcall	___fladd
  5702  01F8' 0800'              	movf	(?___fladd+3)^(0+256),w
  5703  01F9' 0023               	movlb	3	; select bank3
  5704  01FA' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  5705  01FB' 0022               	movlb	2	; select bank2
  5706  01FC' 0800'              	movf	(?___fladd+2)^(0+256),w
  5707  01FD' 0023               	movlb	3	; select bank3
  5708  01FE' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  5709  01FF' 0022               	movlb	2	; select bank2
  5710  0200' 0800'              	movf	(?___fladd+1)^(0+256),w
  5711  0201' 0023               	movlb	3	; select bank3
  5712  0202' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  5713  0203' 0022               	movlb	2	; select bank2
  5714  0204' 0800'              	movf	?___fladd^(0+256),w
  5715  0205' 0023               	movlb	3	; select bank3
  5716  0206' 0080'              	movwf	___fltol@f1^(0+384)
  5717  0207' 3180' 2000' 3180'  	fcall	___fltol
  5718  020A' 0023               	movlb	3	; select bank3
  5719  020B' 0800'              	movf	(?___fltol+1)^(0+384),w
  5720  020C' 0021               	movlb	1	; select bank1
  5721  020D' 0080'              	movwf	(_iref+1)^(0+128)
  5722  020E' 0023               	movlb	3	; select bank3
  5723  020F' 0800'              	movf	?___fltol^(0+384),w
  5724  0210' 0021               	movlb	1	; select bank1
  5725  0211' 0080'              	movwf	_iref^(0+128)
  5726  0212'                    l6215:
  5727                           
  5728                           ;state_machine_b.c: 151:     if (!dc_res_count)
  5729  0212' 0023               	movlb	3	; select bank3
  5730  0213' 0800'              	movf	_dc_res_count^(0+384),w
  5731  0214' 1D03               	btfss	3,2
  5732  0215' 2800'              	goto	l6233
  5733                           
  5734                           ;state_machine_b.c: 152:     {;state_machine_b.c: 153:         { RC3 = 0; RC4 = 0; conv 
      +                          = 0; RC5 = 0; pidt = 50.0; set_DC(); Cell_OFF();};
  5735  0216' 0020               	movlb	0	; select bank0
  5736  0217' 118E               	bcf	14,3	;volatile
  5737  0218' 120E               	bcf	14,4	;volatile
  5738  0219' 0021               	movlb	1	; select bank1
  5739  021A' 0180'              	clrf	_conv^(0+128)
  5740  021B' 0020               	movlb	0	; select bank0
  5741  021C' 128E               	bcf	14,5	;volatile
  5742  021D' 3042               	movlw	66
  5743  021E' 0023               	movlb	3	; select bank3
  5744  021F' 0080'              	movwf	(_pidt+3)^(0+384)
  5745  0220' 3048               	movlw	72
  5746  0221' 0080'              	movwf	(_pidt+2)^(0+384)
  5747  0222' 3000               	movlw	0
  5748  0223' 0080'              	movwf	(_pidt+1)^(0+384)
  5749  0224' 3000               	movlw	0
  5750  0225' 0080'              	movwf	_pidt^(0+384)
  5751  0226' 3180' 2000' 3180'  	fcall	_set_DC
  5752  0229' 3180' 2000' 3180'  	fcall	_Cell_OFF
  5753                           
  5754                           ;state_machine_b.c: 154:         wait_count = getTime();
  5755  022C' 3180' 2000'        	fcall	_getTime
  5756  022E' 0023               	movlb	3	; select bank3
  5757  022F' 0080'              	movwf	??_fDC_res^(0+384)
  5758  0230' 0181'              	clrf	(??_fDC_res^(0+384)+1)
  5759  0231' 0800'              	movf	??_fDC_res^(0+384),w
  5760  0232' 0080'              	movwf	_wait_count^(0+384)
  5761  0233' 0800'              	movf	(??_fDC_res+1)^(0+384),w
  5762  0234' 0080'              	movwf	(_wait_count+1)^(0+384)
  5763                           
  5764                           ;state_machine_b.c: 155:         state = WAIT;
  5765  0235' 300D               	movlw	13
  5766  0236' 0080'              	movwf	_state^(0+384)
  5767                           
  5768                           ;state_machine_b.c: 157:     }else dc_res_count--;
  5769  0237' 0008               	return
  5770  0238'                    l6233:
  5771  0238' 3001               	movlw	1
  5772  0239' 0280'              	subwf	_dc_res_count^(0+384),f
  5773  023A' 0008               	return
  5774  023B'                    __end_of_fDC_res:
  5775                           
  5776                           	psect	text11
  5777  0000'                    __ptext11:	
  5778 ;; *************** function _fCHARGE *****************
  5779 ;; Defined at:
  5780 ;;		line 63 in file "state_machine_b.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;		None
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;		None
  5785 ;; Return value:  Size  Location     Type
  5786 ;;                  1    wreg      void 
  5787 ;; Registers used:
  5788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5789 ;; Tracked objects:
  5790 ;;		On entry : 18/3
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5796 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  5797 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  5798 ;;Total ram usage:        2 bytes
  5799 ;; Hardware stack levels used: 1
  5800 ;; Hardware stack levels required when called: 7
  5801 ;; This function calls:
  5802 ;;		_Cell_OFF
  5803 ;;		___flge
  5804 ;;		___xxtofl
  5805 ;;		_getTime
  5806 ;;		_set_DC
  5807 ;; This function is called by:
  5808 ;;		_state_machine
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812  0000'                    _fCHARGE:	
  5813                           ;psect for function _fCHARGE
  5814                           
  5815                           
  5816                           ;state_machine_b.c: 65:     if ( ( ( iavg < basic_configuration.end_of_charge ) && ( bas
      +                          ic_configuration.version == 0x01 ) ) || ( ( ( vavg < (vmax - 5) ) || (timeout < second) 
      +                          ) && ( basic_configuration.version == 0x02 ) ) )
  5817                           
  5818                           ;incstack = 0
  5819                           ; Regs used in _fCHARGE: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5820  0000' 0024               	movlb	4	; select bank4
  5821  0001' 0809'              	movf	((_basic_configuration+1)^(0+512)+9),w
  5822  0002' 0023               	movlb	3	; select bank3
  5823  0003' 0200'              	subwf	(_iavg+1)^(0+384),w
  5824  0004' 1D03               	skipz
  5825  0005' 2800'              	goto	u6615
  5826  0006' 0024               	movlb	4	; select bank4
  5827  0007' 0809'              	movf	(_basic_configuration^(0+512)+9),w
  5828  0008' 0023               	movlb	3	; select bank3
  5829  0009' 0200'              	subwf	_iavg^(0+384),w
  5830  000A'                    u6615:
  5831  000A' 1803               	skipnc
  5832  000B' 2800'              	goto	l6097
  5833  000C' 0024               	movlb	4	; select bank4
  5834  000D' 0300'              	decf	_basic_configuration^(0+512),w
  5835  000E' 1903               	btfsc	3,2
  5836  000F' 2800'              	goto	l6103
  5837  0010'                    l6097:
  5838  0010' 0023               	movlb	3	; select bank3
  5839  0011' 0800'              	movf	_vmax^(0+384),w
  5840  0012' 3EFB               	addlw	251
  5841  0013' 0080'              	movwf	??_fCHARGE^(0+384)
  5842  0014' 30FF               	movlw	255
  5843  0015' 3D00'              	addwfc	(_vmax+1)^(0+384),w
  5844  0016' 0080'              	movwf	(??_fCHARGE+1)^(0+384)
  5845  0017' 0800'              	movf	(??_fCHARGE+1)^(0+384),w
  5846  0018' 0200'              	subwf	(_vavg+1)^(0+384),w
  5847  0019' 1D03               	skipz
  5848  001A' 2800'              	goto	u6635
  5849  001B' 0800'              	movf	??_fCHARGE^(0+384),w
  5850  001C' 0200'              	subwf	_vavg^(0+384),w
  5851  001D'                    u6635:
  5852  001D' 1C03               	skipc
  5853  001E' 2800'              	goto	l6101
  5854  001F' 0800'              	movf	(_second+1)^(0+384),w
  5855  0020' 0200'              	subwf	(_timeout+1)^(0+384),w
  5856  0021' 1D03               	skipz
  5857  0022' 2800'              	goto	u6645
  5858  0023' 0800'              	movf	_second^(0+384),w
  5859  0024' 0200'              	subwf	_timeout^(0+384),w
  5860  0025'                    u6645:
  5861  0025' 1803               	skipnc
  5862  0026' 2800'              	goto	l6123
  5863  0027'                    l6101:
  5864  0027' 3002               	movlw	2
  5865  0028' 0024               	movlb	4	; select bank4
  5866  0029' 0600'              	xorwf	_basic_configuration^(0+512),w
  5867  002A' 1D03               	btfss	3,2
  5868  002B' 2800'              	goto	l6123
  5869  002C'                    l6103:
  5870                           
  5871                           ;state_machine_b.c: 66:     {;state_machine_b.c: 67:         if (second > 5)
  5872  002C' 3000               	movlw	0
  5873  002D' 0023               	movlb	3	; select bank3
  5874  002E' 0200'              	subwf	(_second+1)^(0+384),w
  5875  002F' 3006               	movlw	6
  5876  0030' 1903               	skipnz
  5877  0031' 0200'              	subwf	_second^(0+384),w
  5878  0032' 1C03               	skipc
  5879  0033' 2800'              	goto	l6123
  5880                           
  5881                           ;state_machine_b.c: 68:         {;state_machine_b.c: 69:             state = WAIT;
  5882  0034' 300D               	movlw	13
  5883  0035' 0080'              	movwf	_state^(0+384)
  5884                           
  5885                           ;state_machine_b.c: 70:             wait_count = getTime();
  5886  0036' 3180' 2000' 3180'  	fcall	_getTime
  5887  0039' 0023               	movlb	3	; select bank3
  5888  003A' 0080'              	movwf	??_fCHARGE^(0+384)
  5889  003B' 0181'              	clrf	(??_fCHARGE^(0+384)+1)
  5890  003C' 0800'              	movf	??_fCHARGE^(0+384),w
  5891  003D' 0080'              	movwf	_wait_count^(0+384)
  5892  003E' 0800'              	movf	(??_fCHARGE+1)^(0+384),w
  5893  003F' 0080'              	movwf	(_wait_count+1)^(0+384)
  5894                           
  5895                           ;state_machine_b.c: 71:             { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50.0; 
      +                          set_DC(); Cell_OFF();};
  5896  0040' 0020               	movlb	0	; select bank0
  5897  0041' 118E               	bcf	14,3	;volatile
  5898  0042' 120E               	bcf	14,4	;volatile
  5899  0043' 0021               	movlb	1	; select bank1
  5900  0044' 0180'              	clrf	_conv^(0+128)
  5901  0045' 0020               	movlb	0	; select bank0
  5902  0046' 128E               	bcf	14,5	;volatile
  5903  0047' 3042               	movlw	66
  5904  0048' 0023               	movlb	3	; select bank3
  5905  0049' 0080'              	movwf	(_pidt+3)^(0+384)
  5906  004A' 3048               	movlw	72
  5907  004B' 0080'              	movwf	(_pidt+2)^(0+384)
  5908  004C' 3000               	movlw	0
  5909  004D' 0080'              	movwf	(_pidt+1)^(0+384)
  5910  004E' 3000               	movlw	0
  5911  004F' 0080'              	movwf	_pidt^(0+384)
  5912  0050' 3180' 2000' 3180'  	fcall	_set_DC
  5913  0053' 3180' 2000' 3180'  	fcall	_Cell_OFF
  5914  0056'                    l6123:
  5915                           
  5916                           ;state_machine_b.c: 74:     if (state == PRECHARGE){
  5917  0056' 3005               	movlw	5
  5918  0057' 0023               	movlb	3	; select bank3
  5919  0058' 0600'              	xorwf	_state^(0+384),w
  5920  0059' 1D03               	btfss	3,2
  5921  005A' 0008               	return
  5922                           
  5923                           ;state_machine_b.c: 75:         if (basic_configuration.version == 1)
  5924  005B' 0024               	movlb	4	; select bank4
  5925  005C' 0300'              	decf	_basic_configuration^(0+512),w
  5926  005D' 1D03               	btfss	3,2
  5927  005E' 2800'              	goto	l6149
  5928                           
  5929                           ;state_machine_b.c: 76:         {;state_machine_b.c: 77:             if (qavg >= ( (capa
      +                          city) / 2 ) && (second >= 1))
  5930  005F' 0023               	movlb	3	; select bank3
  5931  0060' 0800'              	movf	(_qavg+3)^(0+384),w
  5932  0061' 0022               	movlb	2	; select bank2
  5933  0062' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  5934  0063' 0023               	movlb	3	; select bank3
  5935  0064' 0800'              	movf	(_qavg+2)^(0+384),w
  5936  0065' 0022               	movlb	2	; select bank2
  5937  0066' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  5938  0067' 0023               	movlb	3	; select bank3
  5939  0068' 0800'              	movf	(_qavg+1)^(0+384),w
  5940  0069' 0022               	movlb	2	; select bank2
  5941  006A' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  5942  006B' 0023               	movlb	3	; select bank3
  5943  006C' 0800'              	movf	_qavg^(0+384),w
  5944  006D' 0022               	movlb	2	; select bank2
  5945  006E' 0080'              	movwf	___flge@ff1^(0+256)
  5946  006F' 0023               	movlb	3	; select bank3
  5947  0070' 0800'              	movf	(_capacity+1)^(0+384),w
  5948  0071' 0081'              	movwf	(??_fCHARGE^(0+384)+1)
  5949  0072' 0800'              	movf	_capacity^(0+384),w
  5950  0073' 0080'              	movwf	??_fCHARGE^(0+384)
  5951  0074' 3681'              	lsrf	(??_fCHARGE^(0+384)+1),f
  5952  0075' 0C80'              	rrf	??_fCHARGE^(0+384),f
  5953  0076' 0800'              	movf	??_fCHARGE^(0+384),w
  5954  0077' 0022               	movlb	2	; select bank2
  5955  0078' 0080'              	movwf	___xxtofl@val^(0+256)
  5956  0079' 0023               	movlb	3	; select bank3
  5957  007A' 0800'              	movf	(??_fCHARGE+1)^(0+384),w
  5958  007B' 0022               	movlb	2	; select bank2
  5959  007C' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  5960  007D' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  5961  007E' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  5962  007F' 3000               	movlw	0
  5963  0080' 3180' 2000' 3180'  	fcall	___xxtofl
  5964  0083' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  5965  0084' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  5966  0085' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  5967  0086' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  5968  0087' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  5969  0088' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  5970  0089' 0800'              	movf	?___xxtofl^(0+256),w
  5971  008A' 0080'              	movwf	___flge@ff2^(0+256)
  5972  008B' 3180' 2000' 3180'  	fcall	___flge
  5973  008E' 1C03               	btfss	3,0
  5974  008F' 0008               	return
  5975  0090' 0023               	movlb	3	; select bank3
  5976  0091' 0800'              	movf	_second^(0+384),w
  5977  0092' 0400'              	iorwf	(_second+1)^(0+384),w
  5978  0093' 1903               	btfsc	3,2
  5979  0094' 0008               	return
  5980                           
  5981                           ;state_machine_b.c: 78:             {;state_machine_b.c: 79:                 state = WAI
      +                          T;
  5982  0095' 300D               	movlw	13
  5983  0096'                    L6:
  5984  0096' 0080'              	movwf	_state^(0+384)
  5985                           
  5986                           ;state_machine_b.c: 80:                 wait_count = getTime();
  5987  0097' 3180' 2000' 3180'  	fcall	_getTime
  5988  009A' 0023               	movlb	3	; select bank3
  5989  009B' 0080'              	movwf	??_fCHARGE^(0+384)
  5990  009C' 0181'              	clrf	(??_fCHARGE^(0+384)+1)
  5991  009D' 0800'              	movf	??_fCHARGE^(0+384),w
  5992  009E' 0080'              	movwf	_wait_count^(0+384)
  5993  009F' 0800'              	movf	(??_fCHARGE+1)^(0+384),w
  5994  00A0' 0080'              	movwf	(_wait_count+1)^(0+384)
  5995                           
  5996                           ;state_machine_b.c: 81:                 { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50
      +                          .0; set_DC(); Cell_OFF();};
  5997  00A1' 0020               	movlb	0	; select bank0
  5998  00A2' 118E               	bcf	14,3	;volatile
  5999  00A3' 120E               	bcf	14,4	;volatile
  6000  00A4' 0021               	movlb	1	; select bank1
  6001  00A5' 0180'              	clrf	_conv^(0+128)
  6002  00A6' 0020               	movlb	0	; select bank0
  6003  00A7' 128E               	bcf	14,5	;volatile
  6004  00A8' 3042               	movlw	66
  6005  00A9' 0023               	movlb	3	; select bank3
  6006  00AA' 0080'              	movwf	(_pidt+3)^(0+384)
  6007  00AB' 3048               	movlw	72
  6008  00AC' 0080'              	movwf	(_pidt+2)^(0+384)
  6009  00AD' 3000               	movlw	0
  6010  00AE' 0080'              	movwf	(_pidt+1)^(0+384)
  6011  00AF' 3000               	movlw	0
  6012  00B0' 0080'              	movwf	_pidt^(0+384)
  6013  00B1' 3180' 2000' 3180'  	fcall	_set_DC
  6014  00B4' 3180' 2000'        	fcall	_Cell_OFF
  6015  00B6' 0008               	return
  6016  00B7'                    l6149:
  6017  00B7' 3002               	movlw	2
  6018  00B8' 0600'              	xorwf	_basic_configuration^(0+512),w
  6019  00B9' 1D03               	btfss	3,2
  6020  00BA' 0008               	return
  6021                           
  6022                           ;state_machine_b.c: 85:         {;state_machine_b.c: 86:             if (vavg >= basic_c
      +                          onfiguration.end_of_precharge || qavg >= ( (capacity) / 2 ) || (second >= timeout))
  6023  00BB' 080B'              	movf	((_basic_configuration+1)^(0+512)+11),w
  6024  00BC' 0023               	movlb	3	; select bank3
  6025  00BD' 0200'              	subwf	(_vavg+1)^(0+384),w
  6026  00BE' 1D03               	skipz
  6027  00BF' 2800'              	goto	u6725
  6028  00C0' 0024               	movlb	4	; select bank4
  6029  00C1' 080B'              	movf	(_basic_configuration^(0+512)+11),w
  6030  00C2' 0023               	movlb	3	; select bank3
  6031  00C3' 0200'              	subwf	_vavg^(0+384),w
  6032  00C4'                    u6725:
  6033  00C4' 1803               	skipnc
  6034  00C5' 2800'              	goto	l6157
  6035  00C6' 0800'              	movf	(_qavg+3)^(0+384),w
  6036  00C7' 0022               	movlb	2	; select bank2
  6037  00C8' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  6038  00C9' 0023               	movlb	3	; select bank3
  6039  00CA' 0800'              	movf	(_qavg+2)^(0+384),w
  6040  00CB' 0022               	movlb	2	; select bank2
  6041  00CC' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  6042  00CD' 0023               	movlb	3	; select bank3
  6043  00CE' 0800'              	movf	(_qavg+1)^(0+384),w
  6044  00CF' 0022               	movlb	2	; select bank2
  6045  00D0' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  6046  00D1' 0023               	movlb	3	; select bank3
  6047  00D2' 0800'              	movf	_qavg^(0+384),w
  6048  00D3' 0022               	movlb	2	; select bank2
  6049  00D4' 0080'              	movwf	___flge@ff1^(0+256)
  6050  00D5' 0023               	movlb	3	; select bank3
  6051  00D6' 0800'              	movf	(_capacity+1)^(0+384),w
  6052  00D7' 0081'              	movwf	(??_fCHARGE^(0+384)+1)
  6053  00D8' 0800'              	movf	_capacity^(0+384),w
  6054  00D9' 0080'              	movwf	??_fCHARGE^(0+384)
  6055  00DA' 3681'              	lsrf	(??_fCHARGE^(0+384)+1),f
  6056  00DB' 0C80'              	rrf	??_fCHARGE^(0+384),f
  6057  00DC' 0800'              	movf	??_fCHARGE^(0+384),w
  6058  00DD' 0022               	movlb	2	; select bank2
  6059  00DE' 0080'              	movwf	___xxtofl@val^(0+256)
  6060  00DF' 0023               	movlb	3	; select bank3
  6061  00E0' 0800'              	movf	(??_fCHARGE+1)^(0+384),w
  6062  00E1' 0022               	movlb	2	; select bank2
  6063  00E2' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  6064  00E3' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  6065  00E4' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  6066  00E5' 3000               	movlw	0
  6067  00E6' 3180' 2000' 3180'  	fcall	___xxtofl
  6068  00E9' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  6069  00EA' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  6070  00EB' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  6071  00EC' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  6072  00ED' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  6073  00EE' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  6074  00EF' 0800'              	movf	?___xxtofl^(0+256),w
  6075  00F0' 0080'              	movwf	___flge@ff2^(0+256)
  6076  00F1' 3180' 2000' 3180'  	fcall	___flge
  6077  00F4' 1803               	btfsc	3,0
  6078  00F5' 2800'              	goto	l6157
  6079  00F6' 0023               	movlb	3	; select bank3
  6080  00F7' 0800'              	movf	(_timeout+1)^(0+384),w
  6081  00F8' 0200'              	subwf	(_second+1)^(0+384),w
  6082  00F9' 1D03               	skipz
  6083  00FA' 2800'              	goto	u6745
  6084  00FB' 0800'              	movf	_timeout^(0+384),w
  6085  00FC' 0200'              	subwf	_second^(0+384),w
  6086  00FD'                    u6745:
  6087  00FD' 1C03               	skipc
  6088  00FE' 0008               	return
  6089  00FF'                    l6157:
  6090                           
  6091                           ;state_machine_b.c: 87:             {;state_machine_b.c: 88:                 state = WAI
      +                          T;
  6092  00FF' 300D               	movlw	13
  6093  0100' 0023               	movlb	3	; select bank3
  6094  0101' 2800'              	goto	L6
  6095  0102'                    __end_of_fCHARGE:	
  6096                           ;state_machine_b.c: 90:                 { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50
      +                          .0; set_DC(); Cell_OFF();};
  6097                           
  6098                           ;state_machine_b.c: 89:                 wait_count = getTime();
  6099                           
  6100                           
  6101                           	psect	text12
  6102  0000'                    __ptext12:	
  6103 ;; *************** function _getTime *****************
  6104 ;; Defined at:
  6105 ;;		line 565 in file "charger_discharger.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;		None
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;		None
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  1    wreg      unsigned char 
  6112 ;; Registers used:
  6113 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/3
  6116 ;;		On exit  : 1F/4
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6121 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  6122 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  6123 ;;Total ram usage:        2 bytes
  6124 ;; Hardware stack levels used: 1
  6125 ;; Hardware stack levels required when called: 5
  6126 ;; This function calls:
  6127 ;;		Nothing
  6128 ;; This function is called by:
  6129 ;;		_fCHARGE
  6130 ;;		_fDISCHARGE
  6131 ;;		_fDC_res
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135  0000'                    _getTime:	
  6136                           ;psect for function _getTime
  6137                           
  6138                           
  6139                           ;charger_discharger.c: 566:     if ((counter_state + 1 <= test_configuration.number_of_s
      +                          tates) && (test_configuration.order_of_states[counter_state + 1] != 0x00)){
  6140                           
  6141                           ;incstack = 0
  6142                           ; Regs used in _getTime: [wreg+fsr1l+fsr1h+status,2+status,0]
  6143  0000' 0021               	movlb	1	; select bank1
  6144  0001' 0800'              	movf	_counter_state^(0+128),w
  6145  0002' 3E01               	addlw	1
  6146  0003' 0022               	movlb	2	; select bank2
  6147  0004' 0080'              	movwf	??_getTime^(0+256)
  6148  0005' 3000               	movlw	0
  6149  0006' 1803               	skipnc
  6150  0007' 3001               	movlw	1
  6151  0008' 0081'              	movwf	(??_getTime^(0+256)+1)
  6152  0009' 0800'              	movf	(??_getTime+1)^(0+256),w
  6153  000A' 3A80               	xorlw	128
  6154  000B' 3C80               	sublw	128
  6155  000C' 1D03               	skipz
  6156  000D' 2800'              	goto	u5525
  6157  000E' 0800'              	movf	??_getTime^(0+256),w
  6158  000F' 0024               	movlb	4	; select bank4
  6159  0010' 0201'              	subwf	(_test_configuration^(0+512)+1),w
  6160  0011'                    u5525:
  6161  0011' 1C03               	skipc
  6162  0012' 2800'              	goto	l5479
  6163  0013' 0021               	movlb	1	; select bank1
  6164  0014' 0800'              	movf	_counter_state^(0+128),w
  6165  0015' 3E00'              	addlw	(low ((_test_configuration| (0+512)+8)))& (0+255)
  6166  0016' 0086               	movwf	6
  6167  0017' 3002               	movlw	2	; select bank4/5
  6168  0018' 0087               	movwf	7
  6169  0019' 0801               	movf	1,w
  6170  001A' 1903               	btfsc	3,2
  6171  001B' 2800'              	goto	l5479
  6172  001C'                    l5473:
  6173                           
  6174                           ;charger_discharger.c: 567:         return test_configuration.wait_time;
  6175  001C' 0024               	movlb	4	; select bank4
  6176  001D' 0803'              	movf	(_test_configuration^(0+512)+3),w
  6177  001E' 0008               	return
  6178  001F'                    l5479:
  6179  001F' 0024               	movlb	4	; select bank4
  6180  0020' 0800'              	movf	_test_configuration^(0+512),w
  6181  0021' 0023               	movlb	3	; select bank3
  6182  0022' 0200'              	subwf	_cell_count^(0+384),w
  6183  0023' 1C03               	btfss	3,0
  6184  0024' 2800'              	goto	l5473
  6185                           
  6186                           ;charger_discharger.c: 573:         return test_configuration.end_wait_time;
  6187  0025' 0024               	movlb	4	; select bank4
  6188  0026' 0805'              	movf	(_test_configuration^(0+512)+5),w
  6189  0027' 0008               	return
  6190  0028'                    __end_of_getTime:
  6191                           
  6192                           	psect	text13
  6193  0000'                    __ptext13:	
  6194 ;; *************** function ___flge *****************
  6195 ;; Defined at:
  6196 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  ff1             4   14[BANK2 ] unsigned char 
  6199 ;;  ff2             4   18[BANK2 ] unsigned char 
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;		None
  6202 ;; Return value:  Size  Location     Type
  6203 ;;		None               void
  6204 ;; Registers used:
  6205 ;;		wreg, status,2, status,0
  6206 ;; Tracked objects:
  6207 ;;		On entry : 1F/2
  6208 ;;		On exit  : 1F/2
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6211 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  6212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
  6215 ;;Total ram usage:       12 bytes
  6216 ;; Hardware stack levels used: 1
  6217 ;; Hardware stack levels required when called: 5
  6218 ;; This function calls:
  6219 ;;		Nothing
  6220 ;; This function is called by:
  6221 ;;		_fCHARGE
  6222 ;;		_fDISCHARGE
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226  0000'                    ___flge:	
  6227                           ;psect for function ___flge
  6228                           
  6229                           
  6230                           ;incstack = 0
  6231                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6232  0000' 3000               	movlw	0
  6233  0001' 0500'              	andwf	___flge@ff1^(0+256),w
  6234  0002' 0080'              	movwf	??___flge^(0+256)
  6235  0003' 3000               	movlw	0
  6236  0004' 0500'              	andwf	(___flge@ff1+1)^(0+256),w
  6237  0005' 0081'              	movwf	(??___flge^(0+256)+1)
  6238  0006' 3080               	movlw	128
  6239  0007' 0500'              	andwf	(___flge@ff1+2)^(0+256),w
  6240  0008' 0082'              	movwf	(??___flge^(0+256)+2)
  6241  0009' 307F               	movlw	127
  6242  000A' 0500'              	andwf	(___flge@ff1+3)^(0+256),w
  6243  000B' 0083'              	movwf	(??___flge^(0+256)+3)
  6244  000C' 0800'              	movf	(??___flge+3)^(0+256),w
  6245  000D' 0400'              	iorwf	(??___flge+2)^(0+256),w
  6246  000E' 0400'              	iorwf	(??___flge+1)^(0+256),w
  6247  000F' 0400'              	iorwf	??___flge^(0+256),w
  6248  0010' 1D03               	skipz
  6249  0011' 2800'              	goto	l1224
  6250  0012' 3000               	movlw	0
  6251  0013' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  6252  0014' 3000               	movlw	0
  6253  0015' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  6254  0016' 3000               	movlw	0
  6255  0017' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  6256  0018' 3000               	movlw	0
  6257  0019' 0080'              	movwf	___flge@ff1^(0+256)
  6258  001A'                    l1224:
  6259  001A' 3000               	movlw	0
  6260  001B' 0500'              	andwf	___flge@ff2^(0+256),w
  6261  001C' 0080'              	movwf	??___flge^(0+256)
  6262  001D' 3000               	movlw	0
  6263  001E' 0500'              	andwf	(___flge@ff2+1)^(0+256),w
  6264  001F' 0081'              	movwf	(??___flge^(0+256)+1)
  6265  0020' 3080               	movlw	128
  6266  0021' 0500'              	andwf	(___flge@ff2+2)^(0+256),w
  6267  0022' 0082'              	movwf	(??___flge^(0+256)+2)
  6268  0023' 307F               	movlw	127
  6269  0024' 0500'              	andwf	(___flge@ff2+3)^(0+256),w
  6270  0025' 0083'              	movwf	(??___flge^(0+256)+3)
  6271  0026' 0800'              	movf	(??___flge+3)^(0+256),w
  6272  0027' 0400'              	iorwf	(??___flge+2)^(0+256),w
  6273  0028' 0400'              	iorwf	(??___flge+1)^(0+256),w
  6274  0029' 0400'              	iorwf	??___flge^(0+256),w
  6275  002A' 1D03               	skipz
  6276  002B' 2800'              	goto	l5509
  6277  002C' 3000               	movlw	0
  6278  002D' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  6279  002E' 3000               	movlw	0
  6280  002F' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  6281  0030' 3000               	movlw	0
  6282  0031' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  6283  0032' 3000               	movlw	0
  6284  0033' 0080'              	movwf	___flge@ff2^(0+256)
  6285  0034'                    l5509:
  6286  0034' 1F80'              	btfss	(___flge@ff1+3)^(0+256),7
  6287  0035' 2800'              	goto	l5513
  6288  0036' 3000               	movlw	0
  6289  0037' 0080'              	movwf	??___flge^(0+256)
  6290  0038' 3000               	movlw	0
  6291  0039' 0081'              	movwf	(??___flge^(0+256)+1)
  6292  003A' 3000               	movlw	0
  6293  003B' 0082'              	movwf	(??___flge^(0+256)+2)
  6294  003C' 3080               	movlw	128
  6295  003D' 0083'              	movwf	(??___flge^(0+256)+3)
  6296  003E' 0800'              	movf	___flge@ff1^(0+256),w
  6297  003F' 0280'              	subwf	??___flge^(0+256),f
  6298  0040' 0800'              	movf	(___flge@ff1+1)^(0+256),w
  6299  0041' 3B81'              	subwfb	(??___flge^(0+256)+1),f
  6300  0042' 0800'              	movf	(___flge@ff1+2)^(0+256),w
  6301  0043' 3B82'              	subwfb	(??___flge^(0+256)+2),f
  6302  0044' 0800'              	movf	(___flge@ff1+3)^(0+256),w
  6303  0045' 3B83'              	subwfb	(??___flge^(0+256)+3),f
  6304  0046' 0800'              	movf	(??___flge+3)^(0+256),w
  6305  0047' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  6306  0048' 0800'              	movf	(??___flge+2)^(0+256),w
  6307  0049' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  6308  004A' 0800'              	movf	(??___flge+1)^(0+256),w
  6309  004B' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  6310  004C' 0800'              	movf	??___flge^(0+256),w
  6311  004D' 0080'              	movwf	___flge@ff1^(0+256)
  6312  004E'                    l5513:
  6313  004E' 1F80'              	btfss	(___flge@ff2+3)^(0+256),7
  6314  004F' 2800'              	goto	l1227
  6315  0050' 3000               	movlw	0
  6316  0051' 0080'              	movwf	??___flge^(0+256)
  6317  0052' 3000               	movlw	0
  6318  0053' 0081'              	movwf	(??___flge^(0+256)+1)
  6319  0054' 3000               	movlw	0
  6320  0055' 0082'              	movwf	(??___flge^(0+256)+2)
  6321  0056' 3080               	movlw	128
  6322  0057' 0083'              	movwf	(??___flge^(0+256)+3)
  6323  0058' 0800'              	movf	___flge@ff2^(0+256),w
  6324  0059' 0280'              	subwf	??___flge^(0+256),f
  6325  005A' 0800'              	movf	(___flge@ff2+1)^(0+256),w
  6326  005B' 3B81'              	subwfb	(??___flge^(0+256)+1),f
  6327  005C' 0800'              	movf	(___flge@ff2+2)^(0+256),w
  6328  005D' 3B82'              	subwfb	(??___flge^(0+256)+2),f
  6329  005E' 0800'              	movf	(___flge@ff2+3)^(0+256),w
  6330  005F' 3B83'              	subwfb	(??___flge^(0+256)+3),f
  6331  0060' 0800'              	movf	(??___flge+3)^(0+256),w
  6332  0061' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  6333  0062' 0800'              	movf	(??___flge+2)^(0+256),w
  6334  0063' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  6335  0064' 0800'              	movf	(??___flge+1)^(0+256),w
  6336  0065' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  6337  0066' 0800'              	movf	??___flge^(0+256),w
  6338  0067' 0080'              	movwf	___flge@ff2^(0+256)
  6339  0068'                    l1227:
  6340  0068' 3080               	movlw	128
  6341  0069' 0680'              	xorwf	(___flge@ff1+3)^(0+256),f
  6342  006A' 3080               	movlw	128
  6343  006B' 0680'              	xorwf	(___flge@ff2+3)^(0+256),f
  6344  006C' 0800'              	movf	(___flge@ff2+3)^(0+256),w
  6345  006D' 0200'              	subwf	(___flge@ff1+3)^(0+256),w
  6346  006E' 1D03               	skipz
  6347  006F' 0008               	return
  6348  0070' 0800'              	movf	(___flge@ff2+2)^(0+256),w
  6349  0071' 0200'              	subwf	(___flge@ff1+2)^(0+256),w
  6350  0072' 1D03               	skipz
  6351  0073' 0008               	return
  6352  0074' 0800'              	movf	(___flge@ff2+1)^(0+256),w
  6353  0075' 0200'              	subwf	(___flge@ff1+1)^(0+256),w
  6354  0076' 1D03               	skipz
  6355  0077' 0008               	return
  6356  0078' 0800'              	movf	___flge@ff2^(0+256),w
  6357  0079' 0200'              	subwf	___flge@ff1^(0+256),w
  6358  007A' 0008               	return
  6359  007B'                    __end_of___flge:
  6360                           
  6361                           	psect	text14
  6362  0000'                    __ptext14:	
  6363 ;; *************** function _scaling *****************
  6364 ;; Defined at:
  6365 ;;		line 319 in file "charger_discharger.c"
  6366 ;; Parameters:    Size  Location     Type
  6367 ;;		None
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;		None
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  1    wreg      void 
  6372 ;; Registers used:
  6373 ;;		wreg, status,2, status,0, pclath, cstack
  6374 ;; Tracked objects:
  6375 ;;		On entry : 1F/3
  6376 ;;		On exit  : 18/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6380 ;;      Locals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
  6381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6382 ;;      Totals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
  6383 ;;Total ram usage:        8 bytes
  6384 ;; Hardware stack levels used: 1
  6385 ;; Hardware stack levels required when called: 7
  6386 ;; This function calls:
  6387 ;;		___fladd
  6388 ;;		___fldiv
  6389 ;;		___flmul
  6390 ;;		___fltol
  6391 ;;		___xxtofl
  6392 ;; This function is called by:
  6393 ;;		_main
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397  0000'                    _scaling:	
  6398                           ;psect for function _scaling
  6399                           
  6400                           
  6401                           ;charger_discharger.c: 321:     log_data.current = (uint16_t) ( ( ( (float)iavg * 2.5 * 
      +                          5000.0 ) / 4096.0 ) + 0.5 );
  6402                           
  6403                           ;incstack = 0
  6404                           ; Regs used in _scaling: [wreg+status,2+status,0+pclath+cstack]
  6405  0000' 0800'              	movf	_iavg^(0+384),w
  6406  0001' 0022               	movlb	2	; select bank2
  6407  0002' 0080'              	movwf	___xxtofl@val^(0+256)
  6408  0003' 0023               	movlb	3	; select bank3
  6409  0004' 0800'              	movf	(_iavg+1)^(0+384),w
  6410  0005' 0022               	movlb	2	; select bank2
  6411  0006' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  6412  0007' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  6413  0008' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  6414  0009' 3000               	movlw	0
  6415  000A' 3180' 2000' 3180'  	fcall	___xxtofl
  6416  000D' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  6417  000E' 0080'              	movwf	(___flmul@a+3)^(0+256)
  6418  000F' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  6419  0010' 0080'              	movwf	(___flmul@a+2)^(0+256)
  6420  0011' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  6421  0012' 0080'              	movwf	(___flmul@a+1)^(0+256)
  6422  0013' 0800'              	movf	?___xxtofl^(0+256),w
  6423  0014' 0080'              	movwf	___flmul@a^(0+256)
  6424  0015' 3040               	movlw	64
  6425  0016' 0080'              	movwf	(___flmul@b+3)^(0+256)
  6426  0017' 3020               	movlw	32
  6427  0018' 0080'              	movwf	(___flmul@b+2)^(0+256)
  6428  0019' 3000               	movlw	0
  6429  001A' 0080'              	movwf	(___flmul@b+1)^(0+256)
  6430  001B' 3000               	movlw	0
  6431  001C' 0080'              	movwf	___flmul@b^(0+256)
  6432  001D' 3180' 2000' 3180'  	fcall	___flmul
  6433  0020' 0800'              	movf	(?___flmul+3)^(0+256),w
  6434  0021' 0023               	movlb	3	; select bank3
  6435  0022' 0080'              	movwf	(_scaling$1608+3)^(0+384)
  6436  0023' 0022               	movlb	2	; select bank2
  6437  0024' 0800'              	movf	(?___flmul+2)^(0+256),w
  6438  0025' 0023               	movlb	3	; select bank3
  6439  0026' 0080'              	movwf	(_scaling$1608+2)^(0+384)
  6440  0027' 0022               	movlb	2	; select bank2
  6441  0028' 0800'              	movf	(?___flmul+1)^(0+256),w
  6442  0029' 0023               	movlb	3	; select bank3
  6443  002A' 0080'              	movwf	(_scaling$1608+1)^(0+384)
  6444  002B' 0022               	movlb	2	; select bank2
  6445  002C' 0800'              	movf	?___flmul^(0+256),w
  6446  002D' 0023               	movlb	3	; select bank3
  6447  002E' 0080'              	movwf	_scaling$1608^(0+384)
  6448                           
  6449                           ;charger_discharger.c: 321:     log_data.current = (uint16_t) ( ( ( (float)iavg * 2.5 * 
      +                          5000.0 ) / 4096.0 ) + 0.5 );
  6450  002F' 0800'              	movf	(_scaling$1608+3)^(0+384),w
  6451  0030' 0022               	movlb	2	; select bank2
  6452  0031' 0080'              	movwf	(___flmul@a+3)^(0+256)
  6453  0032' 0023               	movlb	3	; select bank3
  6454  0033' 0800'              	movf	(_scaling$1608+2)^(0+384),w
  6455  0034' 0022               	movlb	2	; select bank2
  6456  0035' 0080'              	movwf	(___flmul@a+2)^(0+256)
  6457  0036' 0023               	movlb	3	; select bank3
  6458  0037' 0800'              	movf	(_scaling$1608+1)^(0+384),w
  6459  0038' 0022               	movlb	2	; select bank2
  6460  0039' 0080'              	movwf	(___flmul@a+1)^(0+256)
  6461  003A' 0023               	movlb	3	; select bank3
  6462  003B' 0800'              	movf	_scaling$1608^(0+384),w
  6463  003C' 0022               	movlb	2	; select bank2
  6464  003D' 0080'              	movwf	___flmul@a^(0+256)
  6465  003E' 3045               	movlw	69
  6466  003F' 0080'              	movwf	(___flmul@b+3)^(0+256)
  6467  0040' 309C               	movlw	156
  6468  0041' 0080'              	movwf	(___flmul@b+2)^(0+256)
  6469  0042' 3040               	movlw	64
  6470  0043' 0080'              	movwf	(___flmul@b+1)^(0+256)
  6471  0044' 3000               	movlw	0
  6472  0045' 0080'              	movwf	___flmul@b^(0+256)
  6473  0046' 3180' 2000' 3180'  	fcall	___flmul
  6474  0049' 0800'              	movf	(?___flmul+3)^(0+256),w
  6475  004A' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  6476  004B' 0800'              	movf	(?___flmul+2)^(0+256),w
  6477  004C' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  6478  004D' 0800'              	movf	(?___flmul+1)^(0+256),w
  6479  004E' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  6480  004F' 0800'              	movf	?___flmul^(0+256),w
  6481  0050' 0080'              	movwf	___fldiv@b^(0+256)
  6482  0051' 3045               	movlw	69
  6483  0052' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  6484  0053' 3080               	movlw	128
  6485  0054' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  6486  0055' 3000               	movlw	0
  6487  0056' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  6488  0057' 3000               	movlw	0
  6489  0058' 0080'              	movwf	___fldiv@a^(0+256)
  6490  0059' 3180' 2000' 3180'  	fcall	___fldiv
  6491  005C' 0800'              	movf	(?___fldiv+3)^(0+256),w
  6492  005D' 0080'              	movwf	(___fladd@a+3)^(0+256)
  6493  005E' 0800'              	movf	(?___fldiv+2)^(0+256),w
  6494  005F' 0080'              	movwf	(___fladd@a+2)^(0+256)
  6495  0060' 0800'              	movf	(?___fldiv+1)^(0+256),w
  6496  0061' 0080'              	movwf	(___fladd@a+1)^(0+256)
  6497  0062' 0800'              	movf	?___fldiv^(0+256),w
  6498  0063' 0080'              	movwf	___fladd@a^(0+256)
  6499  0064' 303F               	movlw	63
  6500  0065' 0080'              	movwf	(___fladd@b+3)^(0+256)
  6501  0066' 3000               	movlw	0
  6502  0067' 0080'              	movwf	(___fladd@b+2)^(0+256)
  6503  0068' 3000               	movlw	0
  6504  0069' 0080'              	movwf	(___fladd@b+1)^(0+256)
  6505  006A' 3000               	movlw	0
  6506  006B' 0080'              	movwf	___fladd@b^(0+256)
  6507  006C' 3180' 2000' 3180'  	fcall	___fladd
  6508  006F' 0800'              	movf	(?___fladd+3)^(0+256),w
  6509  0070' 0023               	movlb	3	; select bank3
  6510  0071' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  6511  0072' 0022               	movlb	2	; select bank2
  6512  0073' 0800'              	movf	(?___fladd+2)^(0+256),w
  6513  0074' 0023               	movlb	3	; select bank3
  6514  0075' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  6515  0076' 0022               	movlb	2	; select bank2
  6516  0077' 0800'              	movf	(?___fladd+1)^(0+256),w
  6517  0078' 0023               	movlb	3	; select bank3
  6518  0079' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  6519  007A' 0022               	movlb	2	; select bank2
  6520  007B' 0800'              	movf	?___fladd^(0+256),w
  6521  007C' 0023               	movlb	3	; select bank3
  6522  007D' 0080'              	movwf	___fltol@f1^(0+384)
  6523  007E' 3180' 2000' 3180'  	fcall	___fltol
  6524  0081' 0023               	movlb	3	; select bank3
  6525  0082' 0800'              	movf	(?___fltol+1)^(0+384),w
  6526  0083' 0025               	movlb	5	; select bank5
  6527  0084' 0087'              	movwf	((_log_data+1)^(0+640)+7)
  6528  0085' 0023               	movlb	3	; select bank3
  6529  0086' 0800'              	movf	?___fltol^(0+384),w
  6530  0087' 0025               	movlb	5	; select bank5
  6531  0088' 0087'              	movwf	(_log_data^(0+640)+7)
  6532                           
  6533                           ;charger_discharger.c: 322:     log_data.voltage = (uint16_t) ( ( ( (float)vavg * 5000.0
      +                           ) / 4096.0 ) + 0.5 );
  6534  0089' 0023               	movlb	3	; select bank3
  6535  008A' 0800'              	movf	_vavg^(0+384),w
  6536  008B' 0022               	movlb	2	; select bank2
  6537  008C' 0080'              	movwf	___xxtofl@val^(0+256)
  6538  008D' 0023               	movlb	3	; select bank3
  6539  008E' 0800'              	movf	(_vavg+1)^(0+384),w
  6540  008F' 0022               	movlb	2	; select bank2
  6541  0090' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  6542  0091' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  6543  0092' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  6544  0093' 3000               	movlw	0
  6545  0094' 3180' 2000' 3180'  	fcall	___xxtofl
  6546  0097' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  6547  0098' 0080'              	movwf	(___flmul@a+3)^(0+256)
  6548  0099' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  6549  009A' 0080'              	movwf	(___flmul@a+2)^(0+256)
  6550  009B' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  6551  009C' 0080'              	movwf	(___flmul@a+1)^(0+256)
  6552  009D' 0800'              	movf	?___xxtofl^(0+256),w
  6553  009E' 0080'              	movwf	___flmul@a^(0+256)
  6554  009F' 3045               	movlw	69
  6555  00A0' 0080'              	movwf	(___flmul@b+3)^(0+256)
  6556  00A1' 309C               	movlw	156
  6557  00A2' 0080'              	movwf	(___flmul@b+2)^(0+256)
  6558  00A3' 3040               	movlw	64
  6559  00A4' 0080'              	movwf	(___flmul@b+1)^(0+256)
  6560  00A5' 3000               	movlw	0
  6561  00A6' 0080'              	movwf	___flmul@b^(0+256)
  6562  00A7' 3180' 2000' 3180'  	fcall	___flmul
  6563  00AA' 0800'              	movf	(?___flmul+3)^(0+256),w
  6564  00AB' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  6565  00AC' 0800'              	movf	(?___flmul+2)^(0+256),w
  6566  00AD' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  6567  00AE' 0800'              	movf	(?___flmul+1)^(0+256),w
  6568  00AF' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  6569  00B0' 0800'              	movf	?___flmul^(0+256),w
  6570  00B1' 0080'              	movwf	___fldiv@b^(0+256)
  6571  00B2' 3045               	movlw	69
  6572  00B3' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  6573  00B4' 3080               	movlw	128
  6574  00B5' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  6575  00B6' 3000               	movlw	0
  6576  00B7' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  6577  00B8' 3000               	movlw	0
  6578  00B9' 0080'              	movwf	___fldiv@a^(0+256)
  6579  00BA' 3180' 2000' 3180'  	fcall	___fldiv
  6580  00BD' 0800'              	movf	(?___fldiv+3)^(0+256),w
  6581  00BE' 0080'              	movwf	(___fladd@a+3)^(0+256)
  6582  00BF' 0800'              	movf	(?___fldiv+2)^(0+256),w
  6583  00C0' 0080'              	movwf	(___fladd@a+2)^(0+256)
  6584  00C1' 0800'              	movf	(?___fldiv+1)^(0+256),w
  6585  00C2' 0080'              	movwf	(___fladd@a+1)^(0+256)
  6586  00C3' 0800'              	movf	?___fldiv^(0+256),w
  6587  00C4' 0080'              	movwf	___fladd@a^(0+256)
  6588  00C5' 303F               	movlw	63
  6589  00C6' 0080'              	movwf	(___fladd@b+3)^(0+256)
  6590  00C7' 3000               	movlw	0
  6591  00C8' 0080'              	movwf	(___fladd@b+2)^(0+256)
  6592  00C9' 3000               	movlw	0
  6593  00CA' 0080'              	movwf	(___fladd@b+1)^(0+256)
  6594  00CB' 3000               	movlw	0
  6595  00CC' 0080'              	movwf	___fladd@b^(0+256)
  6596  00CD' 3180' 2000' 3180'  	fcall	___fladd
  6597  00D0' 0800'              	movf	(?___fladd+3)^(0+256),w
  6598  00D1' 0023               	movlb	3	; select bank3
  6599  00D2' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  6600  00D3' 0022               	movlb	2	; select bank2
  6601  00D4' 0800'              	movf	(?___fladd+2)^(0+256),w
  6602  00D5' 0023               	movlb	3	; select bank3
  6603  00D6' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  6604  00D7' 0022               	movlb	2	; select bank2
  6605  00D8' 0800'              	movf	(?___fladd+1)^(0+256),w
  6606  00D9' 0023               	movlb	3	; select bank3
  6607  00DA' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  6608  00DB' 0022               	movlb	2	; select bank2
  6609  00DC' 0800'              	movf	?___fladd^(0+256),w
  6610  00DD' 0023               	movlb	3	; select bank3
  6611  00DE' 0080'              	movwf	___fltol@f1^(0+384)
  6612  00DF' 3180' 2000' 3180'  	fcall	___fltol
  6613  00E2' 0023               	movlb	3	; select bank3
  6614  00E3' 0800'              	movf	(?___fltol+1)^(0+384),w
  6615  00E4' 0025               	movlb	5	; select bank5
  6616  00E5' 0085'              	movwf	((_log_data+1)^(0+640)+5)
  6617  00E6' 0023               	movlb	3	; select bank3
  6618  00E7' 0800'              	movf	?___fltol^(0+384),w
  6619  00E8' 0025               	movlb	5	; select bank5
  6620  00E9' 0085'              	movwf	(_log_data^(0+640)+5)
  6621                           
  6622                           ;charger_discharger.c: 323:     qavg += (float)( ( ( (float)iavg * 2.5 * 5000.0 ) / 4096
      +                          .0 ) + 0.5 ) / 3600.0;
  6623  00EA' 0023               	movlb	3	; select bank3
  6624  00EB' 0800'              	movf	_iavg^(0+384),w
  6625  00EC' 0022               	movlb	2	; select bank2
  6626  00ED' 0080'              	movwf	___xxtofl@val^(0+256)
  6627  00EE' 0023               	movlb	3	; select bank3
  6628  00EF' 0800'              	movf	(_iavg+1)^(0+384),w
  6629  00F0' 0022               	movlb	2	; select bank2
  6630  00F1' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  6631  00F2' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  6632  00F3' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  6633  00F4' 3000               	movlw	0
  6634  00F5' 3180' 2000' 3180'  	fcall	___xxtofl
  6635  00F8' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  6636  00F9' 0080'              	movwf	(___flmul@a+3)^(0+256)
  6637  00FA' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  6638  00FB' 0080'              	movwf	(___flmul@a+2)^(0+256)
  6639  00FC' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  6640  00FD' 0080'              	movwf	(___flmul@a+1)^(0+256)
  6641  00FE' 0800'              	movf	?___xxtofl^(0+256),w
  6642  00FF' 0080'              	movwf	___flmul@a^(0+256)
  6643  0100' 3040               	movlw	64
  6644  0101' 0080'              	movwf	(___flmul@b+3)^(0+256)
  6645  0102' 3020               	movlw	32
  6646  0103' 0080'              	movwf	(___flmul@b+2)^(0+256)
  6647  0104' 3000               	movlw	0
  6648  0105' 0080'              	movwf	(___flmul@b+1)^(0+256)
  6649  0106' 3000               	movlw	0
  6650  0107' 0080'              	movwf	___flmul@b^(0+256)
  6651  0108' 3180' 2000' 3180'  	fcall	___flmul
  6652  010B' 0800'              	movf	(?___flmul+3)^(0+256),w
  6653  010C' 0023               	movlb	3	; select bank3
  6654  010D' 0080'              	movwf	(_scaling$1608+3)^(0+384)
  6655  010E' 0022               	movlb	2	; select bank2
  6656  010F' 0800'              	movf	(?___flmul+2)^(0+256),w
  6657  0110' 0023               	movlb	3	; select bank3
  6658  0111' 0080'              	movwf	(_scaling$1608+2)^(0+384)
  6659  0112' 0022               	movlb	2	; select bank2
  6660  0113' 0800'              	movf	(?___flmul+1)^(0+256),w
  6661  0114' 0023               	movlb	3	; select bank3
  6662  0115' 0080'              	movwf	(_scaling$1608+1)^(0+384)
  6663  0116' 0022               	movlb	2	; select bank2
  6664  0117' 0800'              	movf	?___flmul^(0+256),w
  6665  0118' 0023               	movlb	3	; select bank3
  6666  0119' 0080'              	movwf	_scaling$1608^(0+384)
  6667                           
  6668                           ;charger_discharger.c: 323:     qavg += (float)( ( ( (float)iavg * 2.5 * 5000.0 ) / 4096
      +                          .0 ) + 0.5 ) / 3600.0;
  6669  011A' 0800'              	movf	(_scaling$1608+3)^(0+384),w
  6670  011B' 0022               	movlb	2	; select bank2
  6671  011C' 0080'              	movwf	(___flmul@a+3)^(0+256)
  6672  011D' 0023               	movlb	3	; select bank3
  6673  011E' 0800'              	movf	(_scaling$1608+2)^(0+384),w
  6674  011F' 0022               	movlb	2	; select bank2
  6675  0120' 0080'              	movwf	(___flmul@a+2)^(0+256)
  6676  0121' 0023               	movlb	3	; select bank3
  6677  0122' 0800'              	movf	(_scaling$1608+1)^(0+384),w
  6678  0123' 0022               	movlb	2	; select bank2
  6679  0124' 0080'              	movwf	(___flmul@a+1)^(0+256)
  6680  0125' 0023               	movlb	3	; select bank3
  6681  0126' 0800'              	movf	_scaling$1608^(0+384),w
  6682  0127' 0022               	movlb	2	; select bank2
  6683  0128' 0080'              	movwf	___flmul@a^(0+256)
  6684  0129' 3045               	movlw	69
  6685  012A' 0080'              	movwf	(___flmul@b+3)^(0+256)
  6686  012B' 309C               	movlw	156
  6687  012C' 0080'              	movwf	(___flmul@b+2)^(0+256)
  6688  012D' 3040               	movlw	64
  6689  012E' 0080'              	movwf	(___flmul@b+1)^(0+256)
  6690  012F' 3000               	movlw	0
  6691  0130' 0080'              	movwf	___flmul@b^(0+256)
  6692  0131' 3180' 2000' 3180'  	fcall	___flmul
  6693  0134' 0800'              	movf	(?___flmul+3)^(0+256),w
  6694  0135' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  6695  0136' 0800'              	movf	(?___flmul+2)^(0+256),w
  6696  0137' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  6697  0138' 0800'              	movf	(?___flmul+1)^(0+256),w
  6698  0139' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  6699  013A' 0800'              	movf	?___flmul^(0+256),w
  6700  013B' 0080'              	movwf	___fldiv@b^(0+256)
  6701  013C' 3045               	movlw	69
  6702  013D' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  6703  013E' 3080               	movlw	128
  6704  013F' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  6705  0140' 3000               	movlw	0
  6706  0141' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  6707  0142' 3000               	movlw	0
  6708  0143' 0080'              	movwf	___fldiv@a^(0+256)
  6709  0144' 3180' 2000' 3180'  	fcall	___fldiv
  6710  0147' 0800'              	movf	(?___fldiv+3)^(0+256),w
  6711  0148' 0080'              	movwf	(___fladd@a+3)^(0+256)
  6712  0149' 0800'              	movf	(?___fldiv+2)^(0+256),w
  6713  014A' 0080'              	movwf	(___fladd@a+2)^(0+256)
  6714  014B' 0800'              	movf	(?___fldiv+1)^(0+256),w
  6715  014C' 0080'              	movwf	(___fladd@a+1)^(0+256)
  6716  014D' 0800'              	movf	?___fldiv^(0+256),w
  6717  014E' 0080'              	movwf	___fladd@a^(0+256)
  6718  014F' 303F               	movlw	63
  6719  0150' 0080'              	movwf	(___fladd@b+3)^(0+256)
  6720  0151' 3000               	movlw	0
  6721  0152' 0080'              	movwf	(___fladd@b+2)^(0+256)
  6722  0153' 3000               	movlw	0
  6723  0154' 0080'              	movwf	(___fladd@b+1)^(0+256)
  6724  0155' 3000               	movlw	0
  6725  0156' 0080'              	movwf	___fladd@b^(0+256)
  6726  0157' 3180' 2000' 3180'  	fcall	___fladd
  6727  015A' 0800'              	movf	(?___fladd+3)^(0+256),w
  6728  015B' 0023               	movlb	3	; select bank3
  6729  015C' 0080'              	movwf	(_scaling$1609+3)^(0+384)
  6730  015D' 0022               	movlb	2	; select bank2
  6731  015E' 0800'              	movf	(?___fladd+2)^(0+256),w
  6732  015F' 0023               	movlb	3	; select bank3
  6733  0160' 0080'              	movwf	(_scaling$1609+2)^(0+384)
  6734  0161' 0022               	movlb	2	; select bank2
  6735  0162' 0800'              	movf	(?___fladd+1)^(0+256),w
  6736  0163' 0023               	movlb	3	; select bank3
  6737  0164' 0080'              	movwf	(_scaling$1609+1)^(0+384)
  6738  0165' 0022               	movlb	2	; select bank2
  6739  0166' 0800'              	movf	?___fladd^(0+256),w
  6740  0167' 0023               	movlb	3	; select bank3
  6741  0168' 0080'              	movwf	_scaling$1609^(0+384)
  6742                           
  6743                           ;charger_discharger.c: 323:     qavg += (float)( ( ( (float)iavg * 2.5 * 5000.0 ) / 4096
      +                          .0 ) + 0.5 ) / 3600.0;
  6744  0169' 0800'              	movf	(_scaling$1609+3)^(0+384),w
  6745  016A' 0022               	movlb	2	; select bank2
  6746  016B' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  6747  016C' 0023               	movlb	3	; select bank3
  6748  016D' 0800'              	movf	(_scaling$1609+2)^(0+384),w
  6749  016E' 0022               	movlb	2	; select bank2
  6750  016F' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  6751  0170' 0023               	movlb	3	; select bank3
  6752  0171' 0800'              	movf	(_scaling$1609+1)^(0+384),w
  6753  0172' 0022               	movlb	2	; select bank2
  6754  0173' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  6755  0174' 0023               	movlb	3	; select bank3
  6756  0175' 0800'              	movf	_scaling$1609^(0+384),w
  6757  0176' 0022               	movlb	2	; select bank2
  6758  0177' 0080'              	movwf	___fldiv@b^(0+256)
  6759  0178' 3045               	movlw	69
  6760  0179' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  6761  017A' 3061               	movlw	97
  6762  017B' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  6763  017C' 3000               	movlw	0
  6764  017D' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  6765  017E' 3000               	movlw	0
  6766  017F' 0080'              	movwf	___fldiv@a^(0+256)
  6767  0180' 3180' 2000' 3180'  	fcall	___fldiv
  6768  0183' 0800'              	movf	(?___fldiv+3)^(0+256),w
  6769  0184' 0080'              	movwf	(___fladd@b+3)^(0+256)
  6770  0185' 0800'              	movf	(?___fldiv+2)^(0+256),w
  6771  0186' 0080'              	movwf	(___fladd@b+2)^(0+256)
  6772  0187' 0800'              	movf	(?___fldiv+1)^(0+256),w
  6773  0188' 0080'              	movwf	(___fladd@b+1)^(0+256)
  6774  0189' 0800'              	movf	?___fldiv^(0+256),w
  6775  018A' 0080'              	movwf	___fladd@b^(0+256)
  6776  018B' 0023               	movlb	3	; select bank3
  6777  018C' 0800'              	movf	(_qavg+3)^(0+384),w
  6778  018D' 0022               	movlb	2	; select bank2
  6779  018E' 0080'              	movwf	(___fladd@a+3)^(0+256)
  6780  018F' 0023               	movlb	3	; select bank3
  6781  0190' 0800'              	movf	(_qavg+2)^(0+384),w
  6782  0191' 0022               	movlb	2	; select bank2
  6783  0192' 0080'              	movwf	(___fladd@a+2)^(0+256)
  6784  0193' 0023               	movlb	3	; select bank3
  6785  0194' 0800'              	movf	(_qavg+1)^(0+384),w
  6786  0195' 0022               	movlb	2	; select bank2
  6787  0196' 0080'              	movwf	(___fladd@a+1)^(0+256)
  6788  0197' 0023               	movlb	3	; select bank3
  6789  0198' 0800'              	movf	_qavg^(0+384),w
  6790  0199' 0022               	movlb	2	; select bank2
  6791  019A' 0080'              	movwf	___fladd@a^(0+256)
  6792  019B' 3180' 2000' 3180'  	fcall	___fladd
  6793  019E' 0800'              	movf	(?___fladd+3)^(0+256),w
  6794  019F' 0023               	movlb	3	; select bank3
  6795  01A0' 0080'              	movwf	(_qavg+3)^(0+384)
  6796  01A1' 0022               	movlb	2	; select bank2
  6797  01A2' 0800'              	movf	(?___fladd+2)^(0+256),w
  6798  01A3' 0023               	movlb	3	; select bank3
  6799  01A4' 0080'              	movwf	(_qavg+2)^(0+384)
  6800  01A5' 0022               	movlb	2	; select bank2
  6801  01A6' 0800'              	movf	(?___fladd+1)^(0+256),w
  6802  01A7' 0023               	movlb	3	; select bank3
  6803  01A8' 0080'              	movwf	(_qavg+1)^(0+384)
  6804  01A9' 0022               	movlb	2	; select bank2
  6805  01AA' 0800'              	movf	?___fladd^(0+256),w
  6806  01AB' 0023               	movlb	3	; select bank3
  6807  01AC' 0080'              	movwf	_qavg^(0+384)
  6808                           
  6809                           ;charger_discharger.c: 324:     log_data.capacity = (uint16_t) (qavg);
  6810  01AD' 0800'              	movf	(_qavg+3)^(0+384),w
  6811  01AE' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  6812  01AF' 0800'              	movf	(_qavg+2)^(0+384),w
  6813  01B0' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  6814  01B1' 0800'              	movf	(_qavg+1)^(0+384),w
  6815  01B2' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  6816  01B3' 0800'              	movf	_qavg^(0+384),w
  6817  01B4' 0080'              	movwf	___fltol@f1^(0+384)
  6818  01B5' 3180' 2000' 3180'  	fcall	___fltol
  6819  01B8' 0023               	movlb	3	; select bank3
  6820  01B9' 0800'              	movf	(?___fltol+1)^(0+384),w
  6821  01BA' 0025               	movlb	5	; select bank5
  6822  01BB' 0089'              	movwf	((_log_data+1)^(0+640)+9)
  6823  01BC' 0023               	movlb	3	; select bank3
  6824  01BD' 0800'              	movf	?___fltol^(0+384),w
  6825  01BE' 0025               	movlb	5	; select bank5
  6826  01BF' 0089'              	movwf	(_log_data^(0+640)+9)
  6827                           
  6828                           ;charger_discharger.c: 325:     if (basic_configuration.version == 2)
  6829  01C0' 3002               	movlw	2
  6830  01C1' 0024               	movlb	4	; select bank4
  6831  01C2' 0600'              	xorwf	_basic_configuration^(0+512),w
  6832  01C3' 1D03               	btfss	3,2
  6833  01C4' 0008               	return
  6834                           
  6835                           ;charger_discharger.c: 326:     {;charger_discharger.c: 327:         if (vavg > vmax)
  6836  01C5' 0023               	movlb	3	; select bank3
  6837  01C6' 0800'              	movf	(_vavg+1)^(0+384),w
  6838  01C7' 0200'              	subwf	(_vmax+1)^(0+384),w
  6839  01C8' 1D03               	skipz
  6840  01C9' 2800'              	goto	u7015
  6841  01CA' 0800'              	movf	_vavg^(0+384),w
  6842  01CB' 0200'              	subwf	_vmax^(0+384),w
  6843  01CC'                    u7015:
  6844  01CC' 1803               	skipnc
  6845  01CD' 0008               	return
  6846                           
  6847                           ;charger_discharger.c: 328:         {;charger_discharger.c: 329:             (vmax = vav
      +                          g);
  6848  01CE' 0800'              	movf	(_vavg+1)^(0+384),w
  6849  01CF' 0080'              	movwf	(_vmax+1)^(0+384)
  6850  01D0' 0800'              	movf	_vavg^(0+384),w
  6851  01D1' 0080'              	movwf	_vmax^(0+384)
  6852  01D2' 0008               	return
  6853  01D3'                    __end_of_scaling:
  6854                           
  6855                           	psect	text15
  6856  0000'                    __ptext15:	
  6857 ;; *************** function _log_control *****************
  6858 ;; Defined at:
  6859 ;;		line 335 in file "charger_discharger.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;		None
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;		None
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  1    wreg      void 
  6866 ;; Registers used:
  6867 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/3
  6870 ;;		On exit  : 1F/3
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6877 ;;Total ram usage:        0 bytes
  6878 ;; Hardware stack levels used: 1
  6879 ;; Hardware stack levels required when called: 7
  6880 ;; This function calls:
  6881 ;;		_UART_send_byte
  6882 ;;		_UART_send_some_bytes
  6883 ;;		___fltol
  6884 ;; This function is called by:
  6885 ;;		_main
  6886 ;; This function uses a non-reentrant model
  6887 ;;
  6888                           
  6889  0000'                    _log_control:	
  6890                           ;psect for function _log_control
  6891                           
  6892                           
  6893                           ;charger_discharger.c: 337:     if(start)
  6894                           
  6895                           ;incstack = 0
  6896                           ; Regs used in _log_control: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6897  0000' 0021               	movlb	1	; select bank1
  6898  0001' 0800'              	movf	_start^(0+128),w
  6899  0002' 1903               	btfsc	3,2
  6900  0003' 2800'              	goto	l7469
  6901                           
  6902                           ;charger_discharger.c: 338:     {;charger_discharger.c: 339:         log_data_ptr = &log
      +                          _data;
  6903  0004' 3000'              	movlw	(low (_log_data| (0+512)))& (0+255)
  6904  0005' 0023               	movlb	3	; select bank3
  6905  0006' 0080'              	movwf	_log_data_ptr^(0+384)
  6906                           
  6907                           ;charger_discharger.c: 340:         log_data.cell_counter = cell_count;
  6908  0007' 0800'              	movf	_cell_count^(0+384),w
  6909  0008' 0025               	movlb	5	; select bank5
  6910  0009' 0080'              	movwf	_log_data^(0+640)
  6911                           
  6912                           ;charger_discharger.c: 341:         log_data.state = state;
  6913  000A' 0023               	movlb	3	; select bank3
  6914  000B' 0800'              	movf	_state^(0+384),w
  6915  000C' 0025               	movlb	5	; select bank5
  6916  000D' 0082'              	movwf	(_log_data^(0+640)+2)
  6917                           
  6918                           ;charger_discharger.c: 342:         log_data.repetition_counter = repetition_counter;
  6919  000E' 0023               	movlb	3	; select bank3
  6920  000F' 0800'              	movf	_repetition_counter^(0+384),w
  6921  0010' 0025               	movlb	5	; select bank5
  6922  0011' 0081'              	movwf	(_log_data^(0+640)+1)
  6923                           
  6924                           ;charger_discharger.c: 343:         log_data.elapsed_time = second;
  6925  0012' 0023               	movlb	3	; select bank3
  6926  0013' 0800'              	movf	(_second+1)^(0+384),w
  6927  0014' 0025               	movlb	5	; select bank5
  6928  0015' 0083'              	movwf	((_log_data+1)^(0+640)+3)
  6929  0016' 0023               	movlb	3	; select bank3
  6930  0017' 0800'              	movf	_second^(0+384),w
  6931  0018' 0025               	movlb	5	; select bank5
  6932  0019' 0083'              	movwf	(_log_data^(0+640)+3)
  6933                           
  6934                           ;charger_discharger.c: 344:         log_data.duty_cycle = (uint16_t) pidt;
  6935  001A' 0023               	movlb	3	; select bank3
  6936  001B' 0800'              	movf	(_pidt+3)^(0+384),w
  6937  001C' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  6938  001D' 0800'              	movf	(_pidt+2)^(0+384),w
  6939  001E' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  6940  001F' 0800'              	movf	(_pidt+1)^(0+384),w
  6941  0020' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  6942  0021' 0800'              	movf	_pidt^(0+384),w
  6943  0022' 0080'              	movwf	___fltol@f1^(0+384)
  6944  0023' 3180' 2000' 3180'  	fcall	___fltol
  6945  0026' 0023               	movlb	3	; select bank3
  6946  0027' 0800'              	movf	(?___fltol+1)^(0+384),w
  6947  0028' 0025               	movlb	5	; select bank5
  6948  0029' 008D'              	movwf	((_log_data+1)^(0+640)+13)
  6949  002A' 0023               	movlb	3	; select bank3
  6950  002B' 0800'              	movf	?___fltol^(0+384),w
  6951  002C' 0025               	movlb	5	; select bank5
  6952  002D' 008D'              	movwf	(_log_data^(0+640)+13)
  6953                           
  6954                           ;charger_discharger.c: 345:         UART_send_byte(0xDD);
  6955  002E' 30DD               	movlw	221
  6956  002F' 3180' 2000' 3180'  	fcall	_UART_send_byte
  6957                           
  6958                           ;charger_discharger.c: 346:         UART_send_some_bytes(sizeof(log_data),(uint8_t*)log_
      +                          data_ptr);
  6959  0032' 0800'              	movf	_log_data_ptr^(0+384),w
  6960  0033' 0022               	movlb	2	; select bank2
  6961  0034' 0080'              	movwf	UART_send_some_bytes@data^(0+256)
  6962  0035' 39FF               	andlw	255
  6963  0036' 1D03               	skipz
  6964  0037' 3002               	movlw	2
  6965  0038' 0080'              	movwf	(UART_send_some_bytes@data+1)^(0+256)
  6966  0039' 300F               	movlw	15
  6967  003A' 3180' 2000' 3180'  	fcall	_UART_send_some_bytes
  6968                           
  6969                           ;charger_discharger.c: 347:         UART_send_byte(0x77);
  6970  003D' 3077               	movlw	119
  6971  003E' 3180' 2000'        	fcall	_UART_send_byte
  6972                           
  6973                           ;charger_discharger.c: 348:     }else second = 0;
  6974  0040' 0008               	return
  6975  0041'                    l7469:
  6976  0041' 0023               	movlb	3	; select bank3
  6977  0042' 0180'              	clrf	_second^(0+384)
  6978  0043' 0180'              	clrf	(_second+1)^(0+384)
  6979  0044' 0008               	return
  6980  0045'                    __end_of_log_control:
  6981                           
  6982                           	psect	text16
  6983  0000'                    __ptext16:	
  6984 ;; *************** function _UART_send_some_bytes *****************
  6985 ;; Defined at:
  6986 ;;		line 469 in file "charger_discharger.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;  length          1    wreg     unsigned char 
  6989 ;;  data            2    1[BANK2 ] PTR unsigned char 
  6990 ;;		 -> NULL(0), log_data(15), converter_configuration(14), test_configuration(17), 
  6991 ;;		 -> basic_configuration(17), command_interpreter@calc_checksum(2), 
  6992 ;; Auto vars:     Size  Location     Type
  6993 ;;  length          1    3[BANK2 ] unsigned char 
  6994 ;; Return value:  Size  Location     Type
  6995 ;;                  1    wreg      void 
  6996 ;; Registers used:
  6997 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6998 ;; Tracked objects:
  6999 ;;		On entry : 1F/2
  7000 ;;		On exit  : 1F/2
  7001 ;;		Unchanged: 0/0
  7002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7003 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  7004 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7006 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  7007 ;;Total ram usage:        3 bytes
  7008 ;; Hardware stack levels used: 1
  7009 ;; Hardware stack levels required when called: 6
  7010 ;; This function calls:
  7011 ;;		_UART_send_byte
  7012 ;; This function is called by:
  7013 ;;		_log_control
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017  0000'                    _UART_send_some_bytes:	
  7018                           ;psect for function _UART_send_some_bytes
  7019                           
  7020                           
  7021                           ;incstack = 0
  7022                           ; Regs used in _UART_send_some_bytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7023                           ;UART_send_some_bytes@length stored from wreg
  7024  0000' 0080'              	movwf	UART_send_some_bytes@length^(0+256)
  7025  0001'                    l7265:	
  7026                           ;charger_discharger.c: 469: void UART_send_some_bytes(uint8_t length, uint8_t* data);cha
      +                          rger_discharger.c: 470: {;charger_discharger.c: 471:     while(length--)
  7027                           
  7028                           
  7029                           ;charger_discharger.c: 471:     while(length--)
  7030  0001' 3001               	movlw	1
  7031  0002' 0280'              	subwf	UART_send_some_bytes@length^(0+256),f
  7032  0003' 0A00'              	incf	UART_send_some_bytes@length^(0+256),w
  7033  0004' 1903               	btfsc	3,2
  7034  0005' 0008               	return
  7035                           
  7036                           ;charger_discharger.c: 472:     {;charger_discharger.c: 473:         UART_send_byte(*dat
      +                          a++);
  7037  0006' 0800'              	movf	UART_send_some_bytes@data^(0+256),w
  7038  0007' 0086               	movwf	6
  7039  0008' 0800'              	movf	(UART_send_some_bytes@data+1)^(0+256),w
  7040  0009' 0087               	movwf	7
  7041  000A' 0801               	movf	1,w
  7042  000B' 3180' 2000' 3180'  	fcall	_UART_send_byte
  7043  000E' 3001               	movlw	1
  7044  000F' 0022               	movlb	2	; select bank2
  7045  0010' 0780'              	addwf	UART_send_some_bytes@data^(0+256),f
  7046  0011' 3000               	movlw	0
  7047  0012' 3D80'              	addwfc	(UART_send_some_bytes@data+1)^(0+256),f
  7048  0013' 2800'              	goto	l7265
  7049  0014'                    __end_of_UART_send_some_bytes:
  7050                           
  7051                           	psect	text17
  7052  0000'                    __ptext17:	
  7053 ;; *************** function _UART_send_byte *****************
  7054 ;; Defined at:
  7055 ;;		line 461 in file "charger_discharger.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;  byte            1    wreg     unsigned char 
  7058 ;; Auto vars:     Size  Location     Type
  7059 ;;  byte            1    0[BANK2 ] unsigned char 
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  1    wreg      void 
  7062 ;; Registers used:
  7063 ;;		wreg
  7064 ;; Tracked objects:
  7065 ;;		On entry : 18/5
  7066 ;;		On exit  : 1F/3
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7070 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7072 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7073 ;;Total ram usage:        1 bytes
  7074 ;; Hardware stack levels used: 1
  7075 ;; Hardware stack levels required when called: 5
  7076 ;; This function calls:
  7077 ;;		Nothing
  7078 ;; This function is called by:
  7079 ;;		_log_control
  7080 ;;		_UART_send_some_bytes
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084  0000'                    _UART_send_byte:	
  7085                           ;psect for function _UART_send_byte
  7086                           
  7087                           
  7088                           ;incstack = 0
  7089                           ; Regs used in _UART_send_byte: [wreg]
  7090                           ;UART_send_byte@byte stored from wreg
  7091  0000' 0022               	movlb	2	; select bank2
  7092  0001' 0080'              	movwf	UART_send_byte@byte^(0+256)
  7093  0002'                    l447:	
  7094                           ;charger_discharger.c: 464:     {;charger_discharger.c: 465:     }
  7095                           
  7096                           
  7097                           ;charger_discharger.c: 463:     while(0 == TXIF)
  7098  0002' 0020               	movlb	0	; select bank0
  7099  0003' 1E11               	btfss	17,4	;volatile
  7100  0004' 2800'              	goto	l447
  7101                           
  7102                           ;charger_discharger.c: 466:     TX1REG = byte;
  7103  0005' 0022               	movlb	2	; select bank2
  7104  0006' 0800'              	movf	UART_send_byte@byte^(0+256),w
  7105  0007' 0023               	movlb	3	; select bank3
  7106  0008' 009A               	movwf	26	;volatile
  7107  0009' 0008               	return
  7108  000A'                    __end_of_UART_send_byte:
  7109                           
  7110                           	psect	text18
  7111  0000'                    __ptext18:	
  7112 ;; *************** function _interrupt_enable *****************
  7113 ;; Defined at:
  7114 ;;		line 400 in file "charger_discharger.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;		None
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;  clear_buffer    1    0        unsigned char 
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  1    wreg      void 
  7121 ;; Registers used:
  7122 ;;		wreg, status,2
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 1F/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7132 ;;Total ram usage:        0 bytes
  7133 ;; Hardware stack levels used: 1
  7134 ;; Hardware stack levels required when called: 5
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_main
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142  0000'                    _interrupt_enable:	
  7143                           ;psect for function _interrupt_enable
  7144                           
  7145  0000'                    l6921:	
  7146                           ;charger_discharger.c: 403:     while(RCIF){
  7147                           
  7148                           ;incstack = 0
  7149                           ; Regs used in _interrupt_enable: [wreg+status,2]
  7150                           
  7151                           
  7152                           ;charger_discharger.c: 403:     while(RCIF){
  7153  0000' 0020               	movlb	0	; select bank0
  7154  0001' 1E91               	btfss	17,5	;volatile
  7155  0002' 2800'              	goto	l420
  7156  0003' 0023               	movlb	3	; select bank3
  7157  0004' 0819               	movf	25,w	;volatile
  7158  0005' 2800'              	goto	l6921
  7159  0006'                    l420:
  7160                           
  7161                           ;charger_discharger.c: 406:     RCIE = 1;
  7162  0006' 0021               	movlb	1	; select bank1
  7163  0007' 1691               	bsf	17,5	;volatile
  7164                           
  7165                           ;charger_discharger.c: 407:     TXIE = 0;
  7166  0008' 1211               	bcf	17,4	;volatile
  7167                           
  7168                           ;charger_discharger.c: 408:     TMR1IE = 1;
  7169  0009' 1411               	bsf	17,0	;volatile
  7170                           
  7171                           ;charger_discharger.c: 409:     PEIE = 1;
  7172  000A' 170B               	bsf	11,6	;volatile
  7173                           
  7174                           ;charger_discharger.c: 410:     GIE = 1;
  7175  000B' 178B               	bsf	11,7	;volatile
  7176                           
  7177                           ;charger_discharger.c: 411:     count = 1024;
  7178  000C' 3000               	movlw	0
  7179  000D' 0080'              	movwf	_count^(0+128)
  7180  000E' 3004               	movlw	4
  7181  000F' 0081'              	movwf	(_count^(0+128)+1)
  7182                           
  7183                           ;charger_discharger.c: 412:     TMR1IF = 0;
  7184  0010' 0020               	movlb	0	; select bank0
  7185  0011' 1011               	bcf	17,0	;volatile
  7186                           
  7187                           ;charger_discharger.c: 413:     TMR1ON = 1;
  7188  0012' 1418               	bsf	24,0	;volatile
  7189  0013' 0008               	return
  7190  0014'                    __end_of_interrupt_enable:
  7191                           
  7192                           	psect	text19
  7193  0000'                    __ptext19:	
  7194 ;; *************** function _initialize *****************
  7195 ;; Defined at:
  7196 ;;		line 18 in file "charger_discharger.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;		None
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;		None
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  1    wreg      void 
  7203 ;; Registers used:
  7204 ;;		wreg, status,2, status,0, pclath, cstack
  7205 ;; Tracked objects:
  7206 ;;		On entry : B1F/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7212 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  7213 ;;      Totals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  7214 ;;Total ram usage:        4 bytes
  7215 ;; Hardware stack levels used: 1
  7216 ;; Hardware stack levels required when called: 7
  7217 ;; This function calls:
  7218 ;;		_Cell_OFF
  7219 ;;		___xxtofl
  7220 ;;		_set_DC
  7221 ;; This function is called by:
  7222 ;;		_main
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226  0000'                    _initialize:	
  7227                           ;psect for function _initialize
  7228                           
  7229                           
  7230                           ;incstack = 0
  7231                           ; Regs used in _initialize: [wreg+status,2+status,0+pclath+cstack]
  7232  0000' 0064               	clrwdt	;# 
  7233                           
  7234                           ;charger_discharger.c: 22:     nWPUEN = 0;
  7235  0001' 0021               	movlb	1	; select bank1
  7236  0002' 1395               	bcf	21,7	;volatile
  7237                           
  7238                           ;charger_discharger.c: 23:     WPUE3 = 1;
  7239  0003' 0024               	movlb	4	; select bank4
  7240  0004' 1590               	bsf	16,3	;volatile
  7241                           
  7242                           ;charger_discharger.c: 25:     OSCCONbits.IRCF = 0b1111;
  7243  0005' 3078               	movlw	120
  7244  0006' 0021               	movlb	1	; select bank1
  7245  0007' 0499               	iorwf	25,f	;volatile
  7246                           
  7247                           ;charger_discharger.c: 26:     OSCCONbits.SCS = 0b00;
  7248  0008' 30FC               	movlw	-4
  7249  0009' 0599               	andwf	25,f	;volatile
  7250                           
  7251                           ;charger_discharger.c: 27:     OSCCONbits.SPLLEN = 1;
  7252  000A' 1799               	bsf	25,7	;volatile
  7253                           
  7254                           ;charger_discharger.c: 31:     TRISC3 = 0;
  7255  000B' 118E               	bcf	14,3	;volatile
  7256                           
  7257                           ;charger_discharger.c: 32:     WPUC3 = 0;
  7258  000C' 0024               	movlb	4	; select bank4
  7259  000D' 118E               	bcf	14,3	;volatile
  7260                           
  7261                           ;charger_discharger.c: 33:     TRISC4 = 0;
  7262  000E' 0021               	movlb	1	; select bank1
  7263  000F' 120E               	bcf	14,4	;volatile
  7264                           
  7265                           ;charger_discharger.c: 34:     WPUC4 = 0;
  7266  0010' 0024               	movlb	4	; select bank4
  7267  0011' 120E               	bcf	14,4	;volatile
  7268                           
  7269                           ;charger_discharger.c: 35:     TRISC5 = 0;
  7270  0012' 0021               	movlb	1	; select bank1
  7271  0013' 128E               	bcf	14,5	;volatile
  7272                           
  7273                           ;charger_discharger.c: 36:     WPUC5 = 0;
  7274  0014' 0024               	movlb	4	; select bank4
  7275  0015' 128E               	bcf	14,5	;volatile
  7276                           
  7277                           ;charger_discharger.c: 38:     TRISB2 = 0;
  7278  0016' 0021               	movlb	1	; select bank1
  7279  0017' 110D               	bcf	13,2	;volatile
  7280                           
  7281                           ;charger_discharger.c: 39:     ANSB2 = 0;
  7282  0018' 0023               	movlb	3	; select bank3
  7283  0019' 110D               	bcf	13,2	;volatile
  7284                           
  7285                           ;charger_discharger.c: 40:     WPUB2 = 0;
  7286  001A' 0024               	movlb	4	; select bank4
  7287  001B' 110D               	bcf	13,2	;volatile
  7288                           
  7289                           ;charger_discharger.c: 41:     TRISB3 = 0;
  7290  001C' 0021               	movlb	1	; select bank1
  7291  001D' 118D               	bcf	13,3	;volatile
  7292                           
  7293                           ;charger_discharger.c: 42:     ANSB3 = 0;
  7294  001E' 0023               	movlb	3	; select bank3
  7295  001F' 118D               	bcf	13,3	;volatile
  7296                           
  7297                           ;charger_discharger.c: 43:     WPUB3 = 0;
  7298  0020' 0024               	movlb	4	; select bank4
  7299  0021' 118D               	bcf	13,3	;volatile
  7300                           
  7301                           ;charger_discharger.c: 44:     TRISB4 = 0;
  7302  0022' 0021               	movlb	1	; select bank1
  7303  0023' 120D               	bcf	13,4	;volatile
  7304                           
  7305                           ;charger_discharger.c: 45:     ANSB4 = 0;
  7306  0024' 0023               	movlb	3	; select bank3
  7307  0025' 120D               	bcf	13,4	;volatile
  7308                           
  7309                           ;charger_discharger.c: 46:     WPUB4 = 0;
  7310  0026' 0024               	movlb	4	; select bank4
  7311  0027' 120D               	bcf	13,4	;volatile
  7312                           
  7313                           ;charger_discharger.c: 47:     TRISB5 = 0;
  7314  0028' 0021               	movlb	1	; select bank1
  7315  0029' 128D               	bcf	13,5	;volatile
  7316                           
  7317                           ;charger_discharger.c: 48:     ANSB5 = 0;
  7318  002A' 0023               	movlb	3	; select bank3
  7319  002B' 128D               	bcf	13,5	;volatile
  7320                           
  7321                           ;charger_discharger.c: 49:     WPUB5 = 0;
  7322  002C' 0024               	movlb	4	; select bank4
  7323  002D' 128D               	bcf	13,5	;volatile
  7324                           
  7325                           ;charger_discharger.c: 50:     Cell_OFF();
  7326  002E' 3180' 2000' 3180'  	fcall	_Cell_OFF
  7327                           
  7328                           ;charger_discharger.c: 52:     nT1SYNC = 0;
  7329  0031' 0020               	movlb	0	; select bank0
  7330  0032' 1118               	bcf	24,2	;volatile
  7331                           
  7332                           ;charger_discharger.c: 53:     T1OSCEN = 0;
  7333  0033' 1198               	bcf	24,3	;volatile
  7334                           
  7335                           ;charger_discharger.c: 54:     TMR1ON = 0;
  7336  0034' 1018               	bcf	24,0	;volatile
  7337                           
  7338                           ;charger_discharger.c: 55:     TMR1GE = 0;
  7339  0035' 1399               	bcf	25,7	;volatile
  7340                           
  7341                           ;charger_discharger.c: 56:     TMR1CS0 = 0;
  7342  0036' 1318               	bcf	24,6	;volatile
  7343                           
  7344                           ;charger_discharger.c: 57:     TMR1CS1 = 0;
  7345  0037' 1398               	bcf	24,7	;volatile
  7346                           
  7347                           ;charger_discharger.c: 58:     T1CKPS0 = 0;
  7348  0038' 1218               	bcf	24,4	;volatile
  7349                           
  7350                           ;charger_discharger.c: 59:     T1CKPS1 = 0;
  7351  0039' 1298               	bcf	24,5	;volatile
  7352                           
  7353                           ;charger_discharger.c: 60:     TMR1H = 0xE1;
  7354  003A' 30E1               	movlw	225
  7355  003B' 0097               	movwf	23	;volatile
  7356                           
  7357                           ;charger_discharger.c: 61:     TMR1L = 0x83;
  7358  003C' 3083               	movlw	131
  7359  003D' 0096               	movwf	22	;volatile
  7360                           
  7361                           ;charger_discharger.c: 63:     PSMC1CON = 0x00;
  7362  003E' 0030               	movlb	16	; select bank16
  7363  003F' 0191               	clrf	17	;volatile
  7364                           
  7365                           ;charger_discharger.c: 64:     PSMC1MDL = 0x00;
  7366  0040' 0192               	clrf	18	;volatile
  7367                           
  7368                           ;charger_discharger.c: 65:     PSMC1CLK = 0x01;
  7369  0041' 3001               	movlw	1
  7370  0042' 0094               	movwf	20	;volatile
  7371                           
  7372                           ;charger_discharger.c: 66:     PSMC1PRH = 0x01;
  7373  0043' 3001               	movlw	1
  7374  0044' 00A6               	movwf	38	;volatile
  7375                           
  7376                           ;charger_discharger.c: 67:     PSMC1PRL = 0xFF;
  7377  0045' 30FF               	movlw	255
  7378  0046' 00A5               	movwf	37	;volatile
  7379                           
  7380                           ;charger_discharger.c: 70:     PSMC1DCH = 0x00;
  7381  0047' 01A4               	clrf	36	;volatile
  7382                           
  7383                           ;charger_discharger.c: 71:     PSMC1DCL = 0x32;
  7384  0048' 3032               	movlw	50
  7385  0049' 00A3               	movwf	35	;volatile
  7386                           
  7387                           ;charger_discharger.c: 72:     PSMC1PHH = 0x00;
  7388  004A' 01A2               	clrf	34	;volatile
  7389                           
  7390                           ;charger_discharger.c: 73:     PSMC1PHL = 0x00;
  7391  004B' 01A1               	clrf	33	;volatile
  7392                           
  7393                           ;charger_discharger.c: 74:     P1STRC = 1;
  7394  004C' 152E               	bsf	46,2	;volatile
  7395                           
  7396                           ;charger_discharger.c: 75:     P1POLC = 0;
  7397  004D' 1116               	bcf	22,2	;volatile
  7398                           
  7399                           ;charger_discharger.c: 76:     P1OEC = 1;
  7400  004E' 1515               	bsf	21,2	;volatile
  7401                           
  7402                           ;charger_discharger.c: 77:     P1PRST = 1;
  7403  004F' 141C               	bsf	28,0	;volatile
  7404                           
  7405                           ;charger_discharger.c: 78:     P1PHST = 1;
  7406  0050' 141A               	bsf	26,0	;volatile
  7407                           
  7408                           ;charger_discharger.c: 79:     P1DCST = 1;
  7409  0051' 141B               	bsf	27,0	;volatile
  7410                           
  7411                           ;charger_discharger.c: 80:     PSMC1CON = 0x80;
  7412  0052' 3080               	movlw	128
  7413  0053' 0091               	movwf	17	;volatile
  7414                           
  7415                           ;charger_discharger.c: 84:     TRISC2 = 0;
  7416  0054' 0021               	movlb	1	; select bank1
  7417  0055' 110E               	bcf	14,2	;volatile
  7418                           
  7419                           ;charger_discharger.c: 85:     WPUC2 = 0;
  7420  0056' 0024               	movlb	4	; select bank4
  7421  0057' 110E               	bcf	14,2	;volatile
  7422                           
  7423                           ;charger_discharger.c: 87:     TRISA3 = 1;
  7424  0058' 0021               	movlb	1	; select bank1
  7425  0059' 158C               	bsf	12,3	;volatile
  7426                           
  7427                           ;charger_discharger.c: 88:     ANSA3 = 1;
  7428  005A' 0023               	movlb	3	; select bank3
  7429  005B' 158C               	bsf	12,3	;volatile
  7430                           
  7431                           ;charger_discharger.c: 89:     WPUA3 = 0;
  7432  005C' 0024               	movlb	4	; select bank4
  7433  005D' 118C               	bcf	12,3	;volatile
  7434                           
  7435                           ;charger_discharger.c: 90:     TRISB1 = 1;
  7436  005E' 0021               	movlb	1	; select bank1
  7437  005F' 148D               	bsf	13,1	;volatile
  7438                           
  7439                           ;charger_discharger.c: 91:     ANSB1 = 1;
  7440  0060' 0023               	movlb	3	; select bank3
  7441  0061' 148D               	bsf	13,1	;volatile
  7442                           
  7443                           ;charger_discharger.c: 92:     WPUB1 = 0;
  7444  0062' 0024               	movlb	4	; select bank4
  7445  0063' 108D               	bcf	13,1	;volatile
  7446                           
  7447                           ;charger_discharger.c: 93:     TRISB0 = 1;
  7448  0064' 0021               	movlb	1	; select bank1
  7449  0065' 140D               	bsf	13,0	;volatile
  7450                           
  7451                           ;charger_discharger.c: 94:     ANSB0 = 1;
  7452  0066' 0023               	movlb	3	; select bank3
  7453  0067' 140D               	bsf	13,0	;volatile
  7454                           
  7455                           ;charger_discharger.c: 95:     WPUB0 = 0;
  7456  0068' 0024               	movlb	4	; select bank4
  7457  0069' 100D               	bcf	13,0	;volatile
  7458                           
  7459                           ;charger_discharger.c: 96:     TRISA5 = 1;
  7460  006A' 0021               	movlb	1	; select bank1
  7461  006B' 168C               	bsf	12,5	;volatile
  7462                           
  7463                           ;charger_discharger.c: 97:     ANSA5 = 1;
  7464  006C' 0023               	movlb	3	; select bank3
  7465  006D' 168C               	bsf	12,5	;volatile
  7466                           
  7467                           ;charger_discharger.c: 98:     WPUA5 = 0;
  7468  006E' 0024               	movlb	4	; select bank4
  7469  006F' 128C               	bcf	12,5	;volatile
  7470                           
  7471                           ;charger_discharger.c: 99:     ADCON0bits.ADRMD = 0;
  7472  0070' 0021               	movlb	1	; select bank1
  7473  0071' 139D               	bcf	29,7	;volatile
  7474                           
  7475                           ;charger_discharger.c: 100:     ADCON1bits.ADCS = 0b010;
  7476  0072' 081E               	movf	30,w	;volatile
  7477  0073' 398F               	andlw	-113
  7478  0074' 3820               	iorlw	32
  7479  0075' 009E               	movwf	30	;volatile
  7480                           
  7481                           ;charger_discharger.c: 101:     ADCON1bits.ADNREF = 0;
  7482  0076' 111E               	bcf	30,2	;volatile
  7483                           
  7484                           ;charger_discharger.c: 102:     ADCON1bits.ADPREF = 0b01;
  7485  0077' 081E               	movf	30,w	;volatile
  7486  0078' 39FC               	andlw	-4
  7487  0079' 3801               	iorlw	1
  7488  007A' 009E               	movwf	30	;volatile
  7489                           
  7490                           ;charger_discharger.c: 103:     ADCON1bits.ADFM = 1;
  7491  007B' 179E               	bsf	30,7	;volatile
  7492                           
  7493                           ;charger_discharger.c: 104:     ADCON2bits.CHSN = 0b1111;
  7494  007C' 300F               	movlw	15
  7495  007D' 049F               	iorwf	31,f	;volatile
  7496                           
  7497                           ;charger_discharger.c: 105:     ADCON0bits.ADON = 1;
  7498  007E' 141D               	bsf	29,0	;volatile
  7499                           
  7500                           ;charger_discharger.c: 107:     TXSEL = 0;
  7501  007F' 0022               	movlb	2	; select bank2
  7502  0080' 111D               	bcf	29,2	;volatile
  7503                           
  7504                           ;charger_discharger.c: 108:     RXSEL = 0;
  7505  0081' 109D               	bcf	29,1	;volatile
  7506                           
  7507                           ;charger_discharger.c: 109:     SP1BRGH = 0x00;
  7508  0082' 0023               	movlb	3	; select bank3
  7509  0083' 019C               	clrf	28	;volatile
  7510                           
  7511                           ;charger_discharger.c: 110:     SP1BRGL = 0x8A;
  7512  0084' 308A               	movlw	138
  7513  0085' 009B               	movwf	27	;volatile
  7514                           
  7515                           ;charger_discharger.c: 111:     BRGH = 1;
  7516  0086' 151E               	bsf	30,2	;volatile
  7517                           
  7518                           ;charger_discharger.c: 112:     BRG16 = 1;
  7519  0087' 159F               	bsf	31,3	;volatile
  7520                           
  7521                           ;charger_discharger.c: 113:     SYNC = 0;
  7522  0088' 121E               	bcf	30,4	;volatile
  7523                           
  7524                           ;charger_discharger.c: 114:     SPEN = 1;
  7525  0089' 179D               	bsf	29,7	;volatile
  7526                           
  7527                           ;charger_discharger.c: 115:     TXEN = 1;
  7528  008A' 169E               	bsf	30,5	;volatile
  7529                           
  7530                           ;charger_discharger.c: 116:     CREN = 1;
  7531  008B' 161D               	bsf	29,4	;volatile
  7532                           
  7533                           ;charger_discharger.c: 117:     TX9 = 0;
  7534  008C' 131E               	bcf	30,6	;volatile
  7535                           
  7536                           ;charger_discharger.c: 118:     RX9 = 0;
  7537  008D' 131D               	bcf	29,6	;volatile
  7538                           
  7539                           ;charger_discharger.c: 119:     RCIE = 0;
  7540  008E' 0021               	movlb	1	; select bank1
  7541  008F' 1291               	bcf	17,5	;volatile
  7542                           
  7543                           ;charger_discharger.c: 120:     TXIE = 0;
  7544  0090' 1211               	bcf	17,4	;volatile
  7545                           
  7546                           ;charger_discharger.c: 122:     { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(320000
      +                          00/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _delay
      +                          ((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(32000
      +                          000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pidi = 
      +                          0.0;};
  7547  0091' 0020               	movlb	0	; select bank0
  7548  0092' 118E               	bcf	14,3	;volatile
  7549  0093' 120E               	bcf	14,4	;volatile
  7550  0094' 3005               	movlw	5
  7551  0095' 0023               	movlb	3	; select bank3
  7552  0096' 0081'              	movwf	(??_initialize^(0+384)+1)
  7553  0097' 300F               	movlw	15
  7554  0098' 0080'              	movwf	??_initialize^(0+384)
  7555  0099' 30F1               	movlw	241
  7556  009A'                    u7777:
  7557  009A' 0B89               	decfsz	9,f
  7558  009B' 2800'              	goto	u7777
  7559  009C' 0B80'              	decfsz	??_initialize^(0+384),f
  7560  009D' 2800'              	goto	u7777
  7561  009E' 0B81'              	decfsz	(??_initialize^(0+384)+1),f
  7562  009F' 2800'              	goto	u7777
  7563  00A0' 0020               	movlb	0	; select bank0
  7564  00A1' 158E               	bsf	14,3	;volatile
  7565  00A2' 3005               	movlw	5
  7566  00A3' 0023               	movlb	3	; select bank3
  7567  00A4' 0081'              	movwf	(??_initialize^(0+384)+1)
  7568  00A5' 300F               	movlw	15
  7569  00A6' 0080'              	movwf	??_initialize^(0+384)
  7570  00A7' 30F1               	movlw	241
  7571  00A8'                    u7787:
  7572  00A8' 0B89               	decfsz	9,f
  7573  00A9' 2800'              	goto	u7787
  7574  00AA' 0B80'              	decfsz	??_initialize^(0+384),f
  7575  00AB' 2800'              	goto	u7787
  7576  00AC' 0B81'              	decfsz	(??_initialize^(0+384)+1),f
  7577  00AD' 2800'              	goto	u7787
  7578  00AE' 0020               	movlb	0	; select bank0
  7579  00AF' 118E               	bcf	14,3	;volatile
  7580  00B0' 3005               	movlw	5
  7581  00B1' 0023               	movlb	3	; select bank3
  7582  00B2' 0081'              	movwf	(??_initialize^(0+384)+1)
  7583  00B3' 300F               	movlw	15
  7584  00B4' 0080'              	movwf	??_initialize^(0+384)
  7585  00B5' 30F1               	movlw	241
  7586  00B6'                    u7797:
  7587  00B6' 0B89               	decfsz	9,f
  7588  00B7' 2800'              	goto	u7797
  7589  00B8' 0B80'              	decfsz	??_initialize^(0+384),f
  7590  00B9' 2800'              	goto	u7797
  7591  00BA' 0B81'              	decfsz	(??_initialize^(0+384)+1),f
  7592  00BB' 2800'              	goto	u7797
  7593  00BC' 0020               	movlb	0	; select bank0
  7594  00BD' 168E               	bsf	14,5	;volatile
  7595  00BE' 3005               	movlw	5
  7596  00BF' 0023               	movlb	3	; select bank3
  7597  00C0' 0081'              	movwf	(??_initialize^(0+384)+1)
  7598  00C1' 300F               	movlw	15
  7599  00C2' 0080'              	movwf	??_initialize^(0+384)
  7600  00C3' 30F1               	movlw	241
  7601  00C4'                    u7807:
  7602  00C4' 0B89               	decfsz	9,f
  7603  00C5' 2800'              	goto	u7807
  7604  00C6' 0B80'              	decfsz	??_initialize^(0+384),f
  7605  00C7' 2800'              	goto	u7807
  7606  00C8' 0B81'              	decfsz	(??_initialize^(0+384)+1),f
  7607  00C9' 2800'              	goto	u7807
  7608  00CA' 0023               	movlb	3	; select bank3
  7609  00CB' 0800'              	movf	(_CC_disc_kp+3)^(0+384),w
  7610  00CC' 0024               	movlb	4	; select bank4
  7611  00CD' 0080'              	movwf	(_kp+3)^(0+512)
  7612  00CE' 0023               	movlb	3	; select bank3
  7613  00CF' 0800'              	movf	(_CC_disc_kp+2)^(0+384),w
  7614  00D0' 0024               	movlb	4	; select bank4
  7615  00D1' 0080'              	movwf	(_kp+2)^(0+512)
  7616  00D2' 0023               	movlb	3	; select bank3
  7617  00D3' 0800'              	movf	(_CC_disc_kp+1)^(0+384),w
  7618  00D4' 0024               	movlb	4	; select bank4
  7619  00D5' 0080'              	movwf	(_kp+1)^(0+512)
  7620  00D6' 0023               	movlb	3	; select bank3
  7621  00D7' 0800'              	movf	_CC_disc_kp^(0+384),w
  7622  00D8' 0024               	movlb	4	; select bank4
  7623  00D9' 0080'              	movwf	_kp^(0+512)
  7624  00DA' 0023               	movlb	3	; select bank3
  7625  00DB' 0800'              	movf	(_CC_disc_ki+3)^(0+384),w
  7626  00DC' 0024               	movlb	4	; select bank4
  7627  00DD' 0080'              	movwf	(_ki+3)^(0+512)
  7628  00DE' 0023               	movlb	3	; select bank3
  7629  00DF' 0800'              	movf	(_CC_disc_ki+2)^(0+384),w
  7630  00E0' 0024               	movlb	4	; select bank4
  7631  00E1' 0080'              	movwf	(_ki+2)^(0+512)
  7632  00E2' 0023               	movlb	3	; select bank3
  7633  00E3' 0800'              	movf	(_CC_disc_ki+1)^(0+384),w
  7634  00E4' 0024               	movlb	4	; select bank4
  7635  00E5' 0080'              	movwf	(_ki+1)^(0+512)
  7636  00E6' 0023               	movlb	3	; select bank3
  7637  00E7' 0800'              	movf	_CC_disc_ki^(0+384),w
  7638  00E8' 0024               	movlb	4	; select bank4
  7639  00E9' 0080'              	movwf	_ki^(0+512)
  7640  00EA' 0023               	movlb	3	; select bank3
  7641  00EB' 0800'              	movf	_CC_char_disc_kd^(0+384),w
  7642  00EC' 0080'              	movwf	??_initialize^(0+384)
  7643  00ED' 0181'              	clrf	(??_initialize^(0+384)+1)
  7644  00EE' 0182'              	clrf	(??_initialize^(0+384)+2)
  7645  00EF' 0183'              	clrf	(??_initialize^(0+384)+3)
  7646  00F0' 0800'              	movf	(??_initialize+3)^(0+384),w
  7647  00F1' 0022               	movlb	2	; select bank2
  7648  00F2' 0080'              	movwf	(___xxtofl@val+3)^(0+256)
  7649  00F3' 0023               	movlb	3	; select bank3
  7650  00F4' 0800'              	movf	(??_initialize+2)^(0+384),w
  7651  00F5' 0022               	movlb	2	; select bank2
  7652  00F6' 0080'              	movwf	(___xxtofl@val+2)^(0+256)
  7653  00F7' 0023               	movlb	3	; select bank3
  7654  00F8' 0800'              	movf	(??_initialize+1)^(0+384),w
  7655  00F9' 0022               	movlb	2	; select bank2
  7656  00FA' 0080'              	movwf	(___xxtofl@val+1)^(0+256)
  7657  00FB' 0023               	movlb	3	; select bank3
  7658  00FC' 0800'              	movf	??_initialize^(0+384),w
  7659  00FD' 0022               	movlb	2	; select bank2
  7660  00FE' 0080'              	movwf	___xxtofl@val^(0+256)
  7661  00FF' 3000               	movlw	0
  7662  0100' 3180' 2000' 3180'  	fcall	___xxtofl
  7663  0103' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  7664  0104' 0024               	movlb	4	; select bank4
  7665  0105' 0080'              	movwf	(_kd+3)^(0+512)
  7666  0106' 0022               	movlb	2	; select bank2
  7667  0107' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  7668  0108' 0024               	movlb	4	; select bank4
  7669  0109' 0080'              	movwf	(_kd+2)^(0+512)
  7670  010A' 0022               	movlb	2	; select bank2
  7671  010B' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  7672  010C' 0024               	movlb	4	; select bank4
  7673  010D' 0080'              	movwf	(_kd+1)^(0+512)
  7674  010E' 0022               	movlb	2	; select bank2
  7675  010F' 0800'              	movf	?___xxtofl^(0+256),w
  7676  0110' 0024               	movlb	4	; select bank4
  7677  0111' 0080'              	movwf	_kd^(0+512)
  7678  0112' 3000               	movlw	0
  7679  0113' 0080'              	movwf	(_pidi+3)^(0+512)
  7680  0114' 3000               	movlw	0
  7681  0115' 0080'              	movwf	(_pidi+2)^(0+512)
  7682  0116' 3000               	movlw	0
  7683  0117' 0080'              	movwf	(_pidi+1)^(0+512)
  7684  0118' 3000               	movlw	0
  7685  0119' 0080'              	movwf	_pidi^(0+512)
  7686                           
  7687                           ;charger_discharger.c: 123:     _delay((unsigned long)((100)*(32000000/4000.0)));
  7688  011A' 3005               	movlw	5
  7689  011B' 0023               	movlb	3	; select bank3
  7690  011C' 0081'              	movwf	(??_initialize^(0+384)+1)
  7691  011D' 300F               	movlw	15
  7692  011E' 0080'              	movwf	??_initialize^(0+384)
  7693  011F' 30F1               	movlw	241
  7694  0120'                    u7817:
  7695  0120' 0B89               	decfsz	9,f
  7696  0121' 2800'              	goto	u7817
  7697  0122' 0B80'              	decfsz	??_initialize^(0+384),f
  7698  0123' 2800'              	goto	u7817
  7699  0124' 0B81'              	decfsz	(??_initialize^(0+384)+1),f
  7700  0125' 2800'              	goto	u7817
  7701                           
  7702                           ;charger_discharger.c: 124:     { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50.0; set_
      +                          DC(); Cell_OFF();};
  7703  0126' 0020               	movlb	0	; select bank0
  7704  0127' 118E               	bcf	14,3	;volatile
  7705  0128' 120E               	bcf	14,4	;volatile
  7706  0129' 0021               	movlb	1	; select bank1
  7707  012A' 0180'              	clrf	_conv^(0+128)
  7708  012B' 0020               	movlb	0	; select bank0
  7709  012C' 128E               	bcf	14,5	;volatile
  7710  012D' 3042               	movlw	66
  7711  012E' 0023               	movlb	3	; select bank3
  7712  012F' 0080'              	movwf	(_pidt+3)^(0+384)
  7713  0130' 3048               	movlw	72
  7714  0131' 0080'              	movwf	(_pidt+2)^(0+384)
  7715  0132' 3000               	movlw	0
  7716  0133' 0080'              	movwf	(_pidt+1)^(0+384)
  7717  0134' 3000               	movlw	0
  7718  0135' 0080'              	movwf	_pidt^(0+384)
  7719  0136' 3180' 2000' 3180'  	fcall	_set_DC
  7720  0139' 3180' 2000'        	fcall	_Cell_OFF
  7721  013B' 0008               	return
  7722  013C'                    __end_of_initialize:
  7723                           
  7724                           	psect	text20
  7725  0000'                    __ptext20:	
  7726 ;; *************** function _set_DC *****************
  7727 ;; Defined at:
  7728 ;;		line 290 in file "charger_discharger.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;		None
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;  dc              2   16[BANK3 ] unsigned short 
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  1    wreg      void 
  7735 ;; Registers used:
  7736 ;;		wreg, status,2, status,0, pclath, cstack
  7737 ;; Tracked objects:
  7738 ;;		On entry : 1F/3
  7739 ;;		On exit  : 1F/10
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7743 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  7744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7745 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  7746 ;;Total ram usage:        2 bytes
  7747 ;; Hardware stack levels used: 1
  7748 ;; Hardware stack levels required when called: 6
  7749 ;; This function calls:
  7750 ;;		___fltol
  7751 ;; This function is called by:
  7752 ;;		_initialize
  7753 ;;		_fIDLE
  7754 ;;		_fCHARGE
  7755 ;;		_fDISCHARGE
  7756 ;;		_fDC_res
  7757 ;;		_fWAIT
  7758 ;;		_converter_settings
  7759 ;; This function uses a non-reentrant model
  7760 ;;
  7761                           
  7762  0000'                    _set_DC:	
  7763                           ;psect for function _set_DC
  7764                           
  7765                           
  7766                           ;charger_discharger.c: 293:     uint16_t dc = (uint16_t) pidt;
  7767                           
  7768                           ;incstack = 0
  7769                           ; Regs used in _set_DC: [wreg+status,2+status,0+pclath+cstack]
  7770  0000' 0800'              	movf	(_pidt+3)^(0+384),w
  7771  0001' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  7772  0002' 0800'              	movf	(_pidt+2)^(0+384),w
  7773  0003' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  7774  0004' 0800'              	movf	(_pidt+1)^(0+384),w
  7775  0005' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  7776  0006' 0800'              	movf	_pidt^(0+384),w
  7777  0007' 0080'              	movwf	___fltol@f1^(0+384)
  7778  0008' 3180' 2000'        	fcall	___fltol
  7779  000A' 0023               	movlb	3	; select bank3
  7780  000B' 0800'              	movf	(?___fltol+1)^(0+384),w
  7781  000C' 0080'              	movwf	(set_DC@dc+1)^(0+384)
  7782  000D' 0800'              	movf	?___fltol^(0+384),w
  7783  000E' 0080'              	movwf	set_DC@dc^(0+384)
  7784                           
  7785                           ;charger_discharger.c: 295:     PSMC1DCL = dc & 0x00FF;
  7786  000F' 0800'              	movf	set_DC@dc^(0+384),w
  7787  0010' 0030               	movlb	16	; select bank16
  7788  0011' 00A3               	movwf	35	;volatile
  7789                           
  7790                           ;charger_discharger.c: 296:     PSMC1DCH = (dc >> 8) & 0x01;
  7791  0012' 0023               	movlb	3	; select bank3
  7792  0013' 0801'              	movf	(set_DC@dc^(0+384)+1),w
  7793  0014' 3901               	andlw	1
  7794  0015' 0030               	movlb	16	; select bank16
  7795  0016' 00A4               	movwf	36	;volatile
  7796                           
  7797                           ;charger_discharger.c: 297:     PSMC1CONbits.PSMC1LD = 1;
  7798  0017' 1711               	bsf	17,6	;volatile
  7799  0018' 0008               	return
  7800  0019'                    __end_of_set_DC:
  7801                           
  7802                           	psect	text21
  7803  0000'                    __ptext21:	
  7804 ;; *************** function _Cell_OFF *****************
  7805 ;; Defined at:
  7806 ;;		line 553 in file "charger_discharger.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;		None
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;		None
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  1    wreg      void 
  7813 ;; Registers used:
  7814 ;;		wreg
  7815 ;; Tracked objects:
  7816 ;;		On entry : B/10
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7822 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7823 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7824 ;;Total ram usage:        1 bytes
  7825 ;; Hardware stack levels used: 1
  7826 ;; Hardware stack levels required when called: 5
  7827 ;; This function calls:
  7828 ;;		Nothing
  7829 ;; This function is called by:
  7830 ;;		_initialize
  7831 ;;		_fIDLE
  7832 ;;		_fCHARGE
  7833 ;;		_fDISCHARGE
  7834 ;;		_fDC_res
  7835 ;;		_fWAIT
  7836 ;; This function uses a non-reentrant model
  7837 ;;
  7838                           
  7839  0000'                    _Cell_OFF:	
  7840                           ;psect for function _Cell_OFF
  7841                           
  7842                           
  7843                           ;charger_discharger.c: 555:     { RB2 = 0; };
  7844                           
  7845                           ;incstack = 0
  7846                           ; Regs used in _Cell_OFF: [wreg]
  7847  0000' 0020               	movlb	0	; select bank0
  7848  0001' 110D               	bcf	13,2	;volatile
  7849                           
  7850                           ;charger_discharger.c: 556:     _delay((unsigned long)((10)*(32000000/4000.0)));
  7851  0002' 3068               	movlw	104
  7852  0003' 0022               	movlb	2	; select bank2
  7853  0004' 0080'              	movwf	??_Cell_OFF^(0+256)
  7854  0005' 30E4               	movlw	228
  7855  0006'                    u7827:
  7856  0006' 0B89               	decfsz	9,f
  7857  0007' 2800'              	goto	u7827
  7858  0008' 0B80'              	decfsz	??_Cell_OFF^(0+256),f
  7859  0009' 2800'              	goto	u7827
  7860  000A' 0000               	nop
  7861                           
  7862                           ;charger_discharger.c: 557:     { RB3 = 0; };
  7863  000B' 0020               	movlb	0	; select bank0
  7864  000C' 118D               	bcf	13,3	;volatile
  7865                           
  7866                           ;charger_discharger.c: 558:     _delay((unsigned long)((10)*(32000000/4000.0)));
  7867  000D' 3068               	movlw	104
  7868  000E' 0022               	movlb	2	; select bank2
  7869  000F' 0080'              	movwf	??_Cell_OFF^(0+256)
  7870  0010' 30E4               	movlw	228
  7871  0011'                    u7837:
  7872  0011' 0B89               	decfsz	9,f
  7873  0012' 2800'              	goto	u7837
  7874  0013' 0B80'              	decfsz	??_Cell_OFF^(0+256),f
  7875  0014' 2800'              	goto	u7837
  7876  0015' 0000               	nop
  7877                           
  7878                           ;charger_discharger.c: 559:     { RB4 = 0; };
  7879  0016' 0020               	movlb	0	; select bank0
  7880  0017' 120D               	bcf	13,4	;volatile
  7881                           
  7882                           ;charger_discharger.c: 560:     _delay((unsigned long)((10)*(32000000/4000.0)));
  7883  0018' 3068               	movlw	104
  7884  0019' 0022               	movlb	2	; select bank2
  7885  001A' 0080'              	movwf	??_Cell_OFF^(0+256)
  7886  001B' 30E4               	movlw	228
  7887  001C'                    u7847:
  7888  001C' 0B89               	decfsz	9,f
  7889  001D' 2800'              	goto	u7847
  7890  001E' 0B80'              	decfsz	??_Cell_OFF^(0+256),f
  7891  001F' 2800'              	goto	u7847
  7892  0020' 0000               	nop
  7893                           
  7894                           ;charger_discharger.c: 561:     { RB5 = 0; };
  7895  0021' 0020               	movlb	0	; select bank0
  7896  0022' 128D               	bcf	13,5	;volatile
  7897                           
  7898                           ;charger_discharger.c: 562:     _delay((unsigned long)((10)*(32000000/4000.0)));
  7899  0023' 3068               	movlw	104
  7900  0024' 0022               	movlb	2	; select bank2
  7901  0025' 0080'              	movwf	??_Cell_OFF^(0+256)
  7902  0026' 30E4               	movlw	228
  7903  0027'                    u7857:
  7904  0027' 0B89               	decfsz	9,f
  7905  0028' 2800'              	goto	u7857
  7906  0029' 0B80'              	decfsz	??_Cell_OFF^(0+256),f
  7907  002A' 2800'              	goto	u7857
  7908  002B' 0000               	nop
  7909  002C' 0008               	return
  7910  002D'                    __end_of_Cell_OFF:
  7911                           
  7912                           	psect	text22
  7913  0000'                    __ptext22:	
  7914 ;; *************** function _cc_cv_mode *****************
  7915 ;; Defined at:
  7916 ;;		line 305 in file "charger_discharger.c"
  7917 ;; Parameters:    Size  Location     Type
  7918 ;;  current_volt    2   16[BANK3 ] unsigned short 
  7919 ;;  reference_vo    2   18[BANK3 ] unsigned short 
  7920 ;;  CC_mode_stat    1   20[BANK3 ] _Bool 
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;		None
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  1    wreg      void 
  7925 ;; Registers used:
  7926 ;;		wreg, status,2, status,0, pclath, cstack
  7927 ;; Tracked objects:
  7928 ;;		On entry : 1F/3
  7929 ;;		On exit  : 18/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7932 ;;      Params:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0
  7933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7935 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0
  7936 ;;Total ram usage:        5 bytes
  7937 ;; Hardware stack levels used: 1
  7938 ;; Hardware stack levels required when called: 7
  7939 ;; This function calls:
  7940 ;;		___fladd
  7941 ;;		___fldiv
  7942 ;;		___flmul
  7943 ;;		___fltol
  7944 ;;		___xxtofl
  7945 ;; This function is called by:
  7946 ;;		_main
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950  0000'                    _cc_cv_mode:	
  7951                           ;psect for function _cc_cv_mode
  7952                           
  7953                           
  7954                           ;charger_discharger.c: 305: void cc_cv_mode(uint16_t current_voltage, uint16_t reference
      +                          _voltage, _Bool CC_mode_status);charger_discharger.c: 306: {;charger_discharger.c: 308: 
      +                              if( ( ( (uint16_t) ( ( ( (float)current_voltage * 5000.0 ) / 4096.0 ) + 0.5 ) ) > re
      +                          ference_voltage ) && CC_mode_status )
  7955                           
  7956                           ;incstack = 0
  7957                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0+pclath+cstack]
  7958  0000' 0800'              	movf	cc_cv_mode@current_voltage^(0+384),w
  7959  0001' 0022               	movlb	2	; select bank2
  7960  0002' 0080'              	movwf	___xxtofl@val^(0+256)
  7961  0003' 0023               	movlb	3	; select bank3
  7962  0004' 0800'              	movf	(cc_cv_mode@current_voltage+1)^(0+384),w
  7963  0005' 0022               	movlb	2	; select bank2
  7964  0006' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  7965  0007' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  7966  0008' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  7967  0009' 3000               	movlw	0
  7968  000A' 3180' 2000' 3180'  	fcall	___xxtofl
  7969  000D' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  7970  000E' 0080'              	movwf	(___flmul@a+3)^(0+256)
  7971  000F' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  7972  0010' 0080'              	movwf	(___flmul@a+2)^(0+256)
  7973  0011' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  7974  0012' 0080'              	movwf	(___flmul@a+1)^(0+256)
  7975  0013' 0800'              	movf	?___xxtofl^(0+256),w
  7976  0014' 0080'              	movwf	___flmul@a^(0+256)
  7977  0015' 3045               	movlw	69
  7978  0016' 0080'              	movwf	(___flmul@b+3)^(0+256)
  7979  0017' 309C               	movlw	156
  7980  0018' 0080'              	movwf	(___flmul@b+2)^(0+256)
  7981  0019' 3040               	movlw	64
  7982  001A' 0080'              	movwf	(___flmul@b+1)^(0+256)
  7983  001B' 3000               	movlw	0
  7984  001C' 0080'              	movwf	___flmul@b^(0+256)
  7985  001D' 3180' 2000' 3180'  	fcall	___flmul
  7986  0020' 0800'              	movf	(?___flmul+3)^(0+256),w
  7987  0021' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  7988  0022' 0800'              	movf	(?___flmul+2)^(0+256),w
  7989  0023' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  7990  0024' 0800'              	movf	(?___flmul+1)^(0+256),w
  7991  0025' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  7992  0026' 0800'              	movf	?___flmul^(0+256),w
  7993  0027' 0080'              	movwf	___fldiv@b^(0+256)
  7994  0028' 3045               	movlw	69
  7995  0029' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  7996  002A' 3080               	movlw	128
  7997  002B' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  7998  002C' 3000               	movlw	0
  7999  002D' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  8000  002E' 3000               	movlw	0
  8001  002F' 0080'              	movwf	___fldiv@a^(0+256)
  8002  0030' 3180' 2000' 3180'  	fcall	___fldiv
  8003  0033' 0800'              	movf	(?___fldiv+3)^(0+256),w
  8004  0034' 0080'              	movwf	(___fladd@a+3)^(0+256)
  8005  0035' 0800'              	movf	(?___fldiv+2)^(0+256),w
  8006  0036' 0080'              	movwf	(___fladd@a+2)^(0+256)
  8007  0037' 0800'              	movf	(?___fldiv+1)^(0+256),w
  8008  0038' 0080'              	movwf	(___fladd@a+1)^(0+256)
  8009  0039' 0800'              	movf	?___fldiv^(0+256),w
  8010  003A' 0080'              	movwf	___fladd@a^(0+256)
  8011  003B' 303F               	movlw	63
  8012  003C' 0080'              	movwf	(___fladd@b+3)^(0+256)
  8013  003D' 3000               	movlw	0
  8014  003E' 0080'              	movwf	(___fladd@b+2)^(0+256)
  8015  003F' 3000               	movlw	0
  8016  0040' 0080'              	movwf	(___fladd@b+1)^(0+256)
  8017  0041' 3000               	movlw	0
  8018  0042' 0080'              	movwf	___fladd@b^(0+256)
  8019  0043' 3180' 2000' 3180'  	fcall	___fladd
  8020  0046' 0800'              	movf	(?___fladd+3)^(0+256),w
  8021  0047' 0023               	movlb	3	; select bank3
  8022  0048' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  8023  0049' 0022               	movlb	2	; select bank2
  8024  004A' 0800'              	movf	(?___fladd+2)^(0+256),w
  8025  004B' 0023               	movlb	3	; select bank3
  8026  004C' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  8027  004D' 0022               	movlb	2	; select bank2
  8028  004E' 0800'              	movf	(?___fladd+1)^(0+256),w
  8029  004F' 0023               	movlb	3	; select bank3
  8030  0050' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  8031  0051' 0022               	movlb	2	; select bank2
  8032  0052' 0800'              	movf	?___fladd^(0+256),w
  8033  0053' 0023               	movlb	3	; select bank3
  8034  0054' 0080'              	movwf	___fltol@f1^(0+384)
  8035  0055' 3180' 2000' 3180'  	fcall	___fltol
  8036  0058' 0023               	movlb	3	; select bank3
  8037  0059' 0800'              	movf	(?___fltol+1)^(0+384),w
  8038  005A' 0200'              	subwf	(cc_cv_mode@reference_voltage+1)^(0+384),w
  8039  005B' 1D03               	skipz
  8040  005C' 2800'              	goto	u6985
  8041  005D' 0800'              	movf	?___fltol^(0+384),w
  8042  005E' 0200'              	subwf	cc_cv_mode@reference_voltage^(0+384),w
  8043  005F'                    u6985:
  8044  005F' 1803               	skipnc
  8045  0060' 0008               	return
  8046  0061' 0800'              	movf	cc_cv_mode@CC_mode_status^(0+384),w
  8047  0062' 1903               	btfsc	3,2
  8048  0063' 0008               	return
  8049                           
  8050                           ;charger_discharger.c: 309:     {;charger_discharger.c: 310:         pidi = 0;
  8051  0064' 3000               	movlw	0
  8052  0065' 0024               	movlb	4	; select bank4
  8053  0066' 0080'              	movwf	(_pidi+3)^(0+512)
  8054  0067' 3000               	movlw	0
  8055  0068' 0080'              	movwf	(_pidi+2)^(0+512)
  8056  0069' 3000               	movlw	0
  8057  006A' 0080'              	movwf	(_pidi+1)^(0+512)
  8058  006B' 3000               	movlw	0
  8059  006C' 0080'              	movwf	_pidi^(0+512)
  8060                           
  8061                           ;charger_discharger.c: 311:         cmode = 0;
  8062  006D' 0021               	movlb	1	; select bank1
  8063  006E' 0180'              	clrf	_cmode^(0+128)
  8064                           
  8065                           ;charger_discharger.c: 312:         kp = CV_kp;
  8066  006F' 0024               	movlb	4	; select bank4
  8067  0070' 0800'              	movf	(_CV_kp+3)^(0+512),w
  8068  0071' 0080'              	movwf	(_kp+3)^(0+512)
  8069  0072' 0800'              	movf	(_CV_kp+2)^(0+512),w
  8070  0073' 0080'              	movwf	(_kp+2)^(0+512)
  8071  0074' 0800'              	movf	(_CV_kp+1)^(0+512),w
  8072  0075' 0080'              	movwf	(_kp+1)^(0+512)
  8073  0076' 0800'              	movf	_CV_kp^(0+512),w
  8074  0077' 0080'              	movwf	_kp^(0+512)
  8075                           
  8076                           ;charger_discharger.c: 313:         ki = CV_ki;
  8077  0078' 0800'              	movf	(_CV_ki+3)^(0+512),w
  8078  0079' 0080'              	movwf	(_ki+3)^(0+512)
  8079  007A' 0800'              	movf	(_CV_ki+2)^(0+512),w
  8080  007B' 0080'              	movwf	(_ki+2)^(0+512)
  8081  007C' 0800'              	movf	(_CV_ki+1)^(0+512),w
  8082  007D' 0080'              	movwf	(_ki+1)^(0+512)
  8083  007E' 0800'              	movf	_CV_ki^(0+512),w
  8084  007F' 0080'              	movwf	_ki^(0+512)
  8085                           
  8086                           ;charger_discharger.c: 314:         kd = CV_kd;
  8087  0080' 0800'              	movf	(_CV_kd+3)^(0+512),w
  8088  0081' 0080'              	movwf	(_kd+3)^(0+512)
  8089  0082' 0800'              	movf	(_CV_kd+2)^(0+512),w
  8090  0083' 0080'              	movwf	(_kd+2)^(0+512)
  8091  0084' 0800'              	movf	(_CV_kd+1)^(0+512),w
  8092  0085' 0080'              	movwf	(_kd+1)^(0+512)
  8093  0086' 0800'              	movf	_CV_kd^(0+512),w
  8094  0087' 0080'              	movwf	_kd^(0+512)
  8095  0088' 0008               	return
  8096  0089'                    __end_of_cc_cv_mode:
  8097                           
  8098                           	psect	text23
  8099  0000'                    __ptext23:	
  8100 ;; *************** function ___xxtofl *****************
  8101 ;; Defined at:
  8102 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;  sign            1    wreg     unsigned char 
  8105 ;;  val             4    0[BANK2 ] long 
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;  sign            1    8[BANK2 ] unsigned char 
  8108 ;;  arg             4   10[BANK2 ] unsigned long 
  8109 ;;  exp             1    9[BANK2 ] unsigned char 
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  4    0[BANK2 ] unsigned char 
  8112 ;; Registers used:
  8113 ;;		wreg, status,2, status,0
  8114 ;; Tracked objects:
  8115 ;;		On entry : 1F/2
  8116 ;;		On exit  : 1F/2
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8119 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8120 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  8121 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8122 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0
  8123 ;;Total ram usage:       14 bytes
  8124 ;; Hardware stack levels used: 1
  8125 ;; Hardware stack levels required when called: 5
  8126 ;; This function calls:
  8127 ;;		Nothing
  8128 ;; This function is called by:
  8129 ;;		_initialize
  8130 ;;		_cc_cv_mode
  8131 ;;		_scaling
  8132 ;;		_fCHARGE
  8133 ;;		_fDISCHARGE
  8134 ;;		_fDC_res
  8135 ;;		_converter_settings
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139  0000'                    ___xxtofl:	
  8140                           ;psect for function ___xxtofl
  8141                           
  8142                           
  8143                           ;incstack = 0
  8144                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8145                           ;___xxtofl@sign stored from wreg
  8146  0000' 0080'              	movwf	___xxtofl@sign^(0+256)
  8147  0001' 0800'              	movf	___xxtofl@sign^(0+256),w
  8148  0002' 1D03               	btfss	3,2
  8149  0003' 1F80'              	btfss	(___xxtofl@val+3)^(0+256),7
  8150  0004' 2800'              	goto	l4981
  8151  0005' 0900'              	comf	___xxtofl@val^(0+256),w
  8152  0006' 0080'              	movwf	___xxtofl@arg^(0+256)
  8153  0007' 0901'              	comf	(___xxtofl@val^(0+256)+1),w
  8154  0008' 0080'              	movwf	(___xxtofl@arg+1)^(0+256)
  8155  0009' 0902'              	comf	(___xxtofl@val^(0+256)+2),w
  8156  000A' 0080'              	movwf	(___xxtofl@arg+2)^(0+256)
  8157  000B' 0903'              	comf	(___xxtofl@val^(0+256)+3),w
  8158  000C' 0080'              	movwf	(___xxtofl@arg+3)^(0+256)
  8159  000D' 0A80'              	incf	___xxtofl@arg^(0+256),f
  8160  000E' 1903               	skipnz
  8161  000F' 0A80'              	incf	(___xxtofl@arg+1)^(0+256),f
  8162  0010' 1903               	skipnz
  8163  0011' 0A80'              	incf	(___xxtofl@arg+2)^(0+256),f
  8164  0012' 1903               	skipnz
  8165  0013' 0A80'              	incf	(___xxtofl@arg+3)^(0+256),f
  8166  0014' 2800'              	goto	l1487
  8167  0015'                    l4981:
  8168  0015' 0800'              	movf	(___xxtofl@val+3)^(0+256),w
  8169  0016' 0080'              	movwf	(___xxtofl@arg+3)^(0+256)
  8170  0017' 0800'              	movf	(___xxtofl@val+2)^(0+256),w
  8171  0018' 0080'              	movwf	(___xxtofl@arg+2)^(0+256)
  8172  0019' 0800'              	movf	(___xxtofl@val+1)^(0+256),w
  8173  001A' 0080'              	movwf	(___xxtofl@arg+1)^(0+256)
  8174  001B' 0800'              	movf	___xxtofl@val^(0+256),w
  8175  001C' 0080'              	movwf	___xxtofl@arg^(0+256)
  8176  001D'                    l1487:
  8177  001D' 0800'              	movf	(___xxtofl@val+3)^(0+256),w
  8178  001E' 0400'              	iorwf	(___xxtofl@val+2)^(0+256),w
  8179  001F' 0400'              	iorwf	(___xxtofl@val+1)^(0+256),w
  8180  0020' 0400'              	iorwf	___xxtofl@val^(0+256),w
  8181  0021' 1D03               	skipz
  8182  0022' 2800'              	goto	l4987
  8183  0023' 3000               	movlw	0
  8184  0024' 0080'              	movwf	(?___xxtofl+3)^(0+256)
  8185  0025' 3000               	movlw	0
  8186  0026' 0080'              	movwf	(?___xxtofl+2)^(0+256)
  8187  0027' 3000               	movlw	0
  8188  0028' 0080'              	movwf	(?___xxtofl+1)^(0+256)
  8189  0029' 3000               	movlw	0
  8190  002A' 0080'              	movwf	?___xxtofl^(0+256)
  8191  002B' 0008               	return
  8192  002C'                    l4987:
  8193  002C' 3096               	movlw	150
  8194  002D' 0080'              	movwf	___xxtofl@exp^(0+256)
  8195  002E'                    l4991:
  8196  002E' 30FE               	movlw	254
  8197  002F' 0500'              	andwf	(___xxtofl@arg+3)^(0+256),w
  8198  0030' 1903               	btfsc	3,2
  8199  0031' 2800'              	goto	l1493
  8200  0032' 3001               	movlw	1
  8201  0033' 0080'              	movwf	??___xxtofl^(0+256)
  8202  0034' 0800'              	movf	??___xxtofl^(0+256),w
  8203  0035' 0780'              	addwf	___xxtofl@exp^(0+256),f
  8204  0036' 3001               	movlw	1
  8205  0037'                    u4775:
  8206  0037' 3680'              	lsrf	(___xxtofl@arg+3)^(0+256),f
  8207  0038' 0C80'              	rrf	(___xxtofl@arg+2)^(0+256),f
  8208  0039' 0C80'              	rrf	(___xxtofl@arg+1)^(0+256),f
  8209  003A' 0C80'              	rrf	___xxtofl@arg^(0+256),f
  8210  003B' 0B89               	decfsz	9,f
  8211  003C' 2800'              	goto	u4775
  8212  003D' 2800'              	goto	l4991
  8213  003E'                    l4993:
  8214  003E' 3001               	movlw	1
  8215  003F' 0080'              	movwf	??___xxtofl^(0+256)
  8216  0040' 0800'              	movf	??___xxtofl^(0+256),w
  8217  0041' 0780'              	addwf	___xxtofl@exp^(0+256),f
  8218  0042' 3001               	movlw	1
  8219  0043' 0780'              	addwf	___xxtofl@arg^(0+256),f
  8220  0044' 3000               	movlw	0
  8221  0045' 3D80'              	addwfc	(___xxtofl@arg+1)^(0+256),f
  8222  0046' 3000               	movlw	0
  8223  0047' 3D80'              	addwfc	(___xxtofl@arg+2)^(0+256),f
  8224  0048' 3000               	movlw	0
  8225  0049' 3D80'              	addwfc	(___xxtofl@arg+3)^(0+256),f
  8226  004A' 3001               	movlw	1
  8227  004B'                    u4795:
  8228  004B' 3680'              	lsrf	(___xxtofl@arg+3)^(0+256),f
  8229  004C' 0C80'              	rrf	(___xxtofl@arg+2)^(0+256),f
  8230  004D' 0C80'              	rrf	(___xxtofl@arg+1)^(0+256),f
  8231  004E' 0C80'              	rrf	___xxtofl@arg^(0+256),f
  8232  004F' 0B89               	decfsz	9,f
  8233  0050' 2800'              	goto	u4795
  8234  0051'                    l1493:
  8235  0051' 30FF               	movlw	255
  8236  0052' 0500'              	andwf	(___xxtofl@arg+3)^(0+256),w
  8237  0053' 1903               	btfsc	3,2
  8238  0054' 2800'              	goto	l5001
  8239  0055' 2800'              	goto	l4993
  8240  0056'                    l5003:
  8241  0056' 3002               	movlw	2
  8242  0057' 0200'              	subwf	___xxtofl@exp^(0+256),w
  8243  0058' 1C03               	btfss	3,0
  8244  0059' 2800'              	goto	l1500
  8245  005A' 3001               	movlw	1
  8246  005B' 0280'              	subwf	___xxtofl@exp^(0+256),f
  8247  005C' 3001               	movlw	1
  8248  005D'                    u4815:
  8249  005D' 3580'              	lslf	___xxtofl@arg^(0+256),f
  8250  005E' 0D80'              	rlf	(___xxtofl@arg+1)^(0+256),f
  8251  005F' 0D80'              	rlf	(___xxtofl@arg+2)^(0+256),f
  8252  0060' 0D80'              	rlf	(___xxtofl@arg+3)^(0+256),f
  8253  0061' 0B89               	decfsz	9,f
  8254  0062' 2800'              	goto	u4815
  8255  0063'                    l5001:
  8256  0063' 1F80'              	btfss	(___xxtofl@arg+2)^(0+256),7
  8257  0064' 2800'              	goto	l5003
  8258  0065'                    l1500:
  8259  0065' 1800'              	btfsc	___xxtofl@exp^(0+256),0
  8260  0066' 2800'              	goto	l1501
  8261  0067' 30FF               	movlw	255
  8262  0068' 0580'              	andwf	___xxtofl@arg^(0+256),f
  8263  0069' 30FF               	movlw	255
  8264  006A' 0580'              	andwf	(___xxtofl@arg+1)^(0+256),f
  8265  006B' 307F               	movlw	127
  8266  006C' 0580'              	andwf	(___xxtofl@arg+2)^(0+256),f
  8267  006D' 30FF               	movlw	255
  8268  006E' 0580'              	andwf	(___xxtofl@arg+3)^(0+256),f
  8269  006F'                    l1501:
  8270  006F' 1003               	clrc
  8271  0070' 0C80'              	rrf	___xxtofl@exp^(0+256),f
  8272  0071' 0800'              	movf	___xxtofl@exp^(0+256),w
  8273  0072' 0080'              	movwf	??___xxtofl^(0+256)
  8274  0073' 0181'              	clrf	(??___xxtofl^(0+256)+1)
  8275  0074' 0182'              	clrf	(??___xxtofl^(0+256)+2)
  8276  0075' 0183'              	clrf	(??___xxtofl^(0+256)+3)
  8277  0076' 3018               	movlw	24
  8278  0077'                    u4855:
  8279  0077' 3580'              	lslf	??___xxtofl^(0+256),f
  8280  0078' 0D81'              	rlf	(??___xxtofl^(0+256)+1),f
  8281  0079' 0D82'              	rlf	(??___xxtofl^(0+256)+2),f
  8282  007A' 0D83'              	rlf	(??___xxtofl^(0+256)+3),f
  8283  007B' 0B89               	decfsz	9,f
  8284  007C' 2800'              	goto	u4855
  8285  007D' 0800'              	movf	??___xxtofl^(0+256),w
  8286  007E' 0480'              	iorwf	___xxtofl@arg^(0+256),f
  8287  007F' 0800'              	movf	(??___xxtofl+1)^(0+256),w
  8288  0080' 0480'              	iorwf	(___xxtofl@arg+1)^(0+256),f
  8289  0081' 0800'              	movf	(??___xxtofl+2)^(0+256),w
  8290  0082' 0480'              	iorwf	(___xxtofl@arg+2)^(0+256),f
  8291  0083' 0800'              	movf	(??___xxtofl+3)^(0+256),w
  8292  0084' 0480'              	iorwf	(___xxtofl@arg+3)^(0+256),f
  8293  0085' 0800'              	movf	___xxtofl@sign^(0+256),w
  8294  0086' 1D03               	btfss	3,2
  8295  0087' 1F80'              	btfss	(___xxtofl@val+3)^(0+256),7
  8296  0088' 2800'              	goto	l5015
  8297  0089' 1783'              	bsf	(___xxtofl@arg^(0+256)+3),7
  8298  008A'                    l5015:
  8299  008A' 0800'              	movf	(___xxtofl@arg+3)^(0+256),w
  8300  008B' 0080'              	movwf	(?___xxtofl+3)^(0+256)
  8301  008C' 0800'              	movf	(___xxtofl@arg+2)^(0+256),w
  8302  008D' 0080'              	movwf	(?___xxtofl+2)^(0+256)
  8303  008E' 0800'              	movf	(___xxtofl@arg+1)^(0+256),w
  8304  008F' 0080'              	movwf	(?___xxtofl+1)^(0+256)
  8305  0090' 0800'              	movf	___xxtofl@arg^(0+256),w
  8306  0091' 0080'              	movwf	?___xxtofl^(0+256)
  8307  0092' 0008               	return
  8308  0093'                    __end_of___xxtofl:
  8309                           
  8310                           	psect	text24
  8311  0000'                    __ptext24:	
  8312 ;; *************** function ___fltol *****************
  8313 ;; Defined at:
  8314 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;  f1              4    8[BANK3 ] unsigned char 
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;  exp1            1   79[BANK2 ] unsigned char 
  8319 ;;  sign1           1   78[BANK2 ] unsigned char 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  4    8[BANK3 ] long 
  8322 ;; Registers used:
  8323 ;;		wreg, status,2, status,0
  8324 ;; Tracked objects:
  8325 ;;		On entry : 1F/3
  8326 ;;		On exit  : 1E/2
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8329 ;;      Params:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  8330 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8331 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  8332 ;;      Totals:         0       0       0       2       8       0       0       0       0       0       0       0       
      +0       0
  8333 ;;Total ram usage:       10 bytes
  8334 ;; Hardware stack levels used: 1
  8335 ;; Hardware stack levels required when called: 5
  8336 ;; This function calls:
  8337 ;;		Nothing
  8338 ;; This function is called by:
  8339 ;;		_set_DC
  8340 ;;		_cc_cv_mode
  8341 ;;		_scaling
  8342 ;;		_log_control
  8343 ;;		_fDISCHARGE
  8344 ;;		_fDC_res
  8345 ;;		_converter_settings
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349  0000'                    ___fltol:	
  8350                           ;psect for function ___fltol
  8351                           
  8352                           
  8353                           ;incstack = 0
  8354                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8355  0000' 1003               	clrc
  8356  0001' 0D00'              	rlf	(___fltol@f1+2)^(0+384),w
  8357  0002' 0D00'              	rlf	(___fltol@f1+3)^(0+384),w
  8358  0003' 0022               	movlb	2	; select bank2
  8359  0004' 0080'              	movwf	___fltol@exp1^(0+256)
  8360  0005' 0800'              	movf	___fltol@exp1^(0+256),w
  8361  0006' 1D03               	btfss	3,2
  8362  0007' 2800'              	goto	l4401
  8363  0008'                    l4397:
  8364  0008' 3000               	movlw	0
  8365  0009' 0023               	movlb	3	; select bank3
  8366  000A' 0080'              	movwf	(?___fltol+3)^(0+384)
  8367  000B' 3000               	movlw	0
  8368  000C' 0080'              	movwf	(?___fltol+2)^(0+384)
  8369  000D' 3000               	movlw	0
  8370  000E' 0080'              	movwf	(?___fltol+1)^(0+384)
  8371  000F' 3000               	movlw	0
  8372  0010' 0080'              	movwf	?___fltol^(0+384)
  8373  0011' 0008               	return
  8374  0012'                    l4401:
  8375  0012' 0023               	movlb	3	; select bank3
  8376  0013' 0800'              	movf	___fltol@f1^(0+384),w
  8377  0014' 0080'              	movwf	??___fltol^(0+384)
  8378  0015' 0800'              	movf	(___fltol@f1+1)^(0+384),w
  8379  0016' 0081'              	movwf	(??___fltol^(0+384)+1)
  8380  0017' 0800'              	movf	(___fltol@f1+2)^(0+384),w
  8381  0018' 0082'              	movwf	(??___fltol^(0+384)+2)
  8382  0019' 0800'              	movf	(___fltol@f1+3)^(0+384),w
  8383  001A' 0083'              	movwf	(??___fltol^(0+384)+3)
  8384  001B' 301F               	movlw	31
  8385  001C'                    u3615:
  8386  001C' 3683'              	lsrf	(??___fltol^(0+384)+3),f
  8387  001D' 0C82'              	rrf	(??___fltol^(0+384)+2),f
  8388  001E' 0C81'              	rrf	(??___fltol^(0+384)+1),f
  8389  001F' 0C80'              	rrf	??___fltol^(0+384),f
  8390  0020' 0B89               	decfsz	9,f
  8391  0021' 2800'              	goto	u3615
  8392  0022' 0800'              	movf	??___fltol^(0+384),w
  8393  0023' 0022               	movlb	2	; select bank2
  8394  0024' 0080'              	movwf	___fltol@sign1^(0+256)
  8395  0025' 0023               	movlb	3	; select bank3
  8396  0026' 1782'              	bsf	(___fltol@f1^(0+384)+2),7
  8397  0027' 30FF               	movlw	255
  8398  0028' 0580'              	andwf	___fltol@f1^(0+384),f
  8399  0029' 30FF               	movlw	255
  8400  002A' 0580'              	andwf	(___fltol@f1+1)^(0+384),f
  8401  002B' 30FF               	movlw	255
  8402  002C' 0580'              	andwf	(___fltol@f1+2)^(0+384),f
  8403  002D' 3000               	movlw	0
  8404  002E' 0580'              	andwf	(___fltol@f1+3)^(0+384),f
  8405  002F' 3096               	movlw	150
  8406  0030' 0022               	movlb	2	; select bank2
  8407  0031' 0280'              	subwf	___fltol@exp1^(0+256),f
  8408  0032' 1F80'              	btfss	___fltol@exp1^(0+256),7
  8409  0033' 2800'              	goto	l4419
  8410  0034' 0800'              	movf	___fltol@exp1^(0+256),w
  8411  0035' 3A80               	xorlw	128
  8412  0036' 3E97               	addlw	151
  8413  0037' 1C03               	btfss	3,0
  8414  0038' 2800'              	goto	l4397
  8415  0039'                    l4417:
  8416  0039' 3001               	movlw	1
  8417  003A'                    u3645:
  8418  003A' 0023               	movlb	3	; select bank3
  8419  003B' 3680'              	lsrf	(___fltol@f1+3)^(0+384),f
  8420  003C' 0C80'              	rrf	(___fltol@f1+2)^(0+384),f
  8421  003D' 0C80'              	rrf	(___fltol@f1+1)^(0+384),f
  8422  003E' 0C80'              	rrf	___fltol@f1^(0+384),f
  8423  003F' 0B89               	decfsz	9,f
  8424  0040' 2800'              	goto	u3645
  8425  0041' 3001               	movlw	1
  8426  0042' 0080'              	movwf	??___fltol^(0+384)
  8427  0043' 0800'              	movf	??___fltol^(0+384),w
  8428  0044' 0022               	movlb	2	; select bank2
  8429  0045' 0780'              	addwf	___fltol@exp1^(0+256),f
  8430  0046' 1903               	btfsc	3,2
  8431  0047' 2800'              	goto	l4427
  8432  0048' 2800'              	goto	l4417
  8433  0049'                    l4419:
  8434  0049' 3020               	movlw	32
  8435  004A' 0200'              	subwf	___fltol@exp1^(0+256),w
  8436  004B' 1803               	btfsc	3,0
  8437  004C' 2800'              	goto	l4397
  8438  004D'                    l1247:
  8439  004D' 0800'              	movf	___fltol@exp1^(0+256),w
  8440  004E' 1903               	btfsc	3,2
  8441  004F' 2800'              	goto	l4427
  8442  0050' 3001               	movlw	1
  8443  0051'                    u3675:
  8444  0051' 0023               	movlb	3	; select bank3
  8445  0052' 3580'              	lslf	___fltol@f1^(0+384),f
  8446  0053' 0D80'              	rlf	(___fltol@f1+1)^(0+384),f
  8447  0054' 0D80'              	rlf	(___fltol@f1+2)^(0+384),f
  8448  0055' 0D80'              	rlf	(___fltol@f1+3)^(0+384),f
  8449  0056' 0B89               	decfsz	9,f
  8450  0057' 2800'              	goto	u3675
  8451  0058' 3001               	movlw	1
  8452  0059' 0022               	movlb	2	; select bank2
  8453  005A' 0280'              	subwf	___fltol@exp1^(0+256),f
  8454  005B' 2800'              	goto	l1247
  8455  005C'                    l4427:
  8456  005C' 0800'              	movf	___fltol@sign1^(0+256),w
  8457  005D' 1903               	btfsc	3,2
  8458  005E' 0008               	return
  8459  005F' 0023               	movlb	3	; select bank3
  8460  0060' 0980'              	comf	___fltol@f1^(0+384),f
  8461  0061' 0980'              	comf	(___fltol@f1+1)^(0+384),f
  8462  0062' 0980'              	comf	(___fltol@f1+2)^(0+384),f
  8463  0063' 0980'              	comf	(___fltol@f1+3)^(0+384),f
  8464  0064' 0A80'              	incf	___fltol@f1^(0+384),f
  8465  0065' 1903               	skipnz
  8466  0066' 0A80'              	incf	(___fltol@f1+1)^(0+384),f
  8467  0067' 1903               	skipnz
  8468  0068' 0A80'              	incf	(___fltol@f1+2)^(0+384),f
  8469  0069' 1903               	skipnz
  8470  006A' 0A80'              	incf	(___fltol@f1+3)^(0+384),f
  8471  006B' 0008               	return
  8472  006C'                    __end_of___fltol:
  8473                           
  8474                           	psect	text25
  8475  0000'                    __ptext25:	
  8476 ;; *************** function ___flmul *****************
  8477 ;; Defined at:
  8478 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  8479 ;; Parameters:    Size  Location     Type
  8480 ;;  b               4   40[BANK2 ] long 
  8481 ;;  a               4   44[BANK2 ] long 
  8482 ;; Auto vars:     Size  Location     Type
  8483 ;;  prod            4   60[BANK2 ] struct .
  8484 ;;  grs             4   55[BANK2 ] unsigned long 
  8485 ;;  temp            2   64[BANK2 ] struct .
  8486 ;;  bexp            1   59[BANK2 ] unsigned char 
  8487 ;;  aexp            1   54[BANK2 ] unsigned char 
  8488 ;;  sign            1   53[BANK2 ] unsigned char 
  8489 ;; Return value:  Size  Location     Type
  8490 ;;                  4   40[BANK2 ] unsigned char 
  8491 ;; Registers used:
  8492 ;;		wreg, status,2, status,0, pclath, cstack
  8493 ;; Tracked objects:
  8494 ;;		On entry : 1F/2
  8495 ;;		On exit  : 1F/2
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8498 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  8499 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0
  8500 ;;      Temps:          0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  8501 ;;      Totals:         0       0       0      26       0       0       0       0       0       0       0       0       
      +0       0
  8502 ;;Total ram usage:       26 bytes
  8503 ;; Hardware stack levels used: 1
  8504 ;; Hardware stack levels required when called: 6
  8505 ;; This function calls:
  8506 ;;		__Umul8_16
  8507 ;; This function is called by:
  8508 ;;		_cc_cv_mode
  8509 ;;		_scaling
  8510 ;;		_fDISCHARGE
  8511 ;;		_fDC_res
  8512 ;;		_converter_settings
  8513 ;; This function uses a non-reentrant model
  8514 ;;
  8515                           
  8516  0000'                    ___flmul:	
  8517                           ;psect for function ___flmul
  8518                           
  8519                           
  8520                           ;incstack = 0
  8521                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8522  0000' 0803'              	movf	(___flmul@b^(0+256)+3),w
  8523  0001' 3980               	andlw	128
  8524  0002' 0080'              	movwf	___flmul@sign^(0+256)
  8525  0003' 3503'              	lslf	(___flmul@b^(0+256)+3),w
  8526  0004' 0080'              	movwf	___flmul@bexp^(0+256)
  8527  0005' 1B82'              	btfsc	(___flmul@b^(0+256)+2),7
  8528  0006' 1400'              	bsf	___flmul@bexp^(0+256),0
  8529  0007' 0800'              	movf	___flmul@bexp^(0+256),w
  8530  0008' 1903               	btfsc	3,2
  8531  0009' 2800'              	goto	l4851
  8532  000A' 0A00'              	incf	___flmul@bexp^(0+256),w
  8533  000B' 1D03               	btfss	3,2
  8534  000C' 2800'              	goto	l4849
  8535  000D' 3000               	movlw	0
  8536  000E' 0080'              	movwf	(___flmul@b+3)^(0+256)
  8537  000F' 3000               	movlw	0
  8538  0010' 0080'              	movwf	(___flmul@b+2)^(0+256)
  8539  0011' 3000               	movlw	0
  8540  0012' 0080'              	movwf	(___flmul@b+1)^(0+256)
  8541  0013' 3000               	movlw	0
  8542  0014' 0080'              	movwf	___flmul@b^(0+256)
  8543  0015'                    l4849:
  8544  0015' 1782'              	bsf	(___flmul@b^(0+256)+2),7
  8545  0016' 2800'              	goto	l4853
  8546  0017'                    l4851:
  8547  0017' 3000               	movlw	0
  8548  0018' 0080'              	movwf	(___flmul@b+3)^(0+256)
  8549  0019' 3000               	movlw	0
  8550  001A' 0080'              	movwf	(___flmul@b+2)^(0+256)
  8551  001B' 3000               	movlw	0
  8552  001C' 0080'              	movwf	(___flmul@b+1)^(0+256)
  8553  001D' 3000               	movlw	0
  8554  001E' 0080'              	movwf	___flmul@b^(0+256)
  8555  001F'                    l4853:
  8556  001F' 0803'              	movf	(___flmul@a^(0+256)+3),w
  8557  0020' 3980               	andlw	128
  8558  0021' 0080'              	movwf	??___flmul^(0+256)
  8559  0022' 0800'              	movf	??___flmul^(0+256),w
  8560  0023' 0680'              	xorwf	___flmul@sign^(0+256),f
  8561  0024' 3503'              	lslf	(___flmul@a^(0+256)+3),w
  8562  0025' 0080'              	movwf	___flmul@aexp^(0+256)
  8563  0026' 1B82'              	btfsc	(___flmul@a^(0+256)+2),7
  8564  0027' 1400'              	bsf	___flmul@aexp^(0+256),0
  8565  0028' 0800'              	movf	___flmul@aexp^(0+256),w
  8566  0029' 1903               	btfsc	3,2
  8567  002A' 2800'              	goto	l4869
  8568  002B' 0A00'              	incf	___flmul@aexp^(0+256),w
  8569  002C' 1D03               	btfss	3,2
  8570  002D' 2800'              	goto	l4867
  8571  002E' 3000               	movlw	0
  8572  002F' 0080'              	movwf	(___flmul@a+3)^(0+256)
  8573  0030' 3000               	movlw	0
  8574  0031' 0080'              	movwf	(___flmul@a+2)^(0+256)
  8575  0032' 3000               	movlw	0
  8576  0033' 0080'              	movwf	(___flmul@a+1)^(0+256)
  8577  0034' 3000               	movlw	0
  8578  0035' 0080'              	movwf	___flmul@a^(0+256)
  8579  0036'                    l4867:
  8580  0036' 1782'              	bsf	(___flmul@a^(0+256)+2),7
  8581  0037' 2800'              	goto	l4871
  8582  0038'                    l4869:
  8583  0038' 3000               	movlw	0
  8584  0039' 0080'              	movwf	(___flmul@a+3)^(0+256)
  8585  003A' 3000               	movlw	0
  8586  003B' 0080'              	movwf	(___flmul@a+2)^(0+256)
  8587  003C' 3000               	movlw	0
  8588  003D' 0080'              	movwf	(___flmul@a+1)^(0+256)
  8589  003E' 3000               	movlw	0
  8590  003F' 0080'              	movwf	___flmul@a^(0+256)
  8591  0040'                    l4871:
  8592  0040' 0800'              	movf	___flmul@aexp^(0+256),w
  8593  0041' 1D03               	btfss	3,2
  8594  0042' 0800'              	movf	___flmul@bexp^(0+256),w
  8595  0043' 1D03               	btfss	3,2
  8596  0044' 2800'              	goto	l4879
  8597  0045' 3000               	movlw	0
  8598  0046' 0080'              	movwf	(?___flmul+3)^(0+256)
  8599  0047' 3000               	movlw	0
  8600  0048' 0080'              	movwf	(?___flmul+2)^(0+256)
  8601  0049' 3000               	movlw	0
  8602  004A' 0080'              	movwf	(?___flmul+1)^(0+256)
  8603  004B' 3000               	movlw	0
  8604  004C' 0080'              	movwf	?___flmul^(0+256)
  8605  004D' 0008               	return
  8606  004E'                    l4879:
  8607  004E' 0800'              	movf	___flmul@b^(0+256),w
  8608  004F' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  8609  0050' 0802'              	movf	(___flmul@a^(0+256)+2),w
  8610  0051' 3180' 2000' 3180'  	fcall	__Umul8_16
  8611  0054' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  8612  0055' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8613  0056' 0800'              	movf	?__Umul8_16^(0+256),w
  8614  0057' 0080'              	movwf	___flmul@temp^(0+256)
  8615  0058' 0800'              	movf	___flmul@temp^(0+256),w
  8616  0059' 0080'              	movwf	??___flmul^(0+256)
  8617  005A' 0181'              	clrf	(??___flmul^(0+256)+1)
  8618  005B' 0182'              	clrf	(??___flmul^(0+256)+2)
  8619  005C' 0183'              	clrf	(??___flmul^(0+256)+3)
  8620  005D' 0800'              	movf	(??___flmul+3)^(0+256),w
  8621  005E' 0080'              	movwf	(___flmul@grs+3)^(0+256)
  8622  005F' 0800'              	movf	(??___flmul+2)^(0+256),w
  8623  0060' 0080'              	movwf	(___flmul@grs+2)^(0+256)
  8624  0061' 0800'              	movf	(??___flmul+1)^(0+256),w
  8625  0062' 0080'              	movwf	(___flmul@grs+1)^(0+256)
  8626  0063' 0800'              	movf	??___flmul^(0+256),w
  8627  0064' 0080'              	movwf	___flmul@grs^(0+256)
  8628  0065' 0801'              	movf	(___flmul@temp^(0+256)+1),w
  8629  0066' 0080'              	movwf	??___flmul^(0+256)
  8630  0067' 0181'              	clrf	(??___flmul^(0+256)+1)
  8631  0068' 0182'              	clrf	(??___flmul^(0+256)+2)
  8632  0069' 0183'              	clrf	(??___flmul^(0+256)+3)
  8633  006A' 0800'              	movf	(??___flmul+3)^(0+256),w
  8634  006B' 0080'              	movwf	(___flmul@prod+3)^(0+256)
  8635  006C' 0800'              	movf	(??___flmul+2)^(0+256),w
  8636  006D' 0080'              	movwf	(___flmul@prod+2)^(0+256)
  8637  006E' 0800'              	movf	(??___flmul+1)^(0+256),w
  8638  006F' 0080'              	movwf	(___flmul@prod+1)^(0+256)
  8639  0070' 0800'              	movf	??___flmul^(0+256),w
  8640  0071' 0080'              	movwf	___flmul@prod^(0+256)
  8641  0072' 0801'              	movf	(___flmul@b^(0+256)+1),w
  8642  0073' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  8643  0074' 0801'              	movf	(___flmul@a^(0+256)+1),w
  8644  0075' 3180' 2000' 3180'  	fcall	__Umul8_16
  8645  0078' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  8646  0079' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8647  007A' 0800'              	movf	?__Umul8_16^(0+256),w
  8648  007B' 0080'              	movwf	___flmul@temp^(0+256)
  8649  007C' 0800'              	movf	___flmul@temp^(0+256),w
  8650  007D' 0080'              	movwf	??___flmul^(0+256)
  8651  007E' 0181'              	clrf	(??___flmul^(0+256)+1)
  8652  007F' 0182'              	clrf	(??___flmul^(0+256)+2)
  8653  0080' 0183'              	clrf	(??___flmul^(0+256)+3)
  8654  0081' 0800'              	movf	??___flmul^(0+256),w
  8655  0082' 0780'              	addwf	___flmul@grs^(0+256),f
  8656  0083' 0800'              	movf	(??___flmul+1)^(0+256),w
  8657  0084' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  8658  0085' 0800'              	movf	(??___flmul+2)^(0+256),w
  8659  0086' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  8660  0087' 0800'              	movf	(??___flmul+3)^(0+256),w
  8661  0088' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  8662  0089' 0801'              	movf	(___flmul@temp^(0+256)+1),w
  8663  008A' 0080'              	movwf	??___flmul^(0+256)
  8664  008B' 0181'              	clrf	(??___flmul^(0+256)+1)
  8665  008C' 0182'              	clrf	(??___flmul^(0+256)+2)
  8666  008D' 0183'              	clrf	(??___flmul^(0+256)+3)
  8667  008E' 0800'              	movf	??___flmul^(0+256),w
  8668  008F' 0780'              	addwf	___flmul@prod^(0+256),f
  8669  0090' 0800'              	movf	(??___flmul+1)^(0+256),w
  8670  0091' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  8671  0092' 0800'              	movf	(??___flmul+2)^(0+256),w
  8672  0093' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  8673  0094' 0800'              	movf	(??___flmul+3)^(0+256),w
  8674  0095' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  8675  0096' 0802'              	movf	(___flmul@b^(0+256)+2),w
  8676  0097' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  8677  0098' 0800'              	movf	___flmul@a^(0+256),w
  8678  0099' 3180' 2000' 3180'  	fcall	__Umul8_16
  8679  009C' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  8680  009D' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8681  009E' 0800'              	movf	?__Umul8_16^(0+256),w
  8682  009F' 0080'              	movwf	___flmul@temp^(0+256)
  8683  00A0' 0800'              	movf	___flmul@temp^(0+256),w
  8684  00A1' 0080'              	movwf	??___flmul^(0+256)
  8685  00A2' 0181'              	clrf	(??___flmul^(0+256)+1)
  8686  00A3' 0182'              	clrf	(??___flmul^(0+256)+2)
  8687  00A4' 0183'              	clrf	(??___flmul^(0+256)+3)
  8688  00A5' 0800'              	movf	??___flmul^(0+256),w
  8689  00A6' 0780'              	addwf	___flmul@grs^(0+256),f
  8690  00A7' 0800'              	movf	(??___flmul+1)^(0+256),w
  8691  00A8' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  8692  00A9' 0800'              	movf	(??___flmul+2)^(0+256),w
  8693  00AA' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  8694  00AB' 0800'              	movf	(??___flmul+3)^(0+256),w
  8695  00AC' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  8696  00AD' 0801'              	movf	(___flmul@temp^(0+256)+1),w
  8697  00AE' 0080'              	movwf	??___flmul^(0+256)
  8698  00AF' 0181'              	clrf	(??___flmul^(0+256)+1)
  8699  00B0' 0182'              	clrf	(??___flmul^(0+256)+2)
  8700  00B1' 0183'              	clrf	(??___flmul^(0+256)+3)
  8701  00B2' 0800'              	movf	??___flmul^(0+256),w
  8702  00B3' 0780'              	addwf	___flmul@prod^(0+256),f
  8703  00B4' 0800'              	movf	(??___flmul+1)^(0+256),w
  8704  00B5' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  8705  00B6' 0800'              	movf	(??___flmul+2)^(0+256),w
  8706  00B7' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  8707  00B8' 0800'              	movf	(??___flmul+3)^(0+256),w
  8708  00B9' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  8709  00BA' 3008               	movlw	8
  8710  00BB'                    u4575:
  8711  00BB' 3580'              	lslf	___flmul@grs^(0+256),f
  8712  00BC' 0D80'              	rlf	(___flmul@grs+1)^(0+256),f
  8713  00BD' 0D80'              	rlf	(___flmul@grs+2)^(0+256),f
  8714  00BE' 0D80'              	rlf	(___flmul@grs+3)^(0+256),f
  8715  00BF' 0B89               	decfsz	9,f
  8716  00C0' 2800'              	goto	u4575
  8717  00C1' 0801'              	movf	(___flmul@b^(0+256)+1),w
  8718  00C2' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  8719  00C3' 0800'              	movf	___flmul@a^(0+256),w
  8720  00C4' 3180' 2000' 3180'  	fcall	__Umul8_16
  8721  00C7' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  8722  00C8' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8723  00C9' 0800'              	movf	?__Umul8_16^(0+256),w
  8724  00CA' 0080'              	movwf	___flmul@temp^(0+256)
  8725  00CB' 0800'              	movf	___flmul@temp^(0+256),w
  8726  00CC' 0780'              	addwf	___flmul@grs^(0+256),f
  8727  00CD' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  8728  00CE' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  8729  00CF' 3000               	movlw	0
  8730  00D0' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  8731  00D1' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  8732  00D2' 0800'              	movf	___flmul@b^(0+256),w
  8733  00D3' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  8734  00D4' 0801'              	movf	(___flmul@a^(0+256)+1),w
  8735  00D5' 3180' 2000' 3180'  	fcall	__Umul8_16
  8736  00D8' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  8737  00D9' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8738  00DA' 0800'              	movf	?__Umul8_16^(0+256),w
  8739  00DB' 0080'              	movwf	___flmul@temp^(0+256)
  8740  00DC' 0800'              	movf	___flmul@temp^(0+256),w
  8741  00DD' 0780'              	addwf	___flmul@grs^(0+256),f
  8742  00DE' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  8743  00DF' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  8744  00E0' 3000               	movlw	0
  8745  00E1' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  8746  00E2' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  8747  00E3' 3008               	movlw	8
  8748  00E4'                    u4585:
  8749  00E4' 3580'              	lslf	___flmul@grs^(0+256),f
  8750  00E5' 0D80'              	rlf	(___flmul@grs+1)^(0+256),f
  8751  00E6' 0D80'              	rlf	(___flmul@grs+2)^(0+256),f
  8752  00E7' 0D80'              	rlf	(___flmul@grs+3)^(0+256),f
  8753  00E8' 0B89               	decfsz	9,f
  8754  00E9' 2800'              	goto	u4585
  8755  00EA' 0800'              	movf	___flmul@b^(0+256),w
  8756  00EB' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  8757  00EC' 0800'              	movf	___flmul@a^(0+256),w
  8758  00ED' 3180' 2000' 3180'  	fcall	__Umul8_16
  8759  00F0' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  8760  00F1' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8761  00F2' 0800'              	movf	?__Umul8_16^(0+256),w
  8762  00F3' 0080'              	movwf	___flmul@temp^(0+256)
  8763  00F4' 0800'              	movf	___flmul@temp^(0+256),w
  8764  00F5' 0780'              	addwf	___flmul@grs^(0+256),f
  8765  00F6' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  8766  00F7' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  8767  00F8' 3000               	movlw	0
  8768  00F9' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  8769  00FA' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  8770  00FB' 0801'              	movf	(___flmul@b^(0+256)+1),w
  8771  00FC' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  8772  00FD' 0802'              	movf	(___flmul@a^(0+256)+2),w
  8773  00FE' 3180' 2000' 3180'  	fcall	__Umul8_16
  8774  0101' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  8775  0102' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8776  0103' 0800'              	movf	?__Umul8_16^(0+256),w
  8777  0104' 0080'              	movwf	___flmul@temp^(0+256)
  8778  0105' 0800'              	movf	___flmul@temp^(0+256),w
  8779  0106' 0780'              	addwf	___flmul@prod^(0+256),f
  8780  0107' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  8781  0108' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  8782  0109' 3000               	movlw	0
  8783  010A' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  8784  010B' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  8785  010C' 0802'              	movf	(___flmul@b^(0+256)+2),w
  8786  010D' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  8787  010E' 0801'              	movf	(___flmul@a^(0+256)+1),w
  8788  010F' 3180' 2000' 3180'  	fcall	__Umul8_16
  8789  0112' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  8790  0113' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8791  0114' 0800'              	movf	?__Umul8_16^(0+256),w
  8792  0115' 0080'              	movwf	___flmul@temp^(0+256)
  8793  0116' 0800'              	movf	___flmul@temp^(0+256),w
  8794  0117' 0780'              	addwf	___flmul@prod^(0+256),f
  8795  0118' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  8796  0119' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  8797  011A' 3000               	movlw	0
  8798  011B' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  8799  011C' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  8800  011D' 0802'              	movf	(___flmul@b^(0+256)+2),w
  8801  011E' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  8802  011F' 0802'              	movf	(___flmul@a^(0+256)+2),w
  8803  0120' 3180' 2000' 3180'  	fcall	__Umul8_16
  8804  0123' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  8805  0124' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8806  0125' 0800'              	movf	?__Umul8_16^(0+256),w
  8807  0126' 0080'              	movwf	___flmul@temp^(0+256)
  8808  0127' 0800'              	movf	___flmul@temp^(0+256),w
  8809  0128' 0080'              	movwf	??___flmul^(0+256)
  8810  0129' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  8811  012A' 0081'              	movwf	(??___flmul^(0+256)+1)
  8812  012B' 0182'              	clrf	(??___flmul^(0+256)+2)
  8813  012C' 0183'              	clrf	(??___flmul^(0+256)+3)
  8814  012D' 3008               	movlw	8
  8815  012E'                    u4595:
  8816  012E' 3580'              	lslf	??___flmul^(0+256),f
  8817  012F' 0D81'              	rlf	(??___flmul^(0+256)+1),f
  8818  0130' 0D82'              	rlf	(??___flmul^(0+256)+2),f
  8819  0131' 0D83'              	rlf	(??___flmul^(0+256)+3),f
  8820  0132' 0B89               	decfsz	9,f
  8821  0133' 2800'              	goto	u4595
  8822  0134' 0800'              	movf	??___flmul^(0+256),w
  8823  0135' 0780'              	addwf	___flmul@prod^(0+256),f
  8824  0136' 0800'              	movf	(??___flmul+1)^(0+256),w
  8825  0137' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  8826  0138' 0800'              	movf	(??___flmul+2)^(0+256),w
  8827  0139' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  8828  013A' 0800'              	movf	(??___flmul+3)^(0+256),w
  8829  013B' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  8830  013C' 0803'              	movf	(___flmul@grs^(0+256)+3),w
  8831  013D' 0080'              	movwf	??___flmul^(0+256)
  8832  013E' 0181'              	clrf	(??___flmul^(0+256)+1)
  8833  013F' 0182'              	clrf	(??___flmul^(0+256)+2)
  8834  0140' 0183'              	clrf	(??___flmul^(0+256)+3)
  8835  0141' 0800'              	movf	??___flmul^(0+256),w
  8836  0142' 0780'              	addwf	___flmul@prod^(0+256),f
  8837  0143' 0800'              	movf	(??___flmul+1)^(0+256),w
  8838  0144' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  8839  0145' 0800'              	movf	(??___flmul+2)^(0+256),w
  8840  0146' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  8841  0147' 0800'              	movf	(??___flmul+3)^(0+256),w
  8842  0148' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  8843  0149' 3008               	movlw	8
  8844  014A'                    u4605:
  8845  014A' 3580'              	lslf	___flmul@grs^(0+256),f
  8846  014B' 0D80'              	rlf	(___flmul@grs+1)^(0+256),f
  8847  014C' 0D80'              	rlf	(___flmul@grs+2)^(0+256),f
  8848  014D' 0D80'              	rlf	(___flmul@grs+3)^(0+256),f
  8849  014E' 0B89               	decfsz	9,f
  8850  014F' 2800'              	goto	u4605
  8851  0150' 0800'              	movf	___flmul@bexp^(0+256),w
  8852  0151' 0700'              	addwf	___flmul@aexp^(0+256),w
  8853  0152' 0080'              	movwf	??___flmul^(0+256)
  8854  0153' 0181'              	clrf	(??___flmul^(0+256)+1)
  8855  0154' 0D80'              	rlf	(??___flmul+1)^(0+256),f
  8856  0155' 0800'              	movf	??___flmul^(0+256),w
  8857  0156' 3E82               	addlw	130
  8858  0157' 0080'              	movwf	___flmul@temp^(0+256)
  8859  0158' 30FF               	movlw	255
  8860  0159' 3D00'              	addwfc	(??___flmul+1)^(0+256),w
  8861  015A' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8862  015B'                    l4931:
  8863  015B' 1B80'              	btfsc	(___flmul@prod+2)^(0+256),7
  8864  015C' 2800'              	goto	l4933
  8865  015D' 3001               	movlw	1
  8866  015E'                    u4615:
  8867  015E' 3580'              	lslf	___flmul@prod^(0+256),f
  8868  015F' 0D80'              	rlf	(___flmul@prod+1)^(0+256),f
  8869  0160' 0D80'              	rlf	(___flmul@prod+2)^(0+256),f
  8870  0161' 0D80'              	rlf	(___flmul@prod+3)^(0+256),f
  8871  0162' 0B89               	decfsz	9,f
  8872  0163' 2800'              	goto	u4615
  8873  0164' 1B80'              	btfsc	(___flmul@grs+3)^(0+256),7
  8874  0165' 1400'              	bsf	___flmul@prod^(0+256),0
  8875  0166' 3001               	movlw	1
  8876  0167'                    u4635:
  8877  0167' 3580'              	lslf	___flmul@grs^(0+256),f
  8878  0168' 0D80'              	rlf	(___flmul@grs+1)^(0+256),f
  8879  0169' 0D80'              	rlf	(___flmul@grs+2)^(0+256),f
  8880  016A' 0D80'              	rlf	(___flmul@grs+3)^(0+256),f
  8881  016B' 0B89               	decfsz	9,f
  8882  016C' 2800'              	goto	u4635
  8883  016D' 30FF               	movlw	255
  8884  016E' 0780'              	addwf	___flmul@temp^(0+256),f
  8885  016F' 30FF               	movlw	255
  8886  0170' 3D80'              	addwfc	(___flmul@temp+1)^(0+256),f
  8887  0171' 2800'              	goto	l4931
  8888  0172'                    l4933:
  8889  0172' 0180'              	clrf	___flmul@aexp^(0+256)
  8890  0173' 1F80'              	btfss	(___flmul@grs+3)^(0+256),7
  8891  0174' 2800'              	goto	l4943
  8892  0175' 30FF               	movlw	255
  8893  0176' 0500'              	andwf	___flmul@grs^(0+256),w
  8894  0177' 0080'              	movwf	??___flmul^(0+256)
  8895  0178' 30FF               	movlw	255
  8896  0179' 0500'              	andwf	(___flmul@grs+1)^(0+256),w
  8897  017A' 0081'              	movwf	(??___flmul^(0+256)+1)
  8898  017B' 30FF               	movlw	255
  8899  017C' 0500'              	andwf	(___flmul@grs+2)^(0+256),w
  8900  017D' 0082'              	movwf	(??___flmul^(0+256)+2)
  8901  017E' 307F               	movlw	127
  8902  017F' 0500'              	andwf	(___flmul@grs+3)^(0+256),w
  8903  0180' 0083'              	movwf	(??___flmul^(0+256)+3)
  8904  0181' 0800'              	movf	(??___flmul+3)^(0+256),w
  8905  0182' 0400'              	iorwf	(??___flmul+2)^(0+256),w
  8906  0183' 0400'              	iorwf	(??___flmul+1)^(0+256),w
  8907  0184' 0400'              	iorwf	??___flmul^(0+256),w
  8908  0185' 1903               	skipnz
  8909  0186' 1800'              	btfsc	___flmul@prod^(0+256),0
  8910  0187' 2800'              	goto	l4939
  8911  0188' 2800'              	goto	l4943
  8912  0189'                    l4939:
  8913  0189' 0180'              	clrf	___flmul@aexp^(0+256)
  8914  018A' 0A80'              	incf	___flmul@aexp^(0+256),f
  8915  018B'                    l4943:
  8916  018B' 0800'              	movf	___flmul@aexp^(0+256),w
  8917  018C' 1903               	btfsc	3,2
  8918  018D' 2800'              	goto	l4953
  8919  018E' 3001               	movlw	1
  8920  018F' 0780'              	addwf	___flmul@prod^(0+256),f
  8921  0190' 3000               	movlw	0
  8922  0191' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  8923  0192' 3000               	movlw	0
  8924  0193' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  8925  0194' 3000               	movlw	0
  8926  0195' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  8927  0196' 1C00'              	btfss	(___flmul@prod+3)^(0+256),0
  8928  0197' 2800'              	goto	l4953
  8929  0198' 0800'              	movf	___flmul@prod^(0+256),w
  8930  0199' 0080'              	movwf	??___flmul^(0+256)
  8931  019A' 0800'              	movf	(___flmul@prod+1)^(0+256),w
  8932  019B' 0081'              	movwf	(??___flmul^(0+256)+1)
  8933  019C' 0800'              	movf	(___flmul@prod+2)^(0+256),w
  8934  019D' 0082'              	movwf	(??___flmul^(0+256)+2)
  8935  019E' 0800'              	movf	(___flmul@prod+3)^(0+256),w
  8936  019F' 0083'              	movwf	(??___flmul^(0+256)+3)
  8937  01A0' 3001               	movlw	1
  8938  01A1' 0080'              	movwf	(??___flmul+4)^(0+256)
  8939  01A2'                    u4705:
  8940  01A2' 3783'              	asrf	(??___flmul^(0+256)+3),f
  8941  01A3' 0C82'              	rrf	(??___flmul^(0+256)+2),f
  8942  01A4' 0C81'              	rrf	(??___flmul^(0+256)+1),f
  8943  01A5' 0C80'              	rrf	??___flmul^(0+256),f
  8944  01A6' 0B80'              	decfsz	(??___flmul+4)^(0+256),f
  8945  01A7' 2800'              	goto	u4705
  8946  01A8' 0800'              	movf	(??___flmul+3)^(0+256),w
  8947  01A9' 0080'              	movwf	(___flmul@prod+3)^(0+256)
  8948  01AA' 0800'              	movf	(??___flmul+2)^(0+256),w
  8949  01AB' 0080'              	movwf	(___flmul@prod+2)^(0+256)
  8950  01AC' 0800'              	movf	(??___flmul+1)^(0+256),w
  8951  01AD' 0080'              	movwf	(___flmul@prod+1)^(0+256)
  8952  01AE' 0800'              	movf	??___flmul^(0+256),w
  8953  01AF' 0080'              	movwf	___flmul@prod^(0+256)
  8954  01B0' 3001               	movlw	1
  8955  01B1' 0780'              	addwf	___flmul@temp^(0+256),f
  8956  01B2' 3000               	movlw	0
  8957  01B3' 3D80'              	addwfc	(___flmul@temp+1)^(0+256),f
  8958  01B4'                    l4953:
  8959  01B4' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  8960  01B5' 3A80               	xorlw	128
  8961  01B6' 0080'              	movwf	??___flmul^(0+256)
  8962  01B7' 3080               	movlw	128
  8963  01B8' 0200'              	subwf	??___flmul^(0+256),w
  8964  01B9' 1D03               	skipz
  8965  01BA' 2800'              	goto	u4715
  8966  01BB' 30FF               	movlw	255
  8967  01BC' 0200'              	subwf	___flmul@temp^(0+256),w
  8968  01BD'                    u4715:
  8969  01BD' 1C03               	skipc
  8970  01BE' 2800'              	goto	l4957
  8971  01BF' 307F               	movlw	127
  8972  01C0' 0022               	movlb	2	; select bank2
  8973  01C1' 0080'              	movwf	(___flmul@prod+3)^(0+256)
  8974  01C2' 3080               	movlw	128
  8975  01C3' 0080'              	movwf	(___flmul@prod+2)^(0+256)
  8976  01C4' 3000               	movlw	0
  8977  01C5' 0080'              	movwf	(___flmul@prod+1)^(0+256)
  8978  01C6' 3000               	movlw	0
  8979  01C7' 0080'              	movwf	___flmul@prod^(0+256)
  8980  01C8' 2800'              	goto	l1455
  8981  01C9'                    l4957:
  8982  01C9' 0022               	movlb	2	; select bank2
  8983  01CA' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  8984  01CB' 3A80               	xorlw	128
  8985  01CC' 0080'              	movwf	??___flmul^(0+256)
  8986  01CD' 3080               	movlw	128
  8987  01CE' 0200'              	subwf	??___flmul^(0+256),w
  8988  01CF' 1D03               	skipz
  8989  01D0' 2800'              	goto	u4725
  8990  01D1' 3001               	movlw	1
  8991  01D2' 0200'              	subwf	___flmul@temp^(0+256),w
  8992  01D3'                    u4725:
  8993  01D3' 1803               	skipnc
  8994  01D4' 2800'              	goto	l4963
  8995  01D5' 3000               	movlw	0
  8996  01D6' 0022               	movlb	2	; select bank2
  8997  01D7' 0080'              	movwf	(___flmul@prod+3)^(0+256)
  8998  01D8' 3000               	movlw	0
  8999  01D9' 0080'              	movwf	(___flmul@prod+2)^(0+256)
  9000  01DA' 3000               	movlw	0
  9001  01DB' 0080'              	movwf	(___flmul@prod+1)^(0+256)
  9002  01DC' 3000               	movlw	0
  9003  01DD' 0080'              	movwf	___flmul@prod^(0+256)
  9004  01DE' 0180'              	clrf	___flmul@sign^(0+256)
  9005  01DF' 2800'              	goto	l1455
  9006  01E0'                    l4963:
  9007  01E0' 0022               	movlb	2	; select bank2
  9008  01E1' 0800'              	movf	___flmul@temp^(0+256),w
  9009  01E2' 0080'              	movwf	___flmul@bexp^(0+256)
  9010  01E3' 30FF               	movlw	255
  9011  01E4' 0580'              	andwf	___flmul@prod^(0+256),f
  9012  01E5' 30FF               	movlw	255
  9013  01E6' 0580'              	andwf	(___flmul@prod+1)^(0+256),f
  9014  01E7' 307F               	movlw	127
  9015  01E8' 0580'              	andwf	(___flmul@prod+2)^(0+256),f
  9016  01E9' 3000               	movlw	0
  9017  01EA' 0580'              	andwf	(___flmul@prod+3)^(0+256),f
  9018  01EB' 1800'              	btfsc	___flmul@bexp^(0+256),0
  9019  01EC' 1782'              	bsf	(___flmul@prod^(0+256)+2),7
  9020  01ED' 3600'              	lsrf	___flmul@bexp^(0+256),w
  9021  01EE' 0083'              	movwf	(___flmul@prod^(0+256)+3)
  9022  01EF'                    l1455:
  9023  01EF' 0800'              	movf	___flmul@sign^(0+256),w
  9024  01F0' 0080'              	movwf	??___flmul^(0+256)
  9025  01F1' 0800'              	movf	??___flmul^(0+256),w
  9026  01F2' 0483'              	iorwf	(___flmul@prod^(0+256)+3),f
  9027  01F3' 0800'              	movf	(___flmul@prod+3)^(0+256),w
  9028  01F4' 0080'              	movwf	(?___flmul+3)^(0+256)
  9029  01F5' 0800'              	movf	(___flmul@prod+2)^(0+256),w
  9030  01F6' 0080'              	movwf	(?___flmul+2)^(0+256)
  9031  01F7' 0800'              	movf	(___flmul@prod+1)^(0+256),w
  9032  01F8' 0080'              	movwf	(?___flmul+1)^(0+256)
  9033  01F9' 0800'              	movf	___flmul@prod^(0+256),w
  9034  01FA' 0080'              	movwf	?___flmul^(0+256)
  9035  01FB' 0008               	return
  9036  01FC'                    __end_of___flmul:
  9037                           
  9038                           	psect	text26
  9039  0000'                    __ptext26:	
  9040 ;; *************** function __Umul8_16 *****************
  9041 ;; Defined at:
  9042 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8_16.c"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;  multiplier      1    wreg     unsigned char 
  9045 ;;  multiplicand    1    0[BANK2 ] unsigned char 
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;  multiplier      1    8[BANK2 ] unsigned char 
  9048 ;;  word_mpld       2    6[BANK2 ] unsigned int 
  9049 ;;  product         2    4[BANK2 ] unsigned int 
  9050 ;; Return value:  Size  Location     Type
  9051 ;;                  2    0[BANK2 ] unsigned int 
  9052 ;; Registers used:
  9053 ;;		wreg, status,2, status,0
  9054 ;; Tracked objects:
  9055 ;;		On entry : 1F/2
  9056 ;;		On exit  : 1F/2
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9059 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  9060 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  9061 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  9062 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0
  9063 ;;Total ram usage:        9 bytes
  9064 ;; Hardware stack levels used: 1
  9065 ;; Hardware stack levels required when called: 5
  9066 ;; This function calls:
  9067 ;;		Nothing
  9068 ;; This function is called by:
  9069 ;;		___flmul
  9070 ;; This function uses a non-reentrant model
  9071 ;;
  9072                           
  9073  0000'                    __Umul8_16:	
  9074                           ;psect for function __Umul8_16
  9075                           
  9076                           
  9077                           ;incstack = 0
  9078                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9079                           ;__Umul8_16@multiplier stored from wreg
  9080  0000' 0080'              	movwf	__Umul8_16@multiplier^(0+256)
  9081  0001' 0180'              	clrf	__Umul8_16@product^(0+256)
  9082  0002' 0180'              	clrf	(__Umul8_16@product+1)^(0+256)
  9083  0003' 0800'              	movf	__Umul8_16@multiplicand^(0+256),w
  9084  0004' 0080'              	movwf	??__Umul8_16^(0+256)
  9085  0005' 0181'              	clrf	(??__Umul8_16^(0+256)+1)
  9086  0006' 0800'              	movf	??__Umul8_16^(0+256),w
  9087  0007' 0080'              	movwf	__Umul8_16@word_mpld^(0+256)
  9088  0008' 0800'              	movf	(??__Umul8_16+1)^(0+256),w
  9089  0009' 0080'              	movwf	(__Umul8_16@word_mpld+1)^(0+256)
  9090  000A'                    l4435:
  9091  000A' 1C00'              	btfss	__Umul8_16@multiplier^(0+256),0
  9092  000B' 2800'              	goto	l1462
  9093  000C' 0800'              	movf	__Umul8_16@word_mpld^(0+256),w
  9094  000D' 0780'              	addwf	__Umul8_16@product^(0+256),f
  9095  000E' 0800'              	movf	(__Umul8_16@word_mpld+1)^(0+256),w
  9096  000F' 3D80'              	addwfc	(__Umul8_16@product+1)^(0+256),f
  9097  0010'                    l1462:
  9098  0010' 3001               	movlw	1
  9099  0011'                    u3715:
  9100  0011' 3580'              	lslf	__Umul8_16@word_mpld^(0+256),f
  9101  0012' 0D80'              	rlf	(__Umul8_16@word_mpld+1)^(0+256),f
  9102  0013' 0B89               	decfsz	9,f
  9103  0014' 2800'              	goto	u3715
  9104  0015' 1003               	clrc
  9105  0016' 0C80'              	rrf	__Umul8_16@multiplier^(0+256),f
  9106  0017' 0800'              	movf	__Umul8_16@multiplier^(0+256),w
  9107  0018' 1D03               	btfss	3,2
  9108  0019' 2800'              	goto	l4435
  9109  001A' 0800'              	movf	(__Umul8_16@product+1)^(0+256),w
  9110  001B' 0080'              	movwf	(?__Umul8_16+1)^(0+256)
  9111  001C' 0800'              	movf	__Umul8_16@product^(0+256),w
  9112  001D' 0080'              	movwf	?__Umul8_16^(0+256)
  9113  001E' 0008               	return
  9114  001F'                    __end_of__Umul8_16:
  9115                           
  9116                           	psect	text27
  9117  0000'                    __ptext27:	
  9118 ;; *************** function ___fldiv *****************
  9119 ;; Defined at:
  9120 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  9121 ;; Parameters:    Size  Location     Type
  9122 ;;  a               4   14[BANK2 ] unsigned int 
  9123 ;;  b               4   18[BANK2 ] unsigned int 
  9124 ;; Auto vars:     Size  Location     Type
  9125 ;;  grs             4   34[BANK2 ] unsigned long 
  9126 ;;  rem             4   27[BANK2 ] unsigned long 
  9127 ;;  new_exp         2   32[BANK2 ] int 
  9128 ;;  aexp            1   39[BANK2 ] unsigned char 
  9129 ;;  bexp            1   38[BANK2 ] unsigned char 
  9130 ;;  sign            1   31[BANK2 ] unsigned char 
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  4   14[BANK2 ] unsigned char 
  9133 ;; Registers used:
  9134 ;;		wreg, status,2, status,0
  9135 ;; Tracked objects:
  9136 ;;		On entry : 1F/2
  9137 ;;		On exit  : 1F/2
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9140 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  9141 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0
  9142 ;;      Temps:          0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  9143 ;;      Totals:         0       0       0      26       0       0       0       0       0       0       0       0       
      +0       0
  9144 ;;Total ram usage:       26 bytes
  9145 ;; Hardware stack levels used: 1
  9146 ;; Hardware stack levels required when called: 5
  9147 ;; This function calls:
  9148 ;;		Nothing
  9149 ;; This function is called by:
  9150 ;;		_cc_cv_mode
  9151 ;;		_scaling
  9152 ;;		_fDISCHARGE
  9153 ;;		_fDC_res
  9154 ;;		_converter_settings
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158  0000'                    ___fldiv:	
  9159                           ;psect for function ___fldiv
  9160                           
  9161                           
  9162                           ;incstack = 0
  9163                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9164  0000' 0803'              	movf	(___fldiv@b^(0+256)+3),w
  9165  0001' 3980               	andlw	128
  9166  0002' 0080'              	movwf	___fldiv@sign^(0+256)
  9167  0003' 3503'              	lslf	(___fldiv@b^(0+256)+3),w
  9168  0004' 0080'              	movwf	___fldiv@bexp^(0+256)
  9169  0005' 1B82'              	btfsc	(___fldiv@b^(0+256)+2),7
  9170  0006' 1400'              	bsf	___fldiv@bexp^(0+256),0
  9171  0007' 0800'              	movf	___fldiv@bexp^(0+256),w
  9172  0008' 1903               	btfsc	3,2
  9173  0009' 2800'              	goto	l4713
  9174  000A' 0A00'              	incf	___fldiv@bexp^(0+256),w
  9175  000B' 1D03               	btfss	3,2
  9176  000C' 2800'              	goto	l4709
  9177  000D' 3000               	movlw	0
  9178  000E' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  9179  000F' 3000               	movlw	0
  9180  0010' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  9181  0011' 3000               	movlw	0
  9182  0012' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  9183  0013' 3000               	movlw	0
  9184  0014' 0080'              	movwf	___fldiv@b^(0+256)
  9185  0015'                    l4709:
  9186  0015' 1782'              	bsf	(___fldiv@b^(0+256)+2),7
  9187  0016' 0183'              	clrf	(___fldiv@b^(0+256)+3)
  9188  0017' 2800'              	goto	l4715
  9189  0018'                    l4713:
  9190  0018' 3000               	movlw	0
  9191  0019' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  9192  001A' 3000               	movlw	0
  9193  001B' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  9194  001C' 3000               	movlw	0
  9195  001D' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  9196  001E' 3000               	movlw	0
  9197  001F' 0080'              	movwf	___fldiv@b^(0+256)
  9198  0020'                    l4715:
  9199  0020' 0803'              	movf	(___fldiv@a^(0+256)+3),w
  9200  0021' 3980               	andlw	128
  9201  0022' 0080'              	movwf	??___fldiv^(0+256)
  9202  0023' 0800'              	movf	??___fldiv^(0+256),w
  9203  0024' 0680'              	xorwf	___fldiv@sign^(0+256),f
  9204  0025' 3503'              	lslf	(___fldiv@a^(0+256)+3),w
  9205  0026' 0080'              	movwf	___fldiv@aexp^(0+256)
  9206  0027' 1B82'              	btfsc	(___fldiv@a^(0+256)+2),7
  9207  0028' 1400'              	bsf	___fldiv@aexp^(0+256),0
  9208  0029' 0800'              	movf	___fldiv@aexp^(0+256),w
  9209  002A' 1903               	btfsc	3,2
  9210  002B' 2800'              	goto	l4733
  9211  002C' 0A00'              	incf	___fldiv@aexp^(0+256),w
  9212  002D' 1D03               	btfss	3,2
  9213  002E' 2800'              	goto	l4729
  9214  002F' 3000               	movlw	0
  9215  0030' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  9216  0031' 3000               	movlw	0
  9217  0032' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  9218  0033' 3000               	movlw	0
  9219  0034' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  9220  0035' 3000               	movlw	0
  9221  0036' 0080'              	movwf	___fldiv@a^(0+256)
  9222  0037'                    l4729:
  9223  0037' 1782'              	bsf	(___fldiv@a^(0+256)+2),7
  9224  0038' 0183'              	clrf	(___fldiv@a^(0+256)+3)
  9225  0039' 2800'              	goto	l1403
  9226  003A'                    l4733:
  9227  003A' 3000               	movlw	0
  9228  003B' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  9229  003C' 3000               	movlw	0
  9230  003D' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  9231  003E' 3000               	movlw	0
  9232  003F' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  9233  0040' 3000               	movlw	0
  9234  0041' 0080'              	movwf	___fldiv@a^(0+256)
  9235  0042'                    l1403:
  9236  0042' 0800'              	movf	(___fldiv@a+3)^(0+256),w
  9237  0043' 0400'              	iorwf	(___fldiv@a+2)^(0+256),w
  9238  0044' 0400'              	iorwf	(___fldiv@a+1)^(0+256),w
  9239  0045' 0400'              	iorwf	___fldiv@a^(0+256),w
  9240  0046' 1D03               	skipz
  9241  0047' 2800'              	goto	l4743
  9242  0048' 3000               	movlw	0
  9243  0049' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  9244  004A' 3000               	movlw	0
  9245  004B' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  9246  004C' 3000               	movlw	0
  9247  004D' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  9248  004E' 3000               	movlw	0
  9249  004F' 0080'              	movwf	___fldiv@b^(0+256)
  9250  0050' 3080               	movlw	128
  9251  0051' 0482'              	iorwf	(___fldiv@b^(0+256)+2),f
  9252  0052' 307F               	movlw	127
  9253  0053' 0482'              	iorwf	((___fldiv@b+1)^(0+256)+2),f
  9254  0054'                    L8:
  9255  0054' 0800'              	movf	___fldiv@sign^(0+256),w
  9256  0055' 0080'              	movwf	??___fldiv^(0+256)
  9257  0056' 0800'              	movf	??___fldiv^(0+256),w
  9258  0057' 0483'              	iorwf	(___fldiv@b^(0+256)+3),f
  9259  0058' 0800'              	movf	(___fldiv@b+3)^(0+256),w
  9260  0059' 0080'              	movwf	(?___fldiv+3)^(0+256)
  9261  005A' 0800'              	movf	(___fldiv@b+2)^(0+256),w
  9262  005B' 0080'              	movwf	(?___fldiv+2)^(0+256)
  9263  005C' 0800'              	movf	(___fldiv@b+1)^(0+256),w
  9264  005D' 0080'              	movwf	(?___fldiv+1)^(0+256)
  9265  005E' 0800'              	movf	___fldiv@b^(0+256),w
  9266  005F' 0080'              	movwf	?___fldiv^(0+256)
  9267  0060' 0008               	return
  9268  0061'                    l4743:
  9269  0061' 0800'              	movf	___fldiv@bexp^(0+256),w
  9270  0062' 1D03               	btfss	3,2
  9271  0063' 2800'              	goto	l4749
  9272  0064' 3000               	movlw	0
  9273  0065' 0080'              	movwf	(?___fldiv+3)^(0+256)
  9274  0066' 3000               	movlw	0
  9275  0067' 0080'              	movwf	(?___fldiv+2)^(0+256)
  9276  0068' 3000               	movlw	0
  9277  0069' 0080'              	movwf	(?___fldiv+1)^(0+256)
  9278  006A' 3000               	movlw	0
  9279  006B' 0080'              	movwf	?___fldiv^(0+256)
  9280  006C' 0008               	return
  9281  006D'                    l4749:
  9282  006D' 0800'              	movf	___fldiv@bexp^(0+256),w
  9283  006E' 0080'              	movwf	??___fldiv^(0+256)
  9284  006F' 0181'              	clrf	(??___fldiv^(0+256)+1)
  9285  0070' 0800'              	movf	(??___fldiv+1)^(0+256),w
  9286  0071' 0081'              	movwf	((??___fldiv+2)^(0+256)+1)
  9287  0072' 0800'              	movf	___fldiv@aexp^(0+256),w
  9288  0073' 0200'              	subwf	??___fldiv^(0+256),w
  9289  0074' 0080'              	movwf	(??___fldiv+2)^(0+256)
  9290  0075' 1C03               	skipc
  9291  0076' 0381'              	decf	((??___fldiv+2)^(0+256)+1),f
  9292  0077' 0800'              	movf	(??___fldiv+2)^(0+256),w
  9293  0078' 3E7F               	addlw	127
  9294  0079' 0080'              	movwf	___fldiv@new_exp^(0+256)
  9295  007A' 3000               	movlw	0
  9296  007B' 3D00'              	addwfc	(??___fldiv+3)^(0+256),w
  9297  007C' 0080'              	movwf	(___fldiv@new_exp+1)^(0+256)
  9298  007D' 0800'              	movf	(___fldiv@b+3)^(0+256),w
  9299  007E' 0080'              	movwf	(___fldiv@rem+3)^(0+256)
  9300  007F' 0800'              	movf	(___fldiv@b+2)^(0+256),w
  9301  0080' 0080'              	movwf	(___fldiv@rem+2)^(0+256)
  9302  0081' 0800'              	movf	(___fldiv@b+1)^(0+256),w
  9303  0082' 0080'              	movwf	(___fldiv@rem+1)^(0+256)
  9304  0083' 0800'              	movf	___fldiv@b^(0+256),w
  9305  0084' 0080'              	movwf	___fldiv@rem^(0+256)
  9306  0085' 3000               	movlw	0
  9307  0086' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  9308  0087' 3000               	movlw	0
  9309  0088' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  9310  0089' 3000               	movlw	0
  9311  008A' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  9312  008B' 3000               	movlw	0
  9313  008C' 0080'              	movwf	___fldiv@b^(0+256)
  9314  008D' 3000               	movlw	0
  9315  008E' 0080'              	movwf	(___fldiv@grs+3)^(0+256)
  9316  008F' 3000               	movlw	0
  9317  0090' 0080'              	movwf	(___fldiv@grs+2)^(0+256)
  9318  0091' 3000               	movlw	0
  9319  0092' 0080'              	movwf	(___fldiv@grs+1)^(0+256)
  9320  0093' 3000               	movlw	0
  9321  0094' 0080'              	movwf	___fldiv@grs^(0+256)
  9322  0095' 0180'              	clrf	___fldiv@aexp^(0+256)
  9323  0096'                    l4777:
  9324  0096' 301A               	movlw	26
  9325  0097' 0200'              	subwf	___fldiv@aexp^(0+256),w
  9326  0098' 1803               	btfsc	3,0
  9327  0099' 2800'              	goto	l4779
  9328  009A' 0800'              	movf	___fldiv@aexp^(0+256),w
  9329  009B' 1903               	btfsc	3,2
  9330  009C' 2800'              	goto	l4769
  9331  009D' 3001               	movlw	1
  9332  009E'                    u4295:
  9333  009E' 3580'              	lslf	___fldiv@rem^(0+256),f
  9334  009F' 0D80'              	rlf	(___fldiv@rem+1)^(0+256),f
  9335  00A0' 0D80'              	rlf	(___fldiv@rem+2)^(0+256),f
  9336  00A1' 0D80'              	rlf	(___fldiv@rem+3)^(0+256),f
  9337  00A2' 0B89               	decfsz	9,f
  9338  00A3' 2800'              	goto	u4295
  9339  00A4' 3001               	movlw	1
  9340  00A5'                    u4305:
  9341  00A5' 3580'              	lslf	___fldiv@b^(0+256),f
  9342  00A6' 0D80'              	rlf	(___fldiv@b+1)^(0+256),f
  9343  00A7' 0D80'              	rlf	(___fldiv@b+2)^(0+256),f
  9344  00A8' 0D80'              	rlf	(___fldiv@b+3)^(0+256),f
  9345  00A9' 0B89               	decfsz	9,f
  9346  00AA' 2800'              	goto	u4305
  9347  00AB' 1B80'              	btfsc	(___fldiv@grs+3)^(0+256),7
  9348  00AC' 1400'              	bsf	___fldiv@b^(0+256),0
  9349  00AD' 3001               	movlw	1
  9350  00AE'                    u4325:
  9351  00AE' 3580'              	lslf	___fldiv@grs^(0+256),f
  9352  00AF' 0D80'              	rlf	(___fldiv@grs+1)^(0+256),f
  9353  00B0' 0D80'              	rlf	(___fldiv@grs+2)^(0+256),f
  9354  00B1' 0D80'              	rlf	(___fldiv@grs+3)^(0+256),f
  9355  00B2' 0B89               	decfsz	9,f
  9356  00B3' 2800'              	goto	u4325
  9357  00B4'                    l4769:
  9358  00B4' 0800'              	movf	(___fldiv@a+3)^(0+256),w
  9359  00B5' 0200'              	subwf	(___fldiv@rem+3)^(0+256),w
  9360  00B6' 1D03               	skipz
  9361  00B7' 2800'              	goto	u4335
  9362  00B8' 0800'              	movf	(___fldiv@a+2)^(0+256),w
  9363  00B9' 0200'              	subwf	(___fldiv@rem+2)^(0+256),w
  9364  00BA' 1D03               	skipz
  9365  00BB' 2800'              	goto	u4335
  9366  00BC' 0800'              	movf	(___fldiv@a+1)^(0+256),w
  9367  00BD' 0200'              	subwf	(___fldiv@rem+1)^(0+256),w
  9368  00BE' 1D03               	skipz
  9369  00BF' 2800'              	goto	u4335
  9370  00C0' 0800'              	movf	___fldiv@a^(0+256),w
  9371  00C1' 0200'              	subwf	___fldiv@rem^(0+256),w
  9372  00C2'                    u4335:
  9373  00C2' 1C03               	skipc
  9374  00C3' 2800'              	goto	l4775
  9375  00C4' 1703'              	bsf	(___fldiv@grs^(0+256)+3),6
  9376  00C5' 0800'              	movf	___fldiv@a^(0+256),w
  9377  00C6' 0280'              	subwf	___fldiv@rem^(0+256),f
  9378  00C7' 0800'              	movf	(___fldiv@a+1)^(0+256),w
  9379  00C8' 3B80'              	subwfb	(___fldiv@rem+1)^(0+256),f
  9380  00C9' 0800'              	movf	(___fldiv@a+2)^(0+256),w
  9381  00CA' 3B80'              	subwfb	(___fldiv@rem+2)^(0+256),f
  9382  00CB' 0800'              	movf	(___fldiv@a+3)^(0+256),w
  9383  00CC' 3B80'              	subwfb	(___fldiv@rem+3)^(0+256),f
  9384  00CD'                    l4775:
  9385  00CD' 3001               	movlw	1
  9386  00CE' 0080'              	movwf	??___fldiv^(0+256)
  9387  00CF' 0800'              	movf	??___fldiv^(0+256),w
  9388  00D0' 0780'              	addwf	___fldiv@aexp^(0+256),f
  9389  00D1' 2800'              	goto	l4777
  9390  00D2'                    l4779:
  9391  00D2' 0800'              	movf	(___fldiv@rem+3)^(0+256),w
  9392  00D3' 0400'              	iorwf	(___fldiv@rem+2)^(0+256),w
  9393  00D4' 0400'              	iorwf	(___fldiv@rem+1)^(0+256),w
  9394  00D5' 0400'              	iorwf	___fldiv@rem^(0+256),w
  9395  00D6' 1D03               	btfss	3,2
  9396  00D7' 1400'              	bsf	___fldiv@grs^(0+256),0
  9397  00D8'                    l4793:
  9398  00D8' 1B80'              	btfsc	(___fldiv@b+2)^(0+256),7
  9399  00D9' 2800'              	goto	l4795
  9400  00DA' 3001               	movlw	1
  9401  00DB'                    u4365:
  9402  00DB' 3580'              	lslf	___fldiv@b^(0+256),f
  9403  00DC' 0D80'              	rlf	(___fldiv@b+1)^(0+256),f
  9404  00DD' 0D80'              	rlf	(___fldiv@b+2)^(0+256),f
  9405  00DE' 0D80'              	rlf	(___fldiv@b+3)^(0+256),f
  9406  00DF' 0B89               	decfsz	9,f
  9407  00E0' 2800'              	goto	u4365
  9408  00E1' 1B80'              	btfsc	(___fldiv@grs+3)^(0+256),7
  9409  00E2' 1400'              	bsf	___fldiv@b^(0+256),0
  9410  00E3' 3001               	movlw	1
  9411  00E4'                    u4385:
  9412  00E4' 3580'              	lslf	___fldiv@grs^(0+256),f
  9413  00E5' 0D80'              	rlf	(___fldiv@grs+1)^(0+256),f
  9414  00E6' 0D80'              	rlf	(___fldiv@grs+2)^(0+256),f
  9415  00E7' 0D80'              	rlf	(___fldiv@grs+3)^(0+256),f
  9416  00E8' 0B89               	decfsz	9,f
  9417  00E9' 2800'              	goto	u4385
  9418  00EA' 30FF               	movlw	255
  9419  00EB' 0780'              	addwf	___fldiv@new_exp^(0+256),f
  9420  00EC' 30FF               	movlw	255
  9421  00ED' 3D80'              	addwfc	(___fldiv@new_exp+1)^(0+256),f
  9422  00EE' 2800'              	goto	l4793
  9423  00EF'                    l4795:
  9424  00EF' 0180'              	clrf	___fldiv@aexp^(0+256)
  9425  00F0' 1F80'              	btfss	(___fldiv@grs+3)^(0+256),7
  9426  00F1' 2800'              	goto	l4805
  9427  00F2' 30FF               	movlw	255
  9428  00F3' 0500'              	andwf	___fldiv@grs^(0+256),w
  9429  00F4' 0080'              	movwf	??___fldiv^(0+256)
  9430  00F5' 30FF               	movlw	255
  9431  00F6' 0500'              	andwf	(___fldiv@grs+1)^(0+256),w
  9432  00F7' 0081'              	movwf	(??___fldiv^(0+256)+1)
  9433  00F8' 30FF               	movlw	255
  9434  00F9' 0500'              	andwf	(___fldiv@grs+2)^(0+256),w
  9435  00FA' 0082'              	movwf	(??___fldiv^(0+256)+2)
  9436  00FB' 307F               	movlw	127
  9437  00FC' 0500'              	andwf	(___fldiv@grs+3)^(0+256),w
  9438  00FD' 0083'              	movwf	(??___fldiv^(0+256)+3)
  9439  00FE' 0800'              	movf	(??___fldiv+3)^(0+256),w
  9440  00FF' 0400'              	iorwf	(??___fldiv+2)^(0+256),w
  9441  0100' 0400'              	iorwf	(??___fldiv+1)^(0+256),w
  9442  0101' 0400'              	iorwf	??___fldiv^(0+256),w
  9443  0102' 1903               	skipnz
  9444  0103' 1800'              	btfsc	___fldiv@b^(0+256),0
  9445  0104' 2800'              	goto	l4801
  9446  0105' 2800'              	goto	l4805
  9447  0106'                    l4801:
  9448  0106' 0180'              	clrf	___fldiv@aexp^(0+256)
  9449  0107' 0A80'              	incf	___fldiv@aexp^(0+256),f
  9450  0108'                    l4805:
  9451  0108' 0800'              	movf	___fldiv@aexp^(0+256),w
  9452  0109' 1903               	btfsc	3,2
  9453  010A' 2800'              	goto	l4815
  9454  010B' 3001               	movlw	1
  9455  010C' 0780'              	addwf	___fldiv@b^(0+256),f
  9456  010D' 3000               	movlw	0
  9457  010E' 3D80'              	addwfc	(___fldiv@b+1)^(0+256),f
  9458  010F' 3000               	movlw	0
  9459  0110' 3D80'              	addwfc	(___fldiv@b+2)^(0+256),f
  9460  0111' 3000               	movlw	0
  9461  0112' 3D80'              	addwfc	(___fldiv@b+3)^(0+256),f
  9462  0113' 1C00'              	btfss	(___fldiv@b+3)^(0+256),0
  9463  0114' 2800'              	goto	l4815
  9464  0115' 0800'              	movf	___fldiv@b^(0+256),w
  9465  0116' 0080'              	movwf	??___fldiv^(0+256)
  9466  0117' 0800'              	movf	(___fldiv@b+1)^(0+256),w
  9467  0118' 0081'              	movwf	(??___fldiv^(0+256)+1)
  9468  0119' 0800'              	movf	(___fldiv@b+2)^(0+256),w
  9469  011A' 0082'              	movwf	(??___fldiv^(0+256)+2)
  9470  011B' 0800'              	movf	(___fldiv@b+3)^(0+256),w
  9471  011C' 0083'              	movwf	(??___fldiv^(0+256)+3)
  9472  011D' 3001               	movlw	1
  9473  011E' 0080'              	movwf	(??___fldiv+4)^(0+256)
  9474  011F'                    u4455:
  9475  011F' 3783'              	asrf	(??___fldiv^(0+256)+3),f
  9476  0120' 0C82'              	rrf	(??___fldiv^(0+256)+2),f
  9477  0121' 0C81'              	rrf	(??___fldiv^(0+256)+1),f
  9478  0122' 0C80'              	rrf	??___fldiv^(0+256),f
  9479  0123' 0B80'              	decfsz	(??___fldiv+4)^(0+256),f
  9480  0124' 2800'              	goto	u4455
  9481  0125' 0800'              	movf	(??___fldiv+3)^(0+256),w
  9482  0126' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  9483  0127' 0800'              	movf	(??___fldiv+2)^(0+256),w
  9484  0128' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  9485  0129' 0800'              	movf	(??___fldiv+1)^(0+256),w
  9486  012A' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  9487  012B' 0800'              	movf	??___fldiv^(0+256),w
  9488  012C' 0080'              	movwf	___fldiv@b^(0+256)
  9489  012D' 3001               	movlw	1
  9490  012E' 0780'              	addwf	___fldiv@new_exp^(0+256),f
  9491  012F' 3000               	movlw	0
  9492  0130' 3D80'              	addwfc	(___fldiv@new_exp+1)^(0+256),f
  9493  0131'                    l4815:
  9494  0131' 0800'              	movf	(___fldiv@new_exp+1)^(0+256),w
  9495  0132' 3A80               	xorlw	128
  9496  0133' 0080'              	movwf	??___fldiv^(0+256)
  9497  0134' 3080               	movlw	128
  9498  0135' 0200'              	subwf	??___fldiv^(0+256),w
  9499  0136' 1D03               	skipz
  9500  0137' 2800'              	goto	u4465
  9501  0138' 30FF               	movlw	255
  9502  0139' 0200'              	subwf	___fldiv@new_exp^(0+256),w
  9503  013A'                    u4465:
  9504  013A' 1C03               	skipc
  9505  013B' 2800'              	goto	l1424
  9506  013C' 30FF               	movlw	255
  9507  013D' 0022               	movlb	2	; select bank2
  9508  013E' 0080'              	movwf	___fldiv@new_exp^(0+256)
  9509  013F' 3000               	movlw	0
  9510  0140' 0081'              	movwf	(___fldiv@new_exp^(0+256)+1)
  9511  0141' 3000               	movlw	0
  9512  0142' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  9513  0143' 3000               	movlw	0
  9514  0144' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  9515  0145' 3000               	movlw	0
  9516  0146' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  9517  0147' 3000               	movlw	0
  9518  0148' 0080'              	movwf	___fldiv@b^(0+256)
  9519  0149'                    l1424:
  9520  0149' 0022               	movlb	2	; select bank2
  9521  014A' 0800'              	movf	(___fldiv@new_exp+1)^(0+256),w
  9522  014B' 3A80               	xorlw	128
  9523  014C' 0080'              	movwf	??___fldiv^(0+256)
  9524  014D' 3080               	movlw	128
  9525  014E' 0200'              	subwf	??___fldiv^(0+256),w
  9526  014F' 1D03               	skipz
  9527  0150' 2800'              	goto	u4475
  9528  0151' 3001               	movlw	1
  9529  0152' 0200'              	subwf	___fldiv@new_exp^(0+256),w
  9530  0153'                    u4475:
  9531  0153' 1803               	skipnc
  9532  0154' 2800'              	goto	l1425
  9533  0155' 0022               	movlb	2	; select bank2
  9534  0156' 0180'              	clrf	___fldiv@new_exp^(0+256)
  9535  0157' 0180'              	clrf	(___fldiv@new_exp+1)^(0+256)
  9536  0158' 3000               	movlw	0
  9537  0159' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  9538  015A' 3000               	movlw	0
  9539  015B' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  9540  015C' 3000               	movlw	0
  9541  015D' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  9542  015E' 3000               	movlw	0
  9543  015F' 0080'              	movwf	___fldiv@b^(0+256)
  9544  0160' 0180'              	clrf	___fldiv@sign^(0+256)
  9545  0161'                    l1425:
  9546  0161' 0022               	movlb	2	; select bank2
  9547  0162' 0800'              	movf	___fldiv@new_exp^(0+256),w
  9548  0163' 0080'              	movwf	___fldiv@bexp^(0+256)
  9549  0164' 1C00'              	btfss	___fldiv@bexp^(0+256),0
  9550  0165' 2800'              	goto	l4829
  9551  0166' 1782'              	bsf	(___fldiv@b^(0+256)+2),7
  9552  0167' 2800'              	goto	l1427
  9553  0168'                    l4829:
  9554  0168' 307F               	movlw	127
  9555  0169' 0080'              	movwf	??___fldiv^(0+256)
  9556  016A' 0800'              	movf	??___fldiv^(0+256),w
  9557  016B' 0582'              	andwf	(___fldiv@b^(0+256)+2),f
  9558  016C'                    l1427:
  9559  016C' 3600'              	lsrf	___fldiv@bexp^(0+256),w
  9560  016D' 0083'              	movwf	(___fldiv@b^(0+256)+3)
  9561  016E' 2800'              	goto	L8
  9562  016F'                    __end_of___fldiv:
  9563                           
  9564                           	psect	text28
  9565  0000'                    __ptext28:	
  9566 ;; *************** function ___fladd *****************
  9567 ;; Defined at:
  9568 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9569 ;; Parameters:    Size  Location     Type
  9570 ;;  b               4   66[BANK2 ] unsigned char 
  9571 ;;  a               4   70[BANK2 ] unsigned char 
  9572 ;; Auto vars:     Size  Location     Type
  9573 ;;  grs             1   77[BANK2 ] unsigned char 
  9574 ;;  bexp            1   76[BANK2 ] unsigned char 
  9575 ;;  aexp            1   75[BANK2 ] unsigned char 
  9576 ;;  signs           1   74[BANK2 ] unsigned char 
  9577 ;; Return value:  Size  Location     Type
  9578 ;;                  4   66[BANK2 ] unsigned char 
  9579 ;; Registers used:
  9580 ;;		wreg, status,2, status,0
  9581 ;; Tracked objects:
  9582 ;;		On entry : 1F/2
  9583 ;;		On exit  : 1F/2
  9584 ;;		Unchanged: 0/0
  9585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9586 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  9587 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9588 ;;      Temps:          0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
  9589 ;;      Totals:         0       0       0      12       8       0       0       0       0       0       0       0       
      +0       0
  9590 ;;Total ram usage:       20 bytes
  9591 ;; Hardware stack levels used: 1
  9592 ;; Hardware stack levels required when called: 5
  9593 ;; This function calls:
  9594 ;;		Nothing
  9595 ;; This function is called by:
  9596 ;;		_cc_cv_mode
  9597 ;;		_scaling
  9598 ;;		_fDISCHARGE
  9599 ;;		_fDC_res
  9600 ;;		_converter_settings
  9601 ;; This function uses a non-reentrant model
  9602 ;;
  9603                           
  9604  0000'                    ___fladd:	
  9605                           ;psect for function ___fladd
  9606                           
  9607                           
  9608                           ;incstack = 0
  9609                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  9610  0000' 0803'              	movf	(___fladd@b^(0+256)+3),w
  9611  0001' 3980               	andlw	128
  9612  0002' 0080'              	movwf	___fladd@signs^(0+256)
  9613  0003' 3503'              	lslf	(___fladd@b^(0+256)+3),w
  9614  0004' 0080'              	movwf	___fladd@bexp^(0+256)
  9615  0005' 1B82'              	btfsc	(___fladd@b^(0+256)+2),7
  9616  0006' 1400'              	bsf	___fladd@bexp^(0+256),0
  9617  0007' 0800'              	movf	___fladd@bexp^(0+256),w
  9618  0008' 1903               	btfsc	3,2
  9619  0009' 2800'              	goto	l4519
  9620  000A' 0A00'              	incf	___fladd@bexp^(0+256),w
  9621  000B' 1D03               	btfss	3,2
  9622  000C' 2800'              	goto	l4515
  9623  000D' 3000               	movlw	0
  9624  000E' 0080'              	movwf	(___fladd@b+3)^(0+256)
  9625  000F' 3000               	movlw	0
  9626  0010' 0080'              	movwf	(___fladd@b+2)^(0+256)
  9627  0011' 3000               	movlw	0
  9628  0012' 0080'              	movwf	(___fladd@b+1)^(0+256)
  9629  0013' 3000               	movlw	0
  9630  0014' 0080'              	movwf	___fladd@b^(0+256)
  9631  0015'                    l4515:
  9632  0015' 1782'              	bsf	(___fladd@b^(0+256)+2),7
  9633  0016' 0183'              	clrf	(___fladd@b^(0+256)+3)
  9634  0017' 2800'              	goto	l4521
  9635  0018'                    l4519:
  9636  0018' 3000               	movlw	0
  9637  0019' 0080'              	movwf	(___fladd@b+3)^(0+256)
  9638  001A' 3000               	movlw	0
  9639  001B' 0080'              	movwf	(___fladd@b+2)^(0+256)
  9640  001C' 3000               	movlw	0
  9641  001D' 0080'              	movwf	(___fladd@b+1)^(0+256)
  9642  001E' 3000               	movlw	0
  9643  001F' 0080'              	movwf	___fladd@b^(0+256)
  9644  0020'                    l4521:
  9645  0020' 0803'              	movf	(___fladd@a^(0+256)+3),w
  9646  0021' 3980               	andlw	128
  9647  0022' 0080'              	movwf	___fladd@aexp^(0+256)
  9648  0023' 0800'              	movf	___fladd@aexp^(0+256),w
  9649  0024' 0600'              	xorwf	___fladd@signs^(0+256),w
  9650  0025' 1D03               	btfss	3,2
  9651  0026' 1700'              	bsf	___fladd@signs^(0+256),6
  9652  0027' 3503'              	lslf	(___fladd@a^(0+256)+3),w
  9653  0028' 0080'              	movwf	___fladd@aexp^(0+256)
  9654  0029' 1B82'              	btfsc	(___fladd@a^(0+256)+2),7
  9655  002A' 1400'              	bsf	___fladd@aexp^(0+256),0
  9656  002B' 0800'              	movf	___fladd@aexp^(0+256),w
  9657  002C' 1903               	btfsc	3,2
  9658  002D' 2800'              	goto	l4543
  9659  002E' 0A00'              	incf	___fladd@aexp^(0+256),w
  9660  002F' 1D03               	btfss	3,2
  9661  0030' 2800'              	goto	l4539
  9662  0031' 3000               	movlw	0
  9663  0032' 0080'              	movwf	(___fladd@a+3)^(0+256)
  9664  0033' 3000               	movlw	0
  9665  0034' 0080'              	movwf	(___fladd@a+2)^(0+256)
  9666  0035' 3000               	movlw	0
  9667  0036' 0080'              	movwf	(___fladd@a+1)^(0+256)
  9668  0037' 3000               	movlw	0
  9669  0038' 0080'              	movwf	___fladd@a^(0+256)
  9670  0039'                    l4539:
  9671  0039' 1782'              	bsf	(___fladd@a^(0+256)+2),7
  9672  003A' 0183'              	clrf	(___fladd@a^(0+256)+3)
  9673  003B' 2800'              	goto	l1347
  9674  003C'                    l4543:
  9675  003C' 3000               	movlw	0
  9676  003D' 0080'              	movwf	(___fladd@a+3)^(0+256)
  9677  003E' 3000               	movlw	0
  9678  003F' 0080'              	movwf	(___fladd@a+2)^(0+256)
  9679  0040' 3000               	movlw	0
  9680  0041' 0080'              	movwf	(___fladd@a+1)^(0+256)
  9681  0042' 3000               	movlw	0
  9682  0043' 0080'              	movwf	___fladd@a^(0+256)
  9683  0044'                    l1347:
  9684  0044' 0800'              	movf	___fladd@bexp^(0+256),w
  9685  0045' 0200'              	subwf	___fladd@aexp^(0+256),w
  9686  0046' 1803               	skipnc
  9687  0047' 2800'              	goto	l4579
  9688  0048' 1F00'              	btfss	___fladd@signs^(0+256),6
  9689  0049' 2800'              	goto	l4549
  9690  004A' 3080               	movlw	128
  9691  004B' 0023               	movlb	3	; select bank3
  9692  004C' 0080'              	movwf	??___fladd^(0+384)
  9693  004D' 0800'              	movf	??___fladd^(0+384),w
  9694  004E' 0022               	movlb	2	; select bank2
  9695  004F' 0680'              	xorwf	___fladd@signs^(0+256),f
  9696  0050'                    l4549:
  9697  0050' 0800'              	movf	___fladd@bexp^(0+256),w
  9698  0051' 0080'              	movwf	___fladd@grs^(0+256)
  9699  0052' 0800'              	movf	___fladd@aexp^(0+256),w
  9700  0053' 0080'              	movwf	___fladd@bexp^(0+256)
  9701  0054' 0800'              	movf	___fladd@grs^(0+256),w
  9702  0055' 0080'              	movwf	___fladd@aexp^(0+256)
  9703  0056' 0800'              	movf	___fladd@b^(0+256),w
  9704  0057' 0080'              	movwf	___fladd@grs^(0+256)
  9705  0058' 0800'              	movf	___fladd@a^(0+256),w
  9706  0059' 0080'              	movwf	___fladd@b^(0+256)
  9707  005A' 0800'              	movf	___fladd@grs^(0+256),w
  9708  005B' 0080'              	movwf	___fladd@a^(0+256)
  9709  005C' 0801'              	movf	(___fladd@b^(0+256)+1),w
  9710  005D' 0080'              	movwf	___fladd@grs^(0+256)
  9711  005E' 0801'              	movf	(___fladd@a^(0+256)+1),w
  9712  005F' 0081'              	movwf	(___fladd@b^(0+256)+1)
  9713  0060' 0800'              	movf	___fladd@grs^(0+256),w
  9714  0061' 0081'              	movwf	(___fladd@a^(0+256)+1)
  9715  0062' 0802'              	movf	(___fladd@b^(0+256)+2),w
  9716  0063' 0080'              	movwf	___fladd@grs^(0+256)
  9717  0064' 0802'              	movf	(___fladd@a^(0+256)+2),w
  9718  0065' 0082'              	movwf	(___fladd@b^(0+256)+2)
  9719  0066' 0800'              	movf	___fladd@grs^(0+256),w
  9720  0067' 0082'              	movwf	(___fladd@a^(0+256)+2)
  9721  0068' 0803'              	movf	(___fladd@b^(0+256)+3),w
  9722  0069' 0080'              	movwf	___fladd@grs^(0+256)
  9723  006A' 0803'              	movf	(___fladd@a^(0+256)+3),w
  9724  006B' 0083'              	movwf	(___fladd@b^(0+256)+3)
  9725  006C' 0800'              	movf	___fladd@grs^(0+256),w
  9726  006D' 0083'              	movwf	(___fladd@a^(0+256)+3)
  9727  006E'                    l4579:
  9728  006E' 0180'              	clrf	___fladd@grs^(0+256)
  9729  006F' 0800'              	movf	___fladd@aexp^(0+256),w
  9730  0070' 0023               	movlb	3	; select bank3
  9731  0071' 0080'              	movwf	??___fladd^(0+384)
  9732  0072' 0181'              	clrf	(??___fladd^(0+384)+1)
  9733  0073' 0800'              	movf	(??___fladd+1)^(0+384),w
  9734  0074' 0081'              	movwf	((??___fladd+2)^(0+384)+1)
  9735  0075' 0022               	movlb	2	; select bank2
  9736  0076' 0800'              	movf	___fladd@bexp^(0+256),w
  9737  0077' 0023               	movlb	3	; select bank3
  9738  0078' 0200'              	subwf	??___fladd^(0+384),w
  9739  0079' 0080'              	movwf	(??___fladd+2)^(0+384)
  9740  007A' 1C03               	skipc
  9741  007B' 0381'              	decf	((??___fladd+2)^(0+384)+1),f
  9742  007C' 0800'              	movf	(??___fladd+3)^(0+384),w
  9743  007D' 3A80               	xorlw	128
  9744  007E' 0080'              	movwf	(??___fladd+4)^(0+384)
  9745  007F' 3080               	movlw	128
  9746  0080' 0200'              	subwf	(??___fladd+4)^(0+384),w
  9747  0081' 1D03               	skipz
  9748  0082' 2800'              	goto	u3865
  9749  0083' 301A               	movlw	26
  9750  0084' 0200'              	subwf	(??___fladd+2)^(0+384),w
  9751  0085'                    u3865:
  9752  0085' 1C03               	skipc
  9753  0086' 2800'              	goto	l4597
  9754  0087' 0022               	movlb	2	; select bank2
  9755  0088' 0800'              	movf	(___fladd@b+3)^(0+256),w
  9756  0089' 0400'              	iorwf	(___fladd@b+2)^(0+256),w
  9757  008A' 0400'              	iorwf	(___fladd@b+1)^(0+256),w
  9758  008B' 0400'              	iorwf	___fladd@b^(0+256),w
  9759  008C' 1903               	btfsc	3,2
  9760  008D' 2800'              	goto	u3870
  9761  008E' 3001               	movlw	1
  9762  008F' 2800'              	goto	u3880
  9763  0090'                    u3870:
  9764  0090' 3000               	movlw	0
  9765  0091'                    u3880:
  9766  0091' 0080'              	movwf	___fladd@grs^(0+256)
  9767  0092' 3000               	movlw	0
  9768  0093' 0080'              	movwf	(___fladd@b+3)^(0+256)
  9769  0094' 3000               	movlw	0
  9770  0095' 0080'              	movwf	(___fladd@b+2)^(0+256)
  9771  0096' 3000               	movlw	0
  9772  0097' 0080'              	movwf	(___fladd@b+1)^(0+256)
  9773  0098' 3000               	movlw	0
  9774  0099' 0080'              	movwf	___fladd@b^(0+256)
  9775  009A' 0800'              	movf	___fladd@aexp^(0+256),w
  9776  009B' 0080'              	movwf	___fladd@bexp^(0+256)
  9777  009C' 2800'              	goto	l1351
  9778  009D'                    l1353:
  9779  009D' 1C00'              	btfss	___fladd@grs^(0+256),0
  9780  009E' 2800'              	goto	l4587
  9781  009F' 3600'              	lsrf	___fladd@grs^(0+256),w
  9782  00A0' 3801               	iorlw	1
  9783  00A1' 0080'              	movwf	___fladd@grs^(0+256)
  9784  00A2' 2800'              	goto	l4589
  9785  00A3'                    l4587:
  9786  00A3' 1003               	clrc
  9787  00A4' 0C80'              	rrf	___fladd@grs^(0+256),f
  9788  00A5'                    l4589:
  9789  00A5' 1800'              	btfsc	___fladd@b^(0+256),0
  9790  00A6' 1780'              	bsf	___fladd@grs^(0+256),7
  9791  00A7' 3001               	movlw	1
  9792  00A8' 0023               	movlb	3	; select bank3
  9793  00A9' 0080'              	movwf	??___fladd^(0+384)
  9794  00AA'                    u3915:
  9795  00AA' 0022               	movlb	2	; select bank2
  9796  00AB' 3780'              	asrf	(___fladd@b+3)^(0+256),f
  9797  00AC' 0C80'              	rrf	(___fladd@b+2)^(0+256),f
  9798  00AD' 0C80'              	rrf	(___fladd@b+1)^(0+256),f
  9799  00AE' 0C80'              	rrf	___fladd@b^(0+256),f
  9800  00AF' 0023               	movlb	3	; select bank3
  9801  00B0' 0B80'              	decfsz	(??___fladd^(0+384))& (0+127),f
  9802  00B1' 2800'              	goto	u3915
  9803  00B2' 3001               	movlw	1
  9804  00B3' 0080'              	movwf	??___fladd^(0+384)
  9805  00B4' 0800'              	movf	??___fladd^(0+384),w
  9806  00B5' 0022               	movlb	2	; select bank2
  9807  00B6' 0780'              	addwf	___fladd@bexp^(0+256),f
  9808  00B7'                    l4597:
  9809  00B7' 0022               	movlb	2	; select bank2
  9810  00B8' 0800'              	movf	___fladd@aexp^(0+256),w
  9811  00B9' 0200'              	subwf	___fladd@bexp^(0+256),w
  9812  00BA' 1C03               	skipc
  9813  00BB' 2800'              	goto	l1353
  9814  00BC'                    l1351:
  9815  00BC' 1B00'              	btfsc	___fladd@signs^(0+256),6
  9816  00BD' 2800'              	goto	l4623
  9817  00BE' 0800'              	movf	___fladd@bexp^(0+256),w
  9818  00BF' 1D03               	btfss	3,2
  9819  00C0' 2800'              	goto	l4605
  9820  00C1' 3000               	movlw	0
  9821  00C2' 0080'              	movwf	(?___fladd+3)^(0+256)
  9822  00C3' 3000               	movlw	0
  9823  00C4' 0080'              	movwf	(?___fladd+2)^(0+256)
  9824  00C5' 3000               	movlw	0
  9825  00C6' 0080'              	movwf	(?___fladd+1)^(0+256)
  9826  00C7' 3000               	movlw	0
  9827  00C8' 0080'              	movwf	?___fladd^(0+256)
  9828  00C9' 0008               	return
  9829  00CA'                    l4605:
  9830  00CA' 0800'              	movf	___fladd@a^(0+256),w
  9831  00CB' 0780'              	addwf	___fladd@b^(0+256),f
  9832  00CC' 0800'              	movf	(___fladd@a+1)^(0+256),w
  9833  00CD' 3D80'              	addwfc	(___fladd@b+1)^(0+256),f
  9834  00CE' 0800'              	movf	(___fladd@a+2)^(0+256),w
  9835  00CF' 3D80'              	addwfc	(___fladd@b+2)^(0+256),f
  9836  00D0' 0800'              	movf	(___fladd@a+3)^(0+256),w
  9837  00D1' 3D80'              	addwfc	(___fladd@b+3)^(0+256),f
  9838  00D2' 1C00'              	btfss	(___fladd@b+3)^(0+256),0
  9839  00D3' 2800'              	goto	l4657
  9840  00D4' 1C00'              	btfss	___fladd@grs^(0+256),0
  9841  00D5' 2800'              	goto	l4613
  9842  00D6' 3600'              	lsrf	___fladd@grs^(0+256),w
  9843  00D7' 3801               	iorlw	1
  9844  00D8' 0080'              	movwf	___fladd@grs^(0+256)
  9845  00D9' 2800'              	goto	l4615
  9846  00DA'                    l4613:
  9847  00DA' 1003               	clrc
  9848  00DB' 0C80'              	rrf	___fladd@grs^(0+256),f
  9849  00DC'                    l4615:
  9850  00DC' 1800'              	btfsc	___fladd@b^(0+256),0
  9851  00DD' 1780'              	bsf	___fladd@grs^(0+256),7
  9852  00DE' 3001               	movlw	1
  9853  00DF' 0023               	movlb	3	; select bank3
  9854  00E0' 0080'              	movwf	??___fladd^(0+384)
  9855  00E1'                    u3985:
  9856  00E1' 0022               	movlb	2	; select bank2
  9857  00E2' 3780'              	asrf	(___fladd@b+3)^(0+256),f
  9858  00E3' 0C80'              	rrf	(___fladd@b+2)^(0+256),f
  9859  00E4' 0C80'              	rrf	(___fladd@b+1)^(0+256),f
  9860  00E5' 0C80'              	rrf	___fladd@b^(0+256),f
  9861  00E6' 0023               	movlb	3	; select bank3
  9862  00E7' 0B80'              	decfsz	(??___fladd^(0+384))& (0+127),f
  9863  00E8' 2800'              	goto	u3985
  9864  00E9' 3001               	movlw	1
  9865  00EA' 0080'              	movwf	??___fladd^(0+384)
  9866  00EB' 0800'              	movf	??___fladd^(0+384),w
  9867  00EC' 0022               	movlb	2	; select bank2
  9868  00ED' 0780'              	addwf	___fladd@bexp^(0+256),f
  9869  00EE' 2800'              	goto	l4657
  9870  00EF'                    l4623:
  9871  00EF' 0800'              	movf	(___fladd@b+3)^(0+256),w
  9872  00F0' 3A80               	xorlw	128
  9873  00F1' 0023               	movlb	3	; select bank3
  9874  00F2' 0080'              	movwf	??___fladd^(0+384)
  9875  00F3' 0022               	movlb	2	; select bank2
  9876  00F4' 0800'              	movf	(___fladd@a+3)^(0+256),w
  9877  00F5' 3A80               	xorlw	128
  9878  00F6' 0023               	movlb	3	; select bank3
  9879  00F7' 0200'              	subwf	??___fladd^(0+384),w
  9880  00F8' 0022               	movlb	2	; select bank2
  9881  00F9' 1D03               	skipz
  9882  00FA' 2800'              	goto	u3993
  9883  00FB' 0800'              	movf	(___fladd@a+2)^(0+256),w
  9884  00FC' 0200'              	subwf	(___fladd@b+2)^(0+256),w
  9885  00FD' 1D03               	skipz
  9886  00FE' 2800'              	goto	u3993
  9887  00FF' 0800'              	movf	(___fladd@a+1)^(0+256),w
  9888  0100' 0200'              	subwf	(___fladd@b+1)^(0+256),w
  9889  0101' 1D03               	skipz
  9890  0102' 2800'              	goto	u3993
  9891  0103' 0800'              	movf	___fladd@a^(0+256),w
  9892  0104' 0200'              	subwf	___fladd@b^(0+256),w
  9893  0105'                    u3993:
  9894  0105' 1803               	skipnc
  9895  0106' 2800'              	goto	l4633
  9896  0107' 30FF               	movlw	255
  9897  0108' 0023               	movlb	3	; select bank3
  9898  0109' 0080'              	movwf	??___fladd^(0+384)
  9899  010A' 30FF               	movlw	255
  9900  010B' 0081'              	movwf	(??___fladd^(0+384)+1)
  9901  010C' 30FF               	movlw	255
  9902  010D' 0082'              	movwf	(??___fladd^(0+384)+2)
  9903  010E' 30FF               	movlw	255
  9904  010F' 0083'              	movwf	(??___fladd^(0+384)+3)
  9905  0110' 0022               	movlb	2	; select bank2
  9906  0111' 0800'              	movf	___fladd@b^(0+256),w
  9907  0112' 0200'              	subwf	___fladd@a^(0+256),w
  9908  0113' 0023               	movlb	3	; select bank3
  9909  0114' 0080'              	movwf	(??___fladd+4)^(0+384)
  9910  0115' 0022               	movlb	2	; select bank2
  9911  0116' 0800'              	movf	(___fladd@b+1)^(0+256),w
  9912  0117' 3B00'              	subwfb	(___fladd@a+1)^(0+256),w
  9913  0118' 0023               	movlb	3	; select bank3
  9914  0119' 0081'              	movwf	((??___fladd+4)^(0+384)+1)
  9915  011A' 0022               	movlb	2	; select bank2
  9916  011B' 0800'              	movf	(___fladd@b+2)^(0+256),w
  9917  011C' 3B00'              	subwfb	(___fladd@a+2)^(0+256),w
  9918  011D' 0023               	movlb	3	; select bank3
  9919  011E' 0082'              	movwf	((??___fladd+4)^(0+384)+2)
  9920  011F' 0022               	movlb	2	; select bank2
  9921  0120' 0800'              	movf	(___fladd@b+3)^(0+256),w
  9922  0121' 3B00'              	subwfb	(___fladd@a+3)^(0+256),w
  9923  0122' 0023               	movlb	3	; select bank3
  9924  0123' 0083'              	movwf	((??___fladd+4)^(0+384)+3)
  9925  0124' 0800'              	movf	(??___fladd+4)^(0+384),w
  9926  0125' 0780'              	addwf	??___fladd^(0+384),f
  9927  0126' 0800'              	movf	(??___fladd+5)^(0+384),w
  9928  0127' 3D81'              	addwfc	(??___fladd^(0+384)+1),f
  9929  0128' 0800'              	movf	(??___fladd+6)^(0+384),w
  9930  0129' 3D82'              	addwfc	(??___fladd^(0+384)+2),f
  9931  012A' 0800'              	movf	(??___fladd+7)^(0+384),w
  9932  012B' 3D83'              	addwfc	(??___fladd^(0+384)+3),f
  9933  012C' 0800'              	movf	(??___fladd+3)^(0+384),w
  9934  012D' 0022               	movlb	2	; select bank2
  9935  012E' 0080'              	movwf	(___fladd@b+3)^(0+256)
  9936  012F' 0023               	movlb	3	; select bank3
  9937  0130' 0800'              	movf	(??___fladd+2)^(0+384),w
  9938  0131' 0022               	movlb	2	; select bank2
  9939  0132' 0080'              	movwf	(___fladd@b+2)^(0+256)
  9940  0133' 0023               	movlb	3	; select bank3
  9941  0134' 0800'              	movf	(??___fladd+1)^(0+384),w
  9942  0135' 0022               	movlb	2	; select bank2
  9943  0136' 0080'              	movwf	(___fladd@b+1)^(0+256)
  9944  0137' 0023               	movlb	3	; select bank3
  9945  0138' 0800'              	movf	??___fladd^(0+384),w
  9946  0139' 0022               	movlb	2	; select bank2
  9947  013A' 0080'              	movwf	___fladd@b^(0+256)
  9948  013B' 3080               	movlw	128
  9949  013C' 0023               	movlb	3	; select bank3
  9950  013D' 0080'              	movwf	??___fladd^(0+384)
  9951  013E' 0800'              	movf	??___fladd^(0+384),w
  9952  013F' 0022               	movlb	2	; select bank2
  9953  0140' 0680'              	xorwf	___fladd@signs^(0+256),f
  9954  0141' 0980'              	comf	___fladd@grs^(0+256),f
  9955  0142' 0A80'              	incf	___fladd@grs^(0+256),f
  9956  0143' 0800'              	movf	___fladd@grs^(0+256),w
  9957  0144' 1D03               	btfss	3,2
  9958  0145' 2800'              	goto	l1368
  9959  0146' 3001               	movlw	1
  9960  0147' 0780'              	addwf	___fladd@b^(0+256),f
  9961  0148' 3000               	movlw	0
  9962  0149' 3D80'              	addwfc	(___fladd@b+1)^(0+256),f
  9963  014A' 3000               	movlw	0
  9964  014B' 3D80'              	addwfc	(___fladd@b+2)^(0+256),f
  9965  014C' 3000               	movlw	0
  9966  014D' 3D80'              	addwfc	(___fladd@b+3)^(0+256),f
  9967  014E' 2800'              	goto	l1368
  9968  014F'                    l4633:
  9969  014F' 0800'              	movf	___fladd@a^(0+256),w
  9970  0150' 0280'              	subwf	___fladd@b^(0+256),f
  9971  0151' 0800'              	movf	(___fladd@a+1)^(0+256),w
  9972  0152' 3B80'              	subwfb	(___fladd@b+1)^(0+256),f
  9973  0153' 0800'              	movf	(___fladd@a+2)^(0+256),w
  9974  0154' 3B80'              	subwfb	(___fladd@b+2)^(0+256),f
  9975  0155' 0800'              	movf	(___fladd@a+3)^(0+256),w
  9976  0156' 3B80'              	subwfb	(___fladd@b+3)^(0+256),f
  9977  0157'                    l1368:
  9978  0157' 0800'              	movf	(___fladd@b+3)^(0+256),w
  9979  0158' 0400'              	iorwf	(___fladd@b+2)^(0+256),w
  9980  0159' 0400'              	iorwf	(___fladd@b+1)^(0+256),w
  9981  015A' 0400'              	iorwf	___fladd@b^(0+256),w
  9982  015B' 1D03               	skipz
  9983  015C' 2800'              	goto	l4655
  9984  015D' 0800'              	movf	___fladd@grs^(0+256),w
  9985  015E' 1D03               	btfss	3,2
  9986  015F' 2800'              	goto	l4655
  9987  0160' 3000               	movlw	0
  9988  0161' 0080'              	movwf	(?___fladd+3)^(0+256)
  9989  0162' 3000               	movlw	0
  9990  0163' 0080'              	movwf	(?___fladd+2)^(0+256)
  9991  0164' 3000               	movlw	0
  9992  0165' 0080'              	movwf	(?___fladd+1)^(0+256)
  9993  0166' 3000               	movlw	0
  9994  0167' 0080'              	movwf	?___fladd^(0+256)
  9995  0168' 0008               	return
  9996  0169'                    l4641:
  9997  0169' 3001               	movlw	1
  9998  016A'                    u4035:
  9999  016A' 3580'              	lslf	___fladd@b^(0+256),f
 10000  016B' 0D80'              	rlf	(___fladd@b+1)^(0+256),f
 10001  016C' 0D80'              	rlf	(___fladd@b+2)^(0+256),f
 10002  016D' 0D80'              	rlf	(___fladd@b+3)^(0+256),f
 10003  016E' 0B89               	decfsz	9,f
 10004  016F' 2800'              	goto	u4035
 10005  0170' 1B80'              	btfsc	___fladd@grs^(0+256),7
 10006  0171' 1400'              	bsf	___fladd@b^(0+256),0
 10007  0172' 1C00'              	btfss	___fladd@grs^(0+256),0
 10008  0173' 2800'              	goto	l4649
 10009  0174' 1403               	setc
 10010  0175' 2800'              	goto	L9
 10011  0176'                    l4649:
 10012  0176' 1003               	clrc
 10013  0177'                    L9:
 10014  0177' 0D80'              	rlf	___fladd@grs^(0+256),f
 10015  0178' 0800'              	movf	___fladd@bexp^(0+256),w
 10016  0179' 1903               	btfsc	3,2
 10017  017A' 2800'              	goto	l4655
 10018  017B' 3001               	movlw	1
 10019  017C' 0280'              	subwf	___fladd@bexp^(0+256),f
 10020  017D'                    l4655:
 10021  017D' 1F80'              	btfss	(___fladd@b+2)^(0+256),7
 10022  017E' 2800'              	goto	l4641
 10023  017F'                    l4657:
 10024  017F' 0180'              	clrf	___fladd@aexp^(0+256)
 10025  0180' 1F80'              	btfss	___fladd@grs^(0+256),7
 10026  0181' 2800'              	goto	l4667
 10027  0182' 0800'              	movf	___fladd@grs^(0+256),w
 10028  0183' 397F               	andlw	127
 10029  0184' 1903               	btfsc	3,2
 10030  0185' 1800'              	btfsc	___fladd@b^(0+256),0
 10031  0186' 2800'              	goto	l4663
 10032  0187' 2800'              	goto	l4667
 10033  0188'                    l4663:
 10034  0188' 0180'              	clrf	___fladd@aexp^(0+256)
 10035  0189' 0A80'              	incf	___fladd@aexp^(0+256),f
 10036  018A'                    l4667:
 10037  018A' 0800'              	movf	___fladd@aexp^(0+256),w
 10038  018B' 1903               	btfsc	3,2
 10039  018C' 2800'              	goto	l1381
 10040  018D' 3001               	movlw	1
 10041  018E' 0780'              	addwf	___fladd@b^(0+256),f
 10042  018F' 3000               	movlw	0
 10043  0190' 3D80'              	addwfc	(___fladd@b+1)^(0+256),f
 10044  0191' 3000               	movlw	0
 10045  0192' 3D80'              	addwfc	(___fladd@b+2)^(0+256),f
 10046  0193' 3000               	movlw	0
 10047  0194' 3D80'              	addwfc	(___fladd@b+3)^(0+256),f
 10048  0195' 1C00'              	btfss	(___fladd@b+3)^(0+256),0
 10049  0196' 2800'              	goto	l1381
 10050  0197' 0800'              	movf	___fladd@b^(0+256),w
 10051  0198' 0023               	movlb	3	; select bank3
 10052  0199' 0080'              	movwf	??___fladd^(0+384)
 10053  019A' 0022               	movlb	2	; select bank2
 10054  019B' 0800'              	movf	(___fladd@b+1)^(0+256),w
 10055  019C' 0023               	movlb	3	; select bank3
 10056  019D' 0081'              	movwf	(??___fladd^(0+384)+1)
 10057  019E' 0022               	movlb	2	; select bank2
 10058  019F' 0800'              	movf	(___fladd@b+2)^(0+256),w
 10059  01A0' 0023               	movlb	3	; select bank3
 10060  01A1' 0082'              	movwf	(??___fladd^(0+384)+2)
 10061  01A2' 0022               	movlb	2	; select bank2
 10062  01A3' 0800'              	movf	(___fladd@b+3)^(0+256),w
 10063  01A4' 0023               	movlb	3	; select bank3
 10064  01A5' 0083'              	movwf	(??___fladd^(0+384)+3)
 10065  01A6' 3001               	movlw	1
 10066  01A7' 0080'              	movwf	(??___fladd+4)^(0+384)
 10067  01A8'                    u4135:
 10068  01A8' 3783'              	asrf	(??___fladd^(0+384)+3),f
 10069  01A9' 0C82'              	rrf	(??___fladd^(0+384)+2),f
 10070  01AA' 0C81'              	rrf	(??___fladd^(0+384)+1),f
 10071  01AB' 0C80'              	rrf	??___fladd^(0+384),f
 10072  01AC' 0B80'              	decfsz	(??___fladd+4)^(0+384),f
 10073  01AD' 2800'              	goto	u4135
 10074  01AE' 0800'              	movf	(??___fladd+3)^(0+384),w
 10075  01AF' 0022               	movlb	2	; select bank2
 10076  01B0' 0080'              	movwf	(___fladd@b+3)^(0+256)
 10077  01B1' 0023               	movlb	3	; select bank3
 10078  01B2' 0800'              	movf	(??___fladd+2)^(0+384),w
 10079  01B3' 0022               	movlb	2	; select bank2
 10080  01B4' 0080'              	movwf	(___fladd@b+2)^(0+256)
 10081  01B5' 0023               	movlb	3	; select bank3
 10082  01B6' 0800'              	movf	(??___fladd+1)^(0+384),w
 10083  01B7' 0022               	movlb	2	; select bank2
 10084  01B8' 0080'              	movwf	(___fladd@b+1)^(0+256)
 10085  01B9' 0023               	movlb	3	; select bank3
 10086  01BA' 0800'              	movf	??___fladd^(0+384),w
 10087  01BB' 0022               	movlb	2	; select bank2
 10088  01BC' 0080'              	movwf	___fladd@b^(0+256)
 10089  01BD' 0A00'              	incf	___fladd@bexp^(0+256),w
 10090  01BE' 1903               	btfsc	3,2
 10091  01BF' 2800'              	goto	l1381
 10092  01C0' 3001               	movlw	1
 10093  01C1' 0023               	movlb	3	; select bank3
 10094  01C2' 0080'              	movwf	??___fladd^(0+384)
 10095  01C3' 0800'              	movf	??___fladd^(0+384),w
 10096  01C4' 0022               	movlb	2	; select bank2
 10097  01C5' 0780'              	addwf	___fladd@bexp^(0+256),f
 10098  01C6'                    l1381:
 10099  01C6' 0A00'              	incf	___fladd@bexp^(0+256),w
 10100  01C7' 1D03               	btfss	3,2
 10101  01C8' 0800'              	movf	___fladd@bexp^(0+256),w
 10102  01C9' 1D03               	btfss	3,2
 10103  01CA' 2800'              	goto	l4685
 10104  01CB' 3000               	movlw	0
 10105  01CC' 0080'              	movwf	(___fladd@b+3)^(0+256)
 10106  01CD' 3000               	movlw	0
 10107  01CE' 0080'              	movwf	(___fladd@b+2)^(0+256)
 10108  01CF' 3000               	movlw	0
 10109  01D0' 0080'              	movwf	(___fladd@b+1)^(0+256)
 10110  01D1' 3000               	movlw	0
 10111  01D2' 0080'              	movwf	___fladd@b^(0+256)
 10112  01D3' 0800'              	movf	___fladd@bexp^(0+256),w
 10113  01D4' 1903               	btfsc	3,2
 10114  01D5' 0180'              	clrf	___fladd@signs^(0+256)
 10115  01D6'                    l4685:
 10116  01D6' 1C00'              	btfss	___fladd@bexp^(0+256),0
 10117  01D7' 2800'              	goto	l4689
 10118  01D8' 1782'              	bsf	(___fladd@b^(0+256)+2),7
 10119  01D9' 2800'              	goto	l1389
 10120  01DA'                    l4689:
 10121  01DA' 307F               	movlw	127
 10122  01DB' 0023               	movlb	3	; select bank3
 10123  01DC' 0080'              	movwf	??___fladd^(0+384)
 10124  01DD' 0800'              	movf	??___fladd^(0+384),w
 10125  01DE' 0022               	movlb	2	; select bank2
 10126  01DF' 0582'              	andwf	(___fladd@b^(0+256)+2),f
 10127  01E0'                    l1389:
 10128  01E0' 3600'              	lsrf	___fladd@bexp^(0+256),w
 10129  01E1' 0083'              	movwf	(___fladd@b^(0+256)+3)
 10130  01E2' 1F80'              	btfss	___fladd@signs^(0+256),7
 10131  01E3' 0008               	return
 10132  01E4' 1783'              	bsf	(___fladd@b^(0+256)+3),7
 10133  01E5' 0008               	return
 10134  01E6'                    __end_of___fladd:
 10135                           
 10136                           	psect	intentry
 10137  0000'                    __pintentry:	
 10138 ;; *************** function _ISR *****************
 10139 ;; Defined at:
 10140 ;;		line 46 in file "main.c"
 10141 ;; Parameters:    Size  Location     Type
 10142 ;;		None
 10143 ;; Auto vars:     Size  Location     Type
 10144 ;;		None
 10145 ;; Return value:  Size  Location     Type
 10146 ;;                  1    wreg      void 
 10147 ;; Registers used:
 10148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10149 ;; Tracked objects:
 10150 ;;		On entry : 0/0
 10151 ;;		On exit  : 1C/0
 10152 ;;		Unchanged: 0/0
 10153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10156 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10157 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10158 ;;Total ram usage:        2 bytes
 10159 ;; Hardware stack levels used: 1
 10160 ;; Hardware stack levels required when called: 4
 10161 ;; This function calls:
 10162 ;;		_UART_send_string
 10163 ;;		_abs
 10164 ;;		_calculate_avg
 10165 ;;		_command_interpreter
 10166 ;;		_control_loop
 10167 ;;		_read_ADC
 10168 ;;		_timing
 10169 ;;		i1_UART_send_byte
 10170 ;; This function is called by:
 10171 ;;		Interrupt level 1
 10172 ;; This function uses a non-reentrant model
 10173 ;;
 10174                           
 10175  0000'                    _ISR:
 10176                           
 10177                           ;incstack = 0
 10178  0000' 147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10179                           
 10180                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10181  0001' 3180'              	pagesel	$
 10182                           
 10183                           ;main.c: 48:     if(RCIF)
 10184  0002' 0020               	movlb	0	; select bank0
 10185  0003' 1E91               	btfss	17,5	;volatile
 10186  0004' 2800'              	goto	i1l7503
 10187                           
 10188                           ;main.c: 49:     {;main.c: 50:         RCIF = 0;
 10189  0005' 1291               	bcf	17,5	;volatile
 10190                           
 10191                           ;main.c: 51:         if(RC1STAbits.OERR)
 10192  0006' 0023               	movlb	3	; select bank3
 10193  0007' 1C9D               	btfss	29,1	;volatile
 10194  0008' 2800'              	goto	i1l7501
 10195                           
 10196                           ;main.c: 52:         {;main.c: 53:             RC1STAbits.CREN = 0;
 10197  0009' 121D               	bcf	29,4	;volatile
 10198                           
 10199                           ;main.c: 54:             RC1STAbits.CREN = 1;
 10200  000A' 161D               	bsf	29,4	;volatile
 10201                           
 10202                           ;main.c: 56:             UART_send_string((char*)"OERR_ERROR");
 10203  000B' 3000'              	movlw	low (STR_1| (0+32768))
 10204  000C' 0081'              	movwf	UART_send_string@st_pt
 10205  000D' 3000'              	movlw	high (STR_1| (0+32768))
 10206  000E' 0082'              	movwf	UART_send_string@st_pt+1
 10207  000F' 3180' 2000' 3180'  	fcall	_UART_send_string
 10208                           
 10209                           ;main.c: 57:             state = IDLE;
 10210  0012' 0023               	movlb	3	; select bank3
 10211  0013' 0180'              	clrf	_state^(0+384)
 10212  0014' 0A80'              	incf	_state^(0+384),f
 10213                           
 10214                           ;main.c: 58:         }
 10215  0015' 2800'              	goto	i1l7503
 10216  0016'                    i1l7501:
 10217                           
 10218                           ;main.c: 60:         {;main.c: 61:             UART_send_byte(command_interpreter());
 10219  0016' 3180' 2000' 3180'  	fcall	_command_interpreter
 10220  0019' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 10221  001C'                    i1l7503:
 10222                           
 10223                           ;main.c: 65:     if(TMR1IF)
 10224  001C' 0020               	movlb	0	; select bank0
 10225  001D' 1C11               	btfss	17,0	;volatile
 10226  001E' 2800'              	goto	i1l664
 10227                           
 10228                           ;main.c: 66:     {;main.c: 67:         TMR1H = 0xE1;
 10229  001F' 30E1               	movlw	225
 10230  0020' 0097               	movwf	23	;volatile
 10231                           
 10232                           ;main.c: 68:         TMR1L = 0x83;
 10233  0021' 3083               	movlw	131
 10234  0022' 0096               	movwf	22	;volatile
 10235                           
 10236                           ;main.c: 69:         TMR1IF = 0;
 10237  0023' 1011               	bcf	17,0	;volatile
 10238                           
 10239                           ;main.c: 70:         v = read_ADC(0b01010);
 10240  0024' 300A               	movlw	10
 10241  0025' 0080'              	movwf	read_ADC@channel
 10242  0026' 3000               	movlw	0
 10243  0027' 0081'              	movwf	read_ADC@channel+1
 10244  0028' 3180' 2000' 3180'  	fcall	_read_ADC
 10245  002B' 0801'              	movf	?_read_ADC+1,w
 10246  002C' 0080'              	movwf	(_v+1)^(0+128)
 10247  002D' 0800'              	movf	?_read_ADC,w
 10248  002E' 0080'              	movwf	_v^(0+128)
 10249                           
 10250                           ;main.c: 71:         i = read_ADC(0b01100);
 10251  002F' 300C               	movlw	12
 10252  0030' 0080'              	movwf	read_ADC@channel
 10253  0031' 3000               	movlw	0
 10254  0032' 0081'              	movwf	read_ADC@channel+1
 10255  0033' 3180' 2000' 3180'  	fcall	_read_ADC
 10256  0036' 0801'              	movf	?_read_ADC+1,w
 10257  0037' 0080'              	movwf	(_i+1)^(0+128)
 10258  0038' 0800'              	movf	?_read_ADC,w
 10259  0039' 0080'              	movwf	_i^(0+128)
 10260                           
 10261                           ;main.c: 72:         i = (uint16_t) (abs ( 2048 - (int)i ) );
 10262  003A' 3000               	movlw	0
 10263  003B' 0080'              	movwf	??_ISR^(0+128)
 10264  003C' 3008               	movlw	8
 10265  003D' 0081'              	movwf	(??_ISR^(0+128)+1)
 10266  003E' 0800'              	movf	_i^(0+128),w
 10267  003F' 0200'              	subwf	??_ISR^(0+128),w
 10268  0040' 0080'              	movwf	abs@a
 10269  0041' 0800'              	movf	(_i+1)^(0+128),w
 10270  0042' 3B00'              	subwfb	(??_ISR+1)^(0+128),w
 10271  0043' 0081'              	movwf	abs@a+1
 10272  0044' 3180' 2000' 3180'  	fcall	_abs
 10273  0047' 0801'              	movf	?_abs+1,w
 10274  0048' 0021               	movlb	1	; select bank1
 10275  0049' 0080'              	movwf	(_i+1)^(0+128)
 10276  004A' 0800'              	movf	?_abs,w
 10277  004B' 0080'              	movwf	_i^(0+128)
 10278                           
 10279                           ;main.c: 73:         if (conv) control_loop();
 10280  004C' 0800'              	movf	_conv^(0+128),w
 10281  004D' 1903               	btfsc	3,2
 10282  004E' 2800'              	goto	i1l7519
 10283  004F' 3180' 2000' 3180'  	fcall	_control_loop
 10284  0052' 2800'              	goto	i1l7521
 10285  0053'                    i1l7519:
 10286  0053' 3000               	movlw	0
 10287  0054' 0024               	movlb	4	; select bank4
 10288  0055' 0080'              	movwf	(_pidi+3)^(0+512)
 10289  0056' 3000               	movlw	0
 10290  0057' 0080'              	movwf	(_pidi+2)^(0+512)
 10291  0058' 3000               	movlw	0
 10292  0059' 0080'              	movwf	(_pidi+1)^(0+512)
 10293  005A' 3000               	movlw	0
 10294  005B' 0080'              	movwf	_pidi^(0+512)
 10295  005C'                    i1l7521:
 10296                           
 10297                           ;main.c: 75:         calculate_avg();
 10298  005C' 3180' 2000' 3180'  	fcall	_calculate_avg
 10299                           
 10300                           ;main.c: 76:         timing();
 10301  005F' 3180' 2000' 3180'  	fcall	_timing
 10302                           
 10303                           ;main.c: 77:         if (TMR1IF) UART_send_string((char*)"TIMING_ERROR");
 10304  0062' 0020               	movlb	0	; select bank0
 10305  0063' 1C11               	btfss	17,0	;volatile
 10306  0064' 2800'              	goto	i1l664
 10307  0065' 3000'              	movlw	low (STR_2| (0+32768))
 10308  0066' 0081'              	movwf	UART_send_string@st_pt
 10309  0067' 3000'              	movlw	high (STR_2| (0+32768))
 10310  0068' 0082'              	movwf	UART_send_string@st_pt+1
 10311  0069' 3180' 2000'        	fcall	_UART_send_string
 10312  006B'                    i1l664:
 10313  006B' 107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10314  006C' 0009               	retfie
 10315  006D'                    __end_of_ISR:
 10316                           
 10317                           	psect	text30
 10318  0000'                    __ptext30:	
 10319 ;; *************** function _timing *****************
 10320 ;; Defined at:
 10321 ;;		line 367 in file "charger_discharger.c"
 10322 ;; Parameters:    Size  Location     Type
 10323 ;;		None
 10324 ;; Auto vars:     Size  Location     Type
 10325 ;;		None
 10326 ;; Return value:  Size  Location     Type
 10327 ;;                  1    wreg      void 
 10328 ;; Registers used:
 10329 ;;		wreg, status,2, status,0
 10330 ;; Tracked objects:
 10331 ;;		On entry : 1D/1
 10332 ;;		On exit  : 1D/1
 10333 ;;		Unchanged: 0/0
 10334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10339 ;;Total ram usage:        0 bytes
 10340 ;; Hardware stack levels used: 1
 10341 ;; This function calls:
 10342 ;;		Nothing
 10343 ;; This function is called by:
 10344 ;;		_ISR
 10345 ;; This function uses a non-reentrant model
 10346 ;;
 10347                           
 10348  0000'                    _timing:	
 10349                           ;psect for function _timing
 10350                           
 10351                           
 10352                           ;charger_discharger.c: 369:     if(!count)
 10353                           
 10354                           ;incstack = 0
 10355                           ; Regs used in _timing: [wreg+status,2+status,0]
 10356  0000' 0021               	movlb	1	; select bank1
 10357  0001' 0800'              	movf	_count^(0+128),w
 10358  0002' 0400'              	iorwf	(_count+1)^(0+128),w
 10359  0003' 1D03               	btfss	3,2
 10360  0004' 2800'              	goto	i1l6897
 10361                           
 10362                           ;charger_discharger.c: 370:     {;charger_discharger.c: 371:         SECF = 1;
 10363  0005' 0023               	movlb	3	; select bank3
 10364  0006' 0180'              	clrf	_SECF^(0+384)
 10365  0007' 0A80'              	incf	_SECF^(0+384),f
 10366                           
 10367                           ;charger_discharger.c: 372:         count = 1024;
 10368  0008' 3000               	movlw	0
 10369  0009' 0021               	movlb	1	; select bank1
 10370  000A' 0080'              	movwf	_count^(0+128)
 10371  000B' 3004               	movlw	4
 10372  000C' 0081'              	movwf	(_count^(0+128)+1)
 10373                           
 10374                           ;charger_discharger.c: 373:         second++;
 10375  000D' 3001               	movlw	1
 10376  000E' 0023               	movlb	3	; select bank3
 10377  000F' 0780'              	addwf	_second^(0+384),f
 10378  0010' 3000               	movlw	0
 10379  0011' 3D80'              	addwfc	(_second+1)^(0+384),f
 10380                           
 10381                           ;charger_discharger.c: 374:     }else
 10382  0012' 0008               	return
 10383  0013'                    i1l6897:
 10384                           
 10385                           ;charger_discharger.c: 375:     {;charger_discharger.c: 376:         count--;
 10386  0013' 3001               	movlw	1
 10387  0014' 0280'              	subwf	_count^(0+128),f
 10388  0015' 3000               	movlw	0
 10389  0016' 3B80'              	subwfb	(_count+1)^(0+128),f
 10390  0017' 0008               	return
 10391  0018'                    __end_of_timing:
 10392                           
 10393                           	psect	text31
 10394  0000'                    __ptext31:	
 10395 ;; *************** function _read_ADC *****************
 10396 ;; Defined at:
 10397 ;;		line 353 in file "charger_discharger.c"
 10398 ;; Parameters:    Size  Location     Type
 10399 ;;  channel         2    0[COMMON] unsigned short 
 10400 ;; Auto vars:     Size  Location     Type
 10401 ;;  ad_res          2    9[COMMON] unsigned short 
 10402 ;; Return value:  Size  Location     Type
 10403 ;;                  2    0[COMMON] unsigned short 
 10404 ;; Registers used:
 10405 ;;		wreg, status,2, status,0
 10406 ;; Tracked objects:
 10407 ;;		On entry : 1E/0
 10408 ;;		On exit  : 1F/1
 10409 ;;		Unchanged: 0/0
 10410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10413 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10414 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10415 ;;Total ram usage:       11 bytes
 10416 ;; Hardware stack levels used: 1
 10417 ;; This function calls:
 10418 ;;		Nothing
 10419 ;; This function is called by:
 10420 ;;		_ISR
 10421 ;; This function uses a non-reentrant model
 10422 ;;
 10423                           
 10424  0000'                    _read_ADC:	
 10425                           ;psect for function _read_ADC
 10426                           
 10427                           
 10428                           ;charger_discharger.c: 356:     _delay((unsigned long)((10)*(32000000/4000000.0)));
 10429                           
 10430                           ;incstack = 0
 10431                           ; Regs used in _read_ADC: [wreg+status,2+status,0]
 10432  0000' 301A               	movlw	26
 10433  0001'                    u786_27:
 10434  0001' 0B89               	decfsz	9,f
 10435  0002' 2800'              	goto	u786_27
 10436  0003' 3200               	nop2
 10437                           
 10438                           ;charger_discharger.c: 357:     ADCON0bits.CHS = channel;
 10439  0004' 0800'              	movf	read_ADC@channel,w
 10440  0005' 0082'              	movwf	??_read_ADC
 10441  0006' 0D82'              	rlf	??_read_ADC,f
 10442  0007' 0D82'              	rlf	??_read_ADC,f
 10443  0008' 0021               	movlb	1	; select bank1
 10444  0009' 081D               	movf	29,w	;volatile
 10445  000A' 0602'              	xorwf	??_read_ADC,w
 10446  000B' 3983               	andlw	-125
 10447  000C' 0602'              	xorwf	??_read_ADC,w
 10448  000D' 009D               	movwf	29	;volatile
 10449                           
 10450                           ;charger_discharger.c: 358:     _delay((unsigned long)((10)*(32000000/4000000.0)));
 10451  000E' 301A               	movlw	26
 10452  000F'                    u787_27:
 10453  000F' 0B89               	decfsz	9,f
 10454  0010' 2800'              	goto	u787_27
 10455  0011' 3200               	nop2
 10456                           
 10457                           ;charger_discharger.c: 359:     GO_nDONE = 1;
 10458  0012' 0021               	movlb	1	; select bank1
 10459  0013' 149D               	bsf	29,1	;volatile
 10460  0014'                    i1l399:	
 10461                           ;charger_discharger.c: 360:     while(GO_nDONE);
 10462                           
 10463  0014' 189D               	btfsc	29,1	;volatile
 10464  0015' 2800'              	goto	i1l399
 10465                           
 10466                           ;charger_discharger.c: 361:     ad_res = (uint16_t)((ADRESL & 0xFF)|((ADRESH << 8) & 0xF
      +                          00));
 10467  0016' 081C               	movf	28,w	;volatile
 10468  0017' 0082'              	movwf	??_read_ADC
 10469  0018' 0183'              	clrf	??_read_ADC+1
 10470  0019' 0802'              	movf	??_read_ADC,w
 10471  001A' 0083'              	movwf	??_read_ADC+1
 10472  001B' 0182'              	clrf	??_read_ADC
 10473  001C' 3000               	movlw	0
 10474  001D' 0502'              	andwf	??_read_ADC,w
 10475  001E' 0085'              	movwf	??_read_ADC+3
 10476  001F' 300F               	movlw	15
 10477  0020' 0503'              	andwf	??_read_ADC+1,w
 10478  0021' 0086'              	movwf	??_read_ADC+4
 10479  0022' 0805'              	movf	??_read_ADC+3,w
 10480  0023' 041B               	iorwf	27,w	;volatile
 10481  0024' 0087'              	movwf	??_read_ADC+5
 10482  0025' 0806'              	movf	??_read_ADC+4,w
 10483  0026' 0088'              	movwf	??_read_ADC+6
 10484  0027' 0807'              	movf	??_read_ADC+5,w
 10485  0028' 0089'              	movwf	read_ADC@ad_res
 10486  0029' 0808'              	movf	??_read_ADC+6,w
 10487  002A' 008A'              	movwf	read_ADC@ad_res+1
 10488                           
 10489                           ;charger_discharger.c: 362:     return ad_res;
 10490  002B' 080A'              	movf	read_ADC@ad_res+1,w
 10491  002C' 0081'              	movwf	?_read_ADC+1
 10492  002D' 0809'              	movf	read_ADC@ad_res,w
 10493  002E' 0080'              	movwf	?_read_ADC
 10494  002F' 0008               	return
 10495  0030'                    __end_of_read_ADC:
 10496                           
 10497                           	psect	text32
 10498  0000'                    __ptext32:	
 10499 ;; *************** function _control_loop *****************
 10500 ;; Defined at:
 10501 ;;		line 257 in file "charger_discharger.c"
 10502 ;; Parameters:    Size  Location     Type
 10503 ;;		None
 10504 ;; Auto vars:     Size  Location     Type
 10505 ;;		None
 10506 ;; Return value:  Size  Location     Type
 10507 ;;                  1    wreg      void 
 10508 ;; Registers used:
 10509 ;;		wreg, status,2, status,0, pclath, cstack
 10510 ;; Tracked objects:
 10511 ;;		On entry : 1F/1
 10512 ;;		On exit  : 1F/10
 10513 ;;		Unchanged: 0/0
 10514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10519 ;;Total ram usage:        0 bytes
 10520 ;; Hardware stack levels used: 1
 10521 ;; Hardware stack levels required when called: 3
 10522 ;; This function calls:
 10523 ;;		_pid
 10524 ;;		i1___xxtofl
 10525 ;;		i1_set_DC
 10526 ;; This function is called by:
 10527 ;;		_ISR
 10528 ;; This function uses a non-reentrant model
 10529 ;;
 10530                           
 10531  0000'                    _control_loop:	
 10532                           ;psect for function _control_loop
 10533                           
 10534                           
 10535                           ;charger_discharger.c: 259:     if(!cmode)
 10536                           
 10537                           ;incstack = 0
 10538                           ; Regs used in _control_loop: [wreg+status,2+status,0+pclath+cstack]
 10539  0000' 0800'              	movf	_cmode^(0+128),w
 10540  0001' 1D03               	btfss	3,2
 10541  0002' 2800'              	goto	i1l6839
 10542                           
 10543                           ;charger_discharger.c: 260:     {;charger_discharger.c: 261:         pid(v, vref);
 10544  0003' 0800'              	movf	_v^(0+128),w
 10545  0004' 0080'              	movwf	i1___xxtofl@val
 10546  0005' 0800'              	movf	(_v+1)^(0+128),w
 10547  0006' 0081'              	movwf	i1___xxtofl@val+1
 10548  0007' 0182'              	clrf	i1___xxtofl@val+2
 10549  0008' 0183'              	clrf	i1___xxtofl@val+3
 10550  0009' 3000               	movlw	0
 10551  000A' 3180' 2000' 3180'  	fcall	i1___xxtofl
 10552  000D' 0803'              	movf	?i1___xxtofl+3,w
 10553  000E' 0020               	movlb	0	; select bank0
 10554  000F' 00B9'              	movwf	pid@feedback+3
 10555  0010' 0802'              	movf	?i1___xxtofl+2,w
 10556  0011' 00B8'              	movwf	pid@feedback+2
 10557  0012' 0801'              	movf	?i1___xxtofl+1,w
 10558  0013' 00B7'              	movwf	pid@feedback+1
 10559  0014' 0800'              	movf	?i1___xxtofl,w
 10560  0015' 00B6'              	movwf	pid@feedback
 10561  0016' 0024               	movlb	4	; select bank4
 10562  0017' 0800'              	movf	(_vref+3)^(0+512),w
 10563  0018' 0020               	movlb	0	; select bank0
 10564  0019' 00BD'              	movwf	pid@setpoint+3
 10565  001A' 0024               	movlb	4	; select bank4
 10566  001B' 0800'              	movf	(_vref+2)^(0+512),w
 10567  001C' 0020               	movlb	0	; select bank0
 10568  001D' 00BC'              	movwf	pid@setpoint+2
 10569  001E' 0024               	movlb	4	; select bank4
 10570  001F' 0800'              	movf	(_vref+1)^(0+512),w
 10571  0020' 0020               	movlb	0	; select bank0
 10572  0021' 00BB'              	movwf	pid@setpoint+1
 10573  0022' 0024               	movlb	4	; select bank4
 10574  0023' 0800'              	movf	_vref^(0+512),w
 10575  0024' 0020               	movlb	0	; select bank0
 10576  0025' 2800'              	goto	L10
 10577  0026'                    i1l6839:	
 10578                           ;charger_discharger.c: 262:     }else
 10579                           
 10580                           
 10581                           ;charger_discharger.c: 263:     {;charger_discharger.c: 264:         pid(i, iref);
 10582  0026' 0800'              	movf	_i^(0+128),w
 10583  0027' 0080'              	movwf	i1___xxtofl@val
 10584  0028' 0800'              	movf	(_i+1)^(0+128),w
 10585  0029' 0081'              	movwf	i1___xxtofl@val+1
 10586  002A' 0182'              	clrf	i1___xxtofl@val+2
 10587  002B' 0183'              	clrf	i1___xxtofl@val+3
 10588  002C' 3000               	movlw	0
 10589  002D' 3180' 2000' 3180'  	fcall	i1___xxtofl
 10590  0030' 0803'              	movf	?i1___xxtofl+3,w
 10591  0031' 0020               	movlb	0	; select bank0
 10592  0032' 00B9'              	movwf	pid@feedback+3
 10593  0033' 0802'              	movf	?i1___xxtofl+2,w
 10594  0034' 00B8'              	movwf	pid@feedback+2
 10595  0035' 0801'              	movf	?i1___xxtofl+1,w
 10596  0036' 00B7'              	movwf	pid@feedback+1
 10597  0037' 0800'              	movf	?i1___xxtofl,w
 10598  0038' 00B6'              	movwf	pid@feedback
 10599  0039' 0021               	movlb	1	; select bank1
 10600  003A' 0800'              	movf	_iref^(0+128),w
 10601  003B' 0080'              	movwf	i1___xxtofl@val
 10602  003C' 0800'              	movf	(_iref+1)^(0+128),w
 10603  003D' 0081'              	movwf	i1___xxtofl@val+1
 10604  003E' 0182'              	clrf	i1___xxtofl@val+2
 10605  003F' 0183'              	clrf	i1___xxtofl@val+3
 10606  0040' 3000               	movlw	0
 10607  0041' 3180' 2000' 3180'  	fcall	i1___xxtofl
 10608  0044' 0803'              	movf	?i1___xxtofl+3,w
 10609  0045' 0020               	movlb	0	; select bank0
 10610  0046' 00BD'              	movwf	pid@setpoint+3
 10611  0047' 0802'              	movf	?i1___xxtofl+2,w
 10612  0048' 00BC'              	movwf	pid@setpoint+2
 10613  0049' 0801'              	movf	?i1___xxtofl+1,w
 10614  004A' 00BB'              	movwf	pid@setpoint+1
 10615  004B' 0800'              	movf	?i1___xxtofl,w
 10616  004C'                    L10:
 10617  004C' 00BA'              	movwf	pid@setpoint
 10618  004D' 3180' 2000' 3180'  	fcall	_pid
 10619                           
 10620                           ;charger_discharger.c: 266:     set_DC();
 10621                           
 10622                           ;charger_discharger.c: 265:     }
 10623  0050' 3180' 2000'        	fcall	i1_set_DC
 10624  0052' 0008               	return
 10625  0053'                    __end_of_control_loop:
 10626                           
 10627                           	psect	text33
 10628  0000'                    __ptext33:	
 10629 ;; *************** function _pid *****************
 10630 ;; Defined at:
 10631 ;;		line 273 in file "charger_discharger.c"
 10632 ;; Parameters:    Size  Location     Type
 10633 ;;  feedback        4   54[BANK0 ] float 
 10634 ;;  setpoint        4   58[BANK0 ] float 
 10635 ;; Auto vars:     Size  Location     Type
 10636 ;;		None
 10637 ;; Return value:  Size  Location     Type
 10638 ;;                  1    wreg      void 
 10639 ;; Registers used:
 10640 ;;		wreg, status,2, status,0, pclath, cstack
 10641 ;; Tracked objects:
 10642 ;;		On entry : 1F/0
 10643 ;;		On exit  : 1D/1
 10644 ;;		Unchanged: 0/0
 10645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10646 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10647 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10649 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10650 ;;Total ram usage:       20 bytes
 10651 ;; Hardware stack levels used: 1
 10652 ;; Hardware stack levels required when called: 2
 10653 ;; This function calls:
 10654 ;;		___flsub
 10655 ;;		i1___fladd
 10656 ;;		i1___flge
 10657 ;;		i1___flmul
 10658 ;; This function is called by:
 10659 ;;		_control_loop
 10660 ;; This function uses a non-reentrant model
 10661 ;;
 10662                           
 10663  0000'                    _pid:	
 10664                           ;psect for function _pid
 10665                           
 10666                           
 10667                           ;charger_discharger.c: 273: void pid(float feedback, float setpoint);charger_discharger.
      +                          c: 274: {;charger_discharger.c: 275:     pidt += kd * (setpoint - feedback - er);
 10668                           
 10669                           ;incstack = 0
 10670                           ; Regs used in _pid: [wreg+status,2+status,0+pclath+cstack]
 10671  0000' 083D'              	movf	pid@setpoint+3,w
 10672  0001' 009B'              	movwf	___flsub@b+3
 10673  0002' 083C'              	movf	pid@setpoint+2,w
 10674  0003' 009A'              	movwf	___flsub@b+2
 10675  0004' 083B'              	movf	pid@setpoint+1,w
 10676  0005' 0099'              	movwf	___flsub@b+1
 10677  0006' 083A'              	movf	pid@setpoint,w
 10678  0007' 0098'              	movwf	___flsub@b
 10679  0008' 0839'              	movf	pid@feedback+3,w
 10680  0009' 0097'              	movwf	___flsub@a+3
 10681  000A' 0838'              	movf	pid@feedback+2,w
 10682  000B' 0096'              	movwf	___flsub@a+2
 10683  000C' 0837'              	movf	pid@feedback+1,w
 10684  000D' 0095'              	movwf	___flsub@a+1
 10685  000E' 0836'              	movf	pid@feedback,w
 10686  000F' 0094'              	movwf	___flsub@a
 10687  0010' 3180' 2000' 3180'  	fcall	___flsub
 10688  0013' 0817'              	movf	?___flsub+3,w
 10689  0014' 00C1'              	movwf	_pid$1605+3
 10690  0015' 0816'              	movf	?___flsub+2,w
 10691  0016' 00C0'              	movwf	_pid$1605+2
 10692  0017' 0815'              	movf	?___flsub+1,w
 10693  0018' 00BF'              	movwf	_pid$1605+1
 10694  0019' 0814'              	movf	?___flsub,w
 10695  001A' 00BE'              	movwf	_pid$1605
 10696                           
 10697                           ;charger_discharger.c: 273: void pid(float feedback, float setpoint);charger_discharger.
      +                          c: 274: {;charger_discharger.c: 275:     pidt += kd * (setpoint - feedback - er);
 10698  001B' 0841'              	movf	_pid$1605+3,w
 10699  001C' 009B'              	movwf	___flsub@b+3
 10700  001D' 0840'              	movf	_pid$1605+2,w
 10701  001E' 009A'              	movwf	___flsub@b+2
 10702  001F' 083F'              	movf	_pid$1605+1,w
 10703  0020' 0099'              	movwf	___flsub@b+1
 10704  0021' 083E'              	movf	_pid$1605,w
 10705  0022' 0098'              	movwf	___flsub@b
 10706  0023' 0021               	movlb	1	; select bank1
 10707  0024' 0800'              	movf	(_er+3)^(0+128),w
 10708  0025' 0020               	movlb	0	; select bank0
 10709  0026' 0097'              	movwf	___flsub@a+3
 10710  0027' 0021               	movlb	1	; select bank1
 10711  0028' 0800'              	movf	(_er+2)^(0+128),w
 10712  0029' 0020               	movlb	0	; select bank0
 10713  002A' 0096'              	movwf	___flsub@a+2
 10714  002B' 0021               	movlb	1	; select bank1
 10715  002C' 0800'              	movf	(_er+1)^(0+128),w
 10716  002D' 0020               	movlb	0	; select bank0
 10717  002E' 0095'              	movwf	___flsub@a+1
 10718  002F' 0021               	movlb	1	; select bank1
 10719  0030' 0800'              	movf	_er^(0+128),w
 10720  0031' 0020               	movlb	0	; select bank0
 10721  0032' 0094'              	movwf	___flsub@a
 10722  0033' 3180' 2000' 3180'  	fcall	___flsub
 10723  0036' 0817'              	movf	?___flsub+3,w
 10724  0037' 00A3'              	movwf	i1___flmul@a+3
 10725  0038' 0816'              	movf	?___flsub+2,w
 10726  0039' 00A2'              	movwf	i1___flmul@a+2
 10727  003A' 0815'              	movf	?___flsub+1,w
 10728  003B' 00A1'              	movwf	i1___flmul@a+1
 10729  003C' 0814'              	movf	?___flsub,w
 10730  003D' 00A0'              	movwf	i1___flmul@a
 10731  003E' 0024               	movlb	4	; select bank4
 10732  003F' 0800'              	movf	(_kd+3)^(0+512),w
 10733  0040' 0020               	movlb	0	; select bank0
 10734  0041' 009F'              	movwf	i1___flmul@b+3
 10735  0042' 0024               	movlb	4	; select bank4
 10736  0043' 0800'              	movf	(_kd+2)^(0+512),w
 10737  0044' 0020               	movlb	0	; select bank0
 10738  0045' 009E'              	movwf	i1___flmul@b+2
 10739  0046' 0024               	movlb	4	; select bank4
 10740  0047' 0800'              	movf	(_kd+1)^(0+512),w
 10741  0048' 0020               	movlb	0	; select bank0
 10742  0049' 009D'              	movwf	i1___flmul@b+1
 10743  004A' 0024               	movlb	4	; select bank4
 10744  004B' 0800'              	movf	_kd^(0+512),w
 10745  004C' 0020               	movlb	0	; select bank0
 10746  004D' 009C'              	movwf	i1___flmul@b
 10747  004E' 3180' 2000' 3180'  	fcall	i1___flmul
 10748  0051' 081F'              	movf	?i1___flmul+3,w
 10749  0052' 00C5'              	movwf	_pid$1746+3
 10750  0053' 081E'              	movf	?i1___flmul+2,w
 10751  0054' 00C4'              	movwf	_pid$1746+2
 10752  0055' 081D'              	movf	?i1___flmul+1,w
 10753  0056' 00C3'              	movwf	_pid$1746+1
 10754  0057' 081C'              	movf	?i1___flmul,w
 10755  0058' 00C2'              	movwf	_pid$1746
 10756                           
 10757                           ;charger_discharger.c: 273: void pid(float feedback, float setpoint);charger_discharger.
      +                          c: 274: {;charger_discharger.c: 275:     pidt += kd * (setpoint - feedback - er);
 10758  0059' 0845'              	movf	_pid$1746+3,w
 10759  005A' 0083'              	movwf	i1___fladd@b+3
 10760  005B' 0844'              	movf	_pid$1746+2,w
 10761  005C' 0082'              	movwf	i1___fladd@b+2
 10762  005D' 0843'              	movf	_pid$1746+1,w
 10763  005E' 0081'              	movwf	i1___fladd@b+1
 10764  005F' 0842'              	movf	_pid$1746,w
 10765  0060' 0080'              	movwf	i1___fladd@b
 10766  0061' 0023               	movlb	3	; select bank3
 10767  0062' 0800'              	movf	(_pidt+3)^(0+384),w
 10768  0063' 0020               	movlb	0	; select bank0
 10769  0064' 0087'              	movwf	i1___fladd@a+3
 10770  0065' 0023               	movlb	3	; select bank3
 10771  0066' 0800'              	movf	(_pidt+2)^(0+384),w
 10772  0067' 0020               	movlb	0	; select bank0
 10773  0068' 0086'              	movwf	i1___fladd@a+2
 10774  0069' 0023               	movlb	3	; select bank3
 10775  006A' 0800'              	movf	(_pidt+1)^(0+384),w
 10776  006B' 0020               	movlb	0	; select bank0
 10777  006C' 0085'              	movwf	i1___fladd@a+1
 10778  006D' 0023               	movlb	3	; select bank3
 10779  006E' 0800'              	movf	_pidt^(0+384),w
 10780  006F' 0020               	movlb	0	; select bank0
 10781  0070' 0084'              	movwf	i1___fladd@a
 10782  0071' 3180' 2000' 3180'  	fcall	i1___fladd
 10783  0074' 0803'              	movf	?i1___fladd+3,w
 10784  0075' 0023               	movlb	3	; select bank3
 10785  0076' 0080'              	movwf	(_pidt+3)^(0+384)
 10786  0077' 0020               	movlb	0	; select bank0
 10787  0078' 0802'              	movf	?i1___fladd+2,w
 10788  0079' 0023               	movlb	3	; select bank3
 10789  007A' 0080'              	movwf	(_pidt+2)^(0+384)
 10790  007B' 0020               	movlb	0	; select bank0
 10791  007C' 0801'              	movf	?i1___fladd+1,w
 10792  007D' 0023               	movlb	3	; select bank3
 10793  007E' 0080'              	movwf	(_pidt+1)^(0+384)
 10794  007F' 0020               	movlb	0	; select bank0
 10795  0080' 0800'              	movf	?i1___fladd,w
 10796  0081' 0023               	movlb	3	; select bank3
 10797  0082' 0080'              	movwf	_pidt^(0+384)
 10798                           
 10799                           ;charger_discharger.c: 277:     er = setpoint - feedback;
 10800  0083' 0020               	movlb	0	; select bank0
 10801  0084' 0839'              	movf	pid@feedback+3,w
 10802  0085' 0097'              	movwf	___flsub@a+3
 10803  0086' 0838'              	movf	pid@feedback+2,w
 10804  0087' 0096'              	movwf	___flsub@a+2
 10805  0088' 0837'              	movf	pid@feedback+1,w
 10806  0089' 0095'              	movwf	___flsub@a+1
 10807  008A' 0836'              	movf	pid@feedback,w
 10808  008B' 0094'              	movwf	___flsub@a
 10809  008C' 083D'              	movf	pid@setpoint+3,w
 10810  008D' 009B'              	movwf	___flsub@b+3
 10811  008E' 083C'              	movf	pid@setpoint+2,w
 10812  008F' 009A'              	movwf	___flsub@b+2
 10813  0090' 083B'              	movf	pid@setpoint+1,w
 10814  0091' 0099'              	movwf	___flsub@b+1
 10815  0092' 083A'              	movf	pid@setpoint,w
 10816  0093' 0098'              	movwf	___flsub@b
 10817  0094' 3180' 2000' 3180'  	fcall	___flsub
 10818  0097' 0817'              	movf	?___flsub+3,w
 10819  0098' 0021               	movlb	1	; select bank1
 10820  0099' 0080'              	movwf	(_er+3)^(0+128)
 10821  009A' 0020               	movlb	0	; select bank0
 10822  009B' 0816'              	movf	?___flsub+2,w
 10823  009C' 0021               	movlb	1	; select bank1
 10824  009D' 0080'              	movwf	(_er+2)^(0+128)
 10825  009E' 0020               	movlb	0	; select bank0
 10826  009F' 0815'              	movf	?___flsub+1,w
 10827  00A0' 0021               	movlb	1	; select bank1
 10828  00A1' 0080'              	movwf	(_er+1)^(0+128)
 10829  00A2' 0020               	movlb	0	; select bank0
 10830  00A3' 0814'              	movf	?___flsub,w
 10831  00A4' 0021               	movlb	1	; select bank1
 10832  00A5' 0080'              	movwf	_er^(0+128)
 10833                           
 10834                           ;charger_discharger.c: 278:     if(er > 1000) er = 1000;
 10835  00A6' 3044               	movlw	68
 10836  00A7' 0083'              	movwf	i1___flge@ff1+3
 10837  00A8' 307A               	movlw	122
 10838  00A9' 0082'              	movwf	i1___flge@ff1+2
 10839  00AA' 3000               	movlw	0
 10840  00AB' 0081'              	movwf	i1___flge@ff1+1
 10841  00AC' 3000               	movlw	0
 10842  00AD' 0080'              	movwf	i1___flge@ff1
 10843  00AE' 0800'              	movf	(_er+3)^(0+128),w
 10844  00AF' 0087'              	movwf	i1___flge@ff2+3
 10845  00B0' 0800'              	movf	(_er+2)^(0+128),w
 10846  00B1' 0086'              	movwf	i1___flge@ff2+2
 10847  00B2' 0800'              	movf	(_er+1)^(0+128),w
 10848  00B3' 0085'              	movwf	i1___flge@ff2+1
 10849  00B4' 0800'              	movf	_er^(0+128),w
 10850  00B5' 0084'              	movwf	i1___flge@ff2
 10851  00B6' 3180' 2000' 3180'  	fcall	i1___flge
 10852  00B9' 1803               	btfsc	3,0
 10853  00BA' 2800'              	goto	i1l5981
 10854  00BB' 3044               	movlw	68
 10855  00BC' 0021               	movlb	1	; select bank1
 10856  00BD' 0080'              	movwf	(_er+3)^(0+128)
 10857  00BE' 307A               	movlw	122
 10858  00BF' 0080'              	movwf	(_er+2)^(0+128)
 10859  00C0' 3000               	movlw	0
 10860  00C1' 0080'              	movwf	(_er+1)^(0+128)
 10861  00C2' 3000               	movlw	0
 10862  00C3' 0080'              	movwf	_er^(0+128)
 10863  00C4'                    i1l5981:
 10864                           
 10865                           ;charger_discharger.c: 279:     if(er < -1000) er = -1000;
 10866  00C4' 0021               	movlb	1	; select bank1
 10867  00C5' 0800'              	movf	(_er+3)^(0+128),w
 10868  00C6' 0083'              	movwf	i1___flge@ff1+3
 10869  00C7' 0800'              	movf	(_er+2)^(0+128),w
 10870  00C8' 0082'              	movwf	i1___flge@ff1+2
 10871  00C9' 0800'              	movf	(_er+1)^(0+128),w
 10872  00CA' 0081'              	movwf	i1___flge@ff1+1
 10873  00CB' 0800'              	movf	_er^(0+128),w
 10874  00CC' 0080'              	movwf	i1___flge@ff1
 10875  00CD' 30C4               	movlw	196
 10876  00CE' 0087'              	movwf	i1___flge@ff2+3
 10877  00CF' 307A               	movlw	122
 10878  00D0' 0086'              	movwf	i1___flge@ff2+2
 10879  00D1' 3000               	movlw	0
 10880  00D2' 0085'              	movwf	i1___flge@ff2+1
 10881  00D3' 3000               	movlw	0
 10882  00D4' 0084'              	movwf	i1___flge@ff2
 10883  00D5' 3180' 2000' 3180'  	fcall	i1___flge
 10884  00D8' 1803               	btfsc	3,0
 10885  00D9' 2800'              	goto	i1l5985
 10886  00DA' 30C4               	movlw	196
 10887  00DB' 0021               	movlb	1	; select bank1
 10888  00DC' 0080'              	movwf	(_er+3)^(0+128)
 10889  00DD' 307A               	movlw	122
 10890  00DE' 0080'              	movwf	(_er+2)^(0+128)
 10891  00DF' 3000               	movlw	0
 10892  00E0' 0080'              	movwf	(_er+1)^(0+128)
 10893  00E1' 3000               	movlw	0
 10894  00E2' 0080'              	movwf	_er^(0+128)
 10895  00E3'                    i1l5985:
 10896                           
 10897                           ;charger_discharger.c: 282:  pidi += (ki * er);
 10898  00E3' 0024               	movlb	4	; select bank4
 10899  00E4' 0800'              	movf	(_ki+3)^(0+512),w
 10900  00E5' 0020               	movlb	0	; select bank0
 10901  00E6' 00A3'              	movwf	i1___flmul@a+3
 10902  00E7' 0024               	movlb	4	; select bank4
 10903  00E8' 0800'              	movf	(_ki+2)^(0+512),w
 10904  00E9' 0020               	movlb	0	; select bank0
 10905  00EA' 00A2'              	movwf	i1___flmul@a+2
 10906  00EB' 0024               	movlb	4	; select bank4
 10907  00EC' 0800'              	movf	(_ki+1)^(0+512),w
 10908  00ED' 0020               	movlb	0	; select bank0
 10909  00EE' 00A1'              	movwf	i1___flmul@a+1
 10910  00EF' 0024               	movlb	4	; select bank4
 10911  00F0' 0800'              	movf	_ki^(0+512),w
 10912  00F1' 0020               	movlb	0	; select bank0
 10913  00F2' 00A0'              	movwf	i1___flmul@a
 10914  00F3' 0021               	movlb	1	; select bank1
 10915  00F4' 0800'              	movf	(_er+3)^(0+128),w
 10916  00F5' 0020               	movlb	0	; select bank0
 10917  00F6' 009F'              	movwf	i1___flmul@b+3
 10918  00F7' 0021               	movlb	1	; select bank1
 10919  00F8' 0800'              	movf	(_er+2)^(0+128),w
 10920  00F9' 0020               	movlb	0	; select bank0
 10921  00FA' 009E'              	movwf	i1___flmul@b+2
 10922  00FB' 0021               	movlb	1	; select bank1
 10923  00FC' 0800'              	movf	(_er+1)^(0+128),w
 10924  00FD' 0020               	movlb	0	; select bank0
 10925  00FE' 009D'              	movwf	i1___flmul@b+1
 10926  00FF' 0021               	movlb	1	; select bank1
 10927  0100' 0800'              	movf	_er^(0+128),w
 10928  0101' 0020               	movlb	0	; select bank0
 10929  0102' 009C'              	movwf	i1___flmul@b
 10930  0103' 3180' 2000' 3180'  	fcall	i1___flmul
 10931  0106' 081F'              	movf	?i1___flmul+3,w
 10932  0107' 0083'              	movwf	i1___fladd@b+3
 10933  0108' 081E'              	movf	?i1___flmul+2,w
 10934  0109' 0082'              	movwf	i1___fladd@b+2
 10935  010A' 081D'              	movf	?i1___flmul+1,w
 10936  010B' 0081'              	movwf	i1___fladd@b+1
 10937  010C' 081C'              	movf	?i1___flmul,w
 10938  010D' 0080'              	movwf	i1___fladd@b
 10939  010E' 0024               	movlb	4	; select bank4
 10940  010F' 0800'              	movf	(_pidi+3)^(0+512),w
 10941  0110' 0020               	movlb	0	; select bank0
 10942  0111' 0087'              	movwf	i1___fladd@a+3
 10943  0112' 0024               	movlb	4	; select bank4
 10944  0113' 0800'              	movf	(_pidi+2)^(0+512),w
 10945  0114' 0020               	movlb	0	; select bank0
 10946  0115' 0086'              	movwf	i1___fladd@a+2
 10947  0116' 0024               	movlb	4	; select bank4
 10948  0117' 0800'              	movf	(_pidi+1)^(0+512),w
 10949  0118' 0020               	movlb	0	; select bank0
 10950  0119' 0085'              	movwf	i1___fladd@a+1
 10951  011A' 0024               	movlb	4	; select bank4
 10952  011B' 0800'              	movf	_pidi^(0+512),w
 10953  011C' 0020               	movlb	0	; select bank0
 10954  011D' 0084'              	movwf	i1___fladd@a
 10955  011E' 3180' 2000' 3180'  	fcall	i1___fladd
 10956  0121' 0803'              	movf	?i1___fladd+3,w
 10957  0122' 0024               	movlb	4	; select bank4
 10958  0123' 0080'              	movwf	(_pidi+3)^(0+512)
 10959  0124' 0020               	movlb	0	; select bank0
 10960  0125' 0802'              	movf	?i1___fladd+2,w
 10961  0126' 0024               	movlb	4	; select bank4
 10962  0127' 0080'              	movwf	(_pidi+2)^(0+512)
 10963  0128' 0020               	movlb	0	; select bank0
 10964  0129' 0801'              	movf	?i1___fladd+1,w
 10965  012A' 0024               	movlb	4	; select bank4
 10966  012B' 0080'              	movwf	(_pidi+1)^(0+512)
 10967  012C' 0020               	movlb	0	; select bank0
 10968  012D' 0800'              	movf	?i1___fladd,w
 10969  012E' 0024               	movlb	4	; select bank4
 10970  012F' 0080'              	movwf	_pidi^(0+512)
 10971                           
 10972                           ;charger_discharger.c: 283:     pidt += (er * kp + pidi);
 10973  0130' 0021               	movlb	1	; select bank1
 10974  0131' 0800'              	movf	(_er+3)^(0+128),w
 10975  0132' 0020               	movlb	0	; select bank0
 10976  0133' 00A3'              	movwf	i1___flmul@a+3
 10977  0134' 0021               	movlb	1	; select bank1
 10978  0135' 0800'              	movf	(_er+2)^(0+128),w
 10979  0136' 0020               	movlb	0	; select bank0
 10980  0137' 00A2'              	movwf	i1___flmul@a+2
 10981  0138' 0021               	movlb	1	; select bank1
 10982  0139' 0800'              	movf	(_er+1)^(0+128),w
 10983  013A' 0020               	movlb	0	; select bank0
 10984  013B' 00A1'              	movwf	i1___flmul@a+1
 10985  013C' 0021               	movlb	1	; select bank1
 10986  013D' 0800'              	movf	_er^(0+128),w
 10987  013E' 0020               	movlb	0	; select bank0
 10988  013F' 00A0'              	movwf	i1___flmul@a
 10989  0140' 0024               	movlb	4	; select bank4
 10990  0141' 0800'              	movf	(_kp+3)^(0+512),w
 10991  0142' 0020               	movlb	0	; select bank0
 10992  0143' 009F'              	movwf	i1___flmul@b+3
 10993  0144' 0024               	movlb	4	; select bank4
 10994  0145' 0800'              	movf	(_kp+2)^(0+512),w
 10995  0146' 0020               	movlb	0	; select bank0
 10996  0147' 009E'              	movwf	i1___flmul@b+2
 10997  0148' 0024               	movlb	4	; select bank4
 10998  0149' 0800'              	movf	(_kp+1)^(0+512),w
 10999  014A' 0020               	movlb	0	; select bank0
 11000  014B' 009D'              	movwf	i1___flmul@b+1
 11001  014C' 0024               	movlb	4	; select bank4
 11002  014D' 0800'              	movf	_kp^(0+512),w
 11003  014E' 0020               	movlb	0	; select bank0
 11004  014F' 009C'              	movwf	i1___flmul@b
 11005  0150' 3180' 2000' 3180'  	fcall	i1___flmul
 11006  0153' 081F'              	movf	?i1___flmul+3,w
 11007  0154' 0087'              	movwf	i1___fladd@a+3
 11008  0155' 081E'              	movf	?i1___flmul+2,w
 11009  0156' 0086'              	movwf	i1___fladd@a+2
 11010  0157' 081D'              	movf	?i1___flmul+1,w
 11011  0158' 0085'              	movwf	i1___fladd@a+1
 11012  0159' 081C'              	movf	?i1___flmul,w
 11013  015A' 0084'              	movwf	i1___fladd@a
 11014  015B' 0024               	movlb	4	; select bank4
 11015  015C' 0800'              	movf	(_pidi+3)^(0+512),w
 11016  015D' 0020               	movlb	0	; select bank0
 11017  015E' 0083'              	movwf	i1___fladd@b+3
 11018  015F' 0024               	movlb	4	; select bank4
 11019  0160' 0800'              	movf	(_pidi+2)^(0+512),w
 11020  0161' 0020               	movlb	0	; select bank0
 11021  0162' 0082'              	movwf	i1___fladd@b+2
 11022  0163' 0024               	movlb	4	; select bank4
 11023  0164' 0800'              	movf	(_pidi+1)^(0+512),w
 11024  0165' 0020               	movlb	0	; select bank0
 11025  0166' 0081'              	movwf	i1___fladd@b+1
 11026  0167' 0024               	movlb	4	; select bank4
 11027  0168' 0800'              	movf	_pidi^(0+512),w
 11028  0169' 0020               	movlb	0	; select bank0
 11029  016A' 0080'              	movwf	i1___fladd@b
 11030  016B' 3180' 2000' 3180'  	fcall	i1___fladd
 11031  016E' 0803'              	movf	?i1___fladd+3,w
 11032  016F' 00C9'              	movwf	_pid$1747+3
 11033  0170' 0802'              	movf	?i1___fladd+2,w
 11034  0171' 00C8'              	movwf	_pid$1747+2
 11035  0172' 0801'              	movf	?i1___fladd+1,w
 11036  0173' 00C7'              	movwf	_pid$1747+1
 11037  0174' 0800'              	movf	?i1___fladd,w
 11038  0175' 00C6'              	movwf	_pid$1747
 11039                           
 11040                           ;charger_discharger.c: 283:     pidt += (er * kp + pidi);
 11041  0176' 0849'              	movf	_pid$1747+3,w
 11042  0177' 0083'              	movwf	i1___fladd@b+3
 11043  0178' 0848'              	movf	_pid$1747+2,w
 11044  0179' 0082'              	movwf	i1___fladd@b+2
 11045  017A' 0847'              	movf	_pid$1747+1,w
 11046  017B' 0081'              	movwf	i1___fladd@b+1
 11047  017C' 0846'              	movf	_pid$1747,w
 11048  017D' 0080'              	movwf	i1___fladd@b
 11049  017E' 0023               	movlb	3	; select bank3
 11050  017F' 0800'              	movf	(_pidt+3)^(0+384),w
 11051  0180' 0020               	movlb	0	; select bank0
 11052  0181' 0087'              	movwf	i1___fladd@a+3
 11053  0182' 0023               	movlb	3	; select bank3
 11054  0183' 0800'              	movf	(_pidt+2)^(0+384),w
 11055  0184' 0020               	movlb	0	; select bank0
 11056  0185' 0086'              	movwf	i1___fladd@a+2
 11057  0186' 0023               	movlb	3	; select bank3
 11058  0187' 0800'              	movf	(_pidt+1)^(0+384),w
 11059  0188' 0020               	movlb	0	; select bank0
 11060  0189' 0085'              	movwf	i1___fladd@a+1
 11061  018A' 0023               	movlb	3	; select bank3
 11062  018B' 0800'              	movf	_pidt^(0+384),w
 11063  018C' 0020               	movlb	0	; select bank0
 11064  018D' 0084'              	movwf	i1___fladd@a
 11065  018E' 3180' 2000' 3180'  	fcall	i1___fladd
 11066  0191' 0803'              	movf	?i1___fladd+3,w
 11067  0192' 0023               	movlb	3	; select bank3
 11068  0193' 0080'              	movwf	(_pidt+3)^(0+384)
 11069  0194' 0020               	movlb	0	; select bank0
 11070  0195' 0802'              	movf	?i1___fladd+2,w
 11071  0196' 0023               	movlb	3	; select bank3
 11072  0197' 0080'              	movwf	(_pidt+2)^(0+384)
 11073  0198' 0020               	movlb	0	; select bank0
 11074  0199' 0801'              	movf	?i1___fladd+1,w
 11075  019A' 0023               	movlb	3	; select bank3
 11076  019B' 0080'              	movwf	(_pidt+1)^(0+384)
 11077  019C' 0020               	movlb	0	; select bank0
 11078  019D' 0800'              	movf	?i1___fladd,w
 11079  019E' 0023               	movlb	3	; select bank3
 11080  019F' 0080'              	movwf	_pidt^(0+384)
 11081                           
 11082                           ;charger_discharger.c: 285:     if (pidt >= 300.0) pidt = 300.0;
 11083  01A0' 0800'              	movf	(_pidt+3)^(0+384),w
 11084  01A1' 0083'              	movwf	i1___flge@ff1+3
 11085  01A2' 0800'              	movf	(_pidt+2)^(0+384),w
 11086  01A3' 0082'              	movwf	i1___flge@ff1+2
 11087  01A4' 0800'              	movf	(_pidt+1)^(0+384),w
 11088  01A5' 0081'              	movwf	i1___flge@ff1+1
 11089  01A6' 0800'              	movf	_pidt^(0+384),w
 11090  01A7' 0080'              	movwf	i1___flge@ff1
 11091  01A8' 3043               	movlw	67
 11092  01A9' 0087'              	movwf	i1___flge@ff2+3
 11093  01AA' 3096               	movlw	150
 11094  01AB' 0086'              	movwf	i1___flge@ff2+2
 11095  01AC' 3000               	movlw	0
 11096  01AD' 0085'              	movwf	i1___flge@ff2+1
 11097  01AE' 3000               	movlw	0
 11098  01AF' 0084'              	movwf	i1___flge@ff2
 11099  01B0' 3180' 2000' 3180'  	fcall	i1___flge
 11100  01B3' 1C03               	btfss	3,0
 11101  01B4' 2800'              	goto	i1l5995
 11102  01B5' 3043               	movlw	67
 11103  01B6' 0023               	movlb	3	; select bank3
 11104  01B7' 0080'              	movwf	(_pidt+3)^(0+384)
 11105  01B8' 3096               	movlw	150
 11106  01B9' 0080'              	movwf	(_pidt+2)^(0+384)
 11107  01BA' 3000               	movlw	0
 11108  01BB' 0080'              	movwf	(_pidt+1)^(0+384)
 11109  01BC' 3000               	movlw	0
 11110  01BD' 0080'              	movwf	_pidt^(0+384)
 11111  01BE' 0008               	return
 11112  01BF'                    i1l5995:
 11113  01BF' 3042               	movlw	66
 11114  01C0' 0083'              	movwf	i1___flge@ff1+3
 11115  01C1' 3048               	movlw	72
 11116  01C2' 0082'              	movwf	i1___flge@ff1+2
 11117  01C3' 3000               	movlw	0
 11118  01C4' 0081'              	movwf	i1___flge@ff1+1
 11119  01C5' 3000               	movlw	0
 11120  01C6' 0080'              	movwf	i1___flge@ff1
 11121  01C7' 0023               	movlb	3	; select bank3
 11122  01C8' 0800'              	movf	(_pidt+3)^(0+384),w
 11123  01C9' 0087'              	movwf	i1___flge@ff2+3
 11124  01CA' 0800'              	movf	(_pidt+2)^(0+384),w
 11125  01CB' 0086'              	movwf	i1___flge@ff2+2
 11126  01CC' 0800'              	movf	(_pidt+1)^(0+384),w
 11127  01CD' 0085'              	movwf	i1___flge@ff2+1
 11128  01CE' 0800'              	movf	_pidt^(0+384),w
 11129  01CF' 0084'              	movwf	i1___flge@ff2
 11130  01D0' 3180' 2000' 3180'  	fcall	i1___flge
 11131  01D3' 1C03               	btfss	3,0
 11132  01D4' 0008               	return
 11133  01D5' 3042               	movlw	66
 11134  01D6' 0023               	movlb	3	; select bank3
 11135  01D7' 0080'              	movwf	(_pidt+3)^(0+384)
 11136  01D8' 3048               	movlw	72
 11137  01D9' 0080'              	movwf	(_pidt+2)^(0+384)
 11138  01DA' 3000               	movlw	0
 11139  01DB' 0080'              	movwf	(_pidt+1)^(0+384)
 11140  01DC' 3000               	movlw	0
 11141  01DD' 0080'              	movwf	_pidt^(0+384)
 11142  01DE' 0008               	return
 11143  01DF'                    __end_of_pid:
 11144                           
 11145                           	psect	text34
 11146  0000'                    __ptext34:	
 11147 ;; *************** function i1___flge *****************
 11148 ;; Defined at:
 11149 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11150 ;; Parameters:    Size  Location     Type
 11151 ;;  ff1             4    0[COMMON] void 
 11152 ;;  ff2             4    4[COMMON] void 
 11153 ;; Auto vars:     Size  Location     Type
 11154 ;;		None
 11155 ;; Return value:  Size  Location     Type
 11156 ;;		None               void
 11157 ;; Registers used:
 11158 ;;		wreg, status,2, status,0
 11159 ;; Tracked objects:
 11160 ;;		On entry : 1D/1
 11161 ;;		On exit  : 1D/1
 11162 ;;		Unchanged: 1D/0
 11163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11164 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11166 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11167 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11168 ;;Total ram usage:       12 bytes
 11169 ;; Hardware stack levels used: 1
 11170 ;; This function calls:
 11171 ;;		Nothing
 11172 ;; This function is called by:
 11173 ;;		_pid
 11174 ;; This function uses a non-reentrant model
 11175 ;;
 11176                           
 11177  0000'                    i1___flge:	
 11178                           ;psect for function i1___flge
 11179                           
 11180                           
 11181                           ;incstack = 0
 11182                           ; Regs used in i1___flge: [wreg+status,2+status,0]
 11183  0000' 3000               	movlw	0
 11184  0001' 0500'              	andwf	i1___flge@ff1,w
 11185  0002' 0088'              	movwf	??i1___flge
 11186  0003' 3000               	movlw	0
 11187  0004' 0501'              	andwf	i1___flge@ff1+1,w
 11188  0005' 0089'              	movwf	??i1___flge+1
 11189  0006' 3080               	movlw	128
 11190  0007' 0502'              	andwf	i1___flge@ff1+2,w
 11191  0008' 008A'              	movwf	??i1___flge+2
 11192  0009' 307F               	movlw	127
 11193  000A' 0503'              	andwf	i1___flge@ff1+3,w
 11194  000B' 008B'              	movwf	??i1___flge+3
 11195  000C' 080B'              	movf	??i1___flge+3,w
 11196  000D' 040A'              	iorwf	??i1___flge+2,w
 11197  000E' 0409'              	iorwf	??i1___flge+1,w
 11198  000F' 0408'              	iorwf	??i1___flge,w
 11199  0010' 1D03               	skipz
 11200  0011' 2800'              	goto	i1l1224
 11201  0012' 3000               	movlw	0
 11202  0013' 0083'              	movwf	i1___flge@ff1+3
 11203  0014' 3000               	movlw	0
 11204  0015' 0082'              	movwf	i1___flge@ff1+2
 11205  0016' 3000               	movlw	0
 11206  0017' 0081'              	movwf	i1___flge@ff1+1
 11207  0018' 3000               	movlw	0
 11208  0019' 0080'              	movwf	i1___flge@ff1
 11209  001A'                    i1l1224:
 11210  001A' 3000               	movlw	0
 11211  001B' 0504'              	andwf	i1___flge@ff2,w
 11212  001C' 0088'              	movwf	??i1___flge
 11213  001D' 3000               	movlw	0
 11214  001E' 0505'              	andwf	i1___flge@ff2+1,w
 11215  001F' 0089'              	movwf	??i1___flge+1
 11216  0020' 3080               	movlw	128
 11217  0021' 0506'              	andwf	i1___flge@ff2+2,w
 11218  0022' 008A'              	movwf	??i1___flge+2
 11219  0023' 307F               	movlw	127
 11220  0024' 0507'              	andwf	i1___flge@ff2+3,w
 11221  0025' 008B'              	movwf	??i1___flge+3
 11222  0026' 080B'              	movf	??i1___flge+3,w
 11223  0027' 040A'              	iorwf	??i1___flge+2,w
 11224  0028' 0409'              	iorwf	??i1___flge+1,w
 11225  0029' 0408'              	iorwf	??i1___flge,w
 11226  002A' 1D03               	skipz
 11227  002B' 2800'              	goto	i1l5595
 11228  002C' 3000               	movlw	0
 11229  002D' 0087'              	movwf	i1___flge@ff2+3
 11230  002E' 3000               	movlw	0
 11231  002F' 0086'              	movwf	i1___flge@ff2+2
 11232  0030' 3000               	movlw	0
 11233  0031' 0085'              	movwf	i1___flge@ff2+1
 11234  0032' 3000               	movlw	0
 11235  0033' 0084'              	movwf	i1___flge@ff2
 11236  0034'                    i1l5595:
 11237  0034' 1F83'              	btfss	i1___flge@ff1+3,7
 11238  0035' 2800'              	goto	i1l5599
 11239  0036' 3000               	movlw	0
 11240  0037' 0088'              	movwf	??i1___flge
 11241  0038' 3000               	movlw	0
 11242  0039' 0089'              	movwf	??i1___flge+1
 11243  003A' 3000               	movlw	0
 11244  003B' 008A'              	movwf	??i1___flge+2
 11245  003C' 3080               	movlw	128
 11246  003D' 008B'              	movwf	??i1___flge+3
 11247  003E' 0800'              	movf	i1___flge@ff1,w
 11248  003F' 0288'              	subwf	??i1___flge,f
 11249  0040' 0801'              	movf	i1___flge@ff1+1,w
 11250  0041' 3B89'              	subwfb	??i1___flge+1,f
 11251  0042' 0802'              	movf	i1___flge@ff1+2,w
 11252  0043' 3B8A'              	subwfb	??i1___flge+2,f
 11253  0044' 0803'              	movf	i1___flge@ff1+3,w
 11254  0045' 3B8B'              	subwfb	??i1___flge+3,f
 11255  0046' 080B'              	movf	??i1___flge+3,w
 11256  0047' 0083'              	movwf	i1___flge@ff1+3
 11257  0048' 080A'              	movf	??i1___flge+2,w
 11258  0049' 0082'              	movwf	i1___flge@ff1+2
 11259  004A' 0809'              	movf	??i1___flge+1,w
 11260  004B' 0081'              	movwf	i1___flge@ff1+1
 11261  004C' 0808'              	movf	??i1___flge,w
 11262  004D' 0080'              	movwf	i1___flge@ff1
 11263  004E'                    i1l5599:
 11264  004E' 1F87'              	btfss	i1___flge@ff2+3,7
 11265  004F' 2800'              	goto	i1l1227
 11266  0050' 3000               	movlw	0
 11267  0051' 0088'              	movwf	??i1___flge
 11268  0052' 3000               	movlw	0
 11269  0053' 0089'              	movwf	??i1___flge+1
 11270  0054' 3000               	movlw	0
 11271  0055' 008A'              	movwf	??i1___flge+2
 11272  0056' 3080               	movlw	128
 11273  0057' 008B'              	movwf	??i1___flge+3
 11274  0058' 0804'              	movf	i1___flge@ff2,w
 11275  0059' 0288'              	subwf	??i1___flge,f
 11276  005A' 0805'              	movf	i1___flge@ff2+1,w
 11277  005B' 3B89'              	subwfb	??i1___flge+1,f
 11278  005C' 0806'              	movf	i1___flge@ff2+2,w
 11279  005D' 3B8A'              	subwfb	??i1___flge+2,f
 11280  005E' 0807'              	movf	i1___flge@ff2+3,w
 11281  005F' 3B8B'              	subwfb	??i1___flge+3,f
 11282  0060' 080B'              	movf	??i1___flge+3,w
 11283  0061' 0087'              	movwf	i1___flge@ff2+3
 11284  0062' 080A'              	movf	??i1___flge+2,w
 11285  0063' 0086'              	movwf	i1___flge@ff2+2
 11286  0064' 0809'              	movf	??i1___flge+1,w
 11287  0065' 0085'              	movwf	i1___flge@ff2+1
 11288  0066' 0808'              	movf	??i1___flge,w
 11289  0067' 0084'              	movwf	i1___flge@ff2
 11290  0068'                    i1l1227:
 11291  0068' 3080               	movlw	128
 11292  0069' 0683'              	xorwf	i1___flge@ff1+3,f
 11293  006A' 3080               	movlw	128
 11294  006B' 0687'              	xorwf	i1___flge@ff2+3,f
 11295  006C' 0807'              	movf	i1___flge@ff2+3,w
 11296  006D' 0203'              	subwf	i1___flge@ff1+3,w
 11297  006E' 1D03               	skipz
 11298  006F' 0008               	return
 11299  0070' 0806'              	movf	i1___flge@ff2+2,w
 11300  0071' 0202'              	subwf	i1___flge@ff1+2,w
 11301  0072' 1D03               	skipz
 11302  0073' 0008               	return
 11303  0074' 0805'              	movf	i1___flge@ff2+1,w
 11304  0075' 0201'              	subwf	i1___flge@ff1+1,w
 11305  0076' 1D03               	skipz
 11306  0077' 0008               	return
 11307  0078' 0804'              	movf	i1___flge@ff2,w
 11308  0079' 0200'              	subwf	i1___flge@ff1,w
 11309  007A' 0008               	return
 11310  007B'                    __end_ofi1___flge:
 11311                           
 11312                           	psect	text35
 11313  0000'                    __ptext35:	
 11314 ;; *************** function ___flsub *****************
 11315 ;; Defined at:
 11316 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 11317 ;; Parameters:    Size  Location     Type
 11318 ;;  a               4   20[BANK0 ] void 
 11319 ;;  b               4   24[BANK0 ] void 
 11320 ;; Auto vars:     Size  Location     Type
 11321 ;;		None
 11322 ;; Return value:  Size  Location     Type
 11323 ;;                  4   20[BANK0 ] void 
 11324 ;; Registers used:
 11325 ;;		wreg, status,2, status,0, pclath, cstack
 11326 ;; Tracked objects:
 11327 ;;		On entry : 1F/0
 11328 ;;		On exit  : 1F/0
 11329 ;;		Unchanged: 0/0
 11330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11331 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11334 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11335 ;;Total ram usage:        8 bytes
 11336 ;; Hardware stack levels used: 1
 11337 ;; Hardware stack levels required when called: 1
 11338 ;; This function calls:
 11339 ;;		i1___fladd
 11340 ;; This function is called by:
 11341 ;;		_pid
 11342 ;; This function uses a non-reentrant model
 11343 ;;
 11344                           
 11345  0000'                    ___flsub:	
 11346                           ;psect for function ___flsub
 11347                           
 11348                           
 11349                           ;incstack = 0
 11350                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 11351  0000' 3080               	movlw	128
 11352  0001' 0697'              	xorwf	___flsub@a+3,f
 11353  0002' 081B'              	movf	___flsub@b+3,w
 11354  0003' 0083'              	movwf	i1___fladd@b+3
 11355  0004' 081A'              	movf	___flsub@b+2,w
 11356  0005' 0082'              	movwf	i1___fladd@b+2
 11357  0006' 0819'              	movf	___flsub@b+1,w
 11358  0007' 0081'              	movwf	i1___fladd@b+1
 11359  0008' 0818'              	movf	___flsub@b,w
 11360  0009' 0080'              	movwf	i1___fladd@b
 11361  000A' 0817'              	movf	___flsub@a+3,w
 11362  000B' 0087'              	movwf	i1___fladd@a+3
 11363  000C' 0816'              	movf	___flsub@a+2,w
 11364  000D' 0086'              	movwf	i1___fladd@a+2
 11365  000E' 0815'              	movf	___flsub@a+1,w
 11366  000F' 0085'              	movwf	i1___fladd@a+1
 11367  0010' 0814'              	movf	___flsub@a,w
 11368  0011' 0084'              	movwf	i1___fladd@a
 11369  0012' 3180' 2000'        	fcall	i1___fladd
 11370  0014' 0803'              	movf	?i1___fladd+3,w
 11371  0015' 0097'              	movwf	?___flsub+3
 11372  0016' 0802'              	movf	?i1___fladd+2,w
 11373  0017' 0096'              	movwf	?___flsub+2
 11374  0018' 0801'              	movf	?i1___fladd+1,w
 11375  0019' 0095'              	movwf	?___flsub+1
 11376  001A' 0800'              	movf	?i1___fladd,w
 11377  001B' 0094'              	movwf	?___flsub
 11378  001C' 0008               	return
 11379  001D'                    __end_of___flsub:
 11380                           
 11381                           	psect	text36
 11382  0000'                    __ptext36:	
 11383 ;; *************** function _command_interpreter *****************
 11384 ;; Defined at:
 11385 ;;		line 126 in file "charger_discharger.c"
 11386 ;; Parameters:    Size  Location     Type
 11387 ;;		None
 11388 ;; Auto vars:     Size  Location     Type
 11389 ;;  data           20   23[BANK1 ] unsigned char [20]
 11390 ;;  calc_checksu    2   47[BANK1 ] unsigned short 
 11391 ;;  checksum        2   43[BANK1 ] unsigned short 
 11392 ;;  length          1   50[BANK1 ] unsigned char 
 11393 ;;  code            1   49[BANK1 ] unsigned char 
 11394 ;;  operation       1   46[BANK1 ] unsigned char 
 11395 ;;  test            1   45[BANK1 ] _Bool 
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  1    wreg      _Bool 
 11398 ;; Registers used:
 11399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11400 ;; Tracked objects:
 11401 ;;		On entry : 1F/3
 11402 ;;		On exit  : 1F/1
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11406 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
 11407 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11408 ;;      Totals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0
 11409 ;;Total ram usage:       31 bytes
 11410 ;; Hardware stack levels used: 1
 11411 ;; Hardware stack levels required when called: 3
 11412 ;; This function calls:
 11413 ;;		_UART_get_byte
 11414 ;;		_UART_get_some_bytes
 11415 ;;		_UART_send_header
 11416 ;;		_calculate_checksum
 11417 ;;		_put_data_into_structure
 11418 ;;		i1_UART_send_byte
 11419 ;;		i1_UART_send_some_bytes
 11420 ;;		i1___fladd
 11421 ;;		i1___fldiv
 11422 ;;		i1___flmul
 11423 ;;		i1___fltol
 11424 ;;		i1___xxtofl
 11425 ;;		i1_converter_settings
 11426 ;;		i1_getTime
 11427 ;; This function is called by:
 11428 ;;		_ISR
 11429 ;; This function uses a non-reentrant model
 11430 ;;
 11431                           
 11432  0000'                    _command_interpreter:	
 11433                           ;psect for function _command_interpreter
 11434                           
 11435                           
 11436                           ;charger_discharger.c: 128:     _Bool test = 1;
 11437                           
 11438                           ;incstack = 0
 11439                           ; Regs used in _command_interpreter: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11440  0000' 0021               	movlb	1	; select bank1
 11441  0001' 0180'              	clrf	command_interpreter@test^(0+128)
 11442  0002' 0A80'              	incf	command_interpreter@test^(0+128),f
 11443                           
 11444                           ;charger_discharger.c: 130:     uint8_t code = 0x00;
 11445  0003' 0180'              	clrf	command_interpreter@code^(0+128)
 11446                           
 11447                           ;charger_discharger.c: 131:     uint8_t length = 0x00;
 11448  0004' 0180'              	clrf	command_interpreter@length^(0+128)
 11449                           
 11450                           ;charger_discharger.c: 132:     uint8_t data[20] = {0x00};
 11451  0005' 3000'              	movlw	low command_interpreter@F5995
 11452  0006' 0086               	movwf	6
 11453  0007' 3000'              	movlw	high command_interpreter@F5995
 11454  0008' 0087               	movwf	7
 11455  0009' 3000'              	movlw	low command_interpreter@data
 11456  000A' 0084               	movwf	4
 11457  000B' 3000'              	movlw	high command_interpreter@data
 11458  000C' 0085               	movwf	5
 11459  000D' 3014               	movlw	20
 11460  000E' 0080'              	movwf	??_command_interpreter^(0+128)
 11461  000F'                    u722_20:
 11462  000F' 0016               	moviw fsr1++
 11463  0010' 001A               	movwi fsr0++
 11464  0011' 0B80'              	decfsz	??_command_interpreter^(0+128),f
 11465  0012' 2800'              	goto	u722_20
 11466                           
 11467                           ;charger_discharger.c: 135:     basic_configuration_ptr = &basic_configuration;
 11468  0013' 3000'              	movlw	(low (_basic_configuration| (0+512)))& (0+255)
 11469  0014' 0080'              	movwf	_basic_configuration_ptr^(0+128)
 11470                           
 11471                           ;charger_discharger.c: 136:     test_configuration_ptr = &test_configuration;
 11472  0015' 3000'              	movlw	(low (_test_configuration| (0+512)))& (0+255)
 11473  0016' 0080'              	movwf	_test_configuration_ptr^(0+128)
 11474                           
 11475                           ;charger_discharger.c: 137:     converter_configuration_ptr = &converter_configuration;
 11476  0017' 3000'              	movlw	(low (_converter_configuration| (0+512)))& (0+255)
 11477  0018' 0080'              	movwf	_converter_configuration_ptr^(0+128)
 11478                           
 11479                           ;charger_discharger.c: 138:     if (!start)
 11480  0019' 0800'              	movf	_start^(0+128),w
 11481  001A' 1D03               	btfss	3,2
 11482  001B' 2800'              	goto	i1l7411
 11483                           
 11484                           ;charger_discharger.c: 139:     {;charger_discharger.c: 140:         if(UART_get_byte()=
      +                          =0xDD)
 11485  001C' 3180' 2000' 3180'  	fcall	_UART_get_byte
 11486  001F' 3ADD               	xorlw	221
 11487  0020' 1D03               	skipz
 11488  0021' 2800'              	goto	i1l7409
 11489                           
 11490                           ;charger_discharger.c: 141:         {;charger_discharger.c: 142:             operation =
      +                           UART_get_byte();
 11491  0022' 3180' 2000' 3180'  	fcall	_UART_get_byte
 11492  0025' 0021               	movlb	1	; select bank1
 11493  0026' 0080'              	movwf	command_interpreter@operation^(0+128)
 11494                           
 11495                           ;charger_discharger.c: 143:             code = UART_get_byte();
 11496  0027' 3180' 2000' 3180'  	fcall	_UART_get_byte
 11497  002A' 0021               	movlb	1	; select bank1
 11498  002B' 0080'              	movwf	command_interpreter@code^(0+128)
 11499                           
 11500                           ;charger_discharger.c: 144:             length = UART_get_byte();
 11501  002C' 3180' 2000' 3180'  	fcall	_UART_get_byte
 11502  002F' 0021               	movlb	1	; select bank1
 11503  0030' 0080'              	movwf	command_interpreter@length^(0+128)
 11504                           
 11505                           ;charger_discharger.c: 145:             if (length>0) UART_get_some_bytes(length, (uint8
      +                          _t*)data);
 11506  0031' 0800'              	movf	command_interpreter@length^(0+128),w
 11507  0032' 1903               	btfsc	3,2
 11508  0033' 2800'              	goto	i1l7301
 11509  0034' 3000'              	movlw	(low (command_interpreter@data| 0))& (0+255)
 11510  0035' 0080'              	movwf	UART_get_some_bytes@data
 11511  0036' 0800'              	movf	command_interpreter@length^(0+128),w
 11512  0037' 3180' 2000' 3180'  	fcall	_UART_get_some_bytes
 11513  003A'                    i1l7301:
 11514                           
 11515                           ;charger_discharger.c: 146:             checksum = UART_get_byte();
 11516  003A' 3180' 2000' 3180'  	fcall	_UART_get_byte
 11517  003D' 0021               	movlb	1	; select bank1
 11518  003E' 0080'              	movwf	??_command_interpreter^(0+128)
 11519  003F' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 11520  0040' 0800'              	movf	??_command_interpreter^(0+128),w
 11521  0041' 0080'              	movwf	command_interpreter@checksum^(0+128)
 11522  0042' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 11523  0043' 0080'              	movwf	(command_interpreter@checksum+1)^(0+128)
 11524                           
 11525                           ;charger_discharger.c: 147:             checksum += UART_get_byte()* 256;
 11526  0044' 3180' 2000' 3180'  	fcall	_UART_get_byte
 11527  0047' 0021               	movlb	1	; select bank1
 11528  0048' 0080'              	movwf	??_command_interpreter^(0+128)
 11529  0049' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 11530  004A' 0800'              	movf	??_command_interpreter^(0+128),w
 11531  004B' 0081'              	movwf	(??_command_interpreter^(0+128)+1)
 11532  004C' 0180'              	clrf	??_command_interpreter^(0+128)
 11533  004D' 0800'              	movf	??_command_interpreter^(0+128),w
 11534  004E' 0780'              	addwf	command_interpreter@checksum^(0+128),f
 11535  004F' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 11536  0050' 3D80'              	addwfc	(command_interpreter@checksum+1)^(0+128),f
 11537                           
 11538                           ;charger_discharger.c: 148:             calc_checksum = calculate_checksum(code, length,
      +                           (uint8_t*)data);
 11539  0051' 0800'              	movf	command_interpreter@length^(0+128),w
 11540  0052' 0080'              	movwf	calculate_checksum@length
 11541  0053' 3000'              	movlw	low command_interpreter@data
 11542  0054' 0081'              	movwf	calculate_checksum@data
 11543  0055' 3000'              	movlw	high command_interpreter@data
 11544  0056' 0082'              	movwf	calculate_checksum@data+1
 11545  0057' 0800'              	movf	command_interpreter@code^(0+128),w
 11546  0058' 3180' 2000' 3180'  	fcall	_calculate_checksum
 11547  005B' 0801'              	movf	?_calculate_checksum+1,w
 11548  005C' 0080'              	movwf	(command_interpreter@calc_checksum+1)^(0+128)
 11549  005D' 0800'              	movf	?_calculate_checksum,w
 11550  005E' 0080'              	movwf	command_interpreter@calc_checksum^(0+128)
 11551                           
 11552                           ;charger_discharger.c: 149:             if(UART_get_byte() != 0x77)
 11553  005F' 3180' 2000' 3180'  	fcall	_UART_get_byte
 11554  0062' 3A77               	xorlw	119
 11555  0063' 1903               	skipnz
 11556  0064' 2800'              	goto	i1l7309
 11557                           
 11558                           ;charger_discharger.c: 150:             {;charger_discharger.c: 151:                 tes
      +                          t = 0;
 11559  0065' 0021               	movlb	1	; select bank1
 11560  0066' 0180'              	clrf	command_interpreter@test^(0+128)
 11561  0067'                    i1l7309:
 11562                           
 11563                           ;charger_discharger.c: 153:             if (checksum != calc_checksum)
 11564  0067' 0021               	movlb	1	; select bank1
 11565  0068' 0800'              	movf	(command_interpreter@calc_checksum+1)^(0+128),w
 11566  0069' 0600'              	xorwf	(command_interpreter@checksum+1)^(0+128),w
 11567  006A' 1D03               	skipz
 11568  006B' 2800'              	goto	u727_25
 11569  006C' 0800'              	movf	command_interpreter@calc_checksum^(0+128),w
 11570  006D' 0600'              	xorwf	command_interpreter@checksum^(0+128),w
 11571  006E'                    u727_25:
 11572  006E' 1D03               	btfss	3,2
 11573                           
 11574                           ;charger_discharger.c: 154:             {;charger_discharger.c: 155:                 tes
      +                          t = 0;
 11575  006F' 0180'              	clrf	command_interpreter@test^(0+128)
 11576                           
 11577                           ;charger_discharger.c: 157:             if(!start)
 11578  0070' 0800'              	movf	_start^(0+128),w
 11579  0071' 1903               	btfsc	3,2
 11580  0072' 2800'              	goto	i1l7407
 11581  0073' 2800'              	goto	i1l7429
 11582  0074'                    i1l7317:
 11583                           
 11584                           ;charger_discharger.c: 162:                         UART_send_header(0xDD, operation, co
      +                          de);
 11585  0074' 0800'              	movf	command_interpreter@operation^(0+128),w
 11586  0075' 0081'              	movwf	UART_send_header@operation
 11587  0076' 0800'              	movf	command_interpreter@code^(0+128),w
 11588  0077' 0082'              	movwf	UART_send_header@code
 11589  0078' 30DD               	movlw	221
 11590  0079' 3180' 2000' 3180'  	fcall	_UART_send_header
 11591                           
 11592                           ;charger_discharger.c: 163:                         switch (code)
 11593  007C' 2800'              	goto	i1l7345
 11594  007D'                    i1l7319:
 11595                           
 11596                           ;charger_discharger.c: 167:                                 UART_send_byte(length);
 11597  007D' 3011               	movlw	17
 11598  007E' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 11599                           
 11600                           ;charger_discharger.c: 168:                                 UART_send_some_bytes(length,
      +                           (uint8_t*)basic_configuration_ptr);
 11601  0081' 0021               	movlb	1	; select bank1
 11602  0082' 0800'              	movf	_basic_configuration_ptr^(0+128),w
 11603  0083' 0081'              	movwf	i1UART_send_some_bytes@data
 11604  0084' 39FF               	andlw	255
 11605  0085' 1D03               	skipz
 11606  0086' 3002               	movlw	2
 11607  0087' 0082'              	movwf	i1UART_send_some_bytes@data+1
 11608  0088' 3011               	movlw	17
 11609  0089' 3180' 2000' 3180'  	fcall	i1_UART_send_some_bytes
 11610                           
 11611                           ;charger_discharger.c: 169:                                 calc_checksum = calculate_ch
      +                          ecksum(code, length, (uint8_t*)basic_configuration_ptr);
 11612  008C' 3011               	movlw	17
 11613  008D' 0080'              	movwf	calculate_checksum@length
 11614  008E' 0021               	movlb	1	; select bank1
 11615  008F' 0800'              	movf	_basic_configuration_ptr^(0+128),w
 11616  0090' 2800'              	goto	L15
 11617  0091'                    i1l7327:	
 11618                           ;charger_discharger.c: 170:                                 break;
 11619                           
 11620                           
 11621                           ;charger_discharger.c: 173:                                 UART_send_byte(length);
 11622  0091' 3011               	movlw	17
 11623  0092' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 11624                           
 11625                           ;charger_discharger.c: 174:                                 UART_send_some_bytes(length,
      +                           (uint8_t*)test_configuration_ptr);
 11626  0095' 0021               	movlb	1	; select bank1
 11627  0096' 0800'              	movf	_test_configuration_ptr^(0+128),w
 11628  0097' 0081'              	movwf	i1UART_send_some_bytes@data
 11629  0098' 39FF               	andlw	255
 11630  0099' 1D03               	skipz
 11631  009A' 3002               	movlw	2
 11632  009B' 0082'              	movwf	i1UART_send_some_bytes@data+1
 11633  009C' 3011               	movlw	17
 11634  009D' 3180' 2000' 3180'  	fcall	i1_UART_send_some_bytes
 11635                           
 11636                           ;charger_discharger.c: 175:                                 calc_checksum = calculate_ch
      +                          ecksum(code, length, (uint8_t*)test_configuration_ptr);
 11637  00A0' 3011               	movlw	17
 11638  00A1' 0080'              	movwf	calculate_checksum@length
 11639  00A2' 0021               	movlb	1	; select bank1
 11640  00A3' 0800'              	movf	_test_configuration_ptr^(0+128),w
 11641  00A4' 2800'              	goto	L15
 11642  00A5'                    i1l7335:	
 11643                           ;charger_discharger.c: 176:                                 break;
 11644                           
 11645                           
 11646                           ;charger_discharger.c: 179:                                 UART_send_byte(length);
 11647  00A5' 300E               	movlw	14
 11648  00A6' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 11649                           
 11650                           ;charger_discharger.c: 180:                                 UART_send_some_bytes(length,
      +                           (uint8_t*)converter_configuration_ptr);
 11651  00A9' 0021               	movlb	1	; select bank1
 11652  00AA' 0800'              	movf	_converter_configuration_ptr^(0+128),w
 11653  00AB' 0081'              	movwf	i1UART_send_some_bytes@data
 11654  00AC' 39FF               	andlw	255
 11655  00AD' 1D03               	skipz
 11656  00AE' 3002               	movlw	2
 11657  00AF' 0082'              	movwf	i1UART_send_some_bytes@data+1
 11658  00B0' 300E               	movlw	14
 11659  00B1' 3180' 2000' 3180'  	fcall	i1_UART_send_some_bytes
 11660                           
 11661                           ;charger_discharger.c: 181:                                 calc_checksum = calculate_ch
      +                          ecksum(code, length, (uint8_t*)converter_configuration_ptr);
 11662  00B4' 300E               	movlw	14
 11663  00B5' 0080'              	movwf	calculate_checksum@length
 11664  00B6' 0021               	movlb	1	; select bank1
 11665  00B7' 0800'              	movf	_converter_configuration_ptr^(0+128),w
 11666  00B8'                    L15:
 11667  00B8' 0081'              	movwf	calculate_checksum@data
 11668  00B9' 39FF               	andlw	255
 11669  00BA' 1D03               	skipz
 11670  00BB' 3002               	movlw	2
 11671  00BC' 0082'              	movwf	calculate_checksum@data+1
 11672  00BD' 0800'              	movf	command_interpreter@code^(0+128),w
 11673  00BE' 3180' 2000' 3180'  	fcall	_calculate_checksum
 11674  00C1' 0801'              	movf	?_calculate_checksum+1,w
 11675  00C2' 0080'              	movwf	(command_interpreter@calc_checksum+1)^(0+128)
 11676  00C3' 0800'              	movf	?_calculate_checksum,w
 11677  00C4' 0080'              	movwf	command_interpreter@calc_checksum^(0+128)
 11678                           
 11679                           ;charger_discharger.c: 182:                                 break;
 11680  00C5' 2800'              	goto	i1l7347
 11681  00C6'                    i1l7345:
 11682  00C6' 0021               	movlb	1	; select bank1
 11683  00C7' 0800'              	movf	command_interpreter@code^(0+128),w
 11684  00C8' 0080'              	movwf	??_command_interpreter^(0+128)
 11685  00C9' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 11686                           
 11687                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11688                           ; Switch size 1, requested type "simple"
 11689                           ; Number of cases is 1, Range of values is 0 to 0
 11690                           ; switch strategies available:
 11691                           ; Name         Instructions Cycles
 11692                           ; simple_byte            4     3 (average)
 11693                           ; direct_byte            8     6 (fixed)
 11694                           ; jumptable            260     6 (fixed)
 11695                           ;	Chosen strategy is simple_byte
 11696  00CA' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 11697  00CB' 3A00               	xorlw	0	; case 0
 11698  00CC' 1903               	skipnz
 11699  00CD' 2800'              	goto	i1l7753
 11700  00CE' 2800'              	goto	i1l7347
 11701  00CF'                    i1l7753:
 11702                           
 11703                           ; Switch size 1, requested type "simple"
 11704                           ; Number of cases is 3, Range of values is 3 to 7
 11705                           ; switch strategies available:
 11706                           ; Name         Instructions Cycles
 11707                           ; simple_byte           10     6 (average)
 11708                           ; direct_byte           19     9 (fixed)
 11709                           ; jumptable            263     9 (fixed)
 11710                           ;	Chosen strategy is simple_byte
 11711  00CF' 0800'              	movf	??_command_interpreter^(0+128),w
 11712  00D0' 3A03               	xorlw	3	; case 3
 11713  00D1' 1903               	skipnz
 11714  00D2' 2800'              	goto	i1l7319
 11715  00D3' 3A06               	xorlw	6	; case 5
 11716  00D4' 1903               	skipnz
 11717  00D5' 2800'              	goto	i1l7327
 11718  00D6' 3A02               	xorlw	2	; case 7
 11719  00D7' 1903               	skipnz
 11720  00D8' 2800'              	goto	i1l7335
 11721  00D9' 2800'              	goto	i1l7347
 11722  00DA'                    i1l7347:
 11723                           
 11724                           ;charger_discharger.c: 184:                         UART_send_some_bytes(2,(uint8_t*)&ca
      +                          lc_checksum);
 11725  00DA' 3000'              	movlw	low command_interpreter@calc_checksum
 11726  00DB' 0081'              	movwf	i1UART_send_some_bytes@data
 11727  00DC' 3000'              	movlw	high command_interpreter@calc_checksum
 11728  00DD' 0082'              	movwf	i1UART_send_some_bytes@data+1
 11729  00DE' 3002               	movlw	2
 11730  00DF' 3180' 2000' 3180'  	fcall	i1_UART_send_some_bytes
 11731                           
 11732                           ;charger_discharger.c: 185:                         UART_send_byte(0x77);
 11733  00E2' 3077               	movlw	119
 11734  00E3' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 11735                           
 11736                           ;charger_discharger.c: 186:                         break;
 11737  00E6' 2800'              	goto	i1l7429
 11738  00E7'                    i1l7351:
 11739                           
 11740                           ;charger_discharger.c: 191:                                 put_data_into_structure(leng
      +                          th, (uint8_t*)data, (uint8_t*)basic_configuration_ptr);
 11741  00E7' 3000'              	movlw	(low (command_interpreter@data| 0))& (0+255)
 11742  00E8' 0080'              	movwf	put_data_into_structure@data
 11743  00E9' 0800'              	movf	_basic_configuration_ptr^(0+128),w
 11744  00EA' 0081'              	movwf	put_data_into_structure@structure
 11745  00EB' 0800'              	movf	command_interpreter@length^(0+128),w
 11746  00EC' 3180' 2000' 3180'  	fcall	_put_data_into_structure
 11747                           
 11748                           ;charger_discharger.c: 192:                                 vref = ( ( (float) basic_con
      +                          figuration.const_voltage * 4096.0 ) / 5000.0 ) + 0.5 ;
 11749  00EF' 303F               	movlw	63
 11750  00F0' 0020               	movlb	0	; select bank0
 11751  00F1' 0083'              	movwf	i1___fladd@b+3
 11752  00F2' 3000               	movlw	0
 11753  00F3' 0082'              	movwf	i1___fladd@b+2
 11754  00F4' 3000               	movlw	0
 11755  00F5' 0081'              	movwf	i1___fladd@b+1
 11756  00F6' 3000               	movlw	0
 11757  00F7' 0080'              	movwf	i1___fladd@b
 11758  00F8' 3045               	movlw	69
 11759  00F9' 00B9'              	movwf	i1___fldiv@a+3
 11760  00FA' 309C               	movlw	156
 11761  00FB' 00B8'              	movwf	i1___fldiv@a+2
 11762  00FC' 3040               	movlw	64
 11763  00FD' 00B7'              	movwf	i1___fldiv@a+1
 11764  00FE' 3000               	movlw	0
 11765  00FF' 00B6'              	movwf	i1___fldiv@a
 11766  0100' 3045               	movlw	69
 11767  0101' 009F'              	movwf	i1___flmul@b+3
 11768  0102' 3080               	movlw	128
 11769  0103' 009E'              	movwf	i1___flmul@b+2
 11770  0104' 3000               	movlw	0
 11771  0105' 009D'              	movwf	i1___flmul@b+1
 11772  0106' 3000               	movlw	0
 11773  0107' 009C'              	movwf	i1___flmul@b
 11774  0108' 0024               	movlb	4	; select bank4
 11775  0109' 0801'              	movf	(_basic_configuration^(0+512)+1),w
 11776  010A' 0080'              	movwf	i1___xxtofl@val
 11777  010B' 0801'              	movf	((_basic_configuration+1)^(0+512)+1),w
 11778  010C' 0081'              	movwf	i1___xxtofl@val+1
 11779  010D' 0182'              	clrf	i1___xxtofl@val+2
 11780  010E' 0183'              	clrf	i1___xxtofl@val+3
 11781  010F' 3000               	movlw	0
 11782  0110' 3180' 2000' 3180'  	fcall	i1___xxtofl
 11783  0113' 0803'              	movf	?i1___xxtofl+3,w
 11784  0114' 0020               	movlb	0	; select bank0
 11785  0115' 00A3'              	movwf	i1___flmul@a+3
 11786  0116' 0802'              	movf	?i1___xxtofl+2,w
 11787  0117' 00A2'              	movwf	i1___flmul@a+2
 11788  0118' 0801'              	movf	?i1___xxtofl+1,w
 11789  0119' 00A1'              	movwf	i1___flmul@a+1
 11790  011A' 0800'              	movf	?i1___xxtofl,w
 11791  011B' 00A0'              	movwf	i1___flmul@a
 11792  011C' 3180' 2000' 3180'  	fcall	i1___flmul
 11793  011F' 081F'              	movf	?i1___flmul+3,w
 11794  0120' 00BD'              	movwf	i1___fldiv@b+3
 11795  0121' 081E'              	movf	?i1___flmul+2,w
 11796  0122' 00BC'              	movwf	i1___fldiv@b+2
 11797  0123' 081D'              	movf	?i1___flmul+1,w
 11798  0124' 00BB'              	movwf	i1___fldiv@b+1
 11799  0125' 081C'              	movf	?i1___flmul,w
 11800  0126' 00BA'              	movwf	i1___fldiv@b
 11801  0127' 3180' 2000' 3180'  	fcall	i1___fldiv
 11802  012A' 0839'              	movf	?i1___fldiv+3,w
 11803  012B' 0087'              	movwf	i1___fladd@a+3
 11804  012C' 0838'              	movf	?i1___fldiv+2,w
 11805  012D' 0086'              	movwf	i1___fladd@a+2
 11806  012E' 0837'              	movf	?i1___fldiv+1,w
 11807  012F' 0085'              	movwf	i1___fladd@a+1
 11808  0130' 0836'              	movf	?i1___fldiv,w
 11809  0131' 0084'              	movwf	i1___fladd@a
 11810  0132' 3180' 2000' 3180'  	fcall	i1___fladd
 11811  0135' 0803'              	movf	?i1___fladd+3,w
 11812  0136' 0024               	movlb	4	; select bank4
 11813  0137' 0080'              	movwf	(_vref+3)^(0+512)
 11814  0138' 0020               	movlb	0	; select bank0
 11815  0139' 0802'              	movf	?i1___fladd+2,w
 11816  013A' 0024               	movlb	4	; select bank4
 11817  013B' 0080'              	movwf	(_vref+2)^(0+512)
 11818  013C' 0020               	movlb	0	; select bank0
 11819  013D' 0801'              	movf	?i1___fladd+1,w
 11820  013E' 0024               	movlb	4	; select bank4
 11821  013F' 0080'              	movwf	(_vref+1)^(0+512)
 11822  0140' 0020               	movlb	0	; select bank0
 11823  0141' 0800'              	movf	?i1___fladd,w
 11824  0142' 0024               	movlb	4	; select bank4
 11825  0143' 0080'              	movwf	_vref^(0+512)
 11826                           
 11827                           ;charger_discharger.c: 193:                                 i_char = (uint16_t) ( ( ( (f
      +                          loat) basic_configuration.const_current_char * 4096.0 ) / (5000.0 * 2.5 ) ) + 0.5 );
 11828  0144' 0803'              	movf	(_basic_configuration^(0+512)+3),w
 11829  0145' 0080'              	movwf	i1___xxtofl@val
 11830  0146' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
 11831  0147' 0081'              	movwf	i1___xxtofl@val+1
 11832  0148' 0182'              	clrf	i1___xxtofl@val+2
 11833  0149' 0183'              	clrf	i1___xxtofl@val+3
 11834  014A' 3000               	movlw	0
 11835  014B' 3180' 2000' 3180'  	fcall	i1___xxtofl
 11836  014E' 0803'              	movf	?i1___xxtofl+3,w
 11837  014F' 0020               	movlb	0	; select bank0
 11838  0150' 00A3'              	movwf	i1___flmul@a+3
 11839  0151' 0802'              	movf	?i1___xxtofl+2,w
 11840  0152' 00A2'              	movwf	i1___flmul@a+2
 11841  0153' 0801'              	movf	?i1___xxtofl+1,w
 11842  0154' 00A1'              	movwf	i1___flmul@a+1
 11843  0155' 0800'              	movf	?i1___xxtofl,w
 11844  0156' 00A0'              	movwf	i1___flmul@a
 11845  0157' 3045               	movlw	69
 11846  0158' 009F'              	movwf	i1___flmul@b+3
 11847  0159' 3080               	movlw	128
 11848  015A' 009E'              	movwf	i1___flmul@b+2
 11849  015B' 3000               	movlw	0
 11850  015C' 009D'              	movwf	i1___flmul@b+1
 11851  015D' 3000               	movlw	0
 11852  015E' 009C'              	movwf	i1___flmul@b
 11853  015F' 3180' 2000' 3180'  	fcall	i1___flmul
 11854  0162' 081F'              	movf	?i1___flmul+3,w
 11855  0163' 00BD'              	movwf	i1___fldiv@b+3
 11856  0164' 081E'              	movf	?i1___flmul+2,w
 11857  0165' 00BC'              	movwf	i1___fldiv@b+2
 11858  0166' 081D'              	movf	?i1___flmul+1,w
 11859  0167' 00BB'              	movwf	i1___fldiv@b+1
 11860  0168' 081C'              	movf	?i1___flmul,w
 11861  0169' 00BA'              	movwf	i1___fldiv@b
 11862  016A' 3046               	movlw	70
 11863  016B' 00B9'              	movwf	i1___fldiv@a+3
 11864  016C' 3043               	movlw	67
 11865  016D' 00B8'              	movwf	i1___fldiv@a+2
 11866  016E' 3050               	movlw	80
 11867  016F' 00B7'              	movwf	i1___fldiv@a+1
 11868  0170' 3000               	movlw	0
 11869  0171' 00B6'              	movwf	i1___fldiv@a
 11870  0172' 3180' 2000' 3180'  	fcall	i1___fldiv
 11871  0175' 0839'              	movf	?i1___fldiv+3,w
 11872  0176' 0087'              	movwf	i1___fladd@a+3
 11873  0177' 0838'              	movf	?i1___fldiv+2,w
 11874  0178' 0086'              	movwf	i1___fladd@a+2
 11875  0179' 0837'              	movf	?i1___fldiv+1,w
 11876  017A' 0085'              	movwf	i1___fladd@a+1
 11877  017B' 0836'              	movf	?i1___fldiv,w
 11878  017C' 0084'              	movwf	i1___fladd@a
 11879  017D' 303F               	movlw	63
 11880  017E' 0083'              	movwf	i1___fladd@b+3
 11881  017F' 3000               	movlw	0
 11882  0180' 0082'              	movwf	i1___fladd@b+2
 11883  0181' 3000               	movlw	0
 11884  0182' 0081'              	movwf	i1___fladd@b+1
 11885  0183' 3000               	movlw	0
 11886  0184' 0080'              	movwf	i1___fladd@b
 11887  0185' 3180' 2000' 3180'  	fcall	i1___fladd
 11888  0188' 0803'              	movf	?i1___fladd+3,w
 11889  0189' 0021               	movlb	1	; select bank1
 11890  018A' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 11891  018B' 0020               	movlb	0	; select bank0
 11892  018C' 0802'              	movf	?i1___fladd+2,w
 11893  018D' 0021               	movlb	1	; select bank1
 11894  018E' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 11895  018F' 0020               	movlb	0	; select bank0
 11896  0190' 0801'              	movf	?i1___fladd+1,w
 11897  0191' 0021               	movlb	1	; select bank1
 11898  0192' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 11899  0193' 0020               	movlb	0	; select bank0
 11900  0194' 0800'              	movf	?i1___fladd,w
 11901  0195' 0021               	movlb	1	; select bank1
 11902  0196' 0080'              	movwf	i1___fltol@f1^(0+128)
 11903  0197' 3180' 2000' 3180'  	fcall	i1___fltol
 11904  019A' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 11905  019B' 0023               	movlb	3	; select bank3
 11906  019C' 0080'              	movwf	(_i_char+1)^(0+384)
 11907  019D' 0021               	movlb	1	; select bank1
 11908  019E' 0800'              	movf	?i1___fltol^(0+128),w
 11909  019F' 0023               	movlb	3	; select bank3
 11910  01A0' 0080'              	movwf	_i_char^(0+384)
 11911                           
 11912                           ;charger_discharger.c: 194:                                 i_disc = (uint16_t) ( ( ( (f
      +                          loat) basic_configuration.const_current_disc * 4096.0 ) / (5000.0 * 2.5 ) ) + 0.5 );
 11913  01A1' 0024               	movlb	4	; select bank4
 11914  01A2' 0805'              	movf	(_basic_configuration^(0+512)+5),w
 11915  01A3' 0080'              	movwf	i1___xxtofl@val
 11916  01A4' 0805'              	movf	((_basic_configuration+1)^(0+512)+5),w
 11917  01A5' 0081'              	movwf	i1___xxtofl@val+1
 11918  01A6' 0182'              	clrf	i1___xxtofl@val+2
 11919  01A7' 0183'              	clrf	i1___xxtofl@val+3
 11920  01A8' 3000               	movlw	0
 11921  01A9' 3180' 2000' 3180'  	fcall	i1___xxtofl
 11922  01AC' 0803'              	movf	?i1___xxtofl+3,w
 11923  01AD' 0020               	movlb	0	; select bank0
 11924  01AE' 00A3'              	movwf	i1___flmul@a+3
 11925  01AF' 0802'              	movf	?i1___xxtofl+2,w
 11926  01B0' 00A2'              	movwf	i1___flmul@a+2
 11927  01B1' 0801'              	movf	?i1___xxtofl+1,w
 11928  01B2' 00A1'              	movwf	i1___flmul@a+1
 11929  01B3' 0800'              	movf	?i1___xxtofl,w
 11930  01B4' 00A0'              	movwf	i1___flmul@a
 11931  01B5' 3045               	movlw	69
 11932  01B6' 009F'              	movwf	i1___flmul@b+3
 11933  01B7' 3080               	movlw	128
 11934  01B8' 009E'              	movwf	i1___flmul@b+2
 11935  01B9' 3000               	movlw	0
 11936  01BA' 009D'              	movwf	i1___flmul@b+1
 11937  01BB' 3000               	movlw	0
 11938  01BC' 009C'              	movwf	i1___flmul@b
 11939  01BD' 3180' 2000' 3180'  	fcall	i1___flmul
 11940  01C0' 081F'              	movf	?i1___flmul+3,w
 11941  01C1' 00BD'              	movwf	i1___fldiv@b+3
 11942  01C2' 081E'              	movf	?i1___flmul+2,w
 11943  01C3' 00BC'              	movwf	i1___fldiv@b+2
 11944  01C4' 081D'              	movf	?i1___flmul+1,w
 11945  01C5' 00BB'              	movwf	i1___fldiv@b+1
 11946  01C6' 081C'              	movf	?i1___flmul,w
 11947  01C7' 00BA'              	movwf	i1___fldiv@b
 11948  01C8' 3046               	movlw	70
 11949  01C9' 00B9'              	movwf	i1___fldiv@a+3
 11950  01CA' 3043               	movlw	67
 11951  01CB' 00B8'              	movwf	i1___fldiv@a+2
 11952  01CC' 3050               	movlw	80
 11953  01CD' 00B7'              	movwf	i1___fldiv@a+1
 11954  01CE' 3000               	movlw	0
 11955  01CF' 00B6'              	movwf	i1___fldiv@a
 11956  01D0' 3180' 2000' 3180'  	fcall	i1___fldiv
 11957  01D3' 0839'              	movf	?i1___fldiv+3,w
 11958  01D4' 0087'              	movwf	i1___fladd@a+3
 11959  01D5' 0838'              	movf	?i1___fldiv+2,w
 11960  01D6' 0086'              	movwf	i1___fladd@a+2
 11961  01D7' 0837'              	movf	?i1___fldiv+1,w
 11962  01D8' 0085'              	movwf	i1___fladd@a+1
 11963  01D9' 0836'              	movf	?i1___fldiv,w
 11964  01DA' 0084'              	movwf	i1___fladd@a
 11965  01DB' 303F               	movlw	63
 11966  01DC' 0083'              	movwf	i1___fladd@b+3
 11967  01DD' 3000               	movlw	0
 11968  01DE' 0082'              	movwf	i1___fladd@b+2
 11969  01DF' 3000               	movlw	0
 11970  01E0' 0081'              	movwf	i1___fladd@b+1
 11971  01E1' 3000               	movlw	0
 11972  01E2' 0080'              	movwf	i1___fladd@b
 11973  01E3' 3180' 2000' 3180'  	fcall	i1___fladd
 11974  01E6' 0803'              	movf	?i1___fladd+3,w
 11975  01E7' 0021               	movlb	1	; select bank1
 11976  01E8' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 11977  01E9' 0020               	movlb	0	; select bank0
 11978  01EA' 0802'              	movf	?i1___fladd+2,w
 11979  01EB' 0021               	movlb	1	; select bank1
 11980  01EC' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 11981  01ED' 0020               	movlb	0	; select bank0
 11982  01EE' 0801'              	movf	?i1___fladd+1,w
 11983  01EF' 0021               	movlb	1	; select bank1
 11984  01F0' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 11985  01F1' 0020               	movlb	0	; select bank0
 11986  01F2' 0800'              	movf	?i1___fladd,w
 11987  01F3' 0021               	movlb	1	; select bank1
 11988  01F4' 0080'              	movwf	i1___fltol@f1^(0+128)
 11989  01F5' 3180' 2000' 3180'  	fcall	i1___fltol
 11990  01F8' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 11991  01F9' 0023               	movlb	3	; select bank3
 11992  01FA' 0080'              	movwf	(_i_disc+1)^(0+384)
 11993  01FB' 0021               	movlb	1	; select bank1
 11994  01FC' 0800'              	movf	?i1___fltol^(0+128),w
 11995  01FD' 0023               	movlb	3	; select bank3
 11996  01FE' 0080'              	movwf	_i_disc^(0+384)
 11997                           
 11998                           ;charger_discharger.c: 195:                                 capacity = basic_configurati
      +                          on.capacity;
 11999  01FF' 0024               	movlb	4	; select bank4
 12000  0200' 0807'              	movf	((_basic_configuration+1)^(0+512)+7),w
 12001  0201' 0023               	movlb	3	; select bank3
 12002  0202' 0080'              	movwf	(_capacity+1)^(0+384)
 12003  0203' 0024               	movlb	4	; select bank4
 12004  0204' 0807'              	movf	(_basic_configuration^(0+512)+7),w
 12005  0205' 0023               	movlb	3	; select bank3
 12006  0206' 0080'              	movwf	_capacity^(0+384)
 12007                           
 12008                           ;charger_discharger.c: 196:                                 EOC_variable = basic_configu
      +                          ration.end_of_charge;
 12009  0207' 0024               	movlb	4	; select bank4
 12010  0208' 0809'              	movf	((_basic_configuration+1)^(0+512)+9),w
 12011  0209' 0023               	movlb	3	; select bank3
 12012  020A' 0080'              	movwf	(_EOC_variable+1)^(0+384)
 12013  020B' 0024               	movlb	4	; select bank4
 12014  020C' 0809'              	movf	(_basic_configuration^(0+512)+9),w
 12015  020D' 0023               	movlb	3	; select bank3
 12016  020E' 0080'              	movwf	_EOC_variable^(0+384)
 12017                           
 12018                           ;charger_discharger.c: 197:                                 EOPC_variable = basic_config
      +                          uration.end_of_precharge;
 12019  020F' 0024               	movlb	4	; select bank4
 12020  0210' 080B'              	movf	((_basic_configuration+1)^(0+512)+11),w
 12021  0211' 0080'              	movwf	(_EOPC_variable+1)^(0+512)
 12022  0212' 080B'              	movf	(_basic_configuration^(0+512)+11),w
 12023  0213' 0080'              	movwf	_EOPC_variable^(0+512)
 12024                           
 12025                           ;charger_discharger.c: 198:                                 EOD_voltage = basic_configur
      +                          ation.end_of_discharge;
 12026  0214' 080D'              	movf	((_basic_configuration+1)^(0+512)+13),w
 12027  0215' 0080'              	movwf	(_EOD_voltage+1)^(0+512)
 12028  0216' 080D'              	movf	(_basic_configuration^(0+512)+13),w
 12029  0217' 0080'              	movwf	_EOD_voltage^(0+512)
 12030                           
 12031                           ;charger_discharger.c: 199:                                 EOPD_capacity = basic_config
      +                          uration.end_of_postdischarge;
 12032  0218' 080F'              	movf	((_basic_configuration+1)^(0+512)+15),w
 12033  0219' 0080'              	movwf	(_EOPD_capacity+1)^(0+512)
 12034  021A' 080F'              	movf	(_basic_configuration^(0+512)+15),w
 12035  021B' 0080'              	movwf	_EOPD_capacity^(0+512)
 12036                           
 12037                           ;charger_discharger.c: 200:                                 break;
 12038  021C' 2800'              	goto	i1l7429
 12039  021D'                    i1l7369:
 12040                           
 12041                           ;charger_discharger.c: 202:                                 put_data_into_structure(leng
      +                          th, (uint8_t*)data, (uint8_t*)test_configuration_ptr);
 12042  021D' 3000'              	movlw	(low (command_interpreter@data| 0))& (0+255)
 12043  021E' 0080'              	movwf	put_data_into_structure@data
 12044  021F' 0800'              	movf	_test_configuration_ptr^(0+128),w
 12045  0220' 0081'              	movwf	put_data_into_structure@structure
 12046  0221' 0800'              	movf	command_interpreter@length^(0+128),w
 12047  0222' 3180' 2000' 3180'  	fcall	_put_data_into_structure
 12048                           
 12049                           ;charger_discharger.c: 203:                                 break;
 12050  0225' 2800'              	goto	i1l7429
 12051  0226'                    i1l7371:
 12052                           
 12053                           ;charger_discharger.c: 205:                                 put_data_into_structure(leng
      +                          th, (uint8_t*)data, (uint8_t*)converter_configuration_ptr);
 12054  0226' 3000'              	movlw	(low (command_interpreter@data| 0))& (0+255)
 12055  0227' 0080'              	movwf	put_data_into_structure@data
 12056  0228' 0800'              	movf	_converter_configuration_ptr^(0+128),w
 12057  0229' 0081'              	movwf	put_data_into_structure@structure
 12058  022A' 0800'              	movf	command_interpreter@length^(0+128),w
 12059  022B' 3180' 2000' 3180'  	fcall	_put_data_into_structure
 12060                           
 12061                           ;charger_discharger.c: 206:                                 CV_kp = (float) ((converter_
      +                          configuration.CVKp) / 1000000.0);
 12062  022E' 3049               	movlw	73
 12063  022F' 0020               	movlb	0	; select bank0
 12064  0230' 00B9'              	movwf	i1___fldiv@a+3
 12065  0231' 3074               	movlw	116
 12066  0232' 00B8'              	movwf	i1___fldiv@a+2
 12067  0233' 3024               	movlw	36
 12068  0234' 00B7'              	movwf	i1___fldiv@a+1
 12069  0235' 3000               	movlw	0
 12070  0236' 00B6'              	movwf	i1___fldiv@a
 12071  0237' 0025               	movlb	5	; select bank5
 12072  0238' 0800'              	movf	_converter_configuration^(0+640),w
 12073  0239' 0080'              	movwf	i1___xxtofl@val
 12074  023A' 0800'              	movf	(_converter_configuration+1)^(0+640),w
 12075  023B' 0081'              	movwf	i1___xxtofl@val+1
 12076  023C' 0182'              	clrf	i1___xxtofl@val+2
 12077  023D' 0183'              	clrf	i1___xxtofl@val+3
 12078  023E' 3000               	movlw	0
 12079  023F' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12080  0242' 0803'              	movf	?i1___xxtofl+3,w
 12081  0243' 0020               	movlb	0	; select bank0
 12082  0244' 00BD'              	movwf	i1___fldiv@b+3
 12083  0245' 0802'              	movf	?i1___xxtofl+2,w
 12084  0246' 00BC'              	movwf	i1___fldiv@b+2
 12085  0247' 0801'              	movf	?i1___xxtofl+1,w
 12086  0248' 00BB'              	movwf	i1___fldiv@b+1
 12087  0249' 0800'              	movf	?i1___xxtofl,w
 12088  024A' 00BA'              	movwf	i1___fldiv@b
 12089  024B' 3180' 2000' 3180'  	fcall	i1___fldiv
 12090  024E' 0839'              	movf	?i1___fldiv+3,w
 12091  024F' 0024               	movlb	4	; select bank4
 12092  0250' 0080'              	movwf	(_CV_kp+3)^(0+512)
 12093  0251' 0020               	movlb	0	; select bank0
 12094  0252' 0838'              	movf	?i1___fldiv+2,w
 12095  0253' 0024               	movlb	4	; select bank4
 12096  0254' 0080'              	movwf	(_CV_kp+2)^(0+512)
 12097  0255' 0020               	movlb	0	; select bank0
 12098  0256' 0837'              	movf	?i1___fldiv+1,w
 12099  0257' 0024               	movlb	4	; select bank4
 12100  0258' 0080'              	movwf	(_CV_kp+1)^(0+512)
 12101  0259' 0020               	movlb	0	; select bank0
 12102  025A' 0836'              	movf	?i1___fldiv,w
 12103  025B' 0024               	movlb	4	; select bank4
 12104  025C' 0080'              	movwf	_CV_kp^(0+512)
 12105                           
 12106                           ;charger_discharger.c: 207:                                 CV_ki = (float) ((converter_
      +                          configuration.CVKi) / 1000000.0);
 12107  025D' 3049               	movlw	73
 12108  025E' 0020               	movlb	0	; select bank0
 12109  025F' 00B9'              	movwf	i1___fldiv@a+3
 12110  0260' 3074               	movlw	116
 12111  0261' 00B8'              	movwf	i1___fldiv@a+2
 12112  0262' 3024               	movlw	36
 12113  0263' 00B7'              	movwf	i1___fldiv@a+1
 12114  0264' 3000               	movlw	0
 12115  0265' 00B6'              	movwf	i1___fldiv@a
 12116  0266' 0025               	movlb	5	; select bank5
 12117  0267' 0802'              	movf	(_converter_configuration^(0+640)+2),w
 12118  0268' 0080'              	movwf	i1___xxtofl@val
 12119  0269' 0802'              	movf	((_converter_configuration+1)^(0+640)+2),w
 12120  026A' 0081'              	movwf	i1___xxtofl@val+1
 12121  026B' 0182'              	clrf	i1___xxtofl@val+2
 12122  026C' 0183'              	clrf	i1___xxtofl@val+3
 12123  026D' 3000               	movlw	0
 12124  026E' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12125  0271' 0803'              	movf	?i1___xxtofl+3,w
 12126  0272' 0020               	movlb	0	; select bank0
 12127  0273' 00BD'              	movwf	i1___fldiv@b+3
 12128  0274' 0802'              	movf	?i1___xxtofl+2,w
 12129  0275' 00BC'              	movwf	i1___fldiv@b+2
 12130  0276' 0801'              	movf	?i1___xxtofl+1,w
 12131  0277' 00BB'              	movwf	i1___fldiv@b+1
 12132  0278' 0800'              	movf	?i1___xxtofl,w
 12133  0279' 00BA'              	movwf	i1___fldiv@b
 12134  027A' 3180' 2000' 3180'  	fcall	i1___fldiv
 12135  027D' 0839'              	movf	?i1___fldiv+3,w
 12136  027E' 0024               	movlb	4	; select bank4
 12137  027F' 0080'              	movwf	(_CV_ki+3)^(0+512)
 12138  0280' 0020               	movlb	0	; select bank0
 12139  0281' 0838'              	movf	?i1___fldiv+2,w
 12140  0282' 0024               	movlb	4	; select bank4
 12141  0283' 0080'              	movwf	(_CV_ki+2)^(0+512)
 12142  0284' 0020               	movlb	0	; select bank0
 12143  0285' 0837'              	movf	?i1___fldiv+1,w
 12144  0286' 0024               	movlb	4	; select bank4
 12145  0287' 0080'              	movwf	(_CV_ki+1)^(0+512)
 12146  0288' 0020               	movlb	0	; select bank0
 12147  0289' 0836'              	movf	?i1___fldiv,w
 12148  028A' 0024               	movlb	4	; select bank4
 12149  028B' 0080'              	movwf	_CV_ki^(0+512)
 12150                           
 12151                           ;charger_discharger.c: 208:                                 CV_kd = (float) ((converter_
      +                          configuration.CVKd) / 1000.0);
 12152  028C' 3044               	movlw	68
 12153  028D' 0020               	movlb	0	; select bank0
 12154  028E' 00B9'              	movwf	i1___fldiv@a+3
 12155  028F' 307A               	movlw	122
 12156  0290' 00B8'              	movwf	i1___fldiv@a+2
 12157  0291' 3000               	movlw	0
 12158  0292' 00B7'              	movwf	i1___fldiv@a+1
 12159  0293' 3000               	movlw	0
 12160  0294' 00B6'              	movwf	i1___fldiv@a
 12161  0295' 0025               	movlb	5	; select bank5
 12162  0296' 0804'              	movf	(_converter_configuration^(0+640)+4),w
 12163  0297' 0080'              	movwf	i1___xxtofl@val
 12164  0298' 0804'              	movf	((_converter_configuration+1)^(0+640)+4),w
 12165  0299' 0081'              	movwf	i1___xxtofl@val+1
 12166  029A' 0182'              	clrf	i1___xxtofl@val+2
 12167  029B' 0183'              	clrf	i1___xxtofl@val+3
 12168  029C' 3000               	movlw	0
 12169  029D' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12170  02A0' 0803'              	movf	?i1___xxtofl+3,w
 12171  02A1' 0020               	movlb	0	; select bank0
 12172  02A2' 00BD'              	movwf	i1___fldiv@b+3
 12173  02A3' 0802'              	movf	?i1___xxtofl+2,w
 12174  02A4' 00BC'              	movwf	i1___fldiv@b+2
 12175  02A5' 0801'              	movf	?i1___xxtofl+1,w
 12176  02A6' 00BB'              	movwf	i1___fldiv@b+1
 12177  02A7' 0800'              	movf	?i1___xxtofl,w
 12178  02A8' 00BA'              	movwf	i1___fldiv@b
 12179  02A9' 3180' 2000' 3180'  	fcall	i1___fldiv
 12180  02AC' 0839'              	movf	?i1___fldiv+3,w
 12181  02AD' 0024               	movlb	4	; select bank4
 12182  02AE' 0080'              	movwf	(_CV_kd+3)^(0+512)
 12183  02AF' 0020               	movlb	0	; select bank0
 12184  02B0' 0838'              	movf	?i1___fldiv+2,w
 12185  02B1' 0024               	movlb	4	; select bank4
 12186  02B2' 0080'              	movwf	(_CV_kd+2)^(0+512)
 12187  02B3' 0020               	movlb	0	; select bank0
 12188  02B4' 0837'              	movf	?i1___fldiv+1,w
 12189  02B5' 0024               	movlb	4	; select bank4
 12190  02B6' 0080'              	movwf	(_CV_kd+1)^(0+512)
 12191  02B7' 0020               	movlb	0	; select bank0
 12192  02B8' 0836'              	movf	?i1___fldiv,w
 12193  02B9' 0024               	movlb	4	; select bank4
 12194  02BA' 0080'              	movwf	_CV_kd^(0+512)
 12195                           
 12196                           ;charger_discharger.c: 209:                                 CC_char_kp = (float) ((conve
      +                          rter_configuration.CCKpC) / 1000000.0);
 12197  02BB' 3049               	movlw	73
 12198  02BC' 0020               	movlb	0	; select bank0
 12199  02BD' 00B9'              	movwf	i1___fldiv@a+3
 12200  02BE' 3074               	movlw	116
 12201  02BF' 00B8'              	movwf	i1___fldiv@a+2
 12202  02C0' 3024               	movlw	36
 12203  02C1' 00B7'              	movwf	i1___fldiv@a+1
 12204  02C2' 3000               	movlw	0
 12205  02C3' 00B6'              	movwf	i1___fldiv@a
 12206  02C4' 0025               	movlb	5	; select bank5
 12207  02C5' 0806'              	movf	(_converter_configuration^(0+640)+6),w
 12208  02C6' 0080'              	movwf	i1___xxtofl@val
 12209  02C7' 0806'              	movf	((_converter_configuration+1)^(0+640)+6),w
 12210  02C8' 0081'              	movwf	i1___xxtofl@val+1
 12211  02C9' 0182'              	clrf	i1___xxtofl@val+2
 12212  02CA' 0183'              	clrf	i1___xxtofl@val+3
 12213  02CB' 3000               	movlw	0
 12214  02CC' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12215  02CF' 0803'              	movf	?i1___xxtofl+3,w
 12216  02D0' 0020               	movlb	0	; select bank0
 12217  02D1' 00BD'              	movwf	i1___fldiv@b+3
 12218  02D2' 0802'              	movf	?i1___xxtofl+2,w
 12219  02D3' 00BC'              	movwf	i1___fldiv@b+2
 12220  02D4' 0801'              	movf	?i1___xxtofl+1,w
 12221  02D5' 00BB'              	movwf	i1___fldiv@b+1
 12222  02D6' 0800'              	movf	?i1___xxtofl,w
 12223  02D7' 00BA'              	movwf	i1___fldiv@b
 12224  02D8' 3180' 2000' 3180'  	fcall	i1___fldiv
 12225  02DB' 0839'              	movf	?i1___fldiv+3,w
 12226  02DC' 0023               	movlb	3	; select bank3
 12227  02DD' 0080'              	movwf	(_CC_char_kp+3)^(0+384)
 12228  02DE' 0020               	movlb	0	; select bank0
 12229  02DF' 0838'              	movf	?i1___fldiv+2,w
 12230  02E0' 0023               	movlb	3	; select bank3
 12231  02E1' 0080'              	movwf	(_CC_char_kp+2)^(0+384)
 12232  02E2' 0020               	movlb	0	; select bank0
 12233  02E3' 0837'              	movf	?i1___fldiv+1,w
 12234  02E4' 0023               	movlb	3	; select bank3
 12235  02E5' 0080'              	movwf	(_CC_char_kp+1)^(0+384)
 12236  02E6' 0020               	movlb	0	; select bank0
 12237  02E7' 0836'              	movf	?i1___fldiv,w
 12238  02E8' 0023               	movlb	3	; select bank3
 12239  02E9' 0080'              	movwf	_CC_char_kp^(0+384)
 12240                           
 12241                           ;charger_discharger.c: 210:                                 CC_char_ki = (float) ((conve
      +                          rter_configuration.CCKiC) / 1000000.0);
 12242  02EA' 3049               	movlw	73
 12243  02EB' 0020               	movlb	0	; select bank0
 12244  02EC' 00B9'              	movwf	i1___fldiv@a+3
 12245  02ED' 3074               	movlw	116
 12246  02EE' 00B8'              	movwf	i1___fldiv@a+2
 12247  02EF' 3024               	movlw	36
 12248  02F0' 00B7'              	movwf	i1___fldiv@a+1
 12249  02F1' 3000               	movlw	0
 12250  02F2' 00B6'              	movwf	i1___fldiv@a
 12251  02F3' 0025               	movlb	5	; select bank5
 12252  02F4' 0808'              	movf	(_converter_configuration^(0+640)+8),w
 12253  02F5' 0080'              	movwf	i1___xxtofl@val
 12254  02F6' 0808'              	movf	((_converter_configuration+1)^(0+640)+8),w
 12255  02F7' 0081'              	movwf	i1___xxtofl@val+1
 12256  02F8' 0182'              	clrf	i1___xxtofl@val+2
 12257  02F9' 0183'              	clrf	i1___xxtofl@val+3
 12258  02FA' 3000               	movlw	0
 12259  02FB' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12260  02FE' 0803'              	movf	?i1___xxtofl+3,w
 12261  02FF' 0020               	movlb	0	; select bank0
 12262  0300' 00BD'              	movwf	i1___fldiv@b+3
 12263  0301' 0802'              	movf	?i1___xxtofl+2,w
 12264  0302' 00BC'              	movwf	i1___fldiv@b+2
 12265  0303' 0801'              	movf	?i1___xxtofl+1,w
 12266  0304' 00BB'              	movwf	i1___fldiv@b+1
 12267  0305' 0800'              	movf	?i1___xxtofl,w
 12268  0306' 00BA'              	movwf	i1___fldiv@b
 12269  0307' 3180' 2000' 3180'  	fcall	i1___fldiv
 12270  030A' 0839'              	movf	?i1___fldiv+3,w
 12271  030B' 0023               	movlb	3	; select bank3
 12272  030C' 0080'              	movwf	(_CC_char_ki+3)^(0+384)
 12273  030D' 0020               	movlb	0	; select bank0
 12274  030E' 0838'              	movf	?i1___fldiv+2,w
 12275  030F' 0023               	movlb	3	; select bank3
 12276  0310' 0080'              	movwf	(_CC_char_ki+2)^(0+384)
 12277  0311' 0020               	movlb	0	; select bank0
 12278  0312' 0837'              	movf	?i1___fldiv+1,w
 12279  0313' 0023               	movlb	3	; select bank3
 12280  0314' 0080'              	movwf	(_CC_char_ki+1)^(0+384)
 12281  0315' 0020               	movlb	0	; select bank0
 12282  0316' 0836'              	movf	?i1___fldiv,w
 12283  0317' 0023               	movlb	3	; select bank3
 12284  0318' 0080'              	movwf	_CC_char_ki^(0+384)
 12285                           
 12286                           ;charger_discharger.c: 211:                                 CC_disc_kp = (float) ((conve
      +                          rter_configuration.CCKpD) / 1000000.0);
 12287  0319' 3049               	movlw	73
 12288  031A' 0020               	movlb	0	; select bank0
 12289  031B' 00B9'              	movwf	i1___fldiv@a+3
 12290  031C' 3074               	movlw	116
 12291  031D' 00B8'              	movwf	i1___fldiv@a+2
 12292  031E' 3024               	movlw	36
 12293  031F' 00B7'              	movwf	i1___fldiv@a+1
 12294  0320' 3000               	movlw	0
 12295  0321' 00B6'              	movwf	i1___fldiv@a
 12296  0322' 0025               	movlb	5	; select bank5
 12297  0323' 080A'              	movf	(_converter_configuration^(0+640)+10),w
 12298  0324' 0080'              	movwf	i1___xxtofl@val
 12299  0325' 080A'              	movf	((_converter_configuration+1)^(0+640)+10),w
 12300  0326' 0081'              	movwf	i1___xxtofl@val+1
 12301  0327' 0182'              	clrf	i1___xxtofl@val+2
 12302  0328' 0183'              	clrf	i1___xxtofl@val+3
 12303  0329' 3000               	movlw	0
 12304  032A' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12305  032D' 0803'              	movf	?i1___xxtofl+3,w
 12306  032E' 0020               	movlb	0	; select bank0
 12307  032F' 00BD'              	movwf	i1___fldiv@b+3
 12308  0330' 0802'              	movf	?i1___xxtofl+2,w
 12309  0331' 00BC'              	movwf	i1___fldiv@b+2
 12310  0332' 0801'              	movf	?i1___xxtofl+1,w
 12311  0333' 00BB'              	movwf	i1___fldiv@b+1
 12312  0334' 0800'              	movf	?i1___xxtofl,w
 12313  0335' 00BA'              	movwf	i1___fldiv@b
 12314  0336' 3180' 2000' 3180'  	fcall	i1___fldiv
 12315  0339' 0839'              	movf	?i1___fldiv+3,w
 12316  033A' 0023               	movlb	3	; select bank3
 12317  033B' 0080'              	movwf	(_CC_disc_kp+3)^(0+384)
 12318  033C' 0020               	movlb	0	; select bank0
 12319  033D' 0838'              	movf	?i1___fldiv+2,w
 12320  033E' 0023               	movlb	3	; select bank3
 12321  033F' 0080'              	movwf	(_CC_disc_kp+2)^(0+384)
 12322  0340' 0020               	movlb	0	; select bank0
 12323  0341' 0837'              	movf	?i1___fldiv+1,w
 12324  0342' 0023               	movlb	3	; select bank3
 12325  0343' 0080'              	movwf	(_CC_disc_kp+1)^(0+384)
 12326  0344' 0020               	movlb	0	; select bank0
 12327  0345' 0836'              	movf	?i1___fldiv,w
 12328  0346' 0023               	movlb	3	; select bank3
 12329  0347' 0080'              	movwf	_CC_disc_kp^(0+384)
 12330                           
 12331                           ;charger_discharger.c: 212:                                 CC_disc_ki = (float) ((conve
      +                          rter_configuration.CCKiD) / 1000000.0);
 12332  0348' 3049               	movlw	73
 12333  0349' 0020               	movlb	0	; select bank0
 12334  034A' 00B9'              	movwf	i1___fldiv@a+3
 12335  034B' 3074               	movlw	116
 12336  034C' 00B8'              	movwf	i1___fldiv@a+2
 12337  034D' 3024               	movlw	36
 12338  034E' 00B7'              	movwf	i1___fldiv@a+1
 12339  034F' 3000               	movlw	0
 12340  0350' 00B6'              	movwf	i1___fldiv@a
 12341  0351' 0025               	movlb	5	; select bank5
 12342  0352' 080C'              	movf	(_converter_configuration^(0+640)+12),w
 12343  0353' 0080'              	movwf	i1___xxtofl@val
 12344  0354' 080C'              	movf	((_converter_configuration+1)^(0+640)+12),w
 12345  0355' 0081'              	movwf	i1___xxtofl@val+1
 12346  0356' 0182'              	clrf	i1___xxtofl@val+2
 12347  0357' 0183'              	clrf	i1___xxtofl@val+3
 12348  0358' 3000               	movlw	0
 12349  0359' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12350  035C' 0803'              	movf	?i1___xxtofl+3,w
 12351  035D' 0020               	movlb	0	; select bank0
 12352  035E' 00BD'              	movwf	i1___fldiv@b+3
 12353  035F' 0802'              	movf	?i1___xxtofl+2,w
 12354  0360' 00BC'              	movwf	i1___fldiv@b+2
 12355  0361' 0801'              	movf	?i1___xxtofl+1,w
 12356  0362' 00BB'              	movwf	i1___fldiv@b+1
 12357  0363' 0800'              	movf	?i1___xxtofl,w
 12358  0364' 00BA'              	movwf	i1___fldiv@b
 12359  0365' 3180' 2000' 3180'  	fcall	i1___fldiv
 12360  0368' 0839'              	movf	?i1___fldiv+3,w
 12361  0369' 0023               	movlb	3	; select bank3
 12362  036A' 0080'              	movwf	(_CC_disc_ki+3)^(0+384)
 12363  036B' 0020               	movlb	0	; select bank0
 12364  036C' 0838'              	movf	?i1___fldiv+2,w
 12365  036D' 0023               	movlb	3	; select bank3
 12366  036E' 0080'              	movwf	(_CC_disc_ki+2)^(0+384)
 12367  036F' 0020               	movlb	0	; select bank0
 12368  0370' 0837'              	movf	?i1___fldiv+1,w
 12369  0371' 0023               	movlb	3	; select bank3
 12370  0372' 0080'              	movwf	(_CC_disc_ki+1)^(0+384)
 12371  0373' 0020               	movlb	0	; select bank0
 12372  0374' 0836'              	movf	?i1___fldiv,w
 12373  0375' 0023               	movlb	3	; select bank3
 12374  0376' 0080'              	movwf	_CC_disc_ki^(0+384)
 12375                           
 12376                           ;charger_discharger.c: 213:                                 break;
 12377  0377' 2800'              	goto	i1l7429
 12378  0378'                    i1l7389:
 12379  0378' 0800'              	movf	command_interpreter@code^(0+128),w
 12380  0379' 0080'              	movwf	??_command_interpreter^(0+128)
 12381  037A' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 12382                           
 12383                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12384                           ; Switch size 1, requested type "simple"
 12385                           ; Number of cases is 1, Range of values is 0 to 0
 12386                           ; switch strategies available:
 12387                           ; Name         Instructions Cycles
 12388                           ; simple_byte            4     3 (average)
 12389                           ; direct_byte            8     6 (fixed)
 12390                           ; jumptable            260     6 (fixed)
 12391                           ;	Chosen strategy is simple_byte
 12392  037B' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 12393  037C' 3A00               	xorlw	0	; case 0
 12394  037D' 1903               	skipnz
 12395  037E' 2800'              	goto	i1l7755
 12396  037F' 2800'              	goto	i1l358
 12397  0380'                    i1l7755:
 12398                           
 12399                           ; Switch size 1, requested type "simple"
 12400                           ; Number of cases is 3, Range of values is 3 to 7
 12401                           ; switch strategies available:
 12402                           ; Name         Instructions Cycles
 12403                           ; simple_byte           10     6 (average)
 12404                           ; direct_byte           19     9 (fixed)
 12405                           ; jumptable            263     9 (fixed)
 12406                           ;	Chosen strategy is simple_byte
 12407  0380' 0800'              	movf	??_command_interpreter^(0+128),w
 12408  0381' 3A03               	xorlw	3	; case 3
 12409  0382' 1903               	skipnz
 12410  0383' 2800'              	goto	i1l7351
 12411  0384' 3A06               	xorlw	6	; case 5
 12412  0385' 1903               	skipnz
 12413  0386' 2800'              	goto	i1l7369
 12414  0387' 3A02               	xorlw	2	; case 7
 12415  0388' 1903               	skipnz
 12416  0389' 2800'              	goto	i1l7371
 12417  038A' 2800'              	goto	i1l358
 12418  038B'                    i1l7391:
 12419                           
 12420                           ;charger_discharger.c: 217:                         if (code == 0x05)
 12421  038B' 3005               	movlw	5
 12422  038C' 0600'              	xorwf	command_interpreter@code^(0+128),w
 12423  038D' 1D03               	btfss	3,2
 12424  038E' 2800'              	goto	i1l7429
 12425                           
 12426                           ;charger_discharger.c: 218:                         {;charger_discharger.c: 219:        
      +                                               counter_state = 0;
 12427  038F' 0180'              	clrf	_counter_state^(0+128)
 12428                           
 12429                           ;charger_discharger.c: 220:                             state = test_configuration.order
      +                          _of_states[counter_state];
 12430  0390' 0800'              	movf	_counter_state^(0+128),w
 12431  0391' 3E00'              	addlw	(low ((_test_configuration| (0+512)+7)))& (0+255)
 12432  0392' 0086               	movwf	6
 12433  0393' 3002               	movlw	2	; select bank4/5
 12434  0394' 0087               	movwf	7
 12435  0395' 0801               	movf	1,w
 12436  0396' 0023               	movlb	3	; select bank3
 12437  0397' 0080'              	movwf	_state^(0+384)
 12438                           
 12439                           ;charger_discharger.c: 221:                             cell_count = 0x01;
 12440  0398' 0180'              	clrf	_cell_count^(0+384)
 12441  0399' 0A80'              	incf	_cell_count^(0+384),f
 12442                           
 12443                           ;charger_discharger.c: 222:                             repetition_counter = 0x01;
 12444  039A' 0180'              	clrf	_repetition_counter^(0+384)
 12445  039B' 0A80'              	incf	_repetition_counter^(0+384),f
 12446                           
 12447                           ;charger_discharger.c: 223:                             converter_settings();
 12448  039C' 3180' 2000' 3180'  	fcall	i1_converter_settings
 12449                           
 12450                           ;charger_discharger.c: 224:                             start = 1;
 12451  039F' 0180'              	clrf	_start^(0+128)
 12452  03A0' 0A80'              	incf	_start^(0+128),f
 12453  03A1' 2800'              	goto	i1l7429
 12454  03A2'                    i1l7407:
 12455  03A2' 0800'              	movf	command_interpreter@operation^(0+128),w
 12456  03A3' 0080'              	movwf	??_command_interpreter^(0+128)
 12457  03A4' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 12458                           
 12459                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12460                           ; Switch size 1, requested type "simple"
 12461                           ; Number of cases is 1, Range of values is 0 to 0
 12462                           ; switch strategies available:
 12463                           ; Name         Instructions Cycles
 12464                           ; simple_byte            4     3 (average)
 12465                           ; direct_byte            8     6 (fixed)
 12466                           ; jumptable            260     6 (fixed)
 12467                           ;	Chosen strategy is simple_byte
 12468  03A5' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 12469  03A6' 3A00               	xorlw	0	; case 0
 12470  03A7' 1903               	skipnz
 12471  03A8' 2800'              	goto	i1l7757
 12472  03A9' 2800'              	goto	i1l7429
 12473  03AA'                    i1l7757:
 12474                           
 12475                           ; Switch size 1, requested type "simple"
 12476                           ; Number of cases is 3, Range of values is 15 to 165
 12477                           ; switch strategies available:
 12478                           ; Name         Instructions Cycles
 12479                           ; simple_byte           10     6 (average)
 12480                           ; jumptable            263     9 (fixed)
 12481                           ;	Chosen strategy is simple_byte
 12482  03AA' 0800'              	movf	??_command_interpreter^(0+128),w
 12483  03AB' 3A0F               	xorlw	15	; case 15
 12484  03AC' 1903               	skipnz
 12485  03AD' 2800'              	goto	i1l7391
 12486  03AE' 3A55               	xorlw	85	; case 90
 12487  03AF' 1903               	skipnz
 12488  03B0' 2800'              	goto	i1l7389
 12489  03B1' 3AFF               	xorlw	255	; case 165
 12490  03B2' 1903               	skipnz
 12491  03B3' 2800'              	goto	i1l7317
 12492  03B4' 2800'              	goto	i1l7429
 12493  03B5'                    i1l7409:
 12494  03B5' 0021               	movlb	1	; select bank1
 12495  03B6' 0180'              	clrf	command_interpreter@test^(0+128)
 12496  03B7'                    i1l358:
 12497                           
 12498                           ;charger_discharger.c: 230:     }else
 12499  03B7' 2800'              	goto	i1l7429
 12500  03B8'                    i1l7411:
 12501                           
 12502                           ;charger_discharger.c: 231:     {;charger_discharger.c: 232:         code = UART_get_byt
      +                          e();
 12503  03B8' 3180' 2000' 3180'  	fcall	_UART_get_byte
 12504  03BB' 0021               	movlb	1	; select bank1
 12505  03BC' 0080'              	movwf	command_interpreter@code^(0+128)
 12506                           
 12507                           ;charger_discharger.c: 233:         switch (code)
 12508  03BD' 2800'              	goto	i1l7427
 12509  03BE'                    i1l361:	
 12510                           ;charger_discharger.c: 234:         {;charger_discharger.c: 235:             case 0x03:
 12511                           
 12512                           
 12513                           ;charger_discharger.c: 236:                 state = IDLE;
 12514  03BE' 0023               	movlb	3	; select bank3
 12515  03BF' 0180'              	clrf	_state^(0+384)
 12516  03C0' 0A80'              	incf	_state^(0+384),f
 12517                           
 12518                           ;charger_discharger.c: 237:                 break;
 12519  03C1' 2800'              	goto	i1l7429
 12520  03C2'                    i1l7413:
 12521                           
 12522                           ;charger_discharger.c: 239:                 counter_state = test_configuration.number_of
      +                          _states + 1;
 12523  03C2' 0024               	movlb	4	; select bank4
 12524  03C3' 0801'              	movf	(_test_configuration^(0+512)+1),w
 12525  03C4' 3E01               	addlw	1
 12526  03C5' 0021               	movlb	1	; select bank1
 12527  03C6' 0080'              	movwf	_counter_state^(0+128)
 12528  03C7'                    i1l7415:
 12529                           
 12530                           ;charger_discharger.c: 240:                 wait_count = getTime();
 12531  03C7' 3180' 2000' 3180'  	fcall	i1_getTime
 12532  03CA' 0021               	movlb	1	; select bank1
 12533  03CB' 0080'              	movwf	??_command_interpreter^(0+128)
 12534  03CC' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 12535  03CD' 0800'              	movf	??_command_interpreter^(0+128),w
 12536  03CE' 0023               	movlb	3	; select bank3
 12537  03CF' 0080'              	movwf	_wait_count^(0+384)
 12538  03D0' 0021               	movlb	1	; select bank1
 12539  03D1' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 12540  03D2' 0023               	movlb	3	; select bank3
 12541  03D3' 0080'              	movwf	(_wait_count+1)^(0+384)
 12542                           
 12543                           ;charger_discharger.c: 241:                 state = WAIT;
 12544  03D4' 300D               	movlw	13
 12545  03D5' 0080'              	movwf	_state^(0+384)
 12546                           
 12547                           ;charger_discharger.c: 242:                 break;
 12548  03D6' 2800'              	goto	i1l7429
 12549  03D7'                    i1l7427:
 12550  03D7' 0800'              	movf	command_interpreter@code^(0+128),w
 12551  03D8' 0080'              	movwf	??_command_interpreter^(0+128)
 12552  03D9' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 12553                           
 12554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12555                           ; Switch size 1, requested type "simple"
 12556                           ; Number of cases is 1, Range of values is 0 to 0
 12557                           ; switch strategies available:
 12558                           ; Name         Instructions Cycles
 12559                           ; simple_byte            4     3 (average)
 12560                           ; direct_byte            8     6 (fixed)
 12561                           ; jumptable            260     6 (fixed)
 12562                           ;	Chosen strategy is simple_byte
 12563  03DA' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 12564  03DB' 3A00               	xorlw	0	; case 0
 12565  03DC' 1903               	skipnz
 12566  03DD' 2800'              	goto	i1l7759
 12567  03DE' 2800'              	goto	i1l7409
 12568  03DF'                    i1l7759:
 12569                           
 12570                           ; Switch size 1, requested type "simple"
 12571                           ; Number of cases is 3, Range of values is 3 to 9
 12572                           ; switch strategies available:
 12573                           ; Name         Instructions Cycles
 12574                           ; simple_byte           10     6 (average)
 12575                           ; direct_byte           23     9 (fixed)
 12576                           ; jumptable            263     9 (fixed)
 12577                           ;	Chosen strategy is simple_byte
 12578  03DF' 0800'              	movf	??_command_interpreter^(0+128),w
 12579  03E0' 3A03               	xorlw	3	; case 3
 12580  03E1' 1903               	skipnz
 12581  03E2' 2800'              	goto	i1l361
 12582  03E3' 3A04               	xorlw	4	; case 7
 12583  03E4' 1903               	skipnz
 12584  03E5' 2800'              	goto	i1l7413
 12585  03E6' 3A0E               	xorlw	14	; case 9
 12586  03E7' 1903               	skipnz
 12587  03E8' 2800'              	goto	i1l7415
 12588  03E9' 2800'              	goto	i1l7409
 12589  03EA'                    i1l7429:
 12590                           
 12591                           ;charger_discharger.c: 252:     return (test);
 12592  03EA' 0021               	movlb	1	; select bank1
 12593  03EB' 0800'              	movf	command_interpreter@test^(0+128),w
 12594  03EC' 0008               	return
 12595  03ED'                    __end_of_command_interpreter:
 12596                           
 12597                           	psect	text37
 12598  0000'                    __ptext37:	
 12599 ;; *************** function i1_getTime *****************
 12600 ;; Defined at:
 12601 ;;		line 565 in file "charger_discharger.c"
 12602 ;; Parameters:    Size  Location     Type
 12603 ;;		None
 12604 ;; Auto vars:     Size  Location     Type
 12605 ;;		None
 12606 ;; Return value:  Size  Location     Type
 12607 ;;                  1    wreg      unsigned char 
 12608 ;; Registers used:
 12609 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12610 ;; Tracked objects:
 12611 ;;		On entry : 1D/1
 12612 ;;		On exit  : 1F/4
 12613 ;;		Unchanged: 0/0
 12614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12617 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12618 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12619 ;;Total ram usage:        2 bytes
 12620 ;; Hardware stack levels used: 1
 12621 ;; This function calls:
 12622 ;;		Nothing
 12623 ;; This function is called by:
 12624 ;;		_command_interpreter
 12625 ;; This function uses a non-reentrant model
 12626 ;;
 12627                           
 12628  0000'                    i1_getTime:	
 12629                           ;psect for function i1_getTime
 12630                           
 12631                           
 12632                           ;charger_discharger.c: 566:     if ((counter_state + 1 <= test_configuration.number_of_s
      +                          tates) && (test_configuration.order_of_states[counter_state + 1] != 0x00)){
 12633                           
 12634                           ;incstack = 0
 12635                           ; Regs used in i1_getTime: [wreg+fsr1l+fsr1h+status,2+status,0]
 12636  0000' 0021               	movlb	1	; select bank1
 12637  0001' 0800'              	movf	_counter_state^(0+128),w
 12638  0002' 3E01               	addlw	1
 12639  0003' 0080'              	movwf	??i1_getTime
 12640  0004' 3000               	movlw	0
 12641  0005' 1803               	skipnc
 12642  0006' 3001               	movlw	1
 12643  0007' 0081'              	movwf	??i1_getTime+1
 12644  0008' 0801'              	movf	??i1_getTime+1,w
 12645  0009' 3A80               	xorlw	128
 12646  000A' 3C80               	sublw	128
 12647  000B' 1D03               	skipz
 12648  000C' 2800'              	goto	u683_25
 12649  000D' 0800'              	movf	??i1_getTime,w
 12650  000E' 0024               	movlb	4	; select bank4
 12651  000F' 0201'              	subwf	(_test_configuration^(0+512)+1),w
 12652  0010'                    u683_25:
 12653  0010' 1C03               	skipc
 12654  0011' 2800'              	goto	i1l6275
 12655  0012' 0021               	movlb	1	; select bank1
 12656  0013' 0800'              	movf	_counter_state^(0+128),w
 12657  0014' 3E00'              	addlw	(low ((_test_configuration| (0+512)+8)))& (0+255)
 12658  0015' 0086               	movwf	6
 12659  0016' 3002               	movlw	2	; select bank4/5
 12660  0017' 0087               	movwf	7
 12661  0018' 0801               	movf	1,w
 12662  0019' 1903               	btfsc	3,2
 12663  001A' 2800'              	goto	i1l6275
 12664  001B'                    i1l6269:
 12665                           
 12666                           ;charger_discharger.c: 567:         return test_configuration.wait_time;
 12667  001B' 0024               	movlb	4	; select bank4
 12668  001C' 0803'              	movf	(_test_configuration^(0+512)+3),w
 12669  001D' 0008               	return
 12670  001E'                    i1l6275:
 12671  001E' 0024               	movlb	4	; select bank4
 12672  001F' 0800'              	movf	_test_configuration^(0+512),w
 12673  0020' 0023               	movlb	3	; select bank3
 12674  0021' 0200'              	subwf	_cell_count^(0+384),w
 12675  0022' 1C03               	btfss	3,0
 12676  0023' 2800'              	goto	i1l6269
 12677                           
 12678                           ;charger_discharger.c: 573:         return test_configuration.end_wait_time;
 12679  0024' 0024               	movlb	4	; select bank4
 12680  0025' 0805'              	movf	(_test_configuration^(0+512)+5),w
 12681  0026' 0008               	return
 12682  0027'                    __end_ofi1_getTime:
 12683                           
 12684                           	psect	text38
 12685  0000'                    __ptext38:	
 12686 ;; *************** function i1_converter_settings *****************
 12687 ;; Defined at:
 12688 ;;		line 208 in file "state_machine_b.c"
 12689 ;; Parameters:    Size  Location     Type
 12690 ;;		None
 12691 ;; Auto vars:     Size  Location     Type
 12692 ;;		None
 12693 ;; Return value:  Size  Location     Type
 12694 ;;                  1    wreg      void 
 12695 ;; Registers used:
 12696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12697 ;; Tracked objects:
 12698 ;;		On entry : 1F/3
 12699 ;;		On exit  : 1F/1
 12700 ;;		Unchanged: 0/0
 12701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12703 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12704 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12705 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12706 ;;Total ram usage:        8 bytes
 12707 ;; Hardware stack levels used: 1
 12708 ;; Hardware stack levels required when called: 2
 12709 ;; This function calls:
 12710 ;;		i1_Cell_ON
 12711 ;;		i1___fladd
 12712 ;;		i1___fldiv
 12713 ;;		i1___flmul
 12714 ;;		i1___fltol
 12715 ;;		i1___xxtofl
 12716 ;;		i1_set_DC
 12717 ;; This function is called by:
 12718 ;;		_command_interpreter
 12719 ;; This function uses a non-reentrant model
 12720 ;;
 12721                           
 12722  0000'                    i1_converter_settings:	
 12723                           ;psect for function i1_converter_settings
 12724                           
 12725                           
 12726                           ;state_machine_b.c: 211:     cmode = 1;
 12727                           
 12728                           ;incstack = 0
 12729                           ; Regs used in i1_converter_settings: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12730  0000' 0021               	movlb	1	; select bank1
 12731  0001' 0180'              	clrf	_cmode^(0+128)
 12732  0002' 0A80'              	incf	_cmode^(0+128),f
 12733                           
 12734                           ;state_machine_b.c: 212:     pidi = 0;
 12735  0003' 3000               	movlw	0
 12736  0004' 0024               	movlb	4	; select bank4
 12737  0005' 0080'              	movwf	(_pidi+3)^(0+512)
 12738  0006' 3000               	movlw	0
 12739  0007' 0080'              	movwf	(_pidi+2)^(0+512)
 12740  0008' 3000               	movlw	0
 12741  0009' 0080'              	movwf	(_pidi+1)^(0+512)
 12742  000A' 3000               	movlw	0
 12743  000B' 0080'              	movwf	_pidi^(0+512)
 12744                           
 12745                           ;state_machine_b.c: 213:     qavg = 0;
 12746  000C' 3000               	movlw	0
 12747  000D' 0023               	movlb	3	; select bank3
 12748  000E' 0080'              	movwf	(_qavg+3)^(0+384)
 12749  000F' 3000               	movlw	0
 12750  0010' 0080'              	movwf	(_qavg+2)^(0+384)
 12751  0011' 3000               	movlw	0
 12752  0012' 0080'              	movwf	(_qavg+1)^(0+384)
 12753  0013' 3000               	movlw	0
 12754  0014' 0080'              	movwf	_qavg^(0+384)
 12755                           
 12756                           ;state_machine_b.c: 214:     vmax = 0;
 12757  0015' 0180'              	clrf	_vmax^(0+384)
 12758  0016' 0180'              	clrf	(_vmax+1)^(0+384)
 12759                           
 12760                           ;state_machine_b.c: 215:     pidt = 50.0;
 12761  0017' 3042               	movlw	66
 12762  0018' 0080'              	movwf	(_pidt+3)^(0+384)
 12763  0019' 3048               	movlw	72
 12764  001A' 0080'              	movwf	(_pidt+2)^(0+384)
 12765  001B' 3000               	movlw	0
 12766  001C' 0080'              	movwf	(_pidt+1)^(0+384)
 12767  001D' 3000               	movlw	0
 12768  001E' 0080'              	movwf	_pidt^(0+384)
 12769                           
 12770                           ;state_machine_b.c: 216:     set_DC();
 12771  001F' 3180' 2000' 3180'  	fcall	i1_set_DC
 12772                           
 12773                           ;state_machine_b.c: 217:     Cell_ON();
 12774  0022' 3180' 2000' 3180'  	fcall	i1_Cell_ON
 12775                           
 12776                           ;state_machine_b.c: 218:     switch(state)
 12777  0025' 2800'              	goto	i1l6435
 12778  0026'                    i1l6299:
 12779                           
 12780                           ;state_machine_b.c: 221:             iref = i_char;
 12781  0026' 0023               	movlb	3	; select bank3
 12782  0027' 0800'              	movf	(_i_char+1)^(0+384),w
 12783  0028' 0021               	movlb	1	; select bank1
 12784  0029' 0080'              	movwf	(_iref+1)^(0+128)
 12785  002A' 0023               	movlb	3	; select bank3
 12786  002B' 0800'              	movf	_i_char^(0+384),w
 12787  002C' 0021               	movlb	1	; select bank1
 12788  002D' 0080'              	movwf	_iref^(0+128)
 12789                           
 12790                           ;state_machine_b.c: 222:             if(basic_configuration.version == 0x02) timeout = (
      +                          uint16_t)(((float)capacity / (float)basic_configuration.const_current_char) * 3600 * 1.1
      +                          );
 12791  002E' 3002               	movlw	2
 12792  002F' 0024               	movlb	4	; select bank4
 12793  0030' 0600'              	xorwf	_basic_configuration^(0+512),w
 12794  0031' 1D03               	btfss	3,2
 12795  0032' 2800'              	goto	i1l6305
 12796  0033' 0023               	movlb	3	; select bank3
 12797  0034' 0800'              	movf	_capacity^(0+384),w
 12798  0035' 0080'              	movwf	i1___xxtofl@val
 12799  0036' 0800'              	movf	(_capacity+1)^(0+384),w
 12800  0037' 0081'              	movwf	i1___xxtofl@val+1
 12801  0038' 0182'              	clrf	i1___xxtofl@val+2
 12802  0039' 0183'              	clrf	i1___xxtofl@val+3
 12803  003A' 3000               	movlw	0
 12804  003B' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12805  003E' 0803'              	movf	?i1___xxtofl+3,w
 12806  003F' 0020               	movlb	0	; select bank0
 12807  0040' 00BD'              	movwf	i1___fldiv@b+3
 12808  0041' 0802'              	movf	?i1___xxtofl+2,w
 12809  0042' 00BC'              	movwf	i1___fldiv@b+2
 12810  0043' 0801'              	movf	?i1___xxtofl+1,w
 12811  0044' 00BB'              	movwf	i1___fldiv@b+1
 12812  0045' 0800'              	movf	?i1___xxtofl,w
 12813  0046' 00BA'              	movwf	i1___fldiv@b
 12814  0047' 0024               	movlb	4	; select bank4
 12815  0048' 0803'              	movf	(_basic_configuration^(0+512)+3),w
 12816  0049' 0080'              	movwf	i1___xxtofl@val
 12817  004A' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
 12818  004B' 0081'              	movwf	i1___xxtofl@val+1
 12819  004C' 0182'              	clrf	i1___xxtofl@val+2
 12820  004D' 0183'              	clrf	i1___xxtofl@val+3
 12821  004E' 3000               	movlw	0
 12822  004F' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12823  0052' 0803'              	movf	?i1___xxtofl+3,w
 12824  0053' 0020               	movlb	0	; select bank0
 12825  0054' 00B9'              	movwf	i1___fldiv@a+3
 12826  0055' 0802'              	movf	?i1___xxtofl+2,w
 12827  0056' 00B8'              	movwf	i1___fldiv@a+2
 12828  0057' 0801'              	movf	?i1___xxtofl+1,w
 12829  0058' 00B7'              	movwf	i1___fldiv@a+1
 12830  0059' 0800'              	movf	?i1___xxtofl,w
 12831  005A' 00B6'              	movwf	i1___fldiv@a
 12832  005B' 3180' 2000' 3180'  	fcall	i1___fldiv
 12833  005E' 0839'              	movf	?i1___fldiv+3,w
 12834  005F' 00A3'              	movwf	i1___flmul@a+3
 12835  0060' 0838'              	movf	?i1___fldiv+2,w
 12836  0061' 00A2'              	movwf	i1___flmul@a+2
 12837  0062' 0837'              	movf	?i1___fldiv+1,w
 12838  0063' 00A1'              	movwf	i1___flmul@a+1
 12839  0064' 0836'              	movf	?i1___fldiv,w
 12840  0065' 00A0'              	movwf	i1___flmul@a
 12841  0066' 3045               	movlw	69
 12842  0067' 009F'              	movwf	i1___flmul@b+3
 12843  0068' 3061               	movlw	97
 12844  0069' 009E'              	movwf	i1___flmul@b+2
 12845  006A' 3000               	movlw	0
 12846  006B' 009D'              	movwf	i1___flmul@b+1
 12847  006C' 3000               	movlw	0
 12848  006D' 009C'              	movwf	i1___flmul@b
 12849  006E' 3180' 2000' 3180'  	fcall	i1___flmul
 12850  0071' 081F'              	movf	?i1___flmul+3,w
 12851  0072' 0021               	movlb	1	; select bank1
 12852  0073' 0080'              	movwf	(i1_converter_settings$1748+3)^(0+128)
 12853  0074' 0020               	movlb	0	; select bank0
 12854  0075' 081E'              	movf	?i1___flmul+2,w
 12855  0076' 0021               	movlb	1	; select bank1
 12856  0077' 0080'              	movwf	(i1_converter_settings$1748+2)^(0+128)
 12857  0078' 0020               	movlb	0	; select bank0
 12858  0079' 081D'              	movf	?i1___flmul+1,w
 12859  007A' 0021               	movlb	1	; select bank1
 12860  007B' 0080'              	movwf	(i1_converter_settings$1748+1)^(0+128)
 12861  007C' 0020               	movlb	0	; select bank0
 12862  007D' 081C'              	movf	?i1___flmul,w
 12863  007E' 0021               	movlb	1	; select bank1
 12864  007F' 0080'              	movwf	i1_converter_settings$1748^(0+128)
 12865  0080' 0800'              	movf	(i1_converter_settings$1748+3)^(0+128),w
 12866  0081' 0020               	movlb	0	; select bank0
 12867  0082' 00A3'              	movwf	i1___flmul@a+3
 12868  0083' 0021               	movlb	1	; select bank1
 12869  0084' 0800'              	movf	(i1_converter_settings$1748+2)^(0+128),w
 12870  0085' 0020               	movlb	0	; select bank0
 12871  0086' 00A2'              	movwf	i1___flmul@a+2
 12872  0087' 0021               	movlb	1	; select bank1
 12873  0088' 0800'              	movf	(i1_converter_settings$1748+1)^(0+128),w
 12874  0089' 0020               	movlb	0	; select bank0
 12875  008A' 00A1'              	movwf	i1___flmul@a+1
 12876  008B' 0021               	movlb	1	; select bank1
 12877  008C' 0800'              	movf	i1_converter_settings$1748^(0+128),w
 12878  008D' 0020               	movlb	0	; select bank0
 12879  008E' 00A0'              	movwf	i1___flmul@a
 12880  008F' 303F               	movlw	63
 12881  0090' 009F'              	movwf	i1___flmul@b+3
 12882  0091' 308C               	movlw	140
 12883  0092' 009E'              	movwf	i1___flmul@b+2
 12884  0093' 30CC               	movlw	204
 12885  0094' 009D'              	movwf	i1___flmul@b+1
 12886  0095' 30CD               	movlw	205
 12887  0096' 009C'              	movwf	i1___flmul@b
 12888  0097' 3180' 2000' 3180'  	fcall	i1___flmul
 12889  009A' 081F'              	movf	?i1___flmul+3,w
 12890  009B' 0021               	movlb	1	; select bank1
 12891  009C' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 12892  009D' 0020               	movlb	0	; select bank0
 12893  009E' 081E'              	movf	?i1___flmul+2,w
 12894  009F' 0021               	movlb	1	; select bank1
 12895  00A0' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 12896  00A1' 0020               	movlb	0	; select bank0
 12897  00A2' 081D'              	movf	?i1___flmul+1,w
 12898  00A3' 0021               	movlb	1	; select bank1
 12899  00A4' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 12900  00A5' 0020               	movlb	0	; select bank0
 12901  00A6' 081C'              	movf	?i1___flmul,w
 12902  00A7' 0021               	movlb	1	; select bank1
 12903  00A8' 0080'              	movwf	i1___fltol@f1^(0+128)
 12904  00A9' 3180' 2000' 3180'  	fcall	i1___fltol
 12905  00AC' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 12906  00AD' 0023               	movlb	3	; select bank3
 12907  00AE' 0080'              	movwf	(_timeout+1)^(0+384)
 12908  00AF' 0021               	movlb	1	; select bank1
 12909  00B0' 0800'              	movf	?i1___fltol^(0+128),w
 12910  00B1' 0023               	movlb	3	; select bank3
 12911  00B2' 0080'              	movwf	_timeout^(0+384)
 12912  00B3'                    i1l6305:
 12913                           
 12914                           ;state_machine_b.c: 223:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC4 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC4 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_char_kp; ki = CC_char_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
 12915  00B3' 0020               	movlb	0	; select bank0
 12916  00B4' 118E               	bcf	14,3	;volatile
 12917  00B5' 120E               	bcf	14,4	;volatile
 12918  00B6' 3005               	movlw	5
 12919  00B7' 0021               	movlb	1	; select bank1
 12920  00B8' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 12921  00B9' 300F               	movlw	15
 12922  00BA' 0080'              	movwf	??i1_converter_settings^(0+128)
 12923  00BB' 30F1               	movlw	241
 12924  00BC'                    u788_27:
 12925  00BC' 0B89               	decfsz	9,f
 12926  00BD' 2800'              	goto	u788_27
 12927  00BE' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 12928  00BF' 2800'              	goto	u788_27
 12929  00C0' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 12930  00C1' 2800'              	goto	u788_27
 12931  00C2' 0020               	movlb	0	; select bank0
 12932  00C3' 160E               	bsf	14,4	;volatile
 12933  00C4' 3005               	movlw	5
 12934  00C5' 0021               	movlb	1	; select bank1
 12935  00C6' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 12936  00C7' 300F               	movlw	15
 12937  00C8' 0080'              	movwf	??i1_converter_settings^(0+128)
 12938  00C9' 30F1               	movlw	241
 12939  00CA'                    u789_27:
 12940  00CA' 0B89               	decfsz	9,f
 12941  00CB' 2800'              	goto	u789_27
 12942  00CC' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 12943  00CD' 2800'              	goto	u789_27
 12944  00CE' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 12945  00CF' 2800'              	goto	u789_27
 12946  00D0' 0020               	movlb	0	; select bank0
 12947  00D1' 120E               	bcf	14,4	;volatile
 12948  00D2' 3005               	movlw	5
 12949  00D3' 0021               	movlb	1	; select bank1
 12950  00D4' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 12951  00D5' 300F               	movlw	15
 12952  00D6' 0080'              	movwf	??i1_converter_settings^(0+128)
 12953  00D7' 30F1               	movlw	241
 12954  00D8'                    u790_27:
 12955  00D8' 0B89               	decfsz	9,f
 12956  00D9' 2800'              	goto	u790_27
 12957  00DA' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 12958  00DB' 2800'              	goto	u790_27
 12959  00DC' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 12960  00DD' 2800'              	goto	u790_27
 12961  00DE' 0020               	movlb	0	; select bank0
 12962  00DF' 168E               	bsf	14,5	;volatile
 12963  00E0' 3005               	movlw	5
 12964  00E1' 0021               	movlb	1	; select bank1
 12965  00E2' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 12966  00E3' 300F               	movlw	15
 12967  00E4' 0080'              	movwf	??i1_converter_settings^(0+128)
 12968  00E5' 30F1               	movlw	241
 12969  00E6'                    u791_27:
 12970  00E6' 0B89               	decfsz	9,f
 12971  00E7' 2800'              	goto	u791_27
 12972  00E8' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 12973  00E9' 2800'              	goto	u791_27
 12974  00EA' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 12975  00EB' 2800'              	goto	u791_27
 12976  00EC' 2800'              	goto	L19
 12977  00ED'                    i1l6329:	
 12978                           ;state_machine_b.c: 224:             break;
 12979                           
 12980                           
 12981                           ;state_machine_b.c: 226:             iref = i_disc;
 12982  00ED' 0023               	movlb	3	; select bank3
 12983  00EE' 0800'              	movf	(_i_disc+1)^(0+384),w
 12984  00EF' 0021               	movlb	1	; select bank1
 12985  00F0' 0080'              	movwf	(_iref+1)^(0+128)
 12986  00F1' 0023               	movlb	3	; select bank3
 12987  00F2' 0800'              	movf	_i_disc^(0+384),w
 12988  00F3' 0021               	movlb	1	; select bank1
 12989  00F4' 0080'              	movwf	_iref^(0+128)
 12990                           
 12991                           ;state_machine_b.c: 227:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
 12992  00F5' 0020               	movlb	0	; select bank0
 12993  00F6' 118E               	bcf	14,3	;volatile
 12994  00F7' 120E               	bcf	14,4	;volatile
 12995  00F8' 3005               	movlw	5
 12996  00F9' 0021               	movlb	1	; select bank1
 12997  00FA' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 12998  00FB' 300F               	movlw	15
 12999  00FC' 0080'              	movwf	??i1_converter_settings^(0+128)
 13000  00FD' 30F1               	movlw	241
 13001  00FE'                    u792_27:
 13002  00FE' 0B89               	decfsz	9,f
 13003  00FF' 2800'              	goto	u792_27
 13004  0100' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13005  0101' 2800'              	goto	u792_27
 13006  0102' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13007  0103' 2800'              	goto	u792_27
 13008  0104' 0020               	movlb	0	; select bank0
 13009  0105' 158E               	bsf	14,3	;volatile
 13010  0106' 3005               	movlw	5
 13011  0107' 0021               	movlb	1	; select bank1
 13012  0108' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13013  0109' 300F               	movlw	15
 13014  010A' 0080'              	movwf	??i1_converter_settings^(0+128)
 13015  010B' 30F1               	movlw	241
 13016  010C'                    u793_27:
 13017  010C' 0B89               	decfsz	9,f
 13018  010D' 2800'              	goto	u793_27
 13019  010E' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13020  010F' 2800'              	goto	u793_27
 13021  0110' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13022  0111' 2800'              	goto	u793_27
 13023  0112' 0020               	movlb	0	; select bank0
 13024  0113' 118E               	bcf	14,3	;volatile
 13025  0114' 3005               	movlw	5
 13026  0115' 0021               	movlb	1	; select bank1
 13027  0116' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13028  0117' 300F               	movlw	15
 13029  0118' 0080'              	movwf	??i1_converter_settings^(0+128)
 13030  0119' 30F1               	movlw	241
 13031  011A'                    u794_27:
 13032  011A' 0B89               	decfsz	9,f
 13033  011B' 2800'              	goto	u794_27
 13034  011C' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13035  011D' 2800'              	goto	u794_27
 13036  011E' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13037  011F' 2800'              	goto	u794_27
 13038  0120' 0020               	movlb	0	; select bank0
 13039  0121' 168E               	bsf	14,5	;volatile
 13040  0122' 3005               	movlw	5
 13041  0123' 0021               	movlb	1	; select bank1
 13042  0124' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13043  0125' 300F               	movlw	15
 13044  0126' 0080'              	movwf	??i1_converter_settings^(0+128)
 13045  0127' 30F1               	movlw	241
 13046  0128'                    u795_27:
 13047  0128' 0B89               	decfsz	9,f
 13048  0129' 2800'              	goto	u795_27
 13049  012A' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13050  012B' 2800'              	goto	u795_27
 13051  012C' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13052  012D' 2800'              	goto	u795_27
 13053  012E' 2800'              	goto	L18
 13054  012F'                    i1l6345:	
 13055                           ;state_machine_b.c: 228:             break;
 13056                           
 13057                           
 13058                           ;state_machine_b.c: 230:             iref = (uint16_t) ( ( ( capacity * 4096.0 ) / (5000
      +                           * 2.5) ) + 0.5 );
 13059  012F' 0023               	movlb	3	; select bank3
 13060  0130' 0800'              	movf	_capacity^(0+384),w
 13061  0131' 0080'              	movwf	i1___xxtofl@val
 13062  0132' 0800'              	movf	(_capacity+1)^(0+384),w
 13063  0133' 0081'              	movwf	i1___xxtofl@val+1
 13064  0134' 0182'              	clrf	i1___xxtofl@val+2
 13065  0135' 0183'              	clrf	i1___xxtofl@val+3
 13066  0136' 3000               	movlw	0
 13067  0137' 3180' 2000' 3180'  	fcall	i1___xxtofl
 13068  013A' 0803'              	movf	?i1___xxtofl+3,w
 13069  013B' 0020               	movlb	0	; select bank0
 13070  013C' 00A3'              	movwf	i1___flmul@a+3
 13071  013D' 0802'              	movf	?i1___xxtofl+2,w
 13072  013E' 00A2'              	movwf	i1___flmul@a+2
 13073  013F' 0801'              	movf	?i1___xxtofl+1,w
 13074  0140' 00A1'              	movwf	i1___flmul@a+1
 13075  0141' 0800'              	movf	?i1___xxtofl,w
 13076  0142' 00A0'              	movwf	i1___flmul@a
 13077  0143' 3045               	movlw	69
 13078  0144' 009F'              	movwf	i1___flmul@b+3
 13079  0145' 3080               	movlw	128
 13080  0146' 009E'              	movwf	i1___flmul@b+2
 13081  0147' 3000               	movlw	0
 13082  0148' 009D'              	movwf	i1___flmul@b+1
 13083  0149' 3000               	movlw	0
 13084  014A' 009C'              	movwf	i1___flmul@b
 13085  014B' 3180' 2000' 3180'  	fcall	i1___flmul
 13086  014E' 081F'              	movf	?i1___flmul+3,w
 13087  014F' 00BD'              	movwf	i1___fldiv@b+3
 13088  0150' 081E'              	movf	?i1___flmul+2,w
 13089  0151' 00BC'              	movwf	i1___fldiv@b+2
 13090  0152' 081D'              	movf	?i1___flmul+1,w
 13091  0153' 00BB'              	movwf	i1___fldiv@b+1
 13092  0154' 081C'              	movf	?i1___flmul,w
 13093  0155' 00BA'              	movwf	i1___fldiv@b
 13094  0156' 3046               	movlw	70
 13095  0157' 00B9'              	movwf	i1___fldiv@a+3
 13096  0158' 3043               	movlw	67
 13097  0159' 00B8'              	movwf	i1___fldiv@a+2
 13098  015A' 3050               	movlw	80
 13099  015B' 00B7'              	movwf	i1___fldiv@a+1
 13100  015C' 3000               	movlw	0
 13101  015D' 00B6'              	movwf	i1___fldiv@a
 13102  015E' 3180' 2000' 3180'  	fcall	i1___fldiv
 13103  0161' 0839'              	movf	?i1___fldiv+3,w
 13104  0162' 0087'              	movwf	i1___fladd@a+3
 13105  0163' 0838'              	movf	?i1___fldiv+2,w
 13106  0164' 0086'              	movwf	i1___fladd@a+2
 13107  0165' 0837'              	movf	?i1___fldiv+1,w
 13108  0166' 0085'              	movwf	i1___fladd@a+1
 13109  0167' 0836'              	movf	?i1___fldiv,w
 13110  0168' 0084'              	movwf	i1___fladd@a
 13111  0169' 303F               	movlw	63
 13112  016A' 0083'              	movwf	i1___fladd@b+3
 13113  016B' 3000               	movlw	0
 13114  016C' 0082'              	movwf	i1___fladd@b+2
 13115  016D' 3000               	movlw	0
 13116  016E' 0081'              	movwf	i1___fladd@b+1
 13117  016F' 3000               	movlw	0
 13118  0170' 0080'              	movwf	i1___fladd@b
 13119  0171' 3180' 2000' 3180'  	fcall	i1___fladd
 13120  0174' 0803'              	movf	?i1___fladd+3,w
 13121  0175' 0021               	movlb	1	; select bank1
 13122  0176' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 13123  0177' 0020               	movlb	0	; select bank0
 13124  0178' 0802'              	movf	?i1___fladd+2,w
 13125  0179' 0021               	movlb	1	; select bank1
 13126  017A' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 13127  017B' 0020               	movlb	0	; select bank0
 13128  017C' 0801'              	movf	?i1___fladd+1,w
 13129  017D' 0021               	movlb	1	; select bank1
 13130  017E' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 13131  017F' 0020               	movlb	0	; select bank0
 13132  0180' 0800'              	movf	?i1___fladd,w
 13133  0181' 0021               	movlb	1	; select bank1
 13134  0182' 0080'              	movwf	i1___fltol@f1^(0+128)
 13135  0183' 3180' 2000' 3180'  	fcall	i1___fltol
 13136  0186' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 13137  0187' 0080'              	movwf	(_iref+1)^(0+128)
 13138  0188' 0800'              	movf	?i1___fltol^(0+128),w
 13139  0189' 0080'              	movwf	_iref^(0+128)
 13140                           
 13141                           ;state_machine_b.c: 231:             dc_res_count = 220;
 13142  018A' 30DC               	movlw	220
 13143  018B' 0023               	movlb	3	; select bank3
 13144  018C' 0080'              	movwf	_dc_res_count^(0+384)
 13145                           
 13146                           ;state_machine_b.c: 232:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
 13147  018D' 0020               	movlb	0	; select bank0
 13148  018E' 118E               	bcf	14,3	;volatile
 13149  018F' 120E               	bcf	14,4	;volatile
 13150  0190' 3005               	movlw	5
 13151  0191' 0021               	movlb	1	; select bank1
 13152  0192' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13153  0193' 300F               	movlw	15
 13154  0194' 0080'              	movwf	??i1_converter_settings^(0+128)
 13155  0195' 30F1               	movlw	241
 13156  0196'                    u796_27:
 13157  0196' 0B89               	decfsz	9,f
 13158  0197' 2800'              	goto	u796_27
 13159  0198' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13160  0199' 2800'              	goto	u796_27
 13161  019A' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13162  019B' 2800'              	goto	u796_27
 13163  019C' 0020               	movlb	0	; select bank0
 13164  019D' 158E               	bsf	14,3	;volatile
 13165  019E' 3005               	movlw	5
 13166  019F' 0021               	movlb	1	; select bank1
 13167  01A0' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13168  01A1' 300F               	movlw	15
 13169  01A2' 0080'              	movwf	??i1_converter_settings^(0+128)
 13170  01A3' 30F1               	movlw	241
 13171  01A4'                    u797_27:
 13172  01A4' 0B89               	decfsz	9,f
 13173  01A5' 2800'              	goto	u797_27
 13174  01A6' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13175  01A7' 2800'              	goto	u797_27
 13176  01A8' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13177  01A9' 2800'              	goto	u797_27
 13178  01AA' 0020               	movlb	0	; select bank0
 13179  01AB' 118E               	bcf	14,3	;volatile
 13180  01AC' 3005               	movlw	5
 13181  01AD' 0021               	movlb	1	; select bank1
 13182  01AE' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13183  01AF' 300F               	movlw	15
 13184  01B0' 0080'              	movwf	??i1_converter_settings^(0+128)
 13185  01B1' 30F1               	movlw	241
 13186  01B2'                    u798_27:
 13187  01B2' 0B89               	decfsz	9,f
 13188  01B3' 2800'              	goto	u798_27
 13189  01B4' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13190  01B5' 2800'              	goto	u798_27
 13191  01B6' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13192  01B7' 2800'              	goto	u798_27
 13193  01B8' 0020               	movlb	0	; select bank0
 13194  01B9' 168E               	bsf	14,5	;volatile
 13195  01BA' 3005               	movlw	5
 13196  01BB' 0021               	movlb	1	; select bank1
 13197  01BC' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13198  01BD' 300F               	movlw	15
 13199  01BE' 0080'              	movwf	??i1_converter_settings^(0+128)
 13200  01BF' 30F1               	movlw	241
 13201  01C0'                    u799_27:
 13202  01C0' 0B89               	decfsz	9,f
 13203  01C1' 2800'              	goto	u799_27
 13204  01C2' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13205  01C3' 2800'              	goto	u799_27
 13206  01C4' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13207  01C5' 2800'              	goto	u799_27
 13208  01C6' 2800'              	goto	L18
 13209  01C7'                    i1l6373:	
 13210                           ;state_machine_b.c: 233:             break;
 13211                           
 13212                           
 13213                           ;state_machine_b.c: 235:             iref = (uint16_t) ( ( ( capacity * 4096.0 ) / (5000
      +                           * 2.5 * 2 ) ) + 0.5 );
 13214  01C7' 0023               	movlb	3	; select bank3
 13215  01C8' 0800'              	movf	_capacity^(0+384),w
 13216  01C9' 0080'              	movwf	i1___xxtofl@val
 13217  01CA' 0800'              	movf	(_capacity+1)^(0+384),w
 13218  01CB' 0081'              	movwf	i1___xxtofl@val+1
 13219  01CC' 0182'              	clrf	i1___xxtofl@val+2
 13220  01CD' 0183'              	clrf	i1___xxtofl@val+3
 13221  01CE' 3000               	movlw	0
 13222  01CF' 3180' 2000' 3180'  	fcall	i1___xxtofl
 13223  01D2' 0803'              	movf	?i1___xxtofl+3,w
 13224  01D3' 0020               	movlb	0	; select bank0
 13225  01D4' 00A3'              	movwf	i1___flmul@a+3
 13226  01D5' 0802'              	movf	?i1___xxtofl+2,w
 13227  01D6' 00A2'              	movwf	i1___flmul@a+2
 13228  01D7' 0801'              	movf	?i1___xxtofl+1,w
 13229  01D8' 00A1'              	movwf	i1___flmul@a+1
 13230  01D9' 0800'              	movf	?i1___xxtofl,w
 13231  01DA' 00A0'              	movwf	i1___flmul@a
 13232  01DB' 3045               	movlw	69
 13233  01DC' 009F'              	movwf	i1___flmul@b+3
 13234  01DD' 3080               	movlw	128
 13235  01DE' 009E'              	movwf	i1___flmul@b+2
 13236  01DF' 3000               	movlw	0
 13237  01E0' 009D'              	movwf	i1___flmul@b+1
 13238  01E1' 3000               	movlw	0
 13239  01E2' 009C'              	movwf	i1___flmul@b
 13240  01E3' 3180' 2000' 3180'  	fcall	i1___flmul
 13241  01E6' 081F'              	movf	?i1___flmul+3,w
 13242  01E7' 00BD'              	movwf	i1___fldiv@b+3
 13243  01E8' 081E'              	movf	?i1___flmul+2,w
 13244  01E9' 00BC'              	movwf	i1___fldiv@b+2
 13245  01EA' 081D'              	movf	?i1___flmul+1,w
 13246  01EB' 00BB'              	movwf	i1___fldiv@b+1
 13247  01EC' 081C'              	movf	?i1___flmul,w
 13248  01ED' 00BA'              	movwf	i1___fldiv@b
 13249  01EE' 3046               	movlw	70
 13250  01EF' 00B9'              	movwf	i1___fldiv@a+3
 13251  01F0' 30C3               	movlw	195
 13252  01F1' 00B8'              	movwf	i1___fldiv@a+2
 13253  01F2' 3050               	movlw	80
 13254  01F3' 00B7'              	movwf	i1___fldiv@a+1
 13255  01F4' 3000               	movlw	0
 13256  01F5' 00B6'              	movwf	i1___fldiv@a
 13257  01F6' 3180' 2000' 3180'  	fcall	i1___fldiv
 13258  01F9' 0839'              	movf	?i1___fldiv+3,w
 13259  01FA' 0087'              	movwf	i1___fladd@a+3
 13260  01FB' 0838'              	movf	?i1___fldiv+2,w
 13261  01FC' 0086'              	movwf	i1___fladd@a+2
 13262  01FD' 0837'              	movf	?i1___fldiv+1,w
 13263  01FE' 0085'              	movwf	i1___fladd@a+1
 13264  01FF' 0836'              	movf	?i1___fldiv,w
 13265  0200' 0084'              	movwf	i1___fladd@a
 13266  0201' 303F               	movlw	63
 13267  0202' 0083'              	movwf	i1___fladd@b+3
 13268  0203' 3000               	movlw	0
 13269  0204' 0082'              	movwf	i1___fladd@b+2
 13270  0205' 3000               	movlw	0
 13271  0206' 0081'              	movwf	i1___fladd@b+1
 13272  0207' 3000               	movlw	0
 13273  0208' 0080'              	movwf	i1___fladd@b
 13274  0209' 3180' 2000' 3180'  	fcall	i1___fladd
 13275  020C' 0803'              	movf	?i1___fladd+3,w
 13276  020D' 0021               	movlb	1	; select bank1
 13277  020E' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 13278  020F' 0020               	movlb	0	; select bank0
 13279  0210' 0802'              	movf	?i1___fladd+2,w
 13280  0211' 0021               	movlb	1	; select bank1
 13281  0212' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 13282  0213' 0020               	movlb	0	; select bank0
 13283  0214' 0801'              	movf	?i1___fladd+1,w
 13284  0215' 0021               	movlb	1	; select bank1
 13285  0216' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 13286  0217' 0020               	movlb	0	; select bank0
 13287  0218' 0800'              	movf	?i1___fladd,w
 13288  0219' 0021               	movlb	1	; select bank1
 13289  021A' 0080'              	movwf	i1___fltol@f1^(0+128)
 13290  021B' 3180' 2000' 3180'  	fcall	i1___fltol
 13291  021E' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 13292  021F' 0080'              	movwf	(_iref+1)^(0+128)
 13293  0220' 0800'              	movf	?i1___fltol^(0+128),w
 13294  0221' 0080'              	movwf	_iref^(0+128)
 13295                           
 13296                           ;state_machine_b.c: 236:             if(basic_configuration.version == 0x02) timeout = (
      +                          uint16_t)(((float)capacity / (float)basic_configuration.const_current_char) * 3600 * 1.1
      +                          );
 13297  0222' 3002               	movlw	2
 13298  0223' 0024               	movlb	4	; select bank4
 13299  0224' 0600'              	xorwf	_basic_configuration^(0+512),w
 13300  0225' 1D03               	btfss	3,2
 13301  0226' 2800'              	goto	i1l6379
 13302  0227' 0023               	movlb	3	; select bank3
 13303  0228' 0800'              	movf	_capacity^(0+384),w
 13304  0229' 0080'              	movwf	i1___xxtofl@val
 13305  022A' 0800'              	movf	(_capacity+1)^(0+384),w
 13306  022B' 0081'              	movwf	i1___xxtofl@val+1
 13307  022C' 0182'              	clrf	i1___xxtofl@val+2
 13308  022D' 0183'              	clrf	i1___xxtofl@val+3
 13309  022E' 3000               	movlw	0
 13310  022F' 3180' 2000' 3180'  	fcall	i1___xxtofl
 13311  0232' 0803'              	movf	?i1___xxtofl+3,w
 13312  0233' 0020               	movlb	0	; select bank0
 13313  0234' 00BD'              	movwf	i1___fldiv@b+3
 13314  0235' 0802'              	movf	?i1___xxtofl+2,w
 13315  0236' 00BC'              	movwf	i1___fldiv@b+2
 13316  0237' 0801'              	movf	?i1___xxtofl+1,w
 13317  0238' 00BB'              	movwf	i1___fldiv@b+1
 13318  0239' 0800'              	movf	?i1___xxtofl,w
 13319  023A' 00BA'              	movwf	i1___fldiv@b
 13320  023B' 0024               	movlb	4	; select bank4
 13321  023C' 0803'              	movf	(_basic_configuration^(0+512)+3),w
 13322  023D' 0080'              	movwf	i1___xxtofl@val
 13323  023E' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
 13324  023F' 0081'              	movwf	i1___xxtofl@val+1
 13325  0240' 0182'              	clrf	i1___xxtofl@val+2
 13326  0241' 0183'              	clrf	i1___xxtofl@val+3
 13327  0242' 3000               	movlw	0
 13328  0243' 3180' 2000' 3180'  	fcall	i1___xxtofl
 13329  0246' 0803'              	movf	?i1___xxtofl+3,w
 13330  0247' 0020               	movlb	0	; select bank0
 13331  0248' 00B9'              	movwf	i1___fldiv@a+3
 13332  0249' 0802'              	movf	?i1___xxtofl+2,w
 13333  024A' 00B8'              	movwf	i1___fldiv@a+2
 13334  024B' 0801'              	movf	?i1___xxtofl+1,w
 13335  024C' 00B7'              	movwf	i1___fldiv@a+1
 13336  024D' 0800'              	movf	?i1___xxtofl,w
 13337  024E' 00B6'              	movwf	i1___fldiv@a
 13338  024F' 3180' 2000' 3180'  	fcall	i1___fldiv
 13339  0252' 0839'              	movf	?i1___fldiv+3,w
 13340  0253' 00A3'              	movwf	i1___flmul@a+3
 13341  0254' 0838'              	movf	?i1___fldiv+2,w
 13342  0255' 00A2'              	movwf	i1___flmul@a+2
 13343  0256' 0837'              	movf	?i1___fldiv+1,w
 13344  0257' 00A1'              	movwf	i1___flmul@a+1
 13345  0258' 0836'              	movf	?i1___fldiv,w
 13346  0259' 00A0'              	movwf	i1___flmul@a
 13347  025A' 3045               	movlw	69
 13348  025B' 009F'              	movwf	i1___flmul@b+3
 13349  025C' 3061               	movlw	97
 13350  025D' 009E'              	movwf	i1___flmul@b+2
 13351  025E' 3000               	movlw	0
 13352  025F' 009D'              	movwf	i1___flmul@b+1
 13353  0260' 3000               	movlw	0
 13354  0261' 009C'              	movwf	i1___flmul@b
 13355  0262' 3180' 2000' 3180'  	fcall	i1___flmul
 13356  0265' 081F'              	movf	?i1___flmul+3,w
 13357  0266' 0021               	movlb	1	; select bank1
 13358  0267' 0080'              	movwf	(i1_converter_settings$1748+3)^(0+128)
 13359  0268' 0020               	movlb	0	; select bank0
 13360  0269' 081E'              	movf	?i1___flmul+2,w
 13361  026A' 0021               	movlb	1	; select bank1
 13362  026B' 0080'              	movwf	(i1_converter_settings$1748+2)^(0+128)
 13363  026C' 0020               	movlb	0	; select bank0
 13364  026D' 081D'              	movf	?i1___flmul+1,w
 13365  026E' 0021               	movlb	1	; select bank1
 13366  026F' 0080'              	movwf	(i1_converter_settings$1748+1)^(0+128)
 13367  0270' 0020               	movlb	0	; select bank0
 13368  0271' 081C'              	movf	?i1___flmul,w
 13369  0272' 0021               	movlb	1	; select bank1
 13370  0273' 0080'              	movwf	i1_converter_settings$1748^(0+128)
 13371  0274' 0800'              	movf	(i1_converter_settings$1748+3)^(0+128),w
 13372  0275' 0020               	movlb	0	; select bank0
 13373  0276' 00A3'              	movwf	i1___flmul@a+3
 13374  0277' 0021               	movlb	1	; select bank1
 13375  0278' 0800'              	movf	(i1_converter_settings$1748+2)^(0+128),w
 13376  0279' 0020               	movlb	0	; select bank0
 13377  027A' 00A2'              	movwf	i1___flmul@a+2
 13378  027B' 0021               	movlb	1	; select bank1
 13379  027C' 0800'              	movf	(i1_converter_settings$1748+1)^(0+128),w
 13380  027D' 0020               	movlb	0	; select bank0
 13381  027E' 00A1'              	movwf	i1___flmul@a+1
 13382  027F' 0021               	movlb	1	; select bank1
 13383  0280' 0800'              	movf	i1_converter_settings$1748^(0+128),w
 13384  0281' 0020               	movlb	0	; select bank0
 13385  0282' 00A0'              	movwf	i1___flmul@a
 13386  0283' 303F               	movlw	63
 13387  0284' 009F'              	movwf	i1___flmul@b+3
 13388  0285' 308C               	movlw	140
 13389  0286' 009E'              	movwf	i1___flmul@b+2
 13390  0287' 30CC               	movlw	204
 13391  0288' 009D'              	movwf	i1___flmul@b+1
 13392  0289' 30CD               	movlw	205
 13393  028A' 009C'              	movwf	i1___flmul@b
 13394  028B' 3180' 2000' 3180'  	fcall	i1___flmul
 13395  028E' 081F'              	movf	?i1___flmul+3,w
 13396  028F' 0021               	movlb	1	; select bank1
 13397  0290' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 13398  0291' 0020               	movlb	0	; select bank0
 13399  0292' 081E'              	movf	?i1___flmul+2,w
 13400  0293' 0021               	movlb	1	; select bank1
 13401  0294' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 13402  0295' 0020               	movlb	0	; select bank0
 13403  0296' 081D'              	movf	?i1___flmul+1,w
 13404  0297' 0021               	movlb	1	; select bank1
 13405  0298' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 13406  0299' 0020               	movlb	0	; select bank0
 13407  029A' 081C'              	movf	?i1___flmul,w
 13408  029B' 0021               	movlb	1	; select bank1
 13409  029C' 0080'              	movwf	i1___fltol@f1^(0+128)
 13410  029D' 3180' 2000' 3180'  	fcall	i1___fltol
 13411  02A0' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 13412  02A1' 0023               	movlb	3	; select bank3
 13413  02A2' 0080'              	movwf	(_timeout+1)^(0+384)
 13414  02A3' 0021               	movlb	1	; select bank1
 13415  02A4' 0800'              	movf	?i1___fltol^(0+128),w
 13416  02A5' 0023               	movlb	3	; select bank3
 13417  02A6' 0080'              	movwf	_timeout^(0+384)
 13418  02A7'                    i1l6379:
 13419                           
 13420                           ;state_machine_b.c: 237:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
 13421  02A7' 0020               	movlb	0	; select bank0
 13422  02A8' 118E               	bcf	14,3	;volatile
 13423  02A9' 120E               	bcf	14,4	;volatile
 13424  02AA' 3005               	movlw	5
 13425  02AB' 0021               	movlb	1	; select bank1
 13426  02AC' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13427  02AD' 300F               	movlw	15
 13428  02AE' 0080'              	movwf	??i1_converter_settings^(0+128)
 13429  02AF' 30F1               	movlw	241
 13430  02B0'                    u800_27:
 13431  02B0' 0B89               	decfsz	9,f
 13432  02B1' 2800'              	goto	u800_27
 13433  02B2' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13434  02B3' 2800'              	goto	u800_27
 13435  02B4' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13436  02B5' 2800'              	goto	u800_27
 13437  02B6' 0020               	movlb	0	; select bank0
 13438  02B7' 158E               	bsf	14,3	;volatile
 13439  02B8' 3005               	movlw	5
 13440  02B9' 0021               	movlb	1	; select bank1
 13441  02BA' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13442  02BB' 300F               	movlw	15
 13443  02BC' 0080'              	movwf	??i1_converter_settings^(0+128)
 13444  02BD' 30F1               	movlw	241
 13445  02BE'                    u801_27:
 13446  02BE' 0B89               	decfsz	9,f
 13447  02BF' 2800'              	goto	u801_27
 13448  02C0' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13449  02C1' 2800'              	goto	u801_27
 13450  02C2' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13451  02C3' 2800'              	goto	u801_27
 13452  02C4' 0020               	movlb	0	; select bank0
 13453  02C5' 118E               	bcf	14,3	;volatile
 13454  02C6' 3005               	movlw	5
 13455  02C7' 0021               	movlb	1	; select bank1
 13456  02C8' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13457  02C9' 300F               	movlw	15
 13458  02CA' 0080'              	movwf	??i1_converter_settings^(0+128)
 13459  02CB' 30F1               	movlw	241
 13460  02CC'                    u802_27:
 13461  02CC' 0B89               	decfsz	9,f
 13462  02CD' 2800'              	goto	u802_27
 13463  02CE' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13464  02CF' 2800'              	goto	u802_27
 13465  02D0' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13466  02D1' 2800'              	goto	u802_27
 13467  02D2' 0020               	movlb	0	; select bank0
 13468  02D3' 168E               	bsf	14,5	;volatile
 13469  02D4' 3005               	movlw	5
 13470  02D5' 0021               	movlb	1	; select bank1
 13471  02D6' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13472  02D7' 300F               	movlw	15
 13473  02D8' 0080'              	movwf	??i1_converter_settings^(0+128)
 13474  02D9' 30F1               	movlw	241
 13475  02DA'                    u803_27:
 13476  02DA' 0B89               	decfsz	9,f
 13477  02DB' 2800'              	goto	u803_27
 13478  02DC' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13479  02DD' 2800'              	goto	u803_27
 13480  02DE' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13481  02DF' 2800'              	goto	u803_27
 13482  02E0'                    L18:
 13483  02E0' 0023               	movlb	3	; select bank3
 13484  02E1' 0800'              	movf	(_CC_disc_kp+3)^(0+384),w
 13485  02E2' 0024               	movlb	4	; select bank4
 13486  02E3' 0080'              	movwf	(_kp+3)^(0+512)
 13487  02E4' 0023               	movlb	3	; select bank3
 13488  02E5' 0800'              	movf	(_CC_disc_kp+2)^(0+384),w
 13489  02E6' 0024               	movlb	4	; select bank4
 13490  02E7' 0080'              	movwf	(_kp+2)^(0+512)
 13491  02E8' 0023               	movlb	3	; select bank3
 13492  02E9' 0800'              	movf	(_CC_disc_kp+1)^(0+384),w
 13493  02EA' 0024               	movlb	4	; select bank4
 13494  02EB' 0080'              	movwf	(_kp+1)^(0+512)
 13495  02EC' 0023               	movlb	3	; select bank3
 13496  02ED' 0800'              	movf	_CC_disc_kp^(0+384),w
 13497  02EE' 0024               	movlb	4	; select bank4
 13498  02EF' 0080'              	movwf	_kp^(0+512)
 13499  02F0' 0023               	movlb	3	; select bank3
 13500  02F1' 0800'              	movf	(_CC_disc_ki+3)^(0+384),w
 13501  02F2' 0024               	movlb	4	; select bank4
 13502  02F3' 0080'              	movwf	(_ki+3)^(0+512)
 13503  02F4' 0023               	movlb	3	; select bank3
 13504  02F5' 0800'              	movf	(_CC_disc_ki+2)^(0+384),w
 13505  02F6' 0024               	movlb	4	; select bank4
 13506  02F7' 0080'              	movwf	(_ki+2)^(0+512)
 13507  02F8' 0023               	movlb	3	; select bank3
 13508  02F9' 0800'              	movf	(_CC_disc_ki+1)^(0+384),w
 13509  02FA' 0024               	movlb	4	; select bank4
 13510  02FB' 0080'              	movwf	(_ki+1)^(0+512)
 13511  02FC' 0023               	movlb	3	; select bank3
 13512  02FD' 0800'              	movf	_CC_disc_ki^(0+384),w
 13513  02FE' 2800'              	goto	L17
 13514  02FF'                    i1l6403:	
 13515                           ;state_machine_b.c: 238:             break;
 13516                           
 13517                           
 13518                           ;state_machine_b.c: 240:             iref = (uint16_t) ( ( ( capacity * 4096.0 ) / (5000
      +                           * 2.5 * 2 ) ) + 0.5 );
 13519  02FF' 0023               	movlb	3	; select bank3
 13520  0300' 0800'              	movf	_capacity^(0+384),w
 13521  0301' 0080'              	movwf	i1___xxtofl@val
 13522  0302' 0800'              	movf	(_capacity+1)^(0+384),w
 13523  0303' 0081'              	movwf	i1___xxtofl@val+1
 13524  0304' 0182'              	clrf	i1___xxtofl@val+2
 13525  0305' 0183'              	clrf	i1___xxtofl@val+3
 13526  0306' 3000               	movlw	0
 13527  0307' 3180' 2000' 3180'  	fcall	i1___xxtofl
 13528  030A' 0803'              	movf	?i1___xxtofl+3,w
 13529  030B' 0020               	movlb	0	; select bank0
 13530  030C' 00A3'              	movwf	i1___flmul@a+3
 13531  030D' 0802'              	movf	?i1___xxtofl+2,w
 13532  030E' 00A2'              	movwf	i1___flmul@a+2
 13533  030F' 0801'              	movf	?i1___xxtofl+1,w
 13534  0310' 00A1'              	movwf	i1___flmul@a+1
 13535  0311' 0800'              	movf	?i1___xxtofl,w
 13536  0312' 00A0'              	movwf	i1___flmul@a
 13537  0313' 3045               	movlw	69
 13538  0314' 009F'              	movwf	i1___flmul@b+3
 13539  0315' 3080               	movlw	128
 13540  0316' 009E'              	movwf	i1___flmul@b+2
 13541  0317' 3000               	movlw	0
 13542  0318' 009D'              	movwf	i1___flmul@b+1
 13543  0319' 3000               	movlw	0
 13544  031A' 009C'              	movwf	i1___flmul@b
 13545  031B' 3180' 2000' 3180'  	fcall	i1___flmul
 13546  031E' 081F'              	movf	?i1___flmul+3,w
 13547  031F' 00BD'              	movwf	i1___fldiv@b+3
 13548  0320' 081E'              	movf	?i1___flmul+2,w
 13549  0321' 00BC'              	movwf	i1___fldiv@b+2
 13550  0322' 081D'              	movf	?i1___flmul+1,w
 13551  0323' 00BB'              	movwf	i1___fldiv@b+1
 13552  0324' 081C'              	movf	?i1___flmul,w
 13553  0325' 00BA'              	movwf	i1___fldiv@b
 13554  0326' 3046               	movlw	70
 13555  0327' 00B9'              	movwf	i1___fldiv@a+3
 13556  0328' 30C3               	movlw	195
 13557  0329' 00B8'              	movwf	i1___fldiv@a+2
 13558  032A' 3050               	movlw	80
 13559  032B' 00B7'              	movwf	i1___fldiv@a+1
 13560  032C' 3000               	movlw	0
 13561  032D' 00B6'              	movwf	i1___fldiv@a
 13562  032E' 3180' 2000' 3180'  	fcall	i1___fldiv
 13563  0331' 0839'              	movf	?i1___fldiv+3,w
 13564  0332' 0087'              	movwf	i1___fladd@a+3
 13565  0333' 0838'              	movf	?i1___fldiv+2,w
 13566  0334' 0086'              	movwf	i1___fladd@a+2
 13567  0335' 0837'              	movf	?i1___fldiv+1,w
 13568  0336' 0085'              	movwf	i1___fladd@a+1
 13569  0337' 0836'              	movf	?i1___fldiv,w
 13570  0338' 0084'              	movwf	i1___fladd@a
 13571  0339' 303F               	movlw	63
 13572  033A' 0083'              	movwf	i1___fladd@b+3
 13573  033B' 3000               	movlw	0
 13574  033C' 0082'              	movwf	i1___fladd@b+2
 13575  033D' 3000               	movlw	0
 13576  033E' 0081'              	movwf	i1___fladd@b+1
 13577  033F' 3000               	movlw	0
 13578  0340' 0080'              	movwf	i1___fladd@b
 13579  0341' 3180' 2000' 3180'  	fcall	i1___fladd
 13580  0344' 0803'              	movf	?i1___fladd+3,w
 13581  0345' 0021               	movlb	1	; select bank1
 13582  0346' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 13583  0347' 0020               	movlb	0	; select bank0
 13584  0348' 0802'              	movf	?i1___fladd+2,w
 13585  0349' 0021               	movlb	1	; select bank1
 13586  034A' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 13587  034B' 0020               	movlb	0	; select bank0
 13588  034C' 0801'              	movf	?i1___fladd+1,w
 13589  034D' 0021               	movlb	1	; select bank1
 13590  034E' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 13591  034F' 0020               	movlb	0	; select bank0
 13592  0350' 0800'              	movf	?i1___fladd,w
 13593  0351' 0021               	movlb	1	; select bank1
 13594  0352' 0080'              	movwf	i1___fltol@f1^(0+128)
 13595  0353' 3180' 2000' 3180'  	fcall	i1___fltol
 13596  0356' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 13597  0357' 0080'              	movwf	(_iref+1)^(0+128)
 13598  0358' 0800'              	movf	?i1___fltol^(0+128),w
 13599  0359' 0080'              	movwf	_iref^(0+128)
 13600                           
 13601                           ;state_machine_b.c: 241:             if(basic_configuration.version == 0x02) timeout = (
      +                          uint16_t)(((float)capacity / (float)basic_configuration.const_current_char) * 3600 * 1.1
      +                          );
 13602  035A' 3002               	movlw	2
 13603  035B' 0024               	movlb	4	; select bank4
 13604  035C' 0600'              	xorwf	_basic_configuration^(0+512),w
 13605  035D' 1D03               	btfss	3,2
 13606  035E' 2800'              	goto	i1l6409
 13607  035F' 0023               	movlb	3	; select bank3
 13608  0360' 0800'              	movf	_capacity^(0+384),w
 13609  0361' 0080'              	movwf	i1___xxtofl@val
 13610  0362' 0800'              	movf	(_capacity+1)^(0+384),w
 13611  0363' 0081'              	movwf	i1___xxtofl@val+1
 13612  0364' 0182'              	clrf	i1___xxtofl@val+2
 13613  0365' 0183'              	clrf	i1___xxtofl@val+3
 13614  0366' 3000               	movlw	0
 13615  0367' 3180' 2000' 3180'  	fcall	i1___xxtofl
 13616  036A' 0803'              	movf	?i1___xxtofl+3,w
 13617  036B' 0020               	movlb	0	; select bank0
 13618  036C' 00BD'              	movwf	i1___fldiv@b+3
 13619  036D' 0802'              	movf	?i1___xxtofl+2,w
 13620  036E' 00BC'              	movwf	i1___fldiv@b+2
 13621  036F' 0801'              	movf	?i1___xxtofl+1,w
 13622  0370' 00BB'              	movwf	i1___fldiv@b+1
 13623  0371' 0800'              	movf	?i1___xxtofl,w
 13624  0372' 00BA'              	movwf	i1___fldiv@b
 13625  0373' 0024               	movlb	4	; select bank4
 13626  0374' 0803'              	movf	(_basic_configuration^(0+512)+3),w
 13627  0375' 0080'              	movwf	i1___xxtofl@val
 13628  0376' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
 13629  0377' 0081'              	movwf	i1___xxtofl@val+1
 13630  0378' 0182'              	clrf	i1___xxtofl@val+2
 13631  0379' 0183'              	clrf	i1___xxtofl@val+3
 13632  037A' 3000               	movlw	0
 13633  037B' 3180' 2000' 3180'  	fcall	i1___xxtofl
 13634  037E' 0803'              	movf	?i1___xxtofl+3,w
 13635  037F' 0020               	movlb	0	; select bank0
 13636  0380' 00B9'              	movwf	i1___fldiv@a+3
 13637  0381' 0802'              	movf	?i1___xxtofl+2,w
 13638  0382' 00B8'              	movwf	i1___fldiv@a+2
 13639  0383' 0801'              	movf	?i1___xxtofl+1,w
 13640  0384' 00B7'              	movwf	i1___fldiv@a+1
 13641  0385' 0800'              	movf	?i1___xxtofl,w
 13642  0386' 00B6'              	movwf	i1___fldiv@a
 13643  0387' 3180' 2000' 3180'  	fcall	i1___fldiv
 13644  038A' 0839'              	movf	?i1___fldiv+3,w
 13645  038B' 00A3'              	movwf	i1___flmul@a+3
 13646  038C' 0838'              	movf	?i1___fldiv+2,w
 13647  038D' 00A2'              	movwf	i1___flmul@a+2
 13648  038E' 0837'              	movf	?i1___fldiv+1,w
 13649  038F' 00A1'              	movwf	i1___flmul@a+1
 13650  0390' 0836'              	movf	?i1___fldiv,w
 13651  0391' 00A0'              	movwf	i1___flmul@a
 13652  0392' 3045               	movlw	69
 13653  0393' 009F'              	movwf	i1___flmul@b+3
 13654  0394' 3061               	movlw	97
 13655  0395' 009E'              	movwf	i1___flmul@b+2
 13656  0396' 3000               	movlw	0
 13657  0397' 009D'              	movwf	i1___flmul@b+1
 13658  0398' 3000               	movlw	0
 13659  0399' 009C'              	movwf	i1___flmul@b
 13660  039A' 3180' 2000' 3180'  	fcall	i1___flmul
 13661  039D' 081F'              	movf	?i1___flmul+3,w
 13662  039E' 0021               	movlb	1	; select bank1
 13663  039F' 0080'              	movwf	(i1_converter_settings$1748+3)^(0+128)
 13664  03A0' 0020               	movlb	0	; select bank0
 13665  03A1' 081E'              	movf	?i1___flmul+2,w
 13666  03A2' 0021               	movlb	1	; select bank1
 13667  03A3' 0080'              	movwf	(i1_converter_settings$1748+2)^(0+128)
 13668  03A4' 0020               	movlb	0	; select bank0
 13669  03A5' 081D'              	movf	?i1___flmul+1,w
 13670  03A6' 0021               	movlb	1	; select bank1
 13671  03A7' 0080'              	movwf	(i1_converter_settings$1748+1)^(0+128)
 13672  03A8' 0020               	movlb	0	; select bank0
 13673  03A9' 081C'              	movf	?i1___flmul,w
 13674  03AA' 0021               	movlb	1	; select bank1
 13675  03AB' 0080'              	movwf	i1_converter_settings$1748^(0+128)
 13676  03AC' 0800'              	movf	(i1_converter_settings$1748+3)^(0+128),w
 13677  03AD' 0020               	movlb	0	; select bank0
 13678  03AE' 00A3'              	movwf	i1___flmul@a+3
 13679  03AF' 0021               	movlb	1	; select bank1
 13680  03B0' 0800'              	movf	(i1_converter_settings$1748+2)^(0+128),w
 13681  03B1' 0020               	movlb	0	; select bank0
 13682  03B2' 00A2'              	movwf	i1___flmul@a+2
 13683  03B3' 0021               	movlb	1	; select bank1
 13684  03B4' 0800'              	movf	(i1_converter_settings$1748+1)^(0+128),w
 13685  03B5' 0020               	movlb	0	; select bank0
 13686  03B6' 00A1'              	movwf	i1___flmul@a+1
 13687  03B7' 0021               	movlb	1	; select bank1
 13688  03B8' 0800'              	movf	i1_converter_settings$1748^(0+128),w
 13689  03B9' 0020               	movlb	0	; select bank0
 13690  03BA' 00A0'              	movwf	i1___flmul@a
 13691  03BB' 303F               	movlw	63
 13692  03BC' 009F'              	movwf	i1___flmul@b+3
 13693  03BD' 308C               	movlw	140
 13694  03BE' 009E'              	movwf	i1___flmul@b+2
 13695  03BF' 30CC               	movlw	204
 13696  03C0' 009D'              	movwf	i1___flmul@b+1
 13697  03C1' 30CD               	movlw	205
 13698  03C2' 009C'              	movwf	i1___flmul@b
 13699  03C3' 3180' 2000' 3180'  	fcall	i1___flmul
 13700  03C6' 081F'              	movf	?i1___flmul+3,w
 13701  03C7' 0021               	movlb	1	; select bank1
 13702  03C8' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 13703  03C9' 0020               	movlb	0	; select bank0
 13704  03CA' 081E'              	movf	?i1___flmul+2,w
 13705  03CB' 0021               	movlb	1	; select bank1
 13706  03CC' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 13707  03CD' 0020               	movlb	0	; select bank0
 13708  03CE' 081D'              	movf	?i1___flmul+1,w
 13709  03CF' 0021               	movlb	1	; select bank1
 13710  03D0' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 13711  03D1' 0020               	movlb	0	; select bank0
 13712  03D2' 081C'              	movf	?i1___flmul,w
 13713  03D3' 0021               	movlb	1	; select bank1
 13714  03D4' 0080'              	movwf	i1___fltol@f1^(0+128)
 13715  03D5' 3180' 2000' 3180'  	fcall	i1___fltol
 13716  03D8' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 13717  03D9' 0023               	movlb	3	; select bank3
 13718  03DA' 0080'              	movwf	(_timeout+1)^(0+384)
 13719  03DB' 0021               	movlb	1	; select bank1
 13720  03DC' 0800'              	movf	?i1___fltol^(0+128),w
 13721  03DD' 0023               	movlb	3	; select bank3
 13722  03DE' 0080'              	movwf	_timeout^(0+384)
 13723  03DF'                    i1l6409:
 13724                           
 13725                           ;state_machine_b.c: 242:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC4 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC4 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_char_kp; ki = CC_char_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
 13726  03DF' 0020               	movlb	0	; select bank0
 13727  03E0' 118E               	bcf	14,3	;volatile
 13728  03E1' 120E               	bcf	14,4	;volatile
 13729  03E2' 3005               	movlw	5
 13730  03E3' 0021               	movlb	1	; select bank1
 13731  03E4' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13732  03E5' 300F               	movlw	15
 13733  03E6' 0080'              	movwf	??i1_converter_settings^(0+128)
 13734  03E7' 30F1               	movlw	241
 13735  03E8'                    u804_27:
 13736  03E8' 0B89               	decfsz	9,f
 13737  03E9' 2800'              	goto	u804_27
 13738  03EA' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13739  03EB' 2800'              	goto	u804_27
 13740  03EC' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13741  03ED' 2800'              	goto	u804_27
 13742  03EE' 0020               	movlb	0	; select bank0
 13743  03EF' 160E               	bsf	14,4	;volatile
 13744  03F0' 3005               	movlw	5
 13745  03F1' 0021               	movlb	1	; select bank1
 13746  03F2' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13747  03F3' 300F               	movlw	15
 13748  03F4' 0080'              	movwf	??i1_converter_settings^(0+128)
 13749  03F5' 30F1               	movlw	241
 13750  03F6'                    u805_27:
 13751  03F6' 0B89               	decfsz	9,f
 13752  03F7' 2800'              	goto	u805_27
 13753  03F8' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13754  03F9' 2800'              	goto	u805_27
 13755  03FA' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13756  03FB' 2800'              	goto	u805_27
 13757  03FC' 0020               	movlb	0	; select bank0
 13758  03FD' 120E               	bcf	14,4	;volatile
 13759  03FE' 3005               	movlw	5
 13760  03FF' 0021               	movlb	1	; select bank1
 13761  0400' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13762  0401' 300F               	movlw	15
 13763  0402' 0080'              	movwf	??i1_converter_settings^(0+128)
 13764  0403' 30F1               	movlw	241
 13765  0404'                    u806_27:
 13766  0404' 0B89               	decfsz	9,f
 13767  0405' 2800'              	goto	u806_27
 13768  0406' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13769  0407' 2800'              	goto	u806_27
 13770  0408' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13771  0409' 2800'              	goto	u806_27
 13772  040A' 0020               	movlb	0	; select bank0
 13773  040B' 168E               	bsf	14,5	;volatile
 13774  040C' 3005               	movlw	5
 13775  040D' 0021               	movlb	1	; select bank1
 13776  040E' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13777  040F' 300F               	movlw	15
 13778  0410' 0080'              	movwf	??i1_converter_settings^(0+128)
 13779  0411' 30F1               	movlw	241
 13780  0412'                    u807_27:
 13781  0412' 0B89               	decfsz	9,f
 13782  0413' 2800'              	goto	u807_27
 13783  0414' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13784  0415' 2800'              	goto	u807_27
 13785  0416' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13786  0417' 2800'              	goto	u807_27
 13787  0418'                    L19:
 13788  0418' 0023               	movlb	3	; select bank3
 13789  0419' 0800'              	movf	(_CC_char_kp+3)^(0+384),w
 13790  041A' 0024               	movlb	4	; select bank4
 13791  041B' 0080'              	movwf	(_kp+3)^(0+512)
 13792  041C' 0023               	movlb	3	; select bank3
 13793  041D' 0800'              	movf	(_CC_char_kp+2)^(0+384),w
 13794  041E' 0024               	movlb	4	; select bank4
 13795  041F' 0080'              	movwf	(_kp+2)^(0+512)
 13796  0420' 0023               	movlb	3	; select bank3
 13797  0421' 0800'              	movf	(_CC_char_kp+1)^(0+384),w
 13798  0422' 0024               	movlb	4	; select bank4
 13799  0423' 0080'              	movwf	(_kp+1)^(0+512)
 13800  0424' 0023               	movlb	3	; select bank3
 13801  0425' 0800'              	movf	_CC_char_kp^(0+384),w
 13802  0426' 0024               	movlb	4	; select bank4
 13803  0427' 0080'              	movwf	_kp^(0+512)
 13804  0428' 0023               	movlb	3	; select bank3
 13805  0429' 0800'              	movf	(_CC_char_ki+3)^(0+384),w
 13806  042A' 0024               	movlb	4	; select bank4
 13807  042B' 0080'              	movwf	(_ki+3)^(0+512)
 13808  042C' 0023               	movlb	3	; select bank3
 13809  042D' 0800'              	movf	(_CC_char_ki+2)^(0+384),w
 13810  042E' 0024               	movlb	4	; select bank4
 13811  042F' 0080'              	movwf	(_ki+2)^(0+512)
 13812  0430' 0023               	movlb	3	; select bank3
 13813  0431' 0800'              	movf	(_CC_char_ki+1)^(0+384),w
 13814  0432' 0024               	movlb	4	; select bank4
 13815  0433' 0080'              	movwf	(_ki+1)^(0+512)
 13816  0434' 0023               	movlb	3	; select bank3
 13817  0435' 0800'              	movf	_CC_char_ki^(0+384),w
 13818  0436'                    L17:
 13819  0436' 0024               	movlb	4	; select bank4
 13820  0437' 0080'              	movwf	_ki^(0+512)
 13821  0438' 0023               	movlb	3	; select bank3
 13822  0439' 0800'              	movf	_CC_char_disc_kd^(0+384),w
 13823  043A' 0021               	movlb	1	; select bank1
 13824  043B' 0080'              	movwf	??i1_converter_settings^(0+128)
 13825  043C' 0181'              	clrf	(??i1_converter_settings^(0+128)+1)
 13826  043D' 0182'              	clrf	(??i1_converter_settings^(0+128)+2)
 13827  043E' 0183'              	clrf	(??i1_converter_settings^(0+128)+3)
 13828  043F' 0800'              	movf	(??i1_converter_settings+3)^(0+128),w
 13829  0440' 0083'              	movwf	i1___xxtofl@val+3
 13830  0441' 0800'              	movf	(??i1_converter_settings+2)^(0+128),w
 13831  0442' 0082'              	movwf	i1___xxtofl@val+2
 13832  0443' 0800'              	movf	(??i1_converter_settings+1)^(0+128),w
 13833  0444' 0081'              	movwf	i1___xxtofl@val+1
 13834  0445' 0800'              	movf	??i1_converter_settings^(0+128),w
 13835  0446' 0080'              	movwf	i1___xxtofl@val
 13836  0447' 3000               	movlw	0
 13837  0448' 3180' 2000' 3180'  	fcall	i1___xxtofl
 13838  044B' 0803'              	movf	?i1___xxtofl+3,w
 13839  044C' 0024               	movlb	4	; select bank4
 13840  044D' 0080'              	movwf	(_kd+3)^(0+512)
 13841  044E' 0802'              	movf	?i1___xxtofl+2,w
 13842  044F' 0080'              	movwf	(_kd+2)^(0+512)
 13843  0450' 0801'              	movf	?i1___xxtofl+1,w
 13844  0451' 0080'              	movwf	(_kd+1)^(0+512)
 13845  0452' 0800'              	movf	?i1___xxtofl,w
 13846  0453' 0080'              	movwf	_kd^(0+512)
 13847  0454' 3000               	movlw	0
 13848  0455' 0080'              	movwf	(_pidi+3)^(0+512)
 13849  0456' 3000               	movlw	0
 13850  0457' 0080'              	movwf	(_pidi+2)^(0+512)
 13851  0458' 3000               	movlw	0
 13852  0459' 0080'              	movwf	(_pidi+1)^(0+512)
 13853  045A' 3000               	movlw	0
 13854  045B' 0080'              	movwf	_pidi^(0+512)
 13855                           
 13856                           ;state_machine_b.c: 243:             break;
 13857  045C' 2800'              	goto	i1l6437
 13858  045D'                    i1l6435:
 13859  045D' 0023               	movlb	3	; select bank3
 13860  045E' 0800'              	movf	_state^(0+384),w
 13861  045F' 0021               	movlb	1	; select bank1
 13862  0460' 0080'              	movwf	??i1_converter_settings^(0+128)
 13863  0461' 0181'              	clrf	(??i1_converter_settings^(0+128)+1)
 13864                           
 13865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13866                           ; Switch size 1, requested type "simple"
 13867                           ; Number of cases is 1, Range of values is 0 to 0
 13868                           ; switch strategies available:
 13869                           ; Name         Instructions Cycles
 13870                           ; simple_byte            4     3 (average)
 13871                           ; direct_byte            8     6 (fixed)
 13872                           ; jumptable            260     6 (fixed)
 13873                           ;	Chosen strategy is simple_byte
 13874  0462' 0800'              	movf	(??i1_converter_settings+1)^(0+128),w
 13875  0463' 3A00               	xorlw	0	; case 0
 13876  0464' 1903               	skipnz
 13877  0465' 2800'              	goto	i1l7761
 13878  0466' 2800'              	goto	i1l6437
 13879  0467'                    i1l7761:
 13880                           
 13881                           ; Switch size 1, requested type "simple"
 13882                           ; Number of cases is 5, Range of values is 3 to 11
 13883                           ; switch strategies available:
 13884                           ; Name         Instructions Cycles
 13885                           ; simple_byte           16     9 (average)
 13886                           ; direct_byte           27     9 (fixed)
 13887                           ; jumptable            263     9 (fixed)
 13888                           ;	Chosen strategy is simple_byte
 13889  0467' 0800'              	movf	??i1_converter_settings^(0+128),w
 13890  0468' 3A03               	xorlw	3	; case 3
 13891  0469' 1903               	skipnz
 13892  046A' 2800'              	goto	i1l6299
 13893  046B' 3A06               	xorlw	6	; case 5
 13894  046C' 1903               	skipnz
 13895  046D' 2800'              	goto	i1l6403
 13896  046E' 3A02               	xorlw	2	; case 7
 13897  046F' 1903               	skipnz
 13898  0470' 2800'              	goto	i1l6329
 13899  0471' 3A0E               	xorlw	14	; case 9
 13900  0472' 1903               	skipnz
 13901  0473' 2800'              	goto	i1l6373
 13902  0474' 3A02               	xorlw	2	; case 11
 13903  0475' 1903               	skipnz
 13904  0476' 2800'              	goto	i1l6345
 13905  0477' 2800'              	goto	i1l6437
 13906  0478'                    i1l6437:
 13907                           
 13908                           ;state_machine_b.c: 245:     _delay((unsigned long)((10)*(32000000/4000.0)));
 13909  0478' 3068               	movlw	104
 13910  0479' 0021               	movlb	1	; select bank1
 13911  047A' 0080'              	movwf	??i1_converter_settings^(0+128)
 13912  047B' 30E4               	movlw	228
 13913  047C'                    u808_27:
 13914  047C' 0B89               	decfsz	9,f
 13915  047D' 2800'              	goto	u808_27
 13916  047E' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13917  047F' 2800'              	goto	u808_27
 13918  0480' 0000               	nop
 13919                           
 13920                           ;state_machine_b.c: 246:     second = 0;
 13921  0481' 0023               	movlb	3	; select bank3
 13922  0482' 0180'              	clrf	_second^(0+384)
 13923  0483' 0180'              	clrf	(_second+1)^(0+384)
 13924                           
 13925                           ;state_machine_b.c: 247:     conv = 1;
 13926  0484' 0021               	movlb	1	; select bank1
 13927  0485' 0180'              	clrf	_conv^(0+128)
 13928  0486' 0A80'              	incf	_conv^(0+128),f
 13929  0487' 0008               	return
 13930  0488'                    __end_ofi1_converter_settings:
 13931                           
 13932                           	psect	text39
 13933  0000'                    __ptext39:	
 13934 ;; *************** function i1_set_DC *****************
 13935 ;; Defined at:
 13936 ;;		line 290 in file "charger_discharger.c"
 13937 ;; Parameters:    Size  Location     Type
 13938 ;;		None
 13939 ;; Auto vars:     Size  Location     Type
 13940 ;;  dc              2   10[BANK1 ] unsigned short 
 13941 ;; Return value:  Size  Location     Type
 13942 ;;                  1    wreg      void 
 13943 ;; Registers used:
 13944 ;;		wreg, status,2, status,0, pclath, cstack
 13945 ;; Tracked objects:
 13946 ;;		On entry : 1D/1
 13947 ;;		On exit  : 1F/10
 13948 ;;		Unchanged: 0/0
 13949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13951 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13953 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13954 ;;Total ram usage:        2 bytes
 13955 ;; Hardware stack levels used: 1
 13956 ;; Hardware stack levels required when called: 1
 13957 ;; This function calls:
 13958 ;;		i1___fltol
 13959 ;; This function is called by:
 13960 ;;		_control_loop
 13961 ;;		i1_converter_settings
 13962 ;; This function uses a non-reentrant model
 13963 ;;
 13964                           
 13965  0000'                    i1_set_DC:	
 13966                           ;psect for function i1_set_DC
 13967                           
 13968                           
 13969                           ;charger_discharger.c: 293:     uint16_t dc = (uint16_t) pidt;
 13970                           
 13971                           ;incstack = 0
 13972                           ; Regs used in i1_set_DC: [wreg+status,2+status,0+pclath+cstack]
 13973  0000' 0023               	movlb	3	; select bank3
 13974  0001' 0800'              	movf	(_pidt+3)^(0+384),w
 13975  0002' 0021               	movlb	1	; select bank1
 13976  0003' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 13977  0004' 0023               	movlb	3	; select bank3
 13978  0005' 0800'              	movf	(_pidt+2)^(0+384),w
 13979  0006' 0021               	movlb	1	; select bank1
 13980  0007' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 13981  0008' 0023               	movlb	3	; select bank3
 13982  0009' 0800'              	movf	(_pidt+1)^(0+384),w
 13983  000A' 0021               	movlb	1	; select bank1
 13984  000B' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 13985  000C' 0023               	movlb	3	; select bank3
 13986  000D' 0800'              	movf	_pidt^(0+384),w
 13987  000E' 0021               	movlb	1	; select bank1
 13988  000F' 0080'              	movwf	i1___fltol@f1^(0+128)
 13989  0010' 3180' 2000'        	fcall	i1___fltol
 13990  0012' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 13991  0013' 0080'              	movwf	(i1set_DC@dc+1)^(0+128)
 13992  0014' 0800'              	movf	?i1___fltol^(0+128),w
 13993  0015' 0080'              	movwf	i1set_DC@dc^(0+128)
 13994                           
 13995                           ;charger_discharger.c: 295:     PSMC1DCL = dc & 0x00FF;
 13996  0016' 0800'              	movf	i1set_DC@dc^(0+128),w
 13997  0017' 0030               	movlb	16	; select bank16
 13998  0018' 00A3               	movwf	35	;volatile
 13999                           
 14000                           ;charger_discharger.c: 296:     PSMC1DCH = (dc >> 8) & 0x01;
 14001  0019' 0021               	movlb	1	; select bank1
 14002  001A' 0801'              	movf	(i1set_DC@dc^(0+128)+1),w
 14003  001B' 3901               	andlw	1
 14004  001C' 0030               	movlb	16	; select bank16
 14005  001D' 00A4               	movwf	36	;volatile
 14006                           
 14007                           ;charger_discharger.c: 297:     PSMC1CONbits.PSMC1LD = 1;
 14008  001E' 1711               	bsf	17,6	;volatile
 14009  001F' 0008               	return
 14010  0020'                    __end_ofi1_set_DC:
 14011                           
 14012                           	psect	text40
 14013  0000'                    __ptext40:	
 14014 ;; *************** function i1___fltol *****************
 14015 ;; Defined at:
 14016 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
 14017 ;; Parameters:    Size  Location     Type
 14018 ;;  f1              4    0[BANK1 ] void 
 14019 ;; Auto vars:     Size  Location     Type
 14020 ;;  exp1            1    9[BANK1 ] unsigned char 
 14021 ;;  sign1           1    8[BANK1 ] unsigned char 
 14022 ;; Return value:  Size  Location     Type
 14023 ;;                  4    0[BANK1 ] long 
 14024 ;; Registers used:
 14025 ;;		wreg, status,2, status,0
 14026 ;; Tracked objects:
 14027 ;;		On entry : 1F/1
 14028 ;;		On exit  : 1F/1
 14029 ;;		Unchanged: 0/0
 14030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14031 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14032 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14033 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14034 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 14035 ;;Total ram usage:       10 bytes
 14036 ;; Hardware stack levels used: 1
 14037 ;; This function calls:
 14038 ;;		Nothing
 14039 ;; This function is called by:
 14040 ;;		_command_interpreter
 14041 ;;		i1_set_DC
 14042 ;;		i1_converter_settings
 14043 ;; This function uses a non-reentrant model
 14044 ;;
 14045                           
 14046  0000'                    i1___fltol:	
 14047                           ;psect for function i1___fltol
 14048                           
 14049                           
 14050                           ;incstack = 0
 14051                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
 14052  0000' 1003               	clrc
 14053  0001' 0D00'              	rlf	(i1___fltol@f1+2)^(0+128),w
 14054  0002' 0D00'              	rlf	(i1___fltol@f1+3)^(0+128),w
 14055  0003' 0080'              	movwf	i1___fltol@exp1^(0+128)
 14056  0004' 0800'              	movf	i1___fltol@exp1^(0+128),w
 14057  0005' 1D03               	btfss	3,2
 14058  0006' 2800'              	goto	i1l5209
 14059  0007'                    i1l5205:
 14060  0007' 3000               	movlw	0
 14061  0008' 0080'              	movwf	(?i1___fltol+3)^(0+128)
 14062  0009' 3000               	movlw	0
 14063  000A' 0080'              	movwf	(?i1___fltol+2)^(0+128)
 14064  000B' 3000               	movlw	0
 14065  000C' 0080'              	movwf	(?i1___fltol+1)^(0+128)
 14066  000D' 3000               	movlw	0
 14067  000E' 0080'              	movwf	?i1___fltol^(0+128)
 14068  000F' 0008               	return
 14069  0010'                    i1l5209:
 14070  0010' 0800'              	movf	i1___fltol@f1^(0+128),w
 14071  0011' 0080'              	movwf	??i1___fltol^(0+128)
 14072  0012' 0800'              	movf	(i1___fltol@f1+1)^(0+128),w
 14073  0013' 0081'              	movwf	(??i1___fltol^(0+128)+1)
 14074  0014' 0800'              	movf	(i1___fltol@f1+2)^(0+128),w
 14075  0015' 0082'              	movwf	(??i1___fltol^(0+128)+2)
 14076  0016' 0800'              	movf	(i1___fltol@f1+3)^(0+128),w
 14077  0017' 0083'              	movwf	(??i1___fltol^(0+128)+3)
 14078  0018' 301F               	movlw	31
 14079  0019'                    u494_25:
 14080  0019' 3683'              	lsrf	(??i1___fltol^(0+128)+3),f
 14081  001A' 0C82'              	rrf	(??i1___fltol^(0+128)+2),f
 14082  001B' 0C81'              	rrf	(??i1___fltol^(0+128)+1),f
 14083  001C' 0C80'              	rrf	??i1___fltol^(0+128),f
 14084  001D' 0B89               	decfsz	9,f
 14085  001E' 2800'              	goto	u494_25
 14086  001F' 0800'              	movf	??i1___fltol^(0+128),w
 14087  0020' 0080'              	movwf	i1___fltol@sign1^(0+128)
 14088  0021' 1782'              	bsf	(i1___fltol@f1^(0+128)+2),7
 14089  0022' 30FF               	movlw	255
 14090  0023' 0580'              	andwf	i1___fltol@f1^(0+128),f
 14091  0024' 30FF               	movlw	255
 14092  0025' 0580'              	andwf	(i1___fltol@f1+1)^(0+128),f
 14093  0026' 30FF               	movlw	255
 14094  0027' 0580'              	andwf	(i1___fltol@f1+2)^(0+128),f
 14095  0028' 3000               	movlw	0
 14096  0029' 0580'              	andwf	(i1___fltol@f1+3)^(0+128),f
 14097  002A' 3096               	movlw	150
 14098  002B' 0280'              	subwf	i1___fltol@exp1^(0+128),f
 14099  002C' 1F80'              	btfss	i1___fltol@exp1^(0+128),7
 14100  002D' 2800'              	goto	i1l5227
 14101  002E' 0800'              	movf	i1___fltol@exp1^(0+128),w
 14102  002F' 3A80               	xorlw	128
 14103  0030' 3E97               	addlw	151
 14104  0031' 1C03               	btfss	3,0
 14105  0032' 2800'              	goto	i1l5205
 14106  0033'                    i1l5225:
 14107  0033' 3001               	movlw	1
 14108  0034'                    u497_25:
 14109  0034' 3680'              	lsrf	(i1___fltol@f1+3)^(0+128),f
 14110  0035' 0C80'              	rrf	(i1___fltol@f1+2)^(0+128),f
 14111  0036' 0C80'              	rrf	(i1___fltol@f1+1)^(0+128),f
 14112  0037' 0C80'              	rrf	i1___fltol@f1^(0+128),f
 14113  0038' 0B89               	decfsz	9,f
 14114  0039' 2800'              	goto	u497_25
 14115  003A' 3001               	movlw	1
 14116  003B' 0080'              	movwf	??i1___fltol^(0+128)
 14117  003C' 0800'              	movf	??i1___fltol^(0+128),w
 14118  003D' 0780'              	addwf	i1___fltol@exp1^(0+128),f
 14119  003E' 1903               	btfsc	3,2
 14120  003F' 2800'              	goto	i1l5235
 14121  0040' 2800'              	goto	i1l5225
 14122  0041'                    i1l5227:
 14123  0041' 3020               	movlw	32
 14124  0042' 0200'              	subwf	i1___fltol@exp1^(0+128),w
 14125  0043' 1803               	btfsc	3,0
 14126  0044' 2800'              	goto	i1l5205
 14127  0045'                    i1l1247:
 14128  0045' 0800'              	movf	i1___fltol@exp1^(0+128),w
 14129  0046' 1903               	btfsc	3,2
 14130  0047' 2800'              	goto	i1l5235
 14131  0048' 3001               	movlw	1
 14132  0049'                    u500_25:
 14133  0049' 3580'              	lslf	i1___fltol@f1^(0+128),f
 14134  004A' 0D80'              	rlf	(i1___fltol@f1+1)^(0+128),f
 14135  004B' 0D80'              	rlf	(i1___fltol@f1+2)^(0+128),f
 14136  004C' 0D80'              	rlf	(i1___fltol@f1+3)^(0+128),f
 14137  004D' 0B89               	decfsz	9,f
 14138  004E' 2800'              	goto	u500_25
 14139  004F' 3001               	movlw	1
 14140  0050' 0280'              	subwf	i1___fltol@exp1^(0+128),f
 14141  0051' 2800'              	goto	i1l1247
 14142  0052'                    i1l5235:
 14143  0052' 0800'              	movf	i1___fltol@sign1^(0+128),w
 14144  0053' 1903               	btfsc	3,2
 14145  0054' 0008               	return
 14146  0055' 0980'              	comf	i1___fltol@f1^(0+128),f
 14147  0056' 0980'              	comf	(i1___fltol@f1+1)^(0+128),f
 14148  0057' 0980'              	comf	(i1___fltol@f1+2)^(0+128),f
 14149  0058' 0980'              	comf	(i1___fltol@f1+3)^(0+128),f
 14150  0059' 0A80'              	incf	i1___fltol@f1^(0+128),f
 14151  005A' 1903               	skipnz
 14152  005B' 0A80'              	incf	(i1___fltol@f1+1)^(0+128),f
 14153  005C' 1903               	skipnz
 14154  005D' 0A80'              	incf	(i1___fltol@f1+2)^(0+128),f
 14155  005E' 1903               	skipnz
 14156  005F' 0A80'              	incf	(i1___fltol@f1+3)^(0+128),f
 14157  0060' 0008               	return
 14158  0061'                    __end_ofi1___fltol:
 14159                           
 14160                           	psect	text41
 14161  0000'                    __ptext41:	
 14162 ;; *************** function i1___xxtofl *****************
 14163 ;; Defined at:
 14164 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 14165 ;; Parameters:    Size  Location     Type
 14166 ;;  sign            1    wreg     unsigned char 
 14167 ;;  val             4    0[COMMON] long 
 14168 ;; Auto vars:     Size  Location     Type
 14169 ;;  sign            1    8[COMMON] unsigned char 
 14170 ;;  arg             4   10[COMMON] unsigned long 
 14171 ;;  exp             1    9[COMMON] unsigned char 
 14172 ;; Return value:  Size  Location     Type
 14173 ;;                  4    0[COMMON] unsigned char 
 14174 ;; Registers used:
 14175 ;;		wreg, status,2, status,0
 14176 ;; Tracked objects:
 14177 ;;		On entry : 18/1
 14178 ;;		On exit  : 18/0
 14179 ;;		Unchanged: 18/0
 14180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14181 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14182 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14183 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14184 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14185 ;;Total ram usage:       14 bytes
 14186 ;; Hardware stack levels used: 1
 14187 ;; This function calls:
 14188 ;;		Nothing
 14189 ;; This function is called by:
 14190 ;;		_command_interpreter
 14191 ;;		_control_loop
 14192 ;;		i1_converter_settings
 14193 ;; This function uses a non-reentrant model
 14194 ;;
 14195                           
 14196  0000'                    i1___xxtofl:	
 14197                           ;psect for function i1___xxtofl
 14198                           
 14199                           
 14200                           ;incstack = 0
 14201                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 14202                           ;i1___xxtofl@sign stored from wreg
 14203  0000' 0088'              	movwf	i1___xxtofl@sign
 14204  0001' 0808'              	movf	i1___xxtofl@sign,w
 14205  0002' 1D03               	btfss	3,2
 14206  0003' 1F83'              	btfss	i1___xxtofl@val+3,7
 14207  0004' 2800'              	goto	i1l5895
 14208  0005' 0900'              	comf	i1___xxtofl@val,w
 14209  0006' 008A'              	movwf	i1___xxtofl@arg
 14210  0007' 0901'              	comf	i1___xxtofl@val+1,w
 14211  0008' 008B'              	movwf	i1___xxtofl@arg+1
 14212  0009' 0902'              	comf	i1___xxtofl@val+2,w
 14213  000A' 008C'              	movwf	i1___xxtofl@arg+2
 14214  000B' 0903'              	comf	i1___xxtofl@val+3,w
 14215  000C' 008D'              	movwf	i1___xxtofl@arg+3
 14216  000D' 0A8A'              	incf	i1___xxtofl@arg,f
 14217  000E' 1903               	skipnz
 14218  000F' 0A8B'              	incf	i1___xxtofl@arg+1,f
 14219  0010' 1903               	skipnz
 14220  0011' 0A8C'              	incf	i1___xxtofl@arg+2,f
 14221  0012' 1903               	skipnz
 14222  0013' 0A8D'              	incf	i1___xxtofl@arg+3,f
 14223  0014' 2800'              	goto	i1l1487
 14224  0015'                    i1l5895:
 14225  0015' 0803'              	movf	i1___xxtofl@val+3,w
 14226  0016' 008D'              	movwf	i1___xxtofl@arg+3
 14227  0017' 0802'              	movf	i1___xxtofl@val+2,w
 14228  0018' 008C'              	movwf	i1___xxtofl@arg+2
 14229  0019' 0801'              	movf	i1___xxtofl@val+1,w
 14230  001A' 008B'              	movwf	i1___xxtofl@arg+1
 14231  001B' 0800'              	movf	i1___xxtofl@val,w
 14232  001C' 008A'              	movwf	i1___xxtofl@arg
 14233  001D'                    i1l1487:
 14234  001D' 0803'              	movf	i1___xxtofl@val+3,w
 14235  001E' 0402'              	iorwf	i1___xxtofl@val+2,w
 14236  001F' 0401'              	iorwf	i1___xxtofl@val+1,w
 14237  0020' 0400'              	iorwf	i1___xxtofl@val,w
 14238  0021' 1D03               	skipz
 14239  0022' 2800'              	goto	i1l5901
 14240  0023' 3000               	movlw	0
 14241  0024' 0083'              	movwf	?i1___xxtofl+3
 14242  0025' 3000               	movlw	0
 14243  0026' 0082'              	movwf	?i1___xxtofl+2
 14244  0027' 3000               	movlw	0
 14245  0028' 0081'              	movwf	?i1___xxtofl+1
 14246  0029' 3000               	movlw	0
 14247  002A' 0080'              	movwf	?i1___xxtofl
 14248  002B' 0008               	return
 14249  002C'                    i1l5901:
 14250  002C' 3096               	movlw	150
 14251  002D' 0089'              	movwf	i1___xxtofl@exp
 14252  002E'                    i1l5905:
 14253  002E' 30FE               	movlw	254
 14254  002F' 050D'              	andwf	i1___xxtofl@arg+3,w
 14255  0030' 1903               	btfsc	3,2
 14256  0031' 2800'              	goto	i1l1493
 14257  0032' 3001               	movlw	1
 14258  0033' 0084'              	movwf	??i1___xxtofl
 14259  0034' 0804'              	movf	??i1___xxtofl,w
 14260  0035' 0789'              	addwf	i1___xxtofl@exp,f
 14261  0036' 3001               	movlw	1
 14262  0037'                    u629_25:
 14263  0037' 368D'              	lsrf	i1___xxtofl@arg+3,f
 14264  0038' 0C8C'              	rrf	i1___xxtofl@arg+2,f
 14265  0039' 0C8B'              	rrf	i1___xxtofl@arg+1,f
 14266  003A' 0C8A'              	rrf	i1___xxtofl@arg,f
 14267  003B' 0B89               	decfsz	9,f
 14268  003C' 2800'              	goto	u629_25
 14269  003D' 2800'              	goto	i1l5905
 14270  003E'                    i1l5907:
 14271  003E' 3001               	movlw	1
 14272  003F' 0084'              	movwf	??i1___xxtofl
 14273  0040' 0804'              	movf	??i1___xxtofl,w
 14274  0041' 0789'              	addwf	i1___xxtofl@exp,f
 14275  0042' 3001               	movlw	1
 14276  0043' 078A'              	addwf	i1___xxtofl@arg,f
 14277  0044' 3000               	movlw	0
 14278  0045' 3D8B'              	addwfc	i1___xxtofl@arg+1,f
 14279  0046' 3000               	movlw	0
 14280  0047' 3D8C'              	addwfc	i1___xxtofl@arg+2,f
 14281  0048' 3000               	movlw	0
 14282  0049' 3D8D'              	addwfc	i1___xxtofl@arg+3,f
 14283  004A' 3001               	movlw	1
 14284  004B'                    u631_25:
 14285  004B' 368D'              	lsrf	i1___xxtofl@arg+3,f
 14286  004C' 0C8C'              	rrf	i1___xxtofl@arg+2,f
 14287  004D' 0C8B'              	rrf	i1___xxtofl@arg+1,f
 14288  004E' 0C8A'              	rrf	i1___xxtofl@arg,f
 14289  004F' 0B89               	decfsz	9,f
 14290  0050' 2800'              	goto	u631_25
 14291  0051'                    i1l1493:
 14292  0051' 30FF               	movlw	255
 14293  0052' 050D'              	andwf	i1___xxtofl@arg+3,w
 14294  0053' 1903               	btfsc	3,2
 14295  0054' 2800'              	goto	i1l5915
 14296  0055' 2800'              	goto	i1l5907
 14297  0056'                    i1l5917:
 14298  0056' 3002               	movlw	2
 14299  0057' 0209'              	subwf	i1___xxtofl@exp,w
 14300  0058' 1C03               	btfss	3,0
 14301  0059' 2800'              	goto	i1l1500
 14302  005A' 3001               	movlw	1
 14303  005B' 0289'              	subwf	i1___xxtofl@exp,f
 14304  005C' 3001               	movlw	1
 14305  005D'                    u633_25:
 14306  005D' 358A'              	lslf	i1___xxtofl@arg,f
 14307  005E' 0D8B'              	rlf	i1___xxtofl@arg+1,f
 14308  005F' 0D8C'              	rlf	i1___xxtofl@arg+2,f
 14309  0060' 0D8D'              	rlf	i1___xxtofl@arg+3,f
 14310  0061' 0B89               	decfsz	9,f
 14311  0062' 2800'              	goto	u633_25
 14312  0063'                    i1l5915:
 14313  0063' 1F8C'              	btfss	i1___xxtofl@arg+2,7
 14314  0064' 2800'              	goto	i1l5917
 14315  0065'                    i1l1500:
 14316  0065' 1809'              	btfsc	i1___xxtofl@exp,0
 14317  0066' 2800'              	goto	i1l1501
 14318  0067' 30FF               	movlw	255
 14319  0068' 058A'              	andwf	i1___xxtofl@arg,f
 14320  0069' 30FF               	movlw	255
 14321  006A' 058B'              	andwf	i1___xxtofl@arg+1,f
 14322  006B' 307F               	movlw	127
 14323  006C' 058C'              	andwf	i1___xxtofl@arg+2,f
 14324  006D' 30FF               	movlw	255
 14325  006E' 058D'              	andwf	i1___xxtofl@arg+3,f
 14326  006F'                    i1l1501:
 14327  006F' 1003               	clrc
 14328  0070' 0C89'              	rrf	i1___xxtofl@exp,f
 14329  0071' 0809'              	movf	i1___xxtofl@exp,w
 14330  0072' 0084'              	movwf	??i1___xxtofl
 14331  0073' 0185'              	clrf	??i1___xxtofl+1
 14332  0074' 0186'              	clrf	??i1___xxtofl+2
 14333  0075' 0187'              	clrf	??i1___xxtofl+3
 14334  0076' 3018               	movlw	24
 14335  0077'                    u637_25:
 14336  0077' 3584'              	lslf	??i1___xxtofl,f
 14337  0078' 0D85'              	rlf	??i1___xxtofl+1,f
 14338  0079' 0D86'              	rlf	??i1___xxtofl+2,f
 14339  007A' 0D87'              	rlf	??i1___xxtofl+3,f
 14340  007B' 0B89               	decfsz	9,f
 14341  007C' 2800'              	goto	u637_25
 14342  007D' 0804'              	movf	??i1___xxtofl,w
 14343  007E' 048A'              	iorwf	i1___xxtofl@arg,f
 14344  007F' 0805'              	movf	??i1___xxtofl+1,w
 14345  0080' 048B'              	iorwf	i1___xxtofl@arg+1,f
 14346  0081' 0806'              	movf	??i1___xxtofl+2,w
 14347  0082' 048C'              	iorwf	i1___xxtofl@arg+2,f
 14348  0083' 0807'              	movf	??i1___xxtofl+3,w
 14349  0084' 048D'              	iorwf	i1___xxtofl@arg+3,f
 14350  0085' 0808'              	movf	i1___xxtofl@sign,w
 14351  0086' 1D03               	btfss	3,2
 14352  0087' 1F83'              	btfss	i1___xxtofl@val+3,7
 14353  0088' 2800'              	goto	i1l5929
 14354  0089' 178D'              	bsf	i1___xxtofl@arg+3,7
 14355  008A'                    i1l5929:
 14356  008A' 080D'              	movf	i1___xxtofl@arg+3,w
 14357  008B' 0083'              	movwf	?i1___xxtofl+3
 14358  008C' 080C'              	movf	i1___xxtofl@arg+2,w
 14359  008D' 0082'              	movwf	?i1___xxtofl+2
 14360  008E' 080B'              	movf	i1___xxtofl@arg+1,w
 14361  008F' 0081'              	movwf	?i1___xxtofl+1
 14362  0090' 080A'              	movf	i1___xxtofl@arg,w
 14363  0091' 0080'              	movwf	?i1___xxtofl
 14364  0092' 0008               	return
 14365  0093'                    __end_ofi1___xxtofl:
 14366                           
 14367                           	psect	text42
 14368  0000'                    __ptext42:	
 14369 ;; *************** function i1___flmul *****************
 14370 ;; Defined at:
 14371 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 14372 ;; Parameters:    Size  Location     Type
 14373 ;;  b               4   28[BANK0 ] unsigned char 
 14374 ;;  a               4   32[BANK0 ] unsigned char 
 14375 ;; Auto vars:     Size  Location     Type
 14376 ;;  prod            4   48[BANK0 ] struct .
 14377 ;;  grs             4   43[BANK0 ] unsigned long 
 14378 ;;  temp            2   52[BANK0 ] struct .
 14379 ;;  bexp            1   47[BANK0 ] unsigned char 
 14380 ;;  aexp            1   42[BANK0 ] unsigned char 
 14381 ;;  sign            1   41[BANK0 ] unsigned char 
 14382 ;; Return value:  Size  Location     Type
 14383 ;;                  4   28[BANK0 ] unsigned char 
 14384 ;; Registers used:
 14385 ;;		wreg, status,2, status,0, pclath, cstack
 14386 ;; Tracked objects:
 14387 ;;		On entry : 1F/0
 14388 ;;		On exit  : 1F/0
 14389 ;;		Unchanged: 0/0
 14390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14391 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14392 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14393 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14394 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14395 ;;Total ram usage:       26 bytes
 14396 ;; Hardware stack levels used: 1
 14397 ;; Hardware stack levels required when called: 1
 14398 ;; This function calls:
 14399 ;;		i1__Umul8_16
 14400 ;; This function is called by:
 14401 ;;		_command_interpreter
 14402 ;;		_pid
 14403 ;;		i1_converter_settings
 14404 ;; This function uses a non-reentrant model
 14405 ;;
 14406                           
 14407  0000'                    i1___flmul:	
 14408                           ;psect for function i1___flmul
 14409                           
 14410                           
 14411                           ;incstack = 0
 14412                           ; Regs used in i1___flmul: [wreg+status,2+status,0+pclath+cstack]
 14413  0000' 081F'              	movf	i1___flmul@b+3,w
 14414  0001' 3980               	andlw	128
 14415  0002' 00A9'              	movwf	i1___flmul@sign
 14416  0003' 351F'              	lslf	i1___flmul@b+3,w
 14417  0004' 00AF'              	movwf	i1___flmul@bexp
 14418  0005' 1B9E'              	btfsc	i1___flmul@b+2,7
 14419  0006' 142F'              	bsf	i1___flmul@bexp,0
 14420  0007' 082F'              	movf	i1___flmul@bexp,w
 14421  0008' 1903               	btfsc	3,2
 14422  0009' 2800'              	goto	i1l5765
 14423  000A' 0A2F'              	incf	i1___flmul@bexp,w
 14424  000B' 1D03               	btfss	3,2
 14425  000C' 2800'              	goto	i1l5763
 14426  000D' 3000               	movlw	0
 14427  000E' 009F'              	movwf	i1___flmul@b+3
 14428  000F' 3000               	movlw	0
 14429  0010' 009E'              	movwf	i1___flmul@b+2
 14430  0011' 3000               	movlw	0
 14431  0012' 009D'              	movwf	i1___flmul@b+1
 14432  0013' 3000               	movlw	0
 14433  0014' 009C'              	movwf	i1___flmul@b
 14434  0015'                    i1l5763:
 14435  0015' 179E'              	bsf	i1___flmul@b+2,7
 14436  0016' 2800'              	goto	i1l5767
 14437  0017'                    i1l5765:
 14438  0017' 3000               	movlw	0
 14439  0018' 009F'              	movwf	i1___flmul@b+3
 14440  0019' 3000               	movlw	0
 14441  001A' 009E'              	movwf	i1___flmul@b+2
 14442  001B' 3000               	movlw	0
 14443  001C' 009D'              	movwf	i1___flmul@b+1
 14444  001D' 3000               	movlw	0
 14445  001E' 009C'              	movwf	i1___flmul@b
 14446  001F'                    i1l5767:
 14447  001F' 0823'              	movf	i1___flmul@a+3,w
 14448  0020' 3980               	andlw	128
 14449  0021' 00A4'              	movwf	??i1___flmul
 14450  0022' 0824'              	movf	??i1___flmul,w
 14451  0023' 06A9'              	xorwf	i1___flmul@sign,f
 14452  0024' 3523'              	lslf	i1___flmul@a+3,w
 14453  0025' 00AA'              	movwf	i1___flmul@aexp
 14454  0026' 1BA2'              	btfsc	i1___flmul@a+2,7
 14455  0027' 142A'              	bsf	i1___flmul@aexp,0
 14456  0028' 082A'              	movf	i1___flmul@aexp,w
 14457  0029' 1903               	btfsc	3,2
 14458  002A' 2800'              	goto	i1l5783
 14459  002B' 0A2A'              	incf	i1___flmul@aexp,w
 14460  002C' 1D03               	btfss	3,2
 14461  002D' 2800'              	goto	i1l5781
 14462  002E' 3000               	movlw	0
 14463  002F' 00A3'              	movwf	i1___flmul@a+3
 14464  0030' 3000               	movlw	0
 14465  0031' 00A2'              	movwf	i1___flmul@a+2
 14466  0032' 3000               	movlw	0
 14467  0033' 00A1'              	movwf	i1___flmul@a+1
 14468  0034' 3000               	movlw	0
 14469  0035' 00A0'              	movwf	i1___flmul@a
 14470  0036'                    i1l5781:
 14471  0036' 17A2'              	bsf	i1___flmul@a+2,7
 14472  0037' 2800'              	goto	i1l5785
 14473  0038'                    i1l5783:
 14474  0038' 3000               	movlw	0
 14475  0039' 00A3'              	movwf	i1___flmul@a+3
 14476  003A' 3000               	movlw	0
 14477  003B' 00A2'              	movwf	i1___flmul@a+2
 14478  003C' 3000               	movlw	0
 14479  003D' 00A1'              	movwf	i1___flmul@a+1
 14480  003E' 3000               	movlw	0
 14481  003F' 00A0'              	movwf	i1___flmul@a
 14482  0040'                    i1l5785:
 14483  0040' 082A'              	movf	i1___flmul@aexp,w
 14484  0041' 1D03               	btfss	3,2
 14485  0042' 082F'              	movf	i1___flmul@bexp,w
 14486  0043' 1D03               	btfss	3,2
 14487  0044' 2800'              	goto	i1l5793
 14488  0045' 3000               	movlw	0
 14489  0046' 009F'              	movwf	?i1___flmul+3
 14490  0047' 3000               	movlw	0
 14491  0048' 009E'              	movwf	?i1___flmul+2
 14492  0049' 3000               	movlw	0
 14493  004A' 009D'              	movwf	?i1___flmul+1
 14494  004B' 3000               	movlw	0
 14495  004C' 009C'              	movwf	?i1___flmul
 14496  004D' 0008               	return
 14497  004E'                    i1l5793:
 14498  004E' 081C'              	movf	i1___flmul@b,w
 14499  004F' 0080'              	movwf	i1__Umul8_16@multiplicand
 14500  0050' 0822'              	movf	i1___flmul@a+2,w
 14501  0051' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 14502  0054' 0801'              	movf	?i1__Umul8_16+1,w
 14503  0055' 00B5'              	movwf	i1___flmul@temp+1
 14504  0056' 0800'              	movf	?i1__Umul8_16,w
 14505  0057' 00B4'              	movwf	i1___flmul@temp
 14506  0058' 0834'              	movf	i1___flmul@temp,w
 14507  0059' 00A4'              	movwf	??i1___flmul
 14508  005A' 01A5'              	clrf	??i1___flmul+1
 14509  005B' 01A6'              	clrf	??i1___flmul+2
 14510  005C' 01A7'              	clrf	??i1___flmul+3
 14511  005D' 0827'              	movf	??i1___flmul+3,w
 14512  005E' 00AE'              	movwf	i1___flmul@grs+3
 14513  005F' 0826'              	movf	??i1___flmul+2,w
 14514  0060' 00AD'              	movwf	i1___flmul@grs+2
 14515  0061' 0825'              	movf	??i1___flmul+1,w
 14516  0062' 00AC'              	movwf	i1___flmul@grs+1
 14517  0063' 0824'              	movf	??i1___flmul,w
 14518  0064' 00AB'              	movwf	i1___flmul@grs
 14519  0065' 0835'              	movf	i1___flmul@temp+1,w
 14520  0066' 00A4'              	movwf	??i1___flmul
 14521  0067' 01A5'              	clrf	??i1___flmul+1
 14522  0068' 01A6'              	clrf	??i1___flmul+2
 14523  0069' 01A7'              	clrf	??i1___flmul+3
 14524  006A' 0827'              	movf	??i1___flmul+3,w
 14525  006B' 00B3'              	movwf	i1___flmul@prod+3
 14526  006C' 0826'              	movf	??i1___flmul+2,w
 14527  006D' 00B2'              	movwf	i1___flmul@prod+2
 14528  006E' 0825'              	movf	??i1___flmul+1,w
 14529  006F' 00B1'              	movwf	i1___flmul@prod+1
 14530  0070' 0824'              	movf	??i1___flmul,w
 14531  0071' 00B0'              	movwf	i1___flmul@prod
 14532  0072' 081D'              	movf	i1___flmul@b+1,w
 14533  0073' 0080'              	movwf	i1__Umul8_16@multiplicand
 14534  0074' 0821'              	movf	i1___flmul@a+1,w
 14535  0075' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 14536  0078' 0801'              	movf	?i1__Umul8_16+1,w
 14537  0079' 00B5'              	movwf	i1___flmul@temp+1
 14538  007A' 0800'              	movf	?i1__Umul8_16,w
 14539  007B' 00B4'              	movwf	i1___flmul@temp
 14540  007C' 0834'              	movf	i1___flmul@temp,w
 14541  007D' 00A4'              	movwf	??i1___flmul
 14542  007E' 01A5'              	clrf	??i1___flmul+1
 14543  007F' 01A6'              	clrf	??i1___flmul+2
 14544  0080' 01A7'              	clrf	??i1___flmul+3
 14545  0081' 0824'              	movf	??i1___flmul,w
 14546  0082' 07AB'              	addwf	i1___flmul@grs,f
 14547  0083' 0825'              	movf	??i1___flmul+1,w
 14548  0084' 3DAC'              	addwfc	i1___flmul@grs+1,f
 14549  0085' 0826'              	movf	??i1___flmul+2,w
 14550  0086' 3DAD'              	addwfc	i1___flmul@grs+2,f
 14551  0087' 0827'              	movf	??i1___flmul+3,w
 14552  0088' 3DAE'              	addwfc	i1___flmul@grs+3,f
 14553  0089' 0835'              	movf	i1___flmul@temp+1,w
 14554  008A' 00A4'              	movwf	??i1___flmul
 14555  008B' 01A5'              	clrf	??i1___flmul+1
 14556  008C' 01A6'              	clrf	??i1___flmul+2
 14557  008D' 01A7'              	clrf	??i1___flmul+3
 14558  008E' 0824'              	movf	??i1___flmul,w
 14559  008F' 07B0'              	addwf	i1___flmul@prod,f
 14560  0090' 0825'              	movf	??i1___flmul+1,w
 14561  0091' 3DB1'              	addwfc	i1___flmul@prod+1,f
 14562  0092' 0826'              	movf	??i1___flmul+2,w
 14563  0093' 3DB2'              	addwfc	i1___flmul@prod+2,f
 14564  0094' 0827'              	movf	??i1___flmul+3,w
 14565  0095' 3DB3'              	addwfc	i1___flmul@prod+3,f
 14566  0096' 081E'              	movf	i1___flmul@b+2,w
 14567  0097' 0080'              	movwf	i1__Umul8_16@multiplicand
 14568  0098' 0820'              	movf	i1___flmul@a,w
 14569  0099' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 14570  009C' 0801'              	movf	?i1__Umul8_16+1,w
 14571  009D' 00B5'              	movwf	i1___flmul@temp+1
 14572  009E' 0800'              	movf	?i1__Umul8_16,w
 14573  009F' 00B4'              	movwf	i1___flmul@temp
 14574  00A0' 0834'              	movf	i1___flmul@temp,w
 14575  00A1' 00A4'              	movwf	??i1___flmul
 14576  00A2' 01A5'              	clrf	??i1___flmul+1
 14577  00A3' 01A6'              	clrf	??i1___flmul+2
 14578  00A4' 01A7'              	clrf	??i1___flmul+3
 14579  00A5' 0824'              	movf	??i1___flmul,w
 14580  00A6' 07AB'              	addwf	i1___flmul@grs,f
 14581  00A7' 0825'              	movf	??i1___flmul+1,w
 14582  00A8' 3DAC'              	addwfc	i1___flmul@grs+1,f
 14583  00A9' 0826'              	movf	??i1___flmul+2,w
 14584  00AA' 3DAD'              	addwfc	i1___flmul@grs+2,f
 14585  00AB' 0827'              	movf	??i1___flmul+3,w
 14586  00AC' 3DAE'              	addwfc	i1___flmul@grs+3,f
 14587  00AD' 0835'              	movf	i1___flmul@temp+1,w
 14588  00AE' 00A4'              	movwf	??i1___flmul
 14589  00AF' 01A5'              	clrf	??i1___flmul+1
 14590  00B0' 01A6'              	clrf	??i1___flmul+2
 14591  00B1' 01A7'              	clrf	??i1___flmul+3
 14592  00B2' 0824'              	movf	??i1___flmul,w
 14593  00B3' 07B0'              	addwf	i1___flmul@prod,f
 14594  00B4' 0825'              	movf	??i1___flmul+1,w
 14595  00B5' 3DB1'              	addwfc	i1___flmul@prod+1,f
 14596  00B6' 0826'              	movf	??i1___flmul+2,w
 14597  00B7' 3DB2'              	addwfc	i1___flmul@prod+2,f
 14598  00B8' 0827'              	movf	??i1___flmul+3,w
 14599  00B9' 3DB3'              	addwfc	i1___flmul@prod+3,f
 14600  00BA' 3008               	movlw	8
 14601  00BB'                    u609_25:
 14602  00BB' 35AB'              	lslf	i1___flmul@grs,f
 14603  00BC' 0DAC'              	rlf	i1___flmul@grs+1,f
 14604  00BD' 0DAD'              	rlf	i1___flmul@grs+2,f
 14605  00BE' 0DAE'              	rlf	i1___flmul@grs+3,f
 14606  00BF' 0B89               	decfsz	9,f
 14607  00C0' 2800'              	goto	u609_25
 14608  00C1' 081D'              	movf	i1___flmul@b+1,w
 14609  00C2' 0080'              	movwf	i1__Umul8_16@multiplicand
 14610  00C3' 0820'              	movf	i1___flmul@a,w
 14611  00C4' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 14612  00C7' 0801'              	movf	?i1__Umul8_16+1,w
 14613  00C8' 00B5'              	movwf	i1___flmul@temp+1
 14614  00C9' 0800'              	movf	?i1__Umul8_16,w
 14615  00CA' 00B4'              	movwf	i1___flmul@temp
 14616  00CB' 0834'              	movf	i1___flmul@temp,w
 14617  00CC' 07AB'              	addwf	i1___flmul@grs,f
 14618  00CD' 0835'              	movf	i1___flmul@temp+1,w
 14619  00CE' 3DAC'              	addwfc	i1___flmul@grs+1,f
 14620  00CF' 3000               	movlw	0
 14621  00D0' 3DAD'              	addwfc	i1___flmul@grs+2,f
 14622  00D1' 3DAE'              	addwfc	i1___flmul@grs+3,f
 14623  00D2' 081C'              	movf	i1___flmul@b,w
 14624  00D3' 0080'              	movwf	i1__Umul8_16@multiplicand
 14625  00D4' 0821'              	movf	i1___flmul@a+1,w
 14626  00D5' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 14627  00D8' 0801'              	movf	?i1__Umul8_16+1,w
 14628  00D9' 00B5'              	movwf	i1___flmul@temp+1
 14629  00DA' 0800'              	movf	?i1__Umul8_16,w
 14630  00DB' 00B4'              	movwf	i1___flmul@temp
 14631  00DC' 0834'              	movf	i1___flmul@temp,w
 14632  00DD' 07AB'              	addwf	i1___flmul@grs,f
 14633  00DE' 0835'              	movf	i1___flmul@temp+1,w
 14634  00DF' 3DAC'              	addwfc	i1___flmul@grs+1,f
 14635  00E0' 3000               	movlw	0
 14636  00E1' 3DAD'              	addwfc	i1___flmul@grs+2,f
 14637  00E2' 3DAE'              	addwfc	i1___flmul@grs+3,f
 14638  00E3' 3008               	movlw	8
 14639  00E4'                    u610_25:
 14640  00E4' 35AB'              	lslf	i1___flmul@grs,f
 14641  00E5' 0DAC'              	rlf	i1___flmul@grs+1,f
 14642  00E6' 0DAD'              	rlf	i1___flmul@grs+2,f
 14643  00E7' 0DAE'              	rlf	i1___flmul@grs+3,f
 14644  00E8' 0B89               	decfsz	9,f
 14645  00E9' 2800'              	goto	u610_25
 14646  00EA' 081C'              	movf	i1___flmul@b,w
 14647  00EB' 0080'              	movwf	i1__Umul8_16@multiplicand
 14648  00EC' 0820'              	movf	i1___flmul@a,w
 14649  00ED' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 14650  00F0' 0801'              	movf	?i1__Umul8_16+1,w
 14651  00F1' 00B5'              	movwf	i1___flmul@temp+1
 14652  00F2' 0800'              	movf	?i1__Umul8_16,w
 14653  00F3' 00B4'              	movwf	i1___flmul@temp
 14654  00F4' 0834'              	movf	i1___flmul@temp,w
 14655  00F5' 07AB'              	addwf	i1___flmul@grs,f
 14656  00F6' 0835'              	movf	i1___flmul@temp+1,w
 14657  00F7' 3DAC'              	addwfc	i1___flmul@grs+1,f
 14658  00F8' 3000               	movlw	0
 14659  00F9' 3DAD'              	addwfc	i1___flmul@grs+2,f
 14660  00FA' 3DAE'              	addwfc	i1___flmul@grs+3,f
 14661  00FB' 081D'              	movf	i1___flmul@b+1,w
 14662  00FC' 0080'              	movwf	i1__Umul8_16@multiplicand
 14663  00FD' 0822'              	movf	i1___flmul@a+2,w
 14664  00FE' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 14665  0101' 0801'              	movf	?i1__Umul8_16+1,w
 14666  0102' 00B5'              	movwf	i1___flmul@temp+1
 14667  0103' 0800'              	movf	?i1__Umul8_16,w
 14668  0104' 00B4'              	movwf	i1___flmul@temp
 14669  0105' 0834'              	movf	i1___flmul@temp,w
 14670  0106' 07B0'              	addwf	i1___flmul@prod,f
 14671  0107' 0835'              	movf	i1___flmul@temp+1,w
 14672  0108' 3DB1'              	addwfc	i1___flmul@prod+1,f
 14673  0109' 3000               	movlw	0
 14674  010A' 3DB2'              	addwfc	i1___flmul@prod+2,f
 14675  010B' 3DB3'              	addwfc	i1___flmul@prod+3,f
 14676  010C' 081E'              	movf	i1___flmul@b+2,w
 14677  010D' 0080'              	movwf	i1__Umul8_16@multiplicand
 14678  010E' 0821'              	movf	i1___flmul@a+1,w
 14679  010F' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 14680  0112' 0801'              	movf	?i1__Umul8_16+1,w
 14681  0113' 00B5'              	movwf	i1___flmul@temp+1
 14682  0114' 0800'              	movf	?i1__Umul8_16,w
 14683  0115' 00B4'              	movwf	i1___flmul@temp
 14684  0116' 0834'              	movf	i1___flmul@temp,w
 14685  0117' 07B0'              	addwf	i1___flmul@prod,f
 14686  0118' 0835'              	movf	i1___flmul@temp+1,w
 14687  0119' 3DB1'              	addwfc	i1___flmul@prod+1,f
 14688  011A' 3000               	movlw	0
 14689  011B' 3DB2'              	addwfc	i1___flmul@prod+2,f
 14690  011C' 3DB3'              	addwfc	i1___flmul@prod+3,f
 14691  011D' 081E'              	movf	i1___flmul@b+2,w
 14692  011E' 0080'              	movwf	i1__Umul8_16@multiplicand
 14693  011F' 0822'              	movf	i1___flmul@a+2,w
 14694  0120' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 14695  0123' 0801'              	movf	?i1__Umul8_16+1,w
 14696  0124' 00B5'              	movwf	i1___flmul@temp+1
 14697  0125' 0800'              	movf	?i1__Umul8_16,w
 14698  0126' 00B4'              	movwf	i1___flmul@temp
 14699  0127' 0834'              	movf	i1___flmul@temp,w
 14700  0128' 00A4'              	movwf	??i1___flmul
 14701  0129' 0835'              	movf	i1___flmul@temp+1,w
 14702  012A' 00A5'              	movwf	??i1___flmul+1
 14703  012B' 01A6'              	clrf	??i1___flmul+2
 14704  012C' 01A7'              	clrf	??i1___flmul+3
 14705  012D' 3008               	movlw	8
 14706  012E'                    u611_25:
 14707  012E' 35A4'              	lslf	??i1___flmul,f
 14708  012F' 0DA5'              	rlf	??i1___flmul+1,f
 14709  0130' 0DA6'              	rlf	??i1___flmul+2,f
 14710  0131' 0DA7'              	rlf	??i1___flmul+3,f
 14711  0132' 0B89               	decfsz	9,f
 14712  0133' 2800'              	goto	u611_25
 14713  0134' 0824'              	movf	??i1___flmul,w
 14714  0135' 07B0'              	addwf	i1___flmul@prod,f
 14715  0136' 0825'              	movf	??i1___flmul+1,w
 14716  0137' 3DB1'              	addwfc	i1___flmul@prod+1,f
 14717  0138' 0826'              	movf	??i1___flmul+2,w
 14718  0139' 3DB2'              	addwfc	i1___flmul@prod+2,f
 14719  013A' 0827'              	movf	??i1___flmul+3,w
 14720  013B' 3DB3'              	addwfc	i1___flmul@prod+3,f
 14721  013C' 082E'              	movf	i1___flmul@grs+3,w
 14722  013D' 00A4'              	movwf	??i1___flmul
 14723  013E' 01A5'              	clrf	??i1___flmul+1
 14724  013F' 01A6'              	clrf	??i1___flmul+2
 14725  0140' 01A7'              	clrf	??i1___flmul+3
 14726  0141' 0824'              	movf	??i1___flmul,w
 14727  0142' 07B0'              	addwf	i1___flmul@prod,f
 14728  0143' 0825'              	movf	??i1___flmul+1,w
 14729  0144' 3DB1'              	addwfc	i1___flmul@prod+1,f
 14730  0145' 0826'              	movf	??i1___flmul+2,w
 14731  0146' 3DB2'              	addwfc	i1___flmul@prod+2,f
 14732  0147' 0827'              	movf	??i1___flmul+3,w
 14733  0148' 3DB3'              	addwfc	i1___flmul@prod+3,f
 14734  0149' 3008               	movlw	8
 14735  014A'                    u612_25:
 14736  014A' 35AB'              	lslf	i1___flmul@grs,f
 14737  014B' 0DAC'              	rlf	i1___flmul@grs+1,f
 14738  014C' 0DAD'              	rlf	i1___flmul@grs+2,f
 14739  014D' 0DAE'              	rlf	i1___flmul@grs+3,f
 14740  014E' 0B89               	decfsz	9,f
 14741  014F' 2800'              	goto	u612_25
 14742  0150' 082F'              	movf	i1___flmul@bexp,w
 14743  0151' 072A'              	addwf	i1___flmul@aexp,w
 14744  0152' 00A4'              	movwf	??i1___flmul
 14745  0153' 01A5'              	clrf	??i1___flmul+1
 14746  0154' 0DA5'              	rlf	??i1___flmul+1,f
 14747  0155' 0824'              	movf	??i1___flmul,w
 14748  0156' 3E82               	addlw	130
 14749  0157' 00B4'              	movwf	i1___flmul@temp
 14750  0158' 30FF               	movlw	255
 14751  0159' 3D25'              	addwfc	??i1___flmul+1,w
 14752  015A' 00B5'              	movwf	i1___flmul@temp+1
 14753  015B'                    i1l5845:
 14754  015B' 1BB2'              	btfsc	i1___flmul@prod+2,7
 14755  015C' 2800'              	goto	i1l5847
 14756  015D' 3001               	movlw	1
 14757  015E'                    u613_25:
 14758  015E' 35B0'              	lslf	i1___flmul@prod,f
 14759  015F' 0DB1'              	rlf	i1___flmul@prod+1,f
 14760  0160' 0DB2'              	rlf	i1___flmul@prod+2,f
 14761  0161' 0DB3'              	rlf	i1___flmul@prod+3,f
 14762  0162' 0B89               	decfsz	9,f
 14763  0163' 2800'              	goto	u613_25
 14764  0164' 1BAE'              	btfsc	i1___flmul@grs+3,7
 14765  0165' 1430'              	bsf	i1___flmul@prod,0
 14766  0166' 3001               	movlw	1
 14767  0167'                    u615_25:
 14768  0167' 35AB'              	lslf	i1___flmul@grs,f
 14769  0168' 0DAC'              	rlf	i1___flmul@grs+1,f
 14770  0169' 0DAD'              	rlf	i1___flmul@grs+2,f
 14771  016A' 0DAE'              	rlf	i1___flmul@grs+3,f
 14772  016B' 0B89               	decfsz	9,f
 14773  016C' 2800'              	goto	u615_25
 14774  016D' 30FF               	movlw	255
 14775  016E' 07B4'              	addwf	i1___flmul@temp,f
 14776  016F' 30FF               	movlw	255
 14777  0170' 3DB5'              	addwfc	i1___flmul@temp+1,f
 14778  0171' 2800'              	goto	i1l5845
 14779  0172'                    i1l5847:
 14780  0172' 01AA'              	clrf	i1___flmul@aexp
 14781  0173' 1FAE'              	btfss	i1___flmul@grs+3,7
 14782  0174' 2800'              	goto	i1l5857
 14783  0175' 30FF               	movlw	255
 14784  0176' 052B'              	andwf	i1___flmul@grs,w
 14785  0177' 00A4'              	movwf	??i1___flmul
 14786  0178' 30FF               	movlw	255
 14787  0179' 052C'              	andwf	i1___flmul@grs+1,w
 14788  017A' 00A5'              	movwf	??i1___flmul+1
 14789  017B' 30FF               	movlw	255
 14790  017C' 052D'              	andwf	i1___flmul@grs+2,w
 14791  017D' 00A6'              	movwf	??i1___flmul+2
 14792  017E' 307F               	movlw	127
 14793  017F' 052E'              	andwf	i1___flmul@grs+3,w
 14794  0180' 00A7'              	movwf	??i1___flmul+3
 14795  0181' 0827'              	movf	??i1___flmul+3,w
 14796  0182' 0426'              	iorwf	??i1___flmul+2,w
 14797  0183' 0425'              	iorwf	??i1___flmul+1,w
 14798  0184' 0424'              	iorwf	??i1___flmul,w
 14799  0185' 1903               	skipnz
 14800  0186' 1830'              	btfsc	i1___flmul@prod,0
 14801  0187' 2800'              	goto	i1l5853
 14802  0188' 2800'              	goto	i1l5857
 14803  0189'                    i1l5853:
 14804  0189' 01AA'              	clrf	i1___flmul@aexp
 14805  018A' 0AAA'              	incf	i1___flmul@aexp,f
 14806  018B'                    i1l5857:
 14807  018B' 082A'              	movf	i1___flmul@aexp,w
 14808  018C' 1903               	btfsc	3,2
 14809  018D' 2800'              	goto	i1l5867
 14810  018E' 3001               	movlw	1
 14811  018F' 07B0'              	addwf	i1___flmul@prod,f
 14812  0190' 3000               	movlw	0
 14813  0191' 3DB1'              	addwfc	i1___flmul@prod+1,f
 14814  0192' 3000               	movlw	0
 14815  0193' 3DB2'              	addwfc	i1___flmul@prod+2,f
 14816  0194' 3000               	movlw	0
 14817  0195' 3DB3'              	addwfc	i1___flmul@prod+3,f
 14818  0196' 1C33'              	btfss	i1___flmul@prod+3,0
 14819  0197' 2800'              	goto	i1l5867
 14820  0198' 0830'              	movf	i1___flmul@prod,w
 14821  0199' 00A4'              	movwf	??i1___flmul
 14822  019A' 0831'              	movf	i1___flmul@prod+1,w
 14823  019B' 00A5'              	movwf	??i1___flmul+1
 14824  019C' 0832'              	movf	i1___flmul@prod+2,w
 14825  019D' 00A6'              	movwf	??i1___flmul+2
 14826  019E' 0833'              	movf	i1___flmul@prod+3,w
 14827  019F' 00A7'              	movwf	??i1___flmul+3
 14828  01A0' 3001               	movlw	1
 14829  01A1' 00A8'              	movwf	??i1___flmul+4
 14830  01A2'                    u622_25:
 14831  01A2' 37A7'              	asrf	??i1___flmul+3,f
 14832  01A3' 0CA6'              	rrf	??i1___flmul+2,f
 14833  01A4' 0CA5'              	rrf	??i1___flmul+1,f
 14834  01A5' 0CA4'              	rrf	??i1___flmul,f
 14835  01A6' 0BA8'              	decfsz	??i1___flmul+4,f
 14836  01A7' 2800'              	goto	u622_25
 14837  01A8' 0827'              	movf	??i1___flmul+3,w
 14838  01A9' 00B3'              	movwf	i1___flmul@prod+3
 14839  01AA' 0826'              	movf	??i1___flmul+2,w
 14840  01AB' 00B2'              	movwf	i1___flmul@prod+2
 14841  01AC' 0825'              	movf	??i1___flmul+1,w
 14842  01AD' 00B1'              	movwf	i1___flmul@prod+1
 14843  01AE' 0824'              	movf	??i1___flmul,w
 14844  01AF' 00B0'              	movwf	i1___flmul@prod
 14845  01B0' 3001               	movlw	1
 14846  01B1' 07B4'              	addwf	i1___flmul@temp,f
 14847  01B2' 3000               	movlw	0
 14848  01B3' 3DB5'              	addwfc	i1___flmul@temp+1,f
 14849  01B4'                    i1l5867:
 14850  01B4' 0835'              	movf	i1___flmul@temp+1,w
 14851  01B5' 3A80               	xorlw	128
 14852  01B6' 00A4'              	movwf	??i1___flmul
 14853  01B7' 3080               	movlw	128
 14854  01B8' 0224'              	subwf	??i1___flmul,w
 14855  01B9' 1D03               	skipz
 14856  01BA' 2800'              	goto	u623_25
 14857  01BB' 30FF               	movlw	255
 14858  01BC' 0234'              	subwf	i1___flmul@temp,w
 14859  01BD'                    u623_25:
 14860  01BD' 1C03               	skipc
 14861  01BE' 2800'              	goto	i1l5871
 14862  01BF' 307F               	movlw	127
 14863  01C0' 0020               	movlb	0	; select bank0
 14864  01C1' 00B3'              	movwf	i1___flmul@prod+3
 14865  01C2' 3080               	movlw	128
 14866  01C3' 00B2'              	movwf	i1___flmul@prod+2
 14867  01C4' 3000               	movlw	0
 14868  01C5' 00B1'              	movwf	i1___flmul@prod+1
 14869  01C6' 3000               	movlw	0
 14870  01C7' 00B0'              	movwf	i1___flmul@prod
 14871  01C8' 2800'              	goto	i1l1455
 14872  01C9'                    i1l5871:
 14873  01C9' 0020               	movlb	0	; select bank0
 14874  01CA' 0835'              	movf	i1___flmul@temp+1,w
 14875  01CB' 3A80               	xorlw	128
 14876  01CC' 00A4'              	movwf	??i1___flmul
 14877  01CD' 3080               	movlw	128
 14878  01CE' 0224'              	subwf	??i1___flmul,w
 14879  01CF' 1D03               	skipz
 14880  01D0' 2800'              	goto	u624_25
 14881  01D1' 3001               	movlw	1
 14882  01D2' 0234'              	subwf	i1___flmul@temp,w
 14883  01D3'                    u624_25:
 14884  01D3' 1803               	skipnc
 14885  01D4' 2800'              	goto	i1l5877
 14886  01D5' 3000               	movlw	0
 14887  01D6' 0020               	movlb	0	; select bank0
 14888  01D7' 00B3'              	movwf	i1___flmul@prod+3
 14889  01D8' 3000               	movlw	0
 14890  01D9' 00B2'              	movwf	i1___flmul@prod+2
 14891  01DA' 3000               	movlw	0
 14892  01DB' 00B1'              	movwf	i1___flmul@prod+1
 14893  01DC' 3000               	movlw	0
 14894  01DD' 00B0'              	movwf	i1___flmul@prod
 14895  01DE' 01A9'              	clrf	i1___flmul@sign
 14896  01DF' 2800'              	goto	i1l1455
 14897  01E0'                    i1l5877:
 14898  01E0' 0020               	movlb	0	; select bank0
 14899  01E1' 0834'              	movf	i1___flmul@temp,w
 14900  01E2' 00AF'              	movwf	i1___flmul@bexp
 14901  01E3' 30FF               	movlw	255
 14902  01E4' 05B0'              	andwf	i1___flmul@prod,f
 14903  01E5' 30FF               	movlw	255
 14904  01E6' 05B1'              	andwf	i1___flmul@prod+1,f
 14905  01E7' 307F               	movlw	127
 14906  01E8' 05B2'              	andwf	i1___flmul@prod+2,f
 14907  01E9' 3000               	movlw	0
 14908  01EA' 05B3'              	andwf	i1___flmul@prod+3,f
 14909  01EB' 182F'              	btfsc	i1___flmul@bexp,0
 14910  01EC' 17B2'              	bsf	i1___flmul@prod+2,7
 14911  01ED' 362F'              	lsrf	i1___flmul@bexp,w
 14912  01EE' 00B3'              	movwf	i1___flmul@prod+3
 14913  01EF'                    i1l1455:
 14914  01EF' 0829'              	movf	i1___flmul@sign,w
 14915  01F0' 00A4'              	movwf	??i1___flmul
 14916  01F1' 0824'              	movf	??i1___flmul,w
 14917  01F2' 04B3'              	iorwf	i1___flmul@prod+3,f
 14918  01F3' 0833'              	movf	i1___flmul@prod+3,w
 14919  01F4' 009F'              	movwf	?i1___flmul+3
 14920  01F5' 0832'              	movf	i1___flmul@prod+2,w
 14921  01F6' 009E'              	movwf	?i1___flmul+2
 14922  01F7' 0831'              	movf	i1___flmul@prod+1,w
 14923  01F8' 009D'              	movwf	?i1___flmul+1
 14924  01F9' 0830'              	movf	i1___flmul@prod,w
 14925  01FA' 009C'              	movwf	?i1___flmul
 14926  01FB' 0008               	return
 14927  01FC'                    __end_ofi1___flmul:
 14928                           
 14929                           	psect	text43
 14930  0000'                    __ptext43:	
 14931 ;; *************** function i1__Umul8_16 *****************
 14932 ;; Defined at:
 14933 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8_16.c"
 14934 ;; Parameters:    Size  Location     Type
 14935 ;;  multiplier      1    wreg     unsigned char 
 14936 ;;  multiplicand    1    0[COMMON] unsigned char 
 14937 ;; Auto vars:     Size  Location     Type
 14938 ;;  multiplier      1    8[COMMON] unsigned char 
 14939 ;;  word_mpld       2    6[COMMON] unsigned int 
 14940 ;;  product         2    4[COMMON] unsigned int 
 14941 ;; Return value:  Size  Location     Type
 14942 ;;                  2    0[COMMON] unsigned int 
 14943 ;; Registers used:
 14944 ;;		wreg, status,2, status,0
 14945 ;; Tracked objects:
 14946 ;;		On entry : 1F/0
 14947 ;;		On exit  : 1F/0
 14948 ;;		Unchanged: 1F/0
 14949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14950 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14951 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14952 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14953 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14954 ;;Total ram usage:        9 bytes
 14955 ;; Hardware stack levels used: 1
 14956 ;; This function calls:
 14957 ;;		Nothing
 14958 ;; This function is called by:
 14959 ;;		i1___flmul
 14960 ;; This function uses a non-reentrant model
 14961 ;;
 14962                           
 14963  0000'                    i1__Umul8_16:	
 14964                           ;psect for function i1__Umul8_16
 14965                           
 14966                           
 14967                           ;incstack = 0
 14968                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 14969                           ;i1__Umul8_16@multiplier stored from wreg
 14970  0000' 0088'              	movwf	i1__Umul8_16@multiplier
 14971  0001' 0184'              	clrf	i1__Umul8_16@product
 14972  0002' 0185'              	clrf	i1__Umul8_16@product+1
 14973  0003' 0800'              	movf	i1__Umul8_16@multiplicand,w
 14974  0004' 0082'              	movwf	??i1__Umul8_16
 14975  0005' 0183'              	clrf	??i1__Umul8_16+1
 14976  0006' 0802'              	movf	??i1__Umul8_16,w
 14977  0007' 0086'              	movwf	i1__Umul8_16@word_mpld
 14978  0008' 0803'              	movf	??i1__Umul8_16+1,w
 14979  0009' 0087'              	movwf	i1__Umul8_16@word_mpld+1
 14980  000A'                    i1l5437:
 14981  000A' 1C08'              	btfss	i1__Umul8_16@multiplier,0
 14982  000B' 2800'              	goto	i1l1462
 14983  000C' 0806'              	movf	i1__Umul8_16@word_mpld,w
 14984  000D' 0784'              	addwf	i1__Umul8_16@product,f
 14985  000E' 0807'              	movf	i1__Umul8_16@word_mpld+1,w
 14986  000F' 3D85'              	addwfc	i1__Umul8_16@product+1,f
 14987  0010'                    i1l1462:
 14988  0010' 3001               	movlw	1
 14989  0011'                    u547_25:
 14990  0011' 3586'              	lslf	i1__Umul8_16@word_mpld,f
 14991  0012' 0D87'              	rlf	i1__Umul8_16@word_mpld+1,f
 14992  0013' 0B89               	decfsz	9,f
 14993  0014' 2800'              	goto	u547_25
 14994  0015' 1003               	clrc
 14995  0016' 0C88'              	rrf	i1__Umul8_16@multiplier,f
 14996  0017' 0808'              	movf	i1__Umul8_16@multiplier,w
 14997  0018' 1D03               	btfss	3,2
 14998  0019' 2800'              	goto	i1l5437
 14999  001A' 0805'              	movf	i1__Umul8_16@product+1,w
 15000  001B' 0081'              	movwf	?i1__Umul8_16+1
 15001  001C' 0804'              	movf	i1__Umul8_16@product,w
 15002  001D' 0080'              	movwf	?i1__Umul8_16
 15003  001E' 0008               	return
 15004  001F'                    __end_ofi1__Umul8_16:
 15005                           
 15006                           	psect	text44
 15007  0000'                    __ptext44:	
 15008 ;; *************** function i1___fldiv *****************
 15009 ;; Defined at:
 15010 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 15011 ;; Parameters:    Size  Location     Type
 15012 ;;  a               4   54[BANK0 ] unsigned int 
 15013 ;;  b               4   58[BANK0 ] unsigned int 
 15014 ;; Auto vars:     Size  Location     Type
 15015 ;;  grs             4   74[BANK0 ] unsigned long 
 15016 ;;  rem             4   67[BANK0 ] unsigned long 
 15017 ;;  new_exp         2   72[BANK0 ] int 
 15018 ;;  aexp            1   79[BANK0 ] unsigned char 
 15019 ;;  bexp            1   78[BANK0 ] unsigned char 
 15020 ;;  sign            1   71[BANK0 ] unsigned char 
 15021 ;; Return value:  Size  Location     Type
 15022 ;;                  4   54[BANK0 ] unsigned char 
 15023 ;; Registers used:
 15024 ;;		wreg, status,2, status,0
 15025 ;; Tracked objects:
 15026 ;;		On entry : 1F/0
 15027 ;;		On exit  : 1F/0
 15028 ;;		Unchanged: 0/0
 15029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15030 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15031 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15032 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15033 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15034 ;;Total ram usage:       26 bytes
 15035 ;; Hardware stack levels used: 1
 15036 ;; This function calls:
 15037 ;;		Nothing
 15038 ;; This function is called by:
 15039 ;;		_command_interpreter
 15040 ;;		i1_converter_settings
 15041 ;; This function uses a non-reentrant model
 15042 ;;
 15043                           
 15044  0000'                    i1___fldiv:	
 15045                           ;psect for function i1___fldiv
 15046                           
 15047                           
 15048                           ;incstack = 0
 15049                           ; Regs used in i1___fldiv: [wreg+status,2+status,0]
 15050  0000' 083D'              	movf	i1___fldiv@b+3,w
 15051  0001' 3980               	andlw	128
 15052  0002' 00C7'              	movwf	i1___fldiv@sign
 15053  0003' 353D'              	lslf	i1___fldiv@b+3,w
 15054  0004' 00CE'              	movwf	i1___fldiv@bexp
 15055  0005' 1BBC'              	btfsc	i1___fldiv@b+2,7
 15056  0006' 144E'              	bsf	i1___fldiv@bexp,0
 15057  0007' 084E'              	movf	i1___fldiv@bexp,w
 15058  0008' 1903               	btfsc	3,2
 15059  0009' 2800'              	goto	i1l5627
 15060  000A' 0A4E'              	incf	i1___fldiv@bexp,w
 15061  000B' 1D03               	btfss	3,2
 15062  000C' 2800'              	goto	i1l5623
 15063  000D' 3000               	movlw	0
 15064  000E' 00BD'              	movwf	i1___fldiv@b+3
 15065  000F' 3000               	movlw	0
 15066  0010' 00BC'              	movwf	i1___fldiv@b+2
 15067  0011' 3000               	movlw	0
 15068  0012' 00BB'              	movwf	i1___fldiv@b+1
 15069  0013' 3000               	movlw	0
 15070  0014' 00BA'              	movwf	i1___fldiv@b
 15071  0015'                    i1l5623:
 15072  0015' 17BC'              	bsf	i1___fldiv@b+2,7
 15073  0016' 01BD'              	clrf	i1___fldiv@b+3
 15074  0017' 2800'              	goto	i1l5629
 15075  0018'                    i1l5627:
 15076  0018' 3000               	movlw	0
 15077  0019' 00BD'              	movwf	i1___fldiv@b+3
 15078  001A' 3000               	movlw	0
 15079  001B' 00BC'              	movwf	i1___fldiv@b+2
 15080  001C' 3000               	movlw	0
 15081  001D' 00BB'              	movwf	i1___fldiv@b+1
 15082  001E' 3000               	movlw	0
 15083  001F' 00BA'              	movwf	i1___fldiv@b
 15084  0020'                    i1l5629:
 15085  0020' 0839'              	movf	i1___fldiv@a+3,w
 15086  0021' 3980               	andlw	128
 15087  0022' 00BE'              	movwf	??i1___fldiv
 15088  0023' 083E'              	movf	??i1___fldiv,w
 15089  0024' 06C7'              	xorwf	i1___fldiv@sign,f
 15090  0025' 3539'              	lslf	i1___fldiv@a+3,w
 15091  0026' 00CF'              	movwf	i1___fldiv@aexp
 15092  0027' 1BB8'              	btfsc	i1___fldiv@a+2,7
 15093  0028' 144F'              	bsf	i1___fldiv@aexp,0
 15094  0029' 084F'              	movf	i1___fldiv@aexp,w
 15095  002A' 1903               	btfsc	3,2
 15096  002B' 2800'              	goto	i1l5647
 15097  002C' 0A4F'              	incf	i1___fldiv@aexp,w
 15098  002D' 1D03               	btfss	3,2
 15099  002E' 2800'              	goto	i1l5643
 15100  002F' 3000               	movlw	0
 15101  0030' 00B9'              	movwf	i1___fldiv@a+3
 15102  0031' 3000               	movlw	0
 15103  0032' 00B8'              	movwf	i1___fldiv@a+2
 15104  0033' 3000               	movlw	0
 15105  0034' 00B7'              	movwf	i1___fldiv@a+1
 15106  0035' 3000               	movlw	0
 15107  0036' 00B6'              	movwf	i1___fldiv@a
 15108  0037'                    i1l5643:
 15109  0037' 17B8'              	bsf	i1___fldiv@a+2,7
 15110  0038' 01B9'              	clrf	i1___fldiv@a+3
 15111  0039' 2800'              	goto	i1l1403
 15112  003A'                    i1l5647:
 15113  003A' 3000               	movlw	0
 15114  003B' 00B9'              	movwf	i1___fldiv@a+3
 15115  003C' 3000               	movlw	0
 15116  003D' 00B8'              	movwf	i1___fldiv@a+2
 15117  003E' 3000               	movlw	0
 15118  003F' 00B7'              	movwf	i1___fldiv@a+1
 15119  0040' 3000               	movlw	0
 15120  0041' 00B6'              	movwf	i1___fldiv@a
 15121  0042'                    i1l1403:
 15122  0042' 0839'              	movf	i1___fldiv@a+3,w
 15123  0043' 0438'              	iorwf	i1___fldiv@a+2,w
 15124  0044' 0437'              	iorwf	i1___fldiv@a+1,w
 15125  0045' 0436'              	iorwf	i1___fldiv@a,w
 15126  0046' 1D03               	skipz
 15127  0047' 2800'              	goto	i1l5657
 15128  0048' 3000               	movlw	0
 15129  0049' 00BD'              	movwf	i1___fldiv@b+3
 15130  004A' 3000               	movlw	0
 15131  004B' 00BC'              	movwf	i1___fldiv@b+2
 15132  004C' 3000               	movlw	0
 15133  004D' 00BB'              	movwf	i1___fldiv@b+1
 15134  004E' 3000               	movlw	0
 15135  004F' 00BA'              	movwf	i1___fldiv@b
 15136  0050' 3080               	movlw	128
 15137  0051' 04BC'              	iorwf	i1___fldiv@b+2,f
 15138  0052' 307F               	movlw	127
 15139  0053' 04BD'              	iorwf	i1___fldiv@b+3,f
 15140  0054'                    L20:
 15141  0054' 0847'              	movf	i1___fldiv@sign,w
 15142  0055' 00BE'              	movwf	??i1___fldiv
 15143  0056' 083E'              	movf	??i1___fldiv,w
 15144  0057' 04BD'              	iorwf	i1___fldiv@b+3,f
 15145  0058' 083D'              	movf	i1___fldiv@b+3,w
 15146  0059' 00B9'              	movwf	?i1___fldiv+3
 15147  005A' 083C'              	movf	i1___fldiv@b+2,w
 15148  005B' 00B8'              	movwf	?i1___fldiv+2
 15149  005C' 083B'              	movf	i1___fldiv@b+1,w
 15150  005D' 00B7'              	movwf	?i1___fldiv+1
 15151  005E' 083A'              	movf	i1___fldiv@b,w
 15152  005F' 00B6'              	movwf	?i1___fldiv
 15153  0060' 0008               	return
 15154  0061'                    i1l5657:
 15155  0061' 084E'              	movf	i1___fldiv@bexp,w
 15156  0062' 1D03               	btfss	3,2
 15157  0063' 2800'              	goto	i1l5663
 15158  0064' 3000               	movlw	0
 15159  0065' 00B9'              	movwf	?i1___fldiv+3
 15160  0066' 3000               	movlw	0
 15161  0067' 00B8'              	movwf	?i1___fldiv+2
 15162  0068' 3000               	movlw	0
 15163  0069' 00B7'              	movwf	?i1___fldiv+1
 15164  006A' 3000               	movlw	0
 15165  006B' 00B6'              	movwf	?i1___fldiv
 15166  006C' 0008               	return
 15167  006D'                    i1l5663:
 15168  006D' 084E'              	movf	i1___fldiv@bexp,w
 15169  006E' 00BE'              	movwf	??i1___fldiv
 15170  006F' 01BF'              	clrf	??i1___fldiv+1
 15171  0070' 083F'              	movf	??i1___fldiv+1,w
 15172  0071' 00C1'              	movwf	??i1___fldiv+3
 15173  0072' 084F'              	movf	i1___fldiv@aexp,w
 15174  0073' 023E'              	subwf	??i1___fldiv,w
 15175  0074' 00C0'              	movwf	??i1___fldiv+2
 15176  0075' 1C03               	skipc
 15177  0076' 03C1'              	decf	??i1___fldiv+3,f
 15178  0077' 0840'              	movf	??i1___fldiv+2,w
 15179  0078' 3E7F               	addlw	127
 15180  0079' 00C8'              	movwf	i1___fldiv@new_exp
 15181  007A' 3000               	movlw	0
 15182  007B' 3D41'              	addwfc	??i1___fldiv+3,w
 15183  007C' 00C9'              	movwf	i1___fldiv@new_exp+1
 15184  007D' 083D'              	movf	i1___fldiv@b+3,w
 15185  007E' 00C6'              	movwf	i1___fldiv@rem+3
 15186  007F' 083C'              	movf	i1___fldiv@b+2,w
 15187  0080' 00C5'              	movwf	i1___fldiv@rem+2
 15188  0081' 083B'              	movf	i1___fldiv@b+1,w
 15189  0082' 00C4'              	movwf	i1___fldiv@rem+1
 15190  0083' 083A'              	movf	i1___fldiv@b,w
 15191  0084' 00C3'              	movwf	i1___fldiv@rem
 15192  0085' 3000               	movlw	0
 15193  0086' 00BD'              	movwf	i1___fldiv@b+3
 15194  0087' 3000               	movlw	0
 15195  0088' 00BC'              	movwf	i1___fldiv@b+2
 15196  0089' 3000               	movlw	0
 15197  008A' 00BB'              	movwf	i1___fldiv@b+1
 15198  008B' 3000               	movlw	0
 15199  008C' 00BA'              	movwf	i1___fldiv@b
 15200  008D' 3000               	movlw	0
 15201  008E' 00CD'              	movwf	i1___fldiv@grs+3
 15202  008F' 3000               	movlw	0
 15203  0090' 00CC'              	movwf	i1___fldiv@grs+2
 15204  0091' 3000               	movlw	0
 15205  0092' 00CB'              	movwf	i1___fldiv@grs+1
 15206  0093' 3000               	movlw	0
 15207  0094' 00CA'              	movwf	i1___fldiv@grs
 15208  0095' 01CF'              	clrf	i1___fldiv@aexp
 15209  0096'                    i1l5691:
 15210  0096' 301A               	movlw	26
 15211  0097' 024F'              	subwf	i1___fldiv@aexp,w
 15212  0098' 1803               	btfsc	3,0
 15213  0099' 2800'              	goto	i1l5693
 15214  009A' 084F'              	movf	i1___fldiv@aexp,w
 15215  009B' 1903               	btfsc	3,2
 15216  009C' 2800'              	goto	i1l5683
 15217  009D' 3001               	movlw	1
 15218  009E'                    u581_25:
 15219  009E' 35C3'              	lslf	i1___fldiv@rem,f
 15220  009F' 0DC4'              	rlf	i1___fldiv@rem+1,f
 15221  00A0' 0DC5'              	rlf	i1___fldiv@rem+2,f
 15222  00A1' 0DC6'              	rlf	i1___fldiv@rem+3,f
 15223  00A2' 0B89               	decfsz	9,f
 15224  00A3' 2800'              	goto	u581_25
 15225  00A4' 3001               	movlw	1
 15226  00A5'                    u582_25:
 15227  00A5' 35BA'              	lslf	i1___fldiv@b,f
 15228  00A6' 0DBB'              	rlf	i1___fldiv@b+1,f
 15229  00A7' 0DBC'              	rlf	i1___fldiv@b+2,f
 15230  00A8' 0DBD'              	rlf	i1___fldiv@b+3,f
 15231  00A9' 0B89               	decfsz	9,f
 15232  00AA' 2800'              	goto	u582_25
 15233  00AB' 1BCD'              	btfsc	i1___fldiv@grs+3,7
 15234  00AC' 143A'              	bsf	i1___fldiv@b,0
 15235  00AD' 3001               	movlw	1
 15236  00AE'                    u584_25:
 15237  00AE' 35CA'              	lslf	i1___fldiv@grs,f
 15238  00AF' 0DCB'              	rlf	i1___fldiv@grs+1,f
 15239  00B0' 0DCC'              	rlf	i1___fldiv@grs+2,f
 15240  00B1' 0DCD'              	rlf	i1___fldiv@grs+3,f
 15241  00B2' 0B89               	decfsz	9,f
 15242  00B3' 2800'              	goto	u584_25
 15243  00B4'                    i1l5683:
 15244  00B4' 0839'              	movf	i1___fldiv@a+3,w
 15245  00B5' 0246'              	subwf	i1___fldiv@rem+3,w
 15246  00B6' 1D03               	skipz
 15247  00B7' 2800'              	goto	u585_25
 15248  00B8' 0838'              	movf	i1___fldiv@a+2,w
 15249  00B9' 0245'              	subwf	i1___fldiv@rem+2,w
 15250  00BA' 1D03               	skipz
 15251  00BB' 2800'              	goto	u585_25
 15252  00BC' 0837'              	movf	i1___fldiv@a+1,w
 15253  00BD' 0244'              	subwf	i1___fldiv@rem+1,w
 15254  00BE' 1D03               	skipz
 15255  00BF' 2800'              	goto	u585_25
 15256  00C0' 0836'              	movf	i1___fldiv@a,w
 15257  00C1' 0243'              	subwf	i1___fldiv@rem,w
 15258  00C2'                    u585_25:
 15259  00C2' 1C03               	skipc
 15260  00C3' 2800'              	goto	i1l5689
 15261  00C4' 174D'              	bsf	i1___fldiv@grs+3,6
 15262  00C5' 0836'              	movf	i1___fldiv@a,w
 15263  00C6' 02C3'              	subwf	i1___fldiv@rem,f
 15264  00C7' 0837'              	movf	i1___fldiv@a+1,w
 15265  00C8' 3BC4'              	subwfb	i1___fldiv@rem+1,f
 15266  00C9' 0838'              	movf	i1___fldiv@a+2,w
 15267  00CA' 3BC5'              	subwfb	i1___fldiv@rem+2,f
 15268  00CB' 0839'              	movf	i1___fldiv@a+3,w
 15269  00CC' 3BC6'              	subwfb	i1___fldiv@rem+3,f
 15270  00CD'                    i1l5689:
 15271  00CD' 3001               	movlw	1
 15272  00CE' 00BE'              	movwf	??i1___fldiv
 15273  00CF' 083E'              	movf	??i1___fldiv,w
 15274  00D0' 07CF'              	addwf	i1___fldiv@aexp,f
 15275  00D1' 2800'              	goto	i1l5691
 15276  00D2'                    i1l5693:
 15277  00D2' 0846'              	movf	i1___fldiv@rem+3,w
 15278  00D3' 0445'              	iorwf	i1___fldiv@rem+2,w
 15279  00D4' 0444'              	iorwf	i1___fldiv@rem+1,w
 15280  00D5' 0443'              	iorwf	i1___fldiv@rem,w
 15281  00D6' 1D03               	btfss	3,2
 15282  00D7' 144A'              	bsf	i1___fldiv@grs,0
 15283  00D8'                    i1l5707:
 15284  00D8' 1BBC'              	btfsc	i1___fldiv@b+2,7
 15285  00D9' 2800'              	goto	i1l5709
 15286  00DA' 3001               	movlw	1
 15287  00DB'                    u588_25:
 15288  00DB' 35BA'              	lslf	i1___fldiv@b,f
 15289  00DC' 0DBB'              	rlf	i1___fldiv@b+1,f
 15290  00DD' 0DBC'              	rlf	i1___fldiv@b+2,f
 15291  00DE' 0DBD'              	rlf	i1___fldiv@b+3,f
 15292  00DF' 0B89               	decfsz	9,f
 15293  00E0' 2800'              	goto	u588_25
 15294  00E1' 1BCD'              	btfsc	i1___fldiv@grs+3,7
 15295  00E2' 143A'              	bsf	i1___fldiv@b,0
 15296  00E3' 3001               	movlw	1
 15297  00E4'                    u590_25:
 15298  00E4' 35CA'              	lslf	i1___fldiv@grs,f
 15299  00E5' 0DCB'              	rlf	i1___fldiv@grs+1,f
 15300  00E6' 0DCC'              	rlf	i1___fldiv@grs+2,f
 15301  00E7' 0DCD'              	rlf	i1___fldiv@grs+3,f
 15302  00E8' 0B89               	decfsz	9,f
 15303  00E9' 2800'              	goto	u590_25
 15304  00EA' 30FF               	movlw	255
 15305  00EB' 07C8'              	addwf	i1___fldiv@new_exp,f
 15306  00EC' 30FF               	movlw	255
 15307  00ED' 3DC9'              	addwfc	i1___fldiv@new_exp+1,f
 15308  00EE' 2800'              	goto	i1l5707
 15309  00EF'                    i1l5709:
 15310  00EF' 01CF'              	clrf	i1___fldiv@aexp
 15311  00F0' 1FCD'              	btfss	i1___fldiv@grs+3,7
 15312  00F1' 2800'              	goto	i1l5719
 15313  00F2' 30FF               	movlw	255
 15314  00F3' 054A'              	andwf	i1___fldiv@grs,w
 15315  00F4' 00BE'              	movwf	??i1___fldiv
 15316  00F5' 30FF               	movlw	255
 15317  00F6' 054B'              	andwf	i1___fldiv@grs+1,w
 15318  00F7' 00BF'              	movwf	??i1___fldiv+1
 15319  00F8' 30FF               	movlw	255
 15320  00F9' 054C'              	andwf	i1___fldiv@grs+2,w
 15321  00FA' 00C0'              	movwf	??i1___fldiv+2
 15322  00FB' 307F               	movlw	127
 15323  00FC' 054D'              	andwf	i1___fldiv@grs+3,w
 15324  00FD' 00C1'              	movwf	??i1___fldiv+3
 15325  00FE' 0841'              	movf	??i1___fldiv+3,w
 15326  00FF' 0440'              	iorwf	??i1___fldiv+2,w
 15327  0100' 043F'              	iorwf	??i1___fldiv+1,w
 15328  0101' 043E'              	iorwf	??i1___fldiv,w
 15329  0102' 1903               	skipnz
 15330  0103' 183A'              	btfsc	i1___fldiv@b,0
 15331  0104' 2800'              	goto	i1l5715
 15332  0105' 2800'              	goto	i1l5719
 15333  0106'                    i1l5715:
 15334  0106' 01CF'              	clrf	i1___fldiv@aexp
 15335  0107' 0ACF'              	incf	i1___fldiv@aexp,f
 15336  0108'                    i1l5719:
 15337  0108' 084F'              	movf	i1___fldiv@aexp,w
 15338  0109' 1903               	btfsc	3,2
 15339  010A' 2800'              	goto	i1l5729
 15340  010B' 3001               	movlw	1
 15341  010C' 07BA'              	addwf	i1___fldiv@b,f
 15342  010D' 3000               	movlw	0
 15343  010E' 3DBB'              	addwfc	i1___fldiv@b+1,f
 15344  010F' 3000               	movlw	0
 15345  0110' 3DBC'              	addwfc	i1___fldiv@b+2,f
 15346  0111' 3000               	movlw	0
 15347  0112' 3DBD'              	addwfc	i1___fldiv@b+3,f
 15348  0113' 1C3D'              	btfss	i1___fldiv@b+3,0
 15349  0114' 2800'              	goto	i1l5729
 15350  0115' 083A'              	movf	i1___fldiv@b,w
 15351  0116' 00BE'              	movwf	??i1___fldiv
 15352  0117' 083B'              	movf	i1___fldiv@b+1,w
 15353  0118' 00BF'              	movwf	??i1___fldiv+1
 15354  0119' 083C'              	movf	i1___fldiv@b+2,w
 15355  011A' 00C0'              	movwf	??i1___fldiv+2
 15356  011B' 083D'              	movf	i1___fldiv@b+3,w
 15357  011C' 00C1'              	movwf	??i1___fldiv+3
 15358  011D' 3001               	movlw	1
 15359  011E' 00C2'              	movwf	??i1___fldiv+4
 15360  011F'                    u597_25:
 15361  011F' 37C1'              	asrf	??i1___fldiv+3,f
 15362  0120' 0CC0'              	rrf	??i1___fldiv+2,f
 15363  0121' 0CBF'              	rrf	??i1___fldiv+1,f
 15364  0122' 0CBE'              	rrf	??i1___fldiv,f
 15365  0123' 0BC2'              	decfsz	??i1___fldiv+4,f
 15366  0124' 2800'              	goto	u597_25
 15367  0125' 0841'              	movf	??i1___fldiv+3,w
 15368  0126' 00BD'              	movwf	i1___fldiv@b+3
 15369  0127' 0840'              	movf	??i1___fldiv+2,w
 15370  0128' 00BC'              	movwf	i1___fldiv@b+2
 15371  0129' 083F'              	movf	??i1___fldiv+1,w
 15372  012A' 00BB'              	movwf	i1___fldiv@b+1
 15373  012B' 083E'              	movf	??i1___fldiv,w
 15374  012C' 00BA'              	movwf	i1___fldiv@b
 15375  012D' 3001               	movlw	1
 15376  012E' 07C8'              	addwf	i1___fldiv@new_exp,f
 15377  012F' 3000               	movlw	0
 15378  0130' 3DC9'              	addwfc	i1___fldiv@new_exp+1,f
 15379  0131'                    i1l5729:
 15380  0131' 0849'              	movf	i1___fldiv@new_exp+1,w
 15381  0132' 3A80               	xorlw	128
 15382  0133' 00BE'              	movwf	??i1___fldiv
 15383  0134' 3080               	movlw	128
 15384  0135' 023E'              	subwf	??i1___fldiv,w
 15385  0136' 1D03               	skipz
 15386  0137' 2800'              	goto	u598_25
 15387  0138' 30FF               	movlw	255
 15388  0139' 0248'              	subwf	i1___fldiv@new_exp,w
 15389  013A'                    u598_25:
 15390  013A' 1C03               	skipc
 15391  013B' 2800'              	goto	i1l1424
 15392  013C' 30FF               	movlw	255
 15393  013D' 0020               	movlb	0	; select bank0
 15394  013E' 00C8'              	movwf	i1___fldiv@new_exp
 15395  013F' 3000               	movlw	0
 15396  0140' 00C9'              	movwf	i1___fldiv@new_exp+1
 15397  0141' 3000               	movlw	0
 15398  0142' 00BD'              	movwf	i1___fldiv@b+3
 15399  0143' 3000               	movlw	0
 15400  0144' 00BC'              	movwf	i1___fldiv@b+2
 15401  0145' 3000               	movlw	0
 15402  0146' 00BB'              	movwf	i1___fldiv@b+1
 15403  0147' 3000               	movlw	0
 15404  0148' 00BA'              	movwf	i1___fldiv@b
 15405  0149'                    i1l1424:
 15406  0149' 0020               	movlb	0	; select bank0
 15407  014A' 0849'              	movf	i1___fldiv@new_exp+1,w
 15408  014B' 3A80               	xorlw	128
 15409  014C' 00BE'              	movwf	??i1___fldiv
 15410  014D' 3080               	movlw	128
 15411  014E' 023E'              	subwf	??i1___fldiv,w
 15412  014F' 1D03               	skipz
 15413  0150' 2800'              	goto	u599_25
 15414  0151' 3001               	movlw	1
 15415  0152' 0248'              	subwf	i1___fldiv@new_exp,w
 15416  0153'                    u599_25:
 15417  0153' 1803               	skipnc
 15418  0154' 2800'              	goto	i1l1425
 15419  0155' 0020               	movlb	0	; select bank0
 15420  0156' 01C8'              	clrf	i1___fldiv@new_exp
 15421  0157' 01C9'              	clrf	i1___fldiv@new_exp+1
 15422  0158' 3000               	movlw	0
 15423  0159' 00BD'              	movwf	i1___fldiv@b+3
 15424  015A' 3000               	movlw	0
 15425  015B' 00BC'              	movwf	i1___fldiv@b+2
 15426  015C' 3000               	movlw	0
 15427  015D' 00BB'              	movwf	i1___fldiv@b+1
 15428  015E' 3000               	movlw	0
 15429  015F' 00BA'              	movwf	i1___fldiv@b
 15430  0160' 01C7'              	clrf	i1___fldiv@sign
 15431  0161'                    i1l1425:
 15432  0161' 0020               	movlb	0	; select bank0
 15433  0162' 0848'              	movf	i1___fldiv@new_exp,w
 15434  0163' 00CE'              	movwf	i1___fldiv@bexp
 15435  0164' 1C4E'              	btfss	i1___fldiv@bexp,0
 15436  0165' 2800'              	goto	i1l5743
 15437  0166' 17BC'              	bsf	i1___fldiv@b+2,7
 15438  0167' 2800'              	goto	i1l1427
 15439  0168'                    i1l5743:
 15440  0168' 307F               	movlw	127
 15441  0169' 00BE'              	movwf	??i1___fldiv
 15442  016A' 083E'              	movf	??i1___fldiv,w
 15443  016B' 05BC'              	andwf	i1___fldiv@b+2,f
 15444  016C'                    i1l1427:
 15445  016C' 364E'              	lsrf	i1___fldiv@bexp,w
 15446  016D' 00BD'              	movwf	i1___fldiv@b+3
 15447  016E' 2800'              	goto	L20
 15448  016F'                    __end_ofi1___fldiv:
 15449                           
 15450                           	psect	text45
 15451  0000'                    __ptext45:	
 15452 ;; *************** function i1___fladd *****************
 15453 ;; Defined at:
 15454 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 15455 ;; Parameters:    Size  Location     Type
 15456 ;;  b               4    0[BANK0 ] unsigned char 
 15457 ;;  a               4    4[BANK0 ] unsigned char 
 15458 ;; Auto vars:     Size  Location     Type
 15459 ;;  grs             1   19[BANK0 ] unsigned char 
 15460 ;;  bexp            1   18[BANK0 ] unsigned char 
 15461 ;;  aexp            1   17[BANK0 ] unsigned char 
 15462 ;;  signs           1   16[BANK0 ] unsigned char 
 15463 ;; Return value:  Size  Location     Type
 15464 ;;                  4    0[BANK0 ] unsigned char 
 15465 ;; Registers used:
 15466 ;;		wreg, status,2, status,0
 15467 ;; Tracked objects:
 15468 ;;		On entry : 1F/0
 15469 ;;		On exit  : 1F/0
 15470 ;;		Unchanged: 0/0
 15471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15472 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15473 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15474 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15475 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15476 ;;Total ram usage:       20 bytes
 15477 ;; Hardware stack levels used: 1
 15478 ;; This function calls:
 15479 ;;		Nothing
 15480 ;; This function is called by:
 15481 ;;		_command_interpreter
 15482 ;;		_pid
 15483 ;;		___flsub
 15484 ;;		i1_converter_settings
 15485 ;; This function uses a non-reentrant model
 15486 ;;
 15487                           
 15488  0000'                    i1___fladd:	
 15489                           ;psect for function i1___fladd
 15490                           
 15491                           
 15492                           ;incstack = 0
 15493                           ; Regs used in i1___fladd: [wreg+status,2+status,0]
 15494  0000' 0803'              	movf	i1___fladd@b+3,w
 15495  0001' 3980               	andlw	128
 15496  0002' 0090'              	movwf	i1___fladd@signs
 15497  0003' 3503'              	lslf	i1___fladd@b+3,w
 15498  0004' 0092'              	movwf	i1___fladd@bexp
 15499  0005' 1B82'              	btfsc	i1___fladd@b+2,7
 15500  0006' 1412'              	bsf	i1___fladd@bexp,0
 15501  0007' 0812'              	movf	i1___fladd@bexp,w
 15502  0008' 1903               	btfsc	3,2
 15503  0009' 2800'              	goto	i1l5257
 15504  000A' 0A12'              	incf	i1___fladd@bexp,w
 15505  000B' 1D03               	btfss	3,2
 15506  000C' 2800'              	goto	i1l5253
 15507  000D' 3000               	movlw	0
 15508  000E' 0083'              	movwf	i1___fladd@b+3
 15509  000F' 3000               	movlw	0
 15510  0010' 0082'              	movwf	i1___fladd@b+2
 15511  0011' 3000               	movlw	0
 15512  0012' 0081'              	movwf	i1___fladd@b+1
 15513  0013' 3000               	movlw	0
 15514  0014' 0080'              	movwf	i1___fladd@b
 15515  0015'                    i1l5253:
 15516  0015' 1782'              	bsf	i1___fladd@b+2,7
 15517  0016' 0183'              	clrf	i1___fladd@b+3
 15518  0017' 2800'              	goto	i1l5259
 15519  0018'                    i1l5257:
 15520  0018' 3000               	movlw	0
 15521  0019' 0083'              	movwf	i1___fladd@b+3
 15522  001A' 3000               	movlw	0
 15523  001B' 0082'              	movwf	i1___fladd@b+2
 15524  001C' 3000               	movlw	0
 15525  001D' 0081'              	movwf	i1___fladd@b+1
 15526  001E' 3000               	movlw	0
 15527  001F' 0080'              	movwf	i1___fladd@b
 15528  0020'                    i1l5259:
 15529  0020' 0807'              	movf	i1___fladd@a+3,w
 15530  0021' 3980               	andlw	128
 15531  0022' 0091'              	movwf	i1___fladd@aexp
 15532  0023' 0811'              	movf	i1___fladd@aexp,w
 15533  0024' 0610'              	xorwf	i1___fladd@signs,w
 15534  0025' 1D03               	btfss	3,2
 15535  0026' 1710'              	bsf	i1___fladd@signs,6
 15536  0027' 3507'              	lslf	i1___fladd@a+3,w
 15537  0028' 0091'              	movwf	i1___fladd@aexp
 15538  0029' 1B86'              	btfsc	i1___fladd@a+2,7
 15539  002A' 1411'              	bsf	i1___fladd@aexp,0
 15540  002B' 0811'              	movf	i1___fladd@aexp,w
 15541  002C' 1903               	btfsc	3,2
 15542  002D' 2800'              	goto	i1l5281
 15543  002E' 0A11'              	incf	i1___fladd@aexp,w
 15544  002F' 1D03               	btfss	3,2
 15545  0030' 2800'              	goto	i1l5277
 15546  0031' 3000               	movlw	0
 15547  0032' 0087'              	movwf	i1___fladd@a+3
 15548  0033' 3000               	movlw	0
 15549  0034' 0086'              	movwf	i1___fladd@a+2
 15550  0035' 3000               	movlw	0
 15551  0036' 0085'              	movwf	i1___fladd@a+1
 15552  0037' 3000               	movlw	0
 15553  0038' 0084'              	movwf	i1___fladd@a
 15554  0039'                    i1l5277:
 15555  0039' 1786'              	bsf	i1___fladd@a+2,7
 15556  003A' 0187'              	clrf	i1___fladd@a+3
 15557  003B' 2800'              	goto	i1l1347
 15558  003C'                    i1l5281:
 15559  003C' 3000               	movlw	0
 15560  003D' 0087'              	movwf	i1___fladd@a+3
 15561  003E' 3000               	movlw	0
 15562  003F' 0086'              	movwf	i1___fladd@a+2
 15563  0040' 3000               	movlw	0
 15564  0041' 0085'              	movwf	i1___fladd@a+1
 15565  0042' 3000               	movlw	0
 15566  0043' 0084'              	movwf	i1___fladd@a
 15567  0044'                    i1l1347:
 15568  0044' 0812'              	movf	i1___fladd@bexp,w
 15569  0045' 0211'              	subwf	i1___fladd@aexp,w
 15570  0046' 1803               	skipnc
 15571  0047' 2800'              	goto	i1l5317
 15572  0048' 1F10'              	btfss	i1___fladd@signs,6
 15573  0049' 2800'              	goto	i1l5287
 15574  004A' 3080               	movlw	128
 15575  004B' 0088'              	movwf	??i1___fladd
 15576  004C' 0808'              	movf	??i1___fladd,w
 15577  004D' 0690'              	xorwf	i1___fladd@signs,f
 15578  004E'                    i1l5287:
 15579  004E' 0812'              	movf	i1___fladd@bexp,w
 15580  004F' 0093'              	movwf	i1___fladd@grs
 15581  0050' 0811'              	movf	i1___fladd@aexp,w
 15582  0051' 0092'              	movwf	i1___fladd@bexp
 15583  0052' 0813'              	movf	i1___fladd@grs,w
 15584  0053' 0091'              	movwf	i1___fladd@aexp
 15585  0054' 0800'              	movf	i1___fladd@b,w
 15586  0055' 0093'              	movwf	i1___fladd@grs
 15587  0056' 0804'              	movf	i1___fladd@a,w
 15588  0057' 0080'              	movwf	i1___fladd@b
 15589  0058' 0813'              	movf	i1___fladd@grs,w
 15590  0059' 0084'              	movwf	i1___fladd@a
 15591  005A' 0801'              	movf	i1___fladd@b+1,w
 15592  005B' 0093'              	movwf	i1___fladd@grs
 15593  005C' 0805'              	movf	i1___fladd@a+1,w
 15594  005D' 0081'              	movwf	i1___fladd@b+1
 15595  005E' 0813'              	movf	i1___fladd@grs,w
 15596  005F' 0085'              	movwf	i1___fladd@a+1
 15597  0060' 0802'              	movf	i1___fladd@b+2,w
 15598  0061' 0093'              	movwf	i1___fladd@grs
 15599  0062' 0806'              	movf	i1___fladd@a+2,w
 15600  0063' 0082'              	movwf	i1___fladd@b+2
 15601  0064' 0813'              	movf	i1___fladd@grs,w
 15602  0065' 0086'              	movwf	i1___fladd@a+2
 15603  0066' 0803'              	movf	i1___fladd@b+3,w
 15604  0067' 0093'              	movwf	i1___fladd@grs
 15605  0068' 0807'              	movf	i1___fladd@a+3,w
 15606  0069' 0083'              	movwf	i1___fladd@b+3
 15607  006A' 0813'              	movf	i1___fladd@grs,w
 15608  006B' 0087'              	movwf	i1___fladd@a+3
 15609  006C'                    i1l5317:
 15610  006C' 0193'              	clrf	i1___fladd@grs
 15611  006D' 0811'              	movf	i1___fladd@aexp,w
 15612  006E' 0088'              	movwf	??i1___fladd
 15613  006F' 0189'              	clrf	??i1___fladd+1
 15614  0070' 0809'              	movf	??i1___fladd+1,w
 15615  0071' 008B'              	movwf	??i1___fladd+3
 15616  0072' 0812'              	movf	i1___fladd@bexp,w
 15617  0073' 0208'              	subwf	??i1___fladd,w
 15618  0074' 008A'              	movwf	??i1___fladd+2
 15619  0075' 1C03               	skipc
 15620  0076' 038B'              	decf	??i1___fladd+3,f
 15621  0077' 080B'              	movf	??i1___fladd+3,w
 15622  0078' 3A80               	xorlw	128
 15623  0079' 008C'              	movwf	??i1___fladd+4
 15624  007A' 3080               	movlw	128
 15625  007B' 020C'              	subwf	??i1___fladd+4,w
 15626  007C' 1D03               	skipz
 15627  007D' 2800'              	goto	u512_25
 15628  007E' 301A               	movlw	26
 15629  007F' 020A'              	subwf	??i1___fladd+2,w
 15630  0080'                    u512_25:
 15631  0080' 1C03               	skipc
 15632  0081' 2800'              	goto	i1l5335
 15633  0082' 0020               	movlb	0	; select bank0
 15634  0083' 0803'              	movf	i1___fladd@b+3,w
 15635  0084' 0402'              	iorwf	i1___fladd@b+2,w
 15636  0085' 0401'              	iorwf	i1___fladd@b+1,w
 15637  0086' 0400'              	iorwf	i1___fladd@b,w
 15638  0087' 1903               	btfsc	3,2
 15639  0088' 2800'              	goto	u513_20
 15640  0089' 3001               	movlw	1
 15641  008A' 2800'              	goto	u514_20
 15642  008B'                    u513_20:
 15643  008B' 3000               	movlw	0
 15644  008C'                    u514_20:
 15645  008C' 0093'              	movwf	i1___fladd@grs
 15646  008D' 3000               	movlw	0
 15647  008E' 0083'              	movwf	i1___fladd@b+3
 15648  008F' 3000               	movlw	0
 15649  0090' 0082'              	movwf	i1___fladd@b+2
 15650  0091' 3000               	movlw	0
 15651  0092' 0081'              	movwf	i1___fladd@b+1
 15652  0093' 3000               	movlw	0
 15653  0094' 0080'              	movwf	i1___fladd@b
 15654  0095' 0811'              	movf	i1___fladd@aexp,w
 15655  0096' 0092'              	movwf	i1___fladd@bexp
 15656  0097' 2800'              	goto	i1l1351
 15657  0098'                    i1l1353:
 15658  0098' 1C13'              	btfss	i1___fladd@grs,0
 15659  0099' 2800'              	goto	i1l5325
 15660  009A' 3613'              	lsrf	i1___fladd@grs,w
 15661  009B' 3801               	iorlw	1
 15662  009C' 0093'              	movwf	i1___fladd@grs
 15663  009D' 2800'              	goto	i1l5327
 15664  009E'                    i1l5325:
 15665  009E' 1003               	clrc
 15666  009F' 0C93'              	rrf	i1___fladd@grs,f
 15667  00A0'                    i1l5327:
 15668  00A0' 1800'              	btfsc	i1___fladd@b,0
 15669  00A1' 1793'              	bsf	i1___fladd@grs,7
 15670  00A2' 3001               	movlw	1
 15671  00A3' 0088'              	movwf	??i1___fladd
 15672  00A4'                    u517_25:
 15673  00A4' 3783'              	asrf	i1___fladd@b+3,f
 15674  00A5' 0C82'              	rrf	i1___fladd@b+2,f
 15675  00A6' 0C81'              	rrf	i1___fladd@b+1,f
 15676  00A7' 0C80'              	rrf	i1___fladd@b,f
 15677  00A8' 0B80'              	decfsz	??i1___fladd& (0+127),f
 15678  00A9' 2800'              	goto	u517_25
 15679  00AA' 3001               	movlw	1
 15680  00AB' 0088'              	movwf	??i1___fladd
 15681  00AC' 0808'              	movf	??i1___fladd,w
 15682  00AD' 0792'              	addwf	i1___fladd@bexp,f
 15683  00AE'                    i1l5335:
 15684  00AE' 0020               	movlb	0	; select bank0
 15685  00AF' 0811'              	movf	i1___fladd@aexp,w
 15686  00B0' 0212'              	subwf	i1___fladd@bexp,w
 15687  00B1' 1C03               	skipc
 15688  00B2' 2800'              	goto	i1l1353
 15689  00B3'                    i1l1351:
 15690  00B3' 1B10'              	btfsc	i1___fladd@signs,6
 15691  00B4' 2800'              	goto	i1l5361
 15692  00B5' 0812'              	movf	i1___fladd@bexp,w
 15693  00B6' 1D03               	btfss	3,2
 15694  00B7' 2800'              	goto	i1l5343
 15695  00B8' 3000               	movlw	0
 15696  00B9' 0083'              	movwf	?i1___fladd+3
 15697  00BA' 3000               	movlw	0
 15698  00BB' 0082'              	movwf	?i1___fladd+2
 15699  00BC' 3000               	movlw	0
 15700  00BD' 0081'              	movwf	?i1___fladd+1
 15701  00BE' 3000               	movlw	0
 15702  00BF' 0080'              	movwf	?i1___fladd
 15703  00C0' 0008               	return
 15704  00C1'                    i1l5343:
 15705  00C1' 0804'              	movf	i1___fladd@a,w
 15706  00C2' 0780'              	addwf	i1___fladd@b,f
 15707  00C3' 0805'              	movf	i1___fladd@a+1,w
 15708  00C4' 3D81'              	addwfc	i1___fladd@b+1,f
 15709  00C5' 0806'              	movf	i1___fladd@a+2,w
 15710  00C6' 3D82'              	addwfc	i1___fladd@b+2,f
 15711  00C7' 0807'              	movf	i1___fladd@a+3,w
 15712  00C8' 3D83'              	addwfc	i1___fladd@b+3,f
 15713  00C9' 1C03'              	btfss	i1___fladd@b+3,0
 15714  00CA' 2800'              	goto	i1l5395
 15715  00CB' 1C13'              	btfss	i1___fladd@grs,0
 15716  00CC' 2800'              	goto	i1l5351
 15717  00CD' 3613'              	lsrf	i1___fladd@grs,w
 15718  00CE' 3801               	iorlw	1
 15719  00CF' 0093'              	movwf	i1___fladd@grs
 15720  00D0' 2800'              	goto	i1l5353
 15721  00D1'                    i1l5351:
 15722  00D1' 1003               	clrc
 15723  00D2' 0C93'              	rrf	i1___fladd@grs,f
 15724  00D3'                    i1l5353:
 15725  00D3' 1800'              	btfsc	i1___fladd@b,0
 15726  00D4' 1793'              	bsf	i1___fladd@grs,7
 15727  00D5' 3001               	movlw	1
 15728  00D6' 0088'              	movwf	??i1___fladd
 15729  00D7'                    u524_25:
 15730  00D7' 3783'              	asrf	i1___fladd@b+3,f
 15731  00D8' 0C82'              	rrf	i1___fladd@b+2,f
 15732  00D9' 0C81'              	rrf	i1___fladd@b+1,f
 15733  00DA' 0C80'              	rrf	i1___fladd@b,f
 15734  00DB' 0B80'              	decfsz	??i1___fladd& (0+127),f
 15735  00DC' 2800'              	goto	u524_25
 15736  00DD' 3001               	movlw	1
 15737  00DE' 0088'              	movwf	??i1___fladd
 15738  00DF' 0808'              	movf	??i1___fladd,w
 15739  00E0' 0792'              	addwf	i1___fladd@bexp,f
 15740  00E1' 2800'              	goto	i1l5395
 15741  00E2'                    i1l5361:
 15742  00E2' 0803'              	movf	i1___fladd@b+3,w
 15743  00E3' 3A80               	xorlw	128
 15744  00E4' 0088'              	movwf	??i1___fladd
 15745  00E5' 0807'              	movf	i1___fladd@a+3,w
 15746  00E6' 3A80               	xorlw	128
 15747  00E7' 0208'              	subwf	??i1___fladd,w
 15748  00E8' 1D03               	skipz
 15749  00E9' 2800'              	goto	u525_23
 15750  00EA' 0806'              	movf	i1___fladd@a+2,w
 15751  00EB' 0202'              	subwf	i1___fladd@b+2,w
 15752  00EC' 1D03               	skipz
 15753  00ED' 2800'              	goto	u525_23
 15754  00EE' 0805'              	movf	i1___fladd@a+1,w
 15755  00EF' 0201'              	subwf	i1___fladd@b+1,w
 15756  00F0' 1D03               	skipz
 15757  00F1' 2800'              	goto	u525_23
 15758  00F2' 0804'              	movf	i1___fladd@a,w
 15759  00F3' 0200'              	subwf	i1___fladd@b,w
 15760  00F4'                    u525_23:
 15761  00F4' 1803               	skipnc
 15762  00F5' 2800'              	goto	i1l5371
 15763  00F6' 30FF               	movlw	255
 15764  00F7' 0088'              	movwf	??i1___fladd
 15765  00F8' 30FF               	movlw	255
 15766  00F9' 0089'              	movwf	??i1___fladd+1
 15767  00FA' 30FF               	movlw	255
 15768  00FB' 008A'              	movwf	??i1___fladd+2
 15769  00FC' 30FF               	movlw	255
 15770  00FD' 008B'              	movwf	??i1___fladd+3
 15771  00FE' 0800'              	movf	i1___fladd@b,w
 15772  00FF' 0204'              	subwf	i1___fladd@a,w
 15773  0100' 008C'              	movwf	??i1___fladd+4
 15774  0101' 0801'              	movf	i1___fladd@b+1,w
 15775  0102' 3B05'              	subwfb	i1___fladd@a+1,w
 15776  0103' 008D'              	movwf	??i1___fladd+5
 15777  0104' 0802'              	movf	i1___fladd@b+2,w
 15778  0105' 3B06'              	subwfb	i1___fladd@a+2,w
 15779  0106' 008E'              	movwf	??i1___fladd+6
 15780  0107' 0803'              	movf	i1___fladd@b+3,w
 15781  0108' 3B07'              	subwfb	i1___fladd@a+3,w
 15782  0109' 008F'              	movwf	??i1___fladd+7
 15783  010A' 080C'              	movf	??i1___fladd+4,w
 15784  010B' 0788'              	addwf	??i1___fladd,f
 15785  010C' 080D'              	movf	??i1___fladd+5,w
 15786  010D' 3D89'              	addwfc	??i1___fladd+1,f
 15787  010E' 080E'              	movf	??i1___fladd+6,w
 15788  010F' 3D8A'              	addwfc	??i1___fladd+2,f
 15789  0110' 080F'              	movf	??i1___fladd+7,w
 15790  0111' 3D8B'              	addwfc	??i1___fladd+3,f
 15791  0112' 080B'              	movf	??i1___fladd+3,w
 15792  0113' 0083'              	movwf	i1___fladd@b+3
 15793  0114' 080A'              	movf	??i1___fladd+2,w
 15794  0115' 0082'              	movwf	i1___fladd@b+2
 15795  0116' 0809'              	movf	??i1___fladd+1,w
 15796  0117' 0081'              	movwf	i1___fladd@b+1
 15797  0118' 0808'              	movf	??i1___fladd,w
 15798  0119' 0080'              	movwf	i1___fladd@b
 15799  011A' 3080               	movlw	128
 15800  011B' 0088'              	movwf	??i1___fladd
 15801  011C' 0808'              	movf	??i1___fladd,w
 15802  011D' 0690'              	xorwf	i1___fladd@signs,f
 15803  011E' 0993'              	comf	i1___fladd@grs,f
 15804  011F' 0A93'              	incf	i1___fladd@grs,f
 15805  0120' 0813'              	movf	i1___fladd@grs,w
 15806  0121' 1D03               	btfss	3,2
 15807  0122' 2800'              	goto	i1l1368
 15808  0123' 3001               	movlw	1
 15809  0124' 0780'              	addwf	i1___fladd@b,f
 15810  0125' 3000               	movlw	0
 15811  0126' 3D81'              	addwfc	i1___fladd@b+1,f
 15812  0127' 3000               	movlw	0
 15813  0128' 3D82'              	addwfc	i1___fladd@b+2,f
 15814  0129' 3000               	movlw	0
 15815  012A' 3D83'              	addwfc	i1___fladd@b+3,f
 15816  012B' 2800'              	goto	i1l1368
 15817  012C'                    i1l5371:
 15818  012C' 0804'              	movf	i1___fladd@a,w
 15819  012D' 0280'              	subwf	i1___fladd@b,f
 15820  012E' 0805'              	movf	i1___fladd@a+1,w
 15821  012F' 3B81'              	subwfb	i1___fladd@b+1,f
 15822  0130' 0806'              	movf	i1___fladd@a+2,w
 15823  0131' 3B82'              	subwfb	i1___fladd@b+2,f
 15824  0132' 0807'              	movf	i1___fladd@a+3,w
 15825  0133' 3B83'              	subwfb	i1___fladd@b+3,f
 15826  0134'                    i1l1368:
 15827  0134' 0803'              	movf	i1___fladd@b+3,w
 15828  0135' 0402'              	iorwf	i1___fladd@b+2,w
 15829  0136' 0401'              	iorwf	i1___fladd@b+1,w
 15830  0137' 0400'              	iorwf	i1___fladd@b,w
 15831  0138' 1D03               	skipz
 15832  0139' 2800'              	goto	i1l5393
 15833  013A' 0813'              	movf	i1___fladd@grs,w
 15834  013B' 1D03               	btfss	3,2
 15835  013C' 2800'              	goto	i1l5393
 15836  013D' 3000               	movlw	0
 15837  013E' 0083'              	movwf	?i1___fladd+3
 15838  013F' 3000               	movlw	0
 15839  0140' 0082'              	movwf	?i1___fladd+2
 15840  0141' 3000               	movlw	0
 15841  0142' 0081'              	movwf	?i1___fladd+1
 15842  0143' 3000               	movlw	0
 15843  0144' 0080'              	movwf	?i1___fladd
 15844  0145' 0008               	return
 15845  0146'                    i1l5379:
 15846  0146' 3001               	movlw	1
 15847  0147'                    u529_25:
 15848  0147' 3580'              	lslf	i1___fladd@b,f
 15849  0148' 0D81'              	rlf	i1___fladd@b+1,f
 15850  0149' 0D82'              	rlf	i1___fladd@b+2,f
 15851  014A' 0D83'              	rlf	i1___fladd@b+3,f
 15852  014B' 0B89               	decfsz	9,f
 15853  014C' 2800'              	goto	u529_25
 15854  014D' 1B93'              	btfsc	i1___fladd@grs,7
 15855  014E' 1400'              	bsf	i1___fladd@b,0
 15856  014F' 1C13'              	btfss	i1___fladd@grs,0
 15857  0150' 2800'              	goto	i1l5387
 15858  0151' 1403               	setc
 15859  0152' 2800'              	goto	L21
 15860  0153'                    i1l5387:
 15861  0153' 1003               	clrc
 15862  0154'                    L21:
 15863  0154' 0D93'              	rlf	i1___fladd@grs,f
 15864  0155' 0812'              	movf	i1___fladd@bexp,w
 15865  0156' 1903               	btfsc	3,2
 15866  0157' 2800'              	goto	i1l5393
 15867  0158' 3001               	movlw	1
 15868  0159' 0292'              	subwf	i1___fladd@bexp,f
 15869  015A'                    i1l5393:
 15870  015A' 1F82'              	btfss	i1___fladd@b+2,7
 15871  015B' 2800'              	goto	i1l5379
 15872  015C'                    i1l5395:
 15873  015C' 0191'              	clrf	i1___fladd@aexp
 15874  015D' 1F93'              	btfss	i1___fladd@grs,7
 15875  015E' 2800'              	goto	i1l5405
 15876  015F' 0813'              	movf	i1___fladd@grs,w
 15877  0160' 397F               	andlw	127
 15878  0161' 1903               	btfsc	3,2
 15879  0162' 1800'              	btfsc	i1___fladd@b,0
 15880  0163' 2800'              	goto	i1l5401
 15881  0164' 2800'              	goto	i1l5405
 15882  0165'                    i1l5401:
 15883  0165' 0191'              	clrf	i1___fladd@aexp
 15884  0166' 0A91'              	incf	i1___fladd@aexp,f
 15885  0167'                    i1l5405:
 15886  0167' 0811'              	movf	i1___fladd@aexp,w
 15887  0168' 1903               	btfsc	3,2
 15888  0169' 2800'              	goto	i1l1381
 15889  016A' 3001               	movlw	1
 15890  016B' 0780'              	addwf	i1___fladd@b,f
 15891  016C' 3000               	movlw	0
 15892  016D' 3D81'              	addwfc	i1___fladd@b+1,f
 15893  016E' 3000               	movlw	0
 15894  016F' 3D82'              	addwfc	i1___fladd@b+2,f
 15895  0170' 3000               	movlw	0
 15896  0171' 3D83'              	addwfc	i1___fladd@b+3,f
 15897  0172' 1C03'              	btfss	i1___fladd@b+3,0
 15898  0173' 2800'              	goto	i1l1381
 15899  0174' 0800'              	movf	i1___fladd@b,w
 15900  0175' 0088'              	movwf	??i1___fladd
 15901  0176' 0801'              	movf	i1___fladd@b+1,w
 15902  0177' 0089'              	movwf	??i1___fladd+1
 15903  0178' 0802'              	movf	i1___fladd@b+2,w
 15904  0179' 008A'              	movwf	??i1___fladd+2
 15905  017A' 0803'              	movf	i1___fladd@b+3,w
 15906  017B' 008B'              	movwf	??i1___fladd+3
 15907  017C' 3001               	movlw	1
 15908  017D' 008C'              	movwf	??i1___fladd+4
 15909  017E'                    u539_25:
 15910  017E' 378B'              	asrf	??i1___fladd+3,f
 15911  017F' 0C8A'              	rrf	??i1___fladd+2,f
 15912  0180' 0C89'              	rrf	??i1___fladd+1,f
 15913  0181' 0C88'              	rrf	??i1___fladd,f
 15914  0182' 0B8C'              	decfsz	??i1___fladd+4,f
 15915  0183' 2800'              	goto	u539_25
 15916  0184' 080B'              	movf	??i1___fladd+3,w
 15917  0185' 0083'              	movwf	i1___fladd@b+3
 15918  0186' 080A'              	movf	??i1___fladd+2,w
 15919  0187' 0082'              	movwf	i1___fladd@b+2
 15920  0188' 0809'              	movf	??i1___fladd+1,w
 15921  0189' 0081'              	movwf	i1___fladd@b+1
 15922  018A' 0808'              	movf	??i1___fladd,w
 15923  018B' 0080'              	movwf	i1___fladd@b
 15924  018C' 0A12'              	incf	i1___fladd@bexp,w
 15925  018D' 1903               	btfsc	3,2
 15926  018E' 2800'              	goto	i1l1381
 15927  018F' 3001               	movlw	1
 15928  0190' 0088'              	movwf	??i1___fladd
 15929  0191' 0808'              	movf	??i1___fladd,w
 15930  0192' 0792'              	addwf	i1___fladd@bexp,f
 15931  0193'                    i1l1381:
 15932  0193' 0A12'              	incf	i1___fladd@bexp,w
 15933  0194' 1D03               	btfss	3,2
 15934  0195' 0812'              	movf	i1___fladd@bexp,w
 15935  0196' 1D03               	btfss	3,2
 15936  0197' 2800'              	goto	i1l5423
 15937  0198' 3000               	movlw	0
 15938  0199' 0083'              	movwf	i1___fladd@b+3
 15939  019A' 3000               	movlw	0
 15940  019B' 0082'              	movwf	i1___fladd@b+2
 15941  019C' 3000               	movlw	0
 15942  019D' 0081'              	movwf	i1___fladd@b+1
 15943  019E' 3000               	movlw	0
 15944  019F' 0080'              	movwf	i1___fladd@b
 15945  01A0' 0812'              	movf	i1___fladd@bexp,w
 15946  01A1' 1903               	btfsc	3,2
 15947  01A2' 0190'              	clrf	i1___fladd@signs
 15948  01A3'                    i1l5423:
 15949  01A3' 1C12'              	btfss	i1___fladd@bexp,0
 15950  01A4' 2800'              	goto	i1l5427
 15951  01A5' 1782'              	bsf	i1___fladd@b+2,7
 15952  01A6' 2800'              	goto	i1l1389
 15953  01A7'                    i1l5427:
 15954  01A7' 307F               	movlw	127
 15955  01A8' 0088'              	movwf	??i1___fladd
 15956  01A9' 0808'              	movf	??i1___fladd,w
 15957  01AA' 0582'              	andwf	i1___fladd@b+2,f
 15958  01AB'                    i1l1389:
 15959  01AB' 3612'              	lsrf	i1___fladd@bexp,w
 15960  01AC' 0083'              	movwf	i1___fladd@b+3
 15961  01AD' 1F90'              	btfss	i1___fladd@signs,7
 15962  01AE' 0008               	return
 15963  01AF' 1783'              	bsf	i1___fladd@b+3,7
 15964  01B0' 0008               	return
 15965  01B1'                    __end_ofi1___fladd:
 15966                           
 15967                           	psect	text46
 15968  0000'                    __ptext46:	
 15969 ;; *************** function i1_Cell_ON *****************
 15970 ;; Defined at:
 15971 ;;		line 508 in file "charger_discharger.c"
 15972 ;; Parameters:    Size  Location     Type
 15973 ;;		None
 15974 ;; Auto vars:     Size  Location     Type
 15975 ;;		None
 15976 ;; Return value:  Size  Location     Type
 15977 ;;                  1    wreg      void 
 15978 ;; Registers used:
 15979 ;;		wreg, status,2, status,0
 15980 ;; Tracked objects:
 15981 ;;		On entry : 1F/10
 15982 ;;		On exit  : 0/0
 15983 ;;		Unchanged: 0/0
 15984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15987 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15988 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15989 ;;Total ram usage:        1 bytes
 15990 ;; Hardware stack levels used: 1
 15991 ;; This function calls:
 15992 ;;		Nothing
 15993 ;; This function is called by:
 15994 ;;		i1_converter_settings
 15995 ;; This function uses a non-reentrant model
 15996 ;;
 15997                           
 15998  0000'                    i1_Cell_ON:	
 15999                           ;psect for function i1_Cell_ON
 16000                           
 16001                           
 16002                           ;charger_discharger.c: 510:     if (cell_count == 1)
 16003                           
 16004                           ;incstack = 0
 16005                           ; Regs used in i1_Cell_ON: [wreg+status,2+status,0]
 16006  0000' 0023               	movlb	3	; select bank3
 16007  0001' 0300'              	decf	_cell_count^(0+384),w
 16008  0002' 1D03               	btfss	3,2
 16009  0003' 2800'              	goto	i1l5553
 16010                           
 16011                           ;charger_discharger.c: 511:     {;charger_discharger.c: 512:         { RB2 = 1; };
 16012  0004' 0020               	movlb	0	; select bank0
 16013  0005' 150D               	bsf	13,2	;volatile
 16014                           
 16015                           ;charger_discharger.c: 513:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16016  0006' 3068               	movlw	104
 16017  0007' 0080'              	movwf	??i1_Cell_ON
 16018  0008' 30E4               	movlw	228
 16019  0009'                    u809_27:
 16020  0009' 0B89               	decfsz	9,f
 16021  000A' 2800'              	goto	u809_27
 16022  000B' 0B80'              	decfsz	??i1_Cell_ON,f
 16023  000C' 2800'              	goto	u809_27
 16024  000D' 3200               	nop2
 16025                           
 16026                           ;charger_discharger.c: 514:         { RB3 = 0; };
 16027  000E' 0020               	movlb	0	; select bank0
 16028  000F' 118D               	bcf	13,3	;volatile
 16029                           
 16030                           ;charger_discharger.c: 515:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16031  0010' 3068               	movlw	104
 16032  0011' 0080'              	movwf	??i1_Cell_ON
 16033  0012' 30E4               	movlw	228
 16034  0013'                    u810_27:
 16035  0013' 0B89               	decfsz	9,f
 16036  0014' 2800'              	goto	u810_27
 16037  0015' 0B80'              	decfsz	??i1_Cell_ON,f
 16038  0016' 2800'              	goto	u810_27
 16039  0017' 3200               	nop2
 16040  0018' 2800'              	goto	i1l5549
 16041  0019'                    i1l5555:
 16042                           
 16043                           ;charger_discharger.c: 521:     {;charger_discharger.c: 522:         { RB2 = 0; };
 16044  0019' 0020               	movlb	0	; select bank0
 16045  001A' 110D               	bcf	13,2	;volatile
 16046                           
 16047                           ;charger_discharger.c: 523:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16048  001B' 3068               	movlw	104
 16049  001C' 0080'              	movwf	??i1_Cell_ON
 16050  001D' 30E4               	movlw	228
 16051  001E'                    u813_27:
 16052  001E' 0B89               	decfsz	9,f
 16053  001F' 2800'              	goto	u813_27
 16054  0020' 0B80'              	decfsz	??i1_Cell_ON,f
 16055  0021' 2800'              	goto	u813_27
 16056  0022' 3200               	nop2
 16057                           
 16058                           ;charger_discharger.c: 524:         { RB3 = 1; };
 16059  0023' 0020               	movlb	0	; select bank0
 16060  0024' 158D               	bsf	13,3	;volatile
 16061                           
 16062                           ;charger_discharger.c: 525:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16063  0025' 3068               	movlw	104
 16064  0026' 0080'              	movwf	??i1_Cell_ON
 16065  0027' 30E4               	movlw	228
 16066  0028'                    u814_27:
 16067  0028' 0B89               	decfsz	9,f
 16068  0029' 2800'              	goto	u814_27
 16069  002A' 0B80'              	decfsz	??i1_Cell_ON,f
 16070  002B' 2800'              	goto	u814_27
 16071  002C' 3200               	nop2
 16072  002D'                    i1l5549:
 16073                           
 16074                           ;charger_discharger.c: 516:         { RB4 = 0; };
 16075  002D' 0020               	movlb	0	; select bank0
 16076  002E' 120D               	bcf	13,4	;volatile
 16077                           
 16078                           ;charger_discharger.c: 517:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16079  002F' 3068               	movlw	104
 16080  0030' 0080'              	movwf	??i1_Cell_ON
 16081  0031' 30E4               	movlw	228
 16082  0032'                    u811_27:
 16083  0032' 0B89               	decfsz	9,f
 16084  0033' 2800'              	goto	u811_27
 16085  0034' 0B80'              	decfsz	??i1_Cell_ON,f
 16086  0035' 2800'              	goto	u811_27
 16087  0036' 3200               	nop2
 16088                           
 16089                           ;charger_discharger.c: 518:         { RB5 = 0; };
 16090  0037' 0020               	movlb	0	; select bank0
 16091  0038' 128D               	bcf	13,5	;volatile
 16092                           
 16093                           ;charger_discharger.c: 519:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16094  0039' 3068               	movlw	104
 16095  003A' 0080'              	movwf	??i1_Cell_ON
 16096  003B' 30E4               	movlw	228
 16097  003C'                    u812_27:
 16098  003C' 0B89               	decfsz	9,f
 16099  003D' 2800'              	goto	u812_27
 16100  003E' 0B80'              	decfsz	??i1_Cell_ON,f
 16101  003F' 2800'              	goto	u812_27
 16102  0040' 3200               	nop2
 16103                           
 16104                           ;charger_discharger.c: 520:     }else if (cell_count == 2)
 16105  0041' 0008               	return
 16106  0042'                    i1l5553:
 16107  0042' 3002               	movlw	2
 16108  0043' 0600'              	xorwf	_cell_count^(0+384),w
 16109  0044' 1903               	btfsc	3,2
 16110  0045' 2800'              	goto	i1l5555
 16111  0046' 3003               	movlw	3
 16112  0047' 0600'              	xorwf	_cell_count^(0+384),w
 16113  0048' 1D03               	btfss	3,2
 16114  0049' 2800'              	goto	i1l5577
 16115                           
 16116                           ;charger_discharger.c: 531:     {;charger_discharger.c: 532:         { RB2 = 0; };
 16117  004A' 0020               	movlb	0	; select bank0
 16118  004B' 110D               	bcf	13,2	;volatile
 16119                           
 16120                           ;charger_discharger.c: 533:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16121  004C' 3068               	movlw	104
 16122  004D' 0080'              	movwf	??i1_Cell_ON
 16123  004E' 30E4               	movlw	228
 16124  004F'                    u815_27:
 16125  004F' 0B89               	decfsz	9,f
 16126  0050' 2800'              	goto	u815_27
 16127  0051' 0B80'              	decfsz	??i1_Cell_ON,f
 16128  0052' 2800'              	goto	u815_27
 16129  0053' 3200               	nop2
 16130                           
 16131                           ;charger_discharger.c: 534:         { RB3 = 0; };
 16132  0054' 0020               	movlb	0	; select bank0
 16133  0055' 118D               	bcf	13,3	;volatile
 16134                           
 16135                           ;charger_discharger.c: 535:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16136  0056' 3068               	movlw	104
 16137  0057' 0080'              	movwf	??i1_Cell_ON
 16138  0058' 30E4               	movlw	228
 16139  0059'                    u816_27:
 16140  0059' 0B89               	decfsz	9,f
 16141  005A' 2800'              	goto	u816_27
 16142  005B' 0B80'              	decfsz	??i1_Cell_ON,f
 16143  005C' 2800'              	goto	u816_27
 16144  005D' 3200               	nop2
 16145                           
 16146                           ;charger_discharger.c: 536:         { RB4 = 1; };
 16147  005E' 0020               	movlb	0	; select bank0
 16148  005F' 160D               	bsf	13,4	;volatile
 16149                           
 16150                           ;charger_discharger.c: 537:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16151  0060' 3068               	movlw	104
 16152  0061' 0080'              	movwf	??i1_Cell_ON
 16153  0062' 30E4               	movlw	228
 16154  0063'                    u817_27:
 16155  0063' 0B89               	decfsz	9,f
 16156  0064' 2800'              	goto	u817_27
 16157  0065' 0B80'              	decfsz	??i1_Cell_ON,f
 16158  0066' 2800'              	goto	u817_27
 16159  0067' 3200               	nop2
 16160                           
 16161                           ;charger_discharger.c: 538:         { RB5 = 0; };
 16162  0068' 0020               	movlb	0	; select bank0
 16163  0069' 128D               	bcf	13,5	;volatile
 16164                           
 16165                           ;charger_discharger.c: 539:     }else if (cell_count == 4)
 16166  006A' 0008               	return
 16167  006B'                    i1l5577:
 16168  006B' 3004               	movlw	4
 16169  006C' 0600'              	xorwf	_cell_count^(0+384),w
 16170  006D' 1D03               	btfss	3,2
 16171  006E' 0008               	return
 16172                           
 16173                           ;charger_discharger.c: 540:     {;charger_discharger.c: 541:         { RB2 = 0; };
 16174  006F' 0020               	movlb	0	; select bank0
 16175  0070' 110D               	bcf	13,2	;volatile
 16176                           
 16177                           ;charger_discharger.c: 542:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16178  0071' 3068               	movlw	104
 16179  0072' 0080'              	movwf	??i1_Cell_ON
 16180  0073' 30E4               	movlw	228
 16181  0074'                    u818_27:
 16182  0074' 0B89               	decfsz	9,f
 16183  0075' 2800'              	goto	u818_27
 16184  0076' 0B80'              	decfsz	??i1_Cell_ON,f
 16185  0077' 2800'              	goto	u818_27
 16186  0078' 3200               	nop2
 16187                           
 16188                           ;charger_discharger.c: 543:         { RB3 = 0; };
 16189  0079' 0020               	movlb	0	; select bank0
 16190  007A' 118D               	bcf	13,3	;volatile
 16191                           
 16192                           ;charger_discharger.c: 544:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16193  007B' 3068               	movlw	104
 16194  007C' 0080'              	movwf	??i1_Cell_ON
 16195  007D' 30E4               	movlw	228
 16196  007E'                    u819_27:
 16197  007E' 0B89               	decfsz	9,f
 16198  007F' 2800'              	goto	u819_27
 16199  0080' 0B80'              	decfsz	??i1_Cell_ON,f
 16200  0081' 2800'              	goto	u819_27
 16201  0082' 3200               	nop2
 16202                           
 16203                           ;charger_discharger.c: 545:         { RB4 = 0; };
 16204  0083' 0020               	movlb	0	; select bank0
 16205  0084' 120D               	bcf	13,4	;volatile
 16206                           
 16207                           ;charger_discharger.c: 546:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16208  0085' 3068               	movlw	104
 16209  0086' 0080'              	movwf	??i1_Cell_ON
 16210  0087' 30E4               	movlw	228
 16211  0088'                    u820_27:
 16212  0088' 0B89               	decfsz	9,f
 16213  0089' 2800'              	goto	u820_27
 16214  008A' 0B80'              	decfsz	??i1_Cell_ON,f
 16215  008B' 2800'              	goto	u820_27
 16216  008C' 3200               	nop2
 16217                           
 16218                           ;charger_discharger.c: 547:         { RB5 = 1; };
 16219  008D' 0020               	movlb	0	; select bank0
 16220  008E' 168D               	bsf	13,5	;volatile
 16221                           
 16222                           ;charger_discharger.c: 548:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16223  008F' 3068               	movlw	104
 16224  0090' 0080'              	movwf	??i1_Cell_ON
 16225  0091' 30E4               	movlw	228
 16226  0092'                    u821_27:
 16227  0092' 0B89               	decfsz	9,f
 16228  0093' 2800'              	goto	u821_27
 16229  0094' 0B80'              	decfsz	??i1_Cell_ON,f
 16230  0095' 2800'              	goto	u821_27
 16231  0096' 3200               	nop2
 16232  0097' 0008               	return
 16233  0098'                    __end_ofi1_Cell_ON:
 16234                           
 16235                           	psect	text47
 16236  0000'                    __ptext47:	
 16237 ;; *************** function i1_UART_send_some_bytes *****************
 16238 ;; Defined at:
 16239 ;;		line 469 in file "charger_discharger.c"
 16240 ;; Parameters:    Size  Location     Type
 16241 ;;  length          1    wreg     unsigned char 
 16242 ;;  data            2    1[COMMON] PTR unsigned char 
 16243 ;;		 -> NULL(0), log_data(15), converter_configuration(14), test_configuration(17), 
 16244 ;;		 -> basic_configuration(17), command_interpreter@calc_checksum(2), 
 16245 ;; Auto vars:     Size  Location     Type
 16246 ;;  length          1    3[COMMON] unsigned char 
 16247 ;; Return value:  Size  Location     Type
 16248 ;;                  1    wreg      void 
 16249 ;; Registers used:
 16250 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16251 ;; Tracked objects:
 16252 ;;		On entry : 1F/1
 16253 ;;		On exit  : 1D/1
 16254 ;;		Unchanged: 0/0
 16255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16257 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16259 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16260 ;;Total ram usage:        3 bytes
 16261 ;; Hardware stack levels used: 1
 16262 ;; Hardware stack levels required when called: 1
 16263 ;; This function calls:
 16264 ;;		i1_UART_send_byte
 16265 ;; This function is called by:
 16266 ;;		_command_interpreter
 16267 ;; This function uses a non-reentrant model
 16268 ;;
 16269                           
 16270  0000'                    i1_UART_send_some_bytes:	
 16271                           ;psect for function i1_UART_send_some_bytes
 16272                           
 16273                           
 16274                           ;incstack = 0
 16275                           ; Regs used in i1_UART_send_some_bytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 16276                           ;i1UART_send_some_bytes@length stored from wreg
 16277  0000' 0083'              	movwf	i1UART_send_some_bytes@length
 16278  0001'                    i1l7273:	
 16279                           ;charger_discharger.c: 469: void UART_send_some_bytes(uint8_t length, uint8_t* data);cha
      +                          rger_discharger.c: 470: {;charger_discharger.c: 471:     while(length--)
 16280                           
 16281                           
 16282                           ;charger_discharger.c: 471:     while(length--)
 16283  0001' 3001               	movlw	1
 16284  0002' 0283'              	subwf	i1UART_send_some_bytes@length,f
 16285  0003' 0A03'              	incf	i1UART_send_some_bytes@length,w
 16286  0004' 1903               	btfsc	3,2
 16287  0005' 0008               	return
 16288                           
 16289                           ;charger_discharger.c: 472:     {;charger_discharger.c: 473:         UART_send_byte(*dat
      +                          a++);
 16290  0006' 0801'              	movf	i1UART_send_some_bytes@data,w
 16291  0007' 0086               	movwf	6
 16292  0008' 0802'              	movf	i1UART_send_some_bytes@data+1,w
 16293  0009' 0087               	movwf	7
 16294  000A' 0801               	movf	1,w
 16295  000B' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 16296  000E' 3001               	movlw	1
 16297  000F' 0781'              	addwf	i1UART_send_some_bytes@data,f
 16298  0010' 3000               	movlw	0
 16299  0011' 3D82'              	addwfc	i1UART_send_some_bytes@data+1,f
 16300  0012' 2800'              	goto	i1l7273
 16301  0013'                    __end_ofi1_UART_send_some_bytes:
 16302                           
 16303                           	psect	text48
 16304  0000'                    __ptext48:	
 16305 ;; *************** function _put_data_into_structure *****************
 16306 ;; Defined at:
 16307 ;;		line 488 in file "charger_discharger.c"
 16308 ;; Parameters:    Size  Location     Type
 16309 ;;  length          1    wreg     unsigned char 
 16310 ;;  data            1    0[COMMON] PTR unsigned char 
 16311 ;;		 -> command_interpreter@data(20), 
 16312 ;;  structure       1    1[COMMON] PTR unsigned char 
 16313 ;;		 -> NULL(0), converter_configuration(14), test_configuration(17), basic_configuration(17), 
 16314 ;; Auto vars:     Size  Location     Type
 16315 ;;  length          1    3[COMMON] unsigned char 
 16316 ;; Return value:  Size  Location     Type
 16317 ;;                  1    wreg      void 
 16318 ;; Registers used:
 16319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 16320 ;; Tracked objects:
 16321 ;;		On entry : 1F/1
 16322 ;;		On exit  : 1F/1
 16323 ;;		Unchanged: 1F/0
 16324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16325 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16327 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16328 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16329 ;;Total ram usage:        4 bytes
 16330 ;; Hardware stack levels used: 1
 16331 ;; This function calls:
 16332 ;;		Nothing
 16333 ;; This function is called by:
 16334 ;;		_command_interpreter
 16335 ;; This function uses a non-reentrant model
 16336 ;;
 16337                           
 16338  0000'                    _put_data_into_structure:	
 16339                           ;psect for function _put_data_into_structure
 16340                           
 16341                           
 16342                           ;incstack = 0
 16343                           ; Regs used in _put_data_into_structure: [wreg-fsr1h+status,2+status,0]
 16344                           ;put_data_into_structure@length stored from wreg
 16345  0000' 0083'              	movwf	put_data_into_structure@length
 16346  0001'                    i1l5975:	
 16347                           ;charger_discharger.c: 488: void put_data_into_structure(uint8_t length, uint8_t* data, 
      +                          uint8_t* structure);charger_discharger.c: 489: {;charger_discharger.c: 490:     while(le
      +                          ngth--)
 16348                           
 16349                           
 16350                           ;charger_discharger.c: 490:     while(length--)
 16351  0001' 3001               	movlw	1
 16352  0002' 0283'              	subwf	put_data_into_structure@length,f
 16353  0003' 0A03'              	incf	put_data_into_structure@length,w
 16354  0004' 1903               	btfsc	3,2
 16355  0005' 0008               	return
 16356                           
 16357                           ;charger_discharger.c: 491:     {;charger_discharger.c: 492:         *structure++ = *dat
      +                          a++;
 16358  0006' 0801'              	movf	put_data_into_structure@structure,w
 16359  0007' 0086               	movwf	6
 16360  0008' 3002               	movlw	2	; select bank4/5
 16361  0009' 0087               	movwf	7
 16362  000A' 0800'              	movf	put_data_into_structure@data,w
 16363  000B' 0084               	movwf	4
 16364  000C' 0185               	clrf	5
 16365  000D' 0800               	movf	0,w
 16366  000E' 0081               	movwf	1
 16367  000F' 3001               	movlw	1
 16368  0010' 0082'              	movwf	??_put_data_into_structure
 16369  0011' 0802'              	movf	??_put_data_into_structure,w
 16370  0012' 0780'              	addwf	put_data_into_structure@data,f
 16371  0013' 3001               	movlw	1
 16372  0014' 0082'              	movwf	??_put_data_into_structure
 16373  0015' 0802'              	movf	??_put_data_into_structure,w
 16374  0016' 0781'              	addwf	put_data_into_structure@structure,f
 16375  0017' 2800'              	goto	i1l5975
 16376  0018'                    __end_of_put_data_into_structure:
 16377                           
 16378                           	psect	text49
 16379  0000'                    __ptext49:	
 16380 ;; *************** function _calculate_checksum *****************
 16381 ;; Defined at:
 16382 ;;		line 477 in file "charger_discharger.c"
 16383 ;; Parameters:    Size  Location     Type
 16384 ;;  code            1    wreg     unsigned char 
 16385 ;;  length          1    0[COMMON] unsigned char 
 16386 ;;  data            2    1[COMMON] PTR unsigned char 
 16387 ;;		 -> NULL(0), converter_configuration(14), test_configuration(17), basic_configuration(17), 
 16388 ;;		 -> command_interpreter@data(20), 
 16389 ;; Auto vars:     Size  Location     Type
 16390 ;;  code            1    5[COMMON] unsigned char 
 16391 ;;  result          2    6[COMMON] unsigned short 
 16392 ;; Return value:  Size  Location     Type
 16393 ;;                  2    0[COMMON] unsigned short 
 16394 ;; Registers used:
 16395 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16396 ;; Tracked objects:
 16397 ;;		On entry : 1F/1
 16398 ;;		On exit  : 1F/1
 16399 ;;		Unchanged: 1F/0
 16400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16401 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16402 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16403 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16404 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16405 ;;Total ram usage:        8 bytes
 16406 ;; Hardware stack levels used: 1
 16407 ;; This function calls:
 16408 ;;		Nothing
 16409 ;; This function is called by:
 16410 ;;		_command_interpreter
 16411 ;; This function uses a non-reentrant model
 16412 ;;
 16413                           
 16414  0000'                    _calculate_checksum:	
 16415                           ;psect for function _calculate_checksum
 16416                           
 16417                           
 16418                           ;incstack = 0
 16419                           ; Regs used in _calculate_checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
 16420                           ;calculate_checksum@code stored from wreg
 16421  0000' 0085'              	movwf	calculate_checksum@code
 16422                           
 16423                           ;charger_discharger.c: 480:     result = (uint16_t)code + (uint16_t)length;
 16424  0001' 0805'              	movf	calculate_checksum@code,w
 16425  0002' 0700'              	addwf	calculate_checksum@length,w
 16426  0003' 0086'              	movwf	calculate_checksum@result
 16427  0004' 0187'              	clrf	calculate_checksum@result+1
 16428  0005' 0D87'              	rlf	calculate_checksum@result+1,f
 16429  0006'                    i1l7253:	
 16430                           ;charger_discharger.c: 481:     while(length--)
 16431                           
 16432                           
 16433                           ;charger_discharger.c: 481:     while(length--)
 16434  0006' 3001               	movlw	1
 16435  0007' 0280'              	subwf	calculate_checksum@length,f
 16436  0008' 0A00'              	incf	calculate_checksum@length,w
 16437  0009' 1903               	btfsc	3,2
 16438  000A' 2800'              	goto	i1l7255
 16439                           
 16440                           ;charger_discharger.c: 482:     {;charger_discharger.c: 483:         result += *data++;
 16441  000B' 0801'              	movf	calculate_checksum@data,w
 16442  000C' 0086               	movwf	6
 16443  000D' 0802'              	movf	calculate_checksum@data+1,w
 16444  000E' 0087               	movwf	7
 16445  000F' 0801               	movf	1,w
 16446  0010' 0083'              	movwf	??_calculate_checksum
 16447  0011' 0184'              	clrf	??_calculate_checksum+1
 16448  0012' 0803'              	movf	??_calculate_checksum,w
 16449  0013' 0786'              	addwf	calculate_checksum@result,f
 16450  0014' 0804'              	movf	??_calculate_checksum+1,w
 16451  0015' 3D87'              	addwfc	calculate_checksum@result+1,f
 16452  0016' 3001               	movlw	1
 16453  0017' 0781'              	addwf	calculate_checksum@data,f
 16454  0018' 3000               	movlw	0
 16455  0019' 3D82'              	addwfc	calculate_checksum@data+1,f
 16456  001A' 2800'              	goto	i1l7253
 16457  001B'                    i1l7255:
 16458                           
 16459                           ;charger_discharger.c: 485:     return (result);
 16460  001B' 0807'              	movf	calculate_checksum@result+1,w
 16461  001C' 0081'              	movwf	?_calculate_checksum+1
 16462  001D' 0806'              	movf	calculate_checksum@result,w
 16463  001E' 0080'              	movwf	?_calculate_checksum
 16464  001F' 0008               	return
 16465  0020'                    __end_of_calculate_checksum:
 16466                           
 16467                           	psect	text50
 16468  0000'                    __ptext50:	
 16469 ;; *************** function _UART_send_header *****************
 16470 ;; Defined at:
 16471 ;;		line 427 in file "charger_discharger.c"
 16472 ;; Parameters:    Size  Location     Type
 16473 ;;  start           1    wreg     unsigned char 
 16474 ;;  operation       1    1[COMMON] unsigned char 
 16475 ;;  code            1    2[COMMON] unsigned char 
 16476 ;; Auto vars:     Size  Location     Type
 16477 ;;  start           1    3[COMMON] unsigned char 
 16478 ;; Return value:  Size  Location     Type
 16479 ;;                  1    wreg      void 
 16480 ;; Registers used:
 16481 ;;		wreg, status,2, status,0, pclath, cstack
 16482 ;; Tracked objects:
 16483 ;;		On entry : 1F/1
 16484 ;;		On exit  : 1F/3
 16485 ;;		Unchanged: 0/0
 16486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16487 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16490 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16491 ;;Total ram usage:        3 bytes
 16492 ;; Hardware stack levels used: 1
 16493 ;; Hardware stack levels required when called: 1
 16494 ;; This function calls:
 16495 ;;		i1_UART_send_byte
 16496 ;; This function is called by:
 16497 ;;		_command_interpreter
 16498 ;; This function uses a non-reentrant model
 16499 ;;
 16500                           
 16501  0000'                    _UART_send_header:	
 16502                           ;psect for function _UART_send_header
 16503                           
 16504                           
 16505                           ;incstack = 0
 16506                           ; Regs used in _UART_send_header: [wreg+status,2+status,0+pclath+cstack]
 16507                           ;UART_send_header@start stored from wreg
 16508  0000' 0083'              	movwf	UART_send_header@start
 16509                           
 16510                           ;charger_discharger.c: 427: void UART_send_header(uint8_t start, uint8_t operation, uint
      +                          8_t code);charger_discharger.c: 428: {;charger_discharger.c: 429:     UART_send_byte(sta
      +                          rt);
 16511  0001' 0803'              	movf	UART_send_header@start,w
 16512  0002' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 16513                           
 16514                           ;charger_discharger.c: 430:     UART_send_byte(operation);
 16515  0005' 0801'              	movf	UART_send_header@operation,w
 16516  0006' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 16517                           
 16518                           ;charger_discharger.c: 431:     UART_send_byte(code);
 16519  0009' 0802'              	movf	UART_send_header@code,w
 16520  000A' 3180' 2000'        	fcall	i1_UART_send_byte
 16521  000C' 0008               	return
 16522  000D'                    __end_of_UART_send_header:
 16523                           
 16524                           	psect	text51
 16525  0000'                    __ptext51:	
 16526 ;; *************** function i1_UART_send_byte *****************
 16527 ;; Defined at:
 16528 ;;		line 461 in file "charger_discharger.c"
 16529 ;; Parameters:    Size  Location     Type
 16530 ;;  byte            1    wreg     unsigned char 
 16531 ;; Auto vars:     Size  Location     Type
 16532 ;;  byte            1    0[COMMON] unsigned char 
 16533 ;; Return value:  Size  Location     Type
 16534 ;;                  1    wreg      void 
 16535 ;; Registers used:
 16536 ;;		wreg
 16537 ;; Tracked objects:
 16538 ;;		On entry : 1D/1
 16539 ;;		On exit  : 1F/3
 16540 ;;		Unchanged: 0/0
 16541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16545 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16546 ;;Total ram usage:        1 bytes
 16547 ;; Hardware stack levels used: 1
 16548 ;; This function calls:
 16549 ;;		Nothing
 16550 ;; This function is called by:
 16551 ;;		_command_interpreter
 16552 ;;		_UART_send_header
 16553 ;;		_ISR
 16554 ;;		i1_UART_send_some_bytes
 16555 ;; This function uses a non-reentrant model
 16556 ;;
 16557                           
 16558  0000'                    i1_UART_send_byte:	
 16559                           ;psect for function i1_UART_send_byte
 16560                           
 16561                           
 16562                           ;incstack = 0
 16563                           ; Regs used in i1_UART_send_byte: [wreg]
 16564                           ;i1UART_send_byte@byte stored from wreg
 16565  0000' 0080'              	movwf	i1UART_send_byte@byte
 16566  0001'                    i1l447:	
 16567                           ;charger_discharger.c: 464:     {;charger_discharger.c: 465:     }
 16568                           
 16569                           
 16570                           ;charger_discharger.c: 463:     while(0 == TXIF)
 16571  0001' 0020               	movlb	0	; select bank0
 16572  0002' 1E11               	btfss	17,4	;volatile
 16573  0003' 2800'              	goto	i1l447
 16574                           
 16575                           ;charger_discharger.c: 466:     TX1REG = byte;
 16576  0004' 0800'              	movf	i1UART_send_byte@byte,w
 16577  0005' 0023               	movlb	3	; select bank3
 16578  0006' 009A               	movwf	26	;volatile
 16579  0007' 0008               	return
 16580  0008'                    __end_ofi1_UART_send_byte:
 16581                           
 16582                           	psect	text52
 16583  0000'                    __ptext52:	
 16584 ;; *************** function _UART_get_some_bytes *****************
 16585 ;; Defined at:
 16586 ;;		line 448 in file "charger_discharger.c"
 16587 ;; Parameters:    Size  Location     Type
 16588 ;;  length          1    wreg     unsigned char 
 16589 ;;  data            1    0[COMMON] PTR unsigned char 
 16590 ;;		 -> command_interpreter@data(20), 
 16591 ;; Auto vars:     Size  Location     Type
 16592 ;;  length          1    2[COMMON] unsigned char 
 16593 ;; Return value:  Size  Location     Type
 16594 ;;                  1    wreg      void 
 16595 ;; Registers used:
 16596 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16597 ;; Tracked objects:
 16598 ;;		On entry : 1F/1
 16599 ;;		On exit  : 1F/3
 16600 ;;		Unchanged: 0/0
 16601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16602 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16604 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16605 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16606 ;;Total ram usage:        3 bytes
 16607 ;; Hardware stack levels used: 1
 16608 ;; Hardware stack levels required when called: 1
 16609 ;; This function calls:
 16610 ;;		_UART_get_byte
 16611 ;; This function is called by:
 16612 ;;		_command_interpreter
 16613 ;; This function uses a non-reentrant model
 16614 ;;
 16615                           
 16616  0000'                    _UART_get_some_bytes:	
 16617                           ;psect for function _UART_get_some_bytes
 16618                           
 16619                           
 16620                           ;incstack = 0
 16621                           ; Regs used in _UART_get_some_bytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16622                           ;UART_get_some_bytes@length stored from wreg
 16623  0000' 0082'              	movwf	UART_get_some_bytes@length
 16624                           
 16625                           ;charger_discharger.c: 448: void UART_get_some_bytes(uint8_t length, uint8_t* data);char
      +                          ger_discharger.c: 449: {;charger_discharger.c: 450:     if(OERR)
 16626  0001' 0023               	movlb	3	; select bank3
 16627  0002' 1C9D               	btfss	29,1	;volatile
 16628  0003' 2800'              	goto	i1l5941
 16629                           
 16630                           ;charger_discharger.c: 451:     {;charger_discharger.c: 452:         CREN = 0;
 16631  0004' 121D               	bcf	29,4	;volatile
 16632                           
 16633                           ;charger_discharger.c: 453:         CREN = 1;
 16634  0005' 161D               	bsf	29,4	;volatile
 16635  0006'                    i1l5941:
 16636                           
 16637                           ;charger_discharger.c: 455:     while(length--)
 16638  0006' 3001               	movlw	1
 16639  0007' 0282'              	subwf	UART_get_some_bytes@length,f
 16640  0008' 0A02'              	incf	UART_get_some_bytes@length,w
 16641  0009' 1903               	btfsc	3,2
 16642  000A' 0008               	return
 16643                           
 16644                           ;charger_discharger.c: 456:     {;charger_discharger.c: 457:         *data++ = UART_get_
      +                          byte();
 16645  000B' 0800'              	movf	UART_get_some_bytes@data,w
 16646  000C' 0086               	movwf	6
 16647  000D' 0187               	clrf	7
 16648  000E' 3180' 2000' 3180'  	fcall	_UART_get_byte
 16649  0011' 0081               	movwf	1
 16650  0012' 3001               	movlw	1
 16651  0013' 0081'              	movwf	??_UART_get_some_bytes
 16652  0014' 0801'              	movf	??_UART_get_some_bytes,w
 16653  0015' 0780'              	addwf	UART_get_some_bytes@data,f
 16654  0016' 2800'              	goto	i1l5941
 16655  0017'                    __end_of_UART_get_some_bytes:
 16656                           
 16657                           	psect	text53
 16658  0000'                    __ptext53:	
 16659 ;; *************** function _UART_get_byte *****************
 16660 ;; Defined at:
 16661 ;;		line 437 in file "charger_discharger.c"
 16662 ;; Parameters:    Size  Location     Type
 16663 ;;		None
 16664 ;; Auto vars:     Size  Location     Type
 16665 ;;		None
 16666 ;; Return value:  Size  Location     Type
 16667 ;;                  1    wreg      unsigned char 
 16668 ;; Registers used:
 16669 ;;		wreg
 16670 ;; Tracked objects:
 16671 ;;		On entry : 1D/1
 16672 ;;		On exit  : 1F/3
 16673 ;;		Unchanged: 0/0
 16674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16679 ;;Total ram usage:        0 bytes
 16680 ;; Hardware stack levels used: 1
 16681 ;; This function calls:
 16682 ;;		Nothing
 16683 ;; This function is called by:
 16684 ;;		_command_interpreter
 16685 ;;		_UART_get_some_bytes
 16686 ;; This function uses a non-reentrant model
 16687 ;;
 16688                           
 16689  0000'                    _UART_get_byte:	
 16690                           ;psect for function _UART_get_byte
 16691                           
 16692                           
 16693                           ;charger_discharger.c: 439:     if(OERR)
 16694                           
 16695                           ;incstack = 0
 16696                           ; Regs used in _UART_get_byte: [wreg]
 16697  0000' 0023               	movlb	3	; select bank3
 16698  0001' 1C9D               	btfss	29,1	;volatile
 16699  0002' 2800'              	goto	i1l434
 16700                           
 16701                           ;charger_discharger.c: 440:     {;charger_discharger.c: 441:         CREN = 0;
 16702  0003' 121D               	bcf	29,4	;volatile
 16703                           
 16704                           ;charger_discharger.c: 442:         CREN = 1;
 16705  0004' 161D               	bsf	29,4	;volatile
 16706  0005'                    i1l434:
 16707  0005' 0020               	movlb	0	; select bank0
 16708  0006' 1E91               	btfss	17,5	;volatile
 16709  0007' 2800'              	goto	i1l434
 16710                           
 16711                           ;charger_discharger.c: 445:     return RC1REG;
 16712  0008' 0023               	movlb	3	; select bank3
 16713  0009' 0819               	movf	25,w	;volatile
 16714  000A' 0008               	return
 16715  000B'                    __end_of_UART_get_byte:
 16716                           
 16717                           	psect	text54
 16718  0000'                    __ptext54:	
 16719 ;; *************** function _calculate_avg *****************
 16720 ;; Defined at:
 16721 ;;		line 381 in file "charger_discharger.c"
 16722 ;; Parameters:    Size  Location     Type
 16723 ;;		None
 16724 ;; Auto vars:     Size  Location     Type
 16725 ;;		None
 16726 ;; Return value:  Size  Location     Type
 16727 ;;                  1    wreg      void 
 16728 ;; Registers used:
 16729 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 16730 ;; Tracked objects:
 16731 ;;		On entry : B/10
 16732 ;;		On exit  : 1D/1
 16733 ;;		Unchanged: 0/0
 16734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16737 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16738 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16739 ;;Total ram usage:        7 bytes
 16740 ;; Hardware stack levels used: 1
 16741 ;; This function calls:
 16742 ;;		Nothing
 16743 ;; This function is called by:
 16744 ;;		_ISR
 16745 ;; This function uses a non-reentrant model
 16746 ;;
 16747                           
 16748  0000'                    _calculate_avg:	
 16749                           ;psect for function _calculate_avg
 16750                           
 16751                           
 16752                           ;charger_discharger.c: 383:     switch(count)
 16753                           
 16754                           ;incstack = 0
 16755                           ; Regs used in _calculate_avg: [wreg-fsr0h+status,2+status,0]
 16756  0000' 2800'              	goto	i1l6907
 16757  0001'                    i1l6901:
 16758                           
 16759                           ;charger_discharger.c: 386:             iacum = (uint24_t) i;
 16760  0001' 0800'              	movf	_i^(0+128),w
 16761  0002' 0080'              	movwf	_iacum^(0+128)
 16762  0003' 0800'              	movf	(_i+1)^(0+128),w
 16763  0004' 0080'              	movwf	(_iacum+1)^(0+128)
 16764  0005' 0180'              	clrf	(_iacum+2)^(0+128)
 16765                           
 16766                           ;charger_discharger.c: 387:             vacum = (uint24_t) v;
 16767  0006' 0800'              	movf	_v^(0+128),w
 16768  0007' 0080'              	movwf	_vacum^(0+128)
 16769  0008' 0800'              	movf	(_v+1)^(0+128),w
 16770  0009' 0080'              	movwf	(_vacum+1)^(0+128)
 16771  000A' 0180'              	clrf	(_vacum+2)^(0+128)
 16772                           
 16773                           ;charger_discharger.c: 388:             break;
 16774  000B' 0008               	return
 16775  000C'                    i1l6903:
 16776                           
 16777                           ;charger_discharger.c: 390:             iavg = ((iacum >> 10) + ((iacum >> 9) & 0x01));
 16778  000C' 0800'              	movf	(_iacum+1)^(0+128),w
 16779  000D' 0081'              	movwf	??_calculate_avg+1
 16780  000E' 0800'              	movf	_iacum^(0+128),w
 16781  000F' 0080'              	movwf	??_calculate_avg
 16782  0010' 3009               	movlw	9
 16783  0011'                    u705_25:
 16784  0011' 3681'              	lsrf	??_calculate_avg+1,f
 16785  0012' 0C80'              	rrf	??_calculate_avg,f
 16786  0013' 0B89               	decfsz	9,f
 16787  0014' 2800'              	goto	u705_25
 16788  0015' 3001               	movlw	1
 16789  0016' 0500'              	andwf	??_calculate_avg,w
 16790  0017' 0082'              	movwf	??_calculate_avg+2
 16791  0018' 3000               	movlw	0
 16792  0019' 0501'              	andwf	??_calculate_avg+1,w
 16793  001A' 0083'              	movwf	??_calculate_avg+3
 16794  001B' 0800'              	movf	_iacum^(0+128),w
 16795  001C' 0084'              	movwf	??_calculate_avg+4
 16796  001D' 0800'              	movf	(_iacum+1)^(0+128),w
 16797  001E' 0085'              	movwf	??_calculate_avg+5
 16798  001F' 0800'              	movf	(_iacum+2)^(0+128),w
 16799  0020' 0086'              	movwf	??_calculate_avg+6
 16800  0021' 300A               	movlw	10
 16801  0022'                    u706_25:
 16802  0022' 3686'              	lsrf	??_calculate_avg+6,f
 16803  0023' 0C85'              	rrf	??_calculate_avg+5,f
 16804  0024' 0C84'              	rrf	??_calculate_avg+4,f
 16805  0025' 0B89               	decfsz	9,f
 16806  0026' 2800'              	goto	u706_25
 16807  0027' 0802'              	movf	??_calculate_avg+2,w
 16808  0028' 0704'              	addwf	??_calculate_avg+4,w
 16809  0029' 0023               	movlb	3	; select bank3
 16810  002A' 0080'              	movwf	_iavg^(0+384)
 16811  002B' 0803'              	movf	??_calculate_avg+3,w
 16812  002C' 3D05'              	addwfc	??_calculate_avg+5,w
 16813  002D' 0080'              	movwf	(_iavg+1)^(0+384)
 16814                           
 16815                           ;charger_discharger.c: 391:             vavg = ((vacum >> 10) + ((vacum >> 9) & 0x01));
 16816  002E' 0021               	movlb	1	; select bank1
 16817  002F' 0800'              	movf	(_vacum+1)^(0+128),w
 16818  0030' 0081'              	movwf	??_calculate_avg+1
 16819  0031' 0800'              	movf	_vacum^(0+128),w
 16820  0032' 0080'              	movwf	??_calculate_avg
 16821  0033' 3009               	movlw	9
 16822  0034'                    u707_25:
 16823  0034' 3681'              	lsrf	??_calculate_avg+1,f
 16824  0035' 0C80'              	rrf	??_calculate_avg,f
 16825  0036' 0B89               	decfsz	9,f
 16826  0037' 2800'              	goto	u707_25
 16827  0038' 3001               	movlw	1
 16828  0039' 0500'              	andwf	??_calculate_avg,w
 16829  003A' 0082'              	movwf	??_calculate_avg+2
 16830  003B' 3000               	movlw	0
 16831  003C' 0501'              	andwf	??_calculate_avg+1,w
 16832  003D' 0083'              	movwf	??_calculate_avg+3
 16833  003E' 0800'              	movf	_vacum^(0+128),w
 16834  003F' 0084'              	movwf	??_calculate_avg+4
 16835  0040' 0800'              	movf	(_vacum+1)^(0+128),w
 16836  0041' 0085'              	movwf	??_calculate_avg+5
 16837  0042' 0800'              	movf	(_vacum+2)^(0+128),w
 16838  0043' 0086'              	movwf	??_calculate_avg+6
 16839  0044' 300A               	movlw	10
 16840  0045'                    u708_25:
 16841  0045' 3686'              	lsrf	??_calculate_avg+6,f
 16842  0046' 0C85'              	rrf	??_calculate_avg+5,f
 16843  0047' 0C84'              	rrf	??_calculate_avg+4,f
 16844  0048' 0B89               	decfsz	9,f
 16845  0049' 2800'              	goto	u708_25
 16846  004A' 0802'              	movf	??_calculate_avg+2,w
 16847  004B' 0704'              	addwf	??_calculate_avg+4,w
 16848  004C' 0023               	movlb	3	; select bank3
 16849  004D' 0080'              	movwf	_vavg^(0+384)
 16850  004E' 0803'              	movf	??_calculate_avg+3,w
 16851  004F' 3D05'              	addwfc	??_calculate_avg+5,w
 16852  0050' 0080'              	movwf	(_vavg+1)^(0+384)
 16853                           
 16854                           ;charger_discharger.c: 392:             break;
 16855  0051' 0008               	return
 16856  0052'                    i1l6905:
 16857                           
 16858                           ;charger_discharger.c: 394:             iacum += (uint24_t) i;
 16859  0052' 0800'              	movf	_i^(0+128),w
 16860  0053' 0080'              	movwf	??_calculate_avg
 16861  0054' 0800'              	movf	(_i+1)^(0+128),w
 16862  0055' 0081'              	movwf	??_calculate_avg+1
 16863  0056' 0182'              	clrf	??_calculate_avg+2
 16864  0057' 0800'              	movf	??_calculate_avg,w
 16865  0058' 0780'              	addwf	_iacum^(0+128),f
 16866  0059' 0801'              	movf	??_calculate_avg+1,w
 16867  005A' 3D80'              	addwfc	(_iacum+1)^(0+128),f
 16868  005B' 0802'              	movf	??_calculate_avg+2,w
 16869  005C' 3D80'              	addwfc	(_iacum+2)^(0+128),f
 16870                           
 16871                           ;charger_discharger.c: 395:             vacum += (uint24_t) v;
 16872  005D' 0800'              	movf	_v^(0+128),w
 16873  005E' 0080'              	movwf	??_calculate_avg
 16874  005F' 0800'              	movf	(_v+1)^(0+128),w
 16875  0060' 0081'              	movwf	??_calculate_avg+1
 16876  0061' 0182'              	clrf	??_calculate_avg+2
 16877  0062' 0800'              	movf	??_calculate_avg,w
 16878  0063' 0780'              	addwf	_vacum^(0+128),f
 16879  0064' 0801'              	movf	??_calculate_avg+1,w
 16880  0065' 3D80'              	addwfc	(_vacum+1)^(0+128),f
 16881  0066' 0802'              	movf	??_calculate_avg+2,w
 16882  0067' 3D80'              	addwfc	(_vacum+2)^(0+128),f
 16883                           
 16884                           ;charger_discharger.c: 396:     }
 16885  0068' 0008               	return
 16886  0069'                    i1l6907:
 16887                           
 16888                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 16889                           ; Switch size 1, requested type "simple"
 16890                           ; Number of cases is 2, Range of values is 0 to 4
 16891                           ; switch strategies available:
 16892                           ; Name         Instructions Cycles
 16893                           ; simple_byte            7     4 (average)
 16894                           ; direct_byte           16     6 (fixed)
 16895                           ; jumptable            260     6 (fixed)
 16896                           ;	Chosen strategy is simple_byte
 16897  0069' 0021               	movlb	1	; select bank1
 16898  006A' 0800'              	movf	(_count+1)^(0+128),w
 16899  006B' 3A00               	xorlw	0	; case 0
 16900  006C' 1903               	skipnz
 16901  006D' 2800'              	goto	i1l7763
 16902  006E' 3A04               	xorlw	4	; case 4
 16903  006F' 1903               	skipnz
 16904  0070' 2800'              	goto	i1l7765
 16905  0071' 2800'              	goto	i1l6905
 16906  0072'                    i1l7763:
 16907                           
 16908                           ; Switch size 1, requested type "simple"
 16909                           ; Number of cases is 1, Range of values is 0 to 0
 16910                           ; switch strategies available:
 16911                           ; Name         Instructions Cycles
 16912                           ; simple_byte            4     3 (average)
 16913                           ; direct_byte            8     6 (fixed)
 16914                           ; jumptable            260     6 (fixed)
 16915                           ;	Chosen strategy is simple_byte
 16916  0072' 0800'              	movf	_count^(0+128),w
 16917  0073' 3A00               	xorlw	0	; case 0
 16918  0074' 1903               	skipnz
 16919  0075' 2800'              	goto	i1l6903
 16920  0076' 2800'              	goto	i1l6905
 16921  0077'                    i1l7765:
 16922                           
 16923                           ; Switch size 1, requested type "simple"
 16924                           ; Number of cases is 1, Range of values is 0 to 0
 16925                           ; switch strategies available:
 16926                           ; Name         Instructions Cycles
 16927                           ; simple_byte            4     3 (average)
 16928                           ; direct_byte            8     6 (fixed)
 16929                           ; jumptable            260     6 (fixed)
 16930                           ;	Chosen strategy is simple_byte
 16931  0077' 0800'              	movf	_count^(0+128),w
 16932  0078' 3A00               	xorlw	0	; case 0
 16933  0079' 1903               	skipnz
 16934  007A' 2800'              	goto	i1l6901
 16935  007B' 2800'              	goto	i1l6905
 16936  007C' 0008               	return
 16937  007D'                    __end_of_calculate_avg:
 16938                           
 16939                           	psect	text55
 16940  0000'                    __ptext55:	
 16941 ;; *************** function _abs *****************
 16942 ;; Defined at:
 16943 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
 16944 ;; Parameters:    Size  Location     Type
 16945 ;;  a               2    0[COMMON] int 
 16946 ;; Auto vars:     Size  Location     Type
 16947 ;;		None
 16948 ;; Return value:  Size  Location     Type
 16949 ;;                  2    0[COMMON] int 
 16950 ;; Registers used:
 16951 ;;		wreg, status,2, status,0
 16952 ;; Tracked objects:
 16953 ;;		On entry : 1F/1
 16954 ;;		On exit  : 0/0
 16955 ;;		Unchanged: 0/0
 16956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16959 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16960 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16961 ;;Total ram usage:        4 bytes
 16962 ;; Hardware stack levels used: 1
 16963 ;; This function calls:
 16964 ;;		Nothing
 16965 ;; This function is called by:
 16966 ;;		_ISR
 16967 ;; This function uses a non-reentrant model
 16968 ;;
 16969                           
 16970  0000'                    _abs:	
 16971                           ;psect for function _abs
 16972                           
 16973                           
 16974                           ;incstack = 0
 16975                           ; Regs used in _abs: [wreg+status,2+status,0]
 16976  0000' 0801'              	movf	abs@a+1,w
 16977  0001' 3A80               	xorlw	128
 16978  0002' 0082'              	movwf	??_abs
 16979  0003' 3080               	movlw	128
 16980  0004' 0202'              	subwf	??_abs,w
 16981  0005' 1D03               	skipz
 16982  0006' 2800'              	goto	u711_25
 16983  0007' 3001               	movlw	1
 16984  0008' 0200'              	subwf	abs@a,w
 16985  0009'                    u711_25:
 16986  0009' 1803               	skipnc
 16987  000A' 0008               	return
 16988  000B' 0900'              	comf	abs@a,w
 16989  000C' 0082'              	movwf	??_abs
 16990  000D' 0901'              	comf	abs@a+1,w
 16991  000E' 0083'              	movwf	??_abs+1
 16992  000F' 0A82'              	incf	??_abs,f
 16993  0010' 1903               	skipnz
 16994  0011' 0A83'              	incf	??_abs+1,f
 16995  0012' 0802'              	movf	??_abs,w
 16996  0013' 0080'              	movwf	?_abs
 16997  0014' 0803'              	movf	??_abs+1,w
 16998  0015' 0081'              	movwf	?_abs+1
 16999  0016' 0008               	return
 17000  0017'                    __end_of_abs:
 17001                           
 17002                           	psect	text56
 17003  0000'                    __ptext56:	
 17004 ;; *************** function _UART_send_string *****************
 17005 ;; Defined at:
 17006 ;;		line 499 in file "charger_discharger.c"
 17007 ;; Parameters:    Size  Location     Type
 17008 ;;  st_pt           2    1[COMMON] PTR unsigned char 
 17009 ;;		 -> STR_2(13), STR_1(11), 
 17010 ;; Auto vars:     Size  Location     Type
 17011 ;;		None
 17012 ;; Return value:  Size  Location     Type
 17013 ;;                  1    wreg      void 
 17014 ;; Registers used:
 17015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17016 ;; Tracked objects:
 17017 ;;		On entry : 1C/3
 17018 ;;		On exit  : 1C/0
 17019 ;;		Unchanged: 0/0
 17020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17021 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17023 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17024 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17025 ;;Total ram usage:        3 bytes
 17026 ;; Hardware stack levels used: 1
 17027 ;; Hardware stack levels required when called: 1
 17028 ;; This function calls:
 17029 ;;		_UART_send_char
 17030 ;; This function is called by:
 17031 ;;		_ISR
 17032 ;; This function uses a non-reentrant model
 17033 ;;
 17034                           
 17035  0000'                    _UART_send_string:	
 17036                           ;psect for function _UART_send_string
 17037                           
 17038  0000'                    i1l6935:	
 17039                           ;charger_discharger.c: 499: void UART_send_string(char* st_pt);charger_discharger.c: 500
      +                          : {;charger_discharger.c: 501:     while(*st_pt)
 17040                           
 17041                           ;incstack = 0
 17042                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17043                           
 17044                           
 17045                           ;charger_discharger.c: 501:     while(*st_pt)
 17046  0000' 0801'              	movf	UART_send_string@st_pt,w
 17047  0001' 0084               	movwf	4
 17048  0002' 0802'              	movf	UART_send_string@st_pt+1,w
 17049  0003' 0085               	movwf	5
 17050  0004' 0012               	moviw fsr0++
 17051  0005' 1903               	btfsc	3,2
 17052  0006' 0008               	return
 17053                           
 17054                           ;charger_discharger.c: 502:         UART_send_char(*st_pt++);
 17055  0007' 0801'              	movf	UART_send_string@st_pt,w
 17056  0008' 0084               	movwf	4
 17057  0009' 0802'              	movf	UART_send_string@st_pt+1,w
 17058  000A' 0085               	movwf	5
 17059  000B' 0800               	movf	0,w	;code access
 17060  000C' 3180' 2000' 3180'  	fcall	_UART_send_char
 17061  000F' 3001               	movlw	1
 17062  0010' 0781'              	addwf	UART_send_string@st_pt,f
 17063  0011' 3000               	movlw	0
 17064  0012' 3D82'              	addwfc	UART_send_string@st_pt+1,f
 17065  0013' 2800'              	goto	i1l6935
 17066  0014'                    __end_of_UART_send_string:
 17067                           
 17068                           	psect	text57
 17069  0000'                    __ptext57:	
 17070 ;; *************** function _UART_send_char *****************
 17071 ;; Defined at:
 17072 ;;		line 419 in file "charger_discharger.c"
 17073 ;; Parameters:    Size  Location     Type
 17074 ;;  bt              1    wreg     unsigned char 
 17075 ;; Auto vars:     Size  Location     Type
 17076 ;;  bt              1    0[COMMON] unsigned char 
 17077 ;; Return value:  Size  Location     Type
 17078 ;;                  1    wreg      void 
 17079 ;; Registers used:
 17080 ;;		wreg
 17081 ;; Tracked objects:
 17082 ;;		On entry : 1C/3
 17083 ;;		On exit  : 1F/3
 17084 ;;		Unchanged: 0/0
 17085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17087 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17089 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17090 ;;Total ram usage:        1 bytes
 17091 ;; Hardware stack levels used: 1
 17092 ;; This function calls:
 17093 ;;		Nothing
 17094 ;; This function is called by:
 17095 ;;		_UART_send_string
 17096 ;; This function uses a non-reentrant model
 17097 ;;
 17098                           
 17099  0000'                    _UART_send_char:	
 17100                           ;psect for function _UART_send_char
 17101                           
 17102                           
 17103                           ;incstack = 0
 17104                           ; Regs used in _UART_send_char: [wreg]
 17105                           ;UART_send_char@bt stored from wreg
 17106  0000' 0080'              	movwf	UART_send_char@bt
 17107  0001'                    i1l424:	
 17108                           ;charger_discharger.c: 422:     {;charger_discharger.c: 423:     }
 17109                           
 17110                           
 17111                           ;charger_discharger.c: 421:     while(0 == TXIF)
 17112  0001' 0020               	movlb	0	; select bank0
 17113  0002' 1E11               	btfss	17,4	;volatile
 17114  0003' 2800'              	goto	i1l424
 17115                           
 17116                           ;charger_discharger.c: 424:     TX1REG = bt;
 17117  0004' 0800'              	movf	UART_send_char@bt,w
 17118  0005' 0023               	movlb	3	; select bank3
 17119  0006' 009A               	movwf	26	;volatile
 17120  0007' 0008               	return
 17121  0008'                    __end_of_UART_send_char:
 17122  007E                     btemp	set	126	;btemp
 17123  007E                     int$flags	set	126
 17124  007E                     wtemp0	set	126
 17125                           
 17126                           	psect	idloc
 17127                           
 17128                           ;Config register IDLOC0 @ 0x8000
 17129                           ;	unspecified, using default values
 17130  8000                     	org	32768
 17131  8000  3FFF               	dw	16383
 17132                           
 17133                           ;Config register IDLOC1 @ 0x8001
 17134                           ;	unspecified, using default values
 17135  8001                     	org	32769
 17136  8001  3FFF               	dw	16383
 17137                           
 17138                           ;Config register IDLOC2 @ 0x8002
 17139                           ;	unspecified, using default values
 17140  8002                     	org	32770
 17141  8002  3FFF               	dw	16383
 17142                           
 17143                           ;Config register IDLOC3 @ 0x8003
 17144                           ;	unspecified, using default values
 17145  8003                     	org	32771
 17146  8003  3FFF               	dw	16383
 17147                           
 17148                           	psect	config
 17149                           
 17150                           ;Config register CONFIG1 @ 0x8007
 17151                           ;	Oscillator Selection
 17152                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 17153                           ;	Watchdog Timer Enable
 17154                           ;	WDTE = OFF, WDT disabled
 17155                           ;	Power-up Timer Enable
 17156                           ;	PWRTE = OFF, PWRT disabled
 17157                           ;	MCLR Pin Function Select
 17158                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 17159                           ;	Flash Program Memory Code Protection
 17160                           ;	CP = OFF, Program memory code protection is disabled
 17161                           ;	Data Memory Code Protection
 17162                           ;	CPD = OFF, Data memory code protection is disabled
 17163                           ;	Brown-out Reset Enable
 17164                           ;	BOREN = OFF, Brown-out Reset disabled
 17165                           ;	Clock Out Enable
 17166                           ;	CLKOUTEN = ON, CLKOUT function is enabled on the CLKOUT pin
 17167                           ;	Internal/External Switchover
 17168                           ;	IESO = ON, Internal/External Switchover mode is enabled
 17169                           ;	Fail-Safe Clock Monitor Enable
 17170                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 17171  8007                     	org	32775
 17172  8007  31E4               	dw	12772
 17173                           
 17174                           ;Config register CONFIG2 @ 0x8008
 17175                           ;	Flash Memory Self-Write Protection
 17176                           ;	WRT = OFF, Write protection off
 17177                           ;	Voltage Regulator Capacitor Enable bit
 17178                           ;	VCAPEN = OFF, Vcap functionality is disabled on RA6.
 17179                           ;	PLL Enable
 17180                           ;	PLLEN = OFF, 4x PLL disabled
 17181                           ;	Stack Overflow/Underflow Reset Enable
 17182                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 17183                           ;	Brown-out Reset Voltage Selection
 17184                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 17185                           ;	Low Power Brown-Out Reset Enable Bit
 17186                           ;	LPBOR = OFF, Low power brown-out is disabled
 17187                           ;	Low-Voltage Programming Enable
 17188                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 17189  8008                     	org	32776
 17190  8008  1EFF               	dw	7935

Data Sizes:
    Strings     24
    Constant    0
    Data        34
    BSS         165
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     53      80
    BANK2            80     80      80
    BANK3            80     29      80
    BANK4            80      0      72
    BANK5            80      0      49
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    UART_send_string@st_pt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[11]), 

    put_data_into_structure@data	PTR unsigned char  size(1) Largest target is 20
		 -> command_interpreter@data(BANK1[20]), 

    put_data_into_structure@structure	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), converter_configuration(BANK5[14]), test_configuration(BANK4[17]), basic_configuration(BANK4[17]), 

    calculate_checksum@data	PTR unsigned char  size(2) Largest target is 20
		 -> NULL(NULL[0]), converter_configuration(BANK5[14]), test_configuration(BANK4[17]), basic_configuration(BANK4[17]), 
		 -> command_interpreter@data(BANK1[20]), 

    UART_send_some_bytes@data	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), log_data(BANK5[15]), converter_configuration(BANK5[14]), test_configuration(BANK4[17]), 
		 -> basic_configuration(BANK4[17]), command_interpreter@calc_checksum(BANK1[2]), 

    UART_get_some_bytes@data	PTR unsigned char  size(1) Largest target is 20
		 -> command_interpreter@data(BANK1[20]), 

    log_data_ptr	PTR struct log_data_struct size(1) Largest target is 15
		 -> NULL(NULL[0]), log_data(BANK5[15]), 

    converter_configuration_ptr	PTR struct converter_configuration_struct size(1) Largest target is 14
		 -> NULL(NULL[0]), converter_configuration(BANK5[14]), 

    test_configuration_ptr	PTR struct test_configuration_struct size(1) Largest target is 17
		 -> NULL(NULL[0]), test_configuration(BANK4[17]), 

    basic_configuration_ptr	PTR struct basic_configuration_struct size(1) Largest target is 17
		 -> NULL(NULL[0]), basic_configuration(BANK4[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _control_loop->i1___xxtofl
    _pid->i1___xxtofl
    _command_interpreter->i1___xxtofl
    i1_converter_settings->i1___xxtofl
    i1___fltol->i1___xxtofl
    i1___flmul->i1___xxtofl
    i1___fldiv->i1___xxtofl
    i1___fladd->i1___xxtofl
    i1_UART_send_some_bytes->i1_UART_send_byte
    _UART_send_header->i1_UART_send_byte
    _UART_send_string->_UART_send_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _pid->i1___flmul
    ___flsub->i1___fladd
    _command_interpreter->i1___fldiv
    i1_converter_settings->i1___fldiv
    i1___fltol->i1___fldiv
    i1___flmul->___flsub
    i1___fldiv->i1___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    _ISR->_command_interpreter
    _control_loop->i1_set_DC
    _command_interpreter->i1_converter_settings
    i1_converter_settings->i1_set_DC
    i1_set_DC->i1___fltol

Critical Paths under _main in BANK2

    _converter_settings->___fltol
    _fDISCHARGE->___fltol
    _fDC_res->___fltol
    ___flge->___xxtofl
    _scaling->___fltol
    _log_control->___fltol
    _UART_send_some_bytes->_UART_send_byte
    _set_DC->___fltol
    _cc_cv_mode->___fltol
    ___fltol->___fladd
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    ___fladd->___flmul

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_state_machine
    _state_machine->_fDC_res
    _fNEXTSTATE->_converter_settings
    _fNEXTCELL->_converter_settings
    _fNEXTREPETITION->_converter_settings
    _converter_settings->_set_DC
    _fIDLE->_set_DC
    _fDISCHARGE->_set_DC
    _fDC_res->_set_DC
    _fCHARGE->_set_DC
    _scaling->___fltol
    _log_control->___fltol
    _initialize->_set_DC
    _set_DC->___fltol
    _cc_cv_mode->___fltol
    ___fltol->___fladd

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  168633
                                             28 BANK3      1     1      0
                         _cc_cv_mode
                         _initialize
                   _interrupt_enable
                        _log_control
                            _scaling
                      _state_machine
 ---------------------------------------------------------------------------------
 (1) _state_machine                                        2     2      0  120745
                                             26 BANK3      2     2      0
                            _fCHARGE
                            _fDC_res
                         _fDISCHARGE
                              _fIDLE
                              _fWAIT
 ---------------------------------------------------------------------------------
 (2) _fWAIT                                                0     0      0   67835
                           _Cell_OFF
                         _fNEXTSTATE
                             _set_DC
 ---------------------------------------------------------------------------------
 (3) _fNEXTSTATE                                           0     0      0   66168
                 _converter_settings
                          _fNEXTCELL
 ---------------------------------------------------------------------------------
 (4) _fNEXTCELL                                            0     0      0   44112
                 _converter_settings
                    _fNEXTREPETITION
 ---------------------------------------------------------------------------------
 (5) _fNEXTREPETITION                                      0     0      0   22056
                 _converter_settings
 ---------------------------------------------------------------------------------
 (6) _converter_settings                                   8     8      0   22056
                                             18 BANK3      8     8      0
                            _Cell_ON
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _set_DC
 ---------------------------------------------------------------------------------
 (7) _Cell_ON                                              1     1      0       0
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (2) _fIDLE                                                0     0      0    1667
                           _Cell_OFF
                             _set_DC
 ---------------------------------------------------------------------------------
 (2) _fDISCHARGE                                           2     2      0   23177
                                             18 BANK3      2     2      0
                           _Cell_OFF
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _getTime
                             _set_DC
 ---------------------------------------------------------------------------------
 (2) _fDC_res                                              8     8      0   22033
                                             18 BANK3      8     8      0
                           _Cell_OFF
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _getTime
                             _set_DC
 ---------------------------------------------------------------------------------
 (2) _fCHARGE                                              2     2      0    6033
                                             18 BANK3      2     2      0
                           _Cell_OFF
                             ___flge
                           ___xxtofl
                            _getTime
                             _set_DC
 ---------------------------------------------------------------------------------
 (3) _getTime                                              2     2      0       0
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1190
                                             14 BANK2     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _scaling                                              8     8      0   20389
                                             16 BANK3      8     8      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _log_control                                          0     0      0    2040
                     _UART_send_byte
               _UART_send_some_bytes
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) _UART_send_some_bytes                                 3     1      2     397
                                              1 BANK2      3     1      2
                     _UART_send_byte
 ---------------------------------------------------------------------------------
 (3) _UART_send_byte                                       1     1      0      22
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _interrupt_enable                                     1     1      0       2
 ---------------------------------------------------------------------------------
 (1) _initialize                                           4     4      0    4843
                                             18 BANK3      4     4      0
                           _Cell_OFF
                           ___xxtofl
                             _set_DC
 ---------------------------------------------------------------------------------
 (3) _set_DC                                               2     2      0    1667
                                             16 BANK3      2     2      0
                            ___fltol
 ---------------------------------------------------------------------------------
 (3) _Cell_OFF                                             1     1      0       0
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           5     0      5   20614
                                             16 BANK3      5     0      5
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___xxtofl                                            14    10      4    3176
                                              0 BANK2     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4    1621
                                             78 BANK2      2     2      0
                                              8 BANK3      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    6210
                                             40 BANK2     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              0 BANK2      9     7      2
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    4553
                                             14 BANK2     26    18      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    4760
                                             66 BANK2     12     4      8
                                              0 BANK3      8     8      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  2     2      0   32132
                                             51 BANK1      2     2      0
                   _UART_send_string
                                _abs
                      _calculate_avg
                _command_interpreter
                       _control_loop
                           _read_ADC
                             _timing
                   i1_UART_send_byte
 ---------------------------------------------------------------------------------
 (10) _timing                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _read_ADC                                           11     9      2     198
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (10) _control_loop                                        0     0      0   10593
                                _pid
                         i1___xxtofl
                           i1_set_DC
 ---------------------------------------------------------------------------------
 (11) _pid                                                20    12      8    9060
                                             54 BANK0     20    12      8
                            ___flsub
                          i1___fladd
                           i1___flge
                          i1___flmul
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (12) i1___flge                                           12     4      8     390
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (12) ___flsub                                             8     0      8    3057
                                             20 BANK0      8     0      8
                          i1___fladd
 ---------------------------------------------------------------------------------
 (10) _command_interpreter                                31    31      0   20958
                                             20 BANK1     31    31      0
                      _UART_get_byte
                _UART_get_some_bytes
                   _UART_send_header
                 _calculate_checksum
            _put_data_into_structure
                   i1_UART_send_byte
             i1_UART_send_some_bytes
                          i1___fladd
                          i1___fldiv
                          i1___flmul
                          i1___fltol
                         i1___xxtofl
               i1_converter_settings
                          i1_getTime
 ---------------------------------------------------------------------------------
 (11) i1_getTime                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) i1_converter_settings                                8     8      0    9170
                                             12 BANK1      8     8      0
                          i1_Cell_ON
                          i1___fladd
                          i1___fldiv
                          i1___flmul
                          i1___fltol
                         i1___xxtofl
                           i1_set_DC
 ---------------------------------------------------------------------------------
 (11) i1_set_DC                                            2     2      0     509
                                             10 BANK1      2     2      0
                          i1___fltol
 ---------------------------------------------------------------------------------
 (12) i1___fltol                                          10     6      4     463
                                              0 BANK1     10     6      4
                          i1___fladd (ARG)
                          i1___fldiv (ARG)
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (11) i1___xxtofl                                         14    10      4    1024
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (12) i1___flmul                                          26    18      8    2596
                                             28 BANK0     26    18      8
                            ___flsub (ARG)
                        i1__Umul8_16
                          i1___fladd (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) i1__Umul8_16                                         9     7      2     349
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (12) i1___fldiv                                          26    18      8    1953
                                             54 BANK0     26    18      8
                          i1___fladd (ARG)
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (12) i1___fladd                                          20    12      8    2556
                                              0 BANK0     20    12      8
                        i1__Umul8_16 (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (12) i1_Cell_ON                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) i1_UART_send_some_bytes                              3     1      2     227
                                              1 COMMON     3     1      2
                   i1_UART_send_byte
 ---------------------------------------------------------------------------------
 (11) _put_data_into_structure                             4     2      2     524
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (11) _calculate_checksum                                  8     5      3     887
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (11) _UART_send_header                                    3     1      2     240
                                              1 COMMON     3     1      2
                   i1_UART_send_byte
 ---------------------------------------------------------------------------------
 (10) i1_UART_send_byte                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _UART_get_some_bytes                                 3     2      1     121
                                              0 COMMON     3     2      1
                      _UART_get_byte
 ---------------------------------------------------------------------------------
 (12) _UART_get_byte                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _calculate_avg                                       7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (10) _abs                                                 4     2      2     142
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _UART_send_string                                    3     1      2     219
                                              1 COMMON     3     1      2
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (11) _UART_send_char                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cc_cv_mode
     ___fladd
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _initialize
     _Cell_OFF
     ___xxtofl
     _set_DC
       ___fltol
   _interrupt_enable
   _log_control
     _UART_send_byte
     _UART_send_some_bytes
       _UART_send_byte
     ___fltol
   _scaling
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
   _state_machine
     _fCHARGE
       _Cell_OFF
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
       _getTime
       _set_DC
     _fDC_res
       _Cell_OFF
       ___fladd
       ___fldiv
       ___flmul
       ___fltol
       ___xxtofl
       _getTime
       _set_DC
     _fDISCHARGE
       _Cell_OFF
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___fltol
       ___xxtofl
       _getTime
       _set_DC
     _fIDLE
       _Cell_OFF
       _set_DC
     _fWAIT
       _Cell_OFF
       _fNEXTSTATE
         _converter_settings
           _Cell_ON
           ___fladd
           ___fldiv
           ___flmul
           ___fltol
           ___xxtofl
           _set_DC
         _fNEXTCELL
           _converter_settings
           _fNEXTREPETITION
             _converter_settings
       _set_DC

 _ISR (ROOT)
   _UART_send_string
     _UART_send_char
   _abs
   _calculate_avg
   _command_interpreter
     _UART_get_byte
     _UART_get_some_bytes
       _UART_get_byte
     _UART_send_header
       i1_UART_send_byte
     _calculate_checksum
     _put_data_into_structure
     i1_UART_send_byte
     i1_UART_send_some_bytes
       i1_UART_send_byte
     i1___fladd
       i1__Umul8_16 (ARG)
       i1___xxtofl (ARG)
     i1___fldiv
       i1___fladd (ARG)
       i1___flmul (ARG)
         ___flsub (ARG)
           i1___fladd
         i1__Umul8_16 (ARG)
         i1___fladd (ARG)
         i1___xxtofl (ARG)
       i1___xxtofl (ARG)
     i1___flmul
     i1___fltol
       i1___fladd (ARG)
       i1___fldiv (ARG)
       i1___flmul (ARG)
       i1___xxtofl (ARG)
     i1___xxtofl
     i1_converter_settings
       i1_Cell_ON
       i1___fladd
       i1___fldiv
       i1___flmul
       i1___fltol
       i1___xxtofl
       i1_set_DC
         i1___fltol
     i1_getTime
   _control_loop
     _pid
       ___flsub
       i1___fladd
       i1___flge
       i1___flmul
       i1___xxtofl (ARG)
     i1___xxtofl
     i1_set_DC
   _read_ADC
   _timing
   i1_UART_send_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     35      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     1D      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      48      13       90.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      31      15       61.3%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1C7      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1C7      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Oct 17 14:39:39 2024

   put_data_into_structure@length 0003                      ___fldiv@aexp 0027                      ___fldiv@bexp 0026  
                               _i 000C                                 _v 000E                       i1___fladd@a 0004  
                     i1___fladd@b 0000                      ___fldiv@sign 001F                       i1___fldiv@a 0036  
                     i1___fldiv@b 003A                                _kd 0004                                _er 0000  
                     i1___flmul@a 0020                                _ki 0008                       i1___flmul@b 001C  
                              _kp 000C                      i1___flge@ff1 0000                      i1___flge@ff2 0004  
             __Umul8_16@word_mpld 0006                        i1___xxtofl 0000                               l420 0006  
                             l447 0002                               l818 0030                               l881 0018  
                             _GIE 005F                               _RB2 006A                               _RB3 006B  
                             _RB4 006C                               _RC3 0073                               _RB5 006D  
                             _RC4 0074                               _RC5 0075                               _ISR 0000  
                             _RX9 0CEE                               _TX9 0CF6                               _abs 0000  
                             _pid 0000                      i1___fltol@f1 0000           _basic_configuration_ptr 0017  
                             wreg 0009                     i1___fladd@grs 0013                      ___flmul@aexp 0036  
                    ___flmul@bexp 003B                      ___flmul@sign 0035                      ___flmul@temp 0040  
                    ___flmul@prod 003C                   _fNEXTREPETITION 0000                              ?_ISR 0000  
                   i1___fldiv@grs 004A                     i1___fldiv@rem 0043                      ___fltol@exp1 004F  
                            ?_abs 0000                              l1224 001A                              l1403 0042  
                            l1227 0068                              l1500 0065                              l1501 006F  
                            l1351 00BC                              l1247 004D                              l1424 0149  
                            l1353 009D                              l1425 0161                              l1347 0044  
                            l1427 016C                              l1381 01C6                              l1462 0010  
                            l1455 01EF                              l1368 0157                              l5001 0063  
                            l5003 0056                              l1389 01E0                              l1493 0051  
                            l5015 008A                              l1487 001D                              l5111 02B3  
                            l5031 0026                              l4401 0012                              l5105 01CC  
                            l5201 0017                              l6101 0027                              l5141 03F2  
                            l5061 00EE                              l5037 00B4                              l6103 002C  
                            l5135 030B                              l4521 0020                              l4417 0039  
                            l6041 008E                              l6017 0019                              l4515 0015  
                            l4435 000A                              l4427 005C                              l4419 0049  
                            l6123 0056                              l6211 01AD                              l4613 00DA  
                            l4605 00CA                              l4461 0031                              l5077 012F  
                            l5501 001D                              l4615 00DC                              l4623 00EF  
                            l4543 003C                              l4519 0018                              l6215 0212  
                            l5167 047C                              l4641 0169                              l4633 014F  
                            l4801 0106                              l4713 0018                              l5513 004E  
                            l6233 0238                              l4465 0048                              l5169 0496  
                            l4539 0039                              l4715 0020                              l6075 0192  
                            l6067 00EF                              l4467 001B                              l4549 0050  
                            l4805 0108                              l4733 003A                              l4709 0015  
                            l4397 0008                              l5509 0034                              l6157 00FF  
                            l6149 00B7                              l6253 0023                              l4663 0188  
                            l4655 017D                              l4815 0131                              l4743 0061  
                            l6183 0096                              l4649 0176                              l4657 017F  
                            l4729 0037                              l5473 001C                              l6097 0010  
                            l4489 0074                              l4667 018A                              l4587 00A3  
                            l4579 006E                              l4931 015B                              l4851 0017  
                            l6179 008E                              l4685 01D6                              l4589 00A5  
                            l4597 00B7                              l4829 0168                              l4749 006D  
                            l4933 0172                              l4853 001F                              ?_pid 0036  
                            l4775 00CD                              l4943 018B                              l4871 0040  
                            l5479 001F                              l4689 01DA                              l4793 00D8  
                            l4769 00B4                              l4777 0096                              l4953 01B4  
                            l4849 0015                              l7265 0001                              l4795 00EF  
                            l4779 00D2                              l4963 01E0                              l4939 0189  
                            l4867 0036                              l4957 01C9                              l4869 0038  
                            l4981 0015                              l4879 004E                              l4991 002E  
                            l4993 003E                              l6921 0000                              l4987 002C  
                            l7469 0041                              l6941 0004                              l7477 000F  
                            l7751 0485                              l6951 000D                              l6945 0007  
                            l7489 0034                              l6939 0001                              l6955 0010  
                            l7749 0019                              l6949 000A                              STR_1 0000  
                            STR_2 0000                              _BRGH 0CF2                              _CREN 0CEC  
                            u4035 016A                              u4135 01A8                              u4305 00A5  
                            u4325 00AE                              u4335 00C2                              u3615 001C  
                            u3715 0011                              _PEIE 005E                              u4365 00DB  
                            u4605 014A                              u3645 003A                              u4455 011F  
                            u4295 009E                              u4615 015E                              u7015 01CC  
                            u4465 013A                              u4385 00E4                              u4705 01A2  
                            u3915 00AA                              u4475 0153                              u4715 01BD  
                            u4635 0167                              u3675 0051                              _RCIE 048D  
                            _RCIF 008D                              u4725 01D3                              u5525 0011  
                            u3870 0090                              u4575 00BB                              u4815 005D  
                            u3880 0091                              _SECF 0012                              u3865 0085  
                            u4585 00E4                              u4595 012E                              u6515 0063  
                            u6605 0190                              u4855 0077                              u4775 0037  
                            u6615 000A                              u7407 00CB                              u3993 0105  
                            u3985 00E1                              u7417 00D9                              _OERR 0CE9  
                            u4795 004B                              u6635 001D                              u7507 01C5  
                            u7427 00E7                              u6725 00C4                              u6645 0025  
                            u7517 02BC                              u7437 00FE                              u7607 000A  
                            u7527 02CA                              u7447 010C                              u6745 00FD  
                            u6585 0156                              u7617 0015                              u7537 02D8  
                            u7457 011A                              u7707 0089                              u7627 0037  
                            u7547 02E6                              u7467 0128                              u7387 0007  
                            u7717 0094                              u7637 0042                              u7557 03FB  
                            u7477 019B                              u7397 00BD                              u7807 00C4  
                            u7727 009F                              u7647 0021                              u7567 0409  
                            u7487 01A9                              u7817 0120                              u7737 012D  
                            u7657 002C                              u7577 0417                              u7497 01B7  
                            u7827 0006                              u7747 013B                              u7667 0056  
                            u7587 0425                              u7837 0011                              u7757 0149  
                            u7677 0061                              u7597 049A                              u7847 001C  
                            u7767 0157                              u7687 006C                              u6985 005F  
                            u7857 0027                              u7777 009A                              u7697 007E  
                            u7787 00A8                              u7797 00B6                              _SPEN 0CEF  
                            _SRXF 0013                              _TXIE 048C                              _TXEN 0CF5  
                            _TXIF 008C                              _SYNC 0CF4                     _state_machine 0000  
                            abs@a 0000                              _iavg 000E                              _conv 0010  
                            _main 0000                              _iref 000A                              _pidi 0010  
                            _qavg 0004                              _pidt 0000                     i1___flmul@grs 002B  
                            _vavg 0010                              fsr0h 0005                              fsr1h 0007  
                            indf0 0000                              fsr0l 0004                              indf1 0001  
                            _vmax 000C                              fsr1l 0006                              _vref 0000  
                            btemp 007E                    i1___fladd@aexp 0011                    i1___fladd@bexp 0012  
                            start 0000*                  __end_of_Cell_ON 00A5          ??i1_UART_send_some_bytes 0003  
                 ___fldiv@new_exp 0020                   __end_of_fCHARGE 0102                   __end_of_fDC_res 023B  
                           ??_ISR 0033                        _fDISCHARGE 0000                             ??_abs 0002  
                           ??_pid 000E          __end_of_interrupt_enable 0014                    i1___fldiv@aexp 004F  
                  i1___fldiv@bexp 004E                    i1___fldiv@sign 0047                     ___fltol@sign1 004E  
                 __end_of___fladd 01E6                             ?_main 0000                     ?_control_loop 0000  
                 __end_of___fldiv 016F                             _BRG16 0CFB                   __end_of___flmul 01FC  
                           _ANSB0 0C68                             _ANSA3 0C63                             _ANSB1 0C69  
                           _ANSB2 0C6A                   __end_of___flsub 001D                             _ANSB3 0C6B  
                           _ANSA5 0C65                             _ANSB4 0C6C                   __end_of___fltol 006C  
                           _ANSB5 0C6D                             _P1OEC 40AA                             i1l424 0001  
                           i1l361 03BE                             i1l434 0005                             i1l358 03B7  
                           i1l447 0001                             i1l399 0014                             i1l664 006B  
     _converter_configuration_ptr 0015                             _CV_kd 0000                             _TMR1H 0017  
                           _CV_ki 0004                             _TMR1L 0016                             _CV_kp 0008  
                           _WPUB0 1068                             _WPUA3 1063                             _WPUB1 1069  
                           _WPUB2 106A                             _WPUB3 106B                             _WPUA5 1065  
                           _WPUB4 106C                             _WPUC2 1072                             _WPUC3 1073  
                           _WPUB5 106D                             _WPUC4 1074                             _WPUC5 1075  
                           _WPUE3 1083                             _RXSEL 08E9                             _TXSEL 08EA  
                           _fIDLE 0000          __end_ofi1_UART_send_byte 0008                             _fWAIT 0000  
                 __end_of_getTime 0028                        i1set_DC@dc 000A                _test_configuration 001A  
                           _iacum 0004                             _cmode 0002                             _count 0000  
put_data_into_structure@structure 0001                    i1___flmul@aexp 002A                    i1___flmul@bexp 002F  
                           _vacum 0007                    i1___flmul@sign 0029                    i1___flmul@temp 0034  
                  i1___flmul@prod 0030                   __end_of_scaling 01D3                      ?_log_control 0000  
                           _state 0010                             _start 0014                  __end_ofi1___flge 007B  
                  ?_state_machine 0000                       pid@feedback 0036                    i1___fltol@exp1 0009  
                           status 0003                  __end_of_Cell_OFF 002D                             wtemp0 007E  
                 i1___fladd@signs 0010                  __end_ofi1_set_DC 0020                        _fNEXTSTATE 0000  
                 __initialization 0000          command_interpreter@F5995 0000                      __end_of_main 0037  
                  ??_control_loop 000E           __end_of_fNEXTREPETITION 001B                            ??_main 001C  
                     ?i1___xxtofl 0000                       pid@setpoint 003A                            ?_fIDLE 0000  
                          ?_fWAIT 0000                     _counter_state 0011                            _ADRESH 009C  
                          _ADRESL 009B                            _P1DCST 40D8                            _P1POLC 40B2  
                          _P1PHST 40D0                            _P1PRST 40E0                            _P1STRC 4172  
                          _RC1REG 0199                            i1l1224 001A                            i1l1403 0042  
                          i1l1227 0068                            i1l1500 0065                            i1l1501 006F  
                          i1l1351 00B3                            i1l1247 0045                            i1l1424 0149  
                          i1l1353 0098                            i1l1425 0161                            i1l1347 0044  
                          i1l1427 016C                            i1l1381 0193                            i1l1462 0010  
                          i1l1455 01EF                            i1l1368 0134                         ??_Cell_ON 0000  
                          i1l1389 01AB                            i1l1493 0051                            i1l1487 001D  
                          i1l5205 0007                            i1l5401 0165                            i1l5225 0033  
                          i1l5209 0010                            i1l5235 0052                            i1l5227 0041  
                          i1l5405 0167                            i1l5325 009E                            i1l5317 006C  
                          i1l5253 0015                            i1l5423 01A3                            i1l5351 00D1  
                          i1l5343 00C1                            i1l5327 00A0                            i1l5335 00AE  
                          i1l5353 00D3                            i1l5361 00E2                            i1l5281 003C  
                          i1l5257 0018                            i1l6305 00B3                            i1l5427 01A7  
                          i1l5371 012C                            i1l5259 0020                            i1l6403 02FF  
                          i1l5277 0039                            i1l5437 000A                            i1l7301 003A  
                          i1l5287 004E                            i1l5623 0015                            i1l5553 0042  
                          i1l5393 015A                            i1l6409 03DF                            i1l6345 012F  
                          i1l6329 00ED                            i1l5555 0019                            i1l5387 0153  
                          i1l5379 0146                            i1l5395 015C                            i1l5715 0106  
                          i1l5707 00D8                            i1l5643 0037                            i1l5627 0018  
                          i1l6435 045D                            i1l6275 001E                            i1l7411 03B8  
                          i1l7253 0006                            i1l5549 002D                            i1l5709 00EF  
                          i1l5629 0020                            i1l5901 002C                            i1l6373 01C7  
                          i1l6437 0478                            i1l6269 001B                            i1l7413 03C2  
                          i1l7317 0074                            i1l7309 0067                            i1l7501 0016  
                          i1l7255 001B                            i1l5743 0168                            i1l5719 0108  
                          i1l5663 006D                            i1l5647 003A                            i1l7415 03C7  
                          i1l7351 00E7                            i1l7335 00A5                            i1l7327 0091  
                          i1l7319 007D                            i1l7407 03A2                            i1l7503 001C  
                          i1l7273 0001                            i1l5577 006B                            i1l5729 0131  
                          i1l5657 0061                            i1l5905 002E                            i1l7345 00C6  
                          i1l7409 03B5                            i1l7521 005C                            i1l5683 00B4  
                          i1l5691 0096                            i1l5763 0015                            i1l5915 0063  
                          i1l5907 003E                            i1l6379 02A7                            i1l6299 0026  
                          i1l7427 03D7                            i1l7371 0226                            i1l7347 00DA  
                          i1l5595 0034                            i1l6901 0001                            i1l5941 0006  
                          i1l5693 00D2                            i1l5853 0189                            i1l5845 015B  
                          i1l5781 0036                            i1l5765 0017                            i1l5917 0056  
                          i1l7429 03EA                            i1l6903 000C                            i1l5871 01C9  
                          i1l5847 0172                            i1l5783 0038                            i1l5767 001F  
                          i1l7391 038B                            i1l5599 004E                            i1l7519 0053  
                          i1l6905 0052                            i1l5689 00CD                            i1l5857 018B  
                          i1l5793 004E                            i1l5785 0040                            i1l5929 008A  
                          i1l7369 021D                            i1l6907 0069                            i1l5867 01B4  
                          i1l5877 01E0                            i1l7389 0378                            i1l5981 00C4  
                          i1l6935 0000                            i1l5975 0001                            i1l5895 0015  
                          i1l6839 0026                            i1l7761 0467                            i1l7753 00CF  
                          i1l5985 00E3                            i1l7763 0072                            i1l7755 0380  
                          i1l5995 01BF                            i1l7765 0077                            i1l7757 03AA  
                          i1l7759 03DF                            i1l6897 0013                            u500_25 0049  
                          u512_25 0080                            u513_20 008B                            u514_20 008C  
                          u610_25 00E4                            u611_25 012E                            u524_25 00D7  
                          u612_25 014A                         ??_fCHARGE 0012                            u525_23 00F4  
                          u517_25 00A4                            u613_25 015E                            u622_25 01A2  
                          u711_25 0009                            u623_25 01BD                            u615_25 0167  
                          u631_25 004B                            u624_25 01D3                            u800_27 02B0  
                          u705_25 0011                            u529_25 0147                            u609_25 00BB  
                          u633_25 005D                            u801_27 02BE                            u722_20 000F  
                          u706_25 0022                            u810_27 0013                            u802_27 02CC  
                          u707_25 0034                            u539_25 017E                            u547_25 0011  
                          u811_27 0032                            u803_27 02DA                            u708_25 0045  
                          u820_27 0088                            u812_27 003C                            u804_27 03E8  
                          u581_25 009E                            u637_25 0077                            u629_25 0037  
                          u821_27 0092                            u813_27 001E                            u805_27 03F6  
                          u590_25 00E4                            u582_25 00A5                            u494_25 0019  
                          u814_27 0028                            u806_27 0404                            u727_25 006E  
                          u815_27 004F                            u807_27 0412                            u584_25 00AE  
                          u816_27 0059                            u808_27 047C                            u585_25 00C2  
                          u497_25 0034                            u817_27 0063                            u809_27 0009  
                          u818_27 0074                            u683_25 0010                            u819_27 007E  
                          u588_25 00DB                            _TMR1GE 00CF                            _TMR1IE 0488  
                          _TMR1IF 0088                            u597_25 011F                            u598_25 013A  
                          u790_27 00D8                            u599_25 0153                            u791_27 00E6  
                          _TMR1ON 00C0                            u792_27 00FE                            u793_27 010C  
                          _TX1REG 019A                            u794_27 011A                            u786_27 0001  
                          u795_27 0128                            u787_27 000F                            u796_27 0196  
                          u788_27 00BC                            u797_27 01A4                            u789_27 00CA  
                          u798_27 01B2                            u799_27 01C0                            _TRISB0 0468  
                          _TRISA3 0463                            _TRISB1 0469                            _TRISB2 046A  
                          _TRISB3 046B                            _TRISA5 0465                            _TRISB4 046C  
                          _TRISC2 0472                            _TRISC3 0473                            _TRISB5 046D  
                          _TRISC4 0474                            _TRISC5 0475                  __end_of___xxtofl 0093  
                       ??_fDC_res 0012           _put_data_into_structure 0000      __end_of_UART_send_some_bytes 0014  
               __end_ofi1_Cell_ON 0098                            _nWPUEN 04AF                            ___flge 0000  
                       ??___fladd 0000                         ??___fldiv 0016                         ??___flmul 0030  
                       ??___flsub 000E                         ??___fltol 000C                            _i_char 0018  
                     ?_fDISCHARGE 0000                            _i_disc 0016                  __end_of_read_ADC 0030  
                          _set_DC 0000                            _second 000A                            _timing 0000  
                       ??_getTime 0000                      _dc_res_count 001E                 __end_ofi1___fladd 01B1  
               __end_ofi1___fldiv 016F                 __end_ofi1___flmul 01FC                 __end_ofi1___fltol 0061  
     __end_of_command_interpreter 03ED      command_interpreter@operation 002E                         ??_scaling 0050  
     __end_of_UART_get_some_bytes 0017                   i1___fltol@sign1 0008                 __end_ofi1_getTime 0027  
       UART_get_some_bytes@length 0002                   ??_state_machine 001A                        ___flge@ff1 000E  
                      ___flge@ff2 0012                      ___xxtofl@arg 000A                      ___xxtofl@exp 0009  
                    ___xxtofl@val 0000       put_data_into_structure@data 0000           __end_of__initialization 0043  
                      ___fltol@f1 0008                      ?i1__Umul8_16 0000                       ?_fNEXTSTATE 0000  
                _UART_send_header 0000                     __end_of_fIDLE 001C                    read_ADC@ad_res 0009  
                   __end_of_fWAIT 002A                    __pcstackCOMMON 0000                      __pidataBANK1 0000  
                    __pidataBANK3 0000                      __pidataBANK4 0000                  _UART_send_string 0000  
command_interpreter@calc_checksum 002F           _converter_settings$1611 0016                 __end_of_fNEXTCELL 001A  
                       ?i1___flge 0000                        _cc_cv_mode 0000                  ?_fNEXTREPETITION 0000  
           __end_of_UART_get_byte 000B                         ?_Cell_OFF 0000            i1_UART_send_some_bytes 0000  
                       ?i1_set_DC 0000                           ??_fIDLE 0050                           ??_fWAIT 0050  
       i1_converter_settings$1748 0010                        __pbssBANK1 0000                        __pbssBANK3 0000  
                      __pbssBANK4 0000                        __pbssBANK5 0000         ??_put_data_into_structure 0002  
            __end_of_control_loop 0053                    i1___xxtofl@arg 000A                    i1___xxtofl@exp 0009  
                      _cell_count 0011                    i1___xxtofl@val 0000                 __end_of__Umul8_16 001F  
                      __pmaintext 0000                           ?___flge 000E                        __pintentry 0000  
         _converter_configuration 0023                           ?_set_DC 0000                 ?_interrupt_enable 0000  
                      ??i1___flge 0008                           ?_timing 0000                           _T1CKPS0 00C4  
                         _T1CKPS1 00C5                ??_interrupt_enable 0000                           _T1OSCEN 00C3  
                      ??_Cell_OFF 0000                         ?___xxtofl 0000                        ??i1_set_DC 000E  
                         _SP1BRGH 019C                           _SP1BRGL 019B               i1__Umul8_16@product 0004  
            _UART_send_some_bytes 0000                 ?i1_UART_send_byte 0000                           _TMR1CS0 00C6  
                         _TMR1CS1 00C7                ??i1_UART_send_byte 0000                           _Cell_ON 0000  
                         _fCHARGE 0000                         ?_read_ADC 0000        __end_of_calculate_checksum 0020  
                         _fDC_res 0000                           _nT1SYNC 00C2                           ___fladd 0000  
                         ___fldiv 0000                           ___flmul 0000                           ___flsub 0000  
                         ___fltol 0000   __end_of_put_data_into_structure 0018      __end_ofi1_converter_settings 0488  
                      _initialize 0000                      ??i1___xxtofl 0004                           __ptext1 0000  
                         __ptext2 0000                           __ptext3 0000                           _getTime 0000  
                         __ptext4 0000                           __ptext5 0000                           __ptext6 0000  
                         __ptext7 0000                           __ptext8 0000                           __ptext9 0000  
                     ?_cc_cv_mode 0010                        ??___xxtofl 0004                           _scaling 0000  
           ?_UART_send_some_bytes 0001                           _timeout 0008                      _fDC_res$1610 0016  
             _basic_configuration 002B                           clrloop0 0001              end_of_initialization 0043  
                      ??_read_ADC 0002        UART_send_some_bytes@length 0003                           init_ram 0000  
                         initloop 0001                     _calculate_avg 0000                __end_ofi1___xxtofl 0093  
                    ??_fDISCHARGE 0012                         i1_Cell_ON 0000                        _wait_count 0014  
              _repetition_counter 001D             i1__Umul8_16@word_mpld 0006                       ___fladd@grs 004D  
        __end_of_UART_send_header 000D                     ___xxtofl@sign 0008                         i1___fladd 0000  
                       i1___fldiv 0000                         i1___flmul 0000                       ___fldiv@grs 0022  
                       i1___fltol 0000                       ___fldiv@rem 001B              i1UART_send_byte@byte 0000  
        __end_of_UART_send_string 0014                         i1_getTime 0000                __end_of_fDISCHARGE 0195  
                     ___flmul@grs 0037                    ?_calculate_avg 0000                      ??_fNEXTSTATE 0050  
                 read_ADC@channel 0000                      _EOC_variable 0012                        ?i1_Cell_ON 0000  
                  __end_of___flge 007B                       ?_initialize 0000           ?i1_UART_send_some_bytes 0001  
                    _control_loop 0000                    __end_of_set_DC 0019            ??_UART_send_some_bytes 0003  
                  __end_of_timing 0018        __end_of_converter_settings 04A6                         _fNEXTCELL 0000  
             start_initialization 0000                    _UART_send_char 0000                       __end_of_ISR 006D  
                  _UART_send_byte 0000                       __end_of_abs 0017                        ?i1___fladd 0000  
              __end_of_fNEXTSTATE 0020                        ?i1___fldiv 0036                       __end_of_pid 01DF  
                      ?i1___flmul 001C                        ?i1___fltol 0000           command_interpreter@data 0017  
         command_interpreter@code 0031           command_interpreter@test 002D             __end_of_state_machine 0031  
                      ?i1_getTime 0000              i1_converter_settings 0000                          ??___flge 0016  
                       __Umul8_16 0000    __end_ofi1_UART_send_some_bytes 0013                       __pdataBANK1 0000  
                     __pdataBANK3 0000                       __pdataBANK4 0000          calculate_checksum@length 0000  
                        ??_set_DC 0050          cc_cv_mode@CC_mode_status 0014          calculate_checksum@result 0006  
                        ??_timing 0000                         ___fladd@a 0046                         ___fladd@b 0042  
          __end_of_UART_send_char 0008            __end_of_UART_send_byte 000A                         ___fldiv@a 000E  
                       ___fldiv@b 0012                        ?_fNEXTCELL 0000                         ___flmul@a 002C  
                       ___flmul@b 0028                         ___flsub@a 0014                         ___flsub@b 0018  
                       ___latbits 0002                     __pcstackBANK0 0000                     __pcstackBANK1 0000  
                   __pcstackBANK2 0000                     __pcstackBANK3 0000                     ??_log_control 0050  
    i1UART_send_some_bytes@length 0003                   i1___xxtofl@sign 0008                          ?_Cell_ON 0000  
                 ??_calculate_avg 0000                          ?_fCHARGE 0000             ?i1_converter_settings 0000  
               i1___fldiv@new_exp 0048            _test_configuration_ptr 0016                          ?_fDC_res 0000  
         UART_get_some_bytes@data 0000                      _log_data_ptr 001F          i1__Umul8_16@multiplicand 0000  
                        ?___fladd 0042                          ?___fldiv 000E                          ?___flmul 0028  
                        ?___flsub 0014                          ?___fltol 0008                       ??i1_Cell_ON 0000  
              _calculate_checksum 0000                        ?__Umul8_16 0000                  UART_send_char@bt 0000  
                    ??_cc_cv_mode 0050                          ?_getTime 0000                   ?_UART_send_char 0000  
             ?_calculate_checksum 0000                   ?_UART_send_byte 0000                          ?_scaling 0000  
                    _scaling$1608 0014                      _scaling$1609 0010         cc_cv_mode@current_voltage 0010  
                     ??i1___fladd 0008                       ??i1___fldiv 003E          ?_put_data_into_structure 0000  
                     ??i1___flmul 0024                       ??i1___fltol 0004                       ??i1_getTime 0000  
            ??_calculate_checksum 0003                         clear_ram0 0000               __end_of_log_control 0045  
              __end_of_cc_cv_mode 0089                          _PSMC1DCH 0824                          _PSMC1DCL 0823  
                        _PSMC1CLK 0814                          _PSMC1CON 0811                          _PSMC1MDL 0812  
                        _PSMC1PHH 0822                          _PSMC1PHL 0821                          _GO_nDONE 04E9  
                        _PSMC1PRH 0826                          _PSMC1PRL 0825                      _PSMC1CONbits 0811  
                        i1___flge 0000                        _ADCON0bits 009D                        _ADCON1bits 009E  
                      _ADCON2bits 009F             UART_send_string@st_pt 0001                          _Cell_OFF 0000  
                     ??_fNEXTCELL 0050                     _UART_get_byte 0000                          i1_set_DC 0000  
               ?_UART_send_header 0001                UART_send_byte@byte 0000                ??_UART_send_header 0003  
          ??i1_converter_settings 000C                 ?_UART_send_string 0001                       _EOD_voltage 0016  
     command_interpreter@checksum 002B                ??_UART_send_string 0003                     ??i1__Umul8_16 0002  
               ??_fNEXTREPETITION 0050                       ??__Umul8_16 0002               _command_interpreter 0000  
                    ??_initialize 0012               _UART_get_some_bytes 0000          UART_send_some_bytes@data 0001  
                  ?_UART_get_byte 0000                          _capacity 001A                          _pid$1605 003E  
                        _pid$1746 0042                          _pid$1747 0046                          ___xxtofl 0000  
                        _cell_max 0012                          __ptext10 0000                          __ptext11 0000  
                        __ptext20 0000                          __ptext12 0000                          __ptext21 0000  
                        __ptext13 0000                          __ptext30 0000                          __ptext22 0000  
                        __ptext14 0000                          __ptext31 0000                          __ptext23 0000  
                        __ptext15 0000                          __ptext40 0000                          __ptext32 0000  
                        __ptext24 0000                          __ptext16 0000                          __ptext41 0000  
                        __ptext33 0000                          __ptext25 0000                          __ptext17 0000  
                        __ptext50 0000                          __ptext42 0000                          __ptext34 0000  
                        __ptext26 0000                          __ptext18 0000                          __ptext51 0000  
                        __ptext43 0000                          __ptext35 0000                          __ptext27 0000  
                        __ptext19 0000                          __ptext52 0000                          __ptext44 0000  
                        __ptext36 0000                          __ptext28 0000                          __ptext53 0000  
                        __ptext45 0000                          __ptext37 0000                          __ptext54 0000  
                        __ptext46 0000                          __ptext38 0000                          __ptext55 0000  
                        __ptext47 0000                          __ptext39 0000                          __ptext56 0000  
                        __ptext48 0000                          __ptext57 0000                          __ptext49 0000  
                     _log_control 0000                  _interrupt_enable 0000              ?_command_interpreter 0000  
            ?_UART_get_some_bytes 0000                          _read_ADC 0000                _converter_settings 0000  
                        _log_data 0014                __end_of_initialize 013C                  i1_UART_send_byte 0000  
      i1UART_send_some_bytes@data 0001                        _RC1STAbits 019D         UART_send_header@operation 0001  
             ?_converter_settings 0000                        _CC_char_ki 0008                          int$flags 007E  
                      _CC_char_kp 000C               __end_ofi1__Umul8_16 001F                        _CC_disc_ki 0000  
                      _CC_disc_kp 0004              ??_converter_settings 0012            calculate_checksum@data 0001  
          calculate_checksum@code 0005         command_interpreter@length 0032             ??_command_interpreter 0014  
                        set_DC@dc 0010             ??_UART_get_some_bytes 0001                          intlevel1 0000* 
          i1__Umul8_16@multiplier 0008                        _OSCCONbits 0099                  ??_UART_send_char 0000  
                ??_UART_send_byte 0000                   _CC_char_disc_kd 001C                   ??_UART_get_byte 0000  
                   __pstringtext1 0000                     __pstringtext2 0000                     __pstringtext3 0000  
          __Umul8_16@multiplicand 0000             UART_send_header@start 0003       cc_cv_mode@reference_voltage 0012  
                   _EOPD_capacity 0014                     ___fladd@signs 004A              UART_send_header@code 0002  
                    ___fladd@aexp 004B                      ___fladd@bexp 004C             __end_of_calculate_avg 007D  
            __Umul8_16@multiplier 0008                       i1__Umul8_16 0000                 __Umul8_16@product 0004  
                   _EOPC_variable 0018  
