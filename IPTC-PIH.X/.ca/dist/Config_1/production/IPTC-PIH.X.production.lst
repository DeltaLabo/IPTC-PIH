

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Oct 17 14:39:34 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1786
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    16                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,delta=2
    74                           	psect	text49,local,class=CODE,merge=1,delta=2
    75                           	psect	text50,local,class=CODE,merge=1,delta=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2
    77                           	psect	text52,local,class=CODE,merge=1,delta=2
    78                           	psect	text53,local,class=CODE,merge=1,delta=2
    79                           	psect	text54,local,class=CODE,merge=1,delta=2
    80                           	psect	text55,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text56,local,class=CODE,merge=1,delta=2
    82                           	psect	text57,local,class=CODE,merge=1,delta=2
    83                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    85                           	dabs	1,0x7E,2
    86  0000                     
    87                           ; Version 2.40
    88                           ; Generated 17/11/2021 GMT
    89                           ; 
    90                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution. Publication is not required when
   104                           ;        this file is used in an embedded application.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC16F1786 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  0008                     	;# 
   131  0009                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0090                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0095                     	;# 
   160  0096                     	;# 
   161  0097                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009A                     	;# 
   165  009B                     	;# 
   166  009B                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  0111                     	;# 
   175  0112                     	;# 
   176  0113                     	;# 
   177  0114                     	;# 
   178  0115                     	;# 
   179  0116                     	;# 
   180  0117                     	;# 
   181  0118                     	;# 
   182  0119                     	;# 
   183  011A                     	;# 
   184  011B                     	;# 
   185  011C                     	;# 
   186  011D                     	;# 
   187  011D                     	;# 
   188  011D                     	;# 
   189  011E                     	;# 
   190  011F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  0191                     	;# 
   194  0191                     	;# 
   195  0192                     	;# 
   196  0193                     	;# 
   197  0193                     	;# 
   198  0193                     	;# 
   199  0194                     	;# 
   200  0195                     	;# 
   201  0196                     	;# 
   202  0197                     	;# 
   203  0199                     	;# 
   204  0199                     	;# 
   205  0199                     	;# 
   206  019A                     	;# 
   207  019A                     	;# 
   208  019A                     	;# 
   209  019B                     	;# 
   210  019B                     	;# 
   211  019B                     	;# 
   212  019B                     	;# 
   213  019B                     	;# 
   214  019C                     	;# 
   215  019C                     	;# 
   216  019C                     	;# 
   217  019D                     	;# 
   218  019D                     	;# 
   219  019D                     	;# 
   220  019E                     	;# 
   221  019E                     	;# 
   222  019E                     	;# 
   223  019F                     	;# 
   224  019F                     	;# 
   225  019F                     	;# 
   226  019F                     	;# 
   227  019F                     	;# 
   228  020C                     	;# 
   229  020D                     	;# 
   230  020E                     	;# 
   231  0210                     	;# 
   232  0211                     	;# 
   233  0211                     	;# 
   234  0212                     	;# 
   235  0212                     	;# 
   236  0213                     	;# 
   237  0213                     	;# 
   238  0214                     	;# 
   239  0214                     	;# 
   240  0215                     	;# 
   241  0215                     	;# 
   242  0215                     	;# 
   243  0215                     	;# 
   244  0216                     	;# 
   245  0216                     	;# 
   246  0217                     	;# 
   247  0217                     	;# 
   248  028C                     	;# 
   249  028D                     	;# 
   250  028E                     	;# 
   251  0291                     	;# 
   252  0291                     	;# 
   253  0292                     	;# 
   254  0293                     	;# 
   255  0298                     	;# 
   256  0298                     	;# 
   257  0299                     	;# 
   258  029A                     	;# 
   259  030C                     	;# 
   260  030D                     	;# 
   261  030E                     	;# 
   262  0311                     	;# 
   263  0311                     	;# 
   264  0312                     	;# 
   265  0313                     	;# 
   266  038C                     	;# 
   267  038D                     	;# 
   268  038E                     	;# 
   269  0390                     	;# 
   270  0391                     	;# 
   271  0392                     	;# 
   272  0393                     	;# 
   273  0394                     	;# 
   274  0395                     	;# 
   275  0396                     	;# 
   276  0397                     	;# 
   277  0398                     	;# 
   278  0399                     	;# 
   279  039D                     	;# 
   280  039E                     	;# 
   281  039F                     	;# 
   282  0511                     	;# 
   283  0513                     	;# 
   284  051A                     	;# 
   285  0811                     	;# 
   286  0812                     	;# 
   287  0813                     	;# 
   288  0814                     	;# 
   289  0815                     	;# 
   290  0816                     	;# 
   291  0817                     	;# 
   292  0818                     	;# 
   293  0819                     	;# 
   294  081A                     	;# 
   295  081B                     	;# 
   296  081C                     	;# 
   297  081D                     	;# 
   298  081E                     	;# 
   299  081F                     	;# 
   300  0820                     	;# 
   301  0821                     	;# 
   302  0821                     	;# 
   303  0822                     	;# 
   304  0823                     	;# 
   305  0823                     	;# 
   306  0824                     	;# 
   307  0825                     	;# 
   308  0825                     	;# 
   309  0826                     	;# 
   310  0827                     	;# 
   311  0827                     	;# 
   312  0828                     	;# 
   313  0829                     	;# 
   314  082A                     	;# 
   315  082B                     	;# 
   316  082C                     	;# 
   317  082D                     	;# 
   318  082E                     	;# 
   319  082F                     	;# 
   320  0831                     	;# 
   321  0832                     	;# 
   322  0833                     	;# 
   323  0834                     	;# 
   324  0835                     	;# 
   325  0836                     	;# 
   326  0837                     	;# 
   327  0838                     	;# 
   328  0839                     	;# 
   329  083A                     	;# 
   330  083B                     	;# 
   331  083C                     	;# 
   332  083D                     	;# 
   333  083E                     	;# 
   334  083F                     	;# 
   335  0840                     	;# 
   336  0841                     	;# 
   337  0841                     	;# 
   338  0842                     	;# 
   339  0843                     	;# 
   340  0843                     	;# 
   341  0844                     	;# 
   342  0845                     	;# 
   343  0845                     	;# 
   344  0846                     	;# 
   345  0847                     	;# 
   346  0847                     	;# 
   347  0848                     	;# 
   348  0849                     	;# 
   349  084A                     	;# 
   350  084B                     	;# 
   351  084C                     	;# 
   352  084D                     	;# 
   353  084E                     	;# 
   354  084F                     	;# 
   355  0851                     	;# 
   356  0852                     	;# 
   357  0853                     	;# 
   358  0854                     	;# 
   359  0855                     	;# 
   360  0856                     	;# 
   361  0857                     	;# 
   362  0858                     	;# 
   363  0859                     	;# 
   364  085A                     	;# 
   365  085B                     	;# 
   366  085C                     	;# 
   367  085D                     	;# 
   368  085E                     	;# 
   369  085F                     	;# 
   370  0860                     	;# 
   371  0861                     	;# 
   372  0861                     	;# 
   373  0862                     	;# 
   374  0863                     	;# 
   375  0863                     	;# 
   376  0864                     	;# 
   377  0865                     	;# 
   378  0865                     	;# 
   379  0866                     	;# 
   380  0867                     	;# 
   381  0867                     	;# 
   382  0868                     	;# 
   383  0869                     	;# 
   384  086A                     	;# 
   385  086B                     	;# 
   386  086C                     	;# 
   387  086D                     	;# 
   388  086E                     	;# 
   389  086F                     	;# 
   390  0FE4                     	;# 
   391  0FE5                     	;# 
   392  0FE6                     	;# 
   393  0FE7                     	;# 
   394  0FE8                     	;# 
   395  0FE9                     	;# 
   396  0FEA                     	;# 
   397  0FEB                     	;# 
   398  0FED                     	;# 
   399  0FEE                     	;# 
   400  0FEF                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  0010                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0013                     	;# 
   420  0014                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0016                     	;# 
   424  0017                     	;# 
   425  0018                     	;# 
   426  0019                     	;# 
   427  001A                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  008C                     	;# 
   431  008D                     	;# 
   432  008E                     	;# 
   433  0090                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009B                     	;# 
   446  009C                     	;# 
   447  009D                     	;# 
   448  009E                     	;# 
   449  009F                     	;# 
   450  010C                     	;# 
   451  010D                     	;# 
   452  010E                     	;# 
   453  0111                     	;# 
   454  0112                     	;# 
   455  0113                     	;# 
   456  0114                     	;# 
   457  0115                     	;# 
   458  0116                     	;# 
   459  0117                     	;# 
   460  0118                     	;# 
   461  0119                     	;# 
   462  011A                     	;# 
   463  011B                     	;# 
   464  011C                     	;# 
   465  011D                     	;# 
   466  011D                     	;# 
   467  011D                     	;# 
   468  011E                     	;# 
   469  011F                     	;# 
   470  018C                     	;# 
   471  018D                     	;# 
   472  0191                     	;# 
   473  0191                     	;# 
   474  0192                     	;# 
   475  0193                     	;# 
   476  0193                     	;# 
   477  0193                     	;# 
   478  0194                     	;# 
   479  0195                     	;# 
   480  0196                     	;# 
   481  0197                     	;# 
   482  0199                     	;# 
   483  0199                     	;# 
   484  0199                     	;# 
   485  019A                     	;# 
   486  019A                     	;# 
   487  019A                     	;# 
   488  019B                     	;# 
   489  019B                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019C                     	;# 
   494  019C                     	;# 
   495  019C                     	;# 
   496  019D                     	;# 
   497  019D                     	;# 
   498  019D                     	;# 
   499  019E                     	;# 
   500  019E                     	;# 
   501  019E                     	;# 
   502  019F                     	;# 
   503  019F                     	;# 
   504  019F                     	;# 
   505  019F                     	;# 
   506  019F                     	;# 
   507  020C                     	;# 
   508  020D                     	;# 
   509  020E                     	;# 
   510  0210                     	;# 
   511  0211                     	;# 
   512  0211                     	;# 
   513  0212                     	;# 
   514  0212                     	;# 
   515  0213                     	;# 
   516  0213                     	;# 
   517  0214                     	;# 
   518  0214                     	;# 
   519  0215                     	;# 
   520  0215                     	;# 
   521  0215                     	;# 
   522  0215                     	;# 
   523  0216                     	;# 
   524  0216                     	;# 
   525  0217                     	;# 
   526  0217                     	;# 
   527  028C                     	;# 
   528  028D                     	;# 
   529  028E                     	;# 
   530  0291                     	;# 
   531  0291                     	;# 
   532  0292                     	;# 
   533  0293                     	;# 
   534  0298                     	;# 
   535  0298                     	;# 
   536  0299                     	;# 
   537  029A                     	;# 
   538  030C                     	;# 
   539  030D                     	;# 
   540  030E                     	;# 
   541  0311                     	;# 
   542  0311                     	;# 
   543  0312                     	;# 
   544  0313                     	;# 
   545  038C                     	;# 
   546  038D                     	;# 
   547  038E                     	;# 
   548  0390                     	;# 
   549  0391                     	;# 
   550  0392                     	;# 
   551  0393                     	;# 
   552  0394                     	;# 
   553  0395                     	;# 
   554  0396                     	;# 
   555  0397                     	;# 
   556  0398                     	;# 
   557  0399                     	;# 
   558  039D                     	;# 
   559  039E                     	;# 
   560  039F                     	;# 
   561  0511                     	;# 
   562  0513                     	;# 
   563  051A                     	;# 
   564  0811                     	;# 
   565  0812                     	;# 
   566  0813                     	;# 
   567  0814                     	;# 
   568  0815                     	;# 
   569  0816                     	;# 
   570  0817                     	;# 
   571  0818                     	;# 
   572  0819                     	;# 
   573  081A                     	;# 
   574  081B                     	;# 
   575  081C                     	;# 
   576  081D                     	;# 
   577  081E                     	;# 
   578  081F                     	;# 
   579  0820                     	;# 
   580  0821                     	;# 
   581  0821                     	;# 
   582  0822                     	;# 
   583  0823                     	;# 
   584  0823                     	;# 
   585  0824                     	;# 
   586  0825                     	;# 
   587  0825                     	;# 
   588  0826                     	;# 
   589  0827                     	;# 
   590  0827                     	;# 
   591  0828                     	;# 
   592  0829                     	;# 
   593  082A                     	;# 
   594  082B                     	;# 
   595  082C                     	;# 
   596  082D                     	;# 
   597  082E                     	;# 
   598  082F                     	;# 
   599  0831                     	;# 
   600  0832                     	;# 
   601  0833                     	;# 
   602  0834                     	;# 
   603  0835                     	;# 
   604  0836                     	;# 
   605  0837                     	;# 
   606  0838                     	;# 
   607  0839                     	;# 
   608  083A                     	;# 
   609  083B                     	;# 
   610  083C                     	;# 
   611  083D                     	;# 
   612  083E                     	;# 
   613  083F                     	;# 
   614  0840                     	;# 
   615  0841                     	;# 
   616  0841                     	;# 
   617  0842                     	;# 
   618  0843                     	;# 
   619  0843                     	;# 
   620  0844                     	;# 
   621  0845                     	;# 
   622  0845                     	;# 
   623  0846                     	;# 
   624  0847                     	;# 
   625  0847                     	;# 
   626  0848                     	;# 
   627  0849                     	;# 
   628  084A                     	;# 
   629  084B                     	;# 
   630  084C                     	;# 
   631  084D                     	;# 
   632  084E                     	;# 
   633  084F                     	;# 
   634  0851                     	;# 
   635  0852                     	;# 
   636  0853                     	;# 
   637  0854                     	;# 
   638  0855                     	;# 
   639  0856                     	;# 
   640  0857                     	;# 
   641  0858                     	;# 
   642  0859                     	;# 
   643  085A                     	;# 
   644  085B                     	;# 
   645  085C                     	;# 
   646  085D                     	;# 
   647  085E                     	;# 
   648  085F                     	;# 
   649  0860                     	;# 
   650  0861                     	;# 
   651  0861                     	;# 
   652  0862                     	;# 
   653  0863                     	;# 
   654  0863                     	;# 
   655  0864                     	;# 
   656  0865                     	;# 
   657  0865                     	;# 
   658  0866                     	;# 
   659  0867                     	;# 
   660  0867                     	;# 
   661  0868                     	;# 
   662  0869                     	;# 
   663  086A                     	;# 
   664  086B                     	;# 
   665  086C                     	;# 
   666  086D                     	;# 
   667  086E                     	;# 
   668  086F                     	;# 
   669  0FE4                     	;# 
   670  0FE5                     	;# 
   671  0FE6                     	;# 
   672  0FE7                     	;# 
   673  0FE8                     	;# 
   674  0FE9                     	;# 
   675  0FEA                     	;# 
   676  0FEB                     	;# 
   677  0FED                     	;# 
   678  0FEE                     	;# 
   679  0FEF                     	;# 
   680  0000                     	;# 
   681  0001                     	;# 
   682  0002                     	;# 
   683  0003                     	;# 
   684  0004                     	;# 
   685  0005                     	;# 
   686  0006                     	;# 
   687  0007                     	;# 
   688  0008                     	;# 
   689  0009                     	;# 
   690  000A                     	;# 
   691  000B                     	;# 
   692  000C                     	;# 
   693  000D                     	;# 
   694  000E                     	;# 
   695  0010                     	;# 
   696  0011                     	;# 
   697  0012                     	;# 
   698  0013                     	;# 
   699  0014                     	;# 
   700  0015                     	;# 
   701  0016                     	;# 
   702  0016                     	;# 
   703  0017                     	;# 
   704  0018                     	;# 
   705  0019                     	;# 
   706  001A                     	;# 
   707  001B                     	;# 
   708  001C                     	;# 
   709  008C                     	;# 
   710  008D                     	;# 
   711  008E                     	;# 
   712  0090                     	;# 
   713  0091                     	;# 
   714  0092                     	;# 
   715  0093                     	;# 
   716  0094                     	;# 
   717  0095                     	;# 
   718  0096                     	;# 
   719  0097                     	;# 
   720  0098                     	;# 
   721  0099                     	;# 
   722  009A                     	;# 
   723  009B                     	;# 
   724  009B                     	;# 
   725  009C                     	;# 
   726  009D                     	;# 
   727  009E                     	;# 
   728  009F                     	;# 
   729  010C                     	;# 
   730  010D                     	;# 
   731  010E                     	;# 
   732  0111                     	;# 
   733  0112                     	;# 
   734  0113                     	;# 
   735  0114                     	;# 
   736  0115                     	;# 
   737  0116                     	;# 
   738  0117                     	;# 
   739  0118                     	;# 
   740  0119                     	;# 
   741  011A                     	;# 
   742  011B                     	;# 
   743  011C                     	;# 
   744  011D                     	;# 
   745  011D                     	;# 
   746  011D                     	;# 
   747  011E                     	;# 
   748  011F                     	;# 
   749  018C                     	;# 
   750  018D                     	;# 
   751  0191                     	;# 
   752  0191                     	;# 
   753  0192                     	;# 
   754  0193                     	;# 
   755  0193                     	;# 
   756  0193                     	;# 
   757  0194                     	;# 
   758  0195                     	;# 
   759  0196                     	;# 
   760  0197                     	;# 
   761  0199                     	;# 
   762  0199                     	;# 
   763  0199                     	;# 
   764  019A                     	;# 
   765  019A                     	;# 
   766  019A                     	;# 
   767  019B                     	;# 
   768  019B                     	;# 
   769  019B                     	;# 
   770  019B                     	;# 
   771  019B                     	;# 
   772  019C                     	;# 
   773  019C                     	;# 
   774  019C                     	;# 
   775  019D                     	;# 
   776  019D                     	;# 
   777  019D                     	;# 
   778  019E                     	;# 
   779  019E                     	;# 
   780  019E                     	;# 
   781  019F                     	;# 
   782  019F                     	;# 
   783  019F                     	;# 
   784  019F                     	;# 
   785  019F                     	;# 
   786  020C                     	;# 
   787  020D                     	;# 
   788  020E                     	;# 
   789  0210                     	;# 
   790  0211                     	;# 
   791  0211                     	;# 
   792  0212                     	;# 
   793  0212                     	;# 
   794  0213                     	;# 
   795  0213                     	;# 
   796  0214                     	;# 
   797  0214                     	;# 
   798  0215                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0216                     	;# 
   803  0216                     	;# 
   804  0217                     	;# 
   805  0217                     	;# 
   806  028C                     	;# 
   807  028D                     	;# 
   808  028E                     	;# 
   809  0291                     	;# 
   810  0291                     	;# 
   811  0292                     	;# 
   812  0293                     	;# 
   813  0298                     	;# 
   814  0298                     	;# 
   815  0299                     	;# 
   816  029A                     	;# 
   817  030C                     	;# 
   818  030D                     	;# 
   819  030E                     	;# 
   820  0311                     	;# 
   821  0311                     	;# 
   822  0312                     	;# 
   823  0313                     	;# 
   824  038C                     	;# 
   825  038D                     	;# 
   826  038E                     	;# 
   827  0390                     	;# 
   828  0391                     	;# 
   829  0392                     	;# 
   830  0393                     	;# 
   831  0394                     	;# 
   832  0395                     	;# 
   833  0396                     	;# 
   834  0397                     	;# 
   835  0398                     	;# 
   836  0399                     	;# 
   837  039D                     	;# 
   838  039E                     	;# 
   839  039F                     	;# 
   840  0511                     	;# 
   841  0513                     	;# 
   842  051A                     	;# 
   843  0811                     	;# 
   844  0812                     	;# 
   845  0813                     	;# 
   846  0814                     	;# 
   847  0815                     	;# 
   848  0816                     	;# 
   849  0817                     	;# 
   850  0818                     	;# 
   851  0819                     	;# 
   852  081A                     	;# 
   853  081B                     	;# 
   854  081C                     	;# 
   855  081D                     	;# 
   856  081E                     	;# 
   857  081F                     	;# 
   858  0820                     	;# 
   859  0821                     	;# 
   860  0821                     	;# 
   861  0822                     	;# 
   862  0823                     	;# 
   863  0823                     	;# 
   864  0824                     	;# 
   865  0825                     	;# 
   866  0825                     	;# 
   867  0826                     	;# 
   868  0827                     	;# 
   869  0827                     	;# 
   870  0828                     	;# 
   871  0829                     	;# 
   872  082A                     	;# 
   873  082B                     	;# 
   874  082C                     	;# 
   875  082D                     	;# 
   876  082E                     	;# 
   877  082F                     	;# 
   878  0831                     	;# 
   879  0832                     	;# 
   880  0833                     	;# 
   881  0834                     	;# 
   882  0835                     	;# 
   883  0836                     	;# 
   884  0837                     	;# 
   885  0838                     	;# 
   886  0839                     	;# 
   887  083A                     	;# 
   888  083B                     	;# 
   889  083C                     	;# 
   890  083D                     	;# 
   891  083E                     	;# 
   892  083F                     	;# 
   893  0840                     	;# 
   894  0841                     	;# 
   895  0841                     	;# 
   896  0842                     	;# 
   897  0843                     	;# 
   898  0843                     	;# 
   899  0844                     	;# 
   900  0845                     	;# 
   901  0845                     	;# 
   902  0846                     	;# 
   903  0847                     	;# 
   904  0847                     	;# 
   905  0848                     	;# 
   906  0849                     	;# 
   907  084A                     	;# 
   908  084B                     	;# 
   909  084C                     	;# 
   910  084D                     	;# 
   911  084E                     	;# 
   912  084F                     	;# 
   913  0851                     	;# 
   914  0852                     	;# 
   915  0853                     	;# 
   916  0854                     	;# 
   917  0855                     	;# 
   918  0856                     	;# 
   919  0857                     	;# 
   920  0858                     	;# 
   921  0859                     	;# 
   922  085A                     	;# 
   923  085B                     	;# 
   924  085C                     	;# 
   925  085D                     	;# 
   926  085E                     	;# 
   927  085F                     	;# 
   928  0860                     	;# 
   929  0861                     	;# 
   930  0861                     	;# 
   931  0862                     	;# 
   932  0863                     	;# 
   933  0863                     	;# 
   934  0864                     	;# 
   935  0865                     	;# 
   936  0865                     	;# 
   937  0866                     	;# 
   938  0867                     	;# 
   939  0867                     	;# 
   940  0868                     	;# 
   941  0869                     	;# 
   942  086A                     	;# 
   943  086B                     	;# 
   944  086C                     	;# 
   945  086D                     	;# 
   946  086E                     	;# 
   947  086F                     	;# 
   948  0FE4                     	;# 
   949  0FE5                     	;# 
   950  0FE6                     	;# 
   951  0FE7                     	;# 
   952  0FE8                     	;# 
   953  0FE9                     	;# 
   954  0FEA                     	;# 
   955  0FEB                     	;# 
   956  0FED                     	;# 
   957  0FEE                     	;# 
   958  0FEF                     	;# 
   959  0000                     	;# 
   960  0001                     	;# 
   961  0002                     	;# 
   962  0003                     	;# 
   963  0004                     	;# 
   964  0005                     	;# 
   965  0006                     	;# 
   966  0007                     	;# 
   967  0008                     	;# 
   968  0009                     	;# 
   969  000A                     	;# 
   970  000B                     	;# 
   971  000C                     	;# 
   972  000D                     	;# 
   973  000E                     	;# 
   974  0010                     	;# 
   975  0011                     	;# 
   976  0012                     	;# 
   977  0013                     	;# 
   978  0014                     	;# 
   979  0015                     	;# 
   980  0016                     	;# 
   981  0016                     	;# 
   982  0017                     	;# 
   983  0018                     	;# 
   984  0019                     	;# 
   985  001A                     	;# 
   986  001B                     	;# 
   987  001C                     	;# 
   988  008C                     	;# 
   989  008D                     	;# 
   990  008E                     	;# 
   991  0090                     	;# 
   992  0091                     	;# 
   993  0092                     	;# 
   994  0093                     	;# 
   995  0094                     	;# 
   996  0095                     	;# 
   997  0096                     	;# 
   998  0097                     	;# 
   999  0098                     	;# 
  1000  0099                     	;# 
  1001  009A                     	;# 
  1002  009B                     	;# 
  1003  009B                     	;# 
  1004  009C                     	;# 
  1005  009D                     	;# 
  1006  009E                     	;# 
  1007  009F                     	;# 
  1008  010C                     	;# 
  1009  010D                     	;# 
  1010  010E                     	;# 
  1011  0111                     	;# 
  1012  0112                     	;# 
  1013  0113                     	;# 
  1014  0114                     	;# 
  1015  0115                     	;# 
  1016  0116                     	;# 
  1017  0117                     	;# 
  1018  0118                     	;# 
  1019  0119                     	;# 
  1020  011A                     	;# 
  1021  011B                     	;# 
  1022  011C                     	;# 
  1023  011D                     	;# 
  1024  011D                     	;# 
  1025  011D                     	;# 
  1026  011E                     	;# 
  1027  011F                     	;# 
  1028  018C                     	;# 
  1029  018D                     	;# 
  1030  0191                     	;# 
  1031  0191                     	;# 
  1032  0192                     	;# 
  1033  0193                     	;# 
  1034  0193                     	;# 
  1035  0193                     	;# 
  1036  0194                     	;# 
  1037  0195                     	;# 
  1038  0196                     	;# 
  1039  0197                     	;# 
  1040  0199                     	;# 
  1041  0199                     	;# 
  1042  0199                     	;# 
  1043  019A                     	;# 
  1044  019A                     	;# 
  1045  019A                     	;# 
  1046  019B                     	;# 
  1047  019B                     	;# 
  1048  019B                     	;# 
  1049  019B                     	;# 
  1050  019B                     	;# 
  1051  019C                     	;# 
  1052  019C                     	;# 
  1053  019C                     	;# 
  1054  019D                     	;# 
  1055  019D                     	;# 
  1056  019D                     	;# 
  1057  019E                     	;# 
  1058  019E                     	;# 
  1059  019E                     	;# 
  1060  019F                     	;# 
  1061  019F                     	;# 
  1062  019F                     	;# 
  1063  019F                     	;# 
  1064  019F                     	;# 
  1065  020C                     	;# 
  1066  020D                     	;# 
  1067  020E                     	;# 
  1068  0210                     	;# 
  1069  0211                     	;# 
  1070  0211                     	;# 
  1071  0212                     	;# 
  1072  0212                     	;# 
  1073  0213                     	;# 
  1074  0213                     	;# 
  1075  0214                     	;# 
  1076  0214                     	;# 
  1077  0215                     	;# 
  1078  0215                     	;# 
  1079  0215                     	;# 
  1080  0215                     	;# 
  1081  0216                     	;# 
  1082  0216                     	;# 
  1083  0217                     	;# 
  1084  0217                     	;# 
  1085  028C                     	;# 
  1086  028D                     	;# 
  1087  028E                     	;# 
  1088  0291                     	;# 
  1089  0291                     	;# 
  1090  0292                     	;# 
  1091  0293                     	;# 
  1092  0298                     	;# 
  1093  0298                     	;# 
  1094  0299                     	;# 
  1095  029A                     	;# 
  1096  030C                     	;# 
  1097  030D                     	;# 
  1098  030E                     	;# 
  1099  0311                     	;# 
  1100  0311                     	;# 
  1101  0312                     	;# 
  1102  0313                     	;# 
  1103  038C                     	;# 
  1104  038D                     	;# 
  1105  038E                     	;# 
  1106  0390                     	;# 
  1107  0391                     	;# 
  1108  0392                     	;# 
  1109  0393                     	;# 
  1110  0394                     	;# 
  1111  0395                     	;# 
  1112  0396                     	;# 
  1113  0397                     	;# 
  1114  0398                     	;# 
  1115  0399                     	;# 
  1116  039D                     	;# 
  1117  039E                     	;# 
  1118  039F                     	;# 
  1119  0511                     	;# 
  1120  0513                     	;# 
  1121  051A                     	;# 
  1122  0811                     	;# 
  1123  0812                     	;# 
  1124  0813                     	;# 
  1125  0814                     	;# 
  1126  0815                     	;# 
  1127  0816                     	;# 
  1128  0817                     	;# 
  1129  0818                     	;# 
  1130  0819                     	;# 
  1131  081A                     	;# 
  1132  081B                     	;# 
  1133  081C                     	;# 
  1134  081D                     	;# 
  1135  081E                     	;# 
  1136  081F                     	;# 
  1137  0820                     	;# 
  1138  0821                     	;# 
  1139  0821                     	;# 
  1140  0822                     	;# 
  1141  0823                     	;# 
  1142  0823                     	;# 
  1143  0824                     	;# 
  1144  0825                     	;# 
  1145  0825                     	;# 
  1146  0826                     	;# 
  1147  0827                     	;# 
  1148  0827                     	;# 
  1149  0828                     	;# 
  1150  0829                     	;# 
  1151  082A                     	;# 
  1152  082B                     	;# 
  1153  082C                     	;# 
  1154  082D                     	;# 
  1155  082E                     	;# 
  1156  082F                     	;# 
  1157  0831                     	;# 
  1158  0832                     	;# 
  1159  0833                     	;# 
  1160  0834                     	;# 
  1161  0835                     	;# 
  1162  0836                     	;# 
  1163  0837                     	;# 
  1164  0838                     	;# 
  1165  0839                     	;# 
  1166  083A                     	;# 
  1167  083B                     	;# 
  1168  083C                     	;# 
  1169  083D                     	;# 
  1170  083E                     	;# 
  1171  083F                     	;# 
  1172  0840                     	;# 
  1173  0841                     	;# 
  1174  0841                     	;# 
  1175  0842                     	;# 
  1176  0843                     	;# 
  1177  0843                     	;# 
  1178  0844                     	;# 
  1179  0845                     	;# 
  1180  0845                     	;# 
  1181  0846                     	;# 
  1182  0847                     	;# 
  1183  0847                     	;# 
  1184  0848                     	;# 
  1185  0849                     	;# 
  1186  084A                     	;# 
  1187  084B                     	;# 
  1188  084C                     	;# 
  1189  084D                     	;# 
  1190  084E                     	;# 
  1191  084F                     	;# 
  1192  0851                     	;# 
  1193  0852                     	;# 
  1194  0853                     	;# 
  1195  0854                     	;# 
  1196  0855                     	;# 
  1197  0856                     	;# 
  1198  0857                     	;# 
  1199  0858                     	;# 
  1200  0859                     	;# 
  1201  085A                     	;# 
  1202  085B                     	;# 
  1203  085C                     	;# 
  1204  085D                     	;# 
  1205  085E                     	;# 
  1206  085F                     	;# 
  1207  0860                     	;# 
  1208  0861                     	;# 
  1209  0861                     	;# 
  1210  0862                     	;# 
  1211  0863                     	;# 
  1212  0863                     	;# 
  1213  0864                     	;# 
  1214  0865                     	;# 
  1215  0865                     	;# 
  1216  0866                     	;# 
  1217  0867                     	;# 
  1218  0867                     	;# 
  1219  0868                     	;# 
  1220  0869                     	;# 
  1221  086A                     	;# 
  1222  086B                     	;# 
  1223  086C                     	;# 
  1224  086D                     	;# 
  1225  086E                     	;# 
  1226  086F                     	;# 
  1227  0FE4                     	;# 
  1228  0FE5                     	;# 
  1229  0FE6                     	;# 
  1230  0FE7                     	;# 
  1231  0FE8                     	;# 
  1232  0FE9                     	;# 
  1233  0FEA                     	;# 
  1234  0FEB                     	;# 
  1235  0FED                     	;# 
  1236  0FEE                     	;# 
  1237  0FEF                     	;# 
  1238                           
  1239                           	psect	idataBANK1
  1240  0000'                    __pidataBANK1:
  1241                           
  1242                           ;initializer for _count
  1243  0000' 3400               	retlw	0
  1244  0001' 3404               	retlw	4
  1245                           
  1246                           ;initializer for _cmode
  1247  0002' 3401               	retlw	1
  1248                           
  1249                           	psect	idataBANK3
  1250  0000'                    __pidataBANK3:
  1251                           
  1252                           ;initializer for _CC_disc_ki
  1253  0000' 346F               	retlw	111
  1254  0001' 3412               	retlw	18
  1255  0002' 3483               	retlw	131
  1256  0003' 343A               	retlw	58
  1257                           
  1258                           ;initializer for _CC_disc_kp
  1259  0004' 34A6               	retlw	166
  1260  0005' 349B               	retlw	155
  1261  0006' 34C4               	retlw	196
  1262  0007' 343B               	retlw	59
  1263                           
  1264                           ;initializer for _CC_char_ki
  1265  0008' 340A               	retlw	10
  1266  0009' 34D7               	retlw	215
  1267  000A' 3423               	retlw	35
  1268  000B' 343B               	retlw	59
  1269                           
  1270                           ;initializer for _CC_char_kp
  1271  000C' 34F4               	retlw	244
  1272  000D' 34FD               	retlw	253
  1273  000E' 3454               	retlw	84
  1274  000F' 343C               	retlw	60
  1275                           
  1276                           ;initializer for _state
  1277  0010' 3401               	retlw	1
  1278                           
  1279                           ;initializer for _cell_count
  1280  0011' 3401               	retlw	1
  1281                           
  1282                           ;initializer for _SECF
  1283  0012' 3401               	retlw	1
  1284                           
  1285                           	psect	idataBANK4
  1286  0000'                    __pidataBANK4:
  1287                           
  1288                           ;initializer for _CV_kd
  1289  0000' 340A               	retlw	10
  1290  0001' 34D7               	retlw	215
  1291  0002' 34A3               	retlw	163
  1292  0003' 343C               	retlw	60
  1293                           
  1294                           ;initializer for _CV_ki
  1295  0004' 346F               	retlw	111
  1296  0005' 3412               	retlw	18
  1297  0006' 3403               	retlw	3
  1298  0007' 343A               	retlw	58
  1299                           
  1300                           ;initializer for _CV_kp
  1301  0008' 34FA               	retlw	250
  1302  0009' 34ED               	retlw	237
  1303  000A' 34EB               	retlw	235
  1304  000B' 343A               	retlw	58
  1305  0016                     _TMR1L	set	22
  1306  0017                     _TMR1H	set	23
  1307  006D                     _RB5	set	109
  1308  006C                     _RB4	set	108
  1309  006B                     _RB3	set	107
  1310  006A                     _RB2	set	106
  1311  008C                     _TXIF	set	140
  1312  0088                     _TMR1IF	set	136
  1313  005F                     _GIE	set	95
  1314  005E                     _PEIE	set	94
  1315  008D                     _RCIF	set	141
  1316  0075                     _RC5	set	117
  1317  0074                     _RC4	set	116
  1318  0073                     _RC3	set	115
  1319  00C5                     _T1CKPS1	set	197
  1320  00C4                     _T1CKPS0	set	196
  1321  00C7                     _TMR1CS1	set	199
  1322  00C6                     _TMR1CS0	set	198
  1323  00CF                     _TMR1GE	set	207
  1324  00C0                     _TMR1ON	set	192
  1325  00C3                     _T1OSCEN	set	195
  1326  00C2                     _nT1SYNC	set	194
  1327  009C                     _ADRESH	set	156
  1328  009B                     _ADRESL	set	155
  1329  009F                     _ADCON2bits	set	159
  1330  009E                     _ADCON1bits	set	158
  1331  009D                     _ADCON0bits	set	157
  1332  0099                     _OSCCONbits	set	153
  1333  0488                     _TMR1IE	set	1160
  1334  04E9                     _GO_nDONE	set	1257
  1335  048C                     _TXIE	set	1164
  1336  048D                     _RCIE	set	1165
  1337  0465                     _TRISA5	set	1125
  1338  0468                     _TRISB0	set	1128
  1339  0469                     _TRISB1	set	1129
  1340  0463                     _TRISA3	set	1123
  1341  0472                     _TRISC2	set	1138
  1342  046D                     _TRISB5	set	1133
  1343  046C                     _TRISB4	set	1132
  1344  046B                     _TRISB3	set	1131
  1345  046A                     _TRISB2	set	1130
  1346  0475                     _TRISC5	set	1141
  1347  0474                     _TRISC4	set	1140
  1348  0473                     _TRISC3	set	1139
  1349  04AF                     _nWPUEN	set	1199
  1350  08E9                     _RXSEL	set	2281
  1351  08EA                     _TXSEL	set	2282
  1352  019D                     _RC1STAbits	set	413
  1353  019A                     _TX1REG	set	410
  1354  0199                     _RC1REG	set	409
  1355  019B                     _SP1BRGL	set	411
  1356  019C                     _SP1BRGH	set	412
  1357  0CE9                     _OERR	set	3305
  1358  0CEE                     _RX9	set	3310
  1359  0CF6                     _TX9	set	3318
  1360  0CEC                     _CREN	set	3308
  1361  0CF5                     _TXEN	set	3317
  1362  0CEF                     _SPEN	set	3311
  1363  0CF4                     _SYNC	set	3316
  1364  0CFB                     _BRG16	set	3323
  1365  0CF2                     _BRGH	set	3314
  1366  0C65                     _ANSA5	set	3173
  1367  0C68                     _ANSB0	set	3176
  1368  0C69                     _ANSB1	set	3177
  1369  0C63                     _ANSA3	set	3171
  1370  0C6D                     _ANSB5	set	3181
  1371  0C6C                     _ANSB4	set	3180
  1372  0C6B                     _ANSB3	set	3179
  1373  0C6A                     _ANSB2	set	3178
  1374  1065                     _WPUA5	set	4197
  1375  1068                     _WPUB0	set	4200
  1376  1069                     _WPUB1	set	4201
  1377  1063                     _WPUA3	set	4195
  1378  1072                     _WPUC2	set	4210
  1379  106D                     _WPUB5	set	4205
  1380  106C                     _WPUB4	set	4204
  1381  106B                     _WPUB3	set	4203
  1382  106A                     _WPUB2	set	4202
  1383  1075                     _WPUC5	set	4213
  1384  1074                     _WPUC4	set	4212
  1385  1073                     _WPUC3	set	4211
  1386  1083                     _WPUE3	set	4227
  1387  0811                     _PSMC1CONbits	set	2065
  1388  0821                     _PSMC1PHL	set	2081
  1389  0822                     _PSMC1PHH	set	2082
  1390  0823                     _PSMC1DCL	set	2083
  1391  0824                     _PSMC1DCH	set	2084
  1392  0825                     _PSMC1PRL	set	2085
  1393  0826                     _PSMC1PRH	set	2086
  1394  0814                     _PSMC1CLK	set	2068
  1395  0812                     _PSMC1MDL	set	2066
  1396  0811                     _PSMC1CON	set	2065
  1397  40D8                     _P1DCST	set	16600
  1398  40D0                     _P1PHST	set	16592
  1399  40E0                     _P1PRST	set	16608
  1400  40AA                     _P1OEC	set	16554
  1401  40B2                     _P1POLC	set	16562
  1402  4172                     _P1STRC	set	16754
  1403                           
  1404                           	psect	stringtext1
  1405  0000'                    __pstringtext1:
  1406  0000'                    STR_2:
  1407  0000' 3454               	retlw	84	;'T'
  1408  0001' 3449               	retlw	73	;'I'
  1409  0002' 344D               	retlw	77	;'M'
  1410  0003' 3449               	retlw	73	;'I'
  1411  0004' 344E               	retlw	78	;'N'
  1412  0005' 3447               	retlw	71	;'G'
  1413  0006' 345F               	retlw	95	;'_'
  1414  0007' 3445               	retlw	69	;'E'
  1415  0008' 3452               	retlw	82	;'R'
  1416  0009' 3452               	retlw	82	;'R'
  1417  000A' 344F               	retlw	79	;'O'
  1418  000B' 3452               	retlw	82	;'R'
  1419  000C' 3400               	retlw	0
  1420                           
  1421                           	psect	stringtext2
  1422  0000'                    __pstringtext2:
  1423  0000'                    STR_1:
  1424  0000' 344F               	retlw	79	;'O'
  1425  0001' 3445               	retlw	69	;'E'
  1426  0002' 3452               	retlw	82	;'R'
  1427  0003' 3452               	retlw	82	;'R'
  1428  0004' 345F               	retlw	95	;'_'
  1429  0005' 3445               	retlw	69	;'E'
  1430  0006' 3452               	retlw	82	;'R'
  1431  0007' 3452               	retlw	82	;'R'
  1432  0008' 344F               	retlw	79	;'O'
  1433  0009' 3452               	retlw	82	;'R'
  1434  000A' 3400               	retlw	0
  1435                           
  1436                           	psect	stringtext3
  1437  0000'                    __pstringtext3:
  1438                           
  1439                           	psect	cinit
  1440  0000'                    start_initialization:	
  1441                           ; #config settings
  1442                           
  1443  0000'                    __initialization:
  1444                           
  1445                           ; Initialize objects allocated to BANK1
  1446  0000' 3000'              	movlw	low __pidataBANK1
  1447  0001' 0084               	movwf	4
  1448  0002' 3000'              	movlw	(high __pidataBANK1)| (0+128)
  1449  0003' 0085               	movwf	5
  1450  0004' 3000'              	movlw	low __pdataBANK1
  1451  0005' 0086               	movwf	6
  1452  0006' 3000'              	movlw	high __pdataBANK1
  1453  0007' 0087               	movwf	7
  1454  0008' 3003               	movlw	3
  1455  0009' 3180' 2000' 3180'  	fcall	init_ram
  1456                           
  1457                           ; Initialize objects allocated to BANK3
  1458  000C' 3000'              	movlw	low __pidataBANK3
  1459  000D' 0084               	movwf	4
  1460  000E' 3000'              	movlw	(high __pidataBANK3)| (0+128)
  1461  000F' 0085               	movwf	5
  1462  0010' 3000'              	movlw	low __pdataBANK3
  1463  0011' 0086               	movwf	6
  1464  0012' 3000'              	movlw	high __pdataBANK3
  1465  0013' 0087               	movwf	7
  1466  0014' 3013               	movlw	19
  1467  0015' 3180' 2000' 3180'  	fcall	init_ram
  1468                           
  1469                           ; Initialize objects allocated to BANK4
  1470  0018' 3000'              	movlw	low __pidataBANK4
  1471  0019' 0084               	movwf	4
  1472  001A' 3000'              	movlw	(high __pidataBANK4)| (0+128)
  1473  001B' 0085               	movwf	5
  1474  001C' 3000'              	movlw	low __pdataBANK4
  1475  001D' 0086               	movwf	6
  1476  001E' 3000'              	movlw	high __pdataBANK4
  1477  001F' 0087               	movwf	7
  1478  0020' 300C               	movlw	12
  1479  0021' 3180' 2000' 3180'  	fcall	init_ram
  1480                           
  1481                           ; Clear objects allocated to BANK1
  1482  0024' 3000'              	movlw	low __pbssBANK1
  1483  0025' 0084               	movwf	4
  1484  0026' 3000'              	movlw	high __pbssBANK1
  1485  0027' 0085               	movwf	5
  1486  0028' 3018               	movlw	24
  1487  0029' 3180' 2000' 3180'  	fcall	clear_ram0
  1488                           
  1489                           ; Clear objects allocated to BANK3
  1490  002C' 3000'              	movlw	low __pbssBANK3
  1491  002D' 0084               	movwf	4
  1492  002E' 3000'              	movlw	high __pbssBANK3
  1493  002F' 0085               	movwf	5
  1494  0030' 3020               	movlw	32
  1495  0031' 3180' 2000' 3180'  	fcall	clear_ram0
  1496                           
  1497                           ; Clear objects allocated to BANK4
  1498  0034' 3000'              	movlw	low __pbssBANK4
  1499  0035' 0084               	movwf	4
  1500  0036' 3000'              	movlw	high __pbssBANK4
  1501  0037' 0085               	movwf	5
  1502  0038' 303C               	movlw	60
  1503  0039' 3180' 2000' 3180'  	fcall	clear_ram0
  1504                           
  1505                           ; Clear objects allocated to BANK5
  1506  003C' 3000'              	movlw	low __pbssBANK5
  1507  003D' 0084               	movwf	4
  1508  003E' 3000'              	movlw	high __pbssBANK5
  1509  003F' 0085               	movwf	5
  1510  0040' 3031               	movlw	49
  1511  0041' 3180' 2000'        	fcall	clear_ram0
  1512  0043'                    end_of_initialization:	
  1513                           ;End of C runtime variable initialization code
  1514                           
  1515  0043'                    __end_of__initialization:
  1516  0043' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1517  0044' 0020               	movlb	0
  1518  0045' 3180' 2800'        	ljmp	_main	;jump to C main() function
  1519                           
  1520                           	psect	bssBANK1
  1521  0000'                    __pbssBANK1:
  1522  0000'                    _er:
  1523  0000'                    	ds	4
  1524  0004'                    _iacum:
  1525  0004'                    	ds	3
  1526  0007'                    _vacum:
  1527  0007'                    	ds	3
  1528  000A'                    _iref:
  1529  000A'                    	ds	2
  1530  000C'                    _i:
  1531  000C'                    	ds	2
  1532  000E'                    _v:
  1533  000E'                    	ds	2
  1534  0010'                    _conv:
  1535  0010'                    	ds	1
  1536  0011'                    _counter_state:
  1537  0011'                    	ds	1
  1538  0012'                    _cell_max:
  1539  0012'                    	ds	1
  1540  0013'                    _SRXF:
  1541  0013'                    	ds	1
  1542  0014'                    _start:
  1543  0014'                    	ds	1
  1544  0015'                    _converter_configuration_ptr:
  1545  0015'                    	ds	1
  1546  0016'                    _test_configuration_ptr:
  1547  0016'                    	ds	1
  1548  0017'                    _basic_configuration_ptr:
  1549  0017'                    	ds	1
  1550                           
  1551                           	psect	dataBANK1
  1552  0000'                    __pdataBANK1:
  1553  0000'                    _count:
  1554  0000'                    	ds	2
  1555  0002'                    _cmode:
  1556  0002'                    	ds	1
  1557                           
  1558                           	psect	bssBANK3
  1559  0000'                    __pbssBANK3:
  1560  0000'                    _pidt:
  1561  0000'                    	ds	4
  1562  0004'                    _qavg:
  1563  0004'                    	ds	4
  1564  0008'                    _timeout:
  1565  0008'                    	ds	2
  1566  000A'                    _second:
  1567  000A'                    	ds	2
  1568  000C'                    _vmax:
  1569  000C'                    	ds	2
  1570  000E'                    _iavg:
  1571  000E'                    	ds	2
  1572  0010'                    _vavg:
  1573  0010'                    	ds	2
  1574  0012'                    _EOC_variable:
  1575  0012'                    	ds	2
  1576  0014'                    _wait_count:
  1577  0014'                    	ds	2
  1578  0016'                    _i_disc:
  1579  0016'                    	ds	2
  1580  0018'                    _i_char:
  1581  0018'                    	ds	2
  1582  001A'                    _capacity:
  1583  001A'                    	ds	2
  1584  001C'                    _CC_char_disc_kd:
  1585  001C'                    	ds	1
  1586  001D'                    _repetition_counter:
  1587  001D'                    	ds	1
  1588  001E'                    _dc_res_count:
  1589  001E'                    	ds	1
  1590  001F'                    _log_data_ptr:
  1591  001F'                    	ds	1
  1592                           
  1593                           	psect	dataBANK3
  1594  0000'                    __pdataBANK3:
  1595  0000'                    _CC_disc_ki:
  1596  0000'                    	ds	4
  1597  0004'                    _CC_disc_kp:
  1598  0004'                    	ds	4
  1599  0008'                    _CC_char_ki:
  1600  0008'                    	ds	4
  1601  000C'                    _CC_char_kp:
  1602  000C'                    	ds	4
  1603  0010'                    _state:
  1604  0010'                    	ds	1
  1605  0011'                    _cell_count:
  1606  0011'                    	ds	1
  1607  0012'                    _SECF:
  1608  0012'                    	ds	1
  1609                           
  1610                           	psect	bssBANK4
  1611  0000'                    __pbssBANK4:
  1612  0000'                    _vref:
  1613  0000'                    	ds	4
  1614  0004'                    _kd:
  1615  0004'                    	ds	4
  1616  0008'                    _ki:
  1617  0008'                    	ds	4
  1618  000C'                    _kp:
  1619  000C'                    	ds	4
  1620  0010'                    _pidi:
  1621  0010'                    	ds	4
  1622  0014'                    _EOPD_capacity:
  1623  0014'                    	ds	2
  1624  0016'                    _EOD_voltage:
  1625  0016'                    	ds	2
  1626  0018'                    _EOPC_variable:
  1627  0018'                    	ds	2
  1628  001A'                    _test_configuration:
  1629  001A'                    	ds	17
  1630  002B'                    _basic_configuration:
  1631  002B'                    	ds	17
  1632                           
  1633                           	psect	dataBANK4
  1634  0000'                    __pdataBANK4:
  1635  0000'                    _CV_kd:
  1636  0000'                    	ds	4
  1637  0004'                    _CV_ki:
  1638  0004'                    	ds	4
  1639  0008'                    _CV_kp:
  1640  0008'                    	ds	4
  1641                           
  1642                           	psect	bssBANK5
  1643  0000'                    __pbssBANK5:
  1644  0000'                    command_interpreter@F5995:
  1645  0000'                    	ds	20
  1646  0014'                    _log_data:
  1647  0014'                    	ds	15
  1648  0023'                    _converter_configuration:
  1649  0023'                    	ds	14
  1650                           
  1651                           	psect	inittext
  1652  0000'                    init_ram:
  1653  0000' 00FE               	movwf	126
  1654  0001'                    initloop:
  1655  0001' 0012               	moviw fsr0++
  1656  0002' 001E               	movwi fsr1++
  1657  0003' 0BFE               	decfsz	126,f
  1658  0004' 2800'              	goto	initloop
  1659  0005' 3400               	retlw	0
  1660                           
  1661                           	psect	clrtext
  1662  0000'                    clear_ram0:	
  1663                           ;	Called with FSR0 containing the base address, and
  1664                           ;	WREG with the size to clear
  1665                           
  1666  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
  1667  0001'                    clrloop0:
  1668  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
  1669  0002' 3101               	addfsr 0,1
  1670  0003' 0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1671  0004' 2800'              	goto	clrloop0	;have we reached the end yet?
  1672  0005' 3400               	retlw	0	;all done for this memory range, return
  1673                           
  1674                           	psect	cstackBANK3
  1675  0000'                    __pcstackBANK3:
  1676  0000'                    ??___fladd:
  1677                           
  1678                           ; 1 bytes @ 0x0
  1679  0000'                    	ds	8
  1680  0008'                    ?___fltol:
  1681  0008'                    ___fltol@f1:	
  1682                           ; 4 bytes @ 0x8
  1683                           
  1684                           
  1685                           ; 4 bytes @ 0x8
  1686  0008'                    	ds	4
  1687  000C'                    ??___fltol:
  1688                           
  1689                           ; 1 bytes @ 0xC
  1690  000C'                    	ds	4
  1691  0010'                    ?_cc_cv_mode:
  1692  0010'                    set_DC@dc:	
  1693                           ; 1 bytes @ 0x10
  1694                           
  1695  0010'                    cc_cv_mode@current_voltage:	
  1696                           ; 2 bytes @ 0x10
  1697                           
  1698  0010'                    _scaling$1609:	
  1699                           ; 2 bytes @ 0x10
  1700                           
  1701                           
  1702                           ; 4 bytes @ 0x10
  1703  0010'                    	ds	2
  1704  0012'                    ??_converter_settings:
  1705  0012'                    ??_fDISCHARGE:	
  1706                           ; 1 bytes @ 0x12
  1707                           
  1708  0012'                    ??_fCHARGE:	
  1709                           ; 1 bytes @ 0x12
  1710                           
  1711  0012'                    ??_fDC_res:	
  1712                           ; 1 bytes @ 0x12
  1713                           
  1714  0012'                    ??_initialize:	
  1715                           ; 1 bytes @ 0x12
  1716                           
  1717  0012'                    cc_cv_mode@reference_voltage:	
  1718                           ; 1 bytes @ 0x12
  1719                           
  1720                           
  1721                           ; 2 bytes @ 0x12
  1722  0012'                    	ds	2
  1723  0014'                    cc_cv_mode@CC_mode_status:
  1724  0014'                    _scaling$1608:	
  1725                           ; 1 bytes @ 0x14
  1726                           
  1727                           
  1728                           ; 4 bytes @ 0x14
  1729  0014'                    	ds	2
  1730  0016'                    _fDC_res$1610:
  1731  0016'                    _converter_settings$1611:	
  1732                           ; 4 bytes @ 0x16
  1733                           
  1734                           
  1735                           ; 4 bytes @ 0x16
  1736  0016'                    	ds	4
  1737  001A'                    ??_state_machine:
  1738                           
  1739                           ; 1 bytes @ 0x1A
  1740  001A'                    	ds	2
  1741  001C'                    ??_main:
  1742                           
  1743                           ; 1 bytes @ 0x1C
  1744  001C'                    	ds	1
  1745                           
  1746                           	psect	cstackBANK2
  1747  0000'                    __pcstackBANK2:
  1748  0000'                    ??_Cell_OFF:
  1749  0000'                    ??_UART_send_byte:	
  1750                           ; 1 bytes @ 0x0
  1751                           
  1752  0000'                    ??_getTime:	
  1753                           ; 1 bytes @ 0x0
  1754                           
  1755  0000'                    ??_interrupt_enable:	
  1756                           ; 1 bytes @ 0x0
  1757                           
  1758  0000'                    ??_Cell_ON:	
  1759                           ; 1 bytes @ 0x0
  1760                           
  1761  0000'                    ?__Umul8_16:	
  1762                           ; 1 bytes @ 0x0
  1763                           
  1764  0000'                    ?___xxtofl:	
  1765                           ; 2 bytes @ 0x0
  1766                           
  1767  0000'                    UART_send_byte@byte:	
  1768                           ; 4 bytes @ 0x0
  1769                           
  1770  0000'                    __Umul8_16@multiplicand:	
  1771                           ; 1 bytes @ 0x0
  1772                           
  1773  0000'                    ___xxtofl@val:	
  1774                           ; 1 bytes @ 0x0
  1775                           
  1776                           
  1777                           ; 4 bytes @ 0x0
  1778  0000'                    	ds	1
  1779  0001'                    ?_UART_send_some_bytes:
  1780  0001'                    UART_send_some_bytes@data:	
  1781                           ; 1 bytes @ 0x1
  1782                           
  1783                           
  1784                           ; 2 bytes @ 0x1
  1785  0001'                    	ds	1
  1786  0002'                    ??__Umul8_16:
  1787                           
  1788                           ; 1 bytes @ 0x2
  1789  0002'                    	ds	1
  1790  0003'                    ??_UART_send_some_bytes:
  1791  0003'                    UART_send_some_bytes@length:	
  1792                           ; 1 bytes @ 0x3
  1793                           
  1794                           
  1795                           ; 1 bytes @ 0x3
  1796  0003'                    	ds	1
  1797  0004'                    ??___xxtofl:
  1798  0004'                    __Umul8_16@product:	
  1799                           ; 1 bytes @ 0x4
  1800                           
  1801                           
  1802                           ; 2 bytes @ 0x4
  1803  0004'                    	ds	2
  1804  0006'                    __Umul8_16@word_mpld:
  1805                           
  1806                           ; 2 bytes @ 0x6
  1807  0006'                    	ds	2
  1808  0008'                    __Umul8_16@multiplier:
  1809  0008'                    ___xxtofl@sign:	
  1810                           ; 1 bytes @ 0x8
  1811                           
  1812                           
  1813                           ; 1 bytes @ 0x8
  1814  0008'                    	ds	1
  1815  0009'                    ___xxtofl@exp:
  1816                           
  1817                           ; 1 bytes @ 0x9
  1818  0009'                    	ds	1
  1819  000A'                    ___xxtofl@arg:
  1820                           
  1821                           ; 4 bytes @ 0xA
  1822  000A'                    	ds	4
  1823  000E'                    ?___flge:
  1824  000E'                    ?___fldiv:	
  1825                           ; 1 bit 
  1826                           
  1827  000E'                    ___flge@ff1:	
  1828                           ; 4 bytes @ 0xE
  1829                           
  1830  000E'                    ___fldiv@a:	
  1831                           ; 4 bytes @ 0xE
  1832                           
  1833                           
  1834                           ; 4 bytes @ 0xE
  1835  000E'                    	ds	4
  1836  0012'                    ___flge@ff2:
  1837  0012'                    ___fldiv@b:	
  1838                           ; 4 bytes @ 0x12
  1839                           
  1840                           
  1841                           ; 4 bytes @ 0x12
  1842  0012'                    	ds	4
  1843  0016'                    ??___flge:
  1844  0016'                    ??___fldiv:	
  1845                           ; 1 bytes @ 0x16
  1846                           
  1847                           
  1848                           ; 1 bytes @ 0x16
  1849  0016'                    	ds	5
  1850  001B'                    ___fldiv@rem:
  1851                           
  1852                           ; 4 bytes @ 0x1B
  1853  001B'                    	ds	4
  1854  001F'                    ___fldiv@sign:
  1855                           
  1856                           ; 1 bytes @ 0x1F
  1857  001F'                    	ds	1
  1858  0020'                    ___fldiv@new_exp:
  1859                           
  1860                           ; 2 bytes @ 0x20
  1861  0020'                    	ds	2
  1862  0022'                    ___fldiv@grs:
  1863                           
  1864                           ; 4 bytes @ 0x22
  1865  0022'                    	ds	4
  1866  0026'                    ___fldiv@bexp:
  1867                           
  1868                           ; 1 bytes @ 0x26
  1869  0026'                    	ds	1
  1870  0027'                    ___fldiv@aexp:
  1871                           
  1872                           ; 1 bytes @ 0x27
  1873  0027'                    	ds	1
  1874  0028'                    ?___flmul:
  1875  0028'                    ___flmul@b:	
  1876                           ; 4 bytes @ 0x28
  1877                           
  1878                           
  1879                           ; 4 bytes @ 0x28
  1880  0028'                    	ds	4
  1881  002C'                    ___flmul@a:
  1882                           
  1883                           ; 4 bytes @ 0x2C
  1884  002C'                    	ds	4
  1885  0030'                    ??___flmul:
  1886                           
  1887                           ; 1 bytes @ 0x30
  1888  0030'                    	ds	5
  1889  0035'                    ___flmul@sign:
  1890                           
  1891                           ; 1 bytes @ 0x35
  1892  0035'                    	ds	1
  1893  0036'                    ___flmul@grs:
  1894                           
  1895                           ; 4 bytes @ 0x36
  1896  0036'                    	ds	4
  1897  003A'                    ___flmul@aexp:
  1898                           
  1899                           ; 1 bytes @ 0x3A
  1900  003A'                    	ds	1
  1901  003B'                    ___flmul@bexp:
  1902                           
  1903                           ; 1 bytes @ 0x3B
  1904  003B'                    	ds	1
  1905  003C'                    ___flmul@prod:
  1906                           
  1907                           ; 4 bytes @ 0x3C
  1908  003C'                    	ds	4
  1909  0040'                    ___flmul@temp:
  1910                           
  1911                           ; 2 bytes @ 0x40
  1912  0040'                    	ds	2
  1913  0042'                    ?___fladd:
  1914  0042'                    ___fladd@b:	
  1915                           ; 4 bytes @ 0x42
  1916                           
  1917                           
  1918                           ; 4 bytes @ 0x42
  1919  0042'                    	ds	4
  1920  0046'                    ___fladd@a:
  1921                           
  1922                           ; 4 bytes @ 0x46
  1923  0046'                    	ds	4
  1924  004A'                    ___fladd@signs:
  1925                           
  1926                           ; 1 bytes @ 0x4A
  1927  004A'                    	ds	1
  1928  004B'                    ___fladd@aexp:
  1929                           
  1930                           ; 1 bytes @ 0x4B
  1931  004B'                    	ds	1
  1932  004C'                    ___fladd@bexp:
  1933                           
  1934                           ; 1 bytes @ 0x4C
  1935  004C'                    	ds	1
  1936  004D'                    ___fladd@grs:
  1937                           
  1938                           ; 1 bytes @ 0x4D
  1939  004D'                    	ds	1
  1940  004E'                    ___fltol@sign1:
  1941                           
  1942                           ; 1 bytes @ 0x4E
  1943  004E'                    	ds	1
  1944  004F'                    ___fltol@exp1:
  1945                           
  1946                           ; 1 bytes @ 0x4F
  1947  004F'                    	ds	1
  1948  0050'                    ??_set_DC:
  1949  0050'                    ??_fIDLE:	
  1950                           ; 1 bytes @ 0x50
  1951                           
  1952  0050'                    ??_fWAIT:	
  1953                           ; 1 bytes @ 0x50
  1954                           
  1955  0050'                    ??_fNEXTSTATE:	
  1956                           ; 1 bytes @ 0x50
  1957                           
  1958  0050'                    ??_fNEXTCELL:	
  1959                           ; 1 bytes @ 0x50
  1960                           
  1961  0050'                    ??_fNEXTREPETITION:	
  1962                           ; 1 bytes @ 0x50
  1963                           
  1964  0050'                    ??_cc_cv_mode:	
  1965                           ; 1 bytes @ 0x50
  1966                           
  1967  0050'                    ??_scaling:	
  1968                           ; 1 bytes @ 0x50
  1969                           
  1970  0050'                    ??_log_control:	
  1971                           ; 1 bytes @ 0x50
  1972                           
  1973                           
  1974                           	psect	cstackBANK1
  1975  0000'                    __pcstackBANK1:	
  1976                           ; 1 bytes @ 0x50
  1977                           
  1978  0000'                    ?i1___fltol:
  1979  0000'                    i1___fltol@f1:	
  1980                           ; 4 bytes @ 0x0
  1981                           
  1982                           
  1983                           ; 4 bytes @ 0x0
  1984  0000'                    	ds	4
  1985  0004'                    ??i1___fltol:
  1986                           
  1987                           ; 1 bytes @ 0x4
  1988  0004'                    	ds	4
  1989  0008'                    i1___fltol@sign1:
  1990                           
  1991                           ; 1 bytes @ 0x8
  1992  0008'                    	ds	1
  1993  0009'                    i1___fltol@exp1:
  1994                           
  1995                           ; 1 bytes @ 0x9
  1996  0009'                    	ds	1
  1997  000A'                    i1set_DC@dc:
  1998                           
  1999                           ; 2 bytes @ 0xA
  2000  000A'                    	ds	2
  2001  000C'                    ??i1_converter_settings:
  2002                           
  2003                           ; 1 bytes @ 0xC
  2004  000C'                    	ds	4
  2005  0010'                    i1_converter_settings$1748:
  2006                           
  2007                           ; 4 bytes @ 0x10
  2008  0010'                    	ds	4
  2009  0014'                    ??_command_interpreter:
  2010                           
  2011                           ; 1 bytes @ 0x14
  2012  0014'                    	ds	3
  2013  0017'                    command_interpreter@data:
  2014                           
  2015                           ; 20 bytes @ 0x17
  2016  0017'                    	ds	20
  2017  002B'                    command_interpreter@checksum:
  2018                           
  2019                           ; 2 bytes @ 0x2B
  2020  002B'                    	ds	2
  2021  002D'                    command_interpreter@test:
  2022                           
  2023                           ; 1 bytes @ 0x2D
  2024  002D'                    	ds	1
  2025  002E'                    command_interpreter@operation:
  2026                           
  2027                           ; 1 bytes @ 0x2E
  2028  002E'                    	ds	1
  2029  002F'                    command_interpreter@calc_checksum:
  2030                           
  2031                           ; 2 bytes @ 0x2F
  2032  002F'                    	ds	2
  2033  0031'                    command_interpreter@code:
  2034                           
  2035                           ; 1 bytes @ 0x31
  2036  0031'                    	ds	1
  2037  0032'                    command_interpreter@length:
  2038                           
  2039                           ; 1 bytes @ 0x32
  2040  0032'                    	ds	1
  2041  0033'                    ??_ISR:
  2042                           
  2043                           ; 1 bytes @ 0x33
  2044  0033'                    	ds	2
  2045                           
  2046                           	psect	cstackCOMMON
  2047  0000'                    __pcstackCOMMON:
  2048  0000'                    ?i1___flge:
  2049  0000'                    ?_Cell_OFF:	
  2050                           ; 1 bit 
  2051                           
  2052  0000'                    ?_set_DC:	
  2053                           ; 1 bytes @ 0x0
  2054                           
  2055  0000'                    ?_UART_get_byte:	
  2056                           ; 1 bytes @ 0x0
  2057                           
  2058  0000'                    ??_UART_get_byte:	
  2059                           ; 1 bytes @ 0x0
  2060                           
  2061  0000'                    ?_UART_get_some_bytes:	
  2062                           ; 1 bytes @ 0x0
  2063                           
  2064  0000'                    ?_UART_send_byte:	
  2065                           ; 1 bytes @ 0x0
  2066                           
  2067  0000'                    ?_put_data_into_structure:	
  2068                           ; 1 bytes @ 0x0
  2069                           
  2070  0000'                    ?_converter_settings:	
  2071                           ; 1 bytes @ 0x0
  2072                           
  2073  0000'                    ?_getTime:	
  2074                           ; 1 bytes @ 0x0
  2075                           
  2076  0000'                    ?_state_machine:	
  2077                           ; 1 bytes @ 0x0
  2078                           
  2079  0000'                    ?_fIDLE:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082  0000'                    ?_fDISCHARGE:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085  0000'                    ?_fCHARGE:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088  0000'                    ?_fDC_res:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091  0000'                    ?_fWAIT:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094  0000'                    ?_fNEXTSTATE:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097  0000'                    ?_fNEXTCELL:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100  0000'                    ?_fNEXTREPETITION:	
  2101                           ; 1 bytes @ 0x0
  2102                           
  2103  0000'                    ?_initialize:	
  2104                           ; 1 bytes @ 0x0
  2105                           
  2106  0000'                    ?_command_interpreter:	
  2107                           ; 1 bytes @ 0x0
  2108                           
  2109  0000'                    ?_control_loop:	
  2110                           ; 1 bytes @ 0x0
  2111                           
  2112  0000'                    ?_scaling:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115  0000'                    ?_log_control:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118  0000'                    ?_timing:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121  0000'                    ??_timing:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124  0000'                    ?_calculate_avg:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127  0000'                    ??_calculate_avg:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130  0000'                    ?_interrupt_enable:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133  0000'                    ?_UART_send_char:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136  0000'                    ??_UART_send_char:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139  0000'                    ?_Cell_ON:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142  0000'                    ?_main:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145  0000'                    ?_ISR:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148  0000'                    ?i1_set_DC:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151  0000'                    ?i1_UART_send_byte:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154  0000'                    ??i1_UART_send_byte:	
  2155                           ; 1 bytes @ 0x0
  2156                           
  2157  0000'                    ?i1_Cell_ON:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160  0000'                    ??i1_Cell_ON:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163  0000'                    ?i1_getTime:	
  2164                           ; 1 bytes @ 0x0
  2165                           
  2166  0000'                    ??i1_getTime:	
  2167                           ; 1 bytes @ 0x0
  2168                           
  2169  0000'                    ?i1_converter_settings:	
  2170                           ; 1 bytes @ 0x0
  2171                           
  2172  0000'                    ?_calculate_checksum:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175  0000'                    ?_abs:	
  2176                           ; 2 bytes @ 0x0
  2177                           
  2178  0000'                    ?_read_ADC:	
  2179                           ; 2 bytes @ 0x0
  2180                           
  2181  0000'                    ?i1__Umul8_16:	
  2182                           ; 2 bytes @ 0x0
  2183                           
  2184  0000'                    ?i1___xxtofl:	
  2185                           ; 2 bytes @ 0x0
  2186                           
  2187  0000'                    UART_send_char@bt:	
  2188                           ; 4 bytes @ 0x0
  2189                           
  2190  0000'                    UART_get_some_bytes@data:	
  2191                           ; 1 bytes @ 0x0
  2192                           
  2193  0000'                    calculate_checksum@length:	
  2194                           ; 1 bytes @ 0x0
  2195                           
  2196  0000'                    put_data_into_structure@data:	
  2197                           ; 1 bytes @ 0x0
  2198                           
  2199  0000'                    i1UART_send_byte@byte:	
  2200                           ; 1 bytes @ 0x0
  2201                           
  2202  0000'                    i1__Umul8_16@multiplicand:	
  2203                           ; 1 bytes @ 0x0
  2204                           
  2205  0000'                    read_ADC@channel:	
  2206                           ; 1 bytes @ 0x0
  2207                           
  2208  0000'                    abs@a:	
  2209                           ; 2 bytes @ 0x0
  2210                           
  2211  0000'                    i1___flge@ff1:	
  2212                           ; 2 bytes @ 0x0
  2213                           
  2214  0000'                    i1___xxtofl@val:	
  2215                           ; 4 bytes @ 0x0
  2216                           
  2217                           
  2218                           ; 4 bytes @ 0x0
  2219  0000'                    	ds	1
  2220  0001'                    ??_UART_get_some_bytes:
  2221  0001'                    ?_UART_send_header:	
  2222                           ; 1 bytes @ 0x1
  2223                           
  2224  0001'                    ?_UART_send_string:	
  2225                           ; 1 bytes @ 0x1
  2226                           
  2227  0001'                    ?i1_UART_send_some_bytes:	
  2228                           ; 1 bytes @ 0x1
  2229                           
  2230  0001'                    UART_send_header@operation:	
  2231                           ; 1 bytes @ 0x1
  2232                           
  2233  0001'                    put_data_into_structure@structure:	
  2234                           ; 1 bytes @ 0x1
  2235                           
  2236  0001'                    calculate_checksum@data:	
  2237                           ; 1 bytes @ 0x1
  2238                           
  2239  0001'                    UART_send_string@st_pt:	
  2240                           ; 2 bytes @ 0x1
  2241                           
  2242  0001'                    i1UART_send_some_bytes@data:	
  2243                           ; 2 bytes @ 0x1
  2244                           
  2245                           
  2246                           ; 2 bytes @ 0x1
  2247  0001'                    	ds	1
  2248  0002'                    ??_put_data_into_structure:
  2249  0002'                    ??_abs:	
  2250                           ; 1 bytes @ 0x2
  2251                           
  2252  0002'                    ??_read_ADC:	
  2253                           ; 1 bytes @ 0x2
  2254                           
  2255  0002'                    ??i1__Umul8_16:	
  2256                           ; 1 bytes @ 0x2
  2257                           
  2258  0002'                    UART_send_header@code:	
  2259                           ; 1 bytes @ 0x2
  2260                           
  2261  0002'                    UART_get_some_bytes@length:	
  2262                           ; 1 bytes @ 0x2
  2263                           
  2264                           
  2265                           ; 1 bytes @ 0x2
  2266  0002'                    	ds	1
  2267  0003'                    ??_calculate_checksum:
  2268  0003'                    ??_UART_send_header:	
  2269                           ; 1 bytes @ 0x3
  2270                           
  2271  0003'                    ??_UART_send_string:	
  2272                           ; 1 bytes @ 0x3
  2273                           
  2274  0003'                    ??i1_UART_send_some_bytes:	
  2275                           ; 1 bytes @ 0x3
  2276                           
  2277  0003'                    UART_send_header@start:	
  2278                           ; 1 bytes @ 0x3
  2279                           
  2280  0003'                    put_data_into_structure@length:	
  2281                           ; 1 bytes @ 0x3
  2282                           
  2283  0003'                    i1UART_send_some_bytes@length:	
  2284                           ; 1 bytes @ 0x3
  2285                           
  2286                           
  2287                           ; 1 bytes @ 0x3
  2288  0003'                    	ds	1
  2289  0004'                    ??i1___xxtofl:
  2290  0004'                    i1__Umul8_16@product:	
  2291                           ; 1 bytes @ 0x4
  2292                           
  2293  0004'                    i1___flge@ff2:	
  2294                           ; 2 bytes @ 0x4
  2295                           
  2296                           
  2297                           ; 4 bytes @ 0x4
  2298  0004'                    	ds	1
  2299  0005'                    calculate_checksum@code:
  2300                           
  2301                           ; 1 bytes @ 0x5
  2302  0005'                    	ds	1
  2303  0006'                    calculate_checksum@result:
  2304  0006'                    i1__Umul8_16@word_mpld:	
  2305                           ; 2 bytes @ 0x6
  2306                           
  2307                           
  2308                           ; 2 bytes @ 0x6
  2309  0006'                    	ds	2
  2310  0008'                    ??i1___flge:
  2311  0008'                    i1__Umul8_16@multiplier:	
  2312                           ; 1 bytes @ 0x8
  2313                           
  2314  0008'                    i1___xxtofl@sign:	
  2315                           ; 1 bytes @ 0x8
  2316                           
  2317                           
  2318                           ; 1 bytes @ 0x8
  2319  0008'                    	ds	1
  2320  0009'                    i1___xxtofl@exp:
  2321  0009'                    read_ADC@ad_res:	
  2322                           ; 1 bytes @ 0x9
  2323                           
  2324                           
  2325                           ; 2 bytes @ 0x9
  2326  0009'                    	ds	1
  2327  000A'                    i1___xxtofl@arg:
  2328                           
  2329                           ; 4 bytes @ 0xA
  2330  000A'                    	ds	4
  2331  000E'                    ??_pid:
  2332  000E'                    ??_control_loop:	
  2333                           ; 1 bytes @ 0xE
  2334                           
  2335  000E'                    ??___flsub:	
  2336                           ; 1 bytes @ 0xE
  2337                           
  2338  000E'                    ??i1_set_DC:	
  2339                           ; 1 bytes @ 0xE
  2340                           
  2341                           
  2342                           	psect	cstackBANK0
  2343  0000'                    __pcstackBANK0:	
  2344                           ; 1 bytes @ 0xE
  2345                           
  2346  0000'                    ?i1___fladd:
  2347  0000'                    i1___fladd@b:	
  2348                           ; 4 bytes @ 0x0
  2349                           
  2350                           
  2351                           ; 4 bytes @ 0x0
  2352  0000'                    	ds	4
  2353  0004'                    i1___fladd@a:
  2354                           
  2355                           ; 4 bytes @ 0x4
  2356  0004'                    	ds	4
  2357  0008'                    ??i1___fladd:
  2358                           
  2359                           ; 1 bytes @ 0x8
  2360  0008'                    	ds	8
  2361  0010'                    i1___fladd@signs:
  2362                           
  2363                           ; 1 bytes @ 0x10
  2364  0010'                    	ds	1
  2365  0011'                    i1___fladd@aexp:
  2366                           
  2367                           ; 1 bytes @ 0x11
  2368  0011'                    	ds	1
  2369  0012'                    i1___fladd@bexp:
  2370                           
  2371                           ; 1 bytes @ 0x12
  2372  0012'                    	ds	1
  2373  0013'                    i1___fladd@grs:
  2374                           
  2375                           ; 1 bytes @ 0x13
  2376  0013'                    	ds	1
  2377  0014'                    ?___flsub:
  2378  0014'                    ___flsub@a:	
  2379                           ; 4 bytes @ 0x14
  2380                           
  2381                           
  2382                           ; 4 bytes @ 0x14
  2383  0014'                    	ds	4
  2384  0018'                    ___flsub@b:
  2385                           
  2386                           ; 4 bytes @ 0x18
  2387  0018'                    	ds	4
  2388  001C'                    ?i1___flmul:
  2389  001C'                    i1___flmul@b:	
  2390                           ; 4 bytes @ 0x1C
  2391                           
  2392                           
  2393                           ; 4 bytes @ 0x1C
  2394  001C'                    	ds	4
  2395  0020'                    i1___flmul@a:
  2396                           
  2397                           ; 4 bytes @ 0x20
  2398  0020'                    	ds	4
  2399  0024'                    ??i1___flmul:
  2400                           
  2401                           ; 1 bytes @ 0x24
  2402  0024'                    	ds	5
  2403  0029'                    i1___flmul@sign:
  2404                           
  2405                           ; 1 bytes @ 0x29
  2406  0029'                    	ds	1
  2407  002A'                    i1___flmul@grs:
  2408                           
  2409                           ; 4 bytes @ 0x2A
  2410  002A'                    	ds	4
  2411  002E'                    i1___flmul@aexp:
  2412                           
  2413                           ; 1 bytes @ 0x2E
  2414  002E'                    	ds	1
  2415  002F'                    i1___flmul@bexp:
  2416                           
  2417                           ; 1 bytes @ 0x2F
  2418  002F'                    	ds	1
  2419  0030'                    i1___flmul@prod:
  2420                           
  2421                           ; 4 bytes @ 0x30
  2422  0030'                    	ds	4
  2423  0034'                    i1___flmul@temp:
  2424                           
  2425                           ; 2 bytes @ 0x34
  2426  0034'                    	ds	2
  2427  0036'                    ?_pid:
  2428  0036'                    ?i1___fldiv:	
  2429                           ; 1 bytes @ 0x36
  2430                           
  2431  0036'                    pid@feedback:	
  2432                           ; 4 bytes @ 0x36
  2433                           
  2434  0036'                    i1___fldiv@a:	
  2435                           ; 4 bytes @ 0x36
  2436                           
  2437                           
  2438                           ; 4 bytes @ 0x36
  2439  0036'                    	ds	4
  2440  003A'                    pid@setpoint:
  2441  003A'                    i1___fldiv@b:	
  2442                           ; 4 bytes @ 0x3A
  2443                           
  2444                           
  2445                           ; 4 bytes @ 0x3A
  2446  003A'                    	ds	4
  2447  003E'                    ??i1___fldiv:
  2448  003E'                    _pid$1605:	
  2449                           ; 1 bytes @ 0x3E
  2450                           
  2451                           
  2452                           ; 4 bytes @ 0x3E
  2453  003E'                    	ds	4
  2454  0042'                    _pid$1746:
  2455                           
  2456                           ; 4 bytes @ 0x42
  2457  0042'                    	ds	1
  2458  0043'                    i1___fldiv@rem:
  2459                           
  2460                           ; 4 bytes @ 0x43
  2461  0043'                    	ds	3
  2462  0046'                    _pid$1747:
  2463                           
  2464                           ; 4 bytes @ 0x46
  2465  0046'                    	ds	1
  2466  0047'                    i1___fldiv@sign:
  2467                           
  2468                           ; 1 bytes @ 0x47
  2469  0047'                    	ds	1
  2470  0048'                    i1___fldiv@new_exp:
  2471                           
  2472                           ; 2 bytes @ 0x48
  2473  0048'                    	ds	2
  2474  004A'                    i1___fldiv@grs:
  2475                           
  2476                           ; 4 bytes @ 0x4A
  2477  004A'                    	ds	4
  2478  004E'                    i1___fldiv@bexp:
  2479                           
  2480                           ; 1 bytes @ 0x4E
  2481  004E'                    	ds	1
  2482  004F'                    i1___fldiv@aexp:
  2483                           
  2484                           ; 1 bytes @ 0x4F
  2485  004F'                    	ds	1
  2486                           
  2487                           	psect	maintext
  2488  0000'                    __pmaintext:	
  2489 ;;
  2490 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2491 ;;
  2492 ;; *************** function _main *****************
  2493 ;; Defined at:
  2494 ;;		line 24 in file "main.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : B1F/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2510 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  2511 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  2512 ;;Total ram usage:        1 bytes
  2513 ;; Hardware stack levels required when called: 13
  2514 ;; This function calls:
  2515 ;;		_cc_cv_mode
  2516 ;;		_initialize
  2517 ;;		_interrupt_enable
  2518 ;;		_log_control
  2519 ;;		_scaling
  2520 ;;		_state_machine
  2521 ;; This function is called by:
  2522 ;;		Startup code after reset
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526  0000'                    _main:	
  2527                           ;psect for function _main
  2528                           
  2529                           
  2530                           ;main.c: 26:     initialize();
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2534  0000' 3180' 2000' 3180'  	fcall	_initialize
  2535                           
  2536                           ;main.c: 27:     _delay((unsigned long)((10)*(32000000/4000.0)));
  2537  0003' 3068               	movlw	104
  2538  0004' 0023               	movlb	3	; select bank3
  2539  0005' 0080'              	movwf	??_main^(0+384)
  2540  0006' 30E4               	movlw	228
  2541  0007'                    u7427:
  2542  0007' 0B89               	decfsz	9,f
  2543  0008' 2800'              	goto	u7427
  2544  0009' 0B80'              	decfsz	??_main^(0+384),f
  2545  000A' 2800'              	goto	u7427
  2546  000B' 0000               	nop
  2547                           
  2548                           ;main.c: 28:     interrupt_enable();
  2549  000C' 3180' 2000' 3180'  	fcall	_interrupt_enable
  2550  000F'                    l7475:
  2551                           
  2552                           ;main.c: 30:     {;main.c: 31:         if (SECF)
  2553  000F' 0023               	movlb	3	; select bank3
  2554  0010' 0800'              	movf	_SECF^(0+384),w
  2555  0011' 1903               	btfsc	3,2
  2556  0012' 2800'              	goto	l7475
  2557                           
  2558                           ;main.c: 32:         {;main.c: 33:             scaling();
  2559  0013' 3180' 2000' 3180'  	fcall	_scaling
  2560                           
  2561                           ;main.c: 34:             state_machine();
  2562  0016' 3180' 2000' 3180'  	fcall	_state_machine
  2563                           
  2564                           ;main.c: 35:             log_control();
  2565  0019' 3180' 2000' 3180'  	fcall	_log_control
  2566                           
  2567                           ;main.c: 36:             if (basic_configuration.version == 1){
  2568  001C' 0024               	movlb	4	; select bank4
  2569  001D' 0300'              	decf	_basic_configuration^(0+512),w
  2570  001E' 1D03               	btfss	3,2
  2571  001F' 2800'              	goto	l7487
  2572                           
  2573                           ;main.c: 37:                 cc_cv_mode(vavg, basic_configuration.const_voltage, cmode);
  2574  0020' 0023               	movlb	3	; select bank3
  2575  0021' 0800'              	movf	(_vavg+1)^(0+384),w
  2576  0022' 0080'              	movwf	(cc_cv_mode@current_voltage+1)^(0+384)
  2577  0023' 0800'              	movf	_vavg^(0+384),w
  2578  0024' 0080'              	movwf	cc_cv_mode@current_voltage^(0+384)
  2579  0025' 0024               	movlb	4	; select bank4
  2580  0026' 0801'              	movf	((_basic_configuration+1)^(0+512)+1),w
  2581  0027' 0023               	movlb	3	; select bank3
  2582  0028' 0080'              	movwf	(cc_cv_mode@reference_voltage+1)^(0+384)
  2583  0029' 0024               	movlb	4	; select bank4
  2584  002A' 0801'              	movf	(_basic_configuration^(0+512)+1),w
  2585  002B' 0023               	movlb	3	; select bank3
  2586  002C' 0080'              	movwf	cc_cv_mode@reference_voltage^(0+384)
  2587  002D' 0021               	movlb	1	; select bank1
  2588  002E' 0800'              	movf	_cmode^(0+128),w
  2589  002F' 0023               	movlb	3	; select bank3
  2590  0030' 0080'              	movwf	cc_cv_mode@CC_mode_status^(0+384)
  2591  0031' 3180' 2000' 3180'  	fcall	_cc_cv_mode
  2592  0034'                    l7487:
  2593                           
  2594                           ;main.c: 39:             SECF = 0;
  2595  0034' 0023               	movlb	3	; select bank3
  2596  0035' 0180'              	clrf	_SECF^(0+384)
  2597  0036' 2800'              	goto	l7475
  2598  0037'                    __end_of_main:
  2599                           
  2600                           	psect	text1
  2601  0000'                    __ptext1:	
  2602 ;; *************** function _state_machine *****************
  2603 ;; Defined at:
  2604 ;;		line 18 in file "state_machine_b.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;		None
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2620 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  2621 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  2622 ;;Total ram usage:        2 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; Hardware stack levels required when called: 12
  2625 ;; This function calls:
  2626 ;;		_fCHARGE
  2627 ;;		_fDC_res
  2628 ;;		_fDISCHARGE
  2629 ;;		_fIDLE
  2630 ;;		_fWAIT
  2631 ;; This function is called by:
  2632 ;;		_main
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636  0000'                    _state_machine:	
  2637                           ;psect for function _state_machine
  2638                           
  2639                           
  2640                           ;state_machine_b.c: 20:     switch(state){
  2641                           
  2642                           ;incstack = 0
  2643                           ; Regs used in _state_machine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2644  0000' 2800'              	goto	l6943
  2645  0001'                    l6927:
  2646                           
  2647                           ;state_machine_b.c: 23:                 fIDLE();
  2648  0001' 3180' 2000'        	fcall	_fIDLE
  2649                           
  2650                           ;state_machine_b.c: 24:                 break;
  2651  0003' 0008               	return
  2652  0004'                    l6929:
  2653                           
  2654                           ;state_machine_b.c: 28:                 fDISCHARGE();
  2655  0004' 3180' 2000'        	fcall	_fDISCHARGE
  2656                           
  2657                           ;state_machine_b.c: 29:                 break;
  2658  0006' 0008               	return
  2659  0007'                    l6933:
  2660                           
  2661                           ;state_machine_b.c: 36:                 fCHARGE();
  2662  0007' 3180' 2000'        	fcall	_fCHARGE
  2663                           
  2664                           ;state_machine_b.c: 37:                 break;
  2665  0009' 0008               	return
  2666  000A'                    l6937:
  2667                           
  2668                           ;state_machine_b.c: 44:                 fDC_res();
  2669  000A' 3180' 2000'        	fcall	_fDC_res
  2670                           
  2671                           ;state_machine_b.c: 45:                 break;
  2672  000C' 0008               	return
  2673  000D'                    l6939:
  2674                           
  2675                           ;state_machine_b.c: 49:                 fWAIT();
  2676  000D' 3180' 2000'        	fcall	_fWAIT
  2677                           
  2678                           ;state_machine_b.c: 50:                 break;
  2679  000F' 0008               	return
  2680  0010'                    l6943:
  2681  0010' 0023               	movlb	3	; select bank3
  2682  0011' 0800'              	movf	_state^(0+384),w
  2683  0012' 0080'              	movwf	??_state_machine^(0+384)
  2684  0013' 0181'              	clrf	(??_state_machine^(0+384)+1)
  2685                           
  2686                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2687                           ; Switch size 1, requested type "simple"
  2688                           ; Number of cases is 1, Range of values is 0 to 0
  2689                           ; switch strategies available:
  2690                           ; Name         Instructions Cycles
  2691                           ; simple_byte            4     3 (average)
  2692                           ; direct_byte            8     6 (fixed)
  2693                           ; jumptable            260     6 (fixed)
  2694                           ;	Chosen strategy is simple_byte
  2695  0014' 0800'              	movf	(??_state_machine+1)^(0+384),w
  2696  0015' 3A00               	xorlw	0	; case 0
  2697  0016' 1903               	skipnz
  2698  0017' 2800'              	goto	l7757
  2699  0018' 2800'              	goto	l818
  2700  0019'                    l7757:
  2701                           
  2702                           ; Switch size 1, requested type "simple"
  2703                           ; Number of cases is 7, Range of values is 1 to 13
  2704                           ; switch strategies available:
  2705                           ; Name         Instructions Cycles
  2706                           ; simple_byte           22    12 (average)
  2707                           ; direct_byte           35     9 (fixed)
  2708                           ; jumptable            263     9 (fixed)
  2709                           ;	Chosen strategy is simple_byte
  2710  0019' 0800'              	movf	??_state_machine^(0+384),w
  2711  001A' 3A01               	xorlw	1	; case 1
  2712  001B' 1903               	skipnz
  2713  001C' 2800'              	goto	l6927
  2714  001D' 3A02               	xorlw	2	; case 3
  2715  001E' 1903               	skipnz
  2716  001F' 2800'              	goto	l6933
  2717  0020' 3A06               	xorlw	6	; case 5
  2718  0021' 1903               	skipnz
  2719  0022' 2800'              	goto	l6933
  2720  0023' 3A02               	xorlw	2	; case 7
  2721  0024' 1903               	skipnz
  2722  0025' 2800'              	goto	l6929
  2723  0026' 3A0E               	xorlw	14	; case 9
  2724  0027' 1903               	skipnz
  2725  0028' 2800'              	goto	l6929
  2726  0029' 3A02               	xorlw	2	; case 11
  2727  002A' 1903               	skipnz
  2728  002B' 2800'              	goto	l6937
  2729  002C' 3A06               	xorlw	6	; case 13
  2730  002D' 1903               	skipnz
  2731  002E' 2800'              	goto	l6939
  2732  002F' 2800'              	goto	l818
  2733  0030'                    l818:
  2734  0030' 0008               	return
  2735  0031'                    __end_of_state_machine:
  2736                           
  2737                           	psect	text2
  2738  0000'                    __ptext2:	
  2739 ;; *************** function _fWAIT *****************
  2740 ;; Defined at:
  2741 ;;		line 162 in file "state_machine_b.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; Hardware stack levels required when called: 11
  2762 ;; This function calls:
  2763 ;;		_Cell_OFF
  2764 ;;		_fNEXTSTATE
  2765 ;;		_set_DC
  2766 ;; This function is called by:
  2767 ;;		_state_machine
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771  0000'                    _fWAIT:	
  2772                           ;psect for function _fWAIT
  2773                           
  2774                           
  2775                           ;state_machine_b.c: 164:     { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50.0; set_DC(
      +                          ); Cell_OFF();};
  2776                           
  2777                           ;incstack = 0
  2778                           ; Regs used in _fWAIT: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2779  0000' 0020               	movlb	0	; select bank0
  2780  0001' 118E               	bcf	14,3	;volatile
  2781  0002' 120E               	bcf	14,4	;volatile
  2782  0003' 0021               	movlb	1	; select bank1
  2783  0004' 0180'              	clrf	_conv^(0+128)
  2784  0005' 0020               	movlb	0	; select bank0
  2785  0006' 128E               	bcf	14,5	;volatile
  2786  0007' 3042               	movlw	66
  2787  0008' 0023               	movlb	3	; select bank3
  2788  0009' 0080'              	movwf	(_pidt+3)^(0+384)
  2789  000A' 3048               	movlw	72
  2790  000B' 0080'              	movwf	(_pidt+2)^(0+384)
  2791  000C' 3000               	movlw	0
  2792  000D' 0080'              	movwf	(_pidt+1)^(0+384)
  2793  000E' 3000               	movlw	0
  2794  000F' 0080'              	movwf	_pidt^(0+384)
  2795  0010' 3180' 2000' 3180'  	fcall	_set_DC
  2796  0013' 3180' 2000' 3180'  	fcall	_Cell_OFF
  2797                           
  2798                           ;state_machine_b.c: 165:     second = wait_count;
  2799  0016' 0023               	movlb	3	; select bank3
  2800  0017' 0800'              	movf	(_wait_count+1)^(0+384),w
  2801  0018' 0080'              	movwf	(_second+1)^(0+384)
  2802  0019' 0800'              	movf	_wait_count^(0+384),w
  2803  001A' 0080'              	movwf	_second^(0+384)
  2804                           
  2805                           ;state_machine_b.c: 166:     if (wait_count) wait_count--;
  2806  001B' 0800'              	movf	_wait_count^(0+384),w
  2807  001C' 0400'              	iorwf	(_wait_count+1)^(0+384),w
  2808  001D' 1903               	btfsc	3,2
  2809  001E' 2800'              	goto	l6241
  2810  001F' 3001               	movlw	1
  2811  0020' 0280'              	subwf	_wait_count^(0+384),f
  2812  0021' 3000               	movlw	0
  2813  0022' 3B80'              	subwfb	(_wait_count+1)^(0+384),f
  2814  0023'                    l6241:
  2815                           
  2816                           ;state_machine_b.c: 167:     if(!wait_count) fNEXTSTATE();
  2817  0023' 0800'              	movf	_wait_count^(0+384),w
  2818  0024' 0400'              	iorwf	(_wait_count+1)^(0+384),w
  2819  0025' 1D03               	btfss	3,2
  2820  0026' 0008               	return
  2821  0027' 3180' 2000'        	fcall	_fNEXTSTATE
  2822  0029' 0008               	return
  2823  002A'                    __end_of_fWAIT:
  2824                           
  2825                           	psect	text3
  2826  0000'                    __ptext3:	
  2827 ;; *************** function _fNEXTSTATE *****************
  2828 ;; Defined at:
  2829 ;;		line 170 in file "state_machine_b.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;Total ram usage:        0 bytes
  2848 ;; Hardware stack levels used: 1
  2849 ;; Hardware stack levels required when called: 10
  2850 ;; This function calls:
  2851 ;;		_converter_settings
  2852 ;;		_fNEXTCELL
  2853 ;; This function is called by:
  2854 ;;		_fWAIT
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858  0000'                    _fNEXTSTATE:	
  2859                           ;psect for function _fNEXTSTATE
  2860                           
  2861                           
  2862                           ;state_machine_b.c: 171:     counter_state = counter_state + 1;
  2863                           
  2864                           ;incstack = 0
  2865                           ; Regs used in _fNEXTSTATE: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2866  0000' 0021               	movlb	1	; select bank1
  2867  0001' 0800'              	movf	_counter_state^(0+128),w
  2868  0002' 3E01               	addlw	1
  2869  0003' 0080'              	movwf	_counter_state^(0+128)
  2870                           
  2871                           ;state_machine_b.c: 172:     if ((counter_state <= test_configuration.number_of_states) 
      +                          && (test_configuration.order_of_states[counter_state] != 0x00)){
  2872  0004' 0800'              	movf	_counter_state^(0+128),w
  2873  0005' 0024               	movlb	4	; select bank4
  2874  0006' 0201'              	subwf	(_test_configuration^(0+512)+1),w
  2875  0007' 1C03               	skipc
  2876  0008' 2800'              	goto	l5489
  2877  0009' 0021               	movlb	1	; select bank1
  2878  000A' 0800'              	movf	_counter_state^(0+128),w
  2879  000B' 3E00'              	addlw	(low ((_test_configuration| (0+512)+7)))& (0+255)
  2880  000C' 0086               	movwf	6
  2881  000D' 3002               	movlw	2	; select bank4/5
  2882  000E' 0087               	movwf	7
  2883  000F' 0801               	movf	1,w
  2884  0010' 1903               	btfsc	3,2
  2885  0011' 2800'              	goto	l5489
  2886                           
  2887                           ;state_machine_b.c: 173:         state = test_configuration.order_of_states[counter_stat
      +                          e];
  2888  0012' 0800'              	movf	_counter_state^(0+128),w
  2889  0013' 3E00'              	addlw	(low ((_test_configuration| (0+512)+7)))& (0+255)
  2890  0014' 0086               	movwf	6
  2891  0015' 3002               	movlw	2	; select bank4/5
  2892  0016' 0087               	movwf	7
  2893  0017' 0801               	movf	1,w
  2894  0018' 0023               	movlb	3	; select bank3
  2895  0019' 0080'              	movwf	_state^(0+384)
  2896                           
  2897                           ;state_machine_b.c: 174:         converter_settings();
  2898  001A' 3180' 2000'        	fcall	_converter_settings
  2899                           
  2900                           ;state_machine_b.c: 175:     }
  2901  001C' 0008               	return
  2902  001D'                    l5489:
  2903                           
  2904                           ;state_machine_b.c: 177:         fNEXTCELL();
  2905  001D' 3180' 2000'        	fcall	_fNEXTCELL
  2906  001F' 0008               	return
  2907  0020'                    __end_of_fNEXTSTATE:
  2908                           
  2909                           	psect	text4
  2910  0000'                    __ptext4:	
  2911 ;; *************** function _fNEXTCELL *****************
  2912 ;; Defined at:
  2913 ;;		line 181 in file "state_machine_b.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2931 ;;Total ram usage:        0 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; Hardware stack levels required when called: 9
  2934 ;; This function calls:
  2935 ;;		_converter_settings
  2936 ;;		_fNEXTREPETITION
  2937 ;; This function is called by:
  2938 ;;		_fNEXTSTATE
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942  0000'                    _fNEXTCELL:	
  2943                           ;psect for function _fNEXTCELL
  2944                           
  2945                           
  2946                           ;state_machine_b.c: 182:     counter_state = 0;
  2947                           
  2948                           ;incstack = 0
  2949                           ; Regs used in _fNEXTCELL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2950  0000' 0021               	movlb	1	; select bank1
  2951  0001' 0180'              	clrf	_counter_state^(0+128)
  2952                           
  2953                           ;state_machine_b.c: 183:     if (cell_count < test_configuration.number_of_cells){
  2954  0002' 0024               	movlb	4	; select bank4
  2955  0003' 0800'              	movf	_test_configuration^(0+512),w
  2956  0004' 0023               	movlb	3	; select bank3
  2957  0005' 0200'              	subwf	_cell_count^(0+384),w
  2958  0006' 1803               	skipnc
  2959  0007' 2800'              	goto	l5189
  2960                           
  2961                           ;state_machine_b.c: 184:         state = test_configuration.order_of_states[counter_stat
      +                          e];
  2962  0008' 0021               	movlb	1	; select bank1
  2963  0009' 0800'              	movf	_counter_state^(0+128),w
  2964  000A' 3E00'              	addlw	(low ((_test_configuration| (0+512)+7)))& (0+255)
  2965  000B' 0086               	movwf	6
  2966  000C' 3002               	movlw	2	; select bank4/5
  2967  000D' 0087               	movwf	7
  2968  000E' 0801               	movf	1,w
  2969  000F' 0023               	movlb	3	; select bank3
  2970  0010' 0080'              	movwf	_state^(0+384)
  2971                           
  2972                           ;state_machine_b.c: 185:         cell_count = cell_count + 1;
  2973  0011' 0800'              	movf	_cell_count^(0+384),w
  2974  0012' 3E01               	addlw	1
  2975  0013' 0080'              	movwf	_cell_count^(0+384)
  2976                           
  2977                           ;state_machine_b.c: 186:         converter_settings();
  2978  0014' 3180' 2000'        	fcall	_converter_settings
  2979                           
  2980                           ;state_machine_b.c: 187:     }
  2981  0016' 0008               	return
  2982  0017'                    l5189:
  2983                           
  2984                           ;state_machine_b.c: 189:         fNEXTREPETITION();
  2985  0017' 3180' 2000'        	fcall	_fNEXTREPETITION
  2986  0019' 0008               	return
  2987  001A'                    __end_of_fNEXTCELL:
  2988                           
  2989                           	psect	text5
  2990  0000'                    __ptext5:	
  2991 ;; *************** function _fNEXTREPETITION *****************
  2992 ;; Defined at:
  2993 ;;		line 193 in file "state_machine_b.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;		None
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;		None
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      void 
  3000 ;; Registers used:
  3001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3011 ;;Total ram usage:        0 bytes
  3012 ;; Hardware stack levels used: 1
  3013 ;; Hardware stack levels required when called: 8
  3014 ;; This function calls:
  3015 ;;		_converter_settings
  3016 ;; This function is called by:
  3017 ;;		_fNEXTCELL
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021  0000'                    _fNEXTREPETITION:	
  3022                           ;psect for function _fNEXTREPETITION
  3023                           
  3024                           
  3025                           ;state_machine_b.c: 194:     if (repetition_counter < test_configuration.number_of_repet
      +                          itions){
  3026                           
  3027                           ;incstack = 0
  3028                           ; Regs used in _fNEXTREPETITION: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3029  0000' 0024               	movlb	4	; select bank4
  3030  0001' 0802'              	movf	(_test_configuration^(0+512)+2),w
  3031  0002' 0023               	movlb	3	; select bank3
  3032  0003' 0200'              	subwf	_repetition_counter^(0+384),w
  3033  0004' 1803               	skipnc
  3034  0005' 2800'              	goto	l881
  3035                           
  3036                           ;state_machine_b.c: 195:         counter_state = 0;
  3037  0006' 0021               	movlb	1	; select bank1
  3038  0007' 0180'              	clrf	_counter_state^(0+128)
  3039                           
  3040                           ;state_machine_b.c: 196:         state = test_configuration.order_of_states[counter_stat
      +                          e];
  3041  0008' 0800'              	movf	_counter_state^(0+128),w
  3042  0009' 3E00'              	addlw	(low ((_test_configuration| (0+512)+7)))& (0+255)
  3043  000A' 0086               	movwf	6
  3044  000B' 3002               	movlw	2	; select bank4/5
  3045  000C' 0087               	movwf	7
  3046  000D' 0801               	movf	1,w
  3047  000E' 0023               	movlb	3	; select bank3
  3048  000F' 0080'              	movwf	_state^(0+384)
  3049                           
  3050                           ;state_machine_b.c: 197:         cell_count = 0x01;
  3051  0010' 0180'              	clrf	_cell_count^(0+384)
  3052  0011' 0A80'              	incf	_cell_count^(0+384),f
  3053                           
  3054                           ;state_machine_b.c: 198:         repetition_counter = repetition_counter + 1;
  3055  0012' 0800'              	movf	_repetition_counter^(0+384),w
  3056  0013' 3E01               	addlw	1
  3057  0014' 0080'              	movwf	_repetition_counter^(0+384)
  3058                           
  3059                           ;state_machine_b.c: 199:         converter_settings();
  3060  0015' 3180' 2000'        	fcall	_converter_settings
  3061                           
  3062                           ;state_machine_b.c: 200:         }
  3063  0017' 0008               	return
  3064  0018'                    l881:	
  3065                           ;state_machine_b.c: 201:     else{
  3066                           
  3067                           
  3068                           ;state_machine_b.c: 202:         state = IDLE;
  3069  0018' 0180'              	clrf	_state^(0+384)
  3070  0019' 0A80'              	incf	_state^(0+384),f
  3071  001A' 0008               	return
  3072  001B'                    __end_of_fNEXTREPETITION:
  3073                           
  3074                           	psect	text6
  3075  0000'                    __ptext6:	
  3076 ;; *************** function _converter_settings *****************
  3077 ;; Defined at:
  3078 ;;		line 208 in file "state_machine_b.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;		None
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;		None
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3093 ;;      Locals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  3094 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  3095 ;;      Totals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
  3096 ;;Total ram usage:        8 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; Hardware stack levels required when called: 7
  3099 ;; This function calls:
  3100 ;;		_Cell_ON
  3101 ;;		___fladd
  3102 ;;		___fldiv
  3103 ;;		___flmul
  3104 ;;		___fltol
  3105 ;;		___xxtofl
  3106 ;;		_set_DC
  3107 ;; This function is called by:
  3108 ;;		_fNEXTSTATE
  3109 ;;		_fNEXTCELL
  3110 ;;		_fNEXTREPETITION
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114  0000'                    _converter_settings:	
  3115                           ;psect for function _converter_settings
  3116                           
  3117                           
  3118                           ;state_machine_b.c: 211:     cmode = 1;
  3119                           
  3120                           ;incstack = 0
  3121                           ; Regs used in _converter_settings: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3122  0000' 0021               	movlb	1	; select bank1
  3123  0001' 0180'              	clrf	_cmode^(0+128)
  3124  0002' 0A80'              	incf	_cmode^(0+128),f
  3125                           
  3126                           ;state_machine_b.c: 212:     pidi = 0;
  3127  0003' 3000               	movlw	0
  3128  0004' 0024               	movlb	4	; select bank4
  3129  0005' 0080'              	movwf	(_pidi+3)^(0+512)
  3130  0006' 3000               	movlw	0
  3131  0007' 0080'              	movwf	(_pidi+2)^(0+512)
  3132  0008' 3000               	movlw	0
  3133  0009' 0080'              	movwf	(_pidi+1)^(0+512)
  3134  000A' 3000               	movlw	0
  3135  000B' 0080'              	movwf	_pidi^(0+512)
  3136                           
  3137                           ;state_machine_b.c: 213:     qavg = 0;
  3138  000C' 3000               	movlw	0
  3139  000D' 0023               	movlb	3	; select bank3
  3140  000E' 0080'              	movwf	(_qavg+3)^(0+384)
  3141  000F' 3000               	movlw	0
  3142  0010' 0080'              	movwf	(_qavg+2)^(0+384)
  3143  0011' 3000               	movlw	0
  3144  0012' 0080'              	movwf	(_qavg+1)^(0+384)
  3145  0013' 3000               	movlw	0
  3146  0014' 0080'              	movwf	_qavg^(0+384)
  3147                           
  3148                           ;state_machine_b.c: 214:     vmax = 0;
  3149  0015' 0180'              	clrf	_vmax^(0+384)
  3150  0016' 0180'              	clrf	(_vmax+1)^(0+384)
  3151                           
  3152                           ;state_machine_b.c: 215:     pidt = 50.0;
  3153  0017' 3042               	movlw	66
  3154  0018' 0080'              	movwf	(_pidt+3)^(0+384)
  3155  0019' 3048               	movlw	72
  3156  001A' 0080'              	movwf	(_pidt+2)^(0+384)
  3157  001B' 3000               	movlw	0
  3158  001C' 0080'              	movwf	(_pidt+1)^(0+384)
  3159  001D' 3000               	movlw	0
  3160  001E' 0080'              	movwf	_pidt^(0+384)
  3161                           
  3162                           ;state_machine_b.c: 216:     set_DC();
  3163  001F' 3180' 2000' 3180'  	fcall	_set_DC
  3164                           
  3165                           ;state_machine_b.c: 217:     Cell_ON();
  3166  0022' 3180' 2000' 3180'  	fcall	_Cell_ON
  3167                           
  3168                           ;state_machine_b.c: 218:     switch(state)
  3169  0025' 2800'              	goto	l5155
  3170  0026'                    l5019:
  3171                           
  3172                           ;state_machine_b.c: 221:             iref = i_char;
  3173  0026' 0800'              	movf	(_i_char+1)^(0+384),w
  3174  0027' 0021               	movlb	1	; select bank1
  3175  0028' 0080'              	movwf	(_iref+1)^(0+128)
  3176  0029' 0023               	movlb	3	; select bank3
  3177  002A' 0800'              	movf	_i_char^(0+384),w
  3178  002B' 0021               	movlb	1	; select bank1
  3179  002C' 0080'              	movwf	_iref^(0+128)
  3180                           
  3181                           ;state_machine_b.c: 222:             if(basic_configuration.version == 0x02) timeout = (
      +                          uint16_t)(((float)capacity / (float)basic_configuration.const_current_char) * 3600 * 1.1
      +                          );
  3182  002D' 3002               	movlw	2
  3183  002E' 0024               	movlb	4	; select bank4
  3184  002F' 0600'              	xorwf	_basic_configuration^(0+512),w
  3185  0030' 1D03               	btfss	3,2
  3186  0031' 2800'              	goto	l5025
  3187  0032' 0023               	movlb	3	; select bank3
  3188  0033' 0800'              	movf	_capacity^(0+384),w
  3189  0034' 0022               	movlb	2	; select bank2
  3190  0035' 0080'              	movwf	___xxtofl@val^(0+256)
  3191  0036' 0023               	movlb	3	; select bank3
  3192  0037' 0800'              	movf	(_capacity+1)^(0+384),w
  3193  0038' 0022               	movlb	2	; select bank2
  3194  0039' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  3195  003A' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  3196  003B' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  3197  003C' 3000               	movlw	0
  3198  003D' 3180' 2000' 3180'  	fcall	___xxtofl
  3199  0040' 0022               	movlb	2	; select bank2
  3200  0041' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3201  0042' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  3202  0043' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3203  0044' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  3204  0045' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3205  0046' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  3206  0047' 0800'              	movf	?___xxtofl^(0+256),w
  3207  0048' 0080'              	movwf	___fldiv@b^(0+256)
  3208  0049' 0024               	movlb	4	; select bank4
  3209  004A' 0803'              	movf	(_basic_configuration^(0+512)+3),w
  3210  004B' 0022               	movlb	2	; select bank2
  3211  004C' 0080'              	movwf	___xxtofl@val^(0+256)
  3212  004D' 0024               	movlb	4	; select bank4
  3213  004E' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
  3214  004F' 0022               	movlb	2	; select bank2
  3215  0050' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  3216  0051' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  3217  0052' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  3218  0053' 3000               	movlw	0
  3219  0054' 3180' 2000' 3180'  	fcall	___xxtofl
  3220  0057' 0022               	movlb	2	; select bank2
  3221  0058' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3222  0059' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  3223  005A' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3224  005B' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  3225  005C' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3226  005D' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  3227  005E' 0800'              	movf	?___xxtofl^(0+256),w
  3228  005F' 0080'              	movwf	___fldiv@a^(0+256)
  3229  0060' 3180' 2000' 3180'  	fcall	___fldiv
  3230  0063' 0022               	movlb	2	; select bank2
  3231  0064' 0800'              	movf	(?___fldiv+3)^(0+256),w
  3232  0065' 0080'              	movwf	(___flmul@a+3)^(0+256)
  3233  0066' 0800'              	movf	(?___fldiv+2)^(0+256),w
  3234  0067' 0080'              	movwf	(___flmul@a+2)^(0+256)
  3235  0068' 0800'              	movf	(?___fldiv+1)^(0+256),w
  3236  0069' 0080'              	movwf	(___flmul@a+1)^(0+256)
  3237  006A' 0800'              	movf	?___fldiv^(0+256),w
  3238  006B' 0080'              	movwf	___flmul@a^(0+256)
  3239  006C' 3045               	movlw	69
  3240  006D' 0080'              	movwf	(___flmul@b+3)^(0+256)
  3241  006E' 3061               	movlw	97
  3242  006F' 0080'              	movwf	(___flmul@b+2)^(0+256)
  3243  0070' 3000               	movlw	0
  3244  0071' 0080'              	movwf	(___flmul@b+1)^(0+256)
  3245  0072' 3000               	movlw	0
  3246  0073' 0080'              	movwf	___flmul@b^(0+256)
  3247  0074' 3180' 2000' 3180'  	fcall	___flmul
  3248  0077' 0022               	movlb	2	; select bank2
  3249  0078' 0800'              	movf	(?___flmul+3)^(0+256),w
  3250  0079' 0023               	movlb	3	; select bank3
  3251  007A' 0080'              	movwf	(_converter_settings$1611+3)^(0+384)
  3252  007B' 0022               	movlb	2	; select bank2
  3253  007C' 0800'              	movf	(?___flmul+2)^(0+256),w
  3254  007D' 0023               	movlb	3	; select bank3
  3255  007E' 0080'              	movwf	(_converter_settings$1611+2)^(0+384)
  3256  007F' 0022               	movlb	2	; select bank2
  3257  0080' 0800'              	movf	(?___flmul+1)^(0+256),w
  3258  0081' 0023               	movlb	3	; select bank3
  3259  0082' 0080'              	movwf	(_converter_settings$1611+1)^(0+384)
  3260  0083' 0022               	movlb	2	; select bank2
  3261  0084' 0800'              	movf	?___flmul^(0+256),w
  3262  0085' 0023               	movlb	3	; select bank3
  3263  0086' 0080'              	movwf	_converter_settings$1611^(0+384)
  3264  0087' 0800'              	movf	(_converter_settings$1611+3)^(0+384),w
  3265  0088' 0022               	movlb	2	; select bank2
  3266  0089' 0080'              	movwf	(___flmul@a+3)^(0+256)
  3267  008A' 0023               	movlb	3	; select bank3
  3268  008B' 0800'              	movf	(_converter_settings$1611+2)^(0+384),w
  3269  008C' 0022               	movlb	2	; select bank2
  3270  008D' 0080'              	movwf	(___flmul@a+2)^(0+256)
  3271  008E' 0023               	movlb	3	; select bank3
  3272  008F' 0800'              	movf	(_converter_settings$1611+1)^(0+384),w
  3273  0090' 0022               	movlb	2	; select bank2
  3274  0091' 0080'              	movwf	(___flmul@a+1)^(0+256)
  3275  0092' 0023               	movlb	3	; select bank3
  3276  0093' 0800'              	movf	_converter_settings$1611^(0+384),w
  3277  0094' 0022               	movlb	2	; select bank2
  3278  0095' 0080'              	movwf	___flmul@a^(0+256)
  3279  0096' 303F               	movlw	63
  3280  0097' 0080'              	movwf	(___flmul@b+3)^(0+256)
  3281  0098' 308C               	movlw	140
  3282  0099' 0080'              	movwf	(___flmul@b+2)^(0+256)
  3283  009A' 30CC               	movlw	204
  3284  009B' 0080'              	movwf	(___flmul@b+1)^(0+256)
  3285  009C' 30CD               	movlw	205
  3286  009D' 0080'              	movwf	___flmul@b^(0+256)
  3287  009E' 3180' 2000' 3180'  	fcall	___flmul
  3288  00A1' 0022               	movlb	2	; select bank2
  3289  00A2' 0800'              	movf	(?___flmul+3)^(0+256),w
  3290  00A3' 0023               	movlb	3	; select bank3
  3291  00A4' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  3292  00A5' 0022               	movlb	2	; select bank2
  3293  00A6' 0800'              	movf	(?___flmul+2)^(0+256),w
  3294  00A7' 0023               	movlb	3	; select bank3
  3295  00A8' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  3296  00A9' 0022               	movlb	2	; select bank2
  3297  00AA' 0800'              	movf	(?___flmul+1)^(0+256),w
  3298  00AB' 0023               	movlb	3	; select bank3
  3299  00AC' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  3300  00AD' 0022               	movlb	2	; select bank2
  3301  00AE' 0800'              	movf	?___flmul^(0+256),w
  3302  00AF' 0023               	movlb	3	; select bank3
  3303  00B0' 0080'              	movwf	___fltol@f1^(0+384)
  3304  00B1' 3180' 2000' 3180'  	fcall	___fltol
  3305  00B4' 0023               	movlb	3	; select bank3
  3306  00B5' 0800'              	movf	(?___fltol+1)^(0+384),w
  3307  00B6' 0080'              	movwf	(_timeout+1)^(0+384)
  3308  00B7' 0800'              	movf	?___fltol^(0+384),w
  3309  00B8' 0080'              	movwf	_timeout^(0+384)
  3310  00B9'                    l5025:
  3311                           
  3312                           ;state_machine_b.c: 223:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC4 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC4 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_char_kp; ki = CC_char_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
  3313  00B9' 0020               	movlb	0	; select bank0
  3314  00BA' 118E               	bcf	14,3	;volatile
  3315  00BB' 120E               	bcf	14,4	;volatile
  3316  00BC' 3005               	movlw	5
  3317  00BD' 0023               	movlb	3	; select bank3
  3318  00BE' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3319  00BF' 300F               	movlw	15
  3320  00C0' 0080'              	movwf	??_converter_settings^(0+384)
  3321  00C1' 30F1               	movlw	241
  3322  00C2'                    u7437:
  3323  00C2' 0B89               	decfsz	9,f
  3324  00C3' 2800'              	goto	u7437
  3325  00C4' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3326  00C5' 2800'              	goto	u7437
  3327  00C6' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3328  00C7' 2800'              	goto	u7437
  3329  00C8' 0020               	movlb	0	; select bank0
  3330  00C9' 160E               	bsf	14,4	;volatile
  3331  00CA' 3005               	movlw	5
  3332  00CB' 0023               	movlb	3	; select bank3
  3333  00CC' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3334  00CD' 300F               	movlw	15
  3335  00CE' 0080'              	movwf	??_converter_settings^(0+384)
  3336  00CF' 30F1               	movlw	241
  3337  00D0'                    u7447:
  3338  00D0' 0B89               	decfsz	9,f
  3339  00D1' 2800'              	goto	u7447
  3340  00D2' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3341  00D3' 2800'              	goto	u7447
  3342  00D4' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3343  00D5' 2800'              	goto	u7447
  3344  00D6' 0020               	movlb	0	; select bank0
  3345  00D7' 120E               	bcf	14,4	;volatile
  3346  00D8' 3005               	movlw	5
  3347  00D9' 0023               	movlb	3	; select bank3
  3348  00DA' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3349  00DB' 300F               	movlw	15
  3350  00DC' 0080'              	movwf	??_converter_settings^(0+384)
  3351  00DD' 30F1               	movlw	241
  3352  00DE'                    u7457:
  3353  00DE' 0B89               	decfsz	9,f
  3354  00DF' 2800'              	goto	u7457
  3355  00E0' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3356  00E1' 2800'              	goto	u7457
  3357  00E2' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3358  00E3' 2800'              	goto	u7457
  3359  00E4' 0020               	movlb	0	; select bank0
  3360  00E5' 168E               	bsf	14,5	;volatile
  3361  00E6' 3005               	movlw	5
  3362  00E7' 0023               	movlb	3	; select bank3
  3363  00E8' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3364  00E9' 300F               	movlw	15
  3365  00EA' 0080'              	movwf	??_converter_settings^(0+384)
  3366  00EB' 30F1               	movlw	241
  3367  00EC'                    u7467:
  3368  00EC' 0B89               	decfsz	9,f
  3369  00ED' 2800'              	goto	u7467
  3370  00EE' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3371  00EF' 2800'              	goto	u7467
  3372  00F0' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3373  00F1' 2800'              	goto	u7467
  3374  00F2' 2800'              	goto	L4
  3375  00F3'                    l5049:	
  3376                           ;state_machine_b.c: 224:             break;
  3377                           
  3378                           
  3379                           ;state_machine_b.c: 226:             iref = i_disc;
  3380  00F3' 0800'              	movf	(_i_disc+1)^(0+384),w
  3381  00F4' 0021               	movlb	1	; select bank1
  3382  00F5' 0080'              	movwf	(_iref+1)^(0+128)
  3383  00F6' 0023               	movlb	3	; select bank3
  3384  00F7' 0800'              	movf	_i_disc^(0+384),w
  3385  00F8' 0021               	movlb	1	; select bank1
  3386  00F9' 0080'              	movwf	_iref^(0+128)
  3387                           
  3388                           ;state_machine_b.c: 227:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
  3389  00FA' 0020               	movlb	0	; select bank0
  3390  00FB' 118E               	bcf	14,3	;volatile
  3391  00FC' 120E               	bcf	14,4	;volatile
  3392  00FD' 3005               	movlw	5
  3393  00FE' 0023               	movlb	3	; select bank3
  3394  00FF' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3395  0100' 300F               	movlw	15
  3396  0101' 0080'              	movwf	??_converter_settings^(0+384)
  3397  0102' 30F1               	movlw	241
  3398  0103'                    u7477:
  3399  0103' 0B89               	decfsz	9,f
  3400  0104' 2800'              	goto	u7477
  3401  0105' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3402  0106' 2800'              	goto	u7477
  3403  0107' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3404  0108' 2800'              	goto	u7477
  3405  0109' 0020               	movlb	0	; select bank0
  3406  010A' 158E               	bsf	14,3	;volatile
  3407  010B' 3005               	movlw	5
  3408  010C' 0023               	movlb	3	; select bank3
  3409  010D' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3410  010E' 300F               	movlw	15
  3411  010F' 0080'              	movwf	??_converter_settings^(0+384)
  3412  0110' 30F1               	movlw	241
  3413  0111'                    u7487:
  3414  0111' 0B89               	decfsz	9,f
  3415  0112' 2800'              	goto	u7487
  3416  0113' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3417  0114' 2800'              	goto	u7487
  3418  0115' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3419  0116' 2800'              	goto	u7487
  3420  0117' 0020               	movlb	0	; select bank0
  3421  0118' 118E               	bcf	14,3	;volatile
  3422  0119' 3005               	movlw	5
  3423  011A' 0023               	movlb	3	; select bank3
  3424  011B' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3425  011C' 300F               	movlw	15
  3426  011D' 0080'              	movwf	??_converter_settings^(0+384)
  3427  011E' 30F1               	movlw	241
  3428  011F'                    u7497:
  3429  011F' 0B89               	decfsz	9,f
  3430  0120' 2800'              	goto	u7497
  3431  0121' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3432  0122' 2800'              	goto	u7497
  3433  0123' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3434  0124' 2800'              	goto	u7497
  3435  0125' 0020               	movlb	0	; select bank0
  3436  0126' 168E               	bsf	14,5	;volatile
  3437  0127' 3005               	movlw	5
  3438  0128' 0023               	movlb	3	; select bank3
  3439  0129' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3440  012A' 300F               	movlw	15
  3441  012B' 0080'              	movwf	??_converter_settings^(0+384)
  3442  012C' 30F1               	movlw	241
  3443  012D'                    u7507:
  3444  012D' 0B89               	decfsz	9,f
  3445  012E' 2800'              	goto	u7507
  3446  012F' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3447  0130' 2800'              	goto	u7507
  3448  0131' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3449  0132' 2800'              	goto	u7507
  3450  0133' 2800'              	goto	L3
  3451  0134'                    l5065:	
  3452                           ;state_machine_b.c: 228:             break;
  3453                           
  3454                           
  3455                           ;state_machine_b.c: 230:             iref = (uint16_t) ( ( ( capacity * 4096.0 ) / (5000
      +                           * 2.5) ) + 0.5 );
  3456  0134' 0800'              	movf	_capacity^(0+384),w
  3457  0135' 0022               	movlb	2	; select bank2
  3458  0136' 0080'              	movwf	___xxtofl@val^(0+256)
  3459  0137' 0023               	movlb	3	; select bank3
  3460  0138' 0800'              	movf	(_capacity+1)^(0+384),w
  3461  0139' 0022               	movlb	2	; select bank2
  3462  013A' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  3463  013B' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  3464  013C' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  3465  013D' 3000               	movlw	0
  3466  013E' 3180' 2000' 3180'  	fcall	___xxtofl
  3467  0141' 0022               	movlb	2	; select bank2
  3468  0142' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3469  0143' 0080'              	movwf	(___flmul@a+3)^(0+256)
  3470  0144' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3471  0145' 0080'              	movwf	(___flmul@a+2)^(0+256)
  3472  0146' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3473  0147' 0080'              	movwf	(___flmul@a+1)^(0+256)
  3474  0148' 0800'              	movf	?___xxtofl^(0+256),w
  3475  0149' 0080'              	movwf	___flmul@a^(0+256)
  3476  014A' 3045               	movlw	69
  3477  014B' 0080'              	movwf	(___flmul@b+3)^(0+256)
  3478  014C' 3080               	movlw	128
  3479  014D' 0080'              	movwf	(___flmul@b+2)^(0+256)
  3480  014E' 3000               	movlw	0
  3481  014F' 0080'              	movwf	(___flmul@b+1)^(0+256)
  3482  0150' 3000               	movlw	0
  3483  0151' 0080'              	movwf	___flmul@b^(0+256)
  3484  0152' 3180' 2000' 3180'  	fcall	___flmul
  3485  0155' 0022               	movlb	2	; select bank2
  3486  0156' 0800'              	movf	(?___flmul+3)^(0+256),w
  3487  0157' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  3488  0158' 0800'              	movf	(?___flmul+2)^(0+256),w
  3489  0159' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  3490  015A' 0800'              	movf	(?___flmul+1)^(0+256),w
  3491  015B' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  3492  015C' 0800'              	movf	?___flmul^(0+256),w
  3493  015D' 0080'              	movwf	___fldiv@b^(0+256)
  3494  015E' 3046               	movlw	70
  3495  015F' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  3496  0160' 3043               	movlw	67
  3497  0161' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  3498  0162' 3050               	movlw	80
  3499  0163' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  3500  0164' 3000               	movlw	0
  3501  0165' 0080'              	movwf	___fldiv@a^(0+256)
  3502  0166' 3180' 2000' 3180'  	fcall	___fldiv
  3503  0169' 0022               	movlb	2	; select bank2
  3504  016A' 0800'              	movf	(?___fldiv+3)^(0+256),w
  3505  016B' 0080'              	movwf	(___fladd@a+3)^(0+256)
  3506  016C' 0800'              	movf	(?___fldiv+2)^(0+256),w
  3507  016D' 0080'              	movwf	(___fladd@a+2)^(0+256)
  3508  016E' 0800'              	movf	(?___fldiv+1)^(0+256),w
  3509  016F' 0080'              	movwf	(___fladd@a+1)^(0+256)
  3510  0170' 0800'              	movf	?___fldiv^(0+256),w
  3511  0171' 0080'              	movwf	___fladd@a^(0+256)
  3512  0172' 303F               	movlw	63
  3513  0173' 0080'              	movwf	(___fladd@b+3)^(0+256)
  3514  0174' 3000               	movlw	0
  3515  0175' 0080'              	movwf	(___fladd@b+2)^(0+256)
  3516  0176' 3000               	movlw	0
  3517  0177' 0080'              	movwf	(___fladd@b+1)^(0+256)
  3518  0178' 3000               	movlw	0
  3519  0179' 0080'              	movwf	___fladd@b^(0+256)
  3520  017A' 3180' 2000' 3180'  	fcall	___fladd
  3521  017D' 0022               	movlb	2	; select bank2
  3522  017E' 0800'              	movf	(?___fladd+3)^(0+256),w
  3523  017F' 0023               	movlb	3	; select bank3
  3524  0180' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  3525  0181' 0022               	movlb	2	; select bank2
  3526  0182' 0800'              	movf	(?___fladd+2)^(0+256),w
  3527  0183' 0023               	movlb	3	; select bank3
  3528  0184' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  3529  0185' 0022               	movlb	2	; select bank2
  3530  0186' 0800'              	movf	(?___fladd+1)^(0+256),w
  3531  0187' 0023               	movlb	3	; select bank3
  3532  0188' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  3533  0189' 0022               	movlb	2	; select bank2
  3534  018A' 0800'              	movf	?___fladd^(0+256),w
  3535  018B' 0023               	movlb	3	; select bank3
  3536  018C' 0080'              	movwf	___fltol@f1^(0+384)
  3537  018D' 3180' 2000' 3180'  	fcall	___fltol
  3538  0190' 0023               	movlb	3	; select bank3
  3539  0191' 0800'              	movf	(?___fltol+1)^(0+384),w
  3540  0192' 0021               	movlb	1	; select bank1
  3541  0193' 0080'              	movwf	(_iref+1)^(0+128)
  3542  0194' 0023               	movlb	3	; select bank3
  3543  0195' 0800'              	movf	?___fltol^(0+384),w
  3544  0196' 0021               	movlb	1	; select bank1
  3545  0197' 0080'              	movwf	_iref^(0+128)
  3546                           
  3547                           ;state_machine_b.c: 231:             dc_res_count = 220;
  3548  0198' 30DC               	movlw	220
  3549  0199' 0023               	movlb	3	; select bank3
  3550  019A' 0080'              	movwf	_dc_res_count^(0+384)
  3551                           
  3552                           ;state_machine_b.c: 232:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
  3553  019B' 0020               	movlb	0	; select bank0
  3554  019C' 118E               	bcf	14,3	;volatile
  3555  019D' 120E               	bcf	14,4	;volatile
  3556  019E' 3005               	movlw	5
  3557  019F' 0023               	movlb	3	; select bank3
  3558  01A0' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3559  01A1' 300F               	movlw	15
  3560  01A2' 0080'              	movwf	??_converter_settings^(0+384)
  3561  01A3' 30F1               	movlw	241
  3562  01A4'                    u7517:
  3563  01A4' 0B89               	decfsz	9,f
  3564  01A5' 2800'              	goto	u7517
  3565  01A6' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3566  01A7' 2800'              	goto	u7517
  3567  01A8' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3568  01A9' 2800'              	goto	u7517
  3569  01AA' 0020               	movlb	0	; select bank0
  3570  01AB' 158E               	bsf	14,3	;volatile
  3571  01AC' 3005               	movlw	5
  3572  01AD' 0023               	movlb	3	; select bank3
  3573  01AE' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3574  01AF' 300F               	movlw	15
  3575  01B0' 0080'              	movwf	??_converter_settings^(0+384)
  3576  01B1' 30F1               	movlw	241
  3577  01B2'                    u7527:
  3578  01B2' 0B89               	decfsz	9,f
  3579  01B3' 2800'              	goto	u7527
  3580  01B4' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3581  01B5' 2800'              	goto	u7527
  3582  01B6' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3583  01B7' 2800'              	goto	u7527
  3584  01B8' 0020               	movlb	0	; select bank0
  3585  01B9' 118E               	bcf	14,3	;volatile
  3586  01BA' 3005               	movlw	5
  3587  01BB' 0023               	movlb	3	; select bank3
  3588  01BC' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3589  01BD' 300F               	movlw	15
  3590  01BE' 0080'              	movwf	??_converter_settings^(0+384)
  3591  01BF' 30F1               	movlw	241
  3592  01C0'                    u7537:
  3593  01C0' 0B89               	decfsz	9,f
  3594  01C1' 2800'              	goto	u7537
  3595  01C2' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3596  01C3' 2800'              	goto	u7537
  3597  01C4' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3598  01C5' 2800'              	goto	u7537
  3599  01C6' 0020               	movlb	0	; select bank0
  3600  01C7' 168E               	bsf	14,5	;volatile
  3601  01C8' 3005               	movlw	5
  3602  01C9' 0023               	movlb	3	; select bank3
  3603  01CA' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3604  01CB' 300F               	movlw	15
  3605  01CC' 0080'              	movwf	??_converter_settings^(0+384)
  3606  01CD' 30F1               	movlw	241
  3607  01CE'                    u7547:
  3608  01CE' 0B89               	decfsz	9,f
  3609  01CF' 2800'              	goto	u7547
  3610  01D0' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3611  01D1' 2800'              	goto	u7547
  3612  01D2' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3613  01D3' 2800'              	goto	u7547
  3614  01D4' 2800'              	goto	L3
  3615  01D5'                    l5093:	
  3616                           ;state_machine_b.c: 233:             break;
  3617                           
  3618                           
  3619                           ;state_machine_b.c: 235:             iref = (uint16_t) ( ( ( capacity * 4096.0 ) / (5000
      +                           * 2.5 * 2 ) ) + 0.5 );
  3620  01D5' 0800'              	movf	_capacity^(0+384),w
  3621  01D6' 0022               	movlb	2	; select bank2
  3622  01D7' 0080'              	movwf	___xxtofl@val^(0+256)
  3623  01D8' 0023               	movlb	3	; select bank3
  3624  01D9' 0800'              	movf	(_capacity+1)^(0+384),w
  3625  01DA' 0022               	movlb	2	; select bank2
  3626  01DB' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  3627  01DC' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  3628  01DD' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  3629  01DE' 3000               	movlw	0
  3630  01DF' 3180' 2000' 3180'  	fcall	___xxtofl
  3631  01E2' 0022               	movlb	2	; select bank2
  3632  01E3' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3633  01E4' 0080'              	movwf	(___flmul@a+3)^(0+256)
  3634  01E5' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3635  01E6' 0080'              	movwf	(___flmul@a+2)^(0+256)
  3636  01E7' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3637  01E8' 0080'              	movwf	(___flmul@a+1)^(0+256)
  3638  01E9' 0800'              	movf	?___xxtofl^(0+256),w
  3639  01EA' 0080'              	movwf	___flmul@a^(0+256)
  3640  01EB' 3045               	movlw	69
  3641  01EC' 0080'              	movwf	(___flmul@b+3)^(0+256)
  3642  01ED' 3080               	movlw	128
  3643  01EE' 0080'              	movwf	(___flmul@b+2)^(0+256)
  3644  01EF' 3000               	movlw	0
  3645  01F0' 0080'              	movwf	(___flmul@b+1)^(0+256)
  3646  01F1' 3000               	movlw	0
  3647  01F2' 0080'              	movwf	___flmul@b^(0+256)
  3648  01F3' 3180' 2000' 3180'  	fcall	___flmul
  3649  01F6' 0022               	movlb	2	; select bank2
  3650  01F7' 0800'              	movf	(?___flmul+3)^(0+256),w
  3651  01F8' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  3652  01F9' 0800'              	movf	(?___flmul+2)^(0+256),w
  3653  01FA' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  3654  01FB' 0800'              	movf	(?___flmul+1)^(0+256),w
  3655  01FC' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  3656  01FD' 0800'              	movf	?___flmul^(0+256),w
  3657  01FE' 0080'              	movwf	___fldiv@b^(0+256)
  3658  01FF' 3046               	movlw	70
  3659  0200' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  3660  0201' 30C3               	movlw	195
  3661  0202' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  3662  0203' 3050               	movlw	80
  3663  0204' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  3664  0205' 3000               	movlw	0
  3665  0206' 0080'              	movwf	___fldiv@a^(0+256)
  3666  0207' 3180' 2000' 3180'  	fcall	___fldiv
  3667  020A' 0022               	movlb	2	; select bank2
  3668  020B' 0800'              	movf	(?___fldiv+3)^(0+256),w
  3669  020C' 0080'              	movwf	(___fladd@a+3)^(0+256)
  3670  020D' 0800'              	movf	(?___fldiv+2)^(0+256),w
  3671  020E' 0080'              	movwf	(___fladd@a+2)^(0+256)
  3672  020F' 0800'              	movf	(?___fldiv+1)^(0+256),w
  3673  0210' 0080'              	movwf	(___fladd@a+1)^(0+256)
  3674  0211' 0800'              	movf	?___fldiv^(0+256),w
  3675  0212' 0080'              	movwf	___fladd@a^(0+256)
  3676  0213' 303F               	movlw	63
  3677  0214' 0080'              	movwf	(___fladd@b+3)^(0+256)
  3678  0215' 3000               	movlw	0
  3679  0216' 0080'              	movwf	(___fladd@b+2)^(0+256)
  3680  0217' 3000               	movlw	0
  3681  0218' 0080'              	movwf	(___fladd@b+1)^(0+256)
  3682  0219' 3000               	movlw	0
  3683  021A' 0080'              	movwf	___fladd@b^(0+256)
  3684  021B' 3180' 2000' 3180'  	fcall	___fladd
  3685  021E' 0022               	movlb	2	; select bank2
  3686  021F' 0800'              	movf	(?___fladd+3)^(0+256),w
  3687  0220' 0023               	movlb	3	; select bank3
  3688  0221' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  3689  0222' 0022               	movlb	2	; select bank2
  3690  0223' 0800'              	movf	(?___fladd+2)^(0+256),w
  3691  0224' 0023               	movlb	3	; select bank3
  3692  0225' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  3693  0226' 0022               	movlb	2	; select bank2
  3694  0227' 0800'              	movf	(?___fladd+1)^(0+256),w
  3695  0228' 0023               	movlb	3	; select bank3
  3696  0229' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  3697  022A' 0022               	movlb	2	; select bank2
  3698  022B' 0800'              	movf	?___fladd^(0+256),w
  3699  022C' 0023               	movlb	3	; select bank3
  3700  022D' 0080'              	movwf	___fltol@f1^(0+384)
  3701  022E' 3180' 2000' 3180'  	fcall	___fltol
  3702  0231' 0023               	movlb	3	; select bank3
  3703  0232' 0800'              	movf	(?___fltol+1)^(0+384),w
  3704  0233' 0021               	movlb	1	; select bank1
  3705  0234' 0080'              	movwf	(_iref+1)^(0+128)
  3706  0235' 0023               	movlb	3	; select bank3
  3707  0236' 0800'              	movf	?___fltol^(0+384),w
  3708  0237' 0021               	movlb	1	; select bank1
  3709  0238' 0080'              	movwf	_iref^(0+128)
  3710                           
  3711                           ;state_machine_b.c: 236:             if(basic_configuration.version == 0x02) timeout = (
      +                          uint16_t)(((float)capacity / (float)basic_configuration.const_current_char) * 3600 * 1.1
      +                          );
  3712  0239' 3002               	movlw	2
  3713  023A' 0024               	movlb	4	; select bank4
  3714  023B' 0600'              	xorwf	_basic_configuration^(0+512),w
  3715  023C' 1D03               	btfss	3,2
  3716  023D' 2800'              	goto	l5099
  3717  023E' 0023               	movlb	3	; select bank3
  3718  023F' 0800'              	movf	_capacity^(0+384),w
  3719  0240' 0022               	movlb	2	; select bank2
  3720  0241' 0080'              	movwf	___xxtofl@val^(0+256)
  3721  0242' 0023               	movlb	3	; select bank3
  3722  0243' 0800'              	movf	(_capacity+1)^(0+384),w
  3723  0244' 0022               	movlb	2	; select bank2
  3724  0245' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  3725  0246' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  3726  0247' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  3727  0248' 3000               	movlw	0
  3728  0249' 3180' 2000' 3180'  	fcall	___xxtofl
  3729  024C' 0022               	movlb	2	; select bank2
  3730  024D' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3731  024E' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  3732  024F' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3733  0250' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  3734  0251' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3735  0252' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  3736  0253' 0800'              	movf	?___xxtofl^(0+256),w
  3737  0254' 0080'              	movwf	___fldiv@b^(0+256)
  3738  0255' 0024               	movlb	4	; select bank4
  3739  0256' 0803'              	movf	(_basic_configuration^(0+512)+3),w
  3740  0257' 0022               	movlb	2	; select bank2
  3741  0258' 0080'              	movwf	___xxtofl@val^(0+256)
  3742  0259' 0024               	movlb	4	; select bank4
  3743  025A' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
  3744  025B' 0022               	movlb	2	; select bank2
  3745  025C' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  3746  025D' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  3747  025E' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  3748  025F' 3000               	movlw	0
  3749  0260' 3180' 2000' 3180'  	fcall	___xxtofl
  3750  0263' 0022               	movlb	2	; select bank2
  3751  0264' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3752  0265' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  3753  0266' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3754  0267' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  3755  0268' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3756  0269' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  3757  026A' 0800'              	movf	?___xxtofl^(0+256),w
  3758  026B' 0080'              	movwf	___fldiv@a^(0+256)
  3759  026C' 3180' 2000' 3180'  	fcall	___fldiv
  3760  026F' 0022               	movlb	2	; select bank2
  3761  0270' 0800'              	movf	(?___fldiv+3)^(0+256),w
  3762  0271' 0080'              	movwf	(___flmul@a+3)^(0+256)
  3763  0272' 0800'              	movf	(?___fldiv+2)^(0+256),w
  3764  0273' 0080'              	movwf	(___flmul@a+2)^(0+256)
  3765  0274' 0800'              	movf	(?___fldiv+1)^(0+256),w
  3766  0275' 0080'              	movwf	(___flmul@a+1)^(0+256)
  3767  0276' 0800'              	movf	?___fldiv^(0+256),w
  3768  0277' 0080'              	movwf	___flmul@a^(0+256)
  3769  0278' 3045               	movlw	69
  3770  0279' 0080'              	movwf	(___flmul@b+3)^(0+256)
  3771  027A' 3061               	movlw	97
  3772  027B' 0080'              	movwf	(___flmul@b+2)^(0+256)
  3773  027C' 3000               	movlw	0
  3774  027D' 0080'              	movwf	(___flmul@b+1)^(0+256)
  3775  027E' 3000               	movlw	0
  3776  027F' 0080'              	movwf	___flmul@b^(0+256)
  3777  0280' 3180' 2000' 3180'  	fcall	___flmul
  3778  0283' 0022               	movlb	2	; select bank2
  3779  0284' 0800'              	movf	(?___flmul+3)^(0+256),w
  3780  0285' 0023               	movlb	3	; select bank3
  3781  0286' 0080'              	movwf	(_converter_settings$1611+3)^(0+384)
  3782  0287' 0022               	movlb	2	; select bank2
  3783  0288' 0800'              	movf	(?___flmul+2)^(0+256),w
  3784  0289' 0023               	movlb	3	; select bank3
  3785  028A' 0080'              	movwf	(_converter_settings$1611+2)^(0+384)
  3786  028B' 0022               	movlb	2	; select bank2
  3787  028C' 0800'              	movf	(?___flmul+1)^(0+256),w
  3788  028D' 0023               	movlb	3	; select bank3
  3789  028E' 0080'              	movwf	(_converter_settings$1611+1)^(0+384)
  3790  028F' 0022               	movlb	2	; select bank2
  3791  0290' 0800'              	movf	?___flmul^(0+256),w
  3792  0291' 0023               	movlb	3	; select bank3
  3793  0292' 0080'              	movwf	_converter_settings$1611^(0+384)
  3794  0293' 0800'              	movf	(_converter_settings$1611+3)^(0+384),w
  3795  0294' 0022               	movlb	2	; select bank2
  3796  0295' 0080'              	movwf	(___flmul@a+3)^(0+256)
  3797  0296' 0023               	movlb	3	; select bank3
  3798  0297' 0800'              	movf	(_converter_settings$1611+2)^(0+384),w
  3799  0298' 0022               	movlb	2	; select bank2
  3800  0299' 0080'              	movwf	(___flmul@a+2)^(0+256)
  3801  029A' 0023               	movlb	3	; select bank3
  3802  029B' 0800'              	movf	(_converter_settings$1611+1)^(0+384),w
  3803  029C' 0022               	movlb	2	; select bank2
  3804  029D' 0080'              	movwf	(___flmul@a+1)^(0+256)
  3805  029E' 0023               	movlb	3	; select bank3
  3806  029F' 0800'              	movf	_converter_settings$1611^(0+384),w
  3807  02A0' 0022               	movlb	2	; select bank2
  3808  02A1' 0080'              	movwf	___flmul@a^(0+256)
  3809  02A2' 303F               	movlw	63
  3810  02A3' 0080'              	movwf	(___flmul@b+3)^(0+256)
  3811  02A4' 308C               	movlw	140
  3812  02A5' 0080'              	movwf	(___flmul@b+2)^(0+256)
  3813  02A6' 30CC               	movlw	204
  3814  02A7' 0080'              	movwf	(___flmul@b+1)^(0+256)
  3815  02A8' 30CD               	movlw	205
  3816  02A9' 0080'              	movwf	___flmul@b^(0+256)
  3817  02AA' 3180' 2000' 3180'  	fcall	___flmul
  3818  02AD' 0022               	movlb	2	; select bank2
  3819  02AE' 0800'              	movf	(?___flmul+3)^(0+256),w
  3820  02AF' 0023               	movlb	3	; select bank3
  3821  02B0' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  3822  02B1' 0022               	movlb	2	; select bank2
  3823  02B2' 0800'              	movf	(?___flmul+2)^(0+256),w
  3824  02B3' 0023               	movlb	3	; select bank3
  3825  02B4' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  3826  02B5' 0022               	movlb	2	; select bank2
  3827  02B6' 0800'              	movf	(?___flmul+1)^(0+256),w
  3828  02B7' 0023               	movlb	3	; select bank3
  3829  02B8' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  3830  02B9' 0022               	movlb	2	; select bank2
  3831  02BA' 0800'              	movf	?___flmul^(0+256),w
  3832  02BB' 0023               	movlb	3	; select bank3
  3833  02BC' 0080'              	movwf	___fltol@f1^(0+384)
  3834  02BD' 3180' 2000' 3180'  	fcall	___fltol
  3835  02C0' 0023               	movlb	3	; select bank3
  3836  02C1' 0800'              	movf	(?___fltol+1)^(0+384),w
  3837  02C2' 0080'              	movwf	(_timeout+1)^(0+384)
  3838  02C3' 0800'              	movf	?___fltol^(0+384),w
  3839  02C4' 0080'              	movwf	_timeout^(0+384)
  3840  02C5'                    l5099:
  3841                           
  3842                           ;state_machine_b.c: 237:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
  3843  02C5' 0020               	movlb	0	; select bank0
  3844  02C6' 118E               	bcf	14,3	;volatile
  3845  02C7' 120E               	bcf	14,4	;volatile
  3846  02C8' 3005               	movlw	5
  3847  02C9' 0023               	movlb	3	; select bank3
  3848  02CA' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3849  02CB' 300F               	movlw	15
  3850  02CC' 0080'              	movwf	??_converter_settings^(0+384)
  3851  02CD' 30F1               	movlw	241
  3852  02CE'                    u7557:
  3853  02CE' 0B89               	decfsz	9,f
  3854  02CF' 2800'              	goto	u7557
  3855  02D0' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3856  02D1' 2800'              	goto	u7557
  3857  02D2' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3858  02D3' 2800'              	goto	u7557
  3859  02D4' 0020               	movlb	0	; select bank0
  3860  02D5' 158E               	bsf	14,3	;volatile
  3861  02D6' 3005               	movlw	5
  3862  02D7' 0023               	movlb	3	; select bank3
  3863  02D8' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3864  02D9' 300F               	movlw	15
  3865  02DA' 0080'              	movwf	??_converter_settings^(0+384)
  3866  02DB' 30F1               	movlw	241
  3867  02DC'                    u7567:
  3868  02DC' 0B89               	decfsz	9,f
  3869  02DD' 2800'              	goto	u7567
  3870  02DE' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3871  02DF' 2800'              	goto	u7567
  3872  02E0' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3873  02E1' 2800'              	goto	u7567
  3874  02E2' 0020               	movlb	0	; select bank0
  3875  02E3' 118E               	bcf	14,3	;volatile
  3876  02E4' 3005               	movlw	5
  3877  02E5' 0023               	movlb	3	; select bank3
  3878  02E6' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3879  02E7' 300F               	movlw	15
  3880  02E8' 0080'              	movwf	??_converter_settings^(0+384)
  3881  02E9' 30F1               	movlw	241
  3882  02EA'                    u7577:
  3883  02EA' 0B89               	decfsz	9,f
  3884  02EB' 2800'              	goto	u7577
  3885  02EC' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3886  02ED' 2800'              	goto	u7577
  3887  02EE' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3888  02EF' 2800'              	goto	u7577
  3889  02F0' 0020               	movlb	0	; select bank0
  3890  02F1' 168E               	bsf	14,5	;volatile
  3891  02F2' 3005               	movlw	5
  3892  02F3' 0023               	movlb	3	; select bank3
  3893  02F4' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  3894  02F5' 300F               	movlw	15
  3895  02F6' 0080'              	movwf	??_converter_settings^(0+384)
  3896  02F7' 30F1               	movlw	241
  3897  02F8'                    u7587:
  3898  02F8' 0B89               	decfsz	9,f
  3899  02F9' 2800'              	goto	u7587
  3900  02FA' 0B80'              	decfsz	??_converter_settings^(0+384),f
  3901  02FB' 2800'              	goto	u7587
  3902  02FC' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  3903  02FD' 2800'              	goto	u7587
  3904  02FE'                    L3:
  3905  02FE' 0023               	movlb	3	; select bank3
  3906  02FF' 0800'              	movf	(_CC_disc_kp+3)^(0+384),w
  3907  0300' 0024               	movlb	4	; select bank4
  3908  0301' 0080'              	movwf	(_kp+3)^(0+512)
  3909  0302' 0023               	movlb	3	; select bank3
  3910  0303' 0800'              	movf	(_CC_disc_kp+2)^(0+384),w
  3911  0304' 0024               	movlb	4	; select bank4
  3912  0305' 0080'              	movwf	(_kp+2)^(0+512)
  3913  0306' 0023               	movlb	3	; select bank3
  3914  0307' 0800'              	movf	(_CC_disc_kp+1)^(0+384),w
  3915  0308' 0024               	movlb	4	; select bank4
  3916  0309' 0080'              	movwf	(_kp+1)^(0+512)
  3917  030A' 0023               	movlb	3	; select bank3
  3918  030B' 0800'              	movf	_CC_disc_kp^(0+384),w
  3919  030C' 0024               	movlb	4	; select bank4
  3920  030D' 0080'              	movwf	_kp^(0+512)
  3921  030E' 0023               	movlb	3	; select bank3
  3922  030F' 0800'              	movf	(_CC_disc_ki+3)^(0+384),w
  3923  0310' 0024               	movlb	4	; select bank4
  3924  0311' 0080'              	movwf	(_ki+3)^(0+512)
  3925  0312' 0023               	movlb	3	; select bank3
  3926  0313' 0800'              	movf	(_CC_disc_ki+2)^(0+384),w
  3927  0314' 0024               	movlb	4	; select bank4
  3928  0315' 0080'              	movwf	(_ki+2)^(0+512)
  3929  0316' 0023               	movlb	3	; select bank3
  3930  0317' 0800'              	movf	(_CC_disc_ki+1)^(0+384),w
  3931  0318' 0024               	movlb	4	; select bank4
  3932  0319' 0080'              	movwf	(_ki+1)^(0+512)
  3933  031A' 0023               	movlb	3	; select bank3
  3934  031B' 0800'              	movf	_CC_disc_ki^(0+384),w
  3935  031C' 2800'              	goto	L2
  3936  031D'                    l5123:	
  3937                           ;state_machine_b.c: 238:             break;
  3938                           
  3939                           
  3940                           ;state_machine_b.c: 240:             iref = (uint16_t) ( ( ( capacity * 4096.0 ) / (5000
      +                           * 2.5 * 2 ) ) + 0.5 );
  3941  031D' 0800'              	movf	_capacity^(0+384),w
  3942  031E' 0022               	movlb	2	; select bank2
  3943  031F' 0080'              	movwf	___xxtofl@val^(0+256)
  3944  0320' 0023               	movlb	3	; select bank3
  3945  0321' 0800'              	movf	(_capacity+1)^(0+384),w
  3946  0322' 0022               	movlb	2	; select bank2
  3947  0323' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  3948  0324' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  3949  0325' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  3950  0326' 3000               	movlw	0
  3951  0327' 3180' 2000' 3180'  	fcall	___xxtofl
  3952  032A' 0022               	movlb	2	; select bank2
  3953  032B' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  3954  032C' 0080'              	movwf	(___flmul@a+3)^(0+256)
  3955  032D' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  3956  032E' 0080'              	movwf	(___flmul@a+2)^(0+256)
  3957  032F' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  3958  0330' 0080'              	movwf	(___flmul@a+1)^(0+256)
  3959  0331' 0800'              	movf	?___xxtofl^(0+256),w
  3960  0332' 0080'              	movwf	___flmul@a^(0+256)
  3961  0333' 3045               	movlw	69
  3962  0334' 0080'              	movwf	(___flmul@b+3)^(0+256)
  3963  0335' 3080               	movlw	128
  3964  0336' 0080'              	movwf	(___flmul@b+2)^(0+256)
  3965  0337' 3000               	movlw	0
  3966  0338' 0080'              	movwf	(___flmul@b+1)^(0+256)
  3967  0339' 3000               	movlw	0
  3968  033A' 0080'              	movwf	___flmul@b^(0+256)
  3969  033B' 3180' 2000' 3180'  	fcall	___flmul
  3970  033E' 0022               	movlb	2	; select bank2
  3971  033F' 0800'              	movf	(?___flmul+3)^(0+256),w
  3972  0340' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  3973  0341' 0800'              	movf	(?___flmul+2)^(0+256),w
  3974  0342' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  3975  0343' 0800'              	movf	(?___flmul+1)^(0+256),w
  3976  0344' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  3977  0345' 0800'              	movf	?___flmul^(0+256),w
  3978  0346' 0080'              	movwf	___fldiv@b^(0+256)
  3979  0347' 3046               	movlw	70
  3980  0348' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  3981  0349' 30C3               	movlw	195
  3982  034A' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  3983  034B' 3050               	movlw	80
  3984  034C' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  3985  034D' 3000               	movlw	0
  3986  034E' 0080'              	movwf	___fldiv@a^(0+256)
  3987  034F' 3180' 2000' 3180'  	fcall	___fldiv
  3988  0352' 0022               	movlb	2	; select bank2
  3989  0353' 0800'              	movf	(?___fldiv+3)^(0+256),w
  3990  0354' 0080'              	movwf	(___fladd@a+3)^(0+256)
  3991  0355' 0800'              	movf	(?___fldiv+2)^(0+256),w
  3992  0356' 0080'              	movwf	(___fladd@a+2)^(0+256)
  3993  0357' 0800'              	movf	(?___fldiv+1)^(0+256),w
  3994  0358' 0080'              	movwf	(___fladd@a+1)^(0+256)
  3995  0359' 0800'              	movf	?___fldiv^(0+256),w
  3996  035A' 0080'              	movwf	___fladd@a^(0+256)
  3997  035B' 303F               	movlw	63
  3998  035C' 0080'              	movwf	(___fladd@b+3)^(0+256)
  3999  035D' 3000               	movlw	0
  4000  035E' 0080'              	movwf	(___fladd@b+2)^(0+256)
  4001  035F' 3000               	movlw	0
  4002  0360' 0080'              	movwf	(___fladd@b+1)^(0+256)
  4003  0361' 3000               	movlw	0
  4004  0362' 0080'              	movwf	___fladd@b^(0+256)
  4005  0363' 3180' 2000' 3180'  	fcall	___fladd
  4006  0366' 0022               	movlb	2	; select bank2
  4007  0367' 0800'              	movf	(?___fladd+3)^(0+256),w
  4008  0368' 0023               	movlb	3	; select bank3
  4009  0369' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  4010  036A' 0022               	movlb	2	; select bank2
  4011  036B' 0800'              	movf	(?___fladd+2)^(0+256),w
  4012  036C' 0023               	movlb	3	; select bank3
  4013  036D' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  4014  036E' 0022               	movlb	2	; select bank2
  4015  036F' 0800'              	movf	(?___fladd+1)^(0+256),w
  4016  0370' 0023               	movlb	3	; select bank3
  4017  0371' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  4018  0372' 0022               	movlb	2	; select bank2
  4019  0373' 0800'              	movf	?___fladd^(0+256),w
  4020  0374' 0023               	movlb	3	; select bank3
  4021  0375' 0080'              	movwf	___fltol@f1^(0+384)
  4022  0376' 3180' 2000' 3180'  	fcall	___fltol
  4023  0379' 0023               	movlb	3	; select bank3
  4024  037A' 0800'              	movf	(?___fltol+1)^(0+384),w
  4025  037B' 0021               	movlb	1	; select bank1
  4026  037C' 0080'              	movwf	(_iref+1)^(0+128)
  4027  037D' 0023               	movlb	3	; select bank3
  4028  037E' 0800'              	movf	?___fltol^(0+384),w
  4029  037F' 0021               	movlb	1	; select bank1
  4030  0380' 0080'              	movwf	_iref^(0+128)
  4031                           
  4032                           ;state_machine_b.c: 241:             if(basic_configuration.version == 0x02) timeout = (
      +                          uint16_t)(((float)capacity / (float)basic_configuration.const_current_char) * 3600 * 1.1
      +                          );
  4033  0381' 3002               	movlw	2
  4034  0382' 0024               	movlb	4	; select bank4
  4035  0383' 0600'              	xorwf	_basic_configuration^(0+512),w
  4036  0384' 1D03               	btfss	3,2
  4037  0385' 2800'              	goto	l5129
  4038  0386' 0023               	movlb	3	; select bank3
  4039  0387' 0800'              	movf	_capacity^(0+384),w
  4040  0388' 0022               	movlb	2	; select bank2
  4041  0389' 0080'              	movwf	___xxtofl@val^(0+256)
  4042  038A' 0023               	movlb	3	; select bank3
  4043  038B' 0800'              	movf	(_capacity+1)^(0+384),w
  4044  038C' 0022               	movlb	2	; select bank2
  4045  038D' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  4046  038E' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  4047  038F' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  4048  0390' 3000               	movlw	0
  4049  0391' 3180' 2000' 3180'  	fcall	___xxtofl
  4050  0394' 0022               	movlb	2	; select bank2
  4051  0395' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  4052  0396' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  4053  0397' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  4054  0398' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  4055  0399' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  4056  039A' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  4057  039B' 0800'              	movf	?___xxtofl^(0+256),w
  4058  039C' 0080'              	movwf	___fldiv@b^(0+256)
  4059  039D' 0024               	movlb	4	; select bank4
  4060  039E' 0803'              	movf	(_basic_configuration^(0+512)+3),w
  4061  039F' 0022               	movlb	2	; select bank2
  4062  03A0' 0080'              	movwf	___xxtofl@val^(0+256)
  4063  03A1' 0024               	movlb	4	; select bank4
  4064  03A2' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
  4065  03A3' 0022               	movlb	2	; select bank2
  4066  03A4' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  4067  03A5' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  4068  03A6' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  4069  03A7' 3000               	movlw	0
  4070  03A8' 3180' 2000' 3180'  	fcall	___xxtofl
  4071  03AB' 0022               	movlb	2	; select bank2
  4072  03AC' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  4073  03AD' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  4074  03AE' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  4075  03AF' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  4076  03B0' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  4077  03B1' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  4078  03B2' 0800'              	movf	?___xxtofl^(0+256),w
  4079  03B3' 0080'              	movwf	___fldiv@a^(0+256)
  4080  03B4' 3180' 2000' 3180'  	fcall	___fldiv
  4081  03B7' 0022               	movlb	2	; select bank2
  4082  03B8' 0800'              	movf	(?___fldiv+3)^(0+256),w
  4083  03B9' 0080'              	movwf	(___flmul@a+3)^(0+256)
  4084  03BA' 0800'              	movf	(?___fldiv+2)^(0+256),w
  4085  03BB' 0080'              	movwf	(___flmul@a+2)^(0+256)
  4086  03BC' 0800'              	movf	(?___fldiv+1)^(0+256),w
  4087  03BD' 0080'              	movwf	(___flmul@a+1)^(0+256)
  4088  03BE' 0800'              	movf	?___fldiv^(0+256),w
  4089  03BF' 0080'              	movwf	___flmul@a^(0+256)
  4090  03C0' 3045               	movlw	69
  4091  03C1' 0080'              	movwf	(___flmul@b+3)^(0+256)
  4092  03C2' 3061               	movlw	97
  4093  03C3' 0080'              	movwf	(___flmul@b+2)^(0+256)
  4094  03C4' 3000               	movlw	0
  4095  03C5' 0080'              	movwf	(___flmul@b+1)^(0+256)
  4096  03C6' 3000               	movlw	0
  4097  03C7' 0080'              	movwf	___flmul@b^(0+256)
  4098  03C8' 3180' 2000' 3180'  	fcall	___flmul
  4099  03CB' 0022               	movlb	2	; select bank2
  4100  03CC' 0800'              	movf	(?___flmul+3)^(0+256),w
  4101  03CD' 0023               	movlb	3	; select bank3
  4102  03CE' 0080'              	movwf	(_converter_settings$1611+3)^(0+384)
  4103  03CF' 0022               	movlb	2	; select bank2
  4104  03D0' 0800'              	movf	(?___flmul+2)^(0+256),w
  4105  03D1' 0023               	movlb	3	; select bank3
  4106  03D2' 0080'              	movwf	(_converter_settings$1611+2)^(0+384)
  4107  03D3' 0022               	movlb	2	; select bank2
  4108  03D4' 0800'              	movf	(?___flmul+1)^(0+256),w
  4109  03D5' 0023               	movlb	3	; select bank3
  4110  03D6' 0080'              	movwf	(_converter_settings$1611+1)^(0+384)
  4111  03D7' 0022               	movlb	2	; select bank2
  4112  03D8' 0800'              	movf	?___flmul^(0+256),w
  4113  03D9' 0023               	movlb	3	; select bank3
  4114  03DA' 0080'              	movwf	_converter_settings$1611^(0+384)
  4115  03DB' 0800'              	movf	(_converter_settings$1611+3)^(0+384),w
  4116  03DC' 0022               	movlb	2	; select bank2
  4117  03DD' 0080'              	movwf	(___flmul@a+3)^(0+256)
  4118  03DE' 0023               	movlb	3	; select bank3
  4119  03DF' 0800'              	movf	(_converter_settings$1611+2)^(0+384),w
  4120  03E0' 0022               	movlb	2	; select bank2
  4121  03E1' 0080'              	movwf	(___flmul@a+2)^(0+256)
  4122  03E2' 0023               	movlb	3	; select bank3
  4123  03E3' 0800'              	movf	(_converter_settings$1611+1)^(0+384),w
  4124  03E4' 0022               	movlb	2	; select bank2
  4125  03E5' 0080'              	movwf	(___flmul@a+1)^(0+256)
  4126  03E6' 0023               	movlb	3	; select bank3
  4127  03E7' 0800'              	movf	_converter_settings$1611^(0+384),w
  4128  03E8' 0022               	movlb	2	; select bank2
  4129  03E9' 0080'              	movwf	___flmul@a^(0+256)
  4130  03EA' 303F               	movlw	63
  4131  03EB' 0080'              	movwf	(___flmul@b+3)^(0+256)
  4132  03EC' 308C               	movlw	140
  4133  03ED' 0080'              	movwf	(___flmul@b+2)^(0+256)
  4134  03EE' 30CC               	movlw	204
  4135  03EF' 0080'              	movwf	(___flmul@b+1)^(0+256)
  4136  03F0' 30CD               	movlw	205
  4137  03F1' 0080'              	movwf	___flmul@b^(0+256)
  4138  03F2' 3180' 2000' 3180'  	fcall	___flmul
  4139  03F5' 0022               	movlb	2	; select bank2
  4140  03F6' 0800'              	movf	(?___flmul+3)^(0+256),w
  4141  03F7' 0023               	movlb	3	; select bank3
  4142  03F8' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  4143  03F9' 0022               	movlb	2	; select bank2
  4144  03FA' 0800'              	movf	(?___flmul+2)^(0+256),w
  4145  03FB' 0023               	movlb	3	; select bank3
  4146  03FC' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  4147  03FD' 0022               	movlb	2	; select bank2
  4148  03FE' 0800'              	movf	(?___flmul+1)^(0+256),w
  4149  03FF' 0023               	movlb	3	; select bank3
  4150  0400' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  4151  0401' 0022               	movlb	2	; select bank2
  4152  0402' 0800'              	movf	?___flmul^(0+256),w
  4153  0403' 0023               	movlb	3	; select bank3
  4154  0404' 0080'              	movwf	___fltol@f1^(0+384)
  4155  0405' 3180' 2000' 3180'  	fcall	___fltol
  4156  0408' 0023               	movlb	3	; select bank3
  4157  0409' 0800'              	movf	(?___fltol+1)^(0+384),w
  4158  040A' 0080'              	movwf	(_timeout+1)^(0+384)
  4159  040B' 0800'              	movf	?___fltol^(0+384),w
  4160  040C' 0080'              	movwf	_timeout^(0+384)
  4161  040D'                    l5129:
  4162                           
  4163                           ;state_machine_b.c: 242:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC4 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC4 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_char_kp; ki = CC_char_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
  4164  040D' 0020               	movlb	0	; select bank0
  4165  040E' 118E               	bcf	14,3	;volatile
  4166  040F' 120E               	bcf	14,4	;volatile
  4167  0410' 3005               	movlw	5
  4168  0411' 0023               	movlb	3	; select bank3
  4169  0412' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  4170  0413' 300F               	movlw	15
  4171  0414' 0080'              	movwf	??_converter_settings^(0+384)
  4172  0415' 30F1               	movlw	241
  4173  0416'                    u7597:
  4174  0416' 0B89               	decfsz	9,f
  4175  0417' 2800'              	goto	u7597
  4176  0418' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4177  0419' 2800'              	goto	u7597
  4178  041A' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  4179  041B' 2800'              	goto	u7597
  4180  041C' 0020               	movlb	0	; select bank0
  4181  041D' 160E               	bsf	14,4	;volatile
  4182  041E' 3005               	movlw	5
  4183  041F' 0023               	movlb	3	; select bank3
  4184  0420' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  4185  0421' 300F               	movlw	15
  4186  0422' 0080'              	movwf	??_converter_settings^(0+384)
  4187  0423' 30F1               	movlw	241
  4188  0424'                    u7607:
  4189  0424' 0B89               	decfsz	9,f
  4190  0425' 2800'              	goto	u7607
  4191  0426' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4192  0427' 2800'              	goto	u7607
  4193  0428' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  4194  0429' 2800'              	goto	u7607
  4195  042A' 0020               	movlb	0	; select bank0
  4196  042B' 120E               	bcf	14,4	;volatile
  4197  042C' 3005               	movlw	5
  4198  042D' 0023               	movlb	3	; select bank3
  4199  042E' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  4200  042F' 300F               	movlw	15
  4201  0430' 0080'              	movwf	??_converter_settings^(0+384)
  4202  0431' 30F1               	movlw	241
  4203  0432'                    u7617:
  4204  0432' 0B89               	decfsz	9,f
  4205  0433' 2800'              	goto	u7617
  4206  0434' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4207  0435' 2800'              	goto	u7617
  4208  0436' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  4209  0437' 2800'              	goto	u7617
  4210  0438' 0020               	movlb	0	; select bank0
  4211  0439' 168E               	bsf	14,5	;volatile
  4212  043A' 3005               	movlw	5
  4213  043B' 0023               	movlb	3	; select bank3
  4214  043C' 0081'              	movwf	(??_converter_settings^(0+384)+1)
  4215  043D' 300F               	movlw	15
  4216  043E' 0080'              	movwf	??_converter_settings^(0+384)
  4217  043F' 30F1               	movlw	241
  4218  0440'                    u7627:
  4219  0440' 0B89               	decfsz	9,f
  4220  0441' 2800'              	goto	u7627
  4221  0442' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4222  0443' 2800'              	goto	u7627
  4223  0444' 0B81'              	decfsz	(??_converter_settings^(0+384)+1),f
  4224  0445' 2800'              	goto	u7627
  4225  0446'                    L4:
  4226  0446' 0023               	movlb	3	; select bank3
  4227  0447' 0800'              	movf	(_CC_char_kp+3)^(0+384),w
  4228  0448' 0024               	movlb	4	; select bank4
  4229  0449' 0080'              	movwf	(_kp+3)^(0+512)
  4230  044A' 0023               	movlb	3	; select bank3
  4231  044B' 0800'              	movf	(_CC_char_kp+2)^(0+384),w
  4232  044C' 0024               	movlb	4	; select bank4
  4233  044D' 0080'              	movwf	(_kp+2)^(0+512)
  4234  044E' 0023               	movlb	3	; select bank3
  4235  044F' 0800'              	movf	(_CC_char_kp+1)^(0+384),w
  4236  0450' 0024               	movlb	4	; select bank4
  4237  0451' 0080'              	movwf	(_kp+1)^(0+512)
  4238  0452' 0023               	movlb	3	; select bank3
  4239  0453' 0800'              	movf	_CC_char_kp^(0+384),w
  4240  0454' 0024               	movlb	4	; select bank4
  4241  0455' 0080'              	movwf	_kp^(0+512)
  4242  0456' 0023               	movlb	3	; select bank3
  4243  0457' 0800'              	movf	(_CC_char_ki+3)^(0+384),w
  4244  0458' 0024               	movlb	4	; select bank4
  4245  0459' 0080'              	movwf	(_ki+3)^(0+512)
  4246  045A' 0023               	movlb	3	; select bank3
  4247  045B' 0800'              	movf	(_CC_char_ki+2)^(0+384),w
  4248  045C' 0024               	movlb	4	; select bank4
  4249  045D' 0080'              	movwf	(_ki+2)^(0+512)
  4250  045E' 0023               	movlb	3	; select bank3
  4251  045F' 0800'              	movf	(_CC_char_ki+1)^(0+384),w
  4252  0460' 0024               	movlb	4	; select bank4
  4253  0461' 0080'              	movwf	(_ki+1)^(0+512)
  4254  0462' 0023               	movlb	3	; select bank3
  4255  0463' 0800'              	movf	_CC_char_ki^(0+384),w
  4256  0464'                    L2:
  4257  0464' 0024               	movlb	4	; select bank4
  4258  0465' 0080'              	movwf	_ki^(0+512)
  4259  0466' 0023               	movlb	3	; select bank3
  4260  0467' 0800'              	movf	_CC_char_disc_kd^(0+384),w
  4261  0468' 0080'              	movwf	??_converter_settings^(0+384)
  4262  0469' 0181'              	clrf	(??_converter_settings^(0+384)+1)
  4263  046A' 0182'              	clrf	(??_converter_settings^(0+384)+2)
  4264  046B' 0183'              	clrf	(??_converter_settings^(0+384)+3)
  4265  046C' 0800'              	movf	(??_converter_settings+3)^(0+384),w
  4266  046D' 0022               	movlb	2	; select bank2
  4267  046E' 0080'              	movwf	(___xxtofl@val+3)^(0+256)
  4268  046F' 0023               	movlb	3	; select bank3
  4269  0470' 0800'              	movf	(??_converter_settings+2)^(0+384),w
  4270  0471' 0022               	movlb	2	; select bank2
  4271  0472' 0080'              	movwf	(___xxtofl@val+2)^(0+256)
  4272  0473' 0023               	movlb	3	; select bank3
  4273  0474' 0800'              	movf	(??_converter_settings+1)^(0+384),w
  4274  0475' 0022               	movlb	2	; select bank2
  4275  0476' 0080'              	movwf	(___xxtofl@val+1)^(0+256)
  4276  0477' 0023               	movlb	3	; select bank3
  4277  0478' 0800'              	movf	??_converter_settings^(0+384),w
  4278  0479' 0022               	movlb	2	; select bank2
  4279  047A' 0080'              	movwf	___xxtofl@val^(0+256)
  4280  047B' 3000               	movlw	0
  4281  047C' 3180' 2000' 3180'  	fcall	___xxtofl
  4282  047F' 0022               	movlb	2	; select bank2
  4283  0480' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  4284  0481' 0024               	movlb	4	; select bank4
  4285  0482' 0080'              	movwf	(_kd+3)^(0+512)
  4286  0483' 0022               	movlb	2	; select bank2
  4287  0484' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  4288  0485' 0024               	movlb	4	; select bank4
  4289  0486' 0080'              	movwf	(_kd+2)^(0+512)
  4290  0487' 0022               	movlb	2	; select bank2
  4291  0488' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  4292  0489' 0024               	movlb	4	; select bank4
  4293  048A' 0080'              	movwf	(_kd+1)^(0+512)
  4294  048B' 0022               	movlb	2	; select bank2
  4295  048C' 0800'              	movf	?___xxtofl^(0+256),w
  4296  048D' 0024               	movlb	4	; select bank4
  4297  048E' 0080'              	movwf	_kd^(0+512)
  4298  048F' 3000               	movlw	0
  4299  0490' 0080'              	movwf	(_pidi+3)^(0+512)
  4300  0491' 3000               	movlw	0
  4301  0492' 0080'              	movwf	(_pidi+2)^(0+512)
  4302  0493' 3000               	movlw	0
  4303  0494' 0080'              	movwf	(_pidi+1)^(0+512)
  4304  0495' 3000               	movlw	0
  4305  0496' 0080'              	movwf	_pidi^(0+512)
  4306                           
  4307                           ;state_machine_b.c: 243:             break;
  4308  0497' 2800'              	goto	l5157
  4309  0498'                    l5155:
  4310  0498' 0023               	movlb	3	; select bank3
  4311  0499' 0800'              	movf	_state^(0+384),w
  4312  049A' 0080'              	movwf	??_converter_settings^(0+384)
  4313  049B' 0181'              	clrf	(??_converter_settings^(0+384)+1)
  4314                           
  4315                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4316                           ; Switch size 1, requested type "simple"
  4317                           ; Number of cases is 1, Range of values is 0 to 0
  4318                           ; switch strategies available:
  4319                           ; Name         Instructions Cycles
  4320                           ; simple_byte            4     3 (average)
  4321                           ; direct_byte            8     6 (fixed)
  4322                           ; jumptable            260     6 (fixed)
  4323                           ;	Chosen strategy is simple_byte
  4324  049C' 0800'              	movf	(??_converter_settings+1)^(0+384),w
  4325  049D' 3A00               	xorlw	0	; case 0
  4326  049E' 1903               	skipnz
  4327  049F' 2800'              	goto	l7759
  4328  04A0' 2800'              	goto	l5157
  4329  04A1'                    l7759:
  4330                           
  4331                           ; Switch size 1, requested type "simple"
  4332                           ; Number of cases is 5, Range of values is 3 to 11
  4333                           ; switch strategies available:
  4334                           ; Name         Instructions Cycles
  4335                           ; simple_byte           16     9 (average)
  4336                           ; direct_byte           27     9 (fixed)
  4337                           ; jumptable            263     9 (fixed)
  4338                           ;	Chosen strategy is simple_byte
  4339  04A1' 0800'              	movf	??_converter_settings^(0+384),w
  4340  04A2' 3A03               	xorlw	3	; case 3
  4341  04A3' 1903               	skipnz
  4342  04A4' 2800'              	goto	l5019
  4343  04A5' 3A06               	xorlw	6	; case 5
  4344  04A6' 1903               	skipnz
  4345  04A7' 2800'              	goto	l5123
  4346  04A8' 3A02               	xorlw	2	; case 7
  4347  04A9' 1903               	skipnz
  4348  04AA' 2800'              	goto	l5049
  4349  04AB' 3A0E               	xorlw	14	; case 9
  4350  04AC' 1903               	skipnz
  4351  04AD' 2800'              	goto	l5093
  4352  04AE' 3A02               	xorlw	2	; case 11
  4353  04AF' 1903               	skipnz
  4354  04B0' 2800'              	goto	l5065
  4355  04B1' 2800'              	goto	l5157
  4356  04B2'                    l5157:
  4357                           
  4358                           ;state_machine_b.c: 245:     _delay((unsigned long)((10)*(32000000/4000.0)));
  4359  04B2' 3068               	movlw	104
  4360  04B3' 0023               	movlb	3	; select bank3
  4361  04B4' 0080'              	movwf	??_converter_settings^(0+384)
  4362  04B5' 30E4               	movlw	228
  4363  04B6'                    u7637:
  4364  04B6' 0B89               	decfsz	9,f
  4365  04B7' 2800'              	goto	u7637
  4366  04B8' 0B80'              	decfsz	??_converter_settings^(0+384),f
  4367  04B9' 2800'              	goto	u7637
  4368  04BA' 0000               	nop
  4369                           
  4370                           ;state_machine_b.c: 246:     second = 0;
  4371  04BB' 0023               	movlb	3	; select bank3
  4372  04BC' 0180'              	clrf	_second^(0+384)
  4373  04BD' 0180'              	clrf	(_second+1)^(0+384)
  4374                           
  4375                           ;state_machine_b.c: 247:     conv = 1;
  4376  04BE' 0021               	movlb	1	; select bank1
  4377  04BF' 0180'              	clrf	_conv^(0+128)
  4378  04C0' 0A80'              	incf	_conv^(0+128),f
  4379  04C1' 0008               	return
  4380  04C2'                    __end_of_converter_settings:
  4381                           
  4382                           	psect	text7
  4383  0000'                    __ptext7:	
  4384 ;; *************** function _Cell_ON *****************
  4385 ;; Defined at:
  4386 ;;		line 508 in file "charger_discharger.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;		None
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;		None
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      void 
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4402 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4403 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4404 ;;Total ram usage:        1 bytes
  4405 ;; Hardware stack levels used: 1
  4406 ;; Hardware stack levels required when called: 5
  4407 ;; This function calls:
  4408 ;;		Nothing
  4409 ;; This function is called by:
  4410 ;;		_converter_settings
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414  0000'                    _Cell_ON:	
  4415                           ;psect for function _Cell_ON
  4416                           
  4417                           
  4418                           ;charger_discharger.c: 510:     if (cell_count == 1)
  4419                           
  4420                           ;incstack = 0
  4421                           ; Regs used in _Cell_ON: [wreg+status,2+status,0]
  4422  0000' 0023               	movlb	3	; select bank3
  4423  0001' 0300'              	decf	_cell_count^(0+384),w
  4424  0002' 1D03               	btfss	3,2
  4425  0003' 2800'              	goto	l4453
  4426                           
  4427                           ;charger_discharger.c: 511:     {;charger_discharger.c: 512:         { RB2 = 1; };
  4428  0004' 0020               	movlb	0	; select bank0
  4429  0005' 150D               	bsf	13,2	;volatile
  4430                           
  4431                           ;charger_discharger.c: 513:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4432  0006' 3068               	movlw	104
  4433  0007' 0022               	movlb	2	; select bank2
  4434  0008' 0080'              	movwf	??_Cell_ON^(0+256)
  4435  0009' 30E4               	movlw	228
  4436  000A'                    u7647:
  4437  000A' 0B89               	decfsz	9,f
  4438  000B' 2800'              	goto	u7647
  4439  000C' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4440  000D' 2800'              	goto	u7647
  4441  000E' 0000               	nop
  4442                           
  4443                           ;charger_discharger.c: 514:         { RB3 = 0; };
  4444  000F' 0020               	movlb	0	; select bank0
  4445  0010' 118D               	bcf	13,3	;volatile
  4446                           
  4447                           ;charger_discharger.c: 515:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4448  0011' 3068               	movlw	104
  4449  0012' 0022               	movlb	2	; select bank2
  4450  0013' 0080'              	movwf	??_Cell_ON^(0+256)
  4451  0014' 30E4               	movlw	228
  4452  0015'                    u7657:
  4453  0015' 0B89               	decfsz	9,f
  4454  0016' 2800'              	goto	u7657
  4455  0017' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4456  0018' 2800'              	goto	u7657
  4457  0019' 0000               	nop
  4458  001A' 2800'              	goto	l4449
  4459  001B'                    l4455:
  4460                           
  4461                           ;charger_discharger.c: 521:     {;charger_discharger.c: 522:         { RB2 = 0; };
  4462  001B' 0020               	movlb	0	; select bank0
  4463  001C' 110D               	bcf	13,2	;volatile
  4464                           
  4465                           ;charger_discharger.c: 523:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4466  001D' 3068               	movlw	104
  4467  001E' 0022               	movlb	2	; select bank2
  4468  001F' 0080'              	movwf	??_Cell_ON^(0+256)
  4469  0020' 30E4               	movlw	228
  4470  0021'                    u7687:
  4471  0021' 0B89               	decfsz	9,f
  4472  0022' 2800'              	goto	u7687
  4473  0023' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4474  0024' 2800'              	goto	u7687
  4475  0025' 0000               	nop
  4476                           
  4477                           ;charger_discharger.c: 524:         { RB3 = 1; };
  4478  0026' 0020               	movlb	0	; select bank0
  4479  0027' 158D               	bsf	13,3	;volatile
  4480                           
  4481                           ;charger_discharger.c: 525:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4482  0028' 3068               	movlw	104
  4483  0029' 0022               	movlb	2	; select bank2
  4484  002A' 0080'              	movwf	??_Cell_ON^(0+256)
  4485  002B' 30E4               	movlw	228
  4486  002C'                    u7697:
  4487  002C' 0B89               	decfsz	9,f
  4488  002D' 2800'              	goto	u7697
  4489  002E' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4490  002F' 2800'              	goto	u7697
  4491  0030' 0000               	nop
  4492  0031'                    l4449:
  4493                           
  4494                           ;charger_discharger.c: 516:         { RB4 = 0; };
  4495  0031' 0020               	movlb	0	; select bank0
  4496  0032' 120D               	bcf	13,4	;volatile
  4497                           
  4498                           ;charger_discharger.c: 517:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4499  0033' 3068               	movlw	104
  4500  0034' 0022               	movlb	2	; select bank2
  4501  0035' 0080'              	movwf	??_Cell_ON^(0+256)
  4502  0036' 30E4               	movlw	228
  4503  0037'                    u7667:
  4504  0037' 0B89               	decfsz	9,f
  4505  0038' 2800'              	goto	u7667
  4506  0039' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4507  003A' 2800'              	goto	u7667
  4508  003B' 0000               	nop
  4509                           
  4510                           ;charger_discharger.c: 518:         { RB5 = 0; };
  4511  003C' 0020               	movlb	0	; select bank0
  4512  003D' 128D               	bcf	13,5	;volatile
  4513                           
  4514                           ;charger_discharger.c: 519:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4515  003E' 3068               	movlw	104
  4516  003F' 0022               	movlb	2	; select bank2
  4517  0040' 0080'              	movwf	??_Cell_ON^(0+256)
  4518  0041' 30E4               	movlw	228
  4519  0042'                    u7677:
  4520  0042' 0B89               	decfsz	9,f
  4521  0043' 2800'              	goto	u7677
  4522  0044' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4523  0045' 2800'              	goto	u7677
  4524  0046' 0000               	nop
  4525                           
  4526                           ;charger_discharger.c: 520:     }else if (cell_count == 2)
  4527  0047' 0008               	return
  4528  0048'                    l4453:
  4529  0048' 3002               	movlw	2
  4530  0049' 0600'              	xorwf	_cell_count^(0+384),w
  4531  004A' 1903               	btfsc	3,2
  4532  004B' 2800'              	goto	l4455
  4533  004C' 3003               	movlw	3
  4534  004D' 0600'              	xorwf	_cell_count^(0+384),w
  4535  004E' 1D03               	btfss	3,2
  4536  004F' 2800'              	goto	l4477
  4537                           
  4538                           ;charger_discharger.c: 531:     {;charger_discharger.c: 532:         { RB2 = 0; };
  4539  0050' 0020               	movlb	0	; select bank0
  4540  0051' 110D               	bcf	13,2	;volatile
  4541                           
  4542                           ;charger_discharger.c: 533:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4543  0052' 3068               	movlw	104
  4544  0053' 0022               	movlb	2	; select bank2
  4545  0054' 0080'              	movwf	??_Cell_ON^(0+256)
  4546  0055' 30E4               	movlw	228
  4547  0056'                    u7707:
  4548  0056' 0B89               	decfsz	9,f
  4549  0057' 2800'              	goto	u7707
  4550  0058' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4551  0059' 2800'              	goto	u7707
  4552  005A' 0000               	nop
  4553                           
  4554                           ;charger_discharger.c: 534:         { RB3 = 0; };
  4555  005B' 0020               	movlb	0	; select bank0
  4556  005C' 118D               	bcf	13,3	;volatile
  4557                           
  4558                           ;charger_discharger.c: 535:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4559  005D' 3068               	movlw	104
  4560  005E' 0022               	movlb	2	; select bank2
  4561  005F' 0080'              	movwf	??_Cell_ON^(0+256)
  4562  0060' 30E4               	movlw	228
  4563  0061'                    u7717:
  4564  0061' 0B89               	decfsz	9,f
  4565  0062' 2800'              	goto	u7717
  4566  0063' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4567  0064' 2800'              	goto	u7717
  4568  0065' 0000               	nop
  4569                           
  4570                           ;charger_discharger.c: 536:         { RB4 = 1; };
  4571  0066' 0020               	movlb	0	; select bank0
  4572  0067' 160D               	bsf	13,4	;volatile
  4573                           
  4574                           ;charger_discharger.c: 537:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4575  0068' 3068               	movlw	104
  4576  0069' 0022               	movlb	2	; select bank2
  4577  006A' 0080'              	movwf	??_Cell_ON^(0+256)
  4578  006B' 30E4               	movlw	228
  4579  006C'                    u7727:
  4580  006C' 0B89               	decfsz	9,f
  4581  006D' 2800'              	goto	u7727
  4582  006E' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4583  006F' 2800'              	goto	u7727
  4584  0070' 0000               	nop
  4585                           
  4586                           ;charger_discharger.c: 538:         { RB5 = 0; };
  4587  0071' 0020               	movlb	0	; select bank0
  4588  0072' 128D               	bcf	13,5	;volatile
  4589                           
  4590                           ;charger_discharger.c: 539:     }else if (cell_count == 4)
  4591  0073' 0008               	return
  4592  0074'                    l4477:
  4593  0074' 3004               	movlw	4
  4594  0075' 0600'              	xorwf	_cell_count^(0+384),w
  4595  0076' 1D03               	btfss	3,2
  4596  0077' 0008               	return
  4597                           
  4598                           ;charger_discharger.c: 540:     {;charger_discharger.c: 541:         { RB2 = 0; };
  4599  0078' 0020               	movlb	0	; select bank0
  4600  0079' 110D               	bcf	13,2	;volatile
  4601                           
  4602                           ;charger_discharger.c: 542:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4603  007A' 3068               	movlw	104
  4604  007B' 0022               	movlb	2	; select bank2
  4605  007C' 0080'              	movwf	??_Cell_ON^(0+256)
  4606  007D' 30E4               	movlw	228
  4607  007E'                    u7737:
  4608  007E' 0B89               	decfsz	9,f
  4609  007F' 2800'              	goto	u7737
  4610  0080' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4611  0081' 2800'              	goto	u7737
  4612  0082' 0000               	nop
  4613                           
  4614                           ;charger_discharger.c: 543:         { RB3 = 0; };
  4615  0083' 0020               	movlb	0	; select bank0
  4616  0084' 118D               	bcf	13,3	;volatile
  4617                           
  4618                           ;charger_discharger.c: 544:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4619  0085' 3068               	movlw	104
  4620  0086' 0022               	movlb	2	; select bank2
  4621  0087' 0080'              	movwf	??_Cell_ON^(0+256)
  4622  0088' 30E4               	movlw	228
  4623  0089'                    u7747:
  4624  0089' 0B89               	decfsz	9,f
  4625  008A' 2800'              	goto	u7747
  4626  008B' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4627  008C' 2800'              	goto	u7747
  4628  008D' 0000               	nop
  4629                           
  4630                           ;charger_discharger.c: 545:         { RB4 = 0; };
  4631  008E' 0020               	movlb	0	; select bank0
  4632  008F' 120D               	bcf	13,4	;volatile
  4633                           
  4634                           ;charger_discharger.c: 546:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4635  0090' 3068               	movlw	104
  4636  0091' 0022               	movlb	2	; select bank2
  4637  0092' 0080'              	movwf	??_Cell_ON^(0+256)
  4638  0093' 30E4               	movlw	228
  4639  0094'                    u7757:
  4640  0094' 0B89               	decfsz	9,f
  4641  0095' 2800'              	goto	u7757
  4642  0096' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4643  0097' 2800'              	goto	u7757
  4644  0098' 0000               	nop
  4645                           
  4646                           ;charger_discharger.c: 547:         { RB5 = 1; };
  4647  0099' 0020               	movlb	0	; select bank0
  4648  009A' 168D               	bsf	13,5	;volatile
  4649                           
  4650                           ;charger_discharger.c: 548:         _delay((unsigned long)((10)*(32000000/4000.0)));
  4651  009B' 3068               	movlw	104
  4652  009C' 0022               	movlb	2	; select bank2
  4653  009D' 0080'              	movwf	??_Cell_ON^(0+256)
  4654  009E' 30E4               	movlw	228
  4655  009F'                    u7767:
  4656  009F' 0B89               	decfsz	9,f
  4657  00A0' 2800'              	goto	u7767
  4658  00A1' 0B80'              	decfsz	??_Cell_ON^(0+256),f
  4659  00A2' 2800'              	goto	u7767
  4660  00A3' 0000               	nop
  4661  00A4' 0008               	return
  4662  00A5'                    __end_of_Cell_ON:
  4663                           
  4664                           	psect	text8
  4665  0000'                    __ptext8:	
  4666 ;; *************** function _fIDLE *****************
  4667 ;; Defined at:
  4668 ;;		line 55 in file "state_machine_b.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      void 
  4675 ;; Registers used:
  4676 ;;		wreg, status,2, status,0, pclath, cstack
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4686 ;;Total ram usage:        0 bytes
  4687 ;; Hardware stack levels used: 1
  4688 ;; Hardware stack levels required when called: 7
  4689 ;; This function calls:
  4690 ;;		_Cell_OFF
  4691 ;;		_set_DC
  4692 ;; This function is called by:
  4693 ;;		_state_machine
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697  0000'                    _fIDLE:	
  4698                           ;psect for function _fIDLE
  4699                           
  4700                           
  4701                           ;state_machine_b.c: 58:     if (start) { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50.
      +                          0; set_DC(); Cell_OFF();};
  4702                           
  4703                           ;incstack = 0
  4704                           ; Regs used in _fIDLE: [wreg+status,2+status,0+pclath+cstack]
  4705  0000' 0021               	movlb	1	; select bank1
  4706  0001' 0800'              	movf	_start^(0+128),w
  4707  0002' 1903               	btfsc	3,2
  4708  0003' 2800'              	goto	l6005
  4709  0004' 0020               	movlb	0	; select bank0
  4710  0005' 118E               	bcf	14,3	;volatile
  4711  0006' 120E               	bcf	14,4	;volatile
  4712  0007' 0021               	movlb	1	; select bank1
  4713  0008' 0180'              	clrf	_conv^(0+128)
  4714  0009' 0020               	movlb	0	; select bank0
  4715  000A' 128E               	bcf	14,5	;volatile
  4716  000B' 3042               	movlw	66
  4717  000C' 0023               	movlb	3	; select bank3
  4718  000D' 0080'              	movwf	(_pidt+3)^(0+384)
  4719  000E' 3048               	movlw	72
  4720  000F' 0080'              	movwf	(_pidt+2)^(0+384)
  4721  0010' 3000               	movlw	0
  4722  0011' 0080'              	movwf	(_pidt+1)^(0+384)
  4723  0012' 3000               	movlw	0
  4724  0013' 0080'              	movwf	_pidt^(0+384)
  4725  0014' 3180' 2000' 3180'  	fcall	_set_DC
  4726  0017' 3180' 2000'        	fcall	_Cell_OFF
  4727  0019'                    l6005:
  4728                           
  4729                           ;state_machine_b.c: 59:     start = 0;
  4730  0019' 0021               	movlb	1	; select bank1
  4731  001A' 0180'              	clrf	_start^(0+128)
  4732  001B' 0008               	return
  4733  001C'                    __end_of_fIDLE:
  4734                           
  4735                           	psect	text9
  4736  0000'                    __ptext9:	
  4737 ;; *************** function _fDISCHARGE *****************
  4738 ;; Defined at:
  4739 ;;		line 96 in file "state_machine_b.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;		None
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;		None
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      void 
  4746 ;; Registers used:
  4747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4756 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4757 ;;Total ram usage:        2 bytes
  4758 ;; Hardware stack levels used: 1
  4759 ;; Hardware stack levels required when called: 7
  4760 ;; This function calls:
  4761 ;;		_Cell_OFF
  4762 ;;		___fladd
  4763 ;;		___fldiv
  4764 ;;		___flge
  4765 ;;		___flmul
  4766 ;;		___fltol
  4767 ;;		___xxtofl
  4768 ;;		_getTime
  4769 ;;		_set_DC
  4770 ;; This function is called by:
  4771 ;;		_state_machine
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775  0000'                    _fDISCHARGE:	
  4776                           ;psect for function _fDISCHARGE
  4777                           
  4778                           
  4779                           ;state_machine_b.c: 98:     if ( (((uint16_t) ( ( ( (float)vavg * 5000.0 ) / 4096.0 ) + 
      +                          0.5 )) < basic_configuration.end_of_discharge) )
  4780                           
  4781                           ;incstack = 0
  4782                           ; Regs used in _fDISCHARGE: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4783  0000' 0023               	movlb	3	; select bank3
  4784  0001' 0800'              	movf	_vavg^(0+384),w
  4785  0002' 0022               	movlb	2	; select bank2
  4786  0003' 0080'              	movwf	___xxtofl@val^(0+256)
  4787  0004' 0023               	movlb	3	; select bank3
  4788  0005' 0800'              	movf	(_vavg+1)^(0+384),w
  4789  0006' 0022               	movlb	2	; select bank2
  4790  0007' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  4791  0008' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  4792  0009' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  4793  000A' 3000               	movlw	0
  4794  000B' 3180' 2000' 3180'  	fcall	___xxtofl
  4795  000E' 0022               	movlb	2	; select bank2
  4796  000F' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  4797  0010' 0080'              	movwf	(___flmul@a+3)^(0+256)
  4798  0011' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  4799  0012' 0080'              	movwf	(___flmul@a+2)^(0+256)
  4800  0013' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  4801  0014' 0080'              	movwf	(___flmul@a+1)^(0+256)
  4802  0015' 0800'              	movf	?___xxtofl^(0+256),w
  4803  0016' 0080'              	movwf	___flmul@a^(0+256)
  4804  0017' 3045               	movlw	69
  4805  0018' 0080'              	movwf	(___flmul@b+3)^(0+256)
  4806  0019' 309C               	movlw	156
  4807  001A' 0080'              	movwf	(___flmul@b+2)^(0+256)
  4808  001B' 3040               	movlw	64
  4809  001C' 0080'              	movwf	(___flmul@b+1)^(0+256)
  4810  001D' 3000               	movlw	0
  4811  001E' 0080'              	movwf	___flmul@b^(0+256)
  4812  001F' 3180' 2000' 3180'  	fcall	___flmul
  4813  0022' 0022               	movlb	2	; select bank2
  4814  0023' 0800'              	movf	(?___flmul+3)^(0+256),w
  4815  0024' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  4816  0025' 0800'              	movf	(?___flmul+2)^(0+256),w
  4817  0026' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  4818  0027' 0800'              	movf	(?___flmul+1)^(0+256),w
  4819  0028' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  4820  0029' 0800'              	movf	?___flmul^(0+256),w
  4821  002A' 0080'              	movwf	___fldiv@b^(0+256)
  4822  002B' 3045               	movlw	69
  4823  002C' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  4824  002D' 3080               	movlw	128
  4825  002E' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  4826  002F' 3000               	movlw	0
  4827  0030' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  4828  0031' 3000               	movlw	0
  4829  0032' 0080'              	movwf	___fldiv@a^(0+256)
  4830  0033' 3180' 2000' 3180'  	fcall	___fldiv
  4831  0036' 0022               	movlb	2	; select bank2
  4832  0037' 0800'              	movf	(?___fldiv+3)^(0+256),w
  4833  0038' 0080'              	movwf	(___fladd@a+3)^(0+256)
  4834  0039' 0800'              	movf	(?___fldiv+2)^(0+256),w
  4835  003A' 0080'              	movwf	(___fladd@a+2)^(0+256)
  4836  003B' 0800'              	movf	(?___fldiv+1)^(0+256),w
  4837  003C' 0080'              	movwf	(___fladd@a+1)^(0+256)
  4838  003D' 0800'              	movf	?___fldiv^(0+256),w
  4839  003E' 0080'              	movwf	___fladd@a^(0+256)
  4840  003F' 303F               	movlw	63
  4841  0040' 0080'              	movwf	(___fladd@b+3)^(0+256)
  4842  0041' 3000               	movlw	0
  4843  0042' 0080'              	movwf	(___fladd@b+2)^(0+256)
  4844  0043' 3000               	movlw	0
  4845  0044' 0080'              	movwf	(___fladd@b+1)^(0+256)
  4846  0045' 3000               	movlw	0
  4847  0046' 0080'              	movwf	___fladd@b^(0+256)
  4848  0047' 3180' 2000' 3180'  	fcall	___fladd
  4849  004A' 0022               	movlb	2	; select bank2
  4850  004B' 0800'              	movf	(?___fladd+3)^(0+256),w
  4851  004C' 0023               	movlb	3	; select bank3
  4852  004D' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  4853  004E' 0022               	movlb	2	; select bank2
  4854  004F' 0800'              	movf	(?___fladd+2)^(0+256),w
  4855  0050' 0023               	movlb	3	; select bank3
  4856  0051' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  4857  0052' 0022               	movlb	2	; select bank2
  4858  0053' 0800'              	movf	(?___fladd+1)^(0+256),w
  4859  0054' 0023               	movlb	3	; select bank3
  4860  0055' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  4861  0056' 0022               	movlb	2	; select bank2
  4862  0057' 0800'              	movf	?___fladd^(0+256),w
  4863  0058' 0023               	movlb	3	; select bank3
  4864  0059' 0080'              	movwf	___fltol@f1^(0+384)
  4865  005A' 3180' 2000' 3180'  	fcall	___fltol
  4866  005D' 0024               	movlb	4	; select bank4
  4867  005E' 080D'              	movf	((_basic_configuration+1)^(0+512)+13),w
  4868  005F' 0023               	movlb	3	; select bank3
  4869  0060' 0200'              	subwf	(?___fltol+1)^(0+384),w
  4870  0061' 1D03               	skipz
  4871  0062' 2800'              	goto	u6555
  4872  0063' 0024               	movlb	4	; select bank4
  4873  0064' 080D'              	movf	(_basic_configuration^(0+512)+13),w
  4874  0065' 0023               	movlb	3	; select bank3
  4875  0066' 0200'              	subwf	?___fltol^(0+384),w
  4876  0067'                    u6555:
  4877  0067' 1803               	skipnc
  4878  0068' 2800'              	goto	l6029
  4879                           
  4880                           ;state_machine_b.c: 99:     {;state_machine_b.c: 100:         if (second > 5)
  4881  0069' 3000               	movlw	0
  4882  006A' 0200'              	subwf	(_second+1)^(0+384),w
  4883  006B' 3006               	movlw	6
  4884  006C' 1903               	skipnz
  4885  006D' 0200'              	subwf	_second^(0+384),w
  4886  006E' 1C03               	skipc
  4887  006F' 2800'              	goto	l6029
  4888                           
  4889                           ;state_machine_b.c: 101:         {;state_machine_b.c: 102:             state = WAIT;
  4890  0070' 300D               	movlw	13
  4891  0071' 0080'              	movwf	_state^(0+384)
  4892                           
  4893                           ;state_machine_b.c: 103:             wait_count = getTime();
  4894  0072' 3180' 2000' 3180'  	fcall	_getTime
  4895  0075' 0023               	movlb	3	; select bank3
  4896  0076' 0080'              	movwf	??_fDISCHARGE^(0+384)
  4897  0077' 0181'              	clrf	(??_fDISCHARGE^(0+384)+1)
  4898  0078' 0800'              	movf	??_fDISCHARGE^(0+384),w
  4899  0079' 0080'              	movwf	_wait_count^(0+384)
  4900  007A' 0800'              	movf	(??_fDISCHARGE+1)^(0+384),w
  4901  007B' 0080'              	movwf	(_wait_count+1)^(0+384)
  4902                           
  4903                           ;state_machine_b.c: 104:             { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50.0;
      +                           set_DC(); Cell_OFF();};
  4904  007C' 0020               	movlb	0	; select bank0
  4905  007D' 118E               	bcf	14,3	;volatile
  4906  007E' 120E               	bcf	14,4	;volatile
  4907  007F' 0021               	movlb	1	; select bank1
  4908  0080' 0180'              	clrf	_conv^(0+128)
  4909  0081' 0020               	movlb	0	; select bank0
  4910  0082' 128E               	bcf	14,5	;volatile
  4911  0083' 3042               	movlw	66
  4912  0084' 0023               	movlb	3	; select bank3
  4913  0085' 0080'              	movwf	(_pidt+3)^(0+384)
  4914  0086' 3048               	movlw	72
  4915  0087' 0080'              	movwf	(_pidt+2)^(0+384)
  4916  0088' 3000               	movlw	0
  4917  0089' 0080'              	movwf	(_pidt+1)^(0+384)
  4918  008A' 3000               	movlw	0
  4919  008B' 0080'              	movwf	_pidt^(0+384)
  4920  008C' 3180' 2000' 3180'  	fcall	_set_DC
  4921  008F' 3180' 2000' 3180'  	fcall	_Cell_OFF
  4922  0092'                    l6029:
  4923                           
  4924                           ;state_machine_b.c: 107:     if (state == POSTDISCHARGE)
  4925  0092' 3009               	movlw	9
  4926  0093' 0023               	movlb	3	; select bank3
  4927  0094' 0600'              	xorwf	_state^(0+384),w
  4928  0095' 1D03               	btfss	3,2
  4929  0096' 0008               	return
  4930                           
  4931                           ;state_machine_b.c: 108:     {;state_machine_b.c: 109:         if (basic_configuration.v
      +                          ersion == 1)
  4932  0097' 0024               	movlb	4	; select bank4
  4933  0098' 0300'              	decf	_basic_configuration^(0+512),w
  4934  0099' 1D03               	btfss	3,2
  4935  009A' 2800'              	goto	l6055
  4936                           
  4937                           ;state_machine_b.c: 110:         {;state_machine_b.c: 111:             if (qavg >= ( (ca
      +                          pacity) / 2 ) && (second >= 1))
  4938  009B' 0023               	movlb	3	; select bank3
  4939  009C' 0800'              	movf	(_qavg+3)^(0+384),w
  4940  009D' 0022               	movlb	2	; select bank2
  4941  009E' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  4942  009F' 0023               	movlb	3	; select bank3
  4943  00A0' 0800'              	movf	(_qavg+2)^(0+384),w
  4944  00A1' 0022               	movlb	2	; select bank2
  4945  00A2' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  4946  00A3' 0023               	movlb	3	; select bank3
  4947  00A4' 0800'              	movf	(_qavg+1)^(0+384),w
  4948  00A5' 0022               	movlb	2	; select bank2
  4949  00A6' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  4950  00A7' 0023               	movlb	3	; select bank3
  4951  00A8' 0800'              	movf	_qavg^(0+384),w
  4952  00A9' 0022               	movlb	2	; select bank2
  4953  00AA' 0080'              	movwf	___flge@ff1^(0+256)
  4954  00AB' 0023               	movlb	3	; select bank3
  4955  00AC' 0800'              	movf	(_capacity+1)^(0+384),w
  4956  00AD' 0081'              	movwf	(??_fDISCHARGE^(0+384)+1)
  4957  00AE' 0800'              	movf	_capacity^(0+384),w
  4958  00AF' 0080'              	movwf	??_fDISCHARGE^(0+384)
  4959  00B0' 3681'              	lsrf	(??_fDISCHARGE^(0+384)+1),f
  4960  00B1' 0C80'              	rrf	??_fDISCHARGE^(0+384),f
  4961  00B2' 0800'              	movf	??_fDISCHARGE^(0+384),w
  4962  00B3' 0022               	movlb	2	; select bank2
  4963  00B4' 0080'              	movwf	___xxtofl@val^(0+256)
  4964  00B5' 0023               	movlb	3	; select bank3
  4965  00B6' 0800'              	movf	(??_fDISCHARGE+1)^(0+384),w
  4966  00B7' 0022               	movlb	2	; select bank2
  4967  00B8' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  4968  00B9' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  4969  00BA' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  4970  00BB' 3000               	movlw	0
  4971  00BC' 3180' 2000' 3180'  	fcall	___xxtofl
  4972  00BF' 0022               	movlb	2	; select bank2
  4973  00C0' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  4974  00C1' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  4975  00C2' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  4976  00C3' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  4977  00C4' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  4978  00C5' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  4979  00C6' 0800'              	movf	?___xxtofl^(0+256),w
  4980  00C7' 0080'              	movwf	___flge@ff2^(0+256)
  4981  00C8' 3180' 2000' 3180'  	fcall	___flge
  4982  00CB' 1C03               	btfss	3,0
  4983  00CC' 0008               	return
  4984  00CD' 0023               	movlb	3	; select bank3
  4985  00CE' 0800'              	movf	_second^(0+384),w
  4986  00CF' 0400'              	iorwf	(_second+1)^(0+384),w
  4987  00D0' 1903               	btfsc	3,2
  4988  00D1' 0008               	return
  4989                           
  4990                           ;state_machine_b.c: 112:             {;state_machine_b.c: 113:                 state = W
      +                          AIT;
  4991  00D2' 300D               	movlw	13
  4992  00D3'                    L5:
  4993  00D3' 0080'              	movwf	_state^(0+384)
  4994                           
  4995                           ;state_machine_b.c: 114:                 wait_count = getTime();
  4996  00D4' 3180' 2000' 3180'  	fcall	_getTime
  4997  00D7' 0023               	movlb	3	; select bank3
  4998  00D8' 0080'              	movwf	??_fDISCHARGE^(0+384)
  4999  00D9' 0181'              	clrf	(??_fDISCHARGE^(0+384)+1)
  5000  00DA' 0800'              	movf	??_fDISCHARGE^(0+384),w
  5001  00DB' 0080'              	movwf	_wait_count^(0+384)
  5002  00DC' 0800'              	movf	(??_fDISCHARGE+1)^(0+384),w
  5003  00DD' 0080'              	movwf	(_wait_count+1)^(0+384)
  5004                           
  5005                           ;state_machine_b.c: 115:                 { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 5
      +                          0.0; set_DC(); Cell_OFF();};
  5006  00DE' 0020               	movlb	0	; select bank0
  5007  00DF' 118E               	bcf	14,3	;volatile
  5008  00E0' 120E               	bcf	14,4	;volatile
  5009  00E1' 0021               	movlb	1	; select bank1
  5010  00E2' 0180'              	clrf	_conv^(0+128)
  5011  00E3' 0020               	movlb	0	; select bank0
  5012  00E4' 128E               	bcf	14,5	;volatile
  5013  00E5' 3042               	movlw	66
  5014  00E6' 0023               	movlb	3	; select bank3
  5015  00E7' 0080'              	movwf	(_pidt+3)^(0+384)
  5016  00E8' 3048               	movlw	72
  5017  00E9' 0080'              	movwf	(_pidt+2)^(0+384)
  5018  00EA' 3000               	movlw	0
  5019  00EB' 0080'              	movwf	(_pidt+1)^(0+384)
  5020  00EC' 3000               	movlw	0
  5021  00ED' 0080'              	movwf	_pidt^(0+384)
  5022  00EE' 3180' 2000' 3180'  	fcall	_set_DC
  5023  00F1' 3180' 2000'        	fcall	_Cell_OFF
  5024  00F3' 0008               	return
  5025  00F4'                    l6055:
  5026  00F4' 3002               	movlw	2
  5027  00F5' 0600'              	xorwf	_basic_configuration^(0+512),w
  5028  00F6' 1D03               	btfss	3,2
  5029  00F7' 0008               	return
  5030                           
  5031                           ;state_machine_b.c: 119:         {;state_machine_b.c: 120:             if (((uint16_t) (
      +                           ( ( (float)vavg * 5000.0 ) / 4096.0 ) + 0.5 )) <= basic_configuration.end_of_postdischa
      +                          rge || qavg >= ( (capacity) / 2 ) || (second >= timeout))
  5032  00F8' 0023               	movlb	3	; select bank3
  5033  00F9' 0800'              	movf	_vavg^(0+384),w
  5034  00FA' 0022               	movlb	2	; select bank2
  5035  00FB' 0080'              	movwf	___xxtofl@val^(0+256)
  5036  00FC' 0023               	movlb	3	; select bank3
  5037  00FD' 0800'              	movf	(_vavg+1)^(0+384),w
  5038  00FE' 0022               	movlb	2	; select bank2
  5039  00FF' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  5040  0100' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  5041  0101' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  5042  0102' 3000               	movlw	0
  5043  0103' 3180' 2000' 3180'  	fcall	___xxtofl
  5044  0106' 0022               	movlb	2	; select bank2
  5045  0107' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  5046  0108' 0080'              	movwf	(___flmul@a+3)^(0+256)
  5047  0109' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  5048  010A' 0080'              	movwf	(___flmul@a+2)^(0+256)
  5049  010B' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  5050  010C' 0080'              	movwf	(___flmul@a+1)^(0+256)
  5051  010D' 0800'              	movf	?___xxtofl^(0+256),w
  5052  010E' 0080'              	movwf	___flmul@a^(0+256)
  5053  010F' 3045               	movlw	69
  5054  0110' 0080'              	movwf	(___flmul@b+3)^(0+256)
  5055  0111' 309C               	movlw	156
  5056  0112' 0080'              	movwf	(___flmul@b+2)^(0+256)
  5057  0113' 3040               	movlw	64
  5058  0114' 0080'              	movwf	(___flmul@b+1)^(0+256)
  5059  0115' 3000               	movlw	0
  5060  0116' 0080'              	movwf	___flmul@b^(0+256)
  5061  0117' 3180' 2000' 3180'  	fcall	___flmul
  5062  011A' 0022               	movlb	2	; select bank2
  5063  011B' 0800'              	movf	(?___flmul+3)^(0+256),w
  5064  011C' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  5065  011D' 0800'              	movf	(?___flmul+2)^(0+256),w
  5066  011E' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  5067  011F' 0800'              	movf	(?___flmul+1)^(0+256),w
  5068  0120' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  5069  0121' 0800'              	movf	?___flmul^(0+256),w
  5070  0122' 0080'              	movwf	___fldiv@b^(0+256)
  5071  0123' 3045               	movlw	69
  5072  0124' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  5073  0125' 3080               	movlw	128
  5074  0126' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  5075  0127' 3000               	movlw	0
  5076  0128' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  5077  0129' 3000               	movlw	0
  5078  012A' 0080'              	movwf	___fldiv@a^(0+256)
  5079  012B' 3180' 2000' 3180'  	fcall	___fldiv
  5080  012E' 0022               	movlb	2	; select bank2
  5081  012F' 0800'              	movf	(?___fldiv+3)^(0+256),w
  5082  0130' 0080'              	movwf	(___fladd@a+3)^(0+256)
  5083  0131' 0800'              	movf	(?___fldiv+2)^(0+256),w
  5084  0132' 0080'              	movwf	(___fladd@a+2)^(0+256)
  5085  0133' 0800'              	movf	(?___fldiv+1)^(0+256),w
  5086  0134' 0080'              	movwf	(___fladd@a+1)^(0+256)
  5087  0135' 0800'              	movf	?___fldiv^(0+256),w
  5088  0136' 0080'              	movwf	___fladd@a^(0+256)
  5089  0137' 303F               	movlw	63
  5090  0138' 0080'              	movwf	(___fladd@b+3)^(0+256)
  5091  0139' 3000               	movlw	0
  5092  013A' 0080'              	movwf	(___fladd@b+2)^(0+256)
  5093  013B' 3000               	movlw	0
  5094  013C' 0080'              	movwf	(___fladd@b+1)^(0+256)
  5095  013D' 3000               	movlw	0
  5096  013E' 0080'              	movwf	___fladd@b^(0+256)
  5097  013F' 3180' 2000' 3180'  	fcall	___fladd
  5098  0142' 0022               	movlb	2	; select bank2
  5099  0143' 0800'              	movf	(?___fladd+3)^(0+256),w
  5100  0144' 0023               	movlb	3	; select bank3
  5101  0145' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  5102  0146' 0022               	movlb	2	; select bank2
  5103  0147' 0800'              	movf	(?___fladd+2)^(0+256),w
  5104  0148' 0023               	movlb	3	; select bank3
  5105  0149' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  5106  014A' 0022               	movlb	2	; select bank2
  5107  014B' 0800'              	movf	(?___fladd+1)^(0+256),w
  5108  014C' 0023               	movlb	3	; select bank3
  5109  014D' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  5110  014E' 0022               	movlb	2	; select bank2
  5111  014F' 0800'              	movf	?___fladd^(0+256),w
  5112  0150' 0023               	movlb	3	; select bank3
  5113  0151' 0080'              	movwf	___fltol@f1^(0+384)
  5114  0152' 3180' 2000' 3180'  	fcall	___fltol
  5115  0155' 0023               	movlb	3	; select bank3
  5116  0156' 0800'              	movf	(?___fltol+1)^(0+384),w
  5117  0157' 0024               	movlb	4	; select bank4
  5118  0158' 020F'              	subwf	((_basic_configuration+1)^(0+512)+15),w
  5119  0159' 1D03               	skipz
  5120  015A' 2800'              	goto	u6625
  5121  015B' 0023               	movlb	3	; select bank3
  5122  015C' 0800'              	movf	?___fltol^(0+384),w
  5123  015D' 0024               	movlb	4	; select bank4
  5124  015E' 020F'              	subwf	(_basic_configuration^(0+512)+15),w
  5125  015F'                    u6625:
  5126  015F' 1803               	skipnc
  5127  0160' 2800'              	goto	l6063
  5128  0161' 0023               	movlb	3	; select bank3
  5129  0162' 0800'              	movf	(_qavg+3)^(0+384),w
  5130  0163' 0022               	movlb	2	; select bank2
  5131  0164' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  5132  0165' 0023               	movlb	3	; select bank3
  5133  0166' 0800'              	movf	(_qavg+2)^(0+384),w
  5134  0167' 0022               	movlb	2	; select bank2
  5135  0168' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  5136  0169' 0023               	movlb	3	; select bank3
  5137  016A' 0800'              	movf	(_qavg+1)^(0+384),w
  5138  016B' 0022               	movlb	2	; select bank2
  5139  016C' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  5140  016D' 0023               	movlb	3	; select bank3
  5141  016E' 0800'              	movf	_qavg^(0+384),w
  5142  016F' 0022               	movlb	2	; select bank2
  5143  0170' 0080'              	movwf	___flge@ff1^(0+256)
  5144  0171' 0023               	movlb	3	; select bank3
  5145  0172' 0800'              	movf	(_capacity+1)^(0+384),w
  5146  0173' 0081'              	movwf	(??_fDISCHARGE^(0+384)+1)
  5147  0174' 0800'              	movf	_capacity^(0+384),w
  5148  0175' 0080'              	movwf	??_fDISCHARGE^(0+384)
  5149  0176' 3681'              	lsrf	(??_fDISCHARGE^(0+384)+1),f
  5150  0177' 0C80'              	rrf	??_fDISCHARGE^(0+384),f
  5151  0178' 0800'              	movf	??_fDISCHARGE^(0+384),w
  5152  0179' 0022               	movlb	2	; select bank2
  5153  017A' 0080'              	movwf	___xxtofl@val^(0+256)
  5154  017B' 0023               	movlb	3	; select bank3
  5155  017C' 0800'              	movf	(??_fDISCHARGE+1)^(0+384),w
  5156  017D' 0022               	movlb	2	; select bank2
  5157  017E' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  5158  017F' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  5159  0180' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  5160  0181' 3000               	movlw	0
  5161  0182' 3180' 2000' 3180'  	fcall	___xxtofl
  5162  0185' 0022               	movlb	2	; select bank2
  5163  0186' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  5164  0187' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  5165  0188' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  5166  0189' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  5167  018A' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  5168  018B' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  5169  018C' 0800'              	movf	?___xxtofl^(0+256),w
  5170  018D' 0080'              	movwf	___flge@ff2^(0+256)
  5171  018E' 3180' 2000' 3180'  	fcall	___flge
  5172  0191' 1803               	btfsc	3,0
  5173  0192' 2800'              	goto	l6063
  5174  0193' 0023               	movlb	3	; select bank3
  5175  0194' 0800'              	movf	(_timeout+1)^(0+384),w
  5176  0195' 0200'              	subwf	(_second+1)^(0+384),w
  5177  0196' 1D03               	skipz
  5178  0197' 2800'              	goto	u6645
  5179  0198' 0800'              	movf	_timeout^(0+384),w
  5180  0199' 0200'              	subwf	_second^(0+384),w
  5181  019A'                    u6645:
  5182  019A' 1C03               	skipc
  5183  019B' 0008               	return
  5184  019C'                    l6063:
  5185                           
  5186                           ;state_machine_b.c: 121:             {;state_machine_b.c: 122:                 state = W
      +                          AIT;
  5187  019C' 300D               	movlw	13
  5188  019D' 0023               	movlb	3	; select bank3
  5189  019E' 2800'              	goto	L5
  5190  019F'                    __end_of_fDISCHARGE:	
  5191                           ;state_machine_b.c: 124:                 { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 5
      +                          0.0; set_DC(); Cell_OFF();};
  5192                           
  5193                           ;state_machine_b.c: 123:                 wait_count = getTime();
  5194                           
  5195                           
  5196                           	psect	text10
  5197  0000'                    __ptext10:	
  5198 ;; *************** function _fDC_res *****************
  5199 ;; Defined at:
  5200 ;;		line 130 in file "state_machine_b.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;		None
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;		None
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  1    wreg      void 
  5207 ;; Registers used:
  5208 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5215 ;;      Locals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  5217 ;;      Totals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
  5218 ;;Total ram usage:        8 bytes
  5219 ;; Hardware stack levels used: 1
  5220 ;; Hardware stack levels required when called: 7
  5221 ;; This function calls:
  5222 ;;		_Cell_OFF
  5223 ;;		___fladd
  5224 ;;		___fldiv
  5225 ;;		___flmul
  5226 ;;		___fltol
  5227 ;;		___xxtofl
  5228 ;;		_getTime
  5229 ;;		_set_DC
  5230 ;; This function is called by:
  5231 ;;		_state_machine
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235  0000'                    _fDC_res:	
  5236                           ;psect for function _fDC_res
  5237                           
  5238                           
  5239                           ;state_machine_b.c: 134:     if (dc_res_count == 202)
  5240                           
  5241                           ;incstack = 0
  5242                           ; Regs used in _fDC_res: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5243  0000' 30CA               	movlw	202
  5244  0001' 0023               	movlb	3	; select bank3
  5245  0002' 0600'              	xorwf	_dc_res_count^(0+384),w
  5246  0003' 1D03               	btfss	3,2
  5247  0004' 2800'              	goto	l6167
  5248                           
  5249                           ;state_machine_b.c: 135:     {;state_machine_b.c: 136:         iref = (uint16_t) ( ( ( c
      +                          apacity * 4096.0 ) / (5000.0 * 2.5) ) * 0.75 + 0.5 );
  5250  0005' 0800'              	movf	_capacity^(0+384),w
  5251  0006' 0022               	movlb	2	; select bank2
  5252  0007' 0080'              	movwf	___xxtofl@val^(0+256)
  5253  0008' 0023               	movlb	3	; select bank3
  5254  0009' 0800'              	movf	(_capacity+1)^(0+384),w
  5255  000A' 0022               	movlb	2	; select bank2
  5256  000B' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  5257  000C' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  5258  000D' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  5259  000E' 3000               	movlw	0
  5260  000F' 3180' 2000' 3180'  	fcall	___xxtofl
  5261  0012' 0022               	movlb	2	; select bank2
  5262  0013' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  5263  0014' 0080'              	movwf	(___flmul@a+3)^(0+256)
  5264  0015' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  5265  0016' 0080'              	movwf	(___flmul@a+2)^(0+256)
  5266  0017' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  5267  0018' 0080'              	movwf	(___flmul@a+1)^(0+256)
  5268  0019' 0800'              	movf	?___xxtofl^(0+256),w
  5269  001A' 0080'              	movwf	___flmul@a^(0+256)
  5270  001B' 3045               	movlw	69
  5271  001C' 0080'              	movwf	(___flmul@b+3)^(0+256)
  5272  001D' 3080               	movlw	128
  5273  001E' 0080'              	movwf	(___flmul@b+2)^(0+256)
  5274  001F' 3000               	movlw	0
  5275  0020' 0080'              	movwf	(___flmul@b+1)^(0+256)
  5276  0021' 3000               	movlw	0
  5277  0022' 0080'              	movwf	___flmul@b^(0+256)
  5278  0023' 3180' 2000' 3180'  	fcall	___flmul
  5279  0026' 0022               	movlb	2	; select bank2
  5280  0027' 0800'              	movf	(?___flmul+3)^(0+256),w
  5281  0028' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  5282  0029' 0800'              	movf	(?___flmul+2)^(0+256),w
  5283  002A' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  5284  002B' 0800'              	movf	(?___flmul+1)^(0+256),w
  5285  002C' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  5286  002D' 0800'              	movf	?___flmul^(0+256),w
  5287  002E' 0080'              	movwf	___fldiv@b^(0+256)
  5288  002F' 3046               	movlw	70
  5289  0030' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  5290  0031' 3043               	movlw	67
  5291  0032' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  5292  0033' 3050               	movlw	80
  5293  0034' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  5294  0035' 3000               	movlw	0
  5295  0036' 0080'              	movwf	___fldiv@a^(0+256)
  5296  0037' 3180' 2000' 3180'  	fcall	___fldiv
  5297  003A' 0022               	movlb	2	; select bank2
  5298  003B' 0800'              	movf	(?___fldiv+3)^(0+256),w
  5299  003C' 0023               	movlb	3	; select bank3
  5300  003D' 0080'              	movwf	(_fDC_res$1610+3)^(0+384)
  5301  003E' 0022               	movlb	2	; select bank2
  5302  003F' 0800'              	movf	(?___fldiv+2)^(0+256),w
  5303  0040' 0023               	movlb	3	; select bank3
  5304  0041' 0080'              	movwf	(_fDC_res$1610+2)^(0+384)
  5305  0042' 0022               	movlb	2	; select bank2
  5306  0043' 0800'              	movf	(?___fldiv+1)^(0+256),w
  5307  0044' 0023               	movlb	3	; select bank3
  5308  0045' 0080'              	movwf	(_fDC_res$1610+1)^(0+384)
  5309  0046' 0022               	movlb	2	; select bank2
  5310  0047' 0800'              	movf	?___fldiv^(0+256),w
  5311  0048' 0023               	movlb	3	; select bank3
  5312  0049' 0080'              	movwf	_fDC_res$1610^(0+384)
  5313                           
  5314                           ;state_machine_b.c: 135:     {;state_machine_b.c: 136:         iref = (uint16_t) ( ( ( c
      +                          apacity * 4096.0 ) / (5000.0 * 2.5) ) * 0.75 + 0.5 );
  5315  004A' 0800'              	movf	(_fDC_res$1610+3)^(0+384),w
  5316  004B' 0022               	movlb	2	; select bank2
  5317  004C' 0080'              	movwf	(___flmul@a+3)^(0+256)
  5318  004D' 0023               	movlb	3	; select bank3
  5319  004E' 0800'              	movf	(_fDC_res$1610+2)^(0+384),w
  5320  004F' 0022               	movlb	2	; select bank2
  5321  0050' 0080'              	movwf	(___flmul@a+2)^(0+256)
  5322  0051' 0023               	movlb	3	; select bank3
  5323  0052' 0800'              	movf	(_fDC_res$1610+1)^(0+384),w
  5324  0053' 0022               	movlb	2	; select bank2
  5325  0054' 0080'              	movwf	(___flmul@a+1)^(0+256)
  5326  0055' 0023               	movlb	3	; select bank3
  5327  0056' 0800'              	movf	_fDC_res$1610^(0+384),w
  5328  0057' 0022               	movlb	2	; select bank2
  5329  0058' 0080'              	movwf	___flmul@a^(0+256)
  5330  0059' 303F               	movlw	63
  5331  005A' 0080'              	movwf	(___flmul@b+3)^(0+256)
  5332  005B' 3040               	movlw	64
  5333  005C' 0080'              	movwf	(___flmul@b+2)^(0+256)
  5334  005D' 3000               	movlw	0
  5335  005E' 0080'              	movwf	(___flmul@b+1)^(0+256)
  5336  005F' 3000               	movlw	0
  5337  0060' 0080'              	movwf	___flmul@b^(0+256)
  5338  0061' 3180' 2000' 3180'  	fcall	___flmul
  5339  0064' 0022               	movlb	2	; select bank2
  5340  0065' 0800'              	movf	(?___flmul+3)^(0+256),w
  5341  0066' 0080'              	movwf	(___fladd@a+3)^(0+256)
  5342  0067' 0800'              	movf	(?___flmul+2)^(0+256),w
  5343  0068' 0080'              	movwf	(___fladd@a+2)^(0+256)
  5344  0069' 0800'              	movf	(?___flmul+1)^(0+256),w
  5345  006A' 0080'              	movwf	(___fladd@a+1)^(0+256)
  5346  006B' 0800'              	movf	?___flmul^(0+256),w
  5347  006C' 0080'              	movwf	___fladd@a^(0+256)
  5348  006D' 303F               	movlw	63
  5349  006E' 0080'              	movwf	(___fladd@b+3)^(0+256)
  5350  006F' 3000               	movlw	0
  5351  0070' 0080'              	movwf	(___fladd@b+2)^(0+256)
  5352  0071' 3000               	movlw	0
  5353  0072' 0080'              	movwf	(___fladd@b+1)^(0+256)
  5354  0073' 3000               	movlw	0
  5355  0074' 0080'              	movwf	___fladd@b^(0+256)
  5356  0075' 3180' 2000' 3180'  	fcall	___fladd
  5357  0078' 0022               	movlb	2	; select bank2
  5358  0079' 0800'              	movf	(?___fladd+3)^(0+256),w
  5359  007A' 0023               	movlb	3	; select bank3
  5360  007B' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  5361  007C' 0022               	movlb	2	; select bank2
  5362  007D' 0800'              	movf	(?___fladd+2)^(0+256),w
  5363  007E' 0023               	movlb	3	; select bank3
  5364  007F' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  5365  0080' 0022               	movlb	2	; select bank2
  5366  0081' 0800'              	movf	(?___fladd+1)^(0+256),w
  5367  0082' 0023               	movlb	3	; select bank3
  5368  0083' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  5369  0084' 0022               	movlb	2	; select bank2
  5370  0085' 0800'              	movf	?___fladd^(0+256),w
  5371  0086' 0023               	movlb	3	; select bank3
  5372  0087' 0080'              	movwf	___fltol@f1^(0+384)
  5373  0088' 3180' 2000' 3180'  	fcall	___fltol
  5374  008B' 0023               	movlb	3	; select bank3
  5375  008C' 0800'              	movf	(?___fltol+1)^(0+384),w
  5376  008D' 0021               	movlb	1	; select bank1
  5377  008E' 0080'              	movwf	(_iref+1)^(0+128)
  5378  008F' 0023               	movlb	3	; select bank3
  5379  0090' 0800'              	movf	?___fltol^(0+384),w
  5380  0091' 0021               	movlb	1	; select bank1
  5381  0092' 0080'              	movwf	_iref^(0+128)
  5382  0093'                    l6167:
  5383                           
  5384                           ;state_machine_b.c: 138:     if (dc_res_count == 100)
  5385  0093' 3064               	movlw	100
  5386  0094' 0023               	movlb	3	; select bank3
  5387  0095' 0600'              	xorwf	_dc_res_count^(0+384),w
  5388  0096' 1D03               	btfss	3,2
  5389  0097' 2800'              	goto	l6171
  5390                           
  5391                           ;state_machine_b.c: 139:     {;state_machine_b.c: 140:         iref = 0;
  5392  0098' 0021               	movlb	1	; select bank1
  5393  0099' 0180'              	clrf	_iref^(0+128)
  5394  009A' 0180'              	clrf	(_iref+1)^(0+128)
  5395  009B'                    l6171:
  5396                           
  5397                           ;state_machine_b.c: 142:     if (dc_res_count == 60)
  5398  009B' 303C               	movlw	60
  5399  009C' 0023               	movlb	3	; select bank3
  5400  009D' 0600'              	xorwf	_dc_res_count^(0+384),w
  5401  009E' 1D03               	btfss	3,2
  5402  009F' 2800'              	goto	l6199
  5403                           
  5404                           ;state_machine_b.c: 143:     {;state_machine_b.c: 144:         iref = (uint16_t) ( ( ( c
      +                          apacity * 4096.0 ) / (5000.0 * 2.5) ) * 0.75 + 0.5 );
  5405  00A0' 0800'              	movf	_capacity^(0+384),w
  5406  00A1' 0022               	movlb	2	; select bank2
  5407  00A2' 0080'              	movwf	___xxtofl@val^(0+256)
  5408  00A3' 0023               	movlb	3	; select bank3
  5409  00A4' 0800'              	movf	(_capacity+1)^(0+384),w
  5410  00A5' 0022               	movlb	2	; select bank2
  5411  00A6' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  5412  00A7' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  5413  00A8' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  5414  00A9' 3000               	movlw	0
  5415  00AA' 3180' 2000' 3180'  	fcall	___xxtofl
  5416  00AD' 0022               	movlb	2	; select bank2
  5417  00AE' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  5418  00AF' 0080'              	movwf	(___flmul@a+3)^(0+256)
  5419  00B0' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  5420  00B1' 0080'              	movwf	(___flmul@a+2)^(0+256)
  5421  00B2' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  5422  00B3' 0080'              	movwf	(___flmul@a+1)^(0+256)
  5423  00B4' 0800'              	movf	?___xxtofl^(0+256),w
  5424  00B5' 0080'              	movwf	___flmul@a^(0+256)
  5425  00B6' 3045               	movlw	69
  5426  00B7' 0080'              	movwf	(___flmul@b+3)^(0+256)
  5427  00B8' 3080               	movlw	128
  5428  00B9' 0080'              	movwf	(___flmul@b+2)^(0+256)
  5429  00BA' 3000               	movlw	0
  5430  00BB' 0080'              	movwf	(___flmul@b+1)^(0+256)
  5431  00BC' 3000               	movlw	0
  5432  00BD' 0080'              	movwf	___flmul@b^(0+256)
  5433  00BE' 3180' 2000' 3180'  	fcall	___flmul
  5434  00C1' 0022               	movlb	2	; select bank2
  5435  00C2' 0800'              	movf	(?___flmul+3)^(0+256),w
  5436  00C3' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  5437  00C4' 0800'              	movf	(?___flmul+2)^(0+256),w
  5438  00C5' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  5439  00C6' 0800'              	movf	(?___flmul+1)^(0+256),w
  5440  00C7' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  5441  00C8' 0800'              	movf	?___flmul^(0+256),w
  5442  00C9' 0080'              	movwf	___fldiv@b^(0+256)
  5443  00CA' 3046               	movlw	70
  5444  00CB' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  5445  00CC' 3043               	movlw	67
  5446  00CD' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  5447  00CE' 3050               	movlw	80
  5448  00CF' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  5449  00D0' 3000               	movlw	0
  5450  00D1' 0080'              	movwf	___fldiv@a^(0+256)
  5451  00D2' 3180' 2000' 3180'  	fcall	___fldiv
  5452  00D5' 0022               	movlb	2	; select bank2
  5453  00D6' 0800'              	movf	(?___fldiv+3)^(0+256),w
  5454  00D7' 0023               	movlb	3	; select bank3
  5455  00D8' 0080'              	movwf	(_fDC_res$1610+3)^(0+384)
  5456  00D9' 0022               	movlb	2	; select bank2
  5457  00DA' 0800'              	movf	(?___fldiv+2)^(0+256),w
  5458  00DB' 0023               	movlb	3	; select bank3
  5459  00DC' 0080'              	movwf	(_fDC_res$1610+2)^(0+384)
  5460  00DD' 0022               	movlb	2	; select bank2
  5461  00DE' 0800'              	movf	(?___fldiv+1)^(0+256),w
  5462  00DF' 0023               	movlb	3	; select bank3
  5463  00E0' 0080'              	movwf	(_fDC_res$1610+1)^(0+384)
  5464  00E1' 0022               	movlb	2	; select bank2
  5465  00E2' 0800'              	movf	?___fldiv^(0+256),w
  5466  00E3' 0023               	movlb	3	; select bank3
  5467  00E4' 0080'              	movwf	_fDC_res$1610^(0+384)
  5468                           
  5469                           ;state_machine_b.c: 143:     {;state_machine_b.c: 144:         iref = (uint16_t) ( ( ( c
      +                          apacity * 4096.0 ) / (5000.0 * 2.5) ) * 0.75 + 0.5 );
  5470  00E5' 0800'              	movf	(_fDC_res$1610+3)^(0+384),w
  5471  00E6' 0022               	movlb	2	; select bank2
  5472  00E7' 0080'              	movwf	(___flmul@a+3)^(0+256)
  5473  00E8' 0023               	movlb	3	; select bank3
  5474  00E9' 0800'              	movf	(_fDC_res$1610+2)^(0+384),w
  5475  00EA' 0022               	movlb	2	; select bank2
  5476  00EB' 0080'              	movwf	(___flmul@a+2)^(0+256)
  5477  00EC' 0023               	movlb	3	; select bank3
  5478  00ED' 0800'              	movf	(_fDC_res$1610+1)^(0+384),w
  5479  00EE' 0022               	movlb	2	; select bank2
  5480  00EF' 0080'              	movwf	(___flmul@a+1)^(0+256)
  5481  00F0' 0023               	movlb	3	; select bank3
  5482  00F1' 0800'              	movf	_fDC_res$1610^(0+384),w
  5483  00F2' 0022               	movlb	2	; select bank2
  5484  00F3' 0080'              	movwf	___flmul@a^(0+256)
  5485  00F4' 303F               	movlw	63
  5486  00F5' 0080'              	movwf	(___flmul@b+3)^(0+256)
  5487  00F6' 3040               	movlw	64
  5488  00F7' 0080'              	movwf	(___flmul@b+2)^(0+256)
  5489  00F8' 3000               	movlw	0
  5490  00F9' 0080'              	movwf	(___flmul@b+1)^(0+256)
  5491  00FA' 3000               	movlw	0
  5492  00FB' 0080'              	movwf	___flmul@b^(0+256)
  5493  00FC' 3180' 2000' 3180'  	fcall	___flmul
  5494  00FF' 0022               	movlb	2	; select bank2
  5495  0100' 0800'              	movf	(?___flmul+3)^(0+256),w
  5496  0101' 0080'              	movwf	(___fladd@a+3)^(0+256)
  5497  0102' 0800'              	movf	(?___flmul+2)^(0+256),w
  5498  0103' 0080'              	movwf	(___fladd@a+2)^(0+256)
  5499  0104' 0800'              	movf	(?___flmul+1)^(0+256),w
  5500  0105' 0080'              	movwf	(___fladd@a+1)^(0+256)
  5501  0106' 0800'              	movf	?___flmul^(0+256),w
  5502  0107' 0080'              	movwf	___fladd@a^(0+256)
  5503  0108' 303F               	movlw	63
  5504  0109' 0080'              	movwf	(___fladd@b+3)^(0+256)
  5505  010A' 3000               	movlw	0
  5506  010B' 0080'              	movwf	(___fladd@b+2)^(0+256)
  5507  010C' 3000               	movlw	0
  5508  010D' 0080'              	movwf	(___fladd@b+1)^(0+256)
  5509  010E' 3000               	movlw	0
  5510  010F' 0080'              	movwf	___fladd@b^(0+256)
  5511  0110' 3180' 2000' 3180'  	fcall	___fladd
  5512  0113' 0022               	movlb	2	; select bank2
  5513  0114' 0800'              	movf	(?___fladd+3)^(0+256),w
  5514  0115' 0023               	movlb	3	; select bank3
  5515  0116' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  5516  0117' 0022               	movlb	2	; select bank2
  5517  0118' 0800'              	movf	(?___fladd+2)^(0+256),w
  5518  0119' 0023               	movlb	3	; select bank3
  5519  011A' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  5520  011B' 0022               	movlb	2	; select bank2
  5521  011C' 0800'              	movf	(?___fladd+1)^(0+256),w
  5522  011D' 0023               	movlb	3	; select bank3
  5523  011E' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  5524  011F' 0022               	movlb	2	; select bank2
  5525  0120' 0800'              	movf	?___fladd^(0+256),w
  5526  0121' 0023               	movlb	3	; select bank3
  5527  0122' 0080'              	movwf	___fltol@f1^(0+384)
  5528  0123' 3180' 2000' 3180'  	fcall	___fltol
  5529  0126' 0023               	movlb	3	; select bank3
  5530  0127' 0800'              	movf	(?___fltol+1)^(0+384),w
  5531  0128' 0021               	movlb	1	; select bank1
  5532  0129' 0080'              	movwf	(_iref+1)^(0+128)
  5533  012A' 0023               	movlb	3	; select bank3
  5534  012B' 0800'              	movf	?___fltol^(0+384),w
  5535  012C' 0021               	movlb	1	; select bank1
  5536  012D' 0080'              	movwf	_iref^(0+128)
  5537                           
  5538                           ;state_machine_b.c: 145:         { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(32000
      +                          000/4000.0))); RC4 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC4 = 0; _dela
      +                          y((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(3200
      +                          0000/4000.0))); kp = CC_char_kp; ki = CC_char_ki; kd = (float) (CC_char_disc_kd); pidi =
      +                           0.0;};
  5539  012E' 0020               	movlb	0	; select bank0
  5540  012F' 118E               	bcf	14,3	;volatile
  5541  0130' 120E               	bcf	14,4	;volatile
  5542  0131' 3005               	movlw	5
  5543  0132' 0023               	movlb	3	; select bank3
  5544  0133' 0081'              	movwf	(??_fDC_res^(0+384)+1)
  5545  0134' 300F               	movlw	15
  5546  0135' 0080'              	movwf	??_fDC_res^(0+384)
  5547  0136' 30F1               	movlw	241
  5548  0137'                    u7777:
  5549  0137' 0B89               	decfsz	9,f
  5550  0138' 2800'              	goto	u7777
  5551  0139' 0B80'              	decfsz	??_fDC_res^(0+384),f
  5552  013A' 2800'              	goto	u7777
  5553  013B' 0B81'              	decfsz	(??_fDC_res^(0+384)+1),f
  5554  013C' 2800'              	goto	u7777
  5555  013D' 0020               	movlb	0	; select bank0
  5556  013E' 160E               	bsf	14,4	;volatile
  5557  013F' 3005               	movlw	5
  5558  0140' 0023               	movlb	3	; select bank3
  5559  0141' 0081'              	movwf	(??_fDC_res^(0+384)+1)
  5560  0142' 300F               	movlw	15
  5561  0143' 0080'              	movwf	??_fDC_res^(0+384)
  5562  0144' 30F1               	movlw	241
  5563  0145'                    u7787:
  5564  0145' 0B89               	decfsz	9,f
  5565  0146' 2800'              	goto	u7787
  5566  0147' 0B80'              	decfsz	??_fDC_res^(0+384),f
  5567  0148' 2800'              	goto	u7787
  5568  0149' 0B81'              	decfsz	(??_fDC_res^(0+384)+1),f
  5569  014A' 2800'              	goto	u7787
  5570  014B' 0020               	movlb	0	; select bank0
  5571  014C' 120E               	bcf	14,4	;volatile
  5572  014D' 3005               	movlw	5
  5573  014E' 0023               	movlb	3	; select bank3
  5574  014F' 0081'              	movwf	(??_fDC_res^(0+384)+1)
  5575  0150' 300F               	movlw	15
  5576  0151' 0080'              	movwf	??_fDC_res^(0+384)
  5577  0152' 30F1               	movlw	241
  5578  0153'                    u7797:
  5579  0153' 0B89               	decfsz	9,f
  5580  0154' 2800'              	goto	u7797
  5581  0155' 0B80'              	decfsz	??_fDC_res^(0+384),f
  5582  0156' 2800'              	goto	u7797
  5583  0157' 0B81'              	decfsz	(??_fDC_res^(0+384)+1),f
  5584  0158' 2800'              	goto	u7797
  5585  0159' 0020               	movlb	0	; select bank0
  5586  015A' 168E               	bsf	14,5	;volatile
  5587  015B' 3005               	movlw	5
  5588  015C' 0023               	movlb	3	; select bank3
  5589  015D' 0081'              	movwf	(??_fDC_res^(0+384)+1)
  5590  015E' 300F               	movlw	15
  5591  015F' 0080'              	movwf	??_fDC_res^(0+384)
  5592  0160' 30F1               	movlw	241
  5593  0161'                    u7807:
  5594  0161' 0B89               	decfsz	9,f
  5595  0162' 2800'              	goto	u7807
  5596  0163' 0B80'              	decfsz	??_fDC_res^(0+384),f
  5597  0164' 2800'              	goto	u7807
  5598  0165' 0B81'              	decfsz	(??_fDC_res^(0+384)+1),f
  5599  0166' 2800'              	goto	u7807
  5600  0167' 0023               	movlb	3	; select bank3
  5601  0168' 0800'              	movf	(_CC_char_kp+3)^(0+384),w
  5602  0169' 0024               	movlb	4	; select bank4
  5603  016A' 0080'              	movwf	(_kp+3)^(0+512)
  5604  016B' 0023               	movlb	3	; select bank3
  5605  016C' 0800'              	movf	(_CC_char_kp+2)^(0+384),w
  5606  016D' 0024               	movlb	4	; select bank4
  5607  016E' 0080'              	movwf	(_kp+2)^(0+512)
  5608  016F' 0023               	movlb	3	; select bank3
  5609  0170' 0800'              	movf	(_CC_char_kp+1)^(0+384),w
  5610  0171' 0024               	movlb	4	; select bank4
  5611  0172' 0080'              	movwf	(_kp+1)^(0+512)
  5612  0173' 0023               	movlb	3	; select bank3
  5613  0174' 0800'              	movf	_CC_char_kp^(0+384),w
  5614  0175' 0024               	movlb	4	; select bank4
  5615  0176' 0080'              	movwf	_kp^(0+512)
  5616  0177' 0023               	movlb	3	; select bank3
  5617  0178' 0800'              	movf	(_CC_char_ki+3)^(0+384),w
  5618  0179' 0024               	movlb	4	; select bank4
  5619  017A' 0080'              	movwf	(_ki+3)^(0+512)
  5620  017B' 0023               	movlb	3	; select bank3
  5621  017C' 0800'              	movf	(_CC_char_ki+2)^(0+384),w
  5622  017D' 0024               	movlb	4	; select bank4
  5623  017E' 0080'              	movwf	(_ki+2)^(0+512)
  5624  017F' 0023               	movlb	3	; select bank3
  5625  0180' 0800'              	movf	(_CC_char_ki+1)^(0+384),w
  5626  0181' 0024               	movlb	4	; select bank4
  5627  0182' 0080'              	movwf	(_ki+1)^(0+512)
  5628  0183' 0023               	movlb	3	; select bank3
  5629  0184' 0800'              	movf	_CC_char_ki^(0+384),w
  5630  0185' 0024               	movlb	4	; select bank4
  5631  0186' 0080'              	movwf	_ki^(0+512)
  5632  0187' 0023               	movlb	3	; select bank3
  5633  0188' 0800'              	movf	_CC_char_disc_kd^(0+384),w
  5634  0189' 0080'              	movwf	??_fDC_res^(0+384)
  5635  018A' 0181'              	clrf	(??_fDC_res^(0+384)+1)
  5636  018B' 0182'              	clrf	(??_fDC_res^(0+384)+2)
  5637  018C' 0183'              	clrf	(??_fDC_res^(0+384)+3)
  5638  018D' 0800'              	movf	(??_fDC_res+3)^(0+384),w
  5639  018E' 0022               	movlb	2	; select bank2
  5640  018F' 0080'              	movwf	(___xxtofl@val+3)^(0+256)
  5641  0190' 0023               	movlb	3	; select bank3
  5642  0191' 0800'              	movf	(??_fDC_res+2)^(0+384),w
  5643  0192' 0022               	movlb	2	; select bank2
  5644  0193' 0080'              	movwf	(___xxtofl@val+2)^(0+256)
  5645  0194' 0023               	movlb	3	; select bank3
  5646  0195' 0800'              	movf	(??_fDC_res+1)^(0+384),w
  5647  0196' 0022               	movlb	2	; select bank2
  5648  0197' 0080'              	movwf	(___xxtofl@val+1)^(0+256)
  5649  0198' 0023               	movlb	3	; select bank3
  5650  0199' 0800'              	movf	??_fDC_res^(0+384),w
  5651  019A' 0022               	movlb	2	; select bank2
  5652  019B' 0080'              	movwf	___xxtofl@val^(0+256)
  5653  019C' 3000               	movlw	0
  5654  019D' 3180' 2000' 3180'  	fcall	___xxtofl
  5655  01A0' 0022               	movlb	2	; select bank2
  5656  01A1' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  5657  01A2' 0024               	movlb	4	; select bank4
  5658  01A3' 0080'              	movwf	(_kd+3)^(0+512)
  5659  01A4' 0022               	movlb	2	; select bank2
  5660  01A5' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  5661  01A6' 0024               	movlb	4	; select bank4
  5662  01A7' 0080'              	movwf	(_kd+2)^(0+512)
  5663  01A8' 0022               	movlb	2	; select bank2
  5664  01A9' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  5665  01AA' 0024               	movlb	4	; select bank4
  5666  01AB' 0080'              	movwf	(_kd+1)^(0+512)
  5667  01AC' 0022               	movlb	2	; select bank2
  5668  01AD' 0800'              	movf	?___xxtofl^(0+256),w
  5669  01AE' 0024               	movlb	4	; select bank4
  5670  01AF' 0080'              	movwf	_kd^(0+512)
  5671  01B0' 3000               	movlw	0
  5672  01B1' 0080'              	movwf	(_pidi+3)^(0+512)
  5673  01B2' 3000               	movlw	0
  5674  01B3' 0080'              	movwf	(_pidi+2)^(0+512)
  5675  01B4' 3000               	movlw	0
  5676  01B5' 0080'              	movwf	(_pidi+1)^(0+512)
  5677  01B6' 3000               	movlw	0
  5678  01B7' 0080'              	movwf	_pidi^(0+512)
  5679  01B8'                    l6199:
  5680                           
  5681                           ;state_machine_b.c: 147:     if (dc_res_count == 40)
  5682  01B8' 3028               	movlw	40
  5683  01B9' 0023               	movlb	3	; select bank3
  5684  01BA' 0600'              	xorwf	_dc_res_count^(0+384),w
  5685  01BB' 1D03               	btfss	3,2
  5686  01BC' 2800'              	goto	l6203
  5687                           
  5688                           ;state_machine_b.c: 148:     {;state_machine_b.c: 149:         iref = (uint16_t) ( ( ( c
      +                          apacity * 4096.0 ) / (5000.0 * 2.5) ) + 0.5 );
  5689  01BD' 0800'              	movf	_capacity^(0+384),w
  5690  01BE' 0022               	movlb	2	; select bank2
  5691  01BF' 0080'              	movwf	___xxtofl@val^(0+256)
  5692  01C0' 0023               	movlb	3	; select bank3
  5693  01C1' 0800'              	movf	(_capacity+1)^(0+384),w
  5694  01C2' 0022               	movlb	2	; select bank2
  5695  01C3' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  5696  01C4' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  5697  01C5' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  5698  01C6' 3000               	movlw	0
  5699  01C7' 3180' 2000' 3180'  	fcall	___xxtofl
  5700  01CA' 0022               	movlb	2	; select bank2
  5701  01CB' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  5702  01CC' 0080'              	movwf	(___flmul@a+3)^(0+256)
  5703  01CD' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  5704  01CE' 0080'              	movwf	(___flmul@a+2)^(0+256)
  5705  01CF' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  5706  01D0' 0080'              	movwf	(___flmul@a+1)^(0+256)
  5707  01D1' 0800'              	movf	?___xxtofl^(0+256),w
  5708  01D2' 0080'              	movwf	___flmul@a^(0+256)
  5709  01D3' 3045               	movlw	69
  5710  01D4' 0080'              	movwf	(___flmul@b+3)^(0+256)
  5711  01D5' 3080               	movlw	128
  5712  01D6' 0080'              	movwf	(___flmul@b+2)^(0+256)
  5713  01D7' 3000               	movlw	0
  5714  01D8' 0080'              	movwf	(___flmul@b+1)^(0+256)
  5715  01D9' 3000               	movlw	0
  5716  01DA' 0080'              	movwf	___flmul@b^(0+256)
  5717  01DB' 3180' 2000' 3180'  	fcall	___flmul
  5718  01DE' 0022               	movlb	2	; select bank2
  5719  01DF' 0800'              	movf	(?___flmul+3)^(0+256),w
  5720  01E0' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  5721  01E1' 0800'              	movf	(?___flmul+2)^(0+256),w
  5722  01E2' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  5723  01E3' 0800'              	movf	(?___flmul+1)^(0+256),w
  5724  01E4' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  5725  01E5' 0800'              	movf	?___flmul^(0+256),w
  5726  01E6' 0080'              	movwf	___fldiv@b^(0+256)
  5727  01E7' 3046               	movlw	70
  5728  01E8' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  5729  01E9' 3043               	movlw	67
  5730  01EA' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  5731  01EB' 3050               	movlw	80
  5732  01EC' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  5733  01ED' 3000               	movlw	0
  5734  01EE' 0080'              	movwf	___fldiv@a^(0+256)
  5735  01EF' 3180' 2000' 3180'  	fcall	___fldiv
  5736  01F2' 0022               	movlb	2	; select bank2
  5737  01F3' 0800'              	movf	(?___fldiv+3)^(0+256),w
  5738  01F4' 0080'              	movwf	(___fladd@a+3)^(0+256)
  5739  01F5' 0800'              	movf	(?___fldiv+2)^(0+256),w
  5740  01F6' 0080'              	movwf	(___fladd@a+2)^(0+256)
  5741  01F7' 0800'              	movf	(?___fldiv+1)^(0+256),w
  5742  01F8' 0080'              	movwf	(___fladd@a+1)^(0+256)
  5743  01F9' 0800'              	movf	?___fldiv^(0+256),w
  5744  01FA' 0080'              	movwf	___fladd@a^(0+256)
  5745  01FB' 303F               	movlw	63
  5746  01FC' 0080'              	movwf	(___fladd@b+3)^(0+256)
  5747  01FD' 3000               	movlw	0
  5748  01FE' 0080'              	movwf	(___fladd@b+2)^(0+256)
  5749  01FF' 3000               	movlw	0
  5750  0200' 0080'              	movwf	(___fladd@b+1)^(0+256)
  5751  0201' 3000               	movlw	0
  5752  0202' 0080'              	movwf	___fladd@b^(0+256)
  5753  0203' 3180' 2000' 3180'  	fcall	___fladd
  5754  0206' 0022               	movlb	2	; select bank2
  5755  0207' 0800'              	movf	(?___fladd+3)^(0+256),w
  5756  0208' 0023               	movlb	3	; select bank3
  5757  0209' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  5758  020A' 0022               	movlb	2	; select bank2
  5759  020B' 0800'              	movf	(?___fladd+2)^(0+256),w
  5760  020C' 0023               	movlb	3	; select bank3
  5761  020D' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  5762  020E' 0022               	movlb	2	; select bank2
  5763  020F' 0800'              	movf	(?___fladd+1)^(0+256),w
  5764  0210' 0023               	movlb	3	; select bank3
  5765  0211' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  5766  0212' 0022               	movlb	2	; select bank2
  5767  0213' 0800'              	movf	?___fladd^(0+256),w
  5768  0214' 0023               	movlb	3	; select bank3
  5769  0215' 0080'              	movwf	___fltol@f1^(0+384)
  5770  0216' 3180' 2000' 3180'  	fcall	___fltol
  5771  0219' 0023               	movlb	3	; select bank3
  5772  021A' 0800'              	movf	(?___fltol+1)^(0+384),w
  5773  021B' 0021               	movlb	1	; select bank1
  5774  021C' 0080'              	movwf	(_iref+1)^(0+128)
  5775  021D' 0023               	movlb	3	; select bank3
  5776  021E' 0800'              	movf	?___fltol^(0+384),w
  5777  021F' 0021               	movlb	1	; select bank1
  5778  0220' 0080'              	movwf	_iref^(0+128)
  5779  0221'                    l6203:
  5780                           
  5781                           ;state_machine_b.c: 151:     if (!dc_res_count)
  5782  0221' 0023               	movlb	3	; select bank3
  5783  0222' 0800'              	movf	_dc_res_count^(0+384),w
  5784  0223' 1D03               	btfss	3,2
  5785  0224' 2800'              	goto	l6221
  5786                           
  5787                           ;state_machine_b.c: 152:     {;state_machine_b.c: 153:         { RC3 = 0; RC4 = 0; conv 
      +                          = 0; RC5 = 0; pidt = 50.0; set_DC(); Cell_OFF();};
  5788  0225' 0020               	movlb	0	; select bank0
  5789  0226' 118E               	bcf	14,3	;volatile
  5790  0227' 120E               	bcf	14,4	;volatile
  5791  0228' 0021               	movlb	1	; select bank1
  5792  0229' 0180'              	clrf	_conv^(0+128)
  5793  022A' 0020               	movlb	0	; select bank0
  5794  022B' 128E               	bcf	14,5	;volatile
  5795  022C' 3042               	movlw	66
  5796  022D' 0023               	movlb	3	; select bank3
  5797  022E' 0080'              	movwf	(_pidt+3)^(0+384)
  5798  022F' 3048               	movlw	72
  5799  0230' 0080'              	movwf	(_pidt+2)^(0+384)
  5800  0231' 3000               	movlw	0
  5801  0232' 0080'              	movwf	(_pidt+1)^(0+384)
  5802  0233' 3000               	movlw	0
  5803  0234' 0080'              	movwf	_pidt^(0+384)
  5804  0235' 3180' 2000' 3180'  	fcall	_set_DC
  5805  0238' 3180' 2000' 3180'  	fcall	_Cell_OFF
  5806                           
  5807                           ;state_machine_b.c: 154:         wait_count = getTime();
  5808  023B' 3180' 2000'        	fcall	_getTime
  5809  023D' 0023               	movlb	3	; select bank3
  5810  023E' 0080'              	movwf	??_fDC_res^(0+384)
  5811  023F' 0181'              	clrf	(??_fDC_res^(0+384)+1)
  5812  0240' 0800'              	movf	??_fDC_res^(0+384),w
  5813  0241' 0080'              	movwf	_wait_count^(0+384)
  5814  0242' 0800'              	movf	(??_fDC_res+1)^(0+384),w
  5815  0243' 0080'              	movwf	(_wait_count+1)^(0+384)
  5816                           
  5817                           ;state_machine_b.c: 155:         state = WAIT;
  5818  0244' 300D               	movlw	13
  5819  0245' 0080'              	movwf	_state^(0+384)
  5820                           
  5821                           ;state_machine_b.c: 157:     }else dc_res_count--;
  5822  0246' 0008               	return
  5823  0247'                    l6221:
  5824  0247' 3001               	movlw	1
  5825  0248' 0280'              	subwf	_dc_res_count^(0+384),f
  5826  0249' 0008               	return
  5827  024A'                    __end_of_fDC_res:
  5828                           
  5829                           	psect	text11
  5830  0000'                    __ptext11:	
  5831 ;; *************** function _fCHARGE *****************
  5832 ;; Defined at:
  5833 ;;		line 63 in file "state_machine_b.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;		None
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;		None
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  1    wreg      void 
  5840 ;; Registers used:
  5841 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5842 ;; Tracked objects:
  5843 ;;		On entry : 0/0
  5844 ;;		On exit  : 0/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5849 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  5850 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  5851 ;;Total ram usage:        2 bytes
  5852 ;; Hardware stack levels used: 1
  5853 ;; Hardware stack levels required when called: 7
  5854 ;; This function calls:
  5855 ;;		_Cell_OFF
  5856 ;;		___flge
  5857 ;;		___xxtofl
  5858 ;;		_getTime
  5859 ;;		_set_DC
  5860 ;; This function is called by:
  5861 ;;		_state_machine
  5862 ;; This function uses a non-reentrant model
  5863 ;;
  5864                           
  5865  0000'                    _fCHARGE:	
  5866                           ;psect for function _fCHARGE
  5867                           
  5868                           
  5869                           ;state_machine_b.c: 65:     if ( ( ( iavg < basic_configuration.end_of_charge ) && ( bas
      +                          ic_configuration.version == 0x01 ) ) || ( ( ( vavg < (vmax - 5) ) || (timeout < second) 
      +                          ) && ( basic_configuration.version == 0x02 ) ) )
  5870                           
  5871                           ;incstack = 0
  5872                           ; Regs used in _fCHARGE: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5873  0000' 0024               	movlb	4	; select bank4
  5874  0001' 0809'              	movf	((_basic_configuration+1)^(0+512)+9),w
  5875  0002' 0023               	movlb	3	; select bank3
  5876  0003' 0200'              	subwf	(_iavg+1)^(0+384),w
  5877  0004' 1D03               	skipz
  5878  0005' 2800'              	goto	u6655
  5879  0006' 0024               	movlb	4	; select bank4
  5880  0007' 0809'              	movf	(_basic_configuration^(0+512)+9),w
  5881  0008' 0023               	movlb	3	; select bank3
  5882  0009' 0200'              	subwf	_iavg^(0+384),w
  5883  000A'                    u6655:
  5884  000A' 1803               	skipnc
  5885  000B' 2800'              	goto	l6085
  5886  000C' 0024               	movlb	4	; select bank4
  5887  000D' 0300'              	decf	_basic_configuration^(0+512),w
  5888  000E' 1903               	btfsc	3,2
  5889  000F' 2800'              	goto	l6091
  5890  0010'                    l6085:
  5891  0010' 0023               	movlb	3	; select bank3
  5892  0011' 0800'              	movf	_vmax^(0+384),w
  5893  0012' 3EFB               	addlw	251
  5894  0013' 0080'              	movwf	??_fCHARGE^(0+384)
  5895  0014' 30FF               	movlw	255
  5896  0015' 3D00'              	addwfc	(_vmax+1)^(0+384),w
  5897  0016' 0080'              	movwf	(??_fCHARGE+1)^(0+384)
  5898  0017' 0800'              	movf	(??_fCHARGE+1)^(0+384),w
  5899  0018' 0200'              	subwf	(_vavg+1)^(0+384),w
  5900  0019' 1D03               	skipz
  5901  001A' 2800'              	goto	u6675
  5902  001B' 0800'              	movf	??_fCHARGE^(0+384),w
  5903  001C' 0200'              	subwf	_vavg^(0+384),w
  5904  001D'                    u6675:
  5905  001D' 1C03               	skipc
  5906  001E' 2800'              	goto	l6089
  5907  001F' 0800'              	movf	(_second+1)^(0+384),w
  5908  0020' 0200'              	subwf	(_timeout+1)^(0+384),w
  5909  0021' 1D03               	skipz
  5910  0022' 2800'              	goto	u6685
  5911  0023' 0800'              	movf	_second^(0+384),w
  5912  0024' 0200'              	subwf	_timeout^(0+384),w
  5913  0025'                    u6685:
  5914  0025' 1803               	skipnc
  5915  0026' 2800'              	goto	l6111
  5916  0027'                    l6089:
  5917  0027' 3002               	movlw	2
  5918  0028' 0024               	movlb	4	; select bank4
  5919  0029' 0600'              	xorwf	_basic_configuration^(0+512),w
  5920  002A' 1D03               	btfss	3,2
  5921  002B' 2800'              	goto	l6111
  5922  002C'                    l6091:
  5923                           
  5924                           ;state_machine_b.c: 66:     {;state_machine_b.c: 67:         if (second > 5)
  5925  002C' 3000               	movlw	0
  5926  002D' 0023               	movlb	3	; select bank3
  5927  002E' 0200'              	subwf	(_second+1)^(0+384),w
  5928  002F' 3006               	movlw	6
  5929  0030' 1903               	skipnz
  5930  0031' 0200'              	subwf	_second^(0+384),w
  5931  0032' 1C03               	skipc
  5932  0033' 2800'              	goto	l6111
  5933                           
  5934                           ;state_machine_b.c: 68:         {;state_machine_b.c: 69:             state = WAIT;
  5935  0034' 300D               	movlw	13
  5936  0035' 0080'              	movwf	_state^(0+384)
  5937                           
  5938                           ;state_machine_b.c: 70:             wait_count = getTime();
  5939  0036' 3180' 2000' 3180'  	fcall	_getTime
  5940  0039' 0023               	movlb	3	; select bank3
  5941  003A' 0080'              	movwf	??_fCHARGE^(0+384)
  5942  003B' 0181'              	clrf	(??_fCHARGE^(0+384)+1)
  5943  003C' 0800'              	movf	??_fCHARGE^(0+384),w
  5944  003D' 0080'              	movwf	_wait_count^(0+384)
  5945  003E' 0800'              	movf	(??_fCHARGE+1)^(0+384),w
  5946  003F' 0080'              	movwf	(_wait_count+1)^(0+384)
  5947                           
  5948                           ;state_machine_b.c: 71:             { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50.0; 
      +                          set_DC(); Cell_OFF();};
  5949  0040' 0020               	movlb	0	; select bank0
  5950  0041' 118E               	bcf	14,3	;volatile
  5951  0042' 120E               	bcf	14,4	;volatile
  5952  0043' 0021               	movlb	1	; select bank1
  5953  0044' 0180'              	clrf	_conv^(0+128)
  5954  0045' 0020               	movlb	0	; select bank0
  5955  0046' 128E               	bcf	14,5	;volatile
  5956  0047' 3042               	movlw	66
  5957  0048' 0023               	movlb	3	; select bank3
  5958  0049' 0080'              	movwf	(_pidt+3)^(0+384)
  5959  004A' 3048               	movlw	72
  5960  004B' 0080'              	movwf	(_pidt+2)^(0+384)
  5961  004C' 3000               	movlw	0
  5962  004D' 0080'              	movwf	(_pidt+1)^(0+384)
  5963  004E' 3000               	movlw	0
  5964  004F' 0080'              	movwf	_pidt^(0+384)
  5965  0050' 3180' 2000' 3180'  	fcall	_set_DC
  5966  0053' 3180' 2000' 3180'  	fcall	_Cell_OFF
  5967  0056'                    l6111:
  5968                           
  5969                           ;state_machine_b.c: 74:     if (state == PRECHARGE){
  5970  0056' 3005               	movlw	5
  5971  0057' 0023               	movlb	3	; select bank3
  5972  0058' 0600'              	xorwf	_state^(0+384),w
  5973  0059' 1D03               	btfss	3,2
  5974  005A' 0008               	return
  5975                           
  5976                           ;state_machine_b.c: 75:         if (basic_configuration.version == 1)
  5977  005B' 0024               	movlb	4	; select bank4
  5978  005C' 0300'              	decf	_basic_configuration^(0+512),w
  5979  005D' 1D03               	btfss	3,2
  5980  005E' 2800'              	goto	l6137
  5981                           
  5982                           ;state_machine_b.c: 76:         {;state_machine_b.c: 77:             if (qavg >= ( (capa
      +                          city) / 2 ) && (second >= 1))
  5983  005F' 0023               	movlb	3	; select bank3
  5984  0060' 0800'              	movf	(_qavg+3)^(0+384),w
  5985  0061' 0022               	movlb	2	; select bank2
  5986  0062' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  5987  0063' 0023               	movlb	3	; select bank3
  5988  0064' 0800'              	movf	(_qavg+2)^(0+384),w
  5989  0065' 0022               	movlb	2	; select bank2
  5990  0066' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  5991  0067' 0023               	movlb	3	; select bank3
  5992  0068' 0800'              	movf	(_qavg+1)^(0+384),w
  5993  0069' 0022               	movlb	2	; select bank2
  5994  006A' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  5995  006B' 0023               	movlb	3	; select bank3
  5996  006C' 0800'              	movf	_qavg^(0+384),w
  5997  006D' 0022               	movlb	2	; select bank2
  5998  006E' 0080'              	movwf	___flge@ff1^(0+256)
  5999  006F' 0023               	movlb	3	; select bank3
  6000  0070' 0800'              	movf	(_capacity+1)^(0+384),w
  6001  0071' 0081'              	movwf	(??_fCHARGE^(0+384)+1)
  6002  0072' 0800'              	movf	_capacity^(0+384),w
  6003  0073' 0080'              	movwf	??_fCHARGE^(0+384)
  6004  0074' 3681'              	lsrf	(??_fCHARGE^(0+384)+1),f
  6005  0075' 0C80'              	rrf	??_fCHARGE^(0+384),f
  6006  0076' 0800'              	movf	??_fCHARGE^(0+384),w
  6007  0077' 0022               	movlb	2	; select bank2
  6008  0078' 0080'              	movwf	___xxtofl@val^(0+256)
  6009  0079' 0023               	movlb	3	; select bank3
  6010  007A' 0800'              	movf	(??_fCHARGE+1)^(0+384),w
  6011  007B' 0022               	movlb	2	; select bank2
  6012  007C' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  6013  007D' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  6014  007E' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  6015  007F' 3000               	movlw	0
  6016  0080' 3180' 2000' 3180'  	fcall	___xxtofl
  6017  0083' 0022               	movlb	2	; select bank2
  6018  0084' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  6019  0085' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  6020  0086' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  6021  0087' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  6022  0088' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  6023  0089' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  6024  008A' 0800'              	movf	?___xxtofl^(0+256),w
  6025  008B' 0080'              	movwf	___flge@ff2^(0+256)
  6026  008C' 3180' 2000' 3180'  	fcall	___flge
  6027  008F' 1C03               	btfss	3,0
  6028  0090' 0008               	return
  6029  0091' 0023               	movlb	3	; select bank3
  6030  0092' 0800'              	movf	_second^(0+384),w
  6031  0093' 0400'              	iorwf	(_second+1)^(0+384),w
  6032  0094' 1903               	btfsc	3,2
  6033  0095' 0008               	return
  6034                           
  6035                           ;state_machine_b.c: 78:             {;state_machine_b.c: 79:                 state = WAI
      +                          T;
  6036  0096' 300D               	movlw	13
  6037  0097'                    L6:
  6038  0097' 0080'              	movwf	_state^(0+384)
  6039                           
  6040                           ;state_machine_b.c: 80:                 wait_count = getTime();
  6041  0098' 3180' 2000' 3180'  	fcall	_getTime
  6042  009B' 0023               	movlb	3	; select bank3
  6043  009C' 0080'              	movwf	??_fCHARGE^(0+384)
  6044  009D' 0181'              	clrf	(??_fCHARGE^(0+384)+1)
  6045  009E' 0800'              	movf	??_fCHARGE^(0+384),w
  6046  009F' 0080'              	movwf	_wait_count^(0+384)
  6047  00A0' 0800'              	movf	(??_fCHARGE+1)^(0+384),w
  6048  00A1' 0080'              	movwf	(_wait_count+1)^(0+384)
  6049                           
  6050                           ;state_machine_b.c: 81:                 { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50
      +                          .0; set_DC(); Cell_OFF();};
  6051  00A2' 0020               	movlb	0	; select bank0
  6052  00A3' 118E               	bcf	14,3	;volatile
  6053  00A4' 120E               	bcf	14,4	;volatile
  6054  00A5' 0021               	movlb	1	; select bank1
  6055  00A6' 0180'              	clrf	_conv^(0+128)
  6056  00A7' 0020               	movlb	0	; select bank0
  6057  00A8' 128E               	bcf	14,5	;volatile
  6058  00A9' 3042               	movlw	66
  6059  00AA' 0023               	movlb	3	; select bank3
  6060  00AB' 0080'              	movwf	(_pidt+3)^(0+384)
  6061  00AC' 3048               	movlw	72
  6062  00AD' 0080'              	movwf	(_pidt+2)^(0+384)
  6063  00AE' 3000               	movlw	0
  6064  00AF' 0080'              	movwf	(_pidt+1)^(0+384)
  6065  00B0' 3000               	movlw	0
  6066  00B1' 0080'              	movwf	_pidt^(0+384)
  6067  00B2' 3180' 2000' 3180'  	fcall	_set_DC
  6068  00B5' 3180' 2000'        	fcall	_Cell_OFF
  6069  00B7' 0008               	return
  6070  00B8'                    l6137:
  6071  00B8' 3002               	movlw	2
  6072  00B9' 0600'              	xorwf	_basic_configuration^(0+512),w
  6073  00BA' 1D03               	btfss	3,2
  6074  00BB' 0008               	return
  6075                           
  6076                           ;state_machine_b.c: 85:         {;state_machine_b.c: 86:             if (vavg >= basic_c
      +                          onfiguration.end_of_precharge || qavg >= ( (capacity) / 2 ) || (second >= timeout))
  6077  00BC' 080B'              	movf	((_basic_configuration+1)^(0+512)+11),w
  6078  00BD' 0023               	movlb	3	; select bank3
  6079  00BE' 0200'              	subwf	(_vavg+1)^(0+384),w
  6080  00BF' 1D03               	skipz
  6081  00C0' 2800'              	goto	u6765
  6082  00C1' 0024               	movlb	4	; select bank4
  6083  00C2' 080B'              	movf	(_basic_configuration^(0+512)+11),w
  6084  00C3' 0023               	movlb	3	; select bank3
  6085  00C4' 0200'              	subwf	_vavg^(0+384),w
  6086  00C5'                    u6765:
  6087  00C5' 1803               	skipnc
  6088  00C6' 2800'              	goto	l6145
  6089  00C7' 0800'              	movf	(_qavg+3)^(0+384),w
  6090  00C8' 0022               	movlb	2	; select bank2
  6091  00C9' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  6092  00CA' 0023               	movlb	3	; select bank3
  6093  00CB' 0800'              	movf	(_qavg+2)^(0+384),w
  6094  00CC' 0022               	movlb	2	; select bank2
  6095  00CD' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  6096  00CE' 0023               	movlb	3	; select bank3
  6097  00CF' 0800'              	movf	(_qavg+1)^(0+384),w
  6098  00D0' 0022               	movlb	2	; select bank2
  6099  00D1' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  6100  00D2' 0023               	movlb	3	; select bank3
  6101  00D3' 0800'              	movf	_qavg^(0+384),w
  6102  00D4' 0022               	movlb	2	; select bank2
  6103  00D5' 0080'              	movwf	___flge@ff1^(0+256)
  6104  00D6' 0023               	movlb	3	; select bank3
  6105  00D7' 0800'              	movf	(_capacity+1)^(0+384),w
  6106  00D8' 0081'              	movwf	(??_fCHARGE^(0+384)+1)
  6107  00D9' 0800'              	movf	_capacity^(0+384),w
  6108  00DA' 0080'              	movwf	??_fCHARGE^(0+384)
  6109  00DB' 3681'              	lsrf	(??_fCHARGE^(0+384)+1),f
  6110  00DC' 0C80'              	rrf	??_fCHARGE^(0+384),f
  6111  00DD' 0800'              	movf	??_fCHARGE^(0+384),w
  6112  00DE' 0022               	movlb	2	; select bank2
  6113  00DF' 0080'              	movwf	___xxtofl@val^(0+256)
  6114  00E0' 0023               	movlb	3	; select bank3
  6115  00E1' 0800'              	movf	(??_fCHARGE+1)^(0+384),w
  6116  00E2' 0022               	movlb	2	; select bank2
  6117  00E3' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  6118  00E4' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  6119  00E5' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  6120  00E6' 3000               	movlw	0
  6121  00E7' 3180' 2000' 3180'  	fcall	___xxtofl
  6122  00EA' 0022               	movlb	2	; select bank2
  6123  00EB' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  6124  00EC' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  6125  00ED' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  6126  00EE' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  6127  00EF' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  6128  00F0' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  6129  00F1' 0800'              	movf	?___xxtofl^(0+256),w
  6130  00F2' 0080'              	movwf	___flge@ff2^(0+256)
  6131  00F3' 3180' 2000' 3180'  	fcall	___flge
  6132  00F6' 1803               	btfsc	3,0
  6133  00F7' 2800'              	goto	l6145
  6134  00F8' 0023               	movlb	3	; select bank3
  6135  00F9' 0800'              	movf	(_timeout+1)^(0+384),w
  6136  00FA' 0200'              	subwf	(_second+1)^(0+384),w
  6137  00FB' 1D03               	skipz
  6138  00FC' 2800'              	goto	u6785
  6139  00FD' 0800'              	movf	_timeout^(0+384),w
  6140  00FE' 0200'              	subwf	_second^(0+384),w
  6141  00FF'                    u6785:
  6142  00FF' 1C03               	skipc
  6143  0100' 0008               	return
  6144  0101'                    l6145:
  6145                           
  6146                           ;state_machine_b.c: 87:             {;state_machine_b.c: 88:                 state = WAI
      +                          T;
  6147  0101' 300D               	movlw	13
  6148  0102' 0023               	movlb	3	; select bank3
  6149  0103' 2800'              	goto	L6
  6150  0104'                    __end_of_fCHARGE:	
  6151                           ;state_machine_b.c: 90:                 { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50
      +                          .0; set_DC(); Cell_OFF();};
  6152                           
  6153                           ;state_machine_b.c: 89:                 wait_count = getTime();
  6154                           
  6155                           
  6156                           	psect	text12
  6157  0000'                    __ptext12:	
  6158 ;; *************** function _getTime *****************
  6159 ;; Defined at:
  6160 ;;		line 565 in file "charger_discharger.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;		None
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;		None
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      unsigned char 
  6167 ;; Registers used:
  6168 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6176 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  6177 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  6178 ;;Total ram usage:        2 bytes
  6179 ;; Hardware stack levels used: 1
  6180 ;; Hardware stack levels required when called: 5
  6181 ;; This function calls:
  6182 ;;		Nothing
  6183 ;; This function is called by:
  6184 ;;		_fCHARGE
  6185 ;;		_fDISCHARGE
  6186 ;;		_fDC_res
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190  0000'                    _getTime:	
  6191                           ;psect for function _getTime
  6192                           
  6193                           
  6194                           ;charger_discharger.c: 566:     if ((counter_state + 1 <= test_configuration.number_of_s
      +                          tates) && (test_configuration.order_of_states[counter_state + 1] != 0x00)){
  6195                           
  6196                           ;incstack = 0
  6197                           ; Regs used in _getTime: [wreg+fsr1l+fsr1h+status,2+status,0]
  6198  0000' 0021               	movlb	1	; select bank1
  6199  0001' 0800'              	movf	_counter_state^(0+128),w
  6200  0002' 3E01               	addlw	1
  6201  0003' 0022               	movlb	2	; select bank2
  6202  0004' 0080'              	movwf	??_getTime^(0+256)
  6203  0005' 3000               	movlw	0
  6204  0006' 1803               	skipnc
  6205  0007' 3001               	movlw	1
  6206  0008' 0081'              	movwf	(??_getTime^(0+256)+1)
  6207  0009' 0800'              	movf	(??_getTime+1)^(0+256),w
  6208  000A' 3A80               	xorlw	128
  6209  000B' 3C80               	sublw	128
  6210  000C' 1D03               	skipz
  6211  000D' 2800'              	goto	u5555
  6212  000E' 0800'              	movf	??_getTime^(0+256),w
  6213  000F' 0024               	movlb	4	; select bank4
  6214  0010' 0201'              	subwf	(_test_configuration^(0+512)+1),w
  6215  0011'                    u5555:
  6216  0011' 1C03               	skipc
  6217  0012' 2800'              	goto	l5467
  6218  0013' 0021               	movlb	1	; select bank1
  6219  0014' 0800'              	movf	_counter_state^(0+128),w
  6220  0015' 3E00'              	addlw	(low ((_test_configuration| (0+512)+8)))& (0+255)
  6221  0016' 0086               	movwf	6
  6222  0017' 3002               	movlw	2	; select bank4/5
  6223  0018' 0087               	movwf	7
  6224  0019' 0801               	movf	1,w
  6225  001A' 1903               	btfsc	3,2
  6226  001B' 2800'              	goto	l5467
  6227  001C'                    l5461:
  6228                           
  6229                           ;charger_discharger.c: 567:         return test_configuration.wait_time;
  6230  001C' 0024               	movlb	4	; select bank4
  6231  001D' 0803'              	movf	(_test_configuration^(0+512)+3),w
  6232  001E' 0008               	return
  6233  001F'                    l5467:
  6234  001F' 0024               	movlb	4	; select bank4
  6235  0020' 0800'              	movf	_test_configuration^(0+512),w
  6236  0021' 0023               	movlb	3	; select bank3
  6237  0022' 0200'              	subwf	_cell_count^(0+384),w
  6238  0023' 1C03               	btfss	3,0
  6239  0024' 2800'              	goto	l5461
  6240                           
  6241                           ;charger_discharger.c: 573:         return test_configuration.end_wait_time;
  6242  0025' 0024               	movlb	4	; select bank4
  6243  0026' 0805'              	movf	(_test_configuration^(0+512)+5),w
  6244  0027' 0008               	return
  6245  0028'                    __end_of_getTime:
  6246                           
  6247                           	psect	text13
  6248  0000'                    __ptext13:	
  6249 ;; *************** function ___flge *****************
  6250 ;; Defined at:
  6251 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  ff1             4   14[BANK2 ] unsigned char 
  6254 ;;  ff2             4   18[BANK2 ] unsigned char 
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;		None
  6257 ;; Return value:  Size  Location     Type
  6258 ;;		None               void
  6259 ;; Registers used:
  6260 ;;		wreg, status,2, status,0
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6266 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  6267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6268 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  6269 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
  6270 ;;Total ram usage:       12 bytes
  6271 ;; Hardware stack levels used: 1
  6272 ;; Hardware stack levels required when called: 5
  6273 ;; This function calls:
  6274 ;;		Nothing
  6275 ;; This function is called by:
  6276 ;;		_fCHARGE
  6277 ;;		_fDISCHARGE
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281  0000'                    ___flge:	
  6282                           ;psect for function ___flge
  6283                           
  6284                           
  6285                           ;incstack = 0
  6286                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6287  0000' 3000               	movlw	0
  6288  0001' 0022               	movlb	2	; select bank2
  6289  0002' 0500'              	andwf	___flge@ff1^(0+256),w
  6290  0003' 0080'              	movwf	??___flge^(0+256)
  6291  0004' 3000               	movlw	0
  6292  0005' 0500'              	andwf	(___flge@ff1+1)^(0+256),w
  6293  0006' 0081'              	movwf	(??___flge^(0+256)+1)
  6294  0007' 3080               	movlw	128
  6295  0008' 0500'              	andwf	(___flge@ff1+2)^(0+256),w
  6296  0009' 0082'              	movwf	(??___flge^(0+256)+2)
  6297  000A' 307F               	movlw	127
  6298  000B' 0500'              	andwf	(___flge@ff1+3)^(0+256),w
  6299  000C' 0083'              	movwf	(??___flge^(0+256)+3)
  6300  000D' 0800'              	movf	(??___flge+3)^(0+256),w
  6301  000E' 0400'              	iorwf	(??___flge+2)^(0+256),w
  6302  000F' 0400'              	iorwf	(??___flge+1)^(0+256),w
  6303  0010' 0400'              	iorwf	??___flge^(0+256),w
  6304  0011' 1D03               	skipz
  6305  0012' 2800'              	goto	l1224
  6306  0013' 3000               	movlw	0
  6307  0014' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  6308  0015' 3000               	movlw	0
  6309  0016' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  6310  0017' 3000               	movlw	0
  6311  0018' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  6312  0019' 3000               	movlw	0
  6313  001A' 0080'              	movwf	___flge@ff1^(0+256)
  6314  001B'                    l1224:
  6315  001B' 3000               	movlw	0
  6316  001C' 0500'              	andwf	___flge@ff2^(0+256),w
  6317  001D' 0080'              	movwf	??___flge^(0+256)
  6318  001E' 3000               	movlw	0
  6319  001F' 0500'              	andwf	(___flge@ff2+1)^(0+256),w
  6320  0020' 0081'              	movwf	(??___flge^(0+256)+1)
  6321  0021' 3080               	movlw	128
  6322  0022' 0500'              	andwf	(___flge@ff2+2)^(0+256),w
  6323  0023' 0082'              	movwf	(??___flge^(0+256)+2)
  6324  0024' 307F               	movlw	127
  6325  0025' 0500'              	andwf	(___flge@ff2+3)^(0+256),w
  6326  0026' 0083'              	movwf	(??___flge^(0+256)+3)
  6327  0027' 0800'              	movf	(??___flge+3)^(0+256),w
  6328  0028' 0400'              	iorwf	(??___flge+2)^(0+256),w
  6329  0029' 0400'              	iorwf	(??___flge+1)^(0+256),w
  6330  002A' 0400'              	iorwf	??___flge^(0+256),w
  6331  002B' 1D03               	skipz
  6332  002C' 2800'              	goto	l5497
  6333  002D' 3000               	movlw	0
  6334  002E' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  6335  002F' 3000               	movlw	0
  6336  0030' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  6337  0031' 3000               	movlw	0
  6338  0032' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  6339  0033' 3000               	movlw	0
  6340  0034' 0080'              	movwf	___flge@ff2^(0+256)
  6341  0035'                    l5497:
  6342  0035' 1F80'              	btfss	(___flge@ff1+3)^(0+256),7
  6343  0036' 2800'              	goto	l5501
  6344  0037' 3000               	movlw	0
  6345  0038' 0080'              	movwf	??___flge^(0+256)
  6346  0039' 3000               	movlw	0
  6347  003A' 0081'              	movwf	(??___flge^(0+256)+1)
  6348  003B' 3000               	movlw	0
  6349  003C' 0082'              	movwf	(??___flge^(0+256)+2)
  6350  003D' 3080               	movlw	128
  6351  003E' 0083'              	movwf	(??___flge^(0+256)+3)
  6352  003F' 0800'              	movf	___flge@ff1^(0+256),w
  6353  0040' 0280'              	subwf	??___flge^(0+256),f
  6354  0041' 0800'              	movf	(___flge@ff1+1)^(0+256),w
  6355  0042' 3B81'              	subwfb	(??___flge^(0+256)+1),f
  6356  0043' 0800'              	movf	(___flge@ff1+2)^(0+256),w
  6357  0044' 3B82'              	subwfb	(??___flge^(0+256)+2),f
  6358  0045' 0800'              	movf	(___flge@ff1+3)^(0+256),w
  6359  0046' 3B83'              	subwfb	(??___flge^(0+256)+3),f
  6360  0047' 0800'              	movf	(??___flge+3)^(0+256),w
  6361  0048' 0080'              	movwf	(___flge@ff1+3)^(0+256)
  6362  0049' 0800'              	movf	(??___flge+2)^(0+256),w
  6363  004A' 0080'              	movwf	(___flge@ff1+2)^(0+256)
  6364  004B' 0800'              	movf	(??___flge+1)^(0+256),w
  6365  004C' 0080'              	movwf	(___flge@ff1+1)^(0+256)
  6366  004D' 0800'              	movf	??___flge^(0+256),w
  6367  004E' 0080'              	movwf	___flge@ff1^(0+256)
  6368  004F'                    l5501:
  6369  004F' 1F80'              	btfss	(___flge@ff2+3)^(0+256),7
  6370  0050' 2800'              	goto	l1227
  6371  0051' 3000               	movlw	0
  6372  0052' 0080'              	movwf	??___flge^(0+256)
  6373  0053' 3000               	movlw	0
  6374  0054' 0081'              	movwf	(??___flge^(0+256)+1)
  6375  0055' 3000               	movlw	0
  6376  0056' 0082'              	movwf	(??___flge^(0+256)+2)
  6377  0057' 3080               	movlw	128
  6378  0058' 0083'              	movwf	(??___flge^(0+256)+3)
  6379  0059' 0800'              	movf	___flge@ff2^(0+256),w
  6380  005A' 0280'              	subwf	??___flge^(0+256),f
  6381  005B' 0800'              	movf	(___flge@ff2+1)^(0+256),w
  6382  005C' 3B81'              	subwfb	(??___flge^(0+256)+1),f
  6383  005D' 0800'              	movf	(___flge@ff2+2)^(0+256),w
  6384  005E' 3B82'              	subwfb	(??___flge^(0+256)+2),f
  6385  005F' 0800'              	movf	(___flge@ff2+3)^(0+256),w
  6386  0060' 3B83'              	subwfb	(??___flge^(0+256)+3),f
  6387  0061' 0800'              	movf	(??___flge+3)^(0+256),w
  6388  0062' 0080'              	movwf	(___flge@ff2+3)^(0+256)
  6389  0063' 0800'              	movf	(??___flge+2)^(0+256),w
  6390  0064' 0080'              	movwf	(___flge@ff2+2)^(0+256)
  6391  0065' 0800'              	movf	(??___flge+1)^(0+256),w
  6392  0066' 0080'              	movwf	(___flge@ff2+1)^(0+256)
  6393  0067' 0800'              	movf	??___flge^(0+256),w
  6394  0068' 0080'              	movwf	___flge@ff2^(0+256)
  6395  0069'                    l1227:
  6396  0069' 3080               	movlw	128
  6397  006A' 0680'              	xorwf	(___flge@ff1+3)^(0+256),f
  6398  006B' 3080               	movlw	128
  6399  006C' 0680'              	xorwf	(___flge@ff2+3)^(0+256),f
  6400  006D' 0800'              	movf	(___flge@ff2+3)^(0+256),w
  6401  006E' 0200'              	subwf	(___flge@ff1+3)^(0+256),w
  6402  006F' 1D03               	skipz
  6403  0070' 0008               	return
  6404  0071' 0800'              	movf	(___flge@ff2+2)^(0+256),w
  6405  0072' 0200'              	subwf	(___flge@ff1+2)^(0+256),w
  6406  0073' 1D03               	skipz
  6407  0074' 0008               	return
  6408  0075' 0800'              	movf	(___flge@ff2+1)^(0+256),w
  6409  0076' 0200'              	subwf	(___flge@ff1+1)^(0+256),w
  6410  0077' 1D03               	skipz
  6411  0078' 0008               	return
  6412  0079' 0800'              	movf	___flge@ff2^(0+256),w
  6413  007A' 0200'              	subwf	___flge@ff1^(0+256),w
  6414  007B' 0008               	return
  6415  007C'                    __end_of___flge:
  6416                           
  6417                           	psect	text14
  6418  0000'                    __ptext14:	
  6419 ;; *************** function _scaling *****************
  6420 ;; Defined at:
  6421 ;;		line 319 in file "charger_discharger.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;		None
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;		None
  6426 ;; Return value:  Size  Location     Type
  6427 ;;                  1    wreg      void 
  6428 ;; Registers used:
  6429 ;;		wreg, status,2, status,0, pclath, cstack
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/0
  6432 ;;		On exit  : 0/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6436 ;;      Locals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
  6437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6438 ;;      Totals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
  6439 ;;Total ram usage:        8 bytes
  6440 ;; Hardware stack levels used: 1
  6441 ;; Hardware stack levels required when called: 7
  6442 ;; This function calls:
  6443 ;;		___fladd
  6444 ;;		___fldiv
  6445 ;;		___flmul
  6446 ;;		___fltol
  6447 ;;		___xxtofl
  6448 ;; This function is called by:
  6449 ;;		_main
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453  0000'                    _scaling:	
  6454                           ;psect for function _scaling
  6455                           
  6456                           
  6457                           ;charger_discharger.c: 321:     log_data.current = (uint16_t) ( ( ( (float)iavg * 2.5 * 
      +                          5000.0 ) / 4096.0 ) + 0.5 );
  6458                           
  6459                           ;incstack = 0
  6460                           ; Regs used in _scaling: [wreg+status,2+status,0+pclath+cstack]
  6461  0000' 0023               	movlb	3	; select bank3
  6462  0001' 0800'              	movf	_iavg^(0+384),w
  6463  0002' 0022               	movlb	2	; select bank2
  6464  0003' 0080'              	movwf	___xxtofl@val^(0+256)
  6465  0004' 0023               	movlb	3	; select bank3
  6466  0005' 0800'              	movf	(_iavg+1)^(0+384),w
  6467  0006' 0022               	movlb	2	; select bank2
  6468  0007' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  6469  0008' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  6470  0009' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  6471  000A' 3000               	movlw	0
  6472  000B' 3180' 2000' 3180'  	fcall	___xxtofl
  6473  000E' 0022               	movlb	2	; select bank2
  6474  000F' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  6475  0010' 0080'              	movwf	(___flmul@a+3)^(0+256)
  6476  0011' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  6477  0012' 0080'              	movwf	(___flmul@a+2)^(0+256)
  6478  0013' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  6479  0014' 0080'              	movwf	(___flmul@a+1)^(0+256)
  6480  0015' 0800'              	movf	?___xxtofl^(0+256),w
  6481  0016' 0080'              	movwf	___flmul@a^(0+256)
  6482  0017' 3040               	movlw	64
  6483  0018' 0080'              	movwf	(___flmul@b+3)^(0+256)
  6484  0019' 3020               	movlw	32
  6485  001A' 0080'              	movwf	(___flmul@b+2)^(0+256)
  6486  001B' 3000               	movlw	0
  6487  001C' 0080'              	movwf	(___flmul@b+1)^(0+256)
  6488  001D' 3000               	movlw	0
  6489  001E' 0080'              	movwf	___flmul@b^(0+256)
  6490  001F' 3180' 2000' 3180'  	fcall	___flmul
  6491  0022' 0022               	movlb	2	; select bank2
  6492  0023' 0800'              	movf	(?___flmul+3)^(0+256),w
  6493  0024' 0023               	movlb	3	; select bank3
  6494  0025' 0080'              	movwf	(_scaling$1608+3)^(0+384)
  6495  0026' 0022               	movlb	2	; select bank2
  6496  0027' 0800'              	movf	(?___flmul+2)^(0+256),w
  6497  0028' 0023               	movlb	3	; select bank3
  6498  0029' 0080'              	movwf	(_scaling$1608+2)^(0+384)
  6499  002A' 0022               	movlb	2	; select bank2
  6500  002B' 0800'              	movf	(?___flmul+1)^(0+256),w
  6501  002C' 0023               	movlb	3	; select bank3
  6502  002D' 0080'              	movwf	(_scaling$1608+1)^(0+384)
  6503  002E' 0022               	movlb	2	; select bank2
  6504  002F' 0800'              	movf	?___flmul^(0+256),w
  6505  0030' 0023               	movlb	3	; select bank3
  6506  0031' 0080'              	movwf	_scaling$1608^(0+384)
  6507                           
  6508                           ;charger_discharger.c: 321:     log_data.current = (uint16_t) ( ( ( (float)iavg * 2.5 * 
      +                          5000.0 ) / 4096.0 ) + 0.5 );
  6509  0032' 0800'              	movf	(_scaling$1608+3)^(0+384),w
  6510  0033' 0022               	movlb	2	; select bank2
  6511  0034' 0080'              	movwf	(___flmul@a+3)^(0+256)
  6512  0035' 0023               	movlb	3	; select bank3
  6513  0036' 0800'              	movf	(_scaling$1608+2)^(0+384),w
  6514  0037' 0022               	movlb	2	; select bank2
  6515  0038' 0080'              	movwf	(___flmul@a+2)^(0+256)
  6516  0039' 0023               	movlb	3	; select bank3
  6517  003A' 0800'              	movf	(_scaling$1608+1)^(0+384),w
  6518  003B' 0022               	movlb	2	; select bank2
  6519  003C' 0080'              	movwf	(___flmul@a+1)^(0+256)
  6520  003D' 0023               	movlb	3	; select bank3
  6521  003E' 0800'              	movf	_scaling$1608^(0+384),w
  6522  003F' 0022               	movlb	2	; select bank2
  6523  0040' 0080'              	movwf	___flmul@a^(0+256)
  6524  0041' 3045               	movlw	69
  6525  0042' 0080'              	movwf	(___flmul@b+3)^(0+256)
  6526  0043' 309C               	movlw	156
  6527  0044' 0080'              	movwf	(___flmul@b+2)^(0+256)
  6528  0045' 3040               	movlw	64
  6529  0046' 0080'              	movwf	(___flmul@b+1)^(0+256)
  6530  0047' 3000               	movlw	0
  6531  0048' 0080'              	movwf	___flmul@b^(0+256)
  6532  0049' 3180' 2000' 3180'  	fcall	___flmul
  6533  004C' 0022               	movlb	2	; select bank2
  6534  004D' 0800'              	movf	(?___flmul+3)^(0+256),w
  6535  004E' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  6536  004F' 0800'              	movf	(?___flmul+2)^(0+256),w
  6537  0050' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  6538  0051' 0800'              	movf	(?___flmul+1)^(0+256),w
  6539  0052' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  6540  0053' 0800'              	movf	?___flmul^(0+256),w
  6541  0054' 0080'              	movwf	___fldiv@b^(0+256)
  6542  0055' 3045               	movlw	69
  6543  0056' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  6544  0057' 3080               	movlw	128
  6545  0058' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  6546  0059' 3000               	movlw	0
  6547  005A' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  6548  005B' 3000               	movlw	0
  6549  005C' 0080'              	movwf	___fldiv@a^(0+256)
  6550  005D' 3180' 2000' 3180'  	fcall	___fldiv
  6551  0060' 0022               	movlb	2	; select bank2
  6552  0061' 0800'              	movf	(?___fldiv+3)^(0+256),w
  6553  0062' 0080'              	movwf	(___fladd@a+3)^(0+256)
  6554  0063' 0800'              	movf	(?___fldiv+2)^(0+256),w
  6555  0064' 0080'              	movwf	(___fladd@a+2)^(0+256)
  6556  0065' 0800'              	movf	(?___fldiv+1)^(0+256),w
  6557  0066' 0080'              	movwf	(___fladd@a+1)^(0+256)
  6558  0067' 0800'              	movf	?___fldiv^(0+256),w
  6559  0068' 0080'              	movwf	___fladd@a^(0+256)
  6560  0069' 303F               	movlw	63
  6561  006A' 0080'              	movwf	(___fladd@b+3)^(0+256)
  6562  006B' 3000               	movlw	0
  6563  006C' 0080'              	movwf	(___fladd@b+2)^(0+256)
  6564  006D' 3000               	movlw	0
  6565  006E' 0080'              	movwf	(___fladd@b+1)^(0+256)
  6566  006F' 3000               	movlw	0
  6567  0070' 0080'              	movwf	___fladd@b^(0+256)
  6568  0071' 3180' 2000' 3180'  	fcall	___fladd
  6569  0074' 0022               	movlb	2	; select bank2
  6570  0075' 0800'              	movf	(?___fladd+3)^(0+256),w
  6571  0076' 0023               	movlb	3	; select bank3
  6572  0077' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  6573  0078' 0022               	movlb	2	; select bank2
  6574  0079' 0800'              	movf	(?___fladd+2)^(0+256),w
  6575  007A' 0023               	movlb	3	; select bank3
  6576  007B' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  6577  007C' 0022               	movlb	2	; select bank2
  6578  007D' 0800'              	movf	(?___fladd+1)^(0+256),w
  6579  007E' 0023               	movlb	3	; select bank3
  6580  007F' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  6581  0080' 0022               	movlb	2	; select bank2
  6582  0081' 0800'              	movf	?___fladd^(0+256),w
  6583  0082' 0023               	movlb	3	; select bank3
  6584  0083' 0080'              	movwf	___fltol@f1^(0+384)
  6585  0084' 3180' 2000' 3180'  	fcall	___fltol
  6586  0087' 0023               	movlb	3	; select bank3
  6587  0088' 0800'              	movf	(?___fltol+1)^(0+384),w
  6588  0089' 0025               	movlb	5	; select bank5
  6589  008A' 0087'              	movwf	((_log_data+1)^(0+640)+7)
  6590  008B' 0023               	movlb	3	; select bank3
  6591  008C' 0800'              	movf	?___fltol^(0+384),w
  6592  008D' 0025               	movlb	5	; select bank5
  6593  008E' 0087'              	movwf	(_log_data^(0+640)+7)
  6594                           
  6595                           ;charger_discharger.c: 322:     log_data.voltage = (uint16_t) ( ( ( (float)vavg * 5000.0
      +                           ) / 4096.0 ) + 0.5 );
  6596  008F' 0023               	movlb	3	; select bank3
  6597  0090' 0800'              	movf	_vavg^(0+384),w
  6598  0091' 0022               	movlb	2	; select bank2
  6599  0092' 0080'              	movwf	___xxtofl@val^(0+256)
  6600  0093' 0023               	movlb	3	; select bank3
  6601  0094' 0800'              	movf	(_vavg+1)^(0+384),w
  6602  0095' 0022               	movlb	2	; select bank2
  6603  0096' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  6604  0097' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  6605  0098' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  6606  0099' 3000               	movlw	0
  6607  009A' 3180' 2000' 3180'  	fcall	___xxtofl
  6608  009D' 0022               	movlb	2	; select bank2
  6609  009E' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  6610  009F' 0080'              	movwf	(___flmul@a+3)^(0+256)
  6611  00A0' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  6612  00A1' 0080'              	movwf	(___flmul@a+2)^(0+256)
  6613  00A2' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  6614  00A3' 0080'              	movwf	(___flmul@a+1)^(0+256)
  6615  00A4' 0800'              	movf	?___xxtofl^(0+256),w
  6616  00A5' 0080'              	movwf	___flmul@a^(0+256)
  6617  00A6' 3045               	movlw	69
  6618  00A7' 0080'              	movwf	(___flmul@b+3)^(0+256)
  6619  00A8' 309C               	movlw	156
  6620  00A9' 0080'              	movwf	(___flmul@b+2)^(0+256)
  6621  00AA' 3040               	movlw	64
  6622  00AB' 0080'              	movwf	(___flmul@b+1)^(0+256)
  6623  00AC' 3000               	movlw	0
  6624  00AD' 0080'              	movwf	___flmul@b^(0+256)
  6625  00AE' 3180' 2000' 3180'  	fcall	___flmul
  6626  00B1' 0022               	movlb	2	; select bank2
  6627  00B2' 0800'              	movf	(?___flmul+3)^(0+256),w
  6628  00B3' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  6629  00B4' 0800'              	movf	(?___flmul+2)^(0+256),w
  6630  00B5' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  6631  00B6' 0800'              	movf	(?___flmul+1)^(0+256),w
  6632  00B7' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  6633  00B8' 0800'              	movf	?___flmul^(0+256),w
  6634  00B9' 0080'              	movwf	___fldiv@b^(0+256)
  6635  00BA' 3045               	movlw	69
  6636  00BB' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  6637  00BC' 3080               	movlw	128
  6638  00BD' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  6639  00BE' 3000               	movlw	0
  6640  00BF' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  6641  00C0' 3000               	movlw	0
  6642  00C1' 0080'              	movwf	___fldiv@a^(0+256)
  6643  00C2' 3180' 2000' 3180'  	fcall	___fldiv
  6644  00C5' 0022               	movlb	2	; select bank2
  6645  00C6' 0800'              	movf	(?___fldiv+3)^(0+256),w
  6646  00C7' 0080'              	movwf	(___fladd@a+3)^(0+256)
  6647  00C8' 0800'              	movf	(?___fldiv+2)^(0+256),w
  6648  00C9' 0080'              	movwf	(___fladd@a+2)^(0+256)
  6649  00CA' 0800'              	movf	(?___fldiv+1)^(0+256),w
  6650  00CB' 0080'              	movwf	(___fladd@a+1)^(0+256)
  6651  00CC' 0800'              	movf	?___fldiv^(0+256),w
  6652  00CD' 0080'              	movwf	___fladd@a^(0+256)
  6653  00CE' 303F               	movlw	63
  6654  00CF' 0080'              	movwf	(___fladd@b+3)^(0+256)
  6655  00D0' 3000               	movlw	0
  6656  00D1' 0080'              	movwf	(___fladd@b+2)^(0+256)
  6657  00D2' 3000               	movlw	0
  6658  00D3' 0080'              	movwf	(___fladd@b+1)^(0+256)
  6659  00D4' 3000               	movlw	0
  6660  00D5' 0080'              	movwf	___fladd@b^(0+256)
  6661  00D6' 3180' 2000' 3180'  	fcall	___fladd
  6662  00D9' 0022               	movlb	2	; select bank2
  6663  00DA' 0800'              	movf	(?___fladd+3)^(0+256),w
  6664  00DB' 0023               	movlb	3	; select bank3
  6665  00DC' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  6666  00DD' 0022               	movlb	2	; select bank2
  6667  00DE' 0800'              	movf	(?___fladd+2)^(0+256),w
  6668  00DF' 0023               	movlb	3	; select bank3
  6669  00E0' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  6670  00E1' 0022               	movlb	2	; select bank2
  6671  00E2' 0800'              	movf	(?___fladd+1)^(0+256),w
  6672  00E3' 0023               	movlb	3	; select bank3
  6673  00E4' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  6674  00E5' 0022               	movlb	2	; select bank2
  6675  00E6' 0800'              	movf	?___fladd^(0+256),w
  6676  00E7' 0023               	movlb	3	; select bank3
  6677  00E8' 0080'              	movwf	___fltol@f1^(0+384)
  6678  00E9' 3180' 2000' 3180'  	fcall	___fltol
  6679  00EC' 0023               	movlb	3	; select bank3
  6680  00ED' 0800'              	movf	(?___fltol+1)^(0+384),w
  6681  00EE' 0025               	movlb	5	; select bank5
  6682  00EF' 0085'              	movwf	((_log_data+1)^(0+640)+5)
  6683  00F0' 0023               	movlb	3	; select bank3
  6684  00F1' 0800'              	movf	?___fltol^(0+384),w
  6685  00F2' 0025               	movlb	5	; select bank5
  6686  00F3' 0085'              	movwf	(_log_data^(0+640)+5)
  6687                           
  6688                           ;charger_discharger.c: 323:     qavg += (float)( ( ( (float)iavg * 2.5 * 5000.0 ) / 4096
      +                          .0 ) + 0.5 ) / 3600.0;
  6689  00F4' 0023               	movlb	3	; select bank3
  6690  00F5' 0800'              	movf	_iavg^(0+384),w
  6691  00F6' 0022               	movlb	2	; select bank2
  6692  00F7' 0080'              	movwf	___xxtofl@val^(0+256)
  6693  00F8' 0023               	movlb	3	; select bank3
  6694  00F9' 0800'              	movf	(_iavg+1)^(0+384),w
  6695  00FA' 0022               	movlb	2	; select bank2
  6696  00FB' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  6697  00FC' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  6698  00FD' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  6699  00FE' 3000               	movlw	0
  6700  00FF' 3180' 2000' 3180'  	fcall	___xxtofl
  6701  0102' 0022               	movlb	2	; select bank2
  6702  0103' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  6703  0104' 0080'              	movwf	(___flmul@a+3)^(0+256)
  6704  0105' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  6705  0106' 0080'              	movwf	(___flmul@a+2)^(0+256)
  6706  0107' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  6707  0108' 0080'              	movwf	(___flmul@a+1)^(0+256)
  6708  0109' 0800'              	movf	?___xxtofl^(0+256),w
  6709  010A' 0080'              	movwf	___flmul@a^(0+256)
  6710  010B' 3040               	movlw	64
  6711  010C' 0080'              	movwf	(___flmul@b+3)^(0+256)
  6712  010D' 3020               	movlw	32
  6713  010E' 0080'              	movwf	(___flmul@b+2)^(0+256)
  6714  010F' 3000               	movlw	0
  6715  0110' 0080'              	movwf	(___flmul@b+1)^(0+256)
  6716  0111' 3000               	movlw	0
  6717  0112' 0080'              	movwf	___flmul@b^(0+256)
  6718  0113' 3180' 2000' 3180'  	fcall	___flmul
  6719  0116' 0022               	movlb	2	; select bank2
  6720  0117' 0800'              	movf	(?___flmul+3)^(0+256),w
  6721  0118' 0023               	movlb	3	; select bank3
  6722  0119' 0080'              	movwf	(_scaling$1608+3)^(0+384)
  6723  011A' 0022               	movlb	2	; select bank2
  6724  011B' 0800'              	movf	(?___flmul+2)^(0+256),w
  6725  011C' 0023               	movlb	3	; select bank3
  6726  011D' 0080'              	movwf	(_scaling$1608+2)^(0+384)
  6727  011E' 0022               	movlb	2	; select bank2
  6728  011F' 0800'              	movf	(?___flmul+1)^(0+256),w
  6729  0120' 0023               	movlb	3	; select bank3
  6730  0121' 0080'              	movwf	(_scaling$1608+1)^(0+384)
  6731  0122' 0022               	movlb	2	; select bank2
  6732  0123' 0800'              	movf	?___flmul^(0+256),w
  6733  0124' 0023               	movlb	3	; select bank3
  6734  0125' 0080'              	movwf	_scaling$1608^(0+384)
  6735                           
  6736                           ;charger_discharger.c: 323:     qavg += (float)( ( ( (float)iavg * 2.5 * 5000.0 ) / 4096
      +                          .0 ) + 0.5 ) / 3600.0;
  6737  0126' 0800'              	movf	(_scaling$1608+3)^(0+384),w
  6738  0127' 0022               	movlb	2	; select bank2
  6739  0128' 0080'              	movwf	(___flmul@a+3)^(0+256)
  6740  0129' 0023               	movlb	3	; select bank3
  6741  012A' 0800'              	movf	(_scaling$1608+2)^(0+384),w
  6742  012B' 0022               	movlb	2	; select bank2
  6743  012C' 0080'              	movwf	(___flmul@a+2)^(0+256)
  6744  012D' 0023               	movlb	3	; select bank3
  6745  012E' 0800'              	movf	(_scaling$1608+1)^(0+384),w
  6746  012F' 0022               	movlb	2	; select bank2
  6747  0130' 0080'              	movwf	(___flmul@a+1)^(0+256)
  6748  0131' 0023               	movlb	3	; select bank3
  6749  0132' 0800'              	movf	_scaling$1608^(0+384),w
  6750  0133' 0022               	movlb	2	; select bank2
  6751  0134' 0080'              	movwf	___flmul@a^(0+256)
  6752  0135' 3045               	movlw	69
  6753  0136' 0080'              	movwf	(___flmul@b+3)^(0+256)
  6754  0137' 309C               	movlw	156
  6755  0138' 0080'              	movwf	(___flmul@b+2)^(0+256)
  6756  0139' 3040               	movlw	64
  6757  013A' 0080'              	movwf	(___flmul@b+1)^(0+256)
  6758  013B' 3000               	movlw	0
  6759  013C' 0080'              	movwf	___flmul@b^(0+256)
  6760  013D' 3180' 2000' 3180'  	fcall	___flmul
  6761  0140' 0022               	movlb	2	; select bank2
  6762  0141' 0800'              	movf	(?___flmul+3)^(0+256),w
  6763  0142' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  6764  0143' 0800'              	movf	(?___flmul+2)^(0+256),w
  6765  0144' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  6766  0145' 0800'              	movf	(?___flmul+1)^(0+256),w
  6767  0146' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  6768  0147' 0800'              	movf	?___flmul^(0+256),w
  6769  0148' 0080'              	movwf	___fldiv@b^(0+256)
  6770  0149' 3045               	movlw	69
  6771  014A' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  6772  014B' 3080               	movlw	128
  6773  014C' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  6774  014D' 3000               	movlw	0
  6775  014E' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  6776  014F' 3000               	movlw	0
  6777  0150' 0080'              	movwf	___fldiv@a^(0+256)
  6778  0151' 3180' 2000' 3180'  	fcall	___fldiv
  6779  0154' 0022               	movlb	2	; select bank2
  6780  0155' 0800'              	movf	(?___fldiv+3)^(0+256),w
  6781  0156' 0080'              	movwf	(___fladd@a+3)^(0+256)
  6782  0157' 0800'              	movf	(?___fldiv+2)^(0+256),w
  6783  0158' 0080'              	movwf	(___fladd@a+2)^(0+256)
  6784  0159' 0800'              	movf	(?___fldiv+1)^(0+256),w
  6785  015A' 0080'              	movwf	(___fladd@a+1)^(0+256)
  6786  015B' 0800'              	movf	?___fldiv^(0+256),w
  6787  015C' 0080'              	movwf	___fladd@a^(0+256)
  6788  015D' 303F               	movlw	63
  6789  015E' 0080'              	movwf	(___fladd@b+3)^(0+256)
  6790  015F' 3000               	movlw	0
  6791  0160' 0080'              	movwf	(___fladd@b+2)^(0+256)
  6792  0161' 3000               	movlw	0
  6793  0162' 0080'              	movwf	(___fladd@b+1)^(0+256)
  6794  0163' 3000               	movlw	0
  6795  0164' 0080'              	movwf	___fladd@b^(0+256)
  6796  0165' 3180' 2000' 3180'  	fcall	___fladd
  6797  0168' 0022               	movlb	2	; select bank2
  6798  0169' 0800'              	movf	(?___fladd+3)^(0+256),w
  6799  016A' 0023               	movlb	3	; select bank3
  6800  016B' 0080'              	movwf	(_scaling$1609+3)^(0+384)
  6801  016C' 0022               	movlb	2	; select bank2
  6802  016D' 0800'              	movf	(?___fladd+2)^(0+256),w
  6803  016E' 0023               	movlb	3	; select bank3
  6804  016F' 0080'              	movwf	(_scaling$1609+2)^(0+384)
  6805  0170' 0022               	movlb	2	; select bank2
  6806  0171' 0800'              	movf	(?___fladd+1)^(0+256),w
  6807  0172' 0023               	movlb	3	; select bank3
  6808  0173' 0080'              	movwf	(_scaling$1609+1)^(0+384)
  6809  0174' 0022               	movlb	2	; select bank2
  6810  0175' 0800'              	movf	?___fladd^(0+256),w
  6811  0176' 0023               	movlb	3	; select bank3
  6812  0177' 0080'              	movwf	_scaling$1609^(0+384)
  6813                           
  6814                           ;charger_discharger.c: 323:     qavg += (float)( ( ( (float)iavg * 2.5 * 5000.0 ) / 4096
      +                          .0 ) + 0.5 ) / 3600.0;
  6815  0178' 0800'              	movf	(_scaling$1609+3)^(0+384),w
  6816  0179' 0022               	movlb	2	; select bank2
  6817  017A' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  6818  017B' 0023               	movlb	3	; select bank3
  6819  017C' 0800'              	movf	(_scaling$1609+2)^(0+384),w
  6820  017D' 0022               	movlb	2	; select bank2
  6821  017E' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  6822  017F' 0023               	movlb	3	; select bank3
  6823  0180' 0800'              	movf	(_scaling$1609+1)^(0+384),w
  6824  0181' 0022               	movlb	2	; select bank2
  6825  0182' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  6826  0183' 0023               	movlb	3	; select bank3
  6827  0184' 0800'              	movf	_scaling$1609^(0+384),w
  6828  0185' 0022               	movlb	2	; select bank2
  6829  0186' 0080'              	movwf	___fldiv@b^(0+256)
  6830  0187' 3045               	movlw	69
  6831  0188' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  6832  0189' 3061               	movlw	97
  6833  018A' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  6834  018B' 3000               	movlw	0
  6835  018C' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  6836  018D' 3000               	movlw	0
  6837  018E' 0080'              	movwf	___fldiv@a^(0+256)
  6838  018F' 3180' 2000' 3180'  	fcall	___fldiv
  6839  0192' 0022               	movlb	2	; select bank2
  6840  0193' 0800'              	movf	(?___fldiv+3)^(0+256),w
  6841  0194' 0080'              	movwf	(___fladd@b+3)^(0+256)
  6842  0195' 0800'              	movf	(?___fldiv+2)^(0+256),w
  6843  0196' 0080'              	movwf	(___fladd@b+2)^(0+256)
  6844  0197' 0800'              	movf	(?___fldiv+1)^(0+256),w
  6845  0198' 0080'              	movwf	(___fladd@b+1)^(0+256)
  6846  0199' 0800'              	movf	?___fldiv^(0+256),w
  6847  019A' 0080'              	movwf	___fladd@b^(0+256)
  6848  019B' 0023               	movlb	3	; select bank3
  6849  019C' 0800'              	movf	(_qavg+3)^(0+384),w
  6850  019D' 0022               	movlb	2	; select bank2
  6851  019E' 0080'              	movwf	(___fladd@a+3)^(0+256)
  6852  019F' 0023               	movlb	3	; select bank3
  6853  01A0' 0800'              	movf	(_qavg+2)^(0+384),w
  6854  01A1' 0022               	movlb	2	; select bank2
  6855  01A2' 0080'              	movwf	(___fladd@a+2)^(0+256)
  6856  01A3' 0023               	movlb	3	; select bank3
  6857  01A4' 0800'              	movf	(_qavg+1)^(0+384),w
  6858  01A5' 0022               	movlb	2	; select bank2
  6859  01A6' 0080'              	movwf	(___fladd@a+1)^(0+256)
  6860  01A7' 0023               	movlb	3	; select bank3
  6861  01A8' 0800'              	movf	_qavg^(0+384),w
  6862  01A9' 0022               	movlb	2	; select bank2
  6863  01AA' 0080'              	movwf	___fladd@a^(0+256)
  6864  01AB' 3180' 2000' 3180'  	fcall	___fladd
  6865  01AE' 0022               	movlb	2	; select bank2
  6866  01AF' 0800'              	movf	(?___fladd+3)^(0+256),w
  6867  01B0' 0023               	movlb	3	; select bank3
  6868  01B1' 0080'              	movwf	(_qavg+3)^(0+384)
  6869  01B2' 0022               	movlb	2	; select bank2
  6870  01B3' 0800'              	movf	(?___fladd+2)^(0+256),w
  6871  01B4' 0023               	movlb	3	; select bank3
  6872  01B5' 0080'              	movwf	(_qavg+2)^(0+384)
  6873  01B6' 0022               	movlb	2	; select bank2
  6874  01B7' 0800'              	movf	(?___fladd+1)^(0+256),w
  6875  01B8' 0023               	movlb	3	; select bank3
  6876  01B9' 0080'              	movwf	(_qavg+1)^(0+384)
  6877  01BA' 0022               	movlb	2	; select bank2
  6878  01BB' 0800'              	movf	?___fladd^(0+256),w
  6879  01BC' 0023               	movlb	3	; select bank3
  6880  01BD' 0080'              	movwf	_qavg^(0+384)
  6881                           
  6882                           ;charger_discharger.c: 324:     log_data.capacity = (uint16_t) (qavg);
  6883  01BE' 0800'              	movf	(_qavg+3)^(0+384),w
  6884  01BF' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  6885  01C0' 0800'              	movf	(_qavg+2)^(0+384),w
  6886  01C1' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  6887  01C2' 0800'              	movf	(_qavg+1)^(0+384),w
  6888  01C3' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  6889  01C4' 0800'              	movf	_qavg^(0+384),w
  6890  01C5' 0080'              	movwf	___fltol@f1^(0+384)
  6891  01C6' 3180' 2000' 3180'  	fcall	___fltol
  6892  01C9' 0023               	movlb	3	; select bank3
  6893  01CA' 0800'              	movf	(?___fltol+1)^(0+384),w
  6894  01CB' 0025               	movlb	5	; select bank5
  6895  01CC' 0089'              	movwf	((_log_data+1)^(0+640)+9)
  6896  01CD' 0023               	movlb	3	; select bank3
  6897  01CE' 0800'              	movf	?___fltol^(0+384),w
  6898  01CF' 0025               	movlb	5	; select bank5
  6899  01D0' 0089'              	movwf	(_log_data^(0+640)+9)
  6900                           
  6901                           ;charger_discharger.c: 325:     if (basic_configuration.version == 2)
  6902  01D1' 3002               	movlw	2
  6903  01D2' 0024               	movlb	4	; select bank4
  6904  01D3' 0600'              	xorwf	_basic_configuration^(0+512),w
  6905  01D4' 1D03               	btfss	3,2
  6906  01D5' 0008               	return
  6907                           
  6908                           ;charger_discharger.c: 326:     {;charger_discharger.c: 327:         if (vavg > vmax)
  6909  01D6' 0023               	movlb	3	; select bank3
  6910  01D7' 0800'              	movf	(_vavg+1)^(0+384),w
  6911  01D8' 0200'              	subwf	(_vmax+1)^(0+384),w
  6912  01D9' 1D03               	skipz
  6913  01DA' 2800'              	goto	u7055
  6914  01DB' 0800'              	movf	_vavg^(0+384),w
  6915  01DC' 0200'              	subwf	_vmax^(0+384),w
  6916  01DD'                    u7055:
  6917  01DD' 1803               	skipnc
  6918  01DE' 0008               	return
  6919                           
  6920                           ;charger_discharger.c: 328:         {;charger_discharger.c: 329:             (vmax = vav
      +                          g);
  6921  01DF' 0800'              	movf	(_vavg+1)^(0+384),w
  6922  01E0' 0080'              	movwf	(_vmax+1)^(0+384)
  6923  01E1' 0800'              	movf	_vavg^(0+384),w
  6924  01E2' 0080'              	movwf	_vmax^(0+384)
  6925  01E3' 0008               	return
  6926  01E4'                    __end_of_scaling:
  6927                           
  6928                           	psect	text15
  6929  0000'                    __ptext15:	
  6930 ;; *************** function _log_control *****************
  6931 ;; Defined at:
  6932 ;;		line 335 in file "charger_discharger.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;		None
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;		None
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  1    wreg      void 
  6939 ;; Registers used:
  6940 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6950 ;;Total ram usage:        0 bytes
  6951 ;; Hardware stack levels used: 1
  6952 ;; Hardware stack levels required when called: 7
  6953 ;; This function calls:
  6954 ;;		_UART_send_byte
  6955 ;;		_UART_send_some_bytes
  6956 ;;		___fltol
  6957 ;; This function is called by:
  6958 ;;		_main
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           
  6962  0000'                    _log_control:	
  6963                           ;psect for function _log_control
  6964                           
  6965                           
  6966                           ;charger_discharger.c: 337:     if(start)
  6967                           
  6968                           ;incstack = 0
  6969                           ; Regs used in _log_control: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6970  0000' 0021               	movlb	1	; select bank1
  6971  0001' 0800'              	movf	_start^(0+128),w
  6972  0002' 1903               	btfsc	3,2
  6973  0003' 2800'              	goto	l7467
  6974                           
  6975                           ;charger_discharger.c: 338:     {;charger_discharger.c: 339:         log_data_ptr = &log
      +                          _data;
  6976  0004' 3000'              	movlw	(low (_log_data| (0+512)))& (0+255)
  6977  0005' 0023               	movlb	3	; select bank3
  6978  0006' 0080'              	movwf	_log_data_ptr^(0+384)
  6979                           
  6980                           ;charger_discharger.c: 340:         log_data.cell_counter = cell_count;
  6981  0007' 0800'              	movf	_cell_count^(0+384),w
  6982  0008' 0025               	movlb	5	; select bank5
  6983  0009' 0080'              	movwf	_log_data^(0+640)
  6984                           
  6985                           ;charger_discharger.c: 341:         log_data.state = state;
  6986  000A' 0023               	movlb	3	; select bank3
  6987  000B' 0800'              	movf	_state^(0+384),w
  6988  000C' 0025               	movlb	5	; select bank5
  6989  000D' 0082'              	movwf	(_log_data^(0+640)+2)
  6990                           
  6991                           ;charger_discharger.c: 342:         log_data.repetition_counter = repetition_counter;
  6992  000E' 0023               	movlb	3	; select bank3
  6993  000F' 0800'              	movf	_repetition_counter^(0+384),w
  6994  0010' 0025               	movlb	5	; select bank5
  6995  0011' 0081'              	movwf	(_log_data^(0+640)+1)
  6996                           
  6997                           ;charger_discharger.c: 343:         log_data.elapsed_time = second;
  6998  0012' 0023               	movlb	3	; select bank3
  6999  0013' 0800'              	movf	(_second+1)^(0+384),w
  7000  0014' 0025               	movlb	5	; select bank5
  7001  0015' 0083'              	movwf	((_log_data+1)^(0+640)+3)
  7002  0016' 0023               	movlb	3	; select bank3
  7003  0017' 0800'              	movf	_second^(0+384),w
  7004  0018' 0025               	movlb	5	; select bank5
  7005  0019' 0083'              	movwf	(_log_data^(0+640)+3)
  7006                           
  7007                           ;charger_discharger.c: 344:         log_data.duty_cycle = (uint16_t) pidt;
  7008  001A' 0023               	movlb	3	; select bank3
  7009  001B' 0800'              	movf	(_pidt+3)^(0+384),w
  7010  001C' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  7011  001D' 0800'              	movf	(_pidt+2)^(0+384),w
  7012  001E' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  7013  001F' 0800'              	movf	(_pidt+1)^(0+384),w
  7014  0020' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  7015  0021' 0800'              	movf	_pidt^(0+384),w
  7016  0022' 0080'              	movwf	___fltol@f1^(0+384)
  7017  0023' 3180' 2000' 3180'  	fcall	___fltol
  7018  0026' 0023               	movlb	3	; select bank3
  7019  0027' 0800'              	movf	(?___fltol+1)^(0+384),w
  7020  0028' 0025               	movlb	5	; select bank5
  7021  0029' 008D'              	movwf	((_log_data+1)^(0+640)+13)
  7022  002A' 0023               	movlb	3	; select bank3
  7023  002B' 0800'              	movf	?___fltol^(0+384),w
  7024  002C' 0025               	movlb	5	; select bank5
  7025  002D' 008D'              	movwf	(_log_data^(0+640)+13)
  7026                           
  7027                           ;charger_discharger.c: 345:         UART_send_byte(0xDD);
  7028  002E' 30DD               	movlw	221
  7029  002F' 3180' 2000' 3180'  	fcall	_UART_send_byte
  7030                           
  7031                           ;charger_discharger.c: 346:         UART_send_some_bytes(sizeof(log_data),(uint8_t*)log_
      +                          data_ptr);
  7032  0032' 0023               	movlb	3	; select bank3
  7033  0033' 0800'              	movf	_log_data_ptr^(0+384),w
  7034  0034' 0022               	movlb	2	; select bank2
  7035  0035' 0080'              	movwf	UART_send_some_bytes@data^(0+256)
  7036  0036' 39FF               	andlw	255
  7037  0037' 1D03               	skipz
  7038  0038' 3002               	movlw	2
  7039  0039' 0080'              	movwf	(UART_send_some_bytes@data+1)^(0+256)
  7040  003A' 300F               	movlw	15
  7041  003B' 3180' 2000' 3180'  	fcall	_UART_send_some_bytes
  7042                           
  7043                           ;charger_discharger.c: 347:         UART_send_byte(0x77);
  7044  003E' 3077               	movlw	119
  7045  003F' 3180' 2000'        	fcall	_UART_send_byte
  7046                           
  7047                           ;charger_discharger.c: 348:     }else second = 0;
  7048  0041' 0008               	return
  7049  0042'                    l7467:
  7050  0042' 0023               	movlb	3	; select bank3
  7051  0043' 0180'              	clrf	_second^(0+384)
  7052  0044' 0180'              	clrf	(_second+1)^(0+384)
  7053  0045' 0008               	return
  7054  0046'                    __end_of_log_control:
  7055                           
  7056                           	psect	text16
  7057  0000'                    __ptext16:	
  7058 ;; *************** function _UART_send_some_bytes *****************
  7059 ;; Defined at:
  7060 ;;		line 469 in file "charger_discharger.c"
  7061 ;; Parameters:    Size  Location     Type
  7062 ;;  length          1    wreg     unsigned char 
  7063 ;;  data            2    1[BANK2 ] PTR unsigned char 
  7064 ;;		 -> NULL(0), log_data(15), converter_configuration(14), test_configuration(17), 
  7065 ;;		 -> basic_configuration(17), command_interpreter@calc_checksum(2), 
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;  length          1    3[BANK2 ] unsigned char 
  7068 ;; Return value:  Size  Location     Type
  7069 ;;                  1    wreg      void 
  7070 ;; Registers used:
  7071 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7072 ;; Tracked objects:
  7073 ;;		On entry : 0/0
  7074 ;;		On exit  : 0/0
  7075 ;;		Unchanged: 0/0
  7076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7077 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  7078 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7080 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  7081 ;;Total ram usage:        3 bytes
  7082 ;; Hardware stack levels used: 1
  7083 ;; Hardware stack levels required when called: 6
  7084 ;; This function calls:
  7085 ;;		_UART_send_byte
  7086 ;; This function is called by:
  7087 ;;		_log_control
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091  0000'                    _UART_send_some_bytes:	
  7092                           ;psect for function _UART_send_some_bytes
  7093                           
  7094                           
  7095                           ;incstack = 0
  7096                           ; Regs used in _UART_send_some_bytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7097                           ;UART_send_some_bytes@length stored from wreg
  7098  0000' 0022               	movlb	2	; select bank2
  7099  0001' 0080'              	movwf	UART_send_some_bytes@length^(0+256)
  7100  0002'                    l7263:	
  7101                           ;charger_discharger.c: 469: void UART_send_some_bytes(uint8_t length, uint8_t* data);cha
      +                          rger_discharger.c: 470: {;charger_discharger.c: 471:     while(length--)
  7102                           
  7103                           
  7104                           ;charger_discharger.c: 471:     while(length--)
  7105  0002' 3001               	movlw	1
  7106  0003' 0280'              	subwf	UART_send_some_bytes@length^(0+256),f
  7107  0004' 0A00'              	incf	UART_send_some_bytes@length^(0+256),w
  7108  0005' 1903               	btfsc	3,2
  7109  0006' 0008               	return
  7110                           
  7111                           ;charger_discharger.c: 472:     {;charger_discharger.c: 473:         UART_send_byte(*dat
      +                          a++);
  7112  0007' 0800'              	movf	UART_send_some_bytes@data^(0+256),w
  7113  0008' 0086               	movwf	6
  7114  0009' 0800'              	movf	(UART_send_some_bytes@data+1)^(0+256),w
  7115  000A' 0087               	movwf	7
  7116  000B' 0801               	movf	1,w
  7117  000C' 3180' 2000' 3180'  	fcall	_UART_send_byte
  7118  000F' 3001               	movlw	1
  7119  0010' 0022               	movlb	2	; select bank2
  7120  0011' 0780'              	addwf	UART_send_some_bytes@data^(0+256),f
  7121  0012' 3000               	movlw	0
  7122  0013' 3D80'              	addwfc	(UART_send_some_bytes@data+1)^(0+256),f
  7123  0014' 2800'              	goto	l7263
  7124  0015'                    __end_of_UART_send_some_bytes:
  7125                           
  7126                           	psect	text17
  7127  0000'                    __ptext17:	
  7128 ;; *************** function _UART_send_byte *****************
  7129 ;; Defined at:
  7130 ;;		line 461 in file "charger_discharger.c"
  7131 ;; Parameters:    Size  Location     Type
  7132 ;;  byte            1    wreg     unsigned char 
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;  byte            1    0[BANK2 ] unsigned char 
  7135 ;; Return value:  Size  Location     Type
  7136 ;;                  1    wreg      void 
  7137 ;; Registers used:
  7138 ;;		wreg
  7139 ;; Tracked objects:
  7140 ;;		On entry : 0/0
  7141 ;;		On exit  : 0/0
  7142 ;;		Unchanged: 0/0
  7143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7145 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7147 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7148 ;;Total ram usage:        1 bytes
  7149 ;; Hardware stack levels used: 1
  7150 ;; Hardware stack levels required when called: 5
  7151 ;; This function calls:
  7152 ;;		Nothing
  7153 ;; This function is called by:
  7154 ;;		_log_control
  7155 ;;		_UART_send_some_bytes
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159  0000'                    _UART_send_byte:	
  7160                           ;psect for function _UART_send_byte
  7161                           
  7162                           
  7163                           ;incstack = 0
  7164                           ; Regs used in _UART_send_byte: [wreg]
  7165                           ;UART_send_byte@byte stored from wreg
  7166  0000' 0022               	movlb	2	; select bank2
  7167  0001' 0080'              	movwf	UART_send_byte@byte^(0+256)
  7168  0002'                    l447:	
  7169                           ;charger_discharger.c: 464:     {;charger_discharger.c: 465:     }
  7170                           
  7171                           
  7172                           ;charger_discharger.c: 463:     while(0 == TXIF)
  7173  0002' 0020               	movlb	0	; select bank0
  7174  0003' 1E11               	btfss	17,4	;volatile
  7175  0004' 2800'              	goto	l447
  7176                           
  7177                           ;charger_discharger.c: 466:     TX1REG = byte;
  7178  0005' 0022               	movlb	2	; select bank2
  7179  0006' 0800'              	movf	UART_send_byte@byte^(0+256),w
  7180  0007' 0023               	movlb	3	; select bank3
  7181  0008' 009A               	movwf	26	;volatile
  7182  0009' 0008               	return
  7183  000A'                    __end_of_UART_send_byte:
  7184                           
  7185                           	psect	text18
  7186  0000'                    __ptext18:	
  7187 ;; *************** function _interrupt_enable *****************
  7188 ;; Defined at:
  7189 ;;		line 400 in file "charger_discharger.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;		None
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;  clear_buffer    1    0        unsigned char 
  7194 ;; Return value:  Size  Location     Type
  7195 ;;                  1    wreg      void 
  7196 ;; Registers used:
  7197 ;;		wreg, status,2
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7207 ;;Total ram usage:        0 bytes
  7208 ;; Hardware stack levels used: 1
  7209 ;; Hardware stack levels required when called: 5
  7210 ;; This function calls:
  7211 ;;		Nothing
  7212 ;; This function is called by:
  7213 ;;		_main
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217  0000'                    _interrupt_enable:	
  7218                           ;psect for function _interrupt_enable
  7219                           
  7220  0000'                    l6909:	
  7221                           ;charger_discharger.c: 403:     while(RCIF){
  7222                           
  7223                           ;incstack = 0
  7224                           ; Regs used in _interrupt_enable: [wreg+status,2]
  7225                           
  7226                           
  7227                           ;charger_discharger.c: 403:     while(RCIF){
  7228  0000' 0020               	movlb	0	; select bank0
  7229  0001' 1E91               	btfss	17,5	;volatile
  7230  0002' 2800'              	goto	l420
  7231  0003' 0023               	movlb	3	; select bank3
  7232  0004' 0819               	movf	25,w	;volatile
  7233  0005' 2800'              	goto	l6909
  7234  0006'                    l420:
  7235                           
  7236                           ;charger_discharger.c: 406:     RCIE = 1;
  7237  0006' 0021               	movlb	1	; select bank1
  7238  0007' 1691               	bsf	17,5	;volatile
  7239                           
  7240                           ;charger_discharger.c: 407:     TXIE = 0;
  7241  0008' 1211               	bcf	17,4	;volatile
  7242                           
  7243                           ;charger_discharger.c: 408:     TMR1IE = 1;
  7244  0009' 1411               	bsf	17,0	;volatile
  7245                           
  7246                           ;charger_discharger.c: 409:     PEIE = 1;
  7247  000A' 170B               	bsf	11,6	;volatile
  7248                           
  7249                           ;charger_discharger.c: 410:     GIE = 1;
  7250  000B' 178B               	bsf	11,7	;volatile
  7251                           
  7252                           ;charger_discharger.c: 411:     count = 1024;
  7253  000C' 3000               	movlw	0
  7254  000D' 0080'              	movwf	_count^(0+128)
  7255  000E' 3004               	movlw	4
  7256  000F' 0081'              	movwf	(_count^(0+128)+1)
  7257                           
  7258                           ;charger_discharger.c: 412:     TMR1IF = 0;
  7259  0010' 0020               	movlb	0	; select bank0
  7260  0011' 1011               	bcf	17,0	;volatile
  7261                           
  7262                           ;charger_discharger.c: 413:     TMR1ON = 1;
  7263  0012' 1418               	bsf	24,0	;volatile
  7264  0013' 0008               	return
  7265  0014'                    __end_of_interrupt_enable:
  7266                           
  7267                           	psect	text19
  7268  0000'                    __ptext19:	
  7269 ;; *************** function _initialize *****************
  7270 ;; Defined at:
  7271 ;;		line 18 in file "charger_discharger.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;		None
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;		None
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  1    wreg      void 
  7278 ;; Registers used:
  7279 ;;		wreg, status,2, status,0, pclath, cstack
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7287 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  7288 ;;      Totals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  7289 ;;Total ram usage:        4 bytes
  7290 ;; Hardware stack levels used: 1
  7291 ;; Hardware stack levels required when called: 7
  7292 ;; This function calls:
  7293 ;;		_Cell_OFF
  7294 ;;		___xxtofl
  7295 ;;		_set_DC
  7296 ;; This function is called by:
  7297 ;;		_main
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301  0000'                    _initialize:	
  7302                           ;psect for function _initialize
  7303                           
  7304                           
  7305                           ;incstack = 0
  7306                           ; Regs used in _initialize: [wreg+status,2+status,0+pclath+cstack]
  7307  0000' 0064               	clrwdt	;# 
  7308                           
  7309                           ;charger_discharger.c: 22:     nWPUEN = 0;
  7310  0001' 0021               	movlb	1	; select bank1
  7311  0002' 1395               	bcf	21,7	;volatile
  7312                           
  7313                           ;charger_discharger.c: 23:     WPUE3 = 1;
  7314  0003' 0024               	movlb	4	; select bank4
  7315  0004' 1590               	bsf	16,3	;volatile
  7316                           
  7317                           ;charger_discharger.c: 25:     OSCCONbits.IRCF = 0b1111;
  7318  0005' 3078               	movlw	120
  7319  0006' 0021               	movlb	1	; select bank1
  7320  0007' 0499               	iorwf	25,f	;volatile
  7321                           
  7322                           ;charger_discharger.c: 26:     OSCCONbits.SCS = 0b00;
  7323  0008' 30FC               	movlw	-4
  7324  0009' 0599               	andwf	25,f	;volatile
  7325                           
  7326                           ;charger_discharger.c: 27:     OSCCONbits.SPLLEN = 1;
  7327  000A' 1799               	bsf	25,7	;volatile
  7328                           
  7329                           ;charger_discharger.c: 31:     TRISC3 = 0;
  7330  000B' 118E               	bcf	14,3	;volatile
  7331                           
  7332                           ;charger_discharger.c: 32:     WPUC3 = 0;
  7333  000C' 0024               	movlb	4	; select bank4
  7334  000D' 118E               	bcf	14,3	;volatile
  7335                           
  7336                           ;charger_discharger.c: 33:     TRISC4 = 0;
  7337  000E' 0021               	movlb	1	; select bank1
  7338  000F' 120E               	bcf	14,4	;volatile
  7339                           
  7340                           ;charger_discharger.c: 34:     WPUC4 = 0;
  7341  0010' 0024               	movlb	4	; select bank4
  7342  0011' 120E               	bcf	14,4	;volatile
  7343                           
  7344                           ;charger_discharger.c: 35:     TRISC5 = 0;
  7345  0012' 0021               	movlb	1	; select bank1
  7346  0013' 128E               	bcf	14,5	;volatile
  7347                           
  7348                           ;charger_discharger.c: 36:     WPUC5 = 0;
  7349  0014' 0024               	movlb	4	; select bank4
  7350  0015' 128E               	bcf	14,5	;volatile
  7351                           
  7352                           ;charger_discharger.c: 38:     TRISB2 = 0;
  7353  0016' 0021               	movlb	1	; select bank1
  7354  0017' 110D               	bcf	13,2	;volatile
  7355                           
  7356                           ;charger_discharger.c: 39:     ANSB2 = 0;
  7357  0018' 0023               	movlb	3	; select bank3
  7358  0019' 110D               	bcf	13,2	;volatile
  7359                           
  7360                           ;charger_discharger.c: 40:     WPUB2 = 0;
  7361  001A' 0024               	movlb	4	; select bank4
  7362  001B' 110D               	bcf	13,2	;volatile
  7363                           
  7364                           ;charger_discharger.c: 41:     TRISB3 = 0;
  7365  001C' 0021               	movlb	1	; select bank1
  7366  001D' 118D               	bcf	13,3	;volatile
  7367                           
  7368                           ;charger_discharger.c: 42:     ANSB3 = 0;
  7369  001E' 0023               	movlb	3	; select bank3
  7370  001F' 118D               	bcf	13,3	;volatile
  7371                           
  7372                           ;charger_discharger.c: 43:     WPUB3 = 0;
  7373  0020' 0024               	movlb	4	; select bank4
  7374  0021' 118D               	bcf	13,3	;volatile
  7375                           
  7376                           ;charger_discharger.c: 44:     TRISB4 = 0;
  7377  0022' 0021               	movlb	1	; select bank1
  7378  0023' 120D               	bcf	13,4	;volatile
  7379                           
  7380                           ;charger_discharger.c: 45:     ANSB4 = 0;
  7381  0024' 0023               	movlb	3	; select bank3
  7382  0025' 120D               	bcf	13,4	;volatile
  7383                           
  7384                           ;charger_discharger.c: 46:     WPUB4 = 0;
  7385  0026' 0024               	movlb	4	; select bank4
  7386  0027' 120D               	bcf	13,4	;volatile
  7387                           
  7388                           ;charger_discharger.c: 47:     TRISB5 = 0;
  7389  0028' 0021               	movlb	1	; select bank1
  7390  0029' 128D               	bcf	13,5	;volatile
  7391                           
  7392                           ;charger_discharger.c: 48:     ANSB5 = 0;
  7393  002A' 0023               	movlb	3	; select bank3
  7394  002B' 128D               	bcf	13,5	;volatile
  7395                           
  7396                           ;charger_discharger.c: 49:     WPUB5 = 0;
  7397  002C' 0024               	movlb	4	; select bank4
  7398  002D' 128D               	bcf	13,5	;volatile
  7399                           
  7400                           ;charger_discharger.c: 50:     Cell_OFF();
  7401  002E' 3180' 2000' 3180'  	fcall	_Cell_OFF
  7402                           
  7403                           ;charger_discharger.c: 52:     nT1SYNC = 0;
  7404  0031' 0020               	movlb	0	; select bank0
  7405  0032' 1118               	bcf	24,2	;volatile
  7406                           
  7407                           ;charger_discharger.c: 53:     T1OSCEN = 0;
  7408  0033' 1198               	bcf	24,3	;volatile
  7409                           
  7410                           ;charger_discharger.c: 54:     TMR1ON = 0;
  7411  0034' 1018               	bcf	24,0	;volatile
  7412                           
  7413                           ;charger_discharger.c: 55:     TMR1GE = 0;
  7414  0035' 1399               	bcf	25,7	;volatile
  7415                           
  7416                           ;charger_discharger.c: 56:     TMR1CS0 = 0;
  7417  0036' 1318               	bcf	24,6	;volatile
  7418                           
  7419                           ;charger_discharger.c: 57:     TMR1CS1 = 0;
  7420  0037' 1398               	bcf	24,7	;volatile
  7421                           
  7422                           ;charger_discharger.c: 58:     T1CKPS0 = 0;
  7423  0038' 1218               	bcf	24,4	;volatile
  7424                           
  7425                           ;charger_discharger.c: 59:     T1CKPS1 = 0;
  7426  0039' 1298               	bcf	24,5	;volatile
  7427                           
  7428                           ;charger_discharger.c: 60:     TMR1H = 0xE1;
  7429  003A' 30E1               	movlw	225
  7430  003B' 0097               	movwf	23	;volatile
  7431                           
  7432                           ;charger_discharger.c: 61:     TMR1L = 0x83;
  7433  003C' 3083               	movlw	131
  7434  003D' 0096               	movwf	22	;volatile
  7435                           
  7436                           ;charger_discharger.c: 63:     PSMC1CON = 0x00;
  7437  003E' 0030               	movlb	16	; select bank16
  7438  003F' 0191               	clrf	17	;volatile
  7439                           
  7440                           ;charger_discharger.c: 64:     PSMC1MDL = 0x00;
  7441  0040' 0192               	clrf	18	;volatile
  7442                           
  7443                           ;charger_discharger.c: 65:     PSMC1CLK = 0x01;
  7444  0041' 3001               	movlw	1
  7445  0042' 0094               	movwf	20	;volatile
  7446                           
  7447                           ;charger_discharger.c: 66:     PSMC1PRH = 0x01;
  7448  0043' 3001               	movlw	1
  7449  0044' 00A6               	movwf	38	;volatile
  7450                           
  7451                           ;charger_discharger.c: 67:     PSMC1PRL = 0xFF;
  7452  0045' 30FF               	movlw	255
  7453  0046' 00A5               	movwf	37	;volatile
  7454                           
  7455                           ;charger_discharger.c: 70:     PSMC1DCH = 0x00;
  7456  0047' 01A4               	clrf	36	;volatile
  7457                           
  7458                           ;charger_discharger.c: 71:     PSMC1DCL = 0x32;
  7459  0048' 3032               	movlw	50
  7460  0049' 00A3               	movwf	35	;volatile
  7461                           
  7462                           ;charger_discharger.c: 72:     PSMC1PHH = 0x00;
  7463  004A' 01A2               	clrf	34	;volatile
  7464                           
  7465                           ;charger_discharger.c: 73:     PSMC1PHL = 0x00;
  7466  004B' 01A1               	clrf	33	;volatile
  7467                           
  7468                           ;charger_discharger.c: 74:     P1STRC = 1;
  7469  004C' 152E               	bsf	46,2	;volatile
  7470                           
  7471                           ;charger_discharger.c: 75:     P1POLC = 0;
  7472  004D' 1116               	bcf	22,2	;volatile
  7473                           
  7474                           ;charger_discharger.c: 76:     P1OEC = 1;
  7475  004E' 1515               	bsf	21,2	;volatile
  7476                           
  7477                           ;charger_discharger.c: 77:     P1PRST = 1;
  7478  004F' 141C               	bsf	28,0	;volatile
  7479                           
  7480                           ;charger_discharger.c: 78:     P1PHST = 1;
  7481  0050' 141A               	bsf	26,0	;volatile
  7482                           
  7483                           ;charger_discharger.c: 79:     P1DCST = 1;
  7484  0051' 141B               	bsf	27,0	;volatile
  7485                           
  7486                           ;charger_discharger.c: 80:     PSMC1CON = 0x80;
  7487  0052' 3080               	movlw	128
  7488  0053' 0091               	movwf	17	;volatile
  7489                           
  7490                           ;charger_discharger.c: 84:     TRISC2 = 0;
  7491  0054' 0021               	movlb	1	; select bank1
  7492  0055' 110E               	bcf	14,2	;volatile
  7493                           
  7494                           ;charger_discharger.c: 85:     WPUC2 = 0;
  7495  0056' 0024               	movlb	4	; select bank4
  7496  0057' 110E               	bcf	14,2	;volatile
  7497                           
  7498                           ;charger_discharger.c: 87:     TRISA3 = 1;
  7499  0058' 0021               	movlb	1	; select bank1
  7500  0059' 158C               	bsf	12,3	;volatile
  7501                           
  7502                           ;charger_discharger.c: 88:     ANSA3 = 1;
  7503  005A' 0023               	movlb	3	; select bank3
  7504  005B' 158C               	bsf	12,3	;volatile
  7505                           
  7506                           ;charger_discharger.c: 89:     WPUA3 = 0;
  7507  005C' 0024               	movlb	4	; select bank4
  7508  005D' 118C               	bcf	12,3	;volatile
  7509                           
  7510                           ;charger_discharger.c: 90:     TRISB1 = 1;
  7511  005E' 0021               	movlb	1	; select bank1
  7512  005F' 148D               	bsf	13,1	;volatile
  7513                           
  7514                           ;charger_discharger.c: 91:     ANSB1 = 1;
  7515  0060' 0023               	movlb	3	; select bank3
  7516  0061' 148D               	bsf	13,1	;volatile
  7517                           
  7518                           ;charger_discharger.c: 92:     WPUB1 = 0;
  7519  0062' 0024               	movlb	4	; select bank4
  7520  0063' 108D               	bcf	13,1	;volatile
  7521                           
  7522                           ;charger_discharger.c: 93:     TRISB0 = 1;
  7523  0064' 0021               	movlb	1	; select bank1
  7524  0065' 140D               	bsf	13,0	;volatile
  7525                           
  7526                           ;charger_discharger.c: 94:     ANSB0 = 1;
  7527  0066' 0023               	movlb	3	; select bank3
  7528  0067' 140D               	bsf	13,0	;volatile
  7529                           
  7530                           ;charger_discharger.c: 95:     WPUB0 = 0;
  7531  0068' 0024               	movlb	4	; select bank4
  7532  0069' 100D               	bcf	13,0	;volatile
  7533                           
  7534                           ;charger_discharger.c: 96:     TRISA5 = 1;
  7535  006A' 0021               	movlb	1	; select bank1
  7536  006B' 168C               	bsf	12,5	;volatile
  7537                           
  7538                           ;charger_discharger.c: 97:     ANSA5 = 1;
  7539  006C' 0023               	movlb	3	; select bank3
  7540  006D' 168C               	bsf	12,5	;volatile
  7541                           
  7542                           ;charger_discharger.c: 98:     WPUA5 = 0;
  7543  006E' 0024               	movlb	4	; select bank4
  7544  006F' 128C               	bcf	12,5	;volatile
  7545                           
  7546                           ;charger_discharger.c: 99:     ADCON0bits.ADRMD = 0;
  7547  0070' 0021               	movlb	1	; select bank1
  7548  0071' 139D               	bcf	29,7	;volatile
  7549                           
  7550                           ;charger_discharger.c: 100:     ADCON1bits.ADCS = 0b010;
  7551  0072' 081E               	movf	30,w	;volatile
  7552  0073' 398F               	andlw	-113
  7553  0074' 3820               	iorlw	32
  7554  0075' 009E               	movwf	30	;volatile
  7555                           
  7556                           ;charger_discharger.c: 101:     ADCON1bits.ADNREF = 0;
  7557  0076' 111E               	bcf	30,2	;volatile
  7558                           
  7559                           ;charger_discharger.c: 102:     ADCON1bits.ADPREF = 0b01;
  7560  0077' 081E               	movf	30,w	;volatile
  7561  0078' 39FC               	andlw	-4
  7562  0079' 3801               	iorlw	1
  7563  007A' 009E               	movwf	30	;volatile
  7564                           
  7565                           ;charger_discharger.c: 103:     ADCON1bits.ADFM = 1;
  7566  007B' 179E               	bsf	30,7	;volatile
  7567                           
  7568                           ;charger_discharger.c: 104:     ADCON2bits.CHSN = 0b1111;
  7569  007C' 300F               	movlw	15
  7570  007D' 049F               	iorwf	31,f	;volatile
  7571                           
  7572                           ;charger_discharger.c: 105:     ADCON0bits.ADON = 1;
  7573  007E' 141D               	bsf	29,0	;volatile
  7574                           
  7575                           ;charger_discharger.c: 107:     TXSEL = 0;
  7576  007F' 0022               	movlb	2	; select bank2
  7577  0080' 111D               	bcf	29,2	;volatile
  7578                           
  7579                           ;charger_discharger.c: 108:     RXSEL = 0;
  7580  0081' 109D               	bcf	29,1	;volatile
  7581                           
  7582                           ;charger_discharger.c: 109:     SP1BRGH = 0x00;
  7583  0082' 0023               	movlb	3	; select bank3
  7584  0083' 019C               	clrf	28	;volatile
  7585                           
  7586                           ;charger_discharger.c: 110:     SP1BRGL = 0x8A;
  7587  0084' 308A               	movlw	138
  7588  0085' 009B               	movwf	27	;volatile
  7589                           
  7590                           ;charger_discharger.c: 111:     BRGH = 1;
  7591  0086' 151E               	bsf	30,2	;volatile
  7592                           
  7593                           ;charger_discharger.c: 112:     BRG16 = 1;
  7594  0087' 159F               	bsf	31,3	;volatile
  7595                           
  7596                           ;charger_discharger.c: 113:     SYNC = 0;
  7597  0088' 121E               	bcf	30,4	;volatile
  7598                           
  7599                           ;charger_discharger.c: 114:     SPEN = 1;
  7600  0089' 179D               	bsf	29,7	;volatile
  7601                           
  7602                           ;charger_discharger.c: 115:     TXEN = 1;
  7603  008A' 169E               	bsf	30,5	;volatile
  7604                           
  7605                           ;charger_discharger.c: 116:     CREN = 1;
  7606  008B' 161D               	bsf	29,4	;volatile
  7607                           
  7608                           ;charger_discharger.c: 117:     TX9 = 0;
  7609  008C' 131E               	bcf	30,6	;volatile
  7610                           
  7611                           ;charger_discharger.c: 118:     RX9 = 0;
  7612  008D' 131D               	bcf	29,6	;volatile
  7613                           
  7614                           ;charger_discharger.c: 119:     RCIE = 0;
  7615  008E' 0021               	movlb	1	; select bank1
  7616  008F' 1291               	bcf	17,5	;volatile
  7617                           
  7618                           ;charger_discharger.c: 120:     TXIE = 0;
  7619  0090' 1211               	bcf	17,4	;volatile
  7620                           
  7621                           ;charger_discharger.c: 122:     { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(320000
      +                          00/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _delay
      +                          ((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(32000
      +                          000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pidi = 
      +                          0.0;};
  7622  0091' 0020               	movlb	0	; select bank0
  7623  0092' 118E               	bcf	14,3	;volatile
  7624  0093' 120E               	bcf	14,4	;volatile
  7625  0094' 3005               	movlw	5
  7626  0095' 0023               	movlb	3	; select bank3
  7627  0096' 0081'              	movwf	(??_initialize^(0+384)+1)
  7628  0097' 300F               	movlw	15
  7629  0098' 0080'              	movwf	??_initialize^(0+384)
  7630  0099' 30F1               	movlw	241
  7631  009A'                    u7817:
  7632  009A' 0B89               	decfsz	9,f
  7633  009B' 2800'              	goto	u7817
  7634  009C' 0B80'              	decfsz	??_initialize^(0+384),f
  7635  009D' 2800'              	goto	u7817
  7636  009E' 0B81'              	decfsz	(??_initialize^(0+384)+1),f
  7637  009F' 2800'              	goto	u7817
  7638  00A0' 0020               	movlb	0	; select bank0
  7639  00A1' 158E               	bsf	14,3	;volatile
  7640  00A2' 3005               	movlw	5
  7641  00A3' 0023               	movlb	3	; select bank3
  7642  00A4' 0081'              	movwf	(??_initialize^(0+384)+1)
  7643  00A5' 300F               	movlw	15
  7644  00A6' 0080'              	movwf	??_initialize^(0+384)
  7645  00A7' 30F1               	movlw	241
  7646  00A8'                    u7827:
  7647  00A8' 0B89               	decfsz	9,f
  7648  00A9' 2800'              	goto	u7827
  7649  00AA' 0B80'              	decfsz	??_initialize^(0+384),f
  7650  00AB' 2800'              	goto	u7827
  7651  00AC' 0B81'              	decfsz	(??_initialize^(0+384)+1),f
  7652  00AD' 2800'              	goto	u7827
  7653  00AE' 0020               	movlb	0	; select bank0
  7654  00AF' 118E               	bcf	14,3	;volatile
  7655  00B0' 3005               	movlw	5
  7656  00B1' 0023               	movlb	3	; select bank3
  7657  00B2' 0081'              	movwf	(??_initialize^(0+384)+1)
  7658  00B3' 300F               	movlw	15
  7659  00B4' 0080'              	movwf	??_initialize^(0+384)
  7660  00B5' 30F1               	movlw	241
  7661  00B6'                    u7837:
  7662  00B6' 0B89               	decfsz	9,f
  7663  00B7' 2800'              	goto	u7837
  7664  00B8' 0B80'              	decfsz	??_initialize^(0+384),f
  7665  00B9' 2800'              	goto	u7837
  7666  00BA' 0B81'              	decfsz	(??_initialize^(0+384)+1),f
  7667  00BB' 2800'              	goto	u7837
  7668  00BC' 0020               	movlb	0	; select bank0
  7669  00BD' 168E               	bsf	14,5	;volatile
  7670  00BE' 3005               	movlw	5
  7671  00BF' 0023               	movlb	3	; select bank3
  7672  00C0' 0081'              	movwf	(??_initialize^(0+384)+1)
  7673  00C1' 300F               	movlw	15
  7674  00C2' 0080'              	movwf	??_initialize^(0+384)
  7675  00C3' 30F1               	movlw	241
  7676  00C4'                    u7847:
  7677  00C4' 0B89               	decfsz	9,f
  7678  00C5' 2800'              	goto	u7847
  7679  00C6' 0B80'              	decfsz	??_initialize^(0+384),f
  7680  00C7' 2800'              	goto	u7847
  7681  00C8' 0B81'              	decfsz	(??_initialize^(0+384)+1),f
  7682  00C9' 2800'              	goto	u7847
  7683  00CA' 0023               	movlb	3	; select bank3
  7684  00CB' 0800'              	movf	(_CC_disc_kp+3)^(0+384),w
  7685  00CC' 0024               	movlb	4	; select bank4
  7686  00CD' 0080'              	movwf	(_kp+3)^(0+512)
  7687  00CE' 0023               	movlb	3	; select bank3
  7688  00CF' 0800'              	movf	(_CC_disc_kp+2)^(0+384),w
  7689  00D0' 0024               	movlb	4	; select bank4
  7690  00D1' 0080'              	movwf	(_kp+2)^(0+512)
  7691  00D2' 0023               	movlb	3	; select bank3
  7692  00D3' 0800'              	movf	(_CC_disc_kp+1)^(0+384),w
  7693  00D4' 0024               	movlb	4	; select bank4
  7694  00D5' 0080'              	movwf	(_kp+1)^(0+512)
  7695  00D6' 0023               	movlb	3	; select bank3
  7696  00D7' 0800'              	movf	_CC_disc_kp^(0+384),w
  7697  00D8' 0024               	movlb	4	; select bank4
  7698  00D9' 0080'              	movwf	_kp^(0+512)
  7699  00DA' 0023               	movlb	3	; select bank3
  7700  00DB' 0800'              	movf	(_CC_disc_ki+3)^(0+384),w
  7701  00DC' 0024               	movlb	4	; select bank4
  7702  00DD' 0080'              	movwf	(_ki+3)^(0+512)
  7703  00DE' 0023               	movlb	3	; select bank3
  7704  00DF' 0800'              	movf	(_CC_disc_ki+2)^(0+384),w
  7705  00E0' 0024               	movlb	4	; select bank4
  7706  00E1' 0080'              	movwf	(_ki+2)^(0+512)
  7707  00E2' 0023               	movlb	3	; select bank3
  7708  00E3' 0800'              	movf	(_CC_disc_ki+1)^(0+384),w
  7709  00E4' 0024               	movlb	4	; select bank4
  7710  00E5' 0080'              	movwf	(_ki+1)^(0+512)
  7711  00E6' 0023               	movlb	3	; select bank3
  7712  00E7' 0800'              	movf	_CC_disc_ki^(0+384),w
  7713  00E8' 0024               	movlb	4	; select bank4
  7714  00E9' 0080'              	movwf	_ki^(0+512)
  7715  00EA' 0023               	movlb	3	; select bank3
  7716  00EB' 0800'              	movf	_CC_char_disc_kd^(0+384),w
  7717  00EC' 0080'              	movwf	??_initialize^(0+384)
  7718  00ED' 0181'              	clrf	(??_initialize^(0+384)+1)
  7719  00EE' 0182'              	clrf	(??_initialize^(0+384)+2)
  7720  00EF' 0183'              	clrf	(??_initialize^(0+384)+3)
  7721  00F0' 0800'              	movf	(??_initialize+3)^(0+384),w
  7722  00F1' 0022               	movlb	2	; select bank2
  7723  00F2' 0080'              	movwf	(___xxtofl@val+3)^(0+256)
  7724  00F3' 0023               	movlb	3	; select bank3
  7725  00F4' 0800'              	movf	(??_initialize+2)^(0+384),w
  7726  00F5' 0022               	movlb	2	; select bank2
  7727  00F6' 0080'              	movwf	(___xxtofl@val+2)^(0+256)
  7728  00F7' 0023               	movlb	3	; select bank3
  7729  00F8' 0800'              	movf	(??_initialize+1)^(0+384),w
  7730  00F9' 0022               	movlb	2	; select bank2
  7731  00FA' 0080'              	movwf	(___xxtofl@val+1)^(0+256)
  7732  00FB' 0023               	movlb	3	; select bank3
  7733  00FC' 0800'              	movf	??_initialize^(0+384),w
  7734  00FD' 0022               	movlb	2	; select bank2
  7735  00FE' 0080'              	movwf	___xxtofl@val^(0+256)
  7736  00FF' 3000               	movlw	0
  7737  0100' 3180' 2000' 3180'  	fcall	___xxtofl
  7738  0103' 0022               	movlb	2	; select bank2
  7739  0104' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  7740  0105' 0024               	movlb	4	; select bank4
  7741  0106' 0080'              	movwf	(_kd+3)^(0+512)
  7742  0107' 0022               	movlb	2	; select bank2
  7743  0108' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  7744  0109' 0024               	movlb	4	; select bank4
  7745  010A' 0080'              	movwf	(_kd+2)^(0+512)
  7746  010B' 0022               	movlb	2	; select bank2
  7747  010C' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  7748  010D' 0024               	movlb	4	; select bank4
  7749  010E' 0080'              	movwf	(_kd+1)^(0+512)
  7750  010F' 0022               	movlb	2	; select bank2
  7751  0110' 0800'              	movf	?___xxtofl^(0+256),w
  7752  0111' 0024               	movlb	4	; select bank4
  7753  0112' 0080'              	movwf	_kd^(0+512)
  7754  0113' 3000               	movlw	0
  7755  0114' 0080'              	movwf	(_pidi+3)^(0+512)
  7756  0115' 3000               	movlw	0
  7757  0116' 0080'              	movwf	(_pidi+2)^(0+512)
  7758  0117' 3000               	movlw	0
  7759  0118' 0080'              	movwf	(_pidi+1)^(0+512)
  7760  0119' 3000               	movlw	0
  7761  011A' 0080'              	movwf	_pidi^(0+512)
  7762                           
  7763                           ;charger_discharger.c: 123:     _delay((unsigned long)((100)*(32000000/4000.0)));
  7764  011B' 3005               	movlw	5
  7765  011C' 0023               	movlb	3	; select bank3
  7766  011D' 0081'              	movwf	(??_initialize^(0+384)+1)
  7767  011E' 300F               	movlw	15
  7768  011F' 0080'              	movwf	??_initialize^(0+384)
  7769  0120' 30F1               	movlw	241
  7770  0121'                    u7857:
  7771  0121' 0B89               	decfsz	9,f
  7772  0122' 2800'              	goto	u7857
  7773  0123' 0B80'              	decfsz	??_initialize^(0+384),f
  7774  0124' 2800'              	goto	u7857
  7775  0125' 0B81'              	decfsz	(??_initialize^(0+384)+1),f
  7776  0126' 2800'              	goto	u7857
  7777                           
  7778                           ;charger_discharger.c: 124:     { RC3 = 0; RC4 = 0; conv = 0; RC5 = 0; pidt = 50.0; set_
      +                          DC(); Cell_OFF();};
  7779  0127' 0020               	movlb	0	; select bank0
  7780  0128' 118E               	bcf	14,3	;volatile
  7781  0129' 120E               	bcf	14,4	;volatile
  7782  012A' 0021               	movlb	1	; select bank1
  7783  012B' 0180'              	clrf	_conv^(0+128)
  7784  012C' 0020               	movlb	0	; select bank0
  7785  012D' 128E               	bcf	14,5	;volatile
  7786  012E' 3042               	movlw	66
  7787  012F' 0023               	movlb	3	; select bank3
  7788  0130' 0080'              	movwf	(_pidt+3)^(0+384)
  7789  0131' 3048               	movlw	72
  7790  0132' 0080'              	movwf	(_pidt+2)^(0+384)
  7791  0133' 3000               	movlw	0
  7792  0134' 0080'              	movwf	(_pidt+1)^(0+384)
  7793  0135' 3000               	movlw	0
  7794  0136' 0080'              	movwf	_pidt^(0+384)
  7795  0137' 3180' 2000' 3180'  	fcall	_set_DC
  7796  013A' 3180' 2000'        	fcall	_Cell_OFF
  7797  013C' 0008               	return
  7798  013D'                    __end_of_initialize:
  7799                           
  7800                           	psect	text20
  7801  0000'                    __ptext20:	
  7802 ;; *************** function _set_DC *****************
  7803 ;; Defined at:
  7804 ;;		line 290 in file "charger_discharger.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;		None
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;  dc              2   16[BANK3 ] unsigned short 
  7809 ;; Return value:  Size  Location     Type
  7810 ;;                  1    wreg      void 
  7811 ;; Registers used:
  7812 ;;		wreg, status,2, status,0, pclath, cstack
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7819 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  7820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7821 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  7822 ;;Total ram usage:        2 bytes
  7823 ;; Hardware stack levels used: 1
  7824 ;; Hardware stack levels required when called: 6
  7825 ;; This function calls:
  7826 ;;		___fltol
  7827 ;; This function is called by:
  7828 ;;		_initialize
  7829 ;;		_fIDLE
  7830 ;;		_fCHARGE
  7831 ;;		_fDISCHARGE
  7832 ;;		_fDC_res
  7833 ;;		_fWAIT
  7834 ;;		_converter_settings
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838  0000'                    _set_DC:	
  7839                           ;psect for function _set_DC
  7840                           
  7841                           
  7842                           ;charger_discharger.c: 293:     uint16_t dc = (uint16_t) pidt;
  7843                           
  7844                           ;incstack = 0
  7845                           ; Regs used in _set_DC: [wreg+status,2+status,0+pclath+cstack]
  7846  0000' 0023               	movlb	3	; select bank3
  7847  0001' 0800'              	movf	(_pidt+3)^(0+384),w
  7848  0002' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  7849  0003' 0800'              	movf	(_pidt+2)^(0+384),w
  7850  0004' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  7851  0005' 0800'              	movf	(_pidt+1)^(0+384),w
  7852  0006' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  7853  0007' 0800'              	movf	_pidt^(0+384),w
  7854  0008' 0080'              	movwf	___fltol@f1^(0+384)
  7855  0009' 3180' 2000'        	fcall	___fltol
  7856  000B' 0023               	movlb	3	; select bank3
  7857  000C' 0800'              	movf	(?___fltol+1)^(0+384),w
  7858  000D' 0080'              	movwf	(set_DC@dc+1)^(0+384)
  7859  000E' 0800'              	movf	?___fltol^(0+384),w
  7860  000F' 0080'              	movwf	set_DC@dc^(0+384)
  7861                           
  7862                           ;charger_discharger.c: 295:     PSMC1DCL = dc & 0x00FF;
  7863  0010' 0800'              	movf	set_DC@dc^(0+384),w
  7864  0011' 0030               	movlb	16	; select bank16
  7865  0012' 00A3               	movwf	35	;volatile
  7866                           
  7867                           ;charger_discharger.c: 296:     PSMC1DCH = (dc >> 8) & 0x01;
  7868  0013' 0023               	movlb	3	; select bank3
  7869  0014' 0800'              	movf	(set_DC@dc+1)^(0+384),w
  7870  0015' 3901               	andlw	1
  7871  0016' 0030               	movlb	16	; select bank16
  7872  0017' 00A4               	movwf	36	;volatile
  7873                           
  7874                           ;charger_discharger.c: 297:     PSMC1CONbits.PSMC1LD = 1;
  7875  0018' 1711               	bsf	17,6	;volatile
  7876  0019' 0008               	return
  7877  001A'                    __end_of_set_DC:
  7878                           
  7879                           	psect	text21
  7880  0000'                    __ptext21:	
  7881 ;; *************** function _Cell_OFF *****************
  7882 ;; Defined at:
  7883 ;;		line 553 in file "charger_discharger.c"
  7884 ;; Parameters:    Size  Location     Type
  7885 ;;		None
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;		None
  7888 ;; Return value:  Size  Location     Type
  7889 ;;                  1    wreg      void 
  7890 ;; Registers used:
  7891 ;;		wreg
  7892 ;; Tracked objects:
  7893 ;;		On entry : 0/0
  7894 ;;		On exit  : 0/0
  7895 ;;		Unchanged: 0/0
  7896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7899 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7900 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7901 ;;Total ram usage:        1 bytes
  7902 ;; Hardware stack levels used: 1
  7903 ;; Hardware stack levels required when called: 5
  7904 ;; This function calls:
  7905 ;;		Nothing
  7906 ;; This function is called by:
  7907 ;;		_initialize
  7908 ;;		_fIDLE
  7909 ;;		_fCHARGE
  7910 ;;		_fDISCHARGE
  7911 ;;		_fDC_res
  7912 ;;		_fWAIT
  7913 ;; This function uses a non-reentrant model
  7914 ;;
  7915                           
  7916  0000'                    _Cell_OFF:	
  7917                           ;psect for function _Cell_OFF
  7918                           
  7919                           
  7920                           ;charger_discharger.c: 555:     { RB2 = 0; };
  7921                           
  7922                           ;incstack = 0
  7923                           ; Regs used in _Cell_OFF: [wreg]
  7924  0000' 0020               	movlb	0	; select bank0
  7925  0001' 110D               	bcf	13,2	;volatile
  7926                           
  7927                           ;charger_discharger.c: 556:     _delay((unsigned long)((10)*(32000000/4000.0)));
  7928  0002' 3068               	movlw	104
  7929  0003' 0022               	movlb	2	; select bank2
  7930  0004' 0080'              	movwf	??_Cell_OFF^(0+256)
  7931  0005' 30E4               	movlw	228
  7932  0006'                    u7867:
  7933  0006' 0B89               	decfsz	9,f
  7934  0007' 2800'              	goto	u7867
  7935  0008' 0B80'              	decfsz	??_Cell_OFF^(0+256),f
  7936  0009' 2800'              	goto	u7867
  7937  000A' 0000               	nop
  7938                           
  7939                           ;charger_discharger.c: 557:     { RB3 = 0; };
  7940  000B' 0020               	movlb	0	; select bank0
  7941  000C' 118D               	bcf	13,3	;volatile
  7942                           
  7943                           ;charger_discharger.c: 558:     _delay((unsigned long)((10)*(32000000/4000.0)));
  7944  000D' 3068               	movlw	104
  7945  000E' 0022               	movlb	2	; select bank2
  7946  000F' 0080'              	movwf	??_Cell_OFF^(0+256)
  7947  0010' 30E4               	movlw	228
  7948  0011'                    u7877:
  7949  0011' 0B89               	decfsz	9,f
  7950  0012' 2800'              	goto	u7877
  7951  0013' 0B80'              	decfsz	??_Cell_OFF^(0+256),f
  7952  0014' 2800'              	goto	u7877
  7953  0015' 0000               	nop
  7954                           
  7955                           ;charger_discharger.c: 559:     { RB4 = 0; };
  7956  0016' 0020               	movlb	0	; select bank0
  7957  0017' 120D               	bcf	13,4	;volatile
  7958                           
  7959                           ;charger_discharger.c: 560:     _delay((unsigned long)((10)*(32000000/4000.0)));
  7960  0018' 3068               	movlw	104
  7961  0019' 0022               	movlb	2	; select bank2
  7962  001A' 0080'              	movwf	??_Cell_OFF^(0+256)
  7963  001B' 30E4               	movlw	228
  7964  001C'                    u7887:
  7965  001C' 0B89               	decfsz	9,f
  7966  001D' 2800'              	goto	u7887
  7967  001E' 0B80'              	decfsz	??_Cell_OFF^(0+256),f
  7968  001F' 2800'              	goto	u7887
  7969  0020' 0000               	nop
  7970                           
  7971                           ;charger_discharger.c: 561:     { RB5 = 0; };
  7972  0021' 0020               	movlb	0	; select bank0
  7973  0022' 128D               	bcf	13,5	;volatile
  7974                           
  7975                           ;charger_discharger.c: 562:     _delay((unsigned long)((10)*(32000000/4000.0)));
  7976  0023' 3068               	movlw	104
  7977  0024' 0022               	movlb	2	; select bank2
  7978  0025' 0080'              	movwf	??_Cell_OFF^(0+256)
  7979  0026' 30E4               	movlw	228
  7980  0027'                    u7897:
  7981  0027' 0B89               	decfsz	9,f
  7982  0028' 2800'              	goto	u7897
  7983  0029' 0B80'              	decfsz	??_Cell_OFF^(0+256),f
  7984  002A' 2800'              	goto	u7897
  7985  002B' 0000               	nop
  7986  002C' 0008               	return
  7987  002D'                    __end_of_Cell_OFF:
  7988                           
  7989                           	psect	text22
  7990  0000'                    __ptext22:	
  7991 ;; *************** function _cc_cv_mode *****************
  7992 ;; Defined at:
  7993 ;;		line 305 in file "charger_discharger.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;  current_volt    2   16[BANK3 ] unsigned short 
  7996 ;;  reference_vo    2   18[BANK3 ] unsigned short 
  7997 ;;  CC_mode_stat    1   20[BANK3 ] _Bool 
  7998 ;; Auto vars:     Size  Location     Type
  7999 ;;		None
  8000 ;; Return value:  Size  Location     Type
  8001 ;;                  1    wreg      void 
  8002 ;; Registers used:
  8003 ;;		wreg, status,2, status,0, pclath, cstack
  8004 ;; Tracked objects:
  8005 ;;		On entry : 0/0
  8006 ;;		On exit  : 0/0
  8007 ;;		Unchanged: 0/0
  8008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8009 ;;      Params:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0
  8010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8012 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0
  8013 ;;Total ram usage:        5 bytes
  8014 ;; Hardware stack levels used: 1
  8015 ;; Hardware stack levels required when called: 7
  8016 ;; This function calls:
  8017 ;;		___fladd
  8018 ;;		___fldiv
  8019 ;;		___flmul
  8020 ;;		___fltol
  8021 ;;		___xxtofl
  8022 ;; This function is called by:
  8023 ;;		_main
  8024 ;; This function uses a non-reentrant model
  8025 ;;
  8026                           
  8027  0000'                    _cc_cv_mode:	
  8028                           ;psect for function _cc_cv_mode
  8029                           
  8030                           
  8031                           ;charger_discharger.c: 305: void cc_cv_mode(uint16_t current_voltage, uint16_t reference
      +                          _voltage, _Bool CC_mode_status);charger_discharger.c: 306: {;charger_discharger.c: 308: 
      +                              if( ( ( (uint16_t) ( ( ( (float)current_voltage * 5000.0 ) / 4096.0 ) + 0.5 ) ) > re
      +                          ference_voltage ) && CC_mode_status )
  8032                           
  8033                           ;incstack = 0
  8034                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0+pclath+cstack]
  8035  0000' 0023               	movlb	3	; select bank3
  8036  0001' 0800'              	movf	cc_cv_mode@current_voltage^(0+384),w
  8037  0002' 0022               	movlb	2	; select bank2
  8038  0003' 0080'              	movwf	___xxtofl@val^(0+256)
  8039  0004' 0023               	movlb	3	; select bank3
  8040  0005' 0800'              	movf	(cc_cv_mode@current_voltage+1)^(0+384),w
  8041  0006' 0022               	movlb	2	; select bank2
  8042  0007' 0081'              	movwf	(___xxtofl@val^(0+256)+1)
  8043  0008' 0182'              	clrf	(___xxtofl@val^(0+256)+2)
  8044  0009' 0183'              	clrf	(___xxtofl@val^(0+256)+3)
  8045  000A' 3000               	movlw	0
  8046  000B' 3180' 2000' 3180'  	fcall	___xxtofl
  8047  000E' 0022               	movlb	2	; select bank2
  8048  000F' 0800'              	movf	(?___xxtofl+3)^(0+256),w
  8049  0010' 0080'              	movwf	(___flmul@a+3)^(0+256)
  8050  0011' 0800'              	movf	(?___xxtofl+2)^(0+256),w
  8051  0012' 0080'              	movwf	(___flmul@a+2)^(0+256)
  8052  0013' 0800'              	movf	(?___xxtofl+1)^(0+256),w
  8053  0014' 0080'              	movwf	(___flmul@a+1)^(0+256)
  8054  0015' 0800'              	movf	?___xxtofl^(0+256),w
  8055  0016' 0080'              	movwf	___flmul@a^(0+256)
  8056  0017' 3045               	movlw	69
  8057  0018' 0080'              	movwf	(___flmul@b+3)^(0+256)
  8058  0019' 309C               	movlw	156
  8059  001A' 0080'              	movwf	(___flmul@b+2)^(0+256)
  8060  001B' 3040               	movlw	64
  8061  001C' 0080'              	movwf	(___flmul@b+1)^(0+256)
  8062  001D' 3000               	movlw	0
  8063  001E' 0080'              	movwf	___flmul@b^(0+256)
  8064  001F' 3180' 2000' 3180'  	fcall	___flmul
  8065  0022' 0022               	movlb	2	; select bank2
  8066  0023' 0800'              	movf	(?___flmul+3)^(0+256),w
  8067  0024' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  8068  0025' 0800'              	movf	(?___flmul+2)^(0+256),w
  8069  0026' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  8070  0027' 0800'              	movf	(?___flmul+1)^(0+256),w
  8071  0028' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  8072  0029' 0800'              	movf	?___flmul^(0+256),w
  8073  002A' 0080'              	movwf	___fldiv@b^(0+256)
  8074  002B' 3045               	movlw	69
  8075  002C' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  8076  002D' 3080               	movlw	128
  8077  002E' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  8078  002F' 3000               	movlw	0
  8079  0030' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  8080  0031' 3000               	movlw	0
  8081  0032' 0080'              	movwf	___fldiv@a^(0+256)
  8082  0033' 3180' 2000' 3180'  	fcall	___fldiv
  8083  0036' 0022               	movlb	2	; select bank2
  8084  0037' 0800'              	movf	(?___fldiv+3)^(0+256),w
  8085  0038' 0080'              	movwf	(___fladd@a+3)^(0+256)
  8086  0039' 0800'              	movf	(?___fldiv+2)^(0+256),w
  8087  003A' 0080'              	movwf	(___fladd@a+2)^(0+256)
  8088  003B' 0800'              	movf	(?___fldiv+1)^(0+256),w
  8089  003C' 0080'              	movwf	(___fladd@a+1)^(0+256)
  8090  003D' 0800'              	movf	?___fldiv^(0+256),w
  8091  003E' 0080'              	movwf	___fladd@a^(0+256)
  8092  003F' 303F               	movlw	63
  8093  0040' 0080'              	movwf	(___fladd@b+3)^(0+256)
  8094  0041' 3000               	movlw	0
  8095  0042' 0080'              	movwf	(___fladd@b+2)^(0+256)
  8096  0043' 3000               	movlw	0
  8097  0044' 0080'              	movwf	(___fladd@b+1)^(0+256)
  8098  0045' 3000               	movlw	0
  8099  0046' 0080'              	movwf	___fladd@b^(0+256)
  8100  0047' 3180' 2000' 3180'  	fcall	___fladd
  8101  004A' 0022               	movlb	2	; select bank2
  8102  004B' 0800'              	movf	(?___fladd+3)^(0+256),w
  8103  004C' 0023               	movlb	3	; select bank3
  8104  004D' 0080'              	movwf	(___fltol@f1+3)^(0+384)
  8105  004E' 0022               	movlb	2	; select bank2
  8106  004F' 0800'              	movf	(?___fladd+2)^(0+256),w
  8107  0050' 0023               	movlb	3	; select bank3
  8108  0051' 0080'              	movwf	(___fltol@f1+2)^(0+384)
  8109  0052' 0022               	movlb	2	; select bank2
  8110  0053' 0800'              	movf	(?___fladd+1)^(0+256),w
  8111  0054' 0023               	movlb	3	; select bank3
  8112  0055' 0080'              	movwf	(___fltol@f1+1)^(0+384)
  8113  0056' 0022               	movlb	2	; select bank2
  8114  0057' 0800'              	movf	?___fladd^(0+256),w
  8115  0058' 0023               	movlb	3	; select bank3
  8116  0059' 0080'              	movwf	___fltol@f1^(0+384)
  8117  005A' 3180' 2000' 3180'  	fcall	___fltol
  8118  005D' 0023               	movlb	3	; select bank3
  8119  005E' 0800'              	movf	(?___fltol+1)^(0+384),w
  8120  005F' 0200'              	subwf	(cc_cv_mode@reference_voltage+1)^(0+384),w
  8121  0060' 1D03               	skipz
  8122  0061' 2800'              	goto	u7025
  8123  0062' 0800'              	movf	?___fltol^(0+384),w
  8124  0063' 0200'              	subwf	cc_cv_mode@reference_voltage^(0+384),w
  8125  0064'                    u7025:
  8126  0064' 1803               	skipnc
  8127  0065' 0008               	return
  8128  0066' 0800'              	movf	cc_cv_mode@CC_mode_status^(0+384),w
  8129  0067' 1903               	btfsc	3,2
  8130  0068' 0008               	return
  8131                           
  8132                           ;charger_discharger.c: 309:     {;charger_discharger.c: 310:         pidi = 0;
  8133  0069' 3000               	movlw	0
  8134  006A' 0024               	movlb	4	; select bank4
  8135  006B' 0080'              	movwf	(_pidi+3)^(0+512)
  8136  006C' 3000               	movlw	0
  8137  006D' 0080'              	movwf	(_pidi+2)^(0+512)
  8138  006E' 3000               	movlw	0
  8139  006F' 0080'              	movwf	(_pidi+1)^(0+512)
  8140  0070' 3000               	movlw	0
  8141  0071' 0080'              	movwf	_pidi^(0+512)
  8142                           
  8143                           ;charger_discharger.c: 311:         cmode = 0;
  8144  0072' 0021               	movlb	1	; select bank1
  8145  0073' 0180'              	clrf	_cmode^(0+128)
  8146                           
  8147                           ;charger_discharger.c: 312:         kp = CV_kp;
  8148  0074' 0024               	movlb	4	; select bank4
  8149  0075' 0800'              	movf	(_CV_kp+3)^(0+512),w
  8150  0076' 0080'              	movwf	(_kp+3)^(0+512)
  8151  0077' 0800'              	movf	(_CV_kp+2)^(0+512),w
  8152  0078' 0080'              	movwf	(_kp+2)^(0+512)
  8153  0079' 0800'              	movf	(_CV_kp+1)^(0+512),w
  8154  007A' 0080'              	movwf	(_kp+1)^(0+512)
  8155  007B' 0800'              	movf	_CV_kp^(0+512),w
  8156  007C' 0080'              	movwf	_kp^(0+512)
  8157                           
  8158                           ;charger_discharger.c: 313:         ki = CV_ki;
  8159  007D' 0800'              	movf	(_CV_ki+3)^(0+512),w
  8160  007E' 0080'              	movwf	(_ki+3)^(0+512)
  8161  007F' 0800'              	movf	(_CV_ki+2)^(0+512),w
  8162  0080' 0080'              	movwf	(_ki+2)^(0+512)
  8163  0081' 0800'              	movf	(_CV_ki+1)^(0+512),w
  8164  0082' 0080'              	movwf	(_ki+1)^(0+512)
  8165  0083' 0800'              	movf	_CV_ki^(0+512),w
  8166  0084' 0080'              	movwf	_ki^(0+512)
  8167                           
  8168                           ;charger_discharger.c: 314:         kd = CV_kd;
  8169  0085' 0800'              	movf	(_CV_kd+3)^(0+512),w
  8170  0086' 0080'              	movwf	(_kd+3)^(0+512)
  8171  0087' 0800'              	movf	(_CV_kd+2)^(0+512),w
  8172  0088' 0080'              	movwf	(_kd+2)^(0+512)
  8173  0089' 0800'              	movf	(_CV_kd+1)^(0+512),w
  8174  008A' 0080'              	movwf	(_kd+1)^(0+512)
  8175  008B' 0800'              	movf	_CV_kd^(0+512),w
  8176  008C' 0080'              	movwf	_kd^(0+512)
  8177  008D' 0008               	return
  8178  008E'                    __end_of_cc_cv_mode:
  8179                           
  8180                           	psect	text23
  8181  0000'                    __ptext23:	
  8182 ;; *************** function ___xxtofl *****************
  8183 ;; Defined at:
  8184 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  8185 ;; Parameters:    Size  Location     Type
  8186 ;;  sign            1    wreg     unsigned char 
  8187 ;;  val             4    0[BANK2 ] long 
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;  sign            1    8[BANK2 ] unsigned char 
  8190 ;;  arg             4   10[BANK2 ] unsigned long 
  8191 ;;  exp             1    9[BANK2 ] unsigned char 
  8192 ;; Return value:  Size  Location     Type
  8193 ;;                  4    0[BANK2 ] unsigned char 
  8194 ;; Registers used:
  8195 ;;		wreg, status,2, status,0
  8196 ;; Tracked objects:
  8197 ;;		On entry : 0/0
  8198 ;;		On exit  : 0/0
  8199 ;;		Unchanged: 0/0
  8200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8201 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8202 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  8203 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8204 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0
  8205 ;;Total ram usage:       14 bytes
  8206 ;; Hardware stack levels used: 1
  8207 ;; Hardware stack levels required when called: 5
  8208 ;; This function calls:
  8209 ;;		Nothing
  8210 ;; This function is called by:
  8211 ;;		_initialize
  8212 ;;		_cc_cv_mode
  8213 ;;		_scaling
  8214 ;;		_fCHARGE
  8215 ;;		_fDISCHARGE
  8216 ;;		_fDC_res
  8217 ;;		_converter_settings
  8218 ;; This function uses a non-reentrant model
  8219 ;;
  8220                           
  8221  0000'                    ___xxtofl:	
  8222                           ;psect for function ___xxtofl
  8223                           
  8224                           
  8225                           ;incstack = 0
  8226                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8227                           ;___xxtofl@sign stored from wreg
  8228  0000' 0022               	movlb	2	; select bank2
  8229  0001' 0080'              	movwf	___xxtofl@sign^(0+256)
  8230  0002' 0800'              	movf	___xxtofl@sign^(0+256),w
  8231  0003' 1D03               	btfss	3,2
  8232  0004' 1F80'              	btfss	(___xxtofl@val+3)^(0+256),7
  8233  0005' 2800'              	goto	l4969
  8234  0006' 0900'              	comf	___xxtofl@val^(0+256),w
  8235  0007' 0080'              	movwf	___xxtofl@arg^(0+256)
  8236  0008' 0901'              	comf	(___xxtofl@val^(0+256)+1),w
  8237  0009' 0080'              	movwf	(___xxtofl@arg+1)^(0+256)
  8238  000A' 0902'              	comf	(___xxtofl@val^(0+256)+2),w
  8239  000B' 0080'              	movwf	(___xxtofl@arg+2)^(0+256)
  8240  000C' 0903'              	comf	(___xxtofl@val^(0+256)+3),w
  8241  000D' 0080'              	movwf	(___xxtofl@arg+3)^(0+256)
  8242  000E' 0A80'              	incf	___xxtofl@arg^(0+256),f
  8243  000F' 1903               	skipnz
  8244  0010' 0A80'              	incf	(___xxtofl@arg+1)^(0+256),f
  8245  0011' 1903               	skipnz
  8246  0012' 0A80'              	incf	(___xxtofl@arg+2)^(0+256),f
  8247  0013' 1903               	skipnz
  8248  0014' 0A80'              	incf	(___xxtofl@arg+3)^(0+256),f
  8249  0015' 2800'              	goto	l1487
  8250  0016'                    l4969:
  8251  0016' 0800'              	movf	(___xxtofl@val+3)^(0+256),w
  8252  0017' 0080'              	movwf	(___xxtofl@arg+3)^(0+256)
  8253  0018' 0800'              	movf	(___xxtofl@val+2)^(0+256),w
  8254  0019' 0080'              	movwf	(___xxtofl@arg+2)^(0+256)
  8255  001A' 0800'              	movf	(___xxtofl@val+1)^(0+256),w
  8256  001B' 0080'              	movwf	(___xxtofl@arg+1)^(0+256)
  8257  001C' 0800'              	movf	___xxtofl@val^(0+256),w
  8258  001D' 0080'              	movwf	___xxtofl@arg^(0+256)
  8259  001E'                    l1487:
  8260  001E' 0800'              	movf	(___xxtofl@val+3)^(0+256),w
  8261  001F' 0400'              	iorwf	(___xxtofl@val+2)^(0+256),w
  8262  0020' 0400'              	iorwf	(___xxtofl@val+1)^(0+256),w
  8263  0021' 0400'              	iorwf	___xxtofl@val^(0+256),w
  8264  0022' 1D03               	skipz
  8265  0023' 2800'              	goto	l4975
  8266  0024' 3000               	movlw	0
  8267  0025' 0080'              	movwf	(?___xxtofl+3)^(0+256)
  8268  0026' 3000               	movlw	0
  8269  0027' 0080'              	movwf	(?___xxtofl+2)^(0+256)
  8270  0028' 3000               	movlw	0
  8271  0029' 0080'              	movwf	(?___xxtofl+1)^(0+256)
  8272  002A' 3000               	movlw	0
  8273  002B' 0080'              	movwf	?___xxtofl^(0+256)
  8274  002C' 0008               	return
  8275  002D'                    l4975:
  8276  002D' 3096               	movlw	150
  8277  002E' 0080'              	movwf	___xxtofl@exp^(0+256)
  8278  002F'                    l4979:
  8279  002F' 30FE               	movlw	254
  8280  0030' 0500'              	andwf	(___xxtofl@arg+3)^(0+256),w
  8281  0031' 1903               	btfsc	3,2
  8282  0032' 2800'              	goto	l1493
  8283  0033' 3001               	movlw	1
  8284  0034' 0080'              	movwf	??___xxtofl^(0+256)
  8285  0035' 0800'              	movf	??___xxtofl^(0+256),w
  8286  0036' 0780'              	addwf	___xxtofl@exp^(0+256),f
  8287  0037' 3001               	movlw	1
  8288  0038'                    u4805:
  8289  0038' 3680'              	lsrf	(___xxtofl@arg+3)^(0+256),f
  8290  0039' 0C80'              	rrf	(___xxtofl@arg+2)^(0+256),f
  8291  003A' 0C80'              	rrf	(___xxtofl@arg+1)^(0+256),f
  8292  003B' 0C80'              	rrf	___xxtofl@arg^(0+256),f
  8293  003C' 0B89               	decfsz	9,f
  8294  003D' 2800'              	goto	u4805
  8295  003E' 2800'              	goto	l4979
  8296  003F'                    l4981:
  8297  003F' 3001               	movlw	1
  8298  0040' 0080'              	movwf	??___xxtofl^(0+256)
  8299  0041' 0800'              	movf	??___xxtofl^(0+256),w
  8300  0042' 0780'              	addwf	___xxtofl@exp^(0+256),f
  8301  0043' 3001               	movlw	1
  8302  0044' 0780'              	addwf	___xxtofl@arg^(0+256),f
  8303  0045' 3000               	movlw	0
  8304  0046' 3D80'              	addwfc	(___xxtofl@arg+1)^(0+256),f
  8305  0047' 3000               	movlw	0
  8306  0048' 3D80'              	addwfc	(___xxtofl@arg+2)^(0+256),f
  8307  0049' 3000               	movlw	0
  8308  004A' 3D80'              	addwfc	(___xxtofl@arg+3)^(0+256),f
  8309  004B' 3001               	movlw	1
  8310  004C'                    u4825:
  8311  004C' 3680'              	lsrf	(___xxtofl@arg+3)^(0+256),f
  8312  004D' 0C80'              	rrf	(___xxtofl@arg+2)^(0+256),f
  8313  004E' 0C80'              	rrf	(___xxtofl@arg+1)^(0+256),f
  8314  004F' 0C80'              	rrf	___xxtofl@arg^(0+256),f
  8315  0050' 0B89               	decfsz	9,f
  8316  0051' 2800'              	goto	u4825
  8317  0052'                    l1493:
  8318  0052' 30FF               	movlw	255
  8319  0053' 0500'              	andwf	(___xxtofl@arg+3)^(0+256),w
  8320  0054' 1903               	btfsc	3,2
  8321  0055' 2800'              	goto	l4989
  8322  0056' 2800'              	goto	l4981
  8323  0057'                    l4991:
  8324  0057' 3002               	movlw	2
  8325  0058' 0200'              	subwf	___xxtofl@exp^(0+256),w
  8326  0059' 1C03               	btfss	3,0
  8327  005A' 2800'              	goto	l1500
  8328  005B' 3001               	movlw	1
  8329  005C' 0280'              	subwf	___xxtofl@exp^(0+256),f
  8330  005D' 3001               	movlw	1
  8331  005E'                    u4845:
  8332  005E' 3580'              	lslf	___xxtofl@arg^(0+256),f
  8333  005F' 0D80'              	rlf	(___xxtofl@arg+1)^(0+256),f
  8334  0060' 0D80'              	rlf	(___xxtofl@arg+2)^(0+256),f
  8335  0061' 0D80'              	rlf	(___xxtofl@arg+3)^(0+256),f
  8336  0062' 0B89               	decfsz	9,f
  8337  0063' 2800'              	goto	u4845
  8338  0064'                    l4989:
  8339  0064' 1F80'              	btfss	(___xxtofl@arg+2)^(0+256),7
  8340  0065' 2800'              	goto	l4991
  8341  0066'                    l1500:
  8342  0066' 1800'              	btfsc	___xxtofl@exp^(0+256),0
  8343  0067' 2800'              	goto	l1501
  8344  0068' 30FF               	movlw	255
  8345  0069' 0580'              	andwf	___xxtofl@arg^(0+256),f
  8346  006A' 30FF               	movlw	255
  8347  006B' 0580'              	andwf	(___xxtofl@arg+1)^(0+256),f
  8348  006C' 307F               	movlw	127
  8349  006D' 0580'              	andwf	(___xxtofl@arg+2)^(0+256),f
  8350  006E' 30FF               	movlw	255
  8351  006F' 0580'              	andwf	(___xxtofl@arg+3)^(0+256),f
  8352  0070'                    l1501:
  8353  0070' 1003               	clrc
  8354  0071' 0C80'              	rrf	___xxtofl@exp^(0+256),f
  8355  0072' 0800'              	movf	___xxtofl@exp^(0+256),w
  8356  0073' 0080'              	movwf	??___xxtofl^(0+256)
  8357  0074' 0181'              	clrf	(??___xxtofl^(0+256)+1)
  8358  0075' 0182'              	clrf	(??___xxtofl^(0+256)+2)
  8359  0076' 0183'              	clrf	(??___xxtofl^(0+256)+3)
  8360  0077' 3018               	movlw	24
  8361  0078'                    u4885:
  8362  0078' 3580'              	lslf	??___xxtofl^(0+256),f
  8363  0079' 0D81'              	rlf	(??___xxtofl^(0+256)+1),f
  8364  007A' 0D82'              	rlf	(??___xxtofl^(0+256)+2),f
  8365  007B' 0D83'              	rlf	(??___xxtofl^(0+256)+3),f
  8366  007C' 0B89               	decfsz	9,f
  8367  007D' 2800'              	goto	u4885
  8368  007E' 0800'              	movf	??___xxtofl^(0+256),w
  8369  007F' 0480'              	iorwf	___xxtofl@arg^(0+256),f
  8370  0080' 0800'              	movf	(??___xxtofl+1)^(0+256),w
  8371  0081' 0480'              	iorwf	(___xxtofl@arg+1)^(0+256),f
  8372  0082' 0800'              	movf	(??___xxtofl+2)^(0+256),w
  8373  0083' 0480'              	iorwf	(___xxtofl@arg+2)^(0+256),f
  8374  0084' 0800'              	movf	(??___xxtofl+3)^(0+256),w
  8375  0085' 0480'              	iorwf	(___xxtofl@arg+3)^(0+256),f
  8376  0086' 0800'              	movf	___xxtofl@sign^(0+256),w
  8377  0087' 1D03               	btfss	3,2
  8378  0088' 1F80'              	btfss	(___xxtofl@val+3)^(0+256),7
  8379  0089' 2800'              	goto	l5003
  8380  008A' 1783'              	bsf	(___xxtofl@arg^(0+256)+3),7
  8381  008B'                    l5003:
  8382  008B' 0800'              	movf	(___xxtofl@arg+3)^(0+256),w
  8383  008C' 0080'              	movwf	(?___xxtofl+3)^(0+256)
  8384  008D' 0800'              	movf	(___xxtofl@arg+2)^(0+256),w
  8385  008E' 0080'              	movwf	(?___xxtofl+2)^(0+256)
  8386  008F' 0800'              	movf	(___xxtofl@arg+1)^(0+256),w
  8387  0090' 0080'              	movwf	(?___xxtofl+1)^(0+256)
  8388  0091' 0800'              	movf	___xxtofl@arg^(0+256),w
  8389  0092' 0080'              	movwf	?___xxtofl^(0+256)
  8390  0093' 0008               	return
  8391  0094'                    __end_of___xxtofl:
  8392                           
  8393                           	psect	text24
  8394  0000'                    __ptext24:	
  8395 ;; *************** function ___fltol *****************
  8396 ;; Defined at:
  8397 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  8398 ;; Parameters:    Size  Location     Type
  8399 ;;  f1              4    8[BANK3 ] unsigned char 
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;  exp1            1   79[BANK2 ] unsigned char 
  8402 ;;  sign1           1   78[BANK2 ] unsigned char 
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  4    8[BANK3 ] long 
  8405 ;; Registers used:
  8406 ;;		wreg, status,2, status,0
  8407 ;; Tracked objects:
  8408 ;;		On entry : 0/0
  8409 ;;		On exit  : 0/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8412 ;;      Params:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  8413 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8414 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  8415 ;;      Totals:         0       0       0       2       8       0       0       0       0       0       0       0       
      +0       0
  8416 ;;Total ram usage:       10 bytes
  8417 ;; Hardware stack levels used: 1
  8418 ;; Hardware stack levels required when called: 5
  8419 ;; This function calls:
  8420 ;;		Nothing
  8421 ;; This function is called by:
  8422 ;;		_set_DC
  8423 ;;		_cc_cv_mode
  8424 ;;		_scaling
  8425 ;;		_log_control
  8426 ;;		_fDISCHARGE
  8427 ;;		_fDC_res
  8428 ;;		_converter_settings
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432  0000'                    ___fltol:	
  8433                           ;psect for function ___fltol
  8434                           
  8435                           
  8436                           ;incstack = 0
  8437                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8438  0000' 1003               	clrc
  8439  0001' 0023               	movlb	3	; select bank3
  8440  0002' 0D00'              	rlf	(___fltol@f1+2)^(0+384),w
  8441  0003' 0D00'              	rlf	(___fltol@f1+3)^(0+384),w
  8442  0004' 0022               	movlb	2	; select bank2
  8443  0005' 0080'              	movwf	___fltol@exp1^(0+256)
  8444  0006' 0800'              	movf	___fltol@exp1^(0+256),w
  8445  0007' 1D03               	btfss	3,2
  8446  0008' 2800'              	goto	l4389
  8447  0009'                    l4385:
  8448  0009' 3000               	movlw	0
  8449  000A' 0023               	movlb	3	; select bank3
  8450  000B' 0080'              	movwf	(?___fltol+3)^(0+384)
  8451  000C' 3000               	movlw	0
  8452  000D' 0080'              	movwf	(?___fltol+2)^(0+384)
  8453  000E' 3000               	movlw	0
  8454  000F' 0080'              	movwf	(?___fltol+1)^(0+384)
  8455  0010' 3000               	movlw	0
  8456  0011' 0080'              	movwf	?___fltol^(0+384)
  8457  0012' 0008               	return
  8458  0013'                    l4389:
  8459  0013' 0023               	movlb	3	; select bank3
  8460  0014' 0800'              	movf	___fltol@f1^(0+384),w
  8461  0015' 0080'              	movwf	??___fltol^(0+384)
  8462  0016' 0800'              	movf	(___fltol@f1+1)^(0+384),w
  8463  0017' 0081'              	movwf	(??___fltol^(0+384)+1)
  8464  0018' 0800'              	movf	(___fltol@f1+2)^(0+384),w
  8465  0019' 0082'              	movwf	(??___fltol^(0+384)+2)
  8466  001A' 0800'              	movf	(___fltol@f1+3)^(0+384),w
  8467  001B' 0083'              	movwf	(??___fltol^(0+384)+3)
  8468  001C' 301F               	movlw	31
  8469  001D'                    u3635:
  8470  001D' 3683'              	lsrf	(??___fltol^(0+384)+3),f
  8471  001E' 0C82'              	rrf	(??___fltol^(0+384)+2),f
  8472  001F' 0C81'              	rrf	(??___fltol^(0+384)+1),f
  8473  0020' 0C80'              	rrf	??___fltol^(0+384),f
  8474  0021' 0B89               	decfsz	9,f
  8475  0022' 2800'              	goto	u3635
  8476  0023' 0800'              	movf	??___fltol^(0+384),w
  8477  0024' 0022               	movlb	2	; select bank2
  8478  0025' 0080'              	movwf	___fltol@sign1^(0+256)
  8479  0026' 0023               	movlb	3	; select bank3
  8480  0027' 1782'              	bsf	(___fltol@f1^(0+384)+2),7
  8481  0028' 30FF               	movlw	255
  8482  0029' 0580'              	andwf	___fltol@f1^(0+384),f
  8483  002A' 30FF               	movlw	255
  8484  002B' 0580'              	andwf	(___fltol@f1+1)^(0+384),f
  8485  002C' 30FF               	movlw	255
  8486  002D' 0580'              	andwf	(___fltol@f1+2)^(0+384),f
  8487  002E' 3000               	movlw	0
  8488  002F' 0580'              	andwf	(___fltol@f1+3)^(0+384),f
  8489  0030' 3096               	movlw	150
  8490  0031' 0022               	movlb	2	; select bank2
  8491  0032' 0280'              	subwf	___fltol@exp1^(0+256),f
  8492  0033' 1F80'              	btfss	___fltol@exp1^(0+256),7
  8493  0034' 2800'              	goto	l4407
  8494  0035' 0800'              	movf	___fltol@exp1^(0+256),w
  8495  0036' 3A80               	xorlw	128
  8496  0037' 3E97               	addlw	151
  8497  0038' 1C03               	btfss	3,0
  8498  0039' 2800'              	goto	l4385
  8499  003A'                    l4405:
  8500  003A' 3001               	movlw	1
  8501  003B'                    u3665:
  8502  003B' 0023               	movlb	3	; select bank3
  8503  003C' 3680'              	lsrf	(___fltol@f1+3)^(0+384),f
  8504  003D' 0C80'              	rrf	(___fltol@f1+2)^(0+384),f
  8505  003E' 0C80'              	rrf	(___fltol@f1+1)^(0+384),f
  8506  003F' 0C80'              	rrf	___fltol@f1^(0+384),f
  8507  0040' 0B89               	decfsz	9,f
  8508  0041' 2800'              	goto	u3665
  8509  0042' 3001               	movlw	1
  8510  0043' 0080'              	movwf	??___fltol^(0+384)
  8511  0044' 0800'              	movf	??___fltol^(0+384),w
  8512  0045' 0022               	movlb	2	; select bank2
  8513  0046' 0780'              	addwf	___fltol@exp1^(0+256),f
  8514  0047' 1903               	btfsc	3,2
  8515  0048' 2800'              	goto	l4415
  8516  0049' 2800'              	goto	l4405
  8517  004A'                    l4407:
  8518  004A' 3020               	movlw	32
  8519  004B' 0200'              	subwf	___fltol@exp1^(0+256),w
  8520  004C' 1803               	btfsc	3,0
  8521  004D' 2800'              	goto	l4385
  8522  004E'                    l1247:
  8523  004E' 0800'              	movf	___fltol@exp1^(0+256),w
  8524  004F' 1903               	btfsc	3,2
  8525  0050' 2800'              	goto	l4415
  8526  0051' 3001               	movlw	1
  8527  0052'                    u3695:
  8528  0052' 0023               	movlb	3	; select bank3
  8529  0053' 3580'              	lslf	___fltol@f1^(0+384),f
  8530  0054' 0D80'              	rlf	(___fltol@f1+1)^(0+384),f
  8531  0055' 0D80'              	rlf	(___fltol@f1+2)^(0+384),f
  8532  0056' 0D80'              	rlf	(___fltol@f1+3)^(0+384),f
  8533  0057' 0B89               	decfsz	9,f
  8534  0058' 2800'              	goto	u3695
  8535  0059' 3001               	movlw	1
  8536  005A' 0022               	movlb	2	; select bank2
  8537  005B' 0280'              	subwf	___fltol@exp1^(0+256),f
  8538  005C' 2800'              	goto	l1247
  8539  005D'                    l4415:
  8540  005D' 0800'              	movf	___fltol@sign1^(0+256),w
  8541  005E' 1903               	btfsc	3,2
  8542  005F' 0008               	return
  8543  0060' 0023               	movlb	3	; select bank3
  8544  0061' 0980'              	comf	___fltol@f1^(0+384),f
  8545  0062' 0980'              	comf	(___fltol@f1+1)^(0+384),f
  8546  0063' 0980'              	comf	(___fltol@f1+2)^(0+384),f
  8547  0064' 0980'              	comf	(___fltol@f1+3)^(0+384),f
  8548  0065' 0A80'              	incf	___fltol@f1^(0+384),f
  8549  0066' 1903               	skipnz
  8550  0067' 0A80'              	incf	(___fltol@f1+1)^(0+384),f
  8551  0068' 1903               	skipnz
  8552  0069' 0A80'              	incf	(___fltol@f1+2)^(0+384),f
  8553  006A' 1903               	skipnz
  8554  006B' 0A80'              	incf	(___fltol@f1+3)^(0+384),f
  8555  006C' 0008               	return
  8556  006D'                    __end_of___fltol:
  8557                           
  8558                           	psect	text25
  8559  0000'                    __ptext25:	
  8560 ;; *************** function ___flmul *****************
  8561 ;; Defined at:
  8562 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;  b               4   40[BANK2 ] long 
  8565 ;;  a               4   44[BANK2 ] long 
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;  prod            4   60[BANK2 ] struct .
  8568 ;;  grs             4   54[BANK2 ] unsigned long 
  8569 ;;  temp            2   64[BANK2 ] struct .
  8570 ;;  bexp            1   59[BANK2 ] unsigned char 
  8571 ;;  aexp            1   58[BANK2 ] unsigned char 
  8572 ;;  sign            1   53[BANK2 ] unsigned char 
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  4   40[BANK2 ] unsigned char 
  8575 ;; Registers used:
  8576 ;;		wreg, status,2, status,0, pclath, cstack
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/0
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8582 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  8583 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0
  8584 ;;      Temps:          0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  8585 ;;      Totals:         0       0       0      26       0       0       0       0       0       0       0       0       
      +0       0
  8586 ;;Total ram usage:       26 bytes
  8587 ;; Hardware stack levels used: 1
  8588 ;; Hardware stack levels required when called: 6
  8589 ;; This function calls:
  8590 ;;		__Umul8_16
  8591 ;; This function is called by:
  8592 ;;		_cc_cv_mode
  8593 ;;		_scaling
  8594 ;;		_fDISCHARGE
  8595 ;;		_fDC_res
  8596 ;;		_converter_settings
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600  0000'                    ___flmul:	
  8601                           ;psect for function ___flmul
  8602                           
  8603                           
  8604                           ;incstack = 0
  8605                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8606  0000' 0022               	movlb	2	; select bank2
  8607  0001' 0803'              	movf	(___flmul@b^(0+256)+3),w
  8608  0002' 3980               	andlw	128
  8609  0003' 0080'              	movwf	___flmul@sign^(0+256)
  8610  0004' 3503'              	lslf	(___flmul@b^(0+256)+3),w
  8611  0005' 0080'              	movwf	___flmul@bexp^(0+256)
  8612  0006' 1B82'              	btfsc	(___flmul@b^(0+256)+2),7
  8613  0007' 1400'              	bsf	___flmul@bexp^(0+256),0
  8614  0008' 0800'              	movf	___flmul@bexp^(0+256),w
  8615  0009' 1903               	btfsc	3,2
  8616  000A' 2800'              	goto	l4839
  8617  000B' 0A00'              	incf	___flmul@bexp^(0+256),w
  8618  000C' 1D03               	btfss	3,2
  8619  000D' 2800'              	goto	l4837
  8620  000E' 3000               	movlw	0
  8621  000F' 0080'              	movwf	(___flmul@b+3)^(0+256)
  8622  0010' 3000               	movlw	0
  8623  0011' 0080'              	movwf	(___flmul@b+2)^(0+256)
  8624  0012' 3000               	movlw	0
  8625  0013' 0080'              	movwf	(___flmul@b+1)^(0+256)
  8626  0014' 3000               	movlw	0
  8627  0015' 0080'              	movwf	___flmul@b^(0+256)
  8628  0016'                    l4837:
  8629  0016' 1782'              	bsf	(___flmul@b^(0+256)+2),7
  8630  0017' 2800'              	goto	l4841
  8631  0018'                    l4839:
  8632  0018' 3000               	movlw	0
  8633  0019' 0080'              	movwf	(___flmul@b+3)^(0+256)
  8634  001A' 3000               	movlw	0
  8635  001B' 0080'              	movwf	(___flmul@b+2)^(0+256)
  8636  001C' 3000               	movlw	0
  8637  001D' 0080'              	movwf	(___flmul@b+1)^(0+256)
  8638  001E' 3000               	movlw	0
  8639  001F' 0080'              	movwf	___flmul@b^(0+256)
  8640  0020'                    l4841:
  8641  0020' 0803'              	movf	(___flmul@a^(0+256)+3),w
  8642  0021' 3980               	andlw	128
  8643  0022' 0080'              	movwf	??___flmul^(0+256)
  8644  0023' 0800'              	movf	??___flmul^(0+256),w
  8645  0024' 0680'              	xorwf	___flmul@sign^(0+256),f
  8646  0025' 3503'              	lslf	(___flmul@a^(0+256)+3),w
  8647  0026' 0080'              	movwf	___flmul@aexp^(0+256)
  8648  0027' 1B82'              	btfsc	(___flmul@a^(0+256)+2),7
  8649  0028' 1400'              	bsf	___flmul@aexp^(0+256),0
  8650  0029' 0800'              	movf	___flmul@aexp^(0+256),w
  8651  002A' 1903               	btfsc	3,2
  8652  002B' 2800'              	goto	l4857
  8653  002C' 0A00'              	incf	___flmul@aexp^(0+256),w
  8654  002D' 1D03               	btfss	3,2
  8655  002E' 2800'              	goto	l4855
  8656  002F' 3000               	movlw	0
  8657  0030' 0080'              	movwf	(___flmul@a+3)^(0+256)
  8658  0031' 3000               	movlw	0
  8659  0032' 0080'              	movwf	(___flmul@a+2)^(0+256)
  8660  0033' 3000               	movlw	0
  8661  0034' 0080'              	movwf	(___flmul@a+1)^(0+256)
  8662  0035' 3000               	movlw	0
  8663  0036' 0080'              	movwf	___flmul@a^(0+256)
  8664  0037'                    l4855:
  8665  0037' 1782'              	bsf	(___flmul@a^(0+256)+2),7
  8666  0038' 2800'              	goto	l4859
  8667  0039'                    l4857:
  8668  0039' 3000               	movlw	0
  8669  003A' 0080'              	movwf	(___flmul@a+3)^(0+256)
  8670  003B' 3000               	movlw	0
  8671  003C' 0080'              	movwf	(___flmul@a+2)^(0+256)
  8672  003D' 3000               	movlw	0
  8673  003E' 0080'              	movwf	(___flmul@a+1)^(0+256)
  8674  003F' 3000               	movlw	0
  8675  0040' 0080'              	movwf	___flmul@a^(0+256)
  8676  0041'                    l4859:
  8677  0041' 0800'              	movf	___flmul@aexp^(0+256),w
  8678  0042' 1D03               	btfss	3,2
  8679  0043' 0800'              	movf	___flmul@bexp^(0+256),w
  8680  0044' 1D03               	btfss	3,2
  8681  0045' 2800'              	goto	l4867
  8682  0046' 3000               	movlw	0
  8683  0047' 0080'              	movwf	(?___flmul+3)^(0+256)
  8684  0048' 3000               	movlw	0
  8685  0049' 0080'              	movwf	(?___flmul+2)^(0+256)
  8686  004A' 3000               	movlw	0
  8687  004B' 0080'              	movwf	(?___flmul+1)^(0+256)
  8688  004C' 3000               	movlw	0
  8689  004D' 0080'              	movwf	?___flmul^(0+256)
  8690  004E' 0008               	return
  8691  004F'                    l4867:
  8692  004F' 0800'              	movf	___flmul@b^(0+256),w
  8693  0050' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  8694  0051' 0802'              	movf	(___flmul@a^(0+256)+2),w
  8695  0052' 3180' 2000' 3180'  	fcall	__Umul8_16
  8696  0055' 0022               	movlb	2	; select bank2
  8697  0056' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  8698  0057' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8699  0058' 0800'              	movf	?__Umul8_16^(0+256),w
  8700  0059' 0080'              	movwf	___flmul@temp^(0+256)
  8701  005A' 0800'              	movf	___flmul@temp^(0+256),w
  8702  005B' 0080'              	movwf	??___flmul^(0+256)
  8703  005C' 0181'              	clrf	(??___flmul^(0+256)+1)
  8704  005D' 0182'              	clrf	(??___flmul^(0+256)+2)
  8705  005E' 0183'              	clrf	(??___flmul^(0+256)+3)
  8706  005F' 0800'              	movf	(??___flmul+3)^(0+256),w
  8707  0060' 0080'              	movwf	(___flmul@grs+3)^(0+256)
  8708  0061' 0800'              	movf	(??___flmul+2)^(0+256),w
  8709  0062' 0080'              	movwf	(___flmul@grs+2)^(0+256)
  8710  0063' 0800'              	movf	(??___flmul+1)^(0+256),w
  8711  0064' 0080'              	movwf	(___flmul@grs+1)^(0+256)
  8712  0065' 0800'              	movf	??___flmul^(0+256),w
  8713  0066' 0080'              	movwf	___flmul@grs^(0+256)
  8714  0067' 0801'              	movf	(___flmul@temp^(0+256)+1),w
  8715  0068' 0080'              	movwf	??___flmul^(0+256)
  8716  0069' 0181'              	clrf	(??___flmul^(0+256)+1)
  8717  006A' 0182'              	clrf	(??___flmul^(0+256)+2)
  8718  006B' 0183'              	clrf	(??___flmul^(0+256)+3)
  8719  006C' 0800'              	movf	(??___flmul+3)^(0+256),w
  8720  006D' 0080'              	movwf	(___flmul@prod+3)^(0+256)
  8721  006E' 0800'              	movf	(??___flmul+2)^(0+256),w
  8722  006F' 0080'              	movwf	(___flmul@prod+2)^(0+256)
  8723  0070' 0800'              	movf	(??___flmul+1)^(0+256),w
  8724  0071' 0080'              	movwf	(___flmul@prod+1)^(0+256)
  8725  0072' 0800'              	movf	??___flmul^(0+256),w
  8726  0073' 0080'              	movwf	___flmul@prod^(0+256)
  8727  0074' 0801'              	movf	(___flmul@b^(0+256)+1),w
  8728  0075' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  8729  0076' 0801'              	movf	(___flmul@a^(0+256)+1),w
  8730  0077' 3180' 2000' 3180'  	fcall	__Umul8_16
  8731  007A' 0022               	movlb	2	; select bank2
  8732  007B' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  8733  007C' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8734  007D' 0800'              	movf	?__Umul8_16^(0+256),w
  8735  007E' 0080'              	movwf	___flmul@temp^(0+256)
  8736  007F' 0800'              	movf	___flmul@temp^(0+256),w
  8737  0080' 0080'              	movwf	??___flmul^(0+256)
  8738  0081' 0181'              	clrf	(??___flmul^(0+256)+1)
  8739  0082' 0182'              	clrf	(??___flmul^(0+256)+2)
  8740  0083' 0183'              	clrf	(??___flmul^(0+256)+3)
  8741  0084' 0800'              	movf	??___flmul^(0+256),w
  8742  0085' 0780'              	addwf	___flmul@grs^(0+256),f
  8743  0086' 0800'              	movf	(??___flmul+1)^(0+256),w
  8744  0087' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  8745  0088' 0800'              	movf	(??___flmul+2)^(0+256),w
  8746  0089' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  8747  008A' 0800'              	movf	(??___flmul+3)^(0+256),w
  8748  008B' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  8749  008C' 0801'              	movf	(___flmul@temp^(0+256)+1),w
  8750  008D' 0080'              	movwf	??___flmul^(0+256)
  8751  008E' 0181'              	clrf	(??___flmul^(0+256)+1)
  8752  008F' 0182'              	clrf	(??___flmul^(0+256)+2)
  8753  0090' 0183'              	clrf	(??___flmul^(0+256)+3)
  8754  0091' 0800'              	movf	??___flmul^(0+256),w
  8755  0092' 0780'              	addwf	___flmul@prod^(0+256),f
  8756  0093' 0800'              	movf	(??___flmul+1)^(0+256),w
  8757  0094' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  8758  0095' 0800'              	movf	(??___flmul+2)^(0+256),w
  8759  0096' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  8760  0097' 0800'              	movf	(??___flmul+3)^(0+256),w
  8761  0098' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  8762  0099' 0802'              	movf	(___flmul@b^(0+256)+2),w
  8763  009A' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  8764  009B' 0800'              	movf	___flmul@a^(0+256),w
  8765  009C' 3180' 2000' 3180'  	fcall	__Umul8_16
  8766  009F' 0022               	movlb	2	; select bank2
  8767  00A0' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  8768  00A1' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8769  00A2' 0800'              	movf	?__Umul8_16^(0+256),w
  8770  00A3' 0080'              	movwf	___flmul@temp^(0+256)
  8771  00A4' 0800'              	movf	___flmul@temp^(0+256),w
  8772  00A5' 0080'              	movwf	??___flmul^(0+256)
  8773  00A6' 0181'              	clrf	(??___flmul^(0+256)+1)
  8774  00A7' 0182'              	clrf	(??___flmul^(0+256)+2)
  8775  00A8' 0183'              	clrf	(??___flmul^(0+256)+3)
  8776  00A9' 0800'              	movf	??___flmul^(0+256),w
  8777  00AA' 0780'              	addwf	___flmul@grs^(0+256),f
  8778  00AB' 0800'              	movf	(??___flmul+1)^(0+256),w
  8779  00AC' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  8780  00AD' 0800'              	movf	(??___flmul+2)^(0+256),w
  8781  00AE' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  8782  00AF' 0800'              	movf	(??___flmul+3)^(0+256),w
  8783  00B0' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  8784  00B1' 0801'              	movf	(___flmul@temp^(0+256)+1),w
  8785  00B2' 0080'              	movwf	??___flmul^(0+256)
  8786  00B3' 0181'              	clrf	(??___flmul^(0+256)+1)
  8787  00B4' 0182'              	clrf	(??___flmul^(0+256)+2)
  8788  00B5' 0183'              	clrf	(??___flmul^(0+256)+3)
  8789  00B6' 0800'              	movf	??___flmul^(0+256),w
  8790  00B7' 0780'              	addwf	___flmul@prod^(0+256),f
  8791  00B8' 0800'              	movf	(??___flmul+1)^(0+256),w
  8792  00B9' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  8793  00BA' 0800'              	movf	(??___flmul+2)^(0+256),w
  8794  00BB' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  8795  00BC' 0800'              	movf	(??___flmul+3)^(0+256),w
  8796  00BD' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  8797  00BE' 3008               	movlw	8
  8798  00BF'                    u4595:
  8799  00BF' 3580'              	lslf	___flmul@grs^(0+256),f
  8800  00C0' 0D80'              	rlf	(___flmul@grs+1)^(0+256),f
  8801  00C1' 0D80'              	rlf	(___flmul@grs+2)^(0+256),f
  8802  00C2' 0D80'              	rlf	(___flmul@grs+3)^(0+256),f
  8803  00C3' 0B89               	decfsz	9,f
  8804  00C4' 2800'              	goto	u4595
  8805  00C5' 0801'              	movf	(___flmul@b^(0+256)+1),w
  8806  00C6' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  8807  00C7' 0800'              	movf	___flmul@a^(0+256),w
  8808  00C8' 3180' 2000' 3180'  	fcall	__Umul8_16
  8809  00CB' 0022               	movlb	2	; select bank2
  8810  00CC' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  8811  00CD' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8812  00CE' 0800'              	movf	?__Umul8_16^(0+256),w
  8813  00CF' 0080'              	movwf	___flmul@temp^(0+256)
  8814  00D0' 0800'              	movf	___flmul@temp^(0+256),w
  8815  00D1' 0780'              	addwf	___flmul@grs^(0+256),f
  8816  00D2' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  8817  00D3' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  8818  00D4' 3000               	movlw	0
  8819  00D5' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  8820  00D6' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  8821  00D7' 0800'              	movf	___flmul@b^(0+256),w
  8822  00D8' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  8823  00D9' 0801'              	movf	(___flmul@a^(0+256)+1),w
  8824  00DA' 3180' 2000' 3180'  	fcall	__Umul8_16
  8825  00DD' 0022               	movlb	2	; select bank2
  8826  00DE' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  8827  00DF' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8828  00E0' 0800'              	movf	?__Umul8_16^(0+256),w
  8829  00E1' 0080'              	movwf	___flmul@temp^(0+256)
  8830  00E2' 0800'              	movf	___flmul@temp^(0+256),w
  8831  00E3' 0780'              	addwf	___flmul@grs^(0+256),f
  8832  00E4' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  8833  00E5' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  8834  00E6' 3000               	movlw	0
  8835  00E7' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  8836  00E8' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  8837  00E9' 3008               	movlw	8
  8838  00EA'                    u4605:
  8839  00EA' 3580'              	lslf	___flmul@grs^(0+256),f
  8840  00EB' 0D80'              	rlf	(___flmul@grs+1)^(0+256),f
  8841  00EC' 0D80'              	rlf	(___flmul@grs+2)^(0+256),f
  8842  00ED' 0D80'              	rlf	(___flmul@grs+3)^(0+256),f
  8843  00EE' 0B89               	decfsz	9,f
  8844  00EF' 2800'              	goto	u4605
  8845  00F0' 0800'              	movf	___flmul@b^(0+256),w
  8846  00F1' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  8847  00F2' 0800'              	movf	___flmul@a^(0+256),w
  8848  00F3' 3180' 2000' 3180'  	fcall	__Umul8_16
  8849  00F6' 0022               	movlb	2	; select bank2
  8850  00F7' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  8851  00F8' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8852  00F9' 0800'              	movf	?__Umul8_16^(0+256),w
  8853  00FA' 0080'              	movwf	___flmul@temp^(0+256)
  8854  00FB' 0800'              	movf	___flmul@temp^(0+256),w
  8855  00FC' 0780'              	addwf	___flmul@grs^(0+256),f
  8856  00FD' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  8857  00FE' 3D80'              	addwfc	(___flmul@grs+1)^(0+256),f
  8858  00FF' 3000               	movlw	0
  8859  0100' 3D80'              	addwfc	(___flmul@grs+2)^(0+256),f
  8860  0101' 3D80'              	addwfc	(___flmul@grs+3)^(0+256),f
  8861  0102' 0801'              	movf	(___flmul@b^(0+256)+1),w
  8862  0103' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  8863  0104' 0802'              	movf	(___flmul@a^(0+256)+2),w
  8864  0105' 3180' 2000' 3180'  	fcall	__Umul8_16
  8865  0108' 0022               	movlb	2	; select bank2
  8866  0109' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  8867  010A' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8868  010B' 0800'              	movf	?__Umul8_16^(0+256),w
  8869  010C' 0080'              	movwf	___flmul@temp^(0+256)
  8870  010D' 0800'              	movf	___flmul@temp^(0+256),w
  8871  010E' 0780'              	addwf	___flmul@prod^(0+256),f
  8872  010F' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  8873  0110' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  8874  0111' 3000               	movlw	0
  8875  0112' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  8876  0113' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  8877  0114' 0802'              	movf	(___flmul@b^(0+256)+2),w
  8878  0115' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  8879  0116' 0801'              	movf	(___flmul@a^(0+256)+1),w
  8880  0117' 3180' 2000' 3180'  	fcall	__Umul8_16
  8881  011A' 0022               	movlb	2	; select bank2
  8882  011B' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  8883  011C' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8884  011D' 0800'              	movf	?__Umul8_16^(0+256),w
  8885  011E' 0080'              	movwf	___flmul@temp^(0+256)
  8886  011F' 0800'              	movf	___flmul@temp^(0+256),w
  8887  0120' 0780'              	addwf	___flmul@prod^(0+256),f
  8888  0121' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  8889  0122' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  8890  0123' 3000               	movlw	0
  8891  0124' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  8892  0125' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  8893  0126' 0802'              	movf	(___flmul@b^(0+256)+2),w
  8894  0127' 0080'              	movwf	__Umul8_16@multiplicand^(0+256)
  8895  0128' 0802'              	movf	(___flmul@a^(0+256)+2),w
  8896  0129' 3180' 2000' 3180'  	fcall	__Umul8_16
  8897  012C' 0022               	movlb	2	; select bank2
  8898  012D' 0800'              	movf	(?__Umul8_16+1)^(0+256),w
  8899  012E' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8900  012F' 0800'              	movf	?__Umul8_16^(0+256),w
  8901  0130' 0080'              	movwf	___flmul@temp^(0+256)
  8902  0131' 0800'              	movf	___flmul@temp^(0+256),w
  8903  0132' 0080'              	movwf	??___flmul^(0+256)
  8904  0133' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  8905  0134' 0081'              	movwf	(??___flmul^(0+256)+1)
  8906  0135' 0182'              	clrf	(??___flmul^(0+256)+2)
  8907  0136' 0183'              	clrf	(??___flmul^(0+256)+3)
  8908  0137' 3008               	movlw	8
  8909  0138'                    u4615:
  8910  0138' 3580'              	lslf	??___flmul^(0+256),f
  8911  0139' 0D81'              	rlf	(??___flmul^(0+256)+1),f
  8912  013A' 0D82'              	rlf	(??___flmul^(0+256)+2),f
  8913  013B' 0D83'              	rlf	(??___flmul^(0+256)+3),f
  8914  013C' 0B89               	decfsz	9,f
  8915  013D' 2800'              	goto	u4615
  8916  013E' 0800'              	movf	??___flmul^(0+256),w
  8917  013F' 0780'              	addwf	___flmul@prod^(0+256),f
  8918  0140' 0800'              	movf	(??___flmul+1)^(0+256),w
  8919  0141' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  8920  0142' 0800'              	movf	(??___flmul+2)^(0+256),w
  8921  0143' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  8922  0144' 0800'              	movf	(??___flmul+3)^(0+256),w
  8923  0145' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  8924  0146' 0800'              	movf	___flmul@grs^(0+256),w
  8925  0147' 0080'              	movwf	??___flmul^(0+256)
  8926  0148' 0800'              	movf	(___flmul@grs+1)^(0+256),w
  8927  0149' 0081'              	movwf	(??___flmul^(0+256)+1)
  8928  014A' 0800'              	movf	(___flmul@grs+2)^(0+256),w
  8929  014B' 0082'              	movwf	(??___flmul^(0+256)+2)
  8930  014C' 0800'              	movf	(___flmul@grs+3)^(0+256),w
  8931  014D' 0083'              	movwf	(??___flmul^(0+256)+3)
  8932  014E' 3018               	movlw	24
  8933  014F'                    u4625:
  8934  014F' 3683'              	lsrf	(??___flmul^(0+256)+3),f
  8935  0150' 0C82'              	rrf	(??___flmul^(0+256)+2),f
  8936  0151' 0C81'              	rrf	(??___flmul^(0+256)+1),f
  8937  0152' 0C80'              	rrf	??___flmul^(0+256),f
  8938  0153' 0B89               	decfsz	9,f
  8939  0154' 2800'              	goto	u4625
  8940  0155' 0800'              	movf	??___flmul^(0+256),w
  8941  0156' 0780'              	addwf	___flmul@prod^(0+256),f
  8942  0157' 0800'              	movf	(??___flmul+1)^(0+256),w
  8943  0158' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  8944  0159' 0800'              	movf	(??___flmul+2)^(0+256),w
  8945  015A' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  8946  015B' 0800'              	movf	(??___flmul+3)^(0+256),w
  8947  015C' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  8948  015D' 3008               	movlw	8
  8949  015E'                    u4635:
  8950  015E' 3580'              	lslf	___flmul@grs^(0+256),f
  8951  015F' 0D80'              	rlf	(___flmul@grs+1)^(0+256),f
  8952  0160' 0D80'              	rlf	(___flmul@grs+2)^(0+256),f
  8953  0161' 0D80'              	rlf	(___flmul@grs+3)^(0+256),f
  8954  0162' 0B89               	decfsz	9,f
  8955  0163' 2800'              	goto	u4635
  8956  0164' 0800'              	movf	___flmul@bexp^(0+256),w
  8957  0165' 0700'              	addwf	___flmul@aexp^(0+256),w
  8958  0166' 0080'              	movwf	??___flmul^(0+256)
  8959  0167' 0181'              	clrf	(??___flmul^(0+256)+1)
  8960  0168' 0D80'              	rlf	(??___flmul+1)^(0+256),f
  8961  0169' 0800'              	movf	??___flmul^(0+256),w
  8962  016A' 3E82               	addlw	130
  8963  016B' 0080'              	movwf	___flmul@temp^(0+256)
  8964  016C' 30FF               	movlw	255
  8965  016D' 3D00'              	addwfc	(??___flmul+1)^(0+256),w
  8966  016E' 0080'              	movwf	(___flmul@temp+1)^(0+256)
  8967  016F'                    l4919:
  8968  016F' 1B80'              	btfsc	(___flmul@prod+2)^(0+256),7
  8969  0170' 2800'              	goto	l4921
  8970  0171' 3001               	movlw	1
  8971  0172'                    u4645:
  8972  0172' 3580'              	lslf	___flmul@prod^(0+256),f
  8973  0173' 0D80'              	rlf	(___flmul@prod+1)^(0+256),f
  8974  0174' 0D80'              	rlf	(___flmul@prod+2)^(0+256),f
  8975  0175' 0D80'              	rlf	(___flmul@prod+3)^(0+256),f
  8976  0176' 0B89               	decfsz	9,f
  8977  0177' 2800'              	goto	u4645
  8978  0178' 1B80'              	btfsc	(___flmul@grs+3)^(0+256),7
  8979  0179' 1400'              	bsf	___flmul@prod^(0+256),0
  8980  017A' 3001               	movlw	1
  8981  017B'                    u4665:
  8982  017B' 3580'              	lslf	___flmul@grs^(0+256),f
  8983  017C' 0D80'              	rlf	(___flmul@grs+1)^(0+256),f
  8984  017D' 0D80'              	rlf	(___flmul@grs+2)^(0+256),f
  8985  017E' 0D80'              	rlf	(___flmul@grs+3)^(0+256),f
  8986  017F' 0B89               	decfsz	9,f
  8987  0180' 2800'              	goto	u4665
  8988  0181' 30FF               	movlw	255
  8989  0182' 0780'              	addwf	___flmul@temp^(0+256),f
  8990  0183' 30FF               	movlw	255
  8991  0184' 3D80'              	addwfc	(___flmul@temp+1)^(0+256),f
  8992  0185' 2800'              	goto	l4919
  8993  0186'                    l4921:
  8994  0186' 0180'              	clrf	___flmul@aexp^(0+256)
  8995  0187' 1F80'              	btfss	(___flmul@grs+3)^(0+256),7
  8996  0188' 2800'              	goto	l4931
  8997  0189' 30FF               	movlw	255
  8998  018A' 0500'              	andwf	___flmul@grs^(0+256),w
  8999  018B' 0080'              	movwf	??___flmul^(0+256)
  9000  018C' 30FF               	movlw	255
  9001  018D' 0500'              	andwf	(___flmul@grs+1)^(0+256),w
  9002  018E' 0081'              	movwf	(??___flmul^(0+256)+1)
  9003  018F' 30FF               	movlw	255
  9004  0190' 0500'              	andwf	(___flmul@grs+2)^(0+256),w
  9005  0191' 0082'              	movwf	(??___flmul^(0+256)+2)
  9006  0192' 307F               	movlw	127
  9007  0193' 0500'              	andwf	(___flmul@grs+3)^(0+256),w
  9008  0194' 0083'              	movwf	(??___flmul^(0+256)+3)
  9009  0195' 0800'              	movf	(??___flmul+3)^(0+256),w
  9010  0196' 0400'              	iorwf	(??___flmul+2)^(0+256),w
  9011  0197' 0400'              	iorwf	(??___flmul+1)^(0+256),w
  9012  0198' 0400'              	iorwf	??___flmul^(0+256),w
  9013  0199' 1903               	skipnz
  9014  019A' 1800'              	btfsc	___flmul@prod^(0+256),0
  9015  019B' 2800'              	goto	l4927
  9016  019C' 2800'              	goto	l4931
  9017  019D'                    l4927:
  9018  019D' 0180'              	clrf	___flmul@aexp^(0+256)
  9019  019E' 0A80'              	incf	___flmul@aexp^(0+256),f
  9020  019F'                    l4931:
  9021  019F' 0800'              	movf	___flmul@aexp^(0+256),w
  9022  01A0' 1903               	btfsc	3,2
  9023  01A1' 2800'              	goto	l4941
  9024  01A2' 3001               	movlw	1
  9025  01A3' 0780'              	addwf	___flmul@prod^(0+256),f
  9026  01A4' 3000               	movlw	0
  9027  01A5' 3D80'              	addwfc	(___flmul@prod+1)^(0+256),f
  9028  01A6' 3000               	movlw	0
  9029  01A7' 3D80'              	addwfc	(___flmul@prod+2)^(0+256),f
  9030  01A8' 3000               	movlw	0
  9031  01A9' 3D80'              	addwfc	(___flmul@prod+3)^(0+256),f
  9032  01AA' 1C00'              	btfss	(___flmul@prod+3)^(0+256),0
  9033  01AB' 2800'              	goto	l4941
  9034  01AC' 0800'              	movf	___flmul@prod^(0+256),w
  9035  01AD' 0080'              	movwf	??___flmul^(0+256)
  9036  01AE' 0800'              	movf	(___flmul@prod+1)^(0+256),w
  9037  01AF' 0081'              	movwf	(??___flmul^(0+256)+1)
  9038  01B0' 0800'              	movf	(___flmul@prod+2)^(0+256),w
  9039  01B1' 0082'              	movwf	(??___flmul^(0+256)+2)
  9040  01B2' 0800'              	movf	(___flmul@prod+3)^(0+256),w
  9041  01B3' 0083'              	movwf	(??___flmul^(0+256)+3)
  9042  01B4' 3001               	movlw	1
  9043  01B5' 0080'              	movwf	(??___flmul+4)^(0+256)
  9044  01B6'                    u4735:
  9045  01B6' 3783'              	asrf	(??___flmul^(0+256)+3),f
  9046  01B7' 0C82'              	rrf	(??___flmul^(0+256)+2),f
  9047  01B8' 0C81'              	rrf	(??___flmul^(0+256)+1),f
  9048  01B9' 0C80'              	rrf	??___flmul^(0+256),f
  9049  01BA' 0B80'              	decfsz	(??___flmul+4)^(0+256),f
  9050  01BB' 2800'              	goto	u4735
  9051  01BC' 0800'              	movf	(??___flmul+3)^(0+256),w
  9052  01BD' 0080'              	movwf	(___flmul@prod+3)^(0+256)
  9053  01BE' 0800'              	movf	(??___flmul+2)^(0+256),w
  9054  01BF' 0080'              	movwf	(___flmul@prod+2)^(0+256)
  9055  01C0' 0800'              	movf	(??___flmul+1)^(0+256),w
  9056  01C1' 0080'              	movwf	(___flmul@prod+1)^(0+256)
  9057  01C2' 0800'              	movf	??___flmul^(0+256),w
  9058  01C3' 0080'              	movwf	___flmul@prod^(0+256)
  9059  01C4' 3001               	movlw	1
  9060  01C5' 0780'              	addwf	___flmul@temp^(0+256),f
  9061  01C6' 3000               	movlw	0
  9062  01C7' 3D80'              	addwfc	(___flmul@temp+1)^(0+256),f
  9063  01C8'                    l4941:
  9064  01C8' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  9065  01C9' 3A80               	xorlw	128
  9066  01CA' 0080'              	movwf	??___flmul^(0+256)
  9067  01CB' 3080               	movlw	128
  9068  01CC' 0200'              	subwf	??___flmul^(0+256),w
  9069  01CD' 1D03               	skipz
  9070  01CE' 2800'              	goto	u4745
  9071  01CF' 30FF               	movlw	255
  9072  01D0' 0200'              	subwf	___flmul@temp^(0+256),w
  9073  01D1'                    u4745:
  9074  01D1' 1C03               	skipc
  9075  01D2' 2800'              	goto	l4945
  9076  01D3' 307F               	movlw	127
  9077  01D4' 0022               	movlb	2	; select bank2
  9078  01D5' 0080'              	movwf	(___flmul@prod+3)^(0+256)
  9079  01D6' 3080               	movlw	128
  9080  01D7' 0080'              	movwf	(___flmul@prod+2)^(0+256)
  9081  01D8' 3000               	movlw	0
  9082  01D9' 0080'              	movwf	(___flmul@prod+1)^(0+256)
  9083  01DA' 3000               	movlw	0
  9084  01DB' 0080'              	movwf	___flmul@prod^(0+256)
  9085  01DC' 2800'              	goto	l1455
  9086  01DD'                    l4945:
  9087  01DD' 0022               	movlb	2	; select bank2
  9088  01DE' 0800'              	movf	(___flmul@temp+1)^(0+256),w
  9089  01DF' 3A80               	xorlw	128
  9090  01E0' 0080'              	movwf	??___flmul^(0+256)
  9091  01E1' 3080               	movlw	128
  9092  01E2' 0200'              	subwf	??___flmul^(0+256),w
  9093  01E3' 1D03               	skipz
  9094  01E4' 2800'              	goto	u4755
  9095  01E5' 3001               	movlw	1
  9096  01E6' 0200'              	subwf	___flmul@temp^(0+256),w
  9097  01E7'                    u4755:
  9098  01E7' 1803               	skipnc
  9099  01E8' 2800'              	goto	l4951
  9100  01E9' 3000               	movlw	0
  9101  01EA' 0022               	movlb	2	; select bank2
  9102  01EB' 0080'              	movwf	(___flmul@prod+3)^(0+256)
  9103  01EC' 3000               	movlw	0
  9104  01ED' 0080'              	movwf	(___flmul@prod+2)^(0+256)
  9105  01EE' 3000               	movlw	0
  9106  01EF' 0080'              	movwf	(___flmul@prod+1)^(0+256)
  9107  01F0' 3000               	movlw	0
  9108  01F1' 0080'              	movwf	___flmul@prod^(0+256)
  9109  01F2' 0180'              	clrf	___flmul@sign^(0+256)
  9110  01F3' 2800'              	goto	l1455
  9111  01F4'                    l4951:
  9112  01F4' 0022               	movlb	2	; select bank2
  9113  01F5' 0800'              	movf	___flmul@temp^(0+256),w
  9114  01F6' 0080'              	movwf	___flmul@bexp^(0+256)
  9115  01F7' 30FF               	movlw	255
  9116  01F8' 0580'              	andwf	___flmul@prod^(0+256),f
  9117  01F9' 30FF               	movlw	255
  9118  01FA' 0580'              	andwf	(___flmul@prod+1)^(0+256),f
  9119  01FB' 307F               	movlw	127
  9120  01FC' 0580'              	andwf	(___flmul@prod+2)^(0+256),f
  9121  01FD' 3000               	movlw	0
  9122  01FE' 0580'              	andwf	(___flmul@prod+3)^(0+256),f
  9123  01FF' 1800'              	btfsc	___flmul@bexp^(0+256),0
  9124  0200' 1782'              	bsf	(___flmul@prod^(0+256)+2),7
  9125  0201' 3600'              	lsrf	___flmul@bexp^(0+256),w
  9126  0202' 0083'              	movwf	(___flmul@prod^(0+256)+3)
  9127  0203'                    l1455:
  9128  0203' 0800'              	movf	___flmul@sign^(0+256),w
  9129  0204' 0080'              	movwf	??___flmul^(0+256)
  9130  0205' 0800'              	movf	??___flmul^(0+256),w
  9131  0206' 0483'              	iorwf	(___flmul@prod^(0+256)+3),f
  9132  0207' 0800'              	movf	(___flmul@prod+3)^(0+256),w
  9133  0208' 0080'              	movwf	(?___flmul+3)^(0+256)
  9134  0209' 0800'              	movf	(___flmul@prod+2)^(0+256),w
  9135  020A' 0080'              	movwf	(?___flmul+2)^(0+256)
  9136  020B' 0800'              	movf	(___flmul@prod+1)^(0+256),w
  9137  020C' 0080'              	movwf	(?___flmul+1)^(0+256)
  9138  020D' 0800'              	movf	___flmul@prod^(0+256),w
  9139  020E' 0080'              	movwf	?___flmul^(0+256)
  9140  020F' 0008               	return
  9141  0210'                    __end_of___flmul:
  9142                           
  9143                           	psect	text26
  9144  0000'                    __ptext26:	
  9145 ;; *************** function __Umul8_16 *****************
  9146 ;; Defined at:
  9147 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8_16.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;  multiplier      1    wreg     unsigned char 
  9150 ;;  multiplicand    1    0[BANK2 ] unsigned char 
  9151 ;; Auto vars:     Size  Location     Type
  9152 ;;  multiplier      1    8[BANK2 ] unsigned char 
  9153 ;;  word_mpld       2    6[BANK2 ] unsigned int 
  9154 ;;  product         2    4[BANK2 ] unsigned int 
  9155 ;; Return value:  Size  Location     Type
  9156 ;;                  2    0[BANK2 ] unsigned int 
  9157 ;; Registers used:
  9158 ;;		wreg, status,2, status,0
  9159 ;; Tracked objects:
  9160 ;;		On entry : 0/0
  9161 ;;		On exit  : 0/0
  9162 ;;		Unchanged: 0/0
  9163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9164 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  9165 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  9166 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  9167 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0
  9168 ;;Total ram usage:        9 bytes
  9169 ;; Hardware stack levels used: 1
  9170 ;; Hardware stack levels required when called: 5
  9171 ;; This function calls:
  9172 ;;		Nothing
  9173 ;; This function is called by:
  9174 ;;		___flmul
  9175 ;; This function uses a non-reentrant model
  9176 ;;
  9177                           
  9178  0000'                    __Umul8_16:	
  9179                           ;psect for function __Umul8_16
  9180                           
  9181                           
  9182                           ;incstack = 0
  9183                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9184                           ;__Umul8_16@multiplier stored from wreg
  9185  0000' 0022               	movlb	2	; select bank2
  9186  0001' 0080'              	movwf	__Umul8_16@multiplier^(0+256)
  9187  0002' 0180'              	clrf	__Umul8_16@product^(0+256)
  9188  0003' 0180'              	clrf	(__Umul8_16@product+1)^(0+256)
  9189  0004' 0800'              	movf	__Umul8_16@multiplicand^(0+256),w
  9190  0005' 0080'              	movwf	??__Umul8_16^(0+256)
  9191  0006' 0181'              	clrf	(??__Umul8_16^(0+256)+1)
  9192  0007' 0800'              	movf	??__Umul8_16^(0+256),w
  9193  0008' 0080'              	movwf	__Umul8_16@word_mpld^(0+256)
  9194  0009' 0800'              	movf	(??__Umul8_16+1)^(0+256),w
  9195  000A' 0080'              	movwf	(__Umul8_16@word_mpld+1)^(0+256)
  9196  000B'                    l4423:
  9197  000B' 1C00'              	btfss	__Umul8_16@multiplier^(0+256),0
  9198  000C' 2800'              	goto	l1462
  9199  000D' 0800'              	movf	__Umul8_16@word_mpld^(0+256),w
  9200  000E' 0780'              	addwf	__Umul8_16@product^(0+256),f
  9201  000F' 0800'              	movf	(__Umul8_16@word_mpld+1)^(0+256),w
  9202  0010' 3D80'              	addwfc	(__Umul8_16@product+1)^(0+256),f
  9203  0011'                    l1462:
  9204  0011' 3001               	movlw	1
  9205  0012'                    u3735:
  9206  0012' 3580'              	lslf	__Umul8_16@word_mpld^(0+256),f
  9207  0013' 0D80'              	rlf	(__Umul8_16@word_mpld+1)^(0+256),f
  9208  0014' 0B89               	decfsz	9,f
  9209  0015' 2800'              	goto	u3735
  9210  0016' 1003               	clrc
  9211  0017' 0C80'              	rrf	__Umul8_16@multiplier^(0+256),f
  9212  0018' 0800'              	movf	__Umul8_16@multiplier^(0+256),w
  9213  0019' 1D03               	btfss	3,2
  9214  001A' 2800'              	goto	l4423
  9215  001B' 0800'              	movf	(__Umul8_16@product+1)^(0+256),w
  9216  001C' 0080'              	movwf	(?__Umul8_16+1)^(0+256)
  9217  001D' 0800'              	movf	__Umul8_16@product^(0+256),w
  9218  001E' 0080'              	movwf	?__Umul8_16^(0+256)
  9219  001F' 0008               	return
  9220  0020'                    __end_of__Umul8_16:
  9221                           
  9222                           	psect	text27
  9223  0000'                    __ptext27:	
  9224 ;; *************** function ___fldiv *****************
  9225 ;; Defined at:
  9226 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;  a               4   14[BANK2 ] unsigned int 
  9229 ;;  b               4   18[BANK2 ] unsigned int 
  9230 ;; Auto vars:     Size  Location     Type
  9231 ;;  grs             4   34[BANK2 ] unsigned long 
  9232 ;;  rem             4   27[BANK2 ] unsigned long 
  9233 ;;  new_exp         2   32[BANK2 ] int 
  9234 ;;  aexp            1   39[BANK2 ] unsigned char 
  9235 ;;  bexp            1   38[BANK2 ] unsigned char 
  9236 ;;  sign            1   31[BANK2 ] unsigned char 
  9237 ;; Return value:  Size  Location     Type
  9238 ;;                  4   14[BANK2 ] unsigned char 
  9239 ;; Registers used:
  9240 ;;		wreg, status,2, status,0
  9241 ;; Tracked objects:
  9242 ;;		On entry : 0/0
  9243 ;;		On exit  : 0/0
  9244 ;;		Unchanged: 0/0
  9245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9246 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  9247 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0
  9248 ;;      Temps:          0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;      Totals:         0       0       0      26       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;Total ram usage:       26 bytes
  9251 ;; Hardware stack levels used: 1
  9252 ;; Hardware stack levels required when called: 5
  9253 ;; This function calls:
  9254 ;;		Nothing
  9255 ;; This function is called by:
  9256 ;;		_cc_cv_mode
  9257 ;;		_scaling
  9258 ;;		_fDISCHARGE
  9259 ;;		_fDC_res
  9260 ;;		_converter_settings
  9261 ;; This function uses a non-reentrant model
  9262 ;;
  9263                           
  9264  0000'                    ___fldiv:	
  9265                           ;psect for function ___fldiv
  9266                           
  9267                           
  9268                           ;incstack = 0
  9269                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9270  0000' 0022               	movlb	2	; select bank2
  9271  0001' 0803'              	movf	(___fldiv@b^(0+256)+3),w
  9272  0002' 3980               	andlw	128
  9273  0003' 0080'              	movwf	___fldiv@sign^(0+256)
  9274  0004' 3503'              	lslf	(___fldiv@b^(0+256)+3),w
  9275  0005' 0080'              	movwf	___fldiv@bexp^(0+256)
  9276  0006' 1B82'              	btfsc	(___fldiv@b^(0+256)+2),7
  9277  0007' 1400'              	bsf	___fldiv@bexp^(0+256),0
  9278  0008' 0800'              	movf	___fldiv@bexp^(0+256),w
  9279  0009' 1903               	btfsc	3,2
  9280  000A' 2800'              	goto	l4701
  9281  000B' 0A00'              	incf	___fldiv@bexp^(0+256),w
  9282  000C' 1D03               	btfss	3,2
  9283  000D' 2800'              	goto	l4697
  9284  000E' 3000               	movlw	0
  9285  000F' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  9286  0010' 3000               	movlw	0
  9287  0011' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  9288  0012' 3000               	movlw	0
  9289  0013' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  9290  0014' 3000               	movlw	0
  9291  0015' 0080'              	movwf	___fldiv@b^(0+256)
  9292  0016'                    l4697:
  9293  0016' 1782'              	bsf	(___fldiv@b^(0+256)+2),7
  9294  0017' 0183'              	clrf	(___fldiv@b^(0+256)+3)
  9295  0018' 2800'              	goto	l4703
  9296  0019'                    l4701:
  9297  0019' 3000               	movlw	0
  9298  001A' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  9299  001B' 3000               	movlw	0
  9300  001C' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  9301  001D' 3000               	movlw	0
  9302  001E' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  9303  001F' 3000               	movlw	0
  9304  0020' 0080'              	movwf	___fldiv@b^(0+256)
  9305  0021'                    l4703:
  9306  0021' 0803'              	movf	(___fldiv@a^(0+256)+3),w
  9307  0022' 3980               	andlw	128
  9308  0023' 0080'              	movwf	??___fldiv^(0+256)
  9309  0024' 0800'              	movf	??___fldiv^(0+256),w
  9310  0025' 0680'              	xorwf	___fldiv@sign^(0+256),f
  9311  0026' 3503'              	lslf	(___fldiv@a^(0+256)+3),w
  9312  0027' 0080'              	movwf	___fldiv@aexp^(0+256)
  9313  0028' 1B82'              	btfsc	(___fldiv@a^(0+256)+2),7
  9314  0029' 1400'              	bsf	___fldiv@aexp^(0+256),0
  9315  002A' 0800'              	movf	___fldiv@aexp^(0+256),w
  9316  002B' 1903               	btfsc	3,2
  9317  002C' 2800'              	goto	l4721
  9318  002D' 0A00'              	incf	___fldiv@aexp^(0+256),w
  9319  002E' 1D03               	btfss	3,2
  9320  002F' 2800'              	goto	l4717
  9321  0030' 3000               	movlw	0
  9322  0031' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  9323  0032' 3000               	movlw	0
  9324  0033' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  9325  0034' 3000               	movlw	0
  9326  0035' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  9327  0036' 3000               	movlw	0
  9328  0037' 0080'              	movwf	___fldiv@a^(0+256)
  9329  0038'                    l4717:
  9330  0038' 1782'              	bsf	(___fldiv@a^(0+256)+2),7
  9331  0039' 0183'              	clrf	(___fldiv@a^(0+256)+3)
  9332  003A' 2800'              	goto	l1403
  9333  003B'                    l4721:
  9334  003B' 3000               	movlw	0
  9335  003C' 0080'              	movwf	(___fldiv@a+3)^(0+256)
  9336  003D' 3000               	movlw	0
  9337  003E' 0080'              	movwf	(___fldiv@a+2)^(0+256)
  9338  003F' 3000               	movlw	0
  9339  0040' 0080'              	movwf	(___fldiv@a+1)^(0+256)
  9340  0041' 3000               	movlw	0
  9341  0042' 0080'              	movwf	___fldiv@a^(0+256)
  9342  0043'                    l1403:
  9343  0043' 0800'              	movf	(___fldiv@a+3)^(0+256),w
  9344  0044' 0400'              	iorwf	(___fldiv@a+2)^(0+256),w
  9345  0045' 0400'              	iorwf	(___fldiv@a+1)^(0+256),w
  9346  0046' 0400'              	iorwf	___fldiv@a^(0+256),w
  9347  0047' 1D03               	skipz
  9348  0048' 2800'              	goto	l4731
  9349  0049' 3000               	movlw	0
  9350  004A' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  9351  004B' 3000               	movlw	0
  9352  004C' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  9353  004D' 3000               	movlw	0
  9354  004E' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  9355  004F' 3000               	movlw	0
  9356  0050' 0080'              	movwf	___fldiv@b^(0+256)
  9357  0051' 3080               	movlw	128
  9358  0052' 0482'              	iorwf	(___fldiv@b^(0+256)+2),f
  9359  0053' 307F               	movlw	127
  9360  0054' 0482'              	iorwf	((___fldiv@b+1)^(0+256)+2),f
  9361  0055'                    L8:
  9362  0055' 0800'              	movf	___fldiv@sign^(0+256),w
  9363  0056' 0080'              	movwf	??___fldiv^(0+256)
  9364  0057' 0800'              	movf	??___fldiv^(0+256),w
  9365  0058' 0483'              	iorwf	(___fldiv@b^(0+256)+3),f
  9366  0059' 0800'              	movf	(___fldiv@b+3)^(0+256),w
  9367  005A' 0080'              	movwf	(?___fldiv+3)^(0+256)
  9368  005B' 0800'              	movf	(___fldiv@b+2)^(0+256),w
  9369  005C' 0080'              	movwf	(?___fldiv+2)^(0+256)
  9370  005D' 0800'              	movf	(___fldiv@b+1)^(0+256),w
  9371  005E' 0080'              	movwf	(?___fldiv+1)^(0+256)
  9372  005F' 0800'              	movf	___fldiv@b^(0+256),w
  9373  0060' 0080'              	movwf	?___fldiv^(0+256)
  9374  0061' 0008               	return
  9375  0062'                    l4731:
  9376  0062' 0800'              	movf	___fldiv@bexp^(0+256),w
  9377  0063' 1D03               	btfss	3,2
  9378  0064' 2800'              	goto	l4737
  9379  0065' 3000               	movlw	0
  9380  0066' 0080'              	movwf	(?___fldiv+3)^(0+256)
  9381  0067' 3000               	movlw	0
  9382  0068' 0080'              	movwf	(?___fldiv+2)^(0+256)
  9383  0069' 3000               	movlw	0
  9384  006A' 0080'              	movwf	(?___fldiv+1)^(0+256)
  9385  006B' 3000               	movlw	0
  9386  006C' 0080'              	movwf	?___fldiv^(0+256)
  9387  006D' 0008               	return
  9388  006E'                    l4737:
  9389  006E' 0800'              	movf	___fldiv@bexp^(0+256),w
  9390  006F' 0080'              	movwf	??___fldiv^(0+256)
  9391  0070' 0181'              	clrf	(??___fldiv^(0+256)+1)
  9392  0071' 0800'              	movf	(??___fldiv+1)^(0+256),w
  9393  0072' 0081'              	movwf	((??___fldiv+2)^(0+256)+1)
  9394  0073' 0800'              	movf	___fldiv@aexp^(0+256),w
  9395  0074' 0200'              	subwf	??___fldiv^(0+256),w
  9396  0075' 0080'              	movwf	(??___fldiv+2)^(0+256)
  9397  0076' 1C03               	skipc
  9398  0077' 0381'              	decf	((??___fldiv+2)^(0+256)+1),f
  9399  0078' 0800'              	movf	(??___fldiv+2)^(0+256),w
  9400  0079' 3E7F               	addlw	127
  9401  007A' 0080'              	movwf	___fldiv@new_exp^(0+256)
  9402  007B' 3000               	movlw	0
  9403  007C' 3D00'              	addwfc	(??___fldiv+3)^(0+256),w
  9404  007D' 0080'              	movwf	(___fldiv@new_exp+1)^(0+256)
  9405  007E' 0800'              	movf	(___fldiv@b+3)^(0+256),w
  9406  007F' 0080'              	movwf	(___fldiv@rem+3)^(0+256)
  9407  0080' 0800'              	movf	(___fldiv@b+2)^(0+256),w
  9408  0081' 0080'              	movwf	(___fldiv@rem+2)^(0+256)
  9409  0082' 0800'              	movf	(___fldiv@b+1)^(0+256),w
  9410  0083' 0080'              	movwf	(___fldiv@rem+1)^(0+256)
  9411  0084' 0800'              	movf	___fldiv@b^(0+256),w
  9412  0085' 0080'              	movwf	___fldiv@rem^(0+256)
  9413  0086' 3000               	movlw	0
  9414  0087' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  9415  0088' 3000               	movlw	0
  9416  0089' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  9417  008A' 3000               	movlw	0
  9418  008B' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  9419  008C' 3000               	movlw	0
  9420  008D' 0080'              	movwf	___fldiv@b^(0+256)
  9421  008E' 3000               	movlw	0
  9422  008F' 0080'              	movwf	(___fldiv@grs+3)^(0+256)
  9423  0090' 3000               	movlw	0
  9424  0091' 0080'              	movwf	(___fldiv@grs+2)^(0+256)
  9425  0092' 3000               	movlw	0
  9426  0093' 0080'              	movwf	(___fldiv@grs+1)^(0+256)
  9427  0094' 3000               	movlw	0
  9428  0095' 0080'              	movwf	___fldiv@grs^(0+256)
  9429  0096' 0180'              	clrf	___fldiv@aexp^(0+256)
  9430  0097'                    l4765:
  9431  0097' 301A               	movlw	26
  9432  0098' 0200'              	subwf	___fldiv@aexp^(0+256),w
  9433  0099' 1803               	btfsc	3,0
  9434  009A' 2800'              	goto	l4767
  9435  009B' 0800'              	movf	___fldiv@aexp^(0+256),w
  9436  009C' 1903               	btfsc	3,2
  9437  009D' 2800'              	goto	l4757
  9438  009E' 3001               	movlw	1
  9439  009F'                    u4315:
  9440  009F' 3580'              	lslf	___fldiv@rem^(0+256),f
  9441  00A0' 0D80'              	rlf	(___fldiv@rem+1)^(0+256),f
  9442  00A1' 0D80'              	rlf	(___fldiv@rem+2)^(0+256),f
  9443  00A2' 0D80'              	rlf	(___fldiv@rem+3)^(0+256),f
  9444  00A3' 0B89               	decfsz	9,f
  9445  00A4' 2800'              	goto	u4315
  9446  00A5' 3001               	movlw	1
  9447  00A6'                    u4325:
  9448  00A6' 3580'              	lslf	___fldiv@b^(0+256),f
  9449  00A7' 0D80'              	rlf	(___fldiv@b+1)^(0+256),f
  9450  00A8' 0D80'              	rlf	(___fldiv@b+2)^(0+256),f
  9451  00A9' 0D80'              	rlf	(___fldiv@b+3)^(0+256),f
  9452  00AA' 0B89               	decfsz	9,f
  9453  00AB' 2800'              	goto	u4325
  9454  00AC' 1B80'              	btfsc	(___fldiv@grs+3)^(0+256),7
  9455  00AD' 1400'              	bsf	___fldiv@b^(0+256),0
  9456  00AE' 3001               	movlw	1
  9457  00AF'                    u4345:
  9458  00AF' 3580'              	lslf	___fldiv@grs^(0+256),f
  9459  00B0' 0D80'              	rlf	(___fldiv@grs+1)^(0+256),f
  9460  00B1' 0D80'              	rlf	(___fldiv@grs+2)^(0+256),f
  9461  00B2' 0D80'              	rlf	(___fldiv@grs+3)^(0+256),f
  9462  00B3' 0B89               	decfsz	9,f
  9463  00B4' 2800'              	goto	u4345
  9464  00B5'                    l4757:
  9465  00B5' 0800'              	movf	(___fldiv@a+3)^(0+256),w
  9466  00B6' 0200'              	subwf	(___fldiv@rem+3)^(0+256),w
  9467  00B7' 1D03               	skipz
  9468  00B8' 2800'              	goto	u4355
  9469  00B9' 0800'              	movf	(___fldiv@a+2)^(0+256),w
  9470  00BA' 0200'              	subwf	(___fldiv@rem+2)^(0+256),w
  9471  00BB' 1D03               	skipz
  9472  00BC' 2800'              	goto	u4355
  9473  00BD' 0800'              	movf	(___fldiv@a+1)^(0+256),w
  9474  00BE' 0200'              	subwf	(___fldiv@rem+1)^(0+256),w
  9475  00BF' 1D03               	skipz
  9476  00C0' 2800'              	goto	u4355
  9477  00C1' 0800'              	movf	___fldiv@a^(0+256),w
  9478  00C2' 0200'              	subwf	___fldiv@rem^(0+256),w
  9479  00C3'                    u4355:
  9480  00C3' 1C03               	skipc
  9481  00C4' 2800'              	goto	l4763
  9482  00C5' 1703'              	bsf	(___fldiv@grs^(0+256)+3),6
  9483  00C6' 0800'              	movf	___fldiv@a^(0+256),w
  9484  00C7' 0280'              	subwf	___fldiv@rem^(0+256),f
  9485  00C8' 0800'              	movf	(___fldiv@a+1)^(0+256),w
  9486  00C9' 3B80'              	subwfb	(___fldiv@rem+1)^(0+256),f
  9487  00CA' 0800'              	movf	(___fldiv@a+2)^(0+256),w
  9488  00CB' 3B80'              	subwfb	(___fldiv@rem+2)^(0+256),f
  9489  00CC' 0800'              	movf	(___fldiv@a+3)^(0+256),w
  9490  00CD' 3B80'              	subwfb	(___fldiv@rem+3)^(0+256),f
  9491  00CE'                    l4763:
  9492  00CE' 3001               	movlw	1
  9493  00CF' 0080'              	movwf	??___fldiv^(0+256)
  9494  00D0' 0800'              	movf	??___fldiv^(0+256),w
  9495  00D1' 0780'              	addwf	___fldiv@aexp^(0+256),f
  9496  00D2' 2800'              	goto	l4765
  9497  00D3'                    l4767:
  9498  00D3' 0800'              	movf	(___fldiv@rem+3)^(0+256),w
  9499  00D4' 0400'              	iorwf	(___fldiv@rem+2)^(0+256),w
  9500  00D5' 0400'              	iorwf	(___fldiv@rem+1)^(0+256),w
  9501  00D6' 0400'              	iorwf	___fldiv@rem^(0+256),w
  9502  00D7' 1D03               	btfss	3,2
  9503  00D8' 1400'              	bsf	___fldiv@grs^(0+256),0
  9504  00D9'                    l4781:
  9505  00D9' 1B80'              	btfsc	(___fldiv@b+2)^(0+256),7
  9506  00DA' 2800'              	goto	l4783
  9507  00DB' 3001               	movlw	1
  9508  00DC'                    u4385:
  9509  00DC' 3580'              	lslf	___fldiv@b^(0+256),f
  9510  00DD' 0D80'              	rlf	(___fldiv@b+1)^(0+256),f
  9511  00DE' 0D80'              	rlf	(___fldiv@b+2)^(0+256),f
  9512  00DF' 0D80'              	rlf	(___fldiv@b+3)^(0+256),f
  9513  00E0' 0B89               	decfsz	9,f
  9514  00E1' 2800'              	goto	u4385
  9515  00E2' 1B80'              	btfsc	(___fldiv@grs+3)^(0+256),7
  9516  00E3' 1400'              	bsf	___fldiv@b^(0+256),0
  9517  00E4' 3001               	movlw	1
  9518  00E5'                    u4405:
  9519  00E5' 3580'              	lslf	___fldiv@grs^(0+256),f
  9520  00E6' 0D80'              	rlf	(___fldiv@grs+1)^(0+256),f
  9521  00E7' 0D80'              	rlf	(___fldiv@grs+2)^(0+256),f
  9522  00E8' 0D80'              	rlf	(___fldiv@grs+3)^(0+256),f
  9523  00E9' 0B89               	decfsz	9,f
  9524  00EA' 2800'              	goto	u4405
  9525  00EB' 30FF               	movlw	255
  9526  00EC' 0780'              	addwf	___fldiv@new_exp^(0+256),f
  9527  00ED' 30FF               	movlw	255
  9528  00EE' 3D80'              	addwfc	(___fldiv@new_exp+1)^(0+256),f
  9529  00EF' 2800'              	goto	l4781
  9530  00F0'                    l4783:
  9531  00F0' 0180'              	clrf	___fldiv@aexp^(0+256)
  9532  00F1' 1F80'              	btfss	(___fldiv@grs+3)^(0+256),7
  9533  00F2' 2800'              	goto	l4793
  9534  00F3' 30FF               	movlw	255
  9535  00F4' 0500'              	andwf	___fldiv@grs^(0+256),w
  9536  00F5' 0080'              	movwf	??___fldiv^(0+256)
  9537  00F6' 30FF               	movlw	255
  9538  00F7' 0500'              	andwf	(___fldiv@grs+1)^(0+256),w
  9539  00F8' 0081'              	movwf	(??___fldiv^(0+256)+1)
  9540  00F9' 30FF               	movlw	255
  9541  00FA' 0500'              	andwf	(___fldiv@grs+2)^(0+256),w
  9542  00FB' 0082'              	movwf	(??___fldiv^(0+256)+2)
  9543  00FC' 307F               	movlw	127
  9544  00FD' 0500'              	andwf	(___fldiv@grs+3)^(0+256),w
  9545  00FE' 0083'              	movwf	(??___fldiv^(0+256)+3)
  9546  00FF' 0800'              	movf	(??___fldiv+3)^(0+256),w
  9547  0100' 0400'              	iorwf	(??___fldiv+2)^(0+256),w
  9548  0101' 0400'              	iorwf	(??___fldiv+1)^(0+256),w
  9549  0102' 0400'              	iorwf	??___fldiv^(0+256),w
  9550  0103' 1903               	skipnz
  9551  0104' 1800'              	btfsc	___fldiv@b^(0+256),0
  9552  0105' 2800'              	goto	l4789
  9553  0106' 2800'              	goto	l4793
  9554  0107'                    l4789:
  9555  0107' 0180'              	clrf	___fldiv@aexp^(0+256)
  9556  0108' 0A80'              	incf	___fldiv@aexp^(0+256),f
  9557  0109'                    l4793:
  9558  0109' 0800'              	movf	___fldiv@aexp^(0+256),w
  9559  010A' 1903               	btfsc	3,2
  9560  010B' 2800'              	goto	l4803
  9561  010C' 3001               	movlw	1
  9562  010D' 0780'              	addwf	___fldiv@b^(0+256),f
  9563  010E' 3000               	movlw	0
  9564  010F' 3D80'              	addwfc	(___fldiv@b+1)^(0+256),f
  9565  0110' 3000               	movlw	0
  9566  0111' 3D80'              	addwfc	(___fldiv@b+2)^(0+256),f
  9567  0112' 3000               	movlw	0
  9568  0113' 3D80'              	addwfc	(___fldiv@b+3)^(0+256),f
  9569  0114' 1C00'              	btfss	(___fldiv@b+3)^(0+256),0
  9570  0115' 2800'              	goto	l4803
  9571  0116' 0800'              	movf	___fldiv@b^(0+256),w
  9572  0117' 0080'              	movwf	??___fldiv^(0+256)
  9573  0118' 0800'              	movf	(___fldiv@b+1)^(0+256),w
  9574  0119' 0081'              	movwf	(??___fldiv^(0+256)+1)
  9575  011A' 0800'              	movf	(___fldiv@b+2)^(0+256),w
  9576  011B' 0082'              	movwf	(??___fldiv^(0+256)+2)
  9577  011C' 0800'              	movf	(___fldiv@b+3)^(0+256),w
  9578  011D' 0083'              	movwf	(??___fldiv^(0+256)+3)
  9579  011E' 3001               	movlw	1
  9580  011F' 0080'              	movwf	(??___fldiv+4)^(0+256)
  9581  0120'                    u4475:
  9582  0120' 3783'              	asrf	(??___fldiv^(0+256)+3),f
  9583  0121' 0C82'              	rrf	(??___fldiv^(0+256)+2),f
  9584  0122' 0C81'              	rrf	(??___fldiv^(0+256)+1),f
  9585  0123' 0C80'              	rrf	??___fldiv^(0+256),f
  9586  0124' 0B80'              	decfsz	(??___fldiv+4)^(0+256),f
  9587  0125' 2800'              	goto	u4475
  9588  0126' 0800'              	movf	(??___fldiv+3)^(0+256),w
  9589  0127' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  9590  0128' 0800'              	movf	(??___fldiv+2)^(0+256),w
  9591  0129' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  9592  012A' 0800'              	movf	(??___fldiv+1)^(0+256),w
  9593  012B' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  9594  012C' 0800'              	movf	??___fldiv^(0+256),w
  9595  012D' 0080'              	movwf	___fldiv@b^(0+256)
  9596  012E' 3001               	movlw	1
  9597  012F' 0780'              	addwf	___fldiv@new_exp^(0+256),f
  9598  0130' 3000               	movlw	0
  9599  0131' 3D80'              	addwfc	(___fldiv@new_exp+1)^(0+256),f
  9600  0132'                    l4803:
  9601  0132' 0800'              	movf	(___fldiv@new_exp+1)^(0+256),w
  9602  0133' 3A80               	xorlw	128
  9603  0134' 0080'              	movwf	??___fldiv^(0+256)
  9604  0135' 3080               	movlw	128
  9605  0136' 0200'              	subwf	??___fldiv^(0+256),w
  9606  0137' 1D03               	skipz
  9607  0138' 2800'              	goto	u4485
  9608  0139' 30FF               	movlw	255
  9609  013A' 0200'              	subwf	___fldiv@new_exp^(0+256),w
  9610  013B'                    u4485:
  9611  013B' 1C03               	skipc
  9612  013C' 2800'              	goto	l1424
  9613  013D' 30FF               	movlw	255
  9614  013E' 0022               	movlb	2	; select bank2
  9615  013F' 0080'              	movwf	___fldiv@new_exp^(0+256)
  9616  0140' 3000               	movlw	0
  9617  0141' 0081'              	movwf	(___fldiv@new_exp^(0+256)+1)
  9618  0142' 3000               	movlw	0
  9619  0143' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  9620  0144' 3000               	movlw	0
  9621  0145' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  9622  0146' 3000               	movlw	0
  9623  0147' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  9624  0148' 3000               	movlw	0
  9625  0149' 0080'              	movwf	___fldiv@b^(0+256)
  9626  014A'                    l1424:
  9627  014A' 0022               	movlb	2	; select bank2
  9628  014B' 0800'              	movf	(___fldiv@new_exp+1)^(0+256),w
  9629  014C' 3A80               	xorlw	128
  9630  014D' 0080'              	movwf	??___fldiv^(0+256)
  9631  014E' 3080               	movlw	128
  9632  014F' 0200'              	subwf	??___fldiv^(0+256),w
  9633  0150' 1D03               	skipz
  9634  0151' 2800'              	goto	u4495
  9635  0152' 3001               	movlw	1
  9636  0153' 0200'              	subwf	___fldiv@new_exp^(0+256),w
  9637  0154'                    u4495:
  9638  0154' 1803               	skipnc
  9639  0155' 2800'              	goto	l1425
  9640  0156' 0022               	movlb	2	; select bank2
  9641  0157' 0180'              	clrf	___fldiv@new_exp^(0+256)
  9642  0158' 0180'              	clrf	(___fldiv@new_exp+1)^(0+256)
  9643  0159' 3000               	movlw	0
  9644  015A' 0080'              	movwf	(___fldiv@b+3)^(0+256)
  9645  015B' 3000               	movlw	0
  9646  015C' 0080'              	movwf	(___fldiv@b+2)^(0+256)
  9647  015D' 3000               	movlw	0
  9648  015E' 0080'              	movwf	(___fldiv@b+1)^(0+256)
  9649  015F' 3000               	movlw	0
  9650  0160' 0080'              	movwf	___fldiv@b^(0+256)
  9651  0161' 0180'              	clrf	___fldiv@sign^(0+256)
  9652  0162'                    l1425:
  9653  0162' 0022               	movlb	2	; select bank2
  9654  0163' 0800'              	movf	___fldiv@new_exp^(0+256),w
  9655  0164' 0080'              	movwf	___fldiv@bexp^(0+256)
  9656  0165' 1C00'              	btfss	___fldiv@bexp^(0+256),0
  9657  0166' 2800'              	goto	l4817
  9658  0167' 1782'              	bsf	(___fldiv@b^(0+256)+2),7
  9659  0168' 2800'              	goto	l1427
  9660  0169'                    l4817:
  9661  0169' 307F               	movlw	127
  9662  016A' 0080'              	movwf	??___fldiv^(0+256)
  9663  016B' 0800'              	movf	??___fldiv^(0+256),w
  9664  016C' 0582'              	andwf	(___fldiv@b^(0+256)+2),f
  9665  016D'                    l1427:
  9666  016D' 3600'              	lsrf	___fldiv@bexp^(0+256),w
  9667  016E' 0083'              	movwf	(___fldiv@b^(0+256)+3)
  9668  016F' 2800'              	goto	L8
  9669  0170'                    __end_of___fldiv:
  9670                           
  9671                           	psect	text28
  9672  0000'                    __ptext28:	
  9673 ;; *************** function ___fladd *****************
  9674 ;; Defined at:
  9675 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9676 ;; Parameters:    Size  Location     Type
  9677 ;;  b               4   66[BANK2 ] unsigned char 
  9678 ;;  a               4   70[BANK2 ] unsigned char 
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;  grs             1   77[BANK2 ] unsigned char 
  9681 ;;  bexp            1   76[BANK2 ] unsigned char 
  9682 ;;  aexp            1   75[BANK2 ] unsigned char 
  9683 ;;  signs           1   74[BANK2 ] unsigned char 
  9684 ;; Return value:  Size  Location     Type
  9685 ;;                  4   66[BANK2 ] unsigned char 
  9686 ;; Registers used:
  9687 ;;		wreg, status,2, status,0
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9693 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  9694 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9695 ;;      Temps:          0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
  9696 ;;      Totals:         0       0       0      12       8       0       0       0       0       0       0       0       
      +0       0
  9697 ;;Total ram usage:       20 bytes
  9698 ;; Hardware stack levels used: 1
  9699 ;; Hardware stack levels required when called: 5
  9700 ;; This function calls:
  9701 ;;		Nothing
  9702 ;; This function is called by:
  9703 ;;		_cc_cv_mode
  9704 ;;		_scaling
  9705 ;;		_fDISCHARGE
  9706 ;;		_fDC_res
  9707 ;;		_converter_settings
  9708 ;; This function uses a non-reentrant model
  9709 ;;
  9710                           
  9711  0000'                    ___fladd:	
  9712                           ;psect for function ___fladd
  9713                           
  9714                           
  9715                           ;incstack = 0
  9716                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  9717  0000' 0022               	movlb	2	; select bank2
  9718  0001' 0803'              	movf	(___fladd@b^(0+256)+3),w
  9719  0002' 3980               	andlw	128
  9720  0003' 0080'              	movwf	___fladd@signs^(0+256)
  9721  0004' 3503'              	lslf	(___fladd@b^(0+256)+3),w
  9722  0005' 0080'              	movwf	___fladd@bexp^(0+256)
  9723  0006' 1B82'              	btfsc	(___fladd@b^(0+256)+2),7
  9724  0007' 1400'              	bsf	___fladd@bexp^(0+256),0
  9725  0008' 0800'              	movf	___fladd@bexp^(0+256),w
  9726  0009' 1903               	btfsc	3,2
  9727  000A' 2800'              	goto	l4507
  9728  000B' 0A00'              	incf	___fladd@bexp^(0+256),w
  9729  000C' 1D03               	btfss	3,2
  9730  000D' 2800'              	goto	l4503
  9731  000E' 3000               	movlw	0
  9732  000F' 0080'              	movwf	(___fladd@b+3)^(0+256)
  9733  0010' 3000               	movlw	0
  9734  0011' 0080'              	movwf	(___fladd@b+2)^(0+256)
  9735  0012' 3000               	movlw	0
  9736  0013' 0080'              	movwf	(___fladd@b+1)^(0+256)
  9737  0014' 3000               	movlw	0
  9738  0015' 0080'              	movwf	___fladd@b^(0+256)
  9739  0016'                    l4503:
  9740  0016' 1782'              	bsf	(___fladd@b^(0+256)+2),7
  9741  0017' 0183'              	clrf	(___fladd@b^(0+256)+3)
  9742  0018' 2800'              	goto	l4509
  9743  0019'                    l4507:
  9744  0019' 3000               	movlw	0
  9745  001A' 0080'              	movwf	(___fladd@b+3)^(0+256)
  9746  001B' 3000               	movlw	0
  9747  001C' 0080'              	movwf	(___fladd@b+2)^(0+256)
  9748  001D' 3000               	movlw	0
  9749  001E' 0080'              	movwf	(___fladd@b+1)^(0+256)
  9750  001F' 3000               	movlw	0
  9751  0020' 0080'              	movwf	___fladd@b^(0+256)
  9752  0021'                    l4509:
  9753  0021' 0803'              	movf	(___fladd@a^(0+256)+3),w
  9754  0022' 3980               	andlw	128
  9755  0023' 0080'              	movwf	___fladd@aexp^(0+256)
  9756  0024' 0800'              	movf	___fladd@aexp^(0+256),w
  9757  0025' 0600'              	xorwf	___fladd@signs^(0+256),w
  9758  0026' 1D03               	btfss	3,2
  9759  0027' 1700'              	bsf	___fladd@signs^(0+256),6
  9760  0028' 3503'              	lslf	(___fladd@a^(0+256)+3),w
  9761  0029' 0080'              	movwf	___fladd@aexp^(0+256)
  9762  002A' 1B82'              	btfsc	(___fladd@a^(0+256)+2),7
  9763  002B' 1400'              	bsf	___fladd@aexp^(0+256),0
  9764  002C' 0800'              	movf	___fladd@aexp^(0+256),w
  9765  002D' 1903               	btfsc	3,2
  9766  002E' 2800'              	goto	l4531
  9767  002F' 0A00'              	incf	___fladd@aexp^(0+256),w
  9768  0030' 1D03               	btfss	3,2
  9769  0031' 2800'              	goto	l4527
  9770  0032' 3000               	movlw	0
  9771  0033' 0080'              	movwf	(___fladd@a+3)^(0+256)
  9772  0034' 3000               	movlw	0
  9773  0035' 0080'              	movwf	(___fladd@a+2)^(0+256)
  9774  0036' 3000               	movlw	0
  9775  0037' 0080'              	movwf	(___fladd@a+1)^(0+256)
  9776  0038' 3000               	movlw	0
  9777  0039' 0080'              	movwf	___fladd@a^(0+256)
  9778  003A'                    l4527:
  9779  003A' 1782'              	bsf	(___fladd@a^(0+256)+2),7
  9780  003B' 0183'              	clrf	(___fladd@a^(0+256)+3)
  9781  003C' 2800'              	goto	l1347
  9782  003D'                    l4531:
  9783  003D' 3000               	movlw	0
  9784  003E' 0080'              	movwf	(___fladd@a+3)^(0+256)
  9785  003F' 3000               	movlw	0
  9786  0040' 0080'              	movwf	(___fladd@a+2)^(0+256)
  9787  0041' 3000               	movlw	0
  9788  0042' 0080'              	movwf	(___fladd@a+1)^(0+256)
  9789  0043' 3000               	movlw	0
  9790  0044' 0080'              	movwf	___fladd@a^(0+256)
  9791  0045'                    l1347:
  9792  0045' 0800'              	movf	___fladd@bexp^(0+256),w
  9793  0046' 0200'              	subwf	___fladd@aexp^(0+256),w
  9794  0047' 1803               	skipnc
  9795  0048' 2800'              	goto	l4567
  9796  0049' 1F00'              	btfss	___fladd@signs^(0+256),6
  9797  004A' 2800'              	goto	l4537
  9798  004B' 3080               	movlw	128
  9799  004C' 0023               	movlb	3	; select bank3
  9800  004D' 0080'              	movwf	??___fladd^(0+384)
  9801  004E' 0800'              	movf	??___fladd^(0+384),w
  9802  004F' 0022               	movlb	2	; select bank2
  9803  0050' 0680'              	xorwf	___fladd@signs^(0+256),f
  9804  0051'                    l4537:
  9805  0051' 0800'              	movf	___fladd@bexp^(0+256),w
  9806  0052' 0080'              	movwf	___fladd@grs^(0+256)
  9807  0053' 0800'              	movf	___fladd@aexp^(0+256),w
  9808  0054' 0080'              	movwf	___fladd@bexp^(0+256)
  9809  0055' 0800'              	movf	___fladd@grs^(0+256),w
  9810  0056' 0080'              	movwf	___fladd@aexp^(0+256)
  9811  0057' 0800'              	movf	___fladd@b^(0+256),w
  9812  0058' 0080'              	movwf	___fladd@grs^(0+256)
  9813  0059' 0800'              	movf	___fladd@a^(0+256),w
  9814  005A' 0080'              	movwf	___fladd@b^(0+256)
  9815  005B' 0800'              	movf	___fladd@grs^(0+256),w
  9816  005C' 0080'              	movwf	___fladd@a^(0+256)
  9817  005D' 0801'              	movf	(___fladd@b^(0+256)+1),w
  9818  005E' 0080'              	movwf	___fladd@grs^(0+256)
  9819  005F' 0801'              	movf	(___fladd@a^(0+256)+1),w
  9820  0060' 0081'              	movwf	(___fladd@b^(0+256)+1)
  9821  0061' 0800'              	movf	___fladd@grs^(0+256),w
  9822  0062' 0081'              	movwf	(___fladd@a^(0+256)+1)
  9823  0063' 0802'              	movf	(___fladd@b^(0+256)+2),w
  9824  0064' 0080'              	movwf	___fladd@grs^(0+256)
  9825  0065' 0802'              	movf	(___fladd@a^(0+256)+2),w
  9826  0066' 0082'              	movwf	(___fladd@b^(0+256)+2)
  9827  0067' 0800'              	movf	___fladd@grs^(0+256),w
  9828  0068' 0082'              	movwf	(___fladd@a^(0+256)+2)
  9829  0069' 0803'              	movf	(___fladd@b^(0+256)+3),w
  9830  006A' 0080'              	movwf	___fladd@grs^(0+256)
  9831  006B' 0803'              	movf	(___fladd@a^(0+256)+3),w
  9832  006C' 0083'              	movwf	(___fladd@b^(0+256)+3)
  9833  006D' 0800'              	movf	___fladd@grs^(0+256),w
  9834  006E' 0083'              	movwf	(___fladd@a^(0+256)+3)
  9835  006F'                    l4567:
  9836  006F' 0180'              	clrf	___fladd@grs^(0+256)
  9837  0070' 0800'              	movf	___fladd@aexp^(0+256),w
  9838  0071' 0023               	movlb	3	; select bank3
  9839  0072' 0080'              	movwf	??___fladd^(0+384)
  9840  0073' 0181'              	clrf	(??___fladd^(0+384)+1)
  9841  0074' 0800'              	movf	(??___fladd+1)^(0+384),w
  9842  0075' 0081'              	movwf	((??___fladd+2)^(0+384)+1)
  9843  0076' 0022               	movlb	2	; select bank2
  9844  0077' 0800'              	movf	___fladd@bexp^(0+256),w
  9845  0078' 0023               	movlb	3	; select bank3
  9846  0079' 0200'              	subwf	??___fladd^(0+384),w
  9847  007A' 0080'              	movwf	(??___fladd+2)^(0+384)
  9848  007B' 1C03               	skipc
  9849  007C' 0381'              	decf	((??___fladd+2)^(0+384)+1),f
  9850  007D' 0800'              	movf	(??___fladd+3)^(0+384),w
  9851  007E' 3A80               	xorlw	128
  9852  007F' 0080'              	movwf	(??___fladd+4)^(0+384)
  9853  0080' 3080               	movlw	128
  9854  0081' 0200'              	subwf	(??___fladd+4)^(0+384),w
  9855  0082' 1D03               	skipz
  9856  0083' 2800'              	goto	u3885
  9857  0084' 301A               	movlw	26
  9858  0085' 0200'              	subwf	(??___fladd+2)^(0+384),w
  9859  0086'                    u3885:
  9860  0086' 1C03               	skipc
  9861  0087' 2800'              	goto	l4585
  9862  0088' 0022               	movlb	2	; select bank2
  9863  0089' 0800'              	movf	(___fladd@b+3)^(0+256),w
  9864  008A' 0400'              	iorwf	(___fladd@b+2)^(0+256),w
  9865  008B' 0400'              	iorwf	(___fladd@b+1)^(0+256),w
  9866  008C' 0400'              	iorwf	___fladd@b^(0+256),w
  9867  008D' 1903               	btfsc	3,2
  9868  008E' 2800'              	goto	u3890
  9869  008F' 3001               	movlw	1
  9870  0090' 2800'              	goto	u3900
  9871  0091'                    u3890:
  9872  0091' 3000               	movlw	0
  9873  0092'                    u3900:
  9874  0092' 0080'              	movwf	___fladd@grs^(0+256)
  9875  0093' 3000               	movlw	0
  9876  0094' 0080'              	movwf	(___fladd@b+3)^(0+256)
  9877  0095' 3000               	movlw	0
  9878  0096' 0080'              	movwf	(___fladd@b+2)^(0+256)
  9879  0097' 3000               	movlw	0
  9880  0098' 0080'              	movwf	(___fladd@b+1)^(0+256)
  9881  0099' 3000               	movlw	0
  9882  009A' 0080'              	movwf	___fladd@b^(0+256)
  9883  009B' 0800'              	movf	___fladd@aexp^(0+256),w
  9884  009C' 0080'              	movwf	___fladd@bexp^(0+256)
  9885  009D' 2800'              	goto	l1351
  9886  009E'                    l1353:
  9887  009E' 1C00'              	btfss	___fladd@grs^(0+256),0
  9888  009F' 2800'              	goto	l4575
  9889  00A0' 3600'              	lsrf	___fladd@grs^(0+256),w
  9890  00A1' 3801               	iorlw	1
  9891  00A2' 0080'              	movwf	___fladd@grs^(0+256)
  9892  00A3' 2800'              	goto	l4577
  9893  00A4'                    l4575:
  9894  00A4' 1003               	clrc
  9895  00A5' 0C80'              	rrf	___fladd@grs^(0+256),f
  9896  00A6'                    l4577:
  9897  00A6' 1800'              	btfsc	___fladd@b^(0+256),0
  9898  00A7' 1780'              	bsf	___fladd@grs^(0+256),7
  9899  00A8' 3001               	movlw	1
  9900  00A9' 0023               	movlb	3	; select bank3
  9901  00AA' 0080'              	movwf	??___fladd^(0+384)
  9902  00AB'                    u3935:
  9903  00AB' 0022               	movlb	2	; select bank2
  9904  00AC' 3780'              	asrf	(___fladd@b+3)^(0+256),f
  9905  00AD' 0C80'              	rrf	(___fladd@b+2)^(0+256),f
  9906  00AE' 0C80'              	rrf	(___fladd@b+1)^(0+256),f
  9907  00AF' 0C80'              	rrf	___fladd@b^(0+256),f
  9908  00B0' 0023               	movlb	3	; select bank3
  9909  00B1' 0B80'              	decfsz	(??___fladd^(0+384))& (0+127),f
  9910  00B2' 2800'              	goto	u3935
  9911  00B3' 3001               	movlw	1
  9912  00B4' 0080'              	movwf	??___fladd^(0+384)
  9913  00B5' 0800'              	movf	??___fladd^(0+384),w
  9914  00B6' 0022               	movlb	2	; select bank2
  9915  00B7' 0780'              	addwf	___fladd@bexp^(0+256),f
  9916  00B8'                    l4585:
  9917  00B8' 0022               	movlb	2	; select bank2
  9918  00B9' 0800'              	movf	___fladd@aexp^(0+256),w
  9919  00BA' 0200'              	subwf	___fladd@bexp^(0+256),w
  9920  00BB' 1C03               	skipc
  9921  00BC' 2800'              	goto	l1353
  9922  00BD'                    l1351:
  9923  00BD' 1B00'              	btfsc	___fladd@signs^(0+256),6
  9924  00BE' 2800'              	goto	l4611
  9925  00BF' 0800'              	movf	___fladd@bexp^(0+256),w
  9926  00C0' 1D03               	btfss	3,2
  9927  00C1' 2800'              	goto	l4593
  9928  00C2' 3000               	movlw	0
  9929  00C3' 0080'              	movwf	(?___fladd+3)^(0+256)
  9930  00C4' 3000               	movlw	0
  9931  00C5' 0080'              	movwf	(?___fladd+2)^(0+256)
  9932  00C6' 3000               	movlw	0
  9933  00C7' 0080'              	movwf	(?___fladd+1)^(0+256)
  9934  00C8' 3000               	movlw	0
  9935  00C9' 0080'              	movwf	?___fladd^(0+256)
  9936  00CA' 0008               	return
  9937  00CB'                    l4593:
  9938  00CB' 0800'              	movf	___fladd@a^(0+256),w
  9939  00CC' 0780'              	addwf	___fladd@b^(0+256),f
  9940  00CD' 0800'              	movf	(___fladd@a+1)^(0+256),w
  9941  00CE' 3D80'              	addwfc	(___fladd@b+1)^(0+256),f
  9942  00CF' 0800'              	movf	(___fladd@a+2)^(0+256),w
  9943  00D0' 3D80'              	addwfc	(___fladd@b+2)^(0+256),f
  9944  00D1' 0800'              	movf	(___fladd@a+3)^(0+256),w
  9945  00D2' 3D80'              	addwfc	(___fladd@b+3)^(0+256),f
  9946  00D3' 1C00'              	btfss	(___fladd@b+3)^(0+256),0
  9947  00D4' 2800'              	goto	l4645
  9948  00D5' 1C00'              	btfss	___fladd@grs^(0+256),0
  9949  00D6' 2800'              	goto	l4601
  9950  00D7' 3600'              	lsrf	___fladd@grs^(0+256),w
  9951  00D8' 3801               	iorlw	1
  9952  00D9' 0080'              	movwf	___fladd@grs^(0+256)
  9953  00DA' 2800'              	goto	l4603
  9954  00DB'                    l4601:
  9955  00DB' 1003               	clrc
  9956  00DC' 0C80'              	rrf	___fladd@grs^(0+256),f
  9957  00DD'                    l4603:
  9958  00DD' 1800'              	btfsc	___fladd@b^(0+256),0
  9959  00DE' 1780'              	bsf	___fladd@grs^(0+256),7
  9960  00DF' 3001               	movlw	1
  9961  00E0' 0023               	movlb	3	; select bank3
  9962  00E1' 0080'              	movwf	??___fladd^(0+384)
  9963  00E2'                    u4005:
  9964  00E2' 0022               	movlb	2	; select bank2
  9965  00E3' 3780'              	asrf	(___fladd@b+3)^(0+256),f
  9966  00E4' 0C80'              	rrf	(___fladd@b+2)^(0+256),f
  9967  00E5' 0C80'              	rrf	(___fladd@b+1)^(0+256),f
  9968  00E6' 0C80'              	rrf	___fladd@b^(0+256),f
  9969  00E7' 0023               	movlb	3	; select bank3
  9970  00E8' 0B80'              	decfsz	(??___fladd^(0+384))& (0+127),f
  9971  00E9' 2800'              	goto	u4005
  9972  00EA' 3001               	movlw	1
  9973  00EB' 0080'              	movwf	??___fladd^(0+384)
  9974  00EC' 0800'              	movf	??___fladd^(0+384),w
  9975  00ED' 0022               	movlb	2	; select bank2
  9976  00EE' 0780'              	addwf	___fladd@bexp^(0+256),f
  9977  00EF' 2800'              	goto	l4645
  9978  00F0'                    l4611:
  9979  00F0' 0800'              	movf	(___fladd@b+3)^(0+256),w
  9980  00F1' 3A80               	xorlw	128
  9981  00F2' 0023               	movlb	3	; select bank3
  9982  00F3' 0080'              	movwf	??___fladd^(0+384)
  9983  00F4' 0022               	movlb	2	; select bank2
  9984  00F5' 0800'              	movf	(___fladd@a+3)^(0+256),w
  9985  00F6' 3A80               	xorlw	128
  9986  00F7' 0023               	movlb	3	; select bank3
  9987  00F8' 0200'              	subwf	??___fladd^(0+384),w
  9988  00F9' 0022               	movlb	2	; select bank2
  9989  00FA' 1D03               	skipz
  9990  00FB' 2800'              	goto	u4013
  9991  00FC' 0800'              	movf	(___fladd@a+2)^(0+256),w
  9992  00FD' 0200'              	subwf	(___fladd@b+2)^(0+256),w
  9993  00FE' 1D03               	skipz
  9994  00FF' 2800'              	goto	u4013
  9995  0100' 0800'              	movf	(___fladd@a+1)^(0+256),w
  9996  0101' 0200'              	subwf	(___fladd@b+1)^(0+256),w
  9997  0102' 1D03               	skipz
  9998  0103' 2800'              	goto	u4013
  9999  0104' 0800'              	movf	___fladd@a^(0+256),w
 10000  0105' 0200'              	subwf	___fladd@b^(0+256),w
 10001  0106'                    u4013:
 10002  0106' 1803               	skipnc
 10003  0107' 2800'              	goto	l4621
 10004  0108' 30FF               	movlw	255
 10005  0109' 0023               	movlb	3	; select bank3
 10006  010A' 0080'              	movwf	??___fladd^(0+384)
 10007  010B' 30FF               	movlw	255
 10008  010C' 0081'              	movwf	(??___fladd^(0+384)+1)
 10009  010D' 30FF               	movlw	255
 10010  010E' 0082'              	movwf	(??___fladd^(0+384)+2)
 10011  010F' 30FF               	movlw	255
 10012  0110' 0083'              	movwf	(??___fladd^(0+384)+3)
 10013  0111' 0022               	movlb	2	; select bank2
 10014  0112' 0800'              	movf	___fladd@b^(0+256),w
 10015  0113' 0200'              	subwf	___fladd@a^(0+256),w
 10016  0114' 0023               	movlb	3	; select bank3
 10017  0115' 0080'              	movwf	(??___fladd+4)^(0+384)
 10018  0116' 0022               	movlb	2	; select bank2
 10019  0117' 0800'              	movf	(___fladd@b+1)^(0+256),w
 10020  0118' 3B00'              	subwfb	(___fladd@a+1)^(0+256),w
 10021  0119' 0023               	movlb	3	; select bank3
 10022  011A' 0081'              	movwf	((??___fladd+4)^(0+384)+1)
 10023  011B' 0022               	movlb	2	; select bank2
 10024  011C' 0800'              	movf	(___fladd@b+2)^(0+256),w
 10025  011D' 3B00'              	subwfb	(___fladd@a+2)^(0+256),w
 10026  011E' 0023               	movlb	3	; select bank3
 10027  011F' 0082'              	movwf	((??___fladd+4)^(0+384)+2)
 10028  0120' 0022               	movlb	2	; select bank2
 10029  0121' 0800'              	movf	(___fladd@b+3)^(0+256),w
 10030  0122' 3B00'              	subwfb	(___fladd@a+3)^(0+256),w
 10031  0123' 0023               	movlb	3	; select bank3
 10032  0124' 0083'              	movwf	((??___fladd+4)^(0+384)+3)
 10033  0125' 0800'              	movf	(??___fladd+4)^(0+384),w
 10034  0126' 0780'              	addwf	??___fladd^(0+384),f
 10035  0127' 0800'              	movf	(??___fladd+5)^(0+384),w
 10036  0128' 3D81'              	addwfc	(??___fladd^(0+384)+1),f
 10037  0129' 0800'              	movf	(??___fladd+6)^(0+384),w
 10038  012A' 3D82'              	addwfc	(??___fladd^(0+384)+2),f
 10039  012B' 0800'              	movf	(??___fladd+7)^(0+384),w
 10040  012C' 3D83'              	addwfc	(??___fladd^(0+384)+3),f
 10041  012D' 0800'              	movf	(??___fladd+3)^(0+384),w
 10042  012E' 0022               	movlb	2	; select bank2
 10043  012F' 0080'              	movwf	(___fladd@b+3)^(0+256)
 10044  0130' 0023               	movlb	3	; select bank3
 10045  0131' 0800'              	movf	(??___fladd+2)^(0+384),w
 10046  0132' 0022               	movlb	2	; select bank2
 10047  0133' 0080'              	movwf	(___fladd@b+2)^(0+256)
 10048  0134' 0023               	movlb	3	; select bank3
 10049  0135' 0800'              	movf	(??___fladd+1)^(0+384),w
 10050  0136' 0022               	movlb	2	; select bank2
 10051  0137' 0080'              	movwf	(___fladd@b+1)^(0+256)
 10052  0138' 0023               	movlb	3	; select bank3
 10053  0139' 0800'              	movf	??___fladd^(0+384),w
 10054  013A' 0022               	movlb	2	; select bank2
 10055  013B' 0080'              	movwf	___fladd@b^(0+256)
 10056  013C' 3080               	movlw	128
 10057  013D' 0023               	movlb	3	; select bank3
 10058  013E' 0080'              	movwf	??___fladd^(0+384)
 10059  013F' 0800'              	movf	??___fladd^(0+384),w
 10060  0140' 0022               	movlb	2	; select bank2
 10061  0141' 0680'              	xorwf	___fladd@signs^(0+256),f
 10062  0142' 0980'              	comf	___fladd@grs^(0+256),f
 10063  0143' 0A80'              	incf	___fladd@grs^(0+256),f
 10064  0144' 0800'              	movf	___fladd@grs^(0+256),w
 10065  0145' 1D03               	btfss	3,2
 10066  0146' 2800'              	goto	l1368
 10067  0147' 3001               	movlw	1
 10068  0148' 0780'              	addwf	___fladd@b^(0+256),f
 10069  0149' 3000               	movlw	0
 10070  014A' 3D80'              	addwfc	(___fladd@b+1)^(0+256),f
 10071  014B' 3000               	movlw	0
 10072  014C' 3D80'              	addwfc	(___fladd@b+2)^(0+256),f
 10073  014D' 3000               	movlw	0
 10074  014E' 3D80'              	addwfc	(___fladd@b+3)^(0+256),f
 10075  014F' 2800'              	goto	l1368
 10076  0150'                    l4621:
 10077  0150' 0800'              	movf	___fladd@a^(0+256),w
 10078  0151' 0280'              	subwf	___fladd@b^(0+256),f
 10079  0152' 0800'              	movf	(___fladd@a+1)^(0+256),w
 10080  0153' 3B80'              	subwfb	(___fladd@b+1)^(0+256),f
 10081  0154' 0800'              	movf	(___fladd@a+2)^(0+256),w
 10082  0155' 3B80'              	subwfb	(___fladd@b+2)^(0+256),f
 10083  0156' 0800'              	movf	(___fladd@a+3)^(0+256),w
 10084  0157' 3B80'              	subwfb	(___fladd@b+3)^(0+256),f
 10085  0158'                    l1368:
 10086  0158' 0800'              	movf	(___fladd@b+3)^(0+256),w
 10087  0159' 0400'              	iorwf	(___fladd@b+2)^(0+256),w
 10088  015A' 0400'              	iorwf	(___fladd@b+1)^(0+256),w
 10089  015B' 0400'              	iorwf	___fladd@b^(0+256),w
 10090  015C' 1D03               	skipz
 10091  015D' 2800'              	goto	l4643
 10092  015E' 0800'              	movf	___fladd@grs^(0+256),w
 10093  015F' 1D03               	btfss	3,2
 10094  0160' 2800'              	goto	l4643
 10095  0161' 3000               	movlw	0
 10096  0162' 0080'              	movwf	(?___fladd+3)^(0+256)
 10097  0163' 3000               	movlw	0
 10098  0164' 0080'              	movwf	(?___fladd+2)^(0+256)
 10099  0165' 3000               	movlw	0
 10100  0166' 0080'              	movwf	(?___fladd+1)^(0+256)
 10101  0167' 3000               	movlw	0
 10102  0168' 0080'              	movwf	?___fladd^(0+256)
 10103  0169' 0008               	return
 10104  016A'                    l4629:
 10105  016A' 3001               	movlw	1
 10106  016B'                    u4055:
 10107  016B' 3580'              	lslf	___fladd@b^(0+256),f
 10108  016C' 0D80'              	rlf	(___fladd@b+1)^(0+256),f
 10109  016D' 0D80'              	rlf	(___fladd@b+2)^(0+256),f
 10110  016E' 0D80'              	rlf	(___fladd@b+3)^(0+256),f
 10111  016F' 0B89               	decfsz	9,f
 10112  0170' 2800'              	goto	u4055
 10113  0171' 1B80'              	btfsc	___fladd@grs^(0+256),7
 10114  0172' 1400'              	bsf	___fladd@b^(0+256),0
 10115  0173' 1C00'              	btfss	___fladd@grs^(0+256),0
 10116  0174' 2800'              	goto	l4637
 10117  0175' 1403               	setc
 10118  0176' 2800'              	goto	L9
 10119  0177'                    l4637:
 10120  0177' 1003               	clrc
 10121  0178'                    L9:
 10122  0178' 0D80'              	rlf	___fladd@grs^(0+256),f
 10123  0179' 0800'              	movf	___fladd@bexp^(0+256),w
 10124  017A' 1903               	btfsc	3,2
 10125  017B' 2800'              	goto	l4643
 10126  017C' 3001               	movlw	1
 10127  017D' 0280'              	subwf	___fladd@bexp^(0+256),f
 10128  017E'                    l4643:
 10129  017E' 1F80'              	btfss	(___fladd@b+2)^(0+256),7
 10130  017F' 2800'              	goto	l4629
 10131  0180'                    l4645:
 10132  0180' 0180'              	clrf	___fladd@aexp^(0+256)
 10133  0181' 1F80'              	btfss	___fladd@grs^(0+256),7
 10134  0182' 2800'              	goto	l4655
 10135  0183' 0800'              	movf	___fladd@grs^(0+256),w
 10136  0184' 397F               	andlw	127
 10137  0185' 1903               	btfsc	3,2
 10138  0186' 1800'              	btfsc	___fladd@b^(0+256),0
 10139  0187' 2800'              	goto	l4651
 10140  0188' 2800'              	goto	l4655
 10141  0189'                    l4651:
 10142  0189' 0180'              	clrf	___fladd@aexp^(0+256)
 10143  018A' 0A80'              	incf	___fladd@aexp^(0+256),f
 10144  018B'                    l4655:
 10145  018B' 0800'              	movf	___fladd@aexp^(0+256),w
 10146  018C' 1903               	btfsc	3,2
 10147  018D' 2800'              	goto	l1381
 10148  018E' 3001               	movlw	1
 10149  018F' 0780'              	addwf	___fladd@b^(0+256),f
 10150  0190' 3000               	movlw	0
 10151  0191' 3D80'              	addwfc	(___fladd@b+1)^(0+256),f
 10152  0192' 3000               	movlw	0
 10153  0193' 3D80'              	addwfc	(___fladd@b+2)^(0+256),f
 10154  0194' 3000               	movlw	0
 10155  0195' 3D80'              	addwfc	(___fladd@b+3)^(0+256),f
 10156  0196' 1C00'              	btfss	(___fladd@b+3)^(0+256),0
 10157  0197' 2800'              	goto	l1381
 10158  0198' 0800'              	movf	___fladd@b^(0+256),w
 10159  0199' 0023               	movlb	3	; select bank3
 10160  019A' 0080'              	movwf	??___fladd^(0+384)
 10161  019B' 0022               	movlb	2	; select bank2
 10162  019C' 0800'              	movf	(___fladd@b+1)^(0+256),w
 10163  019D' 0023               	movlb	3	; select bank3
 10164  019E' 0081'              	movwf	(??___fladd^(0+384)+1)
 10165  019F' 0022               	movlb	2	; select bank2
 10166  01A0' 0800'              	movf	(___fladd@b+2)^(0+256),w
 10167  01A1' 0023               	movlb	3	; select bank3
 10168  01A2' 0082'              	movwf	(??___fladd^(0+384)+2)
 10169  01A3' 0022               	movlb	2	; select bank2
 10170  01A4' 0800'              	movf	(___fladd@b+3)^(0+256),w
 10171  01A5' 0023               	movlb	3	; select bank3
 10172  01A6' 0083'              	movwf	(??___fladd^(0+384)+3)
 10173  01A7' 3001               	movlw	1
 10174  01A8' 0080'              	movwf	(??___fladd+4)^(0+384)
 10175  01A9'                    u4155:
 10176  01A9' 3783'              	asrf	(??___fladd^(0+384)+3),f
 10177  01AA' 0C82'              	rrf	(??___fladd^(0+384)+2),f
 10178  01AB' 0C81'              	rrf	(??___fladd^(0+384)+1),f
 10179  01AC' 0C80'              	rrf	??___fladd^(0+384),f
 10180  01AD' 0B80'              	decfsz	(??___fladd+4)^(0+384),f
 10181  01AE' 2800'              	goto	u4155
 10182  01AF' 0800'              	movf	(??___fladd+3)^(0+384),w
 10183  01B0' 0022               	movlb	2	; select bank2
 10184  01B1' 0080'              	movwf	(___fladd@b+3)^(0+256)
 10185  01B2' 0023               	movlb	3	; select bank3
 10186  01B3' 0800'              	movf	(??___fladd+2)^(0+384),w
 10187  01B4' 0022               	movlb	2	; select bank2
 10188  01B5' 0080'              	movwf	(___fladd@b+2)^(0+256)
 10189  01B6' 0023               	movlb	3	; select bank3
 10190  01B7' 0800'              	movf	(??___fladd+1)^(0+384),w
 10191  01B8' 0022               	movlb	2	; select bank2
 10192  01B9' 0080'              	movwf	(___fladd@b+1)^(0+256)
 10193  01BA' 0023               	movlb	3	; select bank3
 10194  01BB' 0800'              	movf	??___fladd^(0+384),w
 10195  01BC' 0022               	movlb	2	; select bank2
 10196  01BD' 0080'              	movwf	___fladd@b^(0+256)
 10197  01BE' 0A00'              	incf	___fladd@bexp^(0+256),w
 10198  01BF' 1903               	btfsc	3,2
 10199  01C0' 2800'              	goto	l1381
 10200  01C1' 3001               	movlw	1
 10201  01C2' 0023               	movlb	3	; select bank3
 10202  01C3' 0080'              	movwf	??___fladd^(0+384)
 10203  01C4' 0800'              	movf	??___fladd^(0+384),w
 10204  01C5' 0022               	movlb	2	; select bank2
 10205  01C6' 0780'              	addwf	___fladd@bexp^(0+256),f
 10206  01C7'                    l1381:
 10207  01C7' 0A00'              	incf	___fladd@bexp^(0+256),w
 10208  01C8' 1D03               	btfss	3,2
 10209  01C9' 0800'              	movf	___fladd@bexp^(0+256),w
 10210  01CA' 1D03               	btfss	3,2
 10211  01CB' 2800'              	goto	l4673
 10212  01CC' 3000               	movlw	0
 10213  01CD' 0080'              	movwf	(___fladd@b+3)^(0+256)
 10214  01CE' 3000               	movlw	0
 10215  01CF' 0080'              	movwf	(___fladd@b+2)^(0+256)
 10216  01D0' 3000               	movlw	0
 10217  01D1' 0080'              	movwf	(___fladd@b+1)^(0+256)
 10218  01D2' 3000               	movlw	0
 10219  01D3' 0080'              	movwf	___fladd@b^(0+256)
 10220  01D4' 0800'              	movf	___fladd@bexp^(0+256),w
 10221  01D5' 1903               	btfsc	3,2
 10222  01D6' 0180'              	clrf	___fladd@signs^(0+256)
 10223  01D7'                    l4673:
 10224  01D7' 1C00'              	btfss	___fladd@bexp^(0+256),0
 10225  01D8' 2800'              	goto	l4677
 10226  01D9' 1782'              	bsf	(___fladd@b^(0+256)+2),7
 10227  01DA' 2800'              	goto	l1389
 10228  01DB'                    l4677:
 10229  01DB' 307F               	movlw	127
 10230  01DC' 0023               	movlb	3	; select bank3
 10231  01DD' 0080'              	movwf	??___fladd^(0+384)
 10232  01DE' 0800'              	movf	??___fladd^(0+384),w
 10233  01DF' 0022               	movlb	2	; select bank2
 10234  01E0' 0582'              	andwf	(___fladd@b^(0+256)+2),f
 10235  01E1'                    l1389:
 10236  01E1' 3600'              	lsrf	___fladd@bexp^(0+256),w
 10237  01E2' 0083'              	movwf	(___fladd@b^(0+256)+3)
 10238  01E3' 1F80'              	btfss	___fladd@signs^(0+256),7
 10239  01E4' 0008               	return
 10240  01E5' 1783'              	bsf	(___fladd@b^(0+256)+3),7
 10241  01E6' 0008               	return
 10242  01E7'                    __end_of___fladd:
 10243                           
 10244                           	psect	intentry
 10245  0000'                    __pintentry:	
 10246 ;; *************** function _ISR *****************
 10247 ;; Defined at:
 10248 ;;		line 46 in file "main.c"
 10249 ;; Parameters:    Size  Location     Type
 10250 ;;		None
 10251 ;; Auto vars:     Size  Location     Type
 10252 ;;		None
 10253 ;; Return value:  Size  Location     Type
 10254 ;;                  1    wreg      void 
 10255 ;; Registers used:
 10256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10257 ;; Tracked objects:
 10258 ;;		On entry : 0/0
 10259 ;;		On exit  : 0/0
 10260 ;;		Unchanged: 0/0
 10261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10264 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10265 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10266 ;;Total ram usage:        2 bytes
 10267 ;; Hardware stack levels used: 1
 10268 ;; Hardware stack levels required when called: 4
 10269 ;; This function calls:
 10270 ;;		_UART_send_string
 10271 ;;		_abs
 10272 ;;		_calculate_avg
 10273 ;;		_command_interpreter
 10274 ;;		_control_loop
 10275 ;;		_read_ADC
 10276 ;;		_timing
 10277 ;;		i1_UART_send_byte
 10278 ;; This function is called by:
 10279 ;;		Interrupt level 1
 10280 ;; This function uses a non-reentrant model
 10281 ;;
 10282                           
 10283  0000'                    _ISR:
 10284                           
 10285                           ;incstack = 0
 10286  0000' 147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10287                           
 10288                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10289  0001' 3180'              	pagesel	$
 10290                           
 10291                           ;main.c: 48:     if(RCIF)
 10292  0002' 0020               	movlb	0	; select bank0
 10293  0003' 1E91               	btfss	17,5	;volatile
 10294  0004' 2800'              	goto	i1l7501
 10295                           
 10296                           ;main.c: 49:     {;main.c: 50:         RCIF = 0;
 10297  0005' 1291               	bcf	17,5	;volatile
 10298                           
 10299                           ;main.c: 51:         if(RC1STAbits.OERR)
 10300  0006' 0023               	movlb	3	; select bank3
 10301  0007' 1C9D               	btfss	29,1	;volatile
 10302  0008' 2800'              	goto	i1l7499
 10303                           
 10304                           ;main.c: 52:         {;main.c: 53:             RC1STAbits.CREN = 0;
 10305  0009' 121D               	bcf	29,4	;volatile
 10306                           
 10307                           ;main.c: 54:             RC1STAbits.CREN = 1;
 10308  000A' 161D               	bsf	29,4	;volatile
 10309                           
 10310                           ;main.c: 56:             UART_send_string((char*)"OERR_ERROR");
 10311  000B' 3000'              	movlw	low (STR_1| (0+32768))
 10312  000C' 0081'              	movwf	UART_send_string@st_pt
 10313  000D' 3000'              	movlw	high (STR_1| (0+32768))
 10314  000E' 0082'              	movwf	UART_send_string@st_pt+1
 10315  000F' 3180' 2000' 3180'  	fcall	_UART_send_string
 10316                           
 10317                           ;main.c: 57:             state = IDLE;
 10318  0012' 0023               	movlb	3	; select bank3
 10319  0013' 0180'              	clrf	_state^(0+384)
 10320  0014' 0A80'              	incf	_state^(0+384),f
 10321                           
 10322                           ;main.c: 58:         }
 10323  0015' 2800'              	goto	i1l7501
 10324  0016'                    i1l7499:
 10325                           
 10326                           ;main.c: 60:         {;main.c: 61:             UART_send_byte(command_interpreter());
 10327  0016' 3180' 2000' 3180'  	fcall	_command_interpreter
 10328  0019' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 10329  001C'                    i1l7501:
 10330                           
 10331                           ;main.c: 65:     if(TMR1IF)
 10332  001C' 0020               	movlb	0	; select bank0
 10333  001D' 1C11               	btfss	17,0	;volatile
 10334  001E' 2800'              	goto	i1l664
 10335                           
 10336                           ;main.c: 66:     {;main.c: 67:         TMR1H = 0xE1;
 10337  001F' 30E1               	movlw	225
 10338  0020' 0097               	movwf	23	;volatile
 10339                           
 10340                           ;main.c: 68:         TMR1L = 0x83;
 10341  0021' 3083               	movlw	131
 10342  0022' 0096               	movwf	22	;volatile
 10343                           
 10344                           ;main.c: 69:         TMR1IF = 0;
 10345  0023' 1011               	bcf	17,0	;volatile
 10346                           
 10347                           ;main.c: 70:         v = read_ADC(0b01010);
 10348  0024' 300A               	movlw	10
 10349  0025' 0080'              	movwf	read_ADC@channel
 10350  0026' 3000               	movlw	0
 10351  0027' 0081'              	movwf	read_ADC@channel+1
 10352  0028' 3180' 2000' 3180'  	fcall	_read_ADC
 10353  002B' 0801'              	movf	?_read_ADC+1,w
 10354  002C' 0021               	movlb	1	; select bank1
 10355  002D' 0080'              	movwf	(_v+1)^(0+128)
 10356  002E' 0800'              	movf	?_read_ADC,w
 10357  002F' 0080'              	movwf	_v^(0+128)
 10358                           
 10359                           ;main.c: 71:         i = read_ADC(0b01100);
 10360  0030' 300C               	movlw	12
 10361  0031' 0080'              	movwf	read_ADC@channel
 10362  0032' 3000               	movlw	0
 10363  0033' 0081'              	movwf	read_ADC@channel+1
 10364  0034' 3180' 2000' 3180'  	fcall	_read_ADC
 10365  0037' 0801'              	movf	?_read_ADC+1,w
 10366  0038' 0021               	movlb	1	; select bank1
 10367  0039' 0080'              	movwf	(_i+1)^(0+128)
 10368  003A' 0800'              	movf	?_read_ADC,w
 10369  003B' 0080'              	movwf	_i^(0+128)
 10370                           
 10371                           ;main.c: 72:         i = (uint16_t) (abs ( 2048 - (int)i ) );
 10372  003C' 3000               	movlw	0
 10373  003D' 0080'              	movwf	??_ISR^(0+128)
 10374  003E' 3008               	movlw	8
 10375  003F' 0081'              	movwf	(??_ISR^(0+128)+1)
 10376  0040' 0800'              	movf	_i^(0+128),w
 10377  0041' 0200'              	subwf	??_ISR^(0+128),w
 10378  0042' 0080'              	movwf	abs@a
 10379  0043' 0800'              	movf	(_i+1)^(0+128),w
 10380  0044' 3B00'              	subwfb	(??_ISR+1)^(0+128),w
 10381  0045' 0081'              	movwf	abs@a+1
 10382  0046' 3180' 2000' 3180'  	fcall	_abs
 10383  0049' 0801'              	movf	?_abs+1,w
 10384  004A' 0021               	movlb	1	; select bank1
 10385  004B' 0080'              	movwf	(_i+1)^(0+128)
 10386  004C' 0800'              	movf	?_abs,w
 10387  004D' 0080'              	movwf	_i^(0+128)
 10388                           
 10389                           ;main.c: 73:         if (conv) control_loop();
 10390  004E' 0800'              	movf	_conv^(0+128),w
 10391  004F' 1903               	btfsc	3,2
 10392  0050' 2800'              	goto	i1l7517
 10393  0051' 3180' 2000' 3180'  	fcall	_control_loop
 10394  0054' 2800'              	goto	i1l7519
 10395  0055'                    i1l7517:
 10396  0055' 3000               	movlw	0
 10397  0056' 0024               	movlb	4	; select bank4
 10398  0057' 0080'              	movwf	(_pidi+3)^(0+512)
 10399  0058' 3000               	movlw	0
 10400  0059' 0080'              	movwf	(_pidi+2)^(0+512)
 10401  005A' 3000               	movlw	0
 10402  005B' 0080'              	movwf	(_pidi+1)^(0+512)
 10403  005C' 3000               	movlw	0
 10404  005D' 0080'              	movwf	_pidi^(0+512)
 10405  005E'                    i1l7519:
 10406                           
 10407                           ;main.c: 75:         calculate_avg();
 10408  005E' 3180' 2000' 3180'  	fcall	_calculate_avg
 10409                           
 10410                           ;main.c: 76:         timing();
 10411  0061' 3180' 2000' 3180'  	fcall	_timing
 10412                           
 10413                           ;main.c: 77:         if (TMR1IF) UART_send_string((char*)"TIMING_ERROR");
 10414  0064' 0020               	movlb	0	; select bank0
 10415  0065' 1C11               	btfss	17,0	;volatile
 10416  0066' 2800'              	goto	i1l664
 10417  0067' 3000'              	movlw	low (STR_2| (0+32768))
 10418  0068' 0081'              	movwf	UART_send_string@st_pt
 10419  0069' 3000'              	movlw	high (STR_2| (0+32768))
 10420  006A' 0082'              	movwf	UART_send_string@st_pt+1
 10421  006B' 3180' 2000'        	fcall	_UART_send_string
 10422  006D'                    i1l664:
 10423  006D' 107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10424  006E' 0009               	retfie
 10425  006F'                    __end_of_ISR:
 10426                           
 10427                           	psect	text30
 10428  0000'                    __ptext30:	
 10429 ;; *************** function _timing *****************
 10430 ;; Defined at:
 10431 ;;		line 367 in file "charger_discharger.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;		None
 10434 ;; Auto vars:     Size  Location     Type
 10435 ;;		None
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  1    wreg      void 
 10438 ;; Registers used:
 10439 ;;		wreg, status,2, status,0
 10440 ;; Tracked objects:
 10441 ;;		On entry : 0/0
 10442 ;;		On exit  : 0/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10449 ;;Total ram usage:        0 bytes
 10450 ;; Hardware stack levels used: 1
 10451 ;; This function calls:
 10452 ;;		Nothing
 10453 ;; This function is called by:
 10454 ;;		_ISR
 10455 ;; This function uses a non-reentrant model
 10456 ;;
 10457                           
 10458  0000'                    _timing:	
 10459                           ;psect for function _timing
 10460                           
 10461                           
 10462                           ;charger_discharger.c: 369:     if(!count)
 10463                           
 10464                           ;incstack = 0
 10465                           ; Regs used in _timing: [wreg+status,2+status,0]
 10466  0000' 0021               	movlb	1	; select bank1
 10467  0001' 0800'              	movf	_count^(0+128),w
 10468  0002' 0400'              	iorwf	(_count+1)^(0+128),w
 10469  0003' 1D03               	btfss	3,2
 10470  0004' 2800'              	goto	i1l6885
 10471                           
 10472                           ;charger_discharger.c: 370:     {;charger_discharger.c: 371:         SECF = 1;
 10473  0005' 0023               	movlb	3	; select bank3
 10474  0006' 0180'              	clrf	_SECF^(0+384)
 10475  0007' 0A80'              	incf	_SECF^(0+384),f
 10476                           
 10477                           ;charger_discharger.c: 372:         count = 1024;
 10478  0008' 3000               	movlw	0
 10479  0009' 0021               	movlb	1	; select bank1
 10480  000A' 0080'              	movwf	_count^(0+128)
 10481  000B' 3004               	movlw	4
 10482  000C' 0081'              	movwf	(_count^(0+128)+1)
 10483                           
 10484                           ;charger_discharger.c: 373:         second++;
 10485  000D' 3001               	movlw	1
 10486  000E' 0023               	movlb	3	; select bank3
 10487  000F' 0780'              	addwf	_second^(0+384),f
 10488  0010' 3000               	movlw	0
 10489  0011' 3D80'              	addwfc	(_second+1)^(0+384),f
 10490                           
 10491                           ;charger_discharger.c: 374:     }else
 10492  0012' 0008               	return
 10493  0013'                    i1l6885:
 10494                           
 10495                           ;charger_discharger.c: 375:     {;charger_discharger.c: 376:         count--;
 10496  0013' 3001               	movlw	1
 10497  0014' 0280'              	subwf	_count^(0+128),f
 10498  0015' 3000               	movlw	0
 10499  0016' 3B80'              	subwfb	(_count+1)^(0+128),f
 10500  0017' 0008               	return
 10501  0018'                    __end_of_timing:
 10502                           
 10503                           	psect	text31
 10504  0000'                    __ptext31:	
 10505 ;; *************** function _read_ADC *****************
 10506 ;; Defined at:
 10507 ;;		line 353 in file "charger_discharger.c"
 10508 ;; Parameters:    Size  Location     Type
 10509 ;;  channel         2    0[COMMON] unsigned short 
 10510 ;; Auto vars:     Size  Location     Type
 10511 ;;  ad_res          2    9[COMMON] unsigned short 
 10512 ;; Return value:  Size  Location     Type
 10513 ;;                  2    0[COMMON] unsigned short 
 10514 ;; Registers used:
 10515 ;;		wreg, status,2, status,0
 10516 ;; Tracked objects:
 10517 ;;		On entry : 0/0
 10518 ;;		On exit  : 0/0
 10519 ;;		Unchanged: 0/0
 10520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10522 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10523 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10524 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10525 ;;Total ram usage:       11 bytes
 10526 ;; Hardware stack levels used: 1
 10527 ;; This function calls:
 10528 ;;		Nothing
 10529 ;; This function is called by:
 10530 ;;		_ISR
 10531 ;; This function uses a non-reentrant model
 10532 ;;
 10533                           
 10534  0000'                    _read_ADC:	
 10535                           ;psect for function _read_ADC
 10536                           
 10537                           
 10538                           ;charger_discharger.c: 356:     _delay((unsigned long)((10)*(32000000/4000000.0)));
 10539                           
 10540                           ;incstack = 0
 10541                           ; Regs used in _read_ADC: [wreg+status,2+status,0]
 10542  0000' 301A               	movlw	26
 10543  0001'                    u790_27:
 10544  0001' 0B89               	decfsz	9,f
 10545  0002' 2800'              	goto	u790_27
 10546  0003' 3200               	nop2
 10547                           
 10548                           ;charger_discharger.c: 357:     ADCON0bits.CHS = channel;
 10549  0004' 0800'              	movf	read_ADC@channel,w
 10550  0005' 0082'              	movwf	??_read_ADC
 10551  0006' 0D82'              	rlf	??_read_ADC,f
 10552  0007' 0D82'              	rlf	??_read_ADC,f
 10553  0008' 0021               	movlb	1	; select bank1
 10554  0009' 081D               	movf	29,w	;volatile
 10555  000A' 0602'              	xorwf	??_read_ADC,w
 10556  000B' 3983               	andlw	-125
 10557  000C' 0602'              	xorwf	??_read_ADC,w
 10558  000D' 009D               	movwf	29	;volatile
 10559                           
 10560                           ;charger_discharger.c: 358:     _delay((unsigned long)((10)*(32000000/4000000.0)));
 10561  000E' 301A               	movlw	26
 10562  000F'                    u791_27:
 10563  000F' 0B89               	decfsz	9,f
 10564  0010' 2800'              	goto	u791_27
 10565  0011' 3200               	nop2
 10566                           
 10567                           ;charger_discharger.c: 359:     GO_nDONE = 1;
 10568  0012' 0021               	movlb	1	; select bank1
 10569  0013' 149D               	bsf	29,1	;volatile
 10570  0014'                    i1l399:	
 10571                           ;charger_discharger.c: 360:     while(GO_nDONE);
 10572                           
 10573  0014' 189D               	btfsc	29,1	;volatile
 10574  0015' 2800'              	goto	i1l399
 10575                           
 10576                           ;charger_discharger.c: 361:     ad_res = (uint16_t)((ADRESL & 0xFF)|((ADRESH << 8) & 0xF
      +                          00));
 10577  0016' 081C               	movf	28,w	;volatile
 10578  0017' 0082'              	movwf	??_read_ADC
 10579  0018' 0183'              	clrf	??_read_ADC+1
 10580  0019' 0802'              	movf	??_read_ADC,w
 10581  001A' 0083'              	movwf	??_read_ADC+1
 10582  001B' 0182'              	clrf	??_read_ADC
 10583  001C' 3000               	movlw	0
 10584  001D' 0502'              	andwf	??_read_ADC,w
 10585  001E' 0085'              	movwf	??_read_ADC+3
 10586  001F' 300F               	movlw	15
 10587  0020' 0503'              	andwf	??_read_ADC+1,w
 10588  0021' 0086'              	movwf	??_read_ADC+4
 10589  0022' 0805'              	movf	??_read_ADC+3,w
 10590  0023' 041B               	iorwf	27,w	;volatile
 10591  0024' 0087'              	movwf	??_read_ADC+5
 10592  0025' 0806'              	movf	??_read_ADC+4,w
 10593  0026' 0088'              	movwf	??_read_ADC+6
 10594  0027' 0807'              	movf	??_read_ADC+5,w
 10595  0028' 0089'              	movwf	read_ADC@ad_res
 10596  0029' 0808'              	movf	??_read_ADC+6,w
 10597  002A' 008A'              	movwf	read_ADC@ad_res+1
 10598                           
 10599                           ;charger_discharger.c: 362:     return ad_res;
 10600  002B' 080A'              	movf	read_ADC@ad_res+1,w
 10601  002C' 0081'              	movwf	?_read_ADC+1
 10602  002D' 0809'              	movf	read_ADC@ad_res,w
 10603  002E' 0080'              	movwf	?_read_ADC
 10604  002F' 0008               	return
 10605  0030'                    __end_of_read_ADC:
 10606                           
 10607                           	psect	text32
 10608  0000'                    __ptext32:	
 10609 ;; *************** function _control_loop *****************
 10610 ;; Defined at:
 10611 ;;		line 257 in file "charger_discharger.c"
 10612 ;; Parameters:    Size  Location     Type
 10613 ;;		None
 10614 ;; Auto vars:     Size  Location     Type
 10615 ;;		None
 10616 ;; Return value:  Size  Location     Type
 10617 ;;                  1    wreg      void 
 10618 ;; Registers used:
 10619 ;;		wreg, status,2, status,0, pclath, cstack
 10620 ;; Tracked objects:
 10621 ;;		On entry : 0/0
 10622 ;;		On exit  : 0/0
 10623 ;;		Unchanged: 0/0
 10624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10629 ;;Total ram usage:        0 bytes
 10630 ;; Hardware stack levels used: 1
 10631 ;; Hardware stack levels required when called: 3
 10632 ;; This function calls:
 10633 ;;		_pid
 10634 ;;		i1___xxtofl
 10635 ;;		i1_set_DC
 10636 ;; This function is called by:
 10637 ;;		_ISR
 10638 ;; This function uses a non-reentrant model
 10639 ;;
 10640                           
 10641  0000'                    _control_loop:	
 10642                           ;psect for function _control_loop
 10643                           
 10644                           
 10645                           ;charger_discharger.c: 259:     if(!cmode)
 10646                           
 10647                           ;incstack = 0
 10648                           ; Regs used in _control_loop: [wreg+status,2+status,0+pclath+cstack]
 10649  0000' 0021               	movlb	1	; select bank1
 10650  0001' 0800'              	movf	_cmode^(0+128),w
 10651  0002' 1D03               	btfss	3,2
 10652  0003' 2800'              	goto	i1l6827
 10653                           
 10654                           ;charger_discharger.c: 260:     {;charger_discharger.c: 261:         pid(v, vref);
 10655  0004' 0800'              	movf	_v^(0+128),w
 10656  0005' 0080'              	movwf	i1___xxtofl@val
 10657  0006' 0800'              	movf	(_v+1)^(0+128),w
 10658  0007' 0081'              	movwf	i1___xxtofl@val+1
 10659  0008' 0182'              	clrf	i1___xxtofl@val+2
 10660  0009' 0183'              	clrf	i1___xxtofl@val+3
 10661  000A' 3000               	movlw	0
 10662  000B' 3180' 2000' 3180'  	fcall	i1___xxtofl
 10663  000E' 0803'              	movf	?i1___xxtofl+3,w
 10664  000F' 0020               	movlb	0	; select bank0
 10665  0010' 00B9'              	movwf	pid@feedback+3
 10666  0011' 0802'              	movf	?i1___xxtofl+2,w
 10667  0012' 00B8'              	movwf	pid@feedback+2
 10668  0013' 0801'              	movf	?i1___xxtofl+1,w
 10669  0014' 00B7'              	movwf	pid@feedback+1
 10670  0015' 0800'              	movf	?i1___xxtofl,w
 10671  0016' 00B6'              	movwf	pid@feedback
 10672  0017' 0024               	movlb	4	; select bank4
 10673  0018' 0800'              	movf	(_vref+3)^(0+512),w
 10674  0019' 0020               	movlb	0	; select bank0
 10675  001A' 00BD'              	movwf	pid@setpoint+3
 10676  001B' 0024               	movlb	4	; select bank4
 10677  001C' 0800'              	movf	(_vref+2)^(0+512),w
 10678  001D' 0020               	movlb	0	; select bank0
 10679  001E' 00BC'              	movwf	pid@setpoint+2
 10680  001F' 0024               	movlb	4	; select bank4
 10681  0020' 0800'              	movf	(_vref+1)^(0+512),w
 10682  0021' 0020               	movlb	0	; select bank0
 10683  0022' 00BB'              	movwf	pid@setpoint+1
 10684  0023' 0024               	movlb	4	; select bank4
 10685  0024' 0800'              	movf	_vref^(0+512),w
 10686  0025' 0020               	movlb	0	; select bank0
 10687  0026' 2800'              	goto	L10
 10688  0027'                    i1l6827:	
 10689                           ;charger_discharger.c: 262:     }else
 10690                           
 10691                           
 10692                           ;charger_discharger.c: 263:     {;charger_discharger.c: 264:         pid(i, iref);
 10693  0027' 0800'              	movf	_i^(0+128),w
 10694  0028' 0080'              	movwf	i1___xxtofl@val
 10695  0029' 0800'              	movf	(_i+1)^(0+128),w
 10696  002A' 0081'              	movwf	i1___xxtofl@val+1
 10697  002B' 0182'              	clrf	i1___xxtofl@val+2
 10698  002C' 0183'              	clrf	i1___xxtofl@val+3
 10699  002D' 3000               	movlw	0
 10700  002E' 3180' 2000' 3180'  	fcall	i1___xxtofl
 10701  0031' 0803'              	movf	?i1___xxtofl+3,w
 10702  0032' 0020               	movlb	0	; select bank0
 10703  0033' 00B9'              	movwf	pid@feedback+3
 10704  0034' 0802'              	movf	?i1___xxtofl+2,w
 10705  0035' 00B8'              	movwf	pid@feedback+2
 10706  0036' 0801'              	movf	?i1___xxtofl+1,w
 10707  0037' 00B7'              	movwf	pid@feedback+1
 10708  0038' 0800'              	movf	?i1___xxtofl,w
 10709  0039' 00B6'              	movwf	pid@feedback
 10710  003A' 0021               	movlb	1	; select bank1
 10711  003B' 0800'              	movf	_iref^(0+128),w
 10712  003C' 0080'              	movwf	i1___xxtofl@val
 10713  003D' 0800'              	movf	(_iref+1)^(0+128),w
 10714  003E' 0081'              	movwf	i1___xxtofl@val+1
 10715  003F' 0182'              	clrf	i1___xxtofl@val+2
 10716  0040' 0183'              	clrf	i1___xxtofl@val+3
 10717  0041' 3000               	movlw	0
 10718  0042' 3180' 2000' 3180'  	fcall	i1___xxtofl
 10719  0045' 0803'              	movf	?i1___xxtofl+3,w
 10720  0046' 0020               	movlb	0	; select bank0
 10721  0047' 00BD'              	movwf	pid@setpoint+3
 10722  0048' 0802'              	movf	?i1___xxtofl+2,w
 10723  0049' 00BC'              	movwf	pid@setpoint+2
 10724  004A' 0801'              	movf	?i1___xxtofl+1,w
 10725  004B' 00BB'              	movwf	pid@setpoint+1
 10726  004C' 0800'              	movf	?i1___xxtofl,w
 10727  004D'                    L10:
 10728  004D' 00BA'              	movwf	pid@setpoint
 10729  004E' 3180' 2000' 3180'  	fcall	_pid
 10730                           
 10731                           ;charger_discharger.c: 266:     set_DC();
 10732                           
 10733                           ;charger_discharger.c: 265:     }
 10734  0051' 3180' 2000'        	fcall	i1_set_DC
 10735  0053' 0008               	return
 10736  0054'                    __end_of_control_loop:
 10737                           
 10738                           	psect	text33
 10739  0000'                    __ptext33:	
 10740 ;; *************** function _pid *****************
 10741 ;; Defined at:
 10742 ;;		line 273 in file "charger_discharger.c"
 10743 ;; Parameters:    Size  Location     Type
 10744 ;;  feedback        4   54[BANK0 ] float 
 10745 ;;  setpoint        4   58[BANK0 ] float 
 10746 ;; Auto vars:     Size  Location     Type
 10747 ;;		None
 10748 ;; Return value:  Size  Location     Type
 10749 ;;                  1    wreg      void 
 10750 ;; Registers used:
 10751 ;;		wreg, status,2, status,0, pclath, cstack
 10752 ;; Tracked objects:
 10753 ;;		On entry : 0/0
 10754 ;;		On exit  : 0/0
 10755 ;;		Unchanged: 0/0
 10756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10757 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10758 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10760 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10761 ;;Total ram usage:       20 bytes
 10762 ;; Hardware stack levels used: 1
 10763 ;; Hardware stack levels required when called: 2
 10764 ;; This function calls:
 10765 ;;		___flsub
 10766 ;;		i1___fladd
 10767 ;;		i1___flge
 10768 ;;		i1___flmul
 10769 ;; This function is called by:
 10770 ;;		_control_loop
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774  0000'                    _pid:	
 10775                           ;psect for function _pid
 10776                           
 10777                           
 10778                           ;charger_discharger.c: 273: void pid(float feedback, float setpoint);charger_discharger.
      +                          c: 274: {;charger_discharger.c: 275:     pidt += kd * (setpoint - feedback - er);
 10779                           
 10780                           ;incstack = 0
 10781                           ; Regs used in _pid: [wreg+status,2+status,0+pclath+cstack]
 10782  0000' 0020               	movlb	0	; select bank0
 10783  0001' 083D'              	movf	pid@setpoint+3,w
 10784  0002' 009B'              	movwf	___flsub@b+3
 10785  0003' 083C'              	movf	pid@setpoint+2,w
 10786  0004' 009A'              	movwf	___flsub@b+2
 10787  0005' 083B'              	movf	pid@setpoint+1,w
 10788  0006' 0099'              	movwf	___flsub@b+1
 10789  0007' 083A'              	movf	pid@setpoint,w
 10790  0008' 0098'              	movwf	___flsub@b
 10791  0009' 0839'              	movf	pid@feedback+3,w
 10792  000A' 0097'              	movwf	___flsub@a+3
 10793  000B' 0838'              	movf	pid@feedback+2,w
 10794  000C' 0096'              	movwf	___flsub@a+2
 10795  000D' 0837'              	movf	pid@feedback+1,w
 10796  000E' 0095'              	movwf	___flsub@a+1
 10797  000F' 0836'              	movf	pid@feedback,w
 10798  0010' 0094'              	movwf	___flsub@a
 10799  0011' 3180' 2000' 3180'  	fcall	___flsub
 10800  0014' 0020               	movlb	0	; select bank0
 10801  0015' 0817'              	movf	?___flsub+3,w
 10802  0016' 00C1'              	movwf	_pid$1605+3
 10803  0017' 0816'              	movf	?___flsub+2,w
 10804  0018' 00C0'              	movwf	_pid$1605+2
 10805  0019' 0815'              	movf	?___flsub+1,w
 10806  001A' 00BF'              	movwf	_pid$1605+1
 10807  001B' 0814'              	movf	?___flsub,w
 10808  001C' 00BE'              	movwf	_pid$1605
 10809                           
 10810                           ;charger_discharger.c: 273: void pid(float feedback, float setpoint);charger_discharger.
      +                          c: 274: {;charger_discharger.c: 275:     pidt += kd * (setpoint - feedback - er);
 10811  001D' 0841'              	movf	_pid$1605+3,w
 10812  001E' 009B'              	movwf	___flsub@b+3
 10813  001F' 0840'              	movf	_pid$1605+2,w
 10814  0020' 009A'              	movwf	___flsub@b+2
 10815  0021' 083F'              	movf	_pid$1605+1,w
 10816  0022' 0099'              	movwf	___flsub@b+1
 10817  0023' 083E'              	movf	_pid$1605,w
 10818  0024' 0098'              	movwf	___flsub@b
 10819  0025' 0021               	movlb	1	; select bank1
 10820  0026' 0800'              	movf	(_er+3)^(0+128),w
 10821  0027' 0020               	movlb	0	; select bank0
 10822  0028' 0097'              	movwf	___flsub@a+3
 10823  0029' 0021               	movlb	1	; select bank1
 10824  002A' 0800'              	movf	(_er+2)^(0+128),w
 10825  002B' 0020               	movlb	0	; select bank0
 10826  002C' 0096'              	movwf	___flsub@a+2
 10827  002D' 0021               	movlb	1	; select bank1
 10828  002E' 0800'              	movf	(_er+1)^(0+128),w
 10829  002F' 0020               	movlb	0	; select bank0
 10830  0030' 0095'              	movwf	___flsub@a+1
 10831  0031' 0021               	movlb	1	; select bank1
 10832  0032' 0800'              	movf	_er^(0+128),w
 10833  0033' 0020               	movlb	0	; select bank0
 10834  0034' 0094'              	movwf	___flsub@a
 10835  0035' 3180' 2000' 3180'  	fcall	___flsub
 10836  0038' 0020               	movlb	0	; select bank0
 10837  0039' 0817'              	movf	?___flsub+3,w
 10838  003A' 00A3'              	movwf	i1___flmul@a+3
 10839  003B' 0816'              	movf	?___flsub+2,w
 10840  003C' 00A2'              	movwf	i1___flmul@a+2
 10841  003D' 0815'              	movf	?___flsub+1,w
 10842  003E' 00A1'              	movwf	i1___flmul@a+1
 10843  003F' 0814'              	movf	?___flsub,w
 10844  0040' 00A0'              	movwf	i1___flmul@a
 10845  0041' 0024               	movlb	4	; select bank4
 10846  0042' 0800'              	movf	(_kd+3)^(0+512),w
 10847  0043' 0020               	movlb	0	; select bank0
 10848  0044' 009F'              	movwf	i1___flmul@b+3
 10849  0045' 0024               	movlb	4	; select bank4
 10850  0046' 0800'              	movf	(_kd+2)^(0+512),w
 10851  0047' 0020               	movlb	0	; select bank0
 10852  0048' 009E'              	movwf	i1___flmul@b+2
 10853  0049' 0024               	movlb	4	; select bank4
 10854  004A' 0800'              	movf	(_kd+1)^(0+512),w
 10855  004B' 0020               	movlb	0	; select bank0
 10856  004C' 009D'              	movwf	i1___flmul@b+1
 10857  004D' 0024               	movlb	4	; select bank4
 10858  004E' 0800'              	movf	_kd^(0+512),w
 10859  004F' 0020               	movlb	0	; select bank0
 10860  0050' 009C'              	movwf	i1___flmul@b
 10861  0051' 3180' 2000' 3180'  	fcall	i1___flmul
 10862  0054' 0020               	movlb	0	; select bank0
 10863  0055' 081F'              	movf	?i1___flmul+3,w
 10864  0056' 00C5'              	movwf	_pid$1746+3
 10865  0057' 081E'              	movf	?i1___flmul+2,w
 10866  0058' 00C4'              	movwf	_pid$1746+2
 10867  0059' 081D'              	movf	?i1___flmul+1,w
 10868  005A' 00C3'              	movwf	_pid$1746+1
 10869  005B' 081C'              	movf	?i1___flmul,w
 10870  005C' 00C2'              	movwf	_pid$1746
 10871                           
 10872                           ;charger_discharger.c: 273: void pid(float feedback, float setpoint);charger_discharger.
      +                          c: 274: {;charger_discharger.c: 275:     pidt += kd * (setpoint - feedback - er);
 10873  005D' 0845'              	movf	_pid$1746+3,w
 10874  005E' 0083'              	movwf	i1___fladd@b+3
 10875  005F' 0844'              	movf	_pid$1746+2,w
 10876  0060' 0082'              	movwf	i1___fladd@b+2
 10877  0061' 0843'              	movf	_pid$1746+1,w
 10878  0062' 0081'              	movwf	i1___fladd@b+1
 10879  0063' 0842'              	movf	_pid$1746,w
 10880  0064' 0080'              	movwf	i1___fladd@b
 10881  0065' 0023               	movlb	3	; select bank3
 10882  0066' 0800'              	movf	(_pidt+3)^(0+384),w
 10883  0067' 0020               	movlb	0	; select bank0
 10884  0068' 0087'              	movwf	i1___fladd@a+3
 10885  0069' 0023               	movlb	3	; select bank3
 10886  006A' 0800'              	movf	(_pidt+2)^(0+384),w
 10887  006B' 0020               	movlb	0	; select bank0
 10888  006C' 0086'              	movwf	i1___fladd@a+2
 10889  006D' 0023               	movlb	3	; select bank3
 10890  006E' 0800'              	movf	(_pidt+1)^(0+384),w
 10891  006F' 0020               	movlb	0	; select bank0
 10892  0070' 0085'              	movwf	i1___fladd@a+1
 10893  0071' 0023               	movlb	3	; select bank3
 10894  0072' 0800'              	movf	_pidt^(0+384),w
 10895  0073' 0020               	movlb	0	; select bank0
 10896  0074' 0084'              	movwf	i1___fladd@a
 10897  0075' 3180' 2000' 3180'  	fcall	i1___fladd
 10898  0078' 0020               	movlb	0	; select bank0
 10899  0079' 0803'              	movf	?i1___fladd+3,w
 10900  007A' 0023               	movlb	3	; select bank3
 10901  007B' 0080'              	movwf	(_pidt+3)^(0+384)
 10902  007C' 0020               	movlb	0	; select bank0
 10903  007D' 0802'              	movf	?i1___fladd+2,w
 10904  007E' 0023               	movlb	3	; select bank3
 10905  007F' 0080'              	movwf	(_pidt+2)^(0+384)
 10906  0080' 0020               	movlb	0	; select bank0
 10907  0081' 0801'              	movf	?i1___fladd+1,w
 10908  0082' 0023               	movlb	3	; select bank3
 10909  0083' 0080'              	movwf	(_pidt+1)^(0+384)
 10910  0084' 0020               	movlb	0	; select bank0
 10911  0085' 0800'              	movf	?i1___fladd,w
 10912  0086' 0023               	movlb	3	; select bank3
 10913  0087' 0080'              	movwf	_pidt^(0+384)
 10914                           
 10915                           ;charger_discharger.c: 277:     er = setpoint - feedback;
 10916  0088' 0020               	movlb	0	; select bank0
 10917  0089' 0839'              	movf	pid@feedback+3,w
 10918  008A' 0097'              	movwf	___flsub@a+3
 10919  008B' 0838'              	movf	pid@feedback+2,w
 10920  008C' 0096'              	movwf	___flsub@a+2
 10921  008D' 0837'              	movf	pid@feedback+1,w
 10922  008E' 0095'              	movwf	___flsub@a+1
 10923  008F' 0836'              	movf	pid@feedback,w
 10924  0090' 0094'              	movwf	___flsub@a
 10925  0091' 083D'              	movf	pid@setpoint+3,w
 10926  0092' 009B'              	movwf	___flsub@b+3
 10927  0093' 083C'              	movf	pid@setpoint+2,w
 10928  0094' 009A'              	movwf	___flsub@b+2
 10929  0095' 083B'              	movf	pid@setpoint+1,w
 10930  0096' 0099'              	movwf	___flsub@b+1
 10931  0097' 083A'              	movf	pid@setpoint,w
 10932  0098' 0098'              	movwf	___flsub@b
 10933  0099' 3180' 2000' 3180'  	fcall	___flsub
 10934  009C' 0020               	movlb	0	; select bank0
 10935  009D' 0817'              	movf	?___flsub+3,w
 10936  009E' 0021               	movlb	1	; select bank1
 10937  009F' 0080'              	movwf	(_er+3)^(0+128)
 10938  00A0' 0020               	movlb	0	; select bank0
 10939  00A1' 0816'              	movf	?___flsub+2,w
 10940  00A2' 0021               	movlb	1	; select bank1
 10941  00A3' 0080'              	movwf	(_er+2)^(0+128)
 10942  00A4' 0020               	movlb	0	; select bank0
 10943  00A5' 0815'              	movf	?___flsub+1,w
 10944  00A6' 0021               	movlb	1	; select bank1
 10945  00A7' 0080'              	movwf	(_er+1)^(0+128)
 10946  00A8' 0020               	movlb	0	; select bank0
 10947  00A9' 0814'              	movf	?___flsub,w
 10948  00AA' 0021               	movlb	1	; select bank1
 10949  00AB' 0080'              	movwf	_er^(0+128)
 10950                           
 10951                           ;charger_discharger.c: 278:     if(er > 1000) er = 1000;
 10952  00AC' 3044               	movlw	68
 10953  00AD' 0083'              	movwf	i1___flge@ff1+3
 10954  00AE' 307A               	movlw	122
 10955  00AF' 0082'              	movwf	i1___flge@ff1+2
 10956  00B0' 3000               	movlw	0
 10957  00B1' 0081'              	movwf	i1___flge@ff1+1
 10958  00B2' 3000               	movlw	0
 10959  00B3' 0080'              	movwf	i1___flge@ff1
 10960  00B4' 0800'              	movf	(_er+3)^(0+128),w
 10961  00B5' 0087'              	movwf	i1___flge@ff2+3
 10962  00B6' 0800'              	movf	(_er+2)^(0+128),w
 10963  00B7' 0086'              	movwf	i1___flge@ff2+2
 10964  00B8' 0800'              	movf	(_er+1)^(0+128),w
 10965  00B9' 0085'              	movwf	i1___flge@ff2+1
 10966  00BA' 0800'              	movf	_er^(0+128),w
 10967  00BB' 0084'              	movwf	i1___flge@ff2
 10968  00BC' 3180' 2000' 3180'  	fcall	i1___flge
 10969  00BF' 1803               	btfsc	3,0
 10970  00C0' 2800'              	goto	i1l5969
 10971  00C1' 3044               	movlw	68
 10972  00C2' 0021               	movlb	1	; select bank1
 10973  00C3' 0080'              	movwf	(_er+3)^(0+128)
 10974  00C4' 307A               	movlw	122
 10975  00C5' 0080'              	movwf	(_er+2)^(0+128)
 10976  00C6' 3000               	movlw	0
 10977  00C7' 0080'              	movwf	(_er+1)^(0+128)
 10978  00C8' 3000               	movlw	0
 10979  00C9' 0080'              	movwf	_er^(0+128)
 10980  00CA'                    i1l5969:
 10981                           
 10982                           ;charger_discharger.c: 279:     if(er < -1000) er = -1000;
 10983  00CA' 0021               	movlb	1	; select bank1
 10984  00CB' 0800'              	movf	(_er+3)^(0+128),w
 10985  00CC' 0083'              	movwf	i1___flge@ff1+3
 10986  00CD' 0800'              	movf	(_er+2)^(0+128),w
 10987  00CE' 0082'              	movwf	i1___flge@ff1+2
 10988  00CF' 0800'              	movf	(_er+1)^(0+128),w
 10989  00D0' 0081'              	movwf	i1___flge@ff1+1
 10990  00D1' 0800'              	movf	_er^(0+128),w
 10991  00D2' 0080'              	movwf	i1___flge@ff1
 10992  00D3' 30C4               	movlw	196
 10993  00D4' 0087'              	movwf	i1___flge@ff2+3
 10994  00D5' 307A               	movlw	122
 10995  00D6' 0086'              	movwf	i1___flge@ff2+2
 10996  00D7' 3000               	movlw	0
 10997  00D8' 0085'              	movwf	i1___flge@ff2+1
 10998  00D9' 3000               	movlw	0
 10999  00DA' 0084'              	movwf	i1___flge@ff2
 11000  00DB' 3180' 2000' 3180'  	fcall	i1___flge
 11001  00DE' 1803               	btfsc	3,0
 11002  00DF' 2800'              	goto	i1l5973
 11003  00E0' 30C4               	movlw	196
 11004  00E1' 0021               	movlb	1	; select bank1
 11005  00E2' 0080'              	movwf	(_er+3)^(0+128)
 11006  00E3' 307A               	movlw	122
 11007  00E4' 0080'              	movwf	(_er+2)^(0+128)
 11008  00E5' 3000               	movlw	0
 11009  00E6' 0080'              	movwf	(_er+1)^(0+128)
 11010  00E7' 3000               	movlw	0
 11011  00E8' 0080'              	movwf	_er^(0+128)
 11012  00E9'                    i1l5973:
 11013                           
 11014                           ;charger_discharger.c: 282:  pidi += (ki * er);
 11015  00E9' 0024               	movlb	4	; select bank4
 11016  00EA' 0800'              	movf	(_ki+3)^(0+512),w
 11017  00EB' 0020               	movlb	0	; select bank0
 11018  00EC' 00A3'              	movwf	i1___flmul@a+3
 11019  00ED' 0024               	movlb	4	; select bank4
 11020  00EE' 0800'              	movf	(_ki+2)^(0+512),w
 11021  00EF' 0020               	movlb	0	; select bank0
 11022  00F0' 00A2'              	movwf	i1___flmul@a+2
 11023  00F1' 0024               	movlb	4	; select bank4
 11024  00F2' 0800'              	movf	(_ki+1)^(0+512),w
 11025  00F3' 0020               	movlb	0	; select bank0
 11026  00F4' 00A1'              	movwf	i1___flmul@a+1
 11027  00F5' 0024               	movlb	4	; select bank4
 11028  00F6' 0800'              	movf	_ki^(0+512),w
 11029  00F7' 0020               	movlb	0	; select bank0
 11030  00F8' 00A0'              	movwf	i1___flmul@a
 11031  00F9' 0021               	movlb	1	; select bank1
 11032  00FA' 0800'              	movf	(_er+3)^(0+128),w
 11033  00FB' 0020               	movlb	0	; select bank0
 11034  00FC' 009F'              	movwf	i1___flmul@b+3
 11035  00FD' 0021               	movlb	1	; select bank1
 11036  00FE' 0800'              	movf	(_er+2)^(0+128),w
 11037  00FF' 0020               	movlb	0	; select bank0
 11038  0100' 009E'              	movwf	i1___flmul@b+2
 11039  0101' 0021               	movlb	1	; select bank1
 11040  0102' 0800'              	movf	(_er+1)^(0+128),w
 11041  0103' 0020               	movlb	0	; select bank0
 11042  0104' 009D'              	movwf	i1___flmul@b+1
 11043  0105' 0021               	movlb	1	; select bank1
 11044  0106' 0800'              	movf	_er^(0+128),w
 11045  0107' 0020               	movlb	0	; select bank0
 11046  0108' 009C'              	movwf	i1___flmul@b
 11047  0109' 3180' 2000' 3180'  	fcall	i1___flmul
 11048  010C' 0020               	movlb	0	; select bank0
 11049  010D' 081F'              	movf	?i1___flmul+3,w
 11050  010E' 0083'              	movwf	i1___fladd@b+3
 11051  010F' 081E'              	movf	?i1___flmul+2,w
 11052  0110' 0082'              	movwf	i1___fladd@b+2
 11053  0111' 081D'              	movf	?i1___flmul+1,w
 11054  0112' 0081'              	movwf	i1___fladd@b+1
 11055  0113' 081C'              	movf	?i1___flmul,w
 11056  0114' 0080'              	movwf	i1___fladd@b
 11057  0115' 0024               	movlb	4	; select bank4
 11058  0116' 0800'              	movf	(_pidi+3)^(0+512),w
 11059  0117' 0020               	movlb	0	; select bank0
 11060  0118' 0087'              	movwf	i1___fladd@a+3
 11061  0119' 0024               	movlb	4	; select bank4
 11062  011A' 0800'              	movf	(_pidi+2)^(0+512),w
 11063  011B' 0020               	movlb	0	; select bank0
 11064  011C' 0086'              	movwf	i1___fladd@a+2
 11065  011D' 0024               	movlb	4	; select bank4
 11066  011E' 0800'              	movf	(_pidi+1)^(0+512),w
 11067  011F' 0020               	movlb	0	; select bank0
 11068  0120' 0085'              	movwf	i1___fladd@a+1
 11069  0121' 0024               	movlb	4	; select bank4
 11070  0122' 0800'              	movf	_pidi^(0+512),w
 11071  0123' 0020               	movlb	0	; select bank0
 11072  0124' 0084'              	movwf	i1___fladd@a
 11073  0125' 3180' 2000' 3180'  	fcall	i1___fladd
 11074  0128' 0020               	movlb	0	; select bank0
 11075  0129' 0803'              	movf	?i1___fladd+3,w
 11076  012A' 0024               	movlb	4	; select bank4
 11077  012B' 0080'              	movwf	(_pidi+3)^(0+512)
 11078  012C' 0020               	movlb	0	; select bank0
 11079  012D' 0802'              	movf	?i1___fladd+2,w
 11080  012E' 0024               	movlb	4	; select bank4
 11081  012F' 0080'              	movwf	(_pidi+2)^(0+512)
 11082  0130' 0020               	movlb	0	; select bank0
 11083  0131' 0801'              	movf	?i1___fladd+1,w
 11084  0132' 0024               	movlb	4	; select bank4
 11085  0133' 0080'              	movwf	(_pidi+1)^(0+512)
 11086  0134' 0020               	movlb	0	; select bank0
 11087  0135' 0800'              	movf	?i1___fladd,w
 11088  0136' 0024               	movlb	4	; select bank4
 11089  0137' 0080'              	movwf	_pidi^(0+512)
 11090                           
 11091                           ;charger_discharger.c: 283:     pidt += (er * kp + pidi);
 11092  0138' 0021               	movlb	1	; select bank1
 11093  0139' 0800'              	movf	(_er+3)^(0+128),w
 11094  013A' 0020               	movlb	0	; select bank0
 11095  013B' 00A3'              	movwf	i1___flmul@a+3
 11096  013C' 0021               	movlb	1	; select bank1
 11097  013D' 0800'              	movf	(_er+2)^(0+128),w
 11098  013E' 0020               	movlb	0	; select bank0
 11099  013F' 00A2'              	movwf	i1___flmul@a+2
 11100  0140' 0021               	movlb	1	; select bank1
 11101  0141' 0800'              	movf	(_er+1)^(0+128),w
 11102  0142' 0020               	movlb	0	; select bank0
 11103  0143' 00A1'              	movwf	i1___flmul@a+1
 11104  0144' 0021               	movlb	1	; select bank1
 11105  0145' 0800'              	movf	_er^(0+128),w
 11106  0146' 0020               	movlb	0	; select bank0
 11107  0147' 00A0'              	movwf	i1___flmul@a
 11108  0148' 0024               	movlb	4	; select bank4
 11109  0149' 0800'              	movf	(_kp+3)^(0+512),w
 11110  014A' 0020               	movlb	0	; select bank0
 11111  014B' 009F'              	movwf	i1___flmul@b+3
 11112  014C' 0024               	movlb	4	; select bank4
 11113  014D' 0800'              	movf	(_kp+2)^(0+512),w
 11114  014E' 0020               	movlb	0	; select bank0
 11115  014F' 009E'              	movwf	i1___flmul@b+2
 11116  0150' 0024               	movlb	4	; select bank4
 11117  0151' 0800'              	movf	(_kp+1)^(0+512),w
 11118  0152' 0020               	movlb	0	; select bank0
 11119  0153' 009D'              	movwf	i1___flmul@b+1
 11120  0154' 0024               	movlb	4	; select bank4
 11121  0155' 0800'              	movf	_kp^(0+512),w
 11122  0156' 0020               	movlb	0	; select bank0
 11123  0157' 009C'              	movwf	i1___flmul@b
 11124  0158' 3180' 2000' 3180'  	fcall	i1___flmul
 11125  015B' 0020               	movlb	0	; select bank0
 11126  015C' 081F'              	movf	?i1___flmul+3,w
 11127  015D' 0087'              	movwf	i1___fladd@a+3
 11128  015E' 081E'              	movf	?i1___flmul+2,w
 11129  015F' 0086'              	movwf	i1___fladd@a+2
 11130  0160' 081D'              	movf	?i1___flmul+1,w
 11131  0161' 0085'              	movwf	i1___fladd@a+1
 11132  0162' 081C'              	movf	?i1___flmul,w
 11133  0163' 0084'              	movwf	i1___fladd@a
 11134  0164' 0024               	movlb	4	; select bank4
 11135  0165' 0800'              	movf	(_pidi+3)^(0+512),w
 11136  0166' 0020               	movlb	0	; select bank0
 11137  0167' 0083'              	movwf	i1___fladd@b+3
 11138  0168' 0024               	movlb	4	; select bank4
 11139  0169' 0800'              	movf	(_pidi+2)^(0+512),w
 11140  016A' 0020               	movlb	0	; select bank0
 11141  016B' 0082'              	movwf	i1___fladd@b+2
 11142  016C' 0024               	movlb	4	; select bank4
 11143  016D' 0800'              	movf	(_pidi+1)^(0+512),w
 11144  016E' 0020               	movlb	0	; select bank0
 11145  016F' 0081'              	movwf	i1___fladd@b+1
 11146  0170' 0024               	movlb	4	; select bank4
 11147  0171' 0800'              	movf	_pidi^(0+512),w
 11148  0172' 0020               	movlb	0	; select bank0
 11149  0173' 0080'              	movwf	i1___fladd@b
 11150  0174' 3180' 2000' 3180'  	fcall	i1___fladd
 11151  0177' 0020               	movlb	0	; select bank0
 11152  0178' 0803'              	movf	?i1___fladd+3,w
 11153  0179' 00C9'              	movwf	_pid$1747+3
 11154  017A' 0802'              	movf	?i1___fladd+2,w
 11155  017B' 00C8'              	movwf	_pid$1747+2
 11156  017C' 0801'              	movf	?i1___fladd+1,w
 11157  017D' 00C7'              	movwf	_pid$1747+1
 11158  017E' 0800'              	movf	?i1___fladd,w
 11159  017F' 00C6'              	movwf	_pid$1747
 11160                           
 11161                           ;charger_discharger.c: 283:     pidt += (er * kp + pidi);
 11162  0180' 0849'              	movf	_pid$1747+3,w
 11163  0181' 0083'              	movwf	i1___fladd@b+3
 11164  0182' 0848'              	movf	_pid$1747+2,w
 11165  0183' 0082'              	movwf	i1___fladd@b+2
 11166  0184' 0847'              	movf	_pid$1747+1,w
 11167  0185' 0081'              	movwf	i1___fladd@b+1
 11168  0186' 0846'              	movf	_pid$1747,w
 11169  0187' 0080'              	movwf	i1___fladd@b
 11170  0188' 0023               	movlb	3	; select bank3
 11171  0189' 0800'              	movf	(_pidt+3)^(0+384),w
 11172  018A' 0020               	movlb	0	; select bank0
 11173  018B' 0087'              	movwf	i1___fladd@a+3
 11174  018C' 0023               	movlb	3	; select bank3
 11175  018D' 0800'              	movf	(_pidt+2)^(0+384),w
 11176  018E' 0020               	movlb	0	; select bank0
 11177  018F' 0086'              	movwf	i1___fladd@a+2
 11178  0190' 0023               	movlb	3	; select bank3
 11179  0191' 0800'              	movf	(_pidt+1)^(0+384),w
 11180  0192' 0020               	movlb	0	; select bank0
 11181  0193' 0085'              	movwf	i1___fladd@a+1
 11182  0194' 0023               	movlb	3	; select bank3
 11183  0195' 0800'              	movf	_pidt^(0+384),w
 11184  0196' 0020               	movlb	0	; select bank0
 11185  0197' 0084'              	movwf	i1___fladd@a
 11186  0198' 3180' 2000' 3180'  	fcall	i1___fladd
 11187  019B' 0020               	movlb	0	; select bank0
 11188  019C' 0803'              	movf	?i1___fladd+3,w
 11189  019D' 0023               	movlb	3	; select bank3
 11190  019E' 0080'              	movwf	(_pidt+3)^(0+384)
 11191  019F' 0020               	movlb	0	; select bank0
 11192  01A0' 0802'              	movf	?i1___fladd+2,w
 11193  01A1' 0023               	movlb	3	; select bank3
 11194  01A2' 0080'              	movwf	(_pidt+2)^(0+384)
 11195  01A3' 0020               	movlb	0	; select bank0
 11196  01A4' 0801'              	movf	?i1___fladd+1,w
 11197  01A5' 0023               	movlb	3	; select bank3
 11198  01A6' 0080'              	movwf	(_pidt+1)^(0+384)
 11199  01A7' 0020               	movlb	0	; select bank0
 11200  01A8' 0800'              	movf	?i1___fladd,w
 11201  01A9' 0023               	movlb	3	; select bank3
 11202  01AA' 0080'              	movwf	_pidt^(0+384)
 11203                           
 11204                           ;charger_discharger.c: 285:     if (pidt >= 300.0) pidt = 300.0;
 11205  01AB' 0800'              	movf	(_pidt+3)^(0+384),w
 11206  01AC' 0083'              	movwf	i1___flge@ff1+3
 11207  01AD' 0800'              	movf	(_pidt+2)^(0+384),w
 11208  01AE' 0082'              	movwf	i1___flge@ff1+2
 11209  01AF' 0800'              	movf	(_pidt+1)^(0+384),w
 11210  01B0' 0081'              	movwf	i1___flge@ff1+1
 11211  01B1' 0800'              	movf	_pidt^(0+384),w
 11212  01B2' 0080'              	movwf	i1___flge@ff1
 11213  01B3' 3043               	movlw	67
 11214  01B4' 0087'              	movwf	i1___flge@ff2+3
 11215  01B5' 3096               	movlw	150
 11216  01B6' 0086'              	movwf	i1___flge@ff2+2
 11217  01B7' 3000               	movlw	0
 11218  01B8' 0085'              	movwf	i1___flge@ff2+1
 11219  01B9' 3000               	movlw	0
 11220  01BA' 0084'              	movwf	i1___flge@ff2
 11221  01BB' 3180' 2000' 3180'  	fcall	i1___flge
 11222  01BE' 1C03               	btfss	3,0
 11223  01BF' 2800'              	goto	i1l5983
 11224  01C0' 3043               	movlw	67
 11225  01C1' 0023               	movlb	3	; select bank3
 11226  01C2' 0080'              	movwf	(_pidt+3)^(0+384)
 11227  01C3' 3096               	movlw	150
 11228  01C4' 0080'              	movwf	(_pidt+2)^(0+384)
 11229  01C5' 3000               	movlw	0
 11230  01C6' 0080'              	movwf	(_pidt+1)^(0+384)
 11231  01C7' 3000               	movlw	0
 11232  01C8' 0080'              	movwf	_pidt^(0+384)
 11233  01C9' 0008               	return
 11234  01CA'                    i1l5983:
 11235  01CA' 3042               	movlw	66
 11236  01CB' 0083'              	movwf	i1___flge@ff1+3
 11237  01CC' 3048               	movlw	72
 11238  01CD' 0082'              	movwf	i1___flge@ff1+2
 11239  01CE' 3000               	movlw	0
 11240  01CF' 0081'              	movwf	i1___flge@ff1+1
 11241  01D0' 3000               	movlw	0
 11242  01D1' 0080'              	movwf	i1___flge@ff1
 11243  01D2' 0023               	movlb	3	; select bank3
 11244  01D3' 0800'              	movf	(_pidt+3)^(0+384),w
 11245  01D4' 0087'              	movwf	i1___flge@ff2+3
 11246  01D5' 0800'              	movf	(_pidt+2)^(0+384),w
 11247  01D6' 0086'              	movwf	i1___flge@ff2+2
 11248  01D7' 0800'              	movf	(_pidt+1)^(0+384),w
 11249  01D8' 0085'              	movwf	i1___flge@ff2+1
 11250  01D9' 0800'              	movf	_pidt^(0+384),w
 11251  01DA' 0084'              	movwf	i1___flge@ff2
 11252  01DB' 3180' 2000' 3180'  	fcall	i1___flge
 11253  01DE' 1C03               	btfss	3,0
 11254  01DF' 0008               	return
 11255  01E0' 3042               	movlw	66
 11256  01E1' 0023               	movlb	3	; select bank3
 11257  01E2' 0080'              	movwf	(_pidt+3)^(0+384)
 11258  01E3' 3048               	movlw	72
 11259  01E4' 0080'              	movwf	(_pidt+2)^(0+384)
 11260  01E5' 3000               	movlw	0
 11261  01E6' 0080'              	movwf	(_pidt+1)^(0+384)
 11262  01E7' 3000               	movlw	0
 11263  01E8' 0080'              	movwf	_pidt^(0+384)
 11264  01E9' 0008               	return
 11265  01EA'                    __end_of_pid:
 11266                           
 11267                           	psect	text34
 11268  0000'                    __ptext34:	
 11269 ;; *************** function i1___flge *****************
 11270 ;; Defined at:
 11271 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11272 ;; Parameters:    Size  Location     Type
 11273 ;;  ff1             4    0[COMMON] void 
 11274 ;;  ff2             4    4[COMMON] void 
 11275 ;; Auto vars:     Size  Location     Type
 11276 ;;		None
 11277 ;; Return value:  Size  Location     Type
 11278 ;;		None               void
 11279 ;; Registers used:
 11280 ;;		wreg, status,2, status,0
 11281 ;; Tracked objects:
 11282 ;;		On entry : 0/0
 11283 ;;		On exit  : 0/0
 11284 ;;		Unchanged: 0/0
 11285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11286 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11288 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11289 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11290 ;;Total ram usage:       12 bytes
 11291 ;; Hardware stack levels used: 1
 11292 ;; This function calls:
 11293 ;;		Nothing
 11294 ;; This function is called by:
 11295 ;;		_pid
 11296 ;; This function uses a non-reentrant model
 11297 ;;
 11298                           
 11299  0000'                    i1___flge:	
 11300                           ;psect for function i1___flge
 11301                           
 11302                           
 11303                           ;incstack = 0
 11304                           ; Regs used in i1___flge: [wreg+status,2+status,0]
 11305  0000' 3000               	movlw	0
 11306  0001' 0500'              	andwf	i1___flge@ff1,w
 11307  0002' 0088'              	movwf	??i1___flge
 11308  0003' 3000               	movlw	0
 11309  0004' 0501'              	andwf	i1___flge@ff1+1,w
 11310  0005' 0089'              	movwf	??i1___flge+1
 11311  0006' 3080               	movlw	128
 11312  0007' 0502'              	andwf	i1___flge@ff1+2,w
 11313  0008' 008A'              	movwf	??i1___flge+2
 11314  0009' 307F               	movlw	127
 11315  000A' 0503'              	andwf	i1___flge@ff1+3,w
 11316  000B' 008B'              	movwf	??i1___flge+3
 11317  000C' 080B'              	movf	??i1___flge+3,w
 11318  000D' 040A'              	iorwf	??i1___flge+2,w
 11319  000E' 0409'              	iorwf	??i1___flge+1,w
 11320  000F' 0408'              	iorwf	??i1___flge,w
 11321  0010' 1D03               	skipz
 11322  0011' 2800'              	goto	i1l1224
 11323  0012' 3000               	movlw	0
 11324  0013' 0083'              	movwf	i1___flge@ff1+3
 11325  0014' 3000               	movlw	0
 11326  0015' 0082'              	movwf	i1___flge@ff1+2
 11327  0016' 3000               	movlw	0
 11328  0017' 0081'              	movwf	i1___flge@ff1+1
 11329  0018' 3000               	movlw	0
 11330  0019' 0080'              	movwf	i1___flge@ff1
 11331  001A'                    i1l1224:
 11332  001A' 3000               	movlw	0
 11333  001B' 0504'              	andwf	i1___flge@ff2,w
 11334  001C' 0088'              	movwf	??i1___flge
 11335  001D' 3000               	movlw	0
 11336  001E' 0505'              	andwf	i1___flge@ff2+1,w
 11337  001F' 0089'              	movwf	??i1___flge+1
 11338  0020' 3080               	movlw	128
 11339  0021' 0506'              	andwf	i1___flge@ff2+2,w
 11340  0022' 008A'              	movwf	??i1___flge+2
 11341  0023' 307F               	movlw	127
 11342  0024' 0507'              	andwf	i1___flge@ff2+3,w
 11343  0025' 008B'              	movwf	??i1___flge+3
 11344  0026' 080B'              	movf	??i1___flge+3,w
 11345  0027' 040A'              	iorwf	??i1___flge+2,w
 11346  0028' 0409'              	iorwf	??i1___flge+1,w
 11347  0029' 0408'              	iorwf	??i1___flge,w
 11348  002A' 1D03               	skipz
 11349  002B' 2800'              	goto	i1l5583
 11350  002C' 3000               	movlw	0
 11351  002D' 0087'              	movwf	i1___flge@ff2+3
 11352  002E' 3000               	movlw	0
 11353  002F' 0086'              	movwf	i1___flge@ff2+2
 11354  0030' 3000               	movlw	0
 11355  0031' 0085'              	movwf	i1___flge@ff2+1
 11356  0032' 3000               	movlw	0
 11357  0033' 0084'              	movwf	i1___flge@ff2
 11358  0034'                    i1l5583:
 11359  0034' 1F83'              	btfss	i1___flge@ff1+3,7
 11360  0035' 2800'              	goto	i1l5587
 11361  0036' 3000               	movlw	0
 11362  0037' 0088'              	movwf	??i1___flge
 11363  0038' 3000               	movlw	0
 11364  0039' 0089'              	movwf	??i1___flge+1
 11365  003A' 3000               	movlw	0
 11366  003B' 008A'              	movwf	??i1___flge+2
 11367  003C' 3080               	movlw	128
 11368  003D' 008B'              	movwf	??i1___flge+3
 11369  003E' 0800'              	movf	i1___flge@ff1,w
 11370  003F' 0288'              	subwf	??i1___flge,f
 11371  0040' 0801'              	movf	i1___flge@ff1+1,w
 11372  0041' 3B89'              	subwfb	??i1___flge+1,f
 11373  0042' 0802'              	movf	i1___flge@ff1+2,w
 11374  0043' 3B8A'              	subwfb	??i1___flge+2,f
 11375  0044' 0803'              	movf	i1___flge@ff1+3,w
 11376  0045' 3B8B'              	subwfb	??i1___flge+3,f
 11377  0046' 080B'              	movf	??i1___flge+3,w
 11378  0047' 0083'              	movwf	i1___flge@ff1+3
 11379  0048' 080A'              	movf	??i1___flge+2,w
 11380  0049' 0082'              	movwf	i1___flge@ff1+2
 11381  004A' 0809'              	movf	??i1___flge+1,w
 11382  004B' 0081'              	movwf	i1___flge@ff1+1
 11383  004C' 0808'              	movf	??i1___flge,w
 11384  004D' 0080'              	movwf	i1___flge@ff1
 11385  004E'                    i1l5587:
 11386  004E' 1F87'              	btfss	i1___flge@ff2+3,7
 11387  004F' 2800'              	goto	i1l1227
 11388  0050' 3000               	movlw	0
 11389  0051' 0088'              	movwf	??i1___flge
 11390  0052' 3000               	movlw	0
 11391  0053' 0089'              	movwf	??i1___flge+1
 11392  0054' 3000               	movlw	0
 11393  0055' 008A'              	movwf	??i1___flge+2
 11394  0056' 3080               	movlw	128
 11395  0057' 008B'              	movwf	??i1___flge+3
 11396  0058' 0804'              	movf	i1___flge@ff2,w
 11397  0059' 0288'              	subwf	??i1___flge,f
 11398  005A' 0805'              	movf	i1___flge@ff2+1,w
 11399  005B' 3B89'              	subwfb	??i1___flge+1,f
 11400  005C' 0806'              	movf	i1___flge@ff2+2,w
 11401  005D' 3B8A'              	subwfb	??i1___flge+2,f
 11402  005E' 0807'              	movf	i1___flge@ff2+3,w
 11403  005F' 3B8B'              	subwfb	??i1___flge+3,f
 11404  0060' 080B'              	movf	??i1___flge+3,w
 11405  0061' 0087'              	movwf	i1___flge@ff2+3
 11406  0062' 080A'              	movf	??i1___flge+2,w
 11407  0063' 0086'              	movwf	i1___flge@ff2+2
 11408  0064' 0809'              	movf	??i1___flge+1,w
 11409  0065' 0085'              	movwf	i1___flge@ff2+1
 11410  0066' 0808'              	movf	??i1___flge,w
 11411  0067' 0084'              	movwf	i1___flge@ff2
 11412  0068'                    i1l1227:
 11413  0068' 3080               	movlw	128
 11414  0069' 0683'              	xorwf	i1___flge@ff1+3,f
 11415  006A' 3080               	movlw	128
 11416  006B' 0687'              	xorwf	i1___flge@ff2+3,f
 11417  006C' 0807'              	movf	i1___flge@ff2+3,w
 11418  006D' 0203'              	subwf	i1___flge@ff1+3,w
 11419  006E' 1D03               	skipz
 11420  006F' 0008               	return
 11421  0070' 0806'              	movf	i1___flge@ff2+2,w
 11422  0071' 0202'              	subwf	i1___flge@ff1+2,w
 11423  0072' 1D03               	skipz
 11424  0073' 0008               	return
 11425  0074' 0805'              	movf	i1___flge@ff2+1,w
 11426  0075' 0201'              	subwf	i1___flge@ff1+1,w
 11427  0076' 1D03               	skipz
 11428  0077' 0008               	return
 11429  0078' 0804'              	movf	i1___flge@ff2,w
 11430  0079' 0200'              	subwf	i1___flge@ff1,w
 11431  007A' 0008               	return
 11432  007B'                    __end_ofi1___flge:
 11433                           
 11434                           	psect	text35
 11435  0000'                    __ptext35:	
 11436 ;; *************** function ___flsub *****************
 11437 ;; Defined at:
 11438 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 11439 ;; Parameters:    Size  Location     Type
 11440 ;;  a               4   20[BANK0 ] void 
 11441 ;;  b               4   24[BANK0 ] void 
 11442 ;; Auto vars:     Size  Location     Type
 11443 ;;		None
 11444 ;; Return value:  Size  Location     Type
 11445 ;;                  4   20[BANK0 ] void 
 11446 ;; Registers used:
 11447 ;;		wreg, status,2, status,0, pclath, cstack
 11448 ;; Tracked objects:
 11449 ;;		On entry : 0/0
 11450 ;;		On exit  : 0/0
 11451 ;;		Unchanged: 0/0
 11452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11453 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11456 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11457 ;;Total ram usage:        8 bytes
 11458 ;; Hardware stack levels used: 1
 11459 ;; Hardware stack levels required when called: 1
 11460 ;; This function calls:
 11461 ;;		i1___fladd
 11462 ;; This function is called by:
 11463 ;;		_pid
 11464 ;; This function uses a non-reentrant model
 11465 ;;
 11466                           
 11467  0000'                    ___flsub:	
 11468                           ;psect for function ___flsub
 11469                           
 11470                           
 11471                           ;incstack = 0
 11472                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 11473  0000' 3080               	movlw	128
 11474  0001' 0020               	movlb	0	; select bank0
 11475  0002' 0697'              	xorwf	___flsub@a+3,f
 11476  0003' 081B'              	movf	___flsub@b+3,w
 11477  0004' 0083'              	movwf	i1___fladd@b+3
 11478  0005' 081A'              	movf	___flsub@b+2,w
 11479  0006' 0082'              	movwf	i1___fladd@b+2
 11480  0007' 0819'              	movf	___flsub@b+1,w
 11481  0008' 0081'              	movwf	i1___fladd@b+1
 11482  0009' 0818'              	movf	___flsub@b,w
 11483  000A' 0080'              	movwf	i1___fladd@b
 11484  000B' 0817'              	movf	___flsub@a+3,w
 11485  000C' 0087'              	movwf	i1___fladd@a+3
 11486  000D' 0816'              	movf	___flsub@a+2,w
 11487  000E' 0086'              	movwf	i1___fladd@a+2
 11488  000F' 0815'              	movf	___flsub@a+1,w
 11489  0010' 0085'              	movwf	i1___fladd@a+1
 11490  0011' 0814'              	movf	___flsub@a,w
 11491  0012' 0084'              	movwf	i1___fladd@a
 11492  0013' 3180' 2000'        	fcall	i1___fladd
 11493  0015' 0020               	movlb	0	; select bank0
 11494  0016' 0803'              	movf	?i1___fladd+3,w
 11495  0017' 0097'              	movwf	?___flsub+3
 11496  0018' 0802'              	movf	?i1___fladd+2,w
 11497  0019' 0096'              	movwf	?___flsub+2
 11498  001A' 0801'              	movf	?i1___fladd+1,w
 11499  001B' 0095'              	movwf	?___flsub+1
 11500  001C' 0800'              	movf	?i1___fladd,w
 11501  001D' 0094'              	movwf	?___flsub
 11502  001E' 0008               	return
 11503  001F'                    __end_of___flsub:
 11504                           
 11505                           	psect	text36
 11506  0000'                    __ptext36:	
 11507 ;; *************** function _command_interpreter *****************
 11508 ;; Defined at:
 11509 ;;		line 126 in file "charger_discharger.c"
 11510 ;; Parameters:    Size  Location     Type
 11511 ;;		None
 11512 ;; Auto vars:     Size  Location     Type
 11513 ;;  data           20   23[BANK1 ] unsigned char [20]
 11514 ;;  calc_checksu    2   47[BANK1 ] unsigned short 
 11515 ;;  checksum        2   43[BANK1 ] unsigned short 
 11516 ;;  length          1   50[BANK1 ] unsigned char 
 11517 ;;  code            1   49[BANK1 ] unsigned char 
 11518 ;;  operation       1   46[BANK1 ] unsigned char 
 11519 ;;  test            1   45[BANK1 ] _Bool 
 11520 ;; Return value:  Size  Location     Type
 11521 ;;                  1    wreg      _Bool 
 11522 ;; Registers used:
 11523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11524 ;; Tracked objects:
 11525 ;;		On entry : 0/0
 11526 ;;		On exit  : 0/0
 11527 ;;		Unchanged: 0/0
 11528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11530 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
 11531 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11532 ;;      Totals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0
 11533 ;;Total ram usage:       31 bytes
 11534 ;; Hardware stack levels used: 1
 11535 ;; Hardware stack levels required when called: 3
 11536 ;; This function calls:
 11537 ;;		_UART_get_byte
 11538 ;;		_UART_get_some_bytes
 11539 ;;		_UART_send_header
 11540 ;;		_calculate_checksum
 11541 ;;		_put_data_into_structure
 11542 ;;		i1_UART_send_byte
 11543 ;;		i1_UART_send_some_bytes
 11544 ;;		i1___fladd
 11545 ;;		i1___fldiv
 11546 ;;		i1___flmul
 11547 ;;		i1___fltol
 11548 ;;		i1___xxtofl
 11549 ;;		i1_converter_settings
 11550 ;;		i1_getTime
 11551 ;; This function is called by:
 11552 ;;		_ISR
 11553 ;; This function uses a non-reentrant model
 11554 ;;
 11555                           
 11556  0000'                    _command_interpreter:	
 11557                           ;psect for function _command_interpreter
 11558                           
 11559                           
 11560                           ;charger_discharger.c: 128:     _Bool test = 1;
 11561                           
 11562                           ;incstack = 0
 11563                           ; Regs used in _command_interpreter: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11564  0000' 0021               	movlb	1	; select bank1
 11565  0001' 0180'              	clrf	command_interpreter@test^(0+128)
 11566  0002' 0A80'              	incf	command_interpreter@test^(0+128),f
 11567                           
 11568                           ;charger_discharger.c: 130:     uint8_t code = 0x00;
 11569  0003' 0180'              	clrf	command_interpreter@code^(0+128)
 11570                           
 11571                           ;charger_discharger.c: 131:     uint8_t length = 0x00;
 11572  0004' 0180'              	clrf	command_interpreter@length^(0+128)
 11573                           
 11574                           ;charger_discharger.c: 132:     uint8_t data[20] = {0x00};
 11575  0005' 3000'              	movlw	low command_interpreter@F5995
 11576  0006' 0086               	movwf	6
 11577  0007' 3000'              	movlw	high command_interpreter@F5995
 11578  0008' 0087               	movwf	7
 11579  0009' 3000'              	movlw	low command_interpreter@data
 11580  000A' 0084               	movwf	4
 11581  000B' 3000'              	movlw	high command_interpreter@data
 11582  000C' 0085               	movwf	5
 11583  000D' 3014               	movlw	20
 11584  000E' 0080'              	movwf	??_command_interpreter^(0+128)
 11585  000F'                    u726_20:
 11586  000F' 0016               	moviw fsr1++
 11587  0010' 001A               	movwi fsr0++
 11588  0011' 0B80'              	decfsz	??_command_interpreter^(0+128),f
 11589  0012' 2800'              	goto	u726_20
 11590                           
 11591                           ;charger_discharger.c: 135:     basic_configuration_ptr = &basic_configuration;
 11592  0013' 3000'              	movlw	(low (_basic_configuration| (0+512)))& (0+255)
 11593  0014' 0080'              	movwf	_basic_configuration_ptr^(0+128)
 11594                           
 11595                           ;charger_discharger.c: 136:     test_configuration_ptr = &test_configuration;
 11596  0015' 3000'              	movlw	(low (_test_configuration| (0+512)))& (0+255)
 11597  0016' 0080'              	movwf	_test_configuration_ptr^(0+128)
 11598                           
 11599                           ;charger_discharger.c: 137:     converter_configuration_ptr = &converter_configuration;
 11600  0017' 3000'              	movlw	(low (_converter_configuration| (0+512)))& (0+255)
 11601  0018' 0080'              	movwf	_converter_configuration_ptr^(0+128)
 11602                           
 11603                           ;charger_discharger.c: 138:     if (!start)
 11604  0019' 0800'              	movf	_start^(0+128),w
 11605  001A' 1D03               	btfss	3,2
 11606  001B' 2800'              	goto	i1l7409
 11607                           
 11608                           ;charger_discharger.c: 139:     {;charger_discharger.c: 140:         if(UART_get_byte()=
      +                          =0xDD)
 11609  001C' 3180' 2000' 3180'  	fcall	_UART_get_byte
 11610  001F' 3ADD               	xorlw	221
 11611  0020' 1D03               	skipz
 11612  0021' 2800'              	goto	i1l7407
 11613                           
 11614                           ;charger_discharger.c: 141:         {;charger_discharger.c: 142:             operation =
      +                           UART_get_byte();
 11615  0022' 3180' 2000' 3180'  	fcall	_UART_get_byte
 11616  0025' 0021               	movlb	1	; select bank1
 11617  0026' 0080'              	movwf	command_interpreter@operation^(0+128)
 11618                           
 11619                           ;charger_discharger.c: 143:             code = UART_get_byte();
 11620  0027' 3180' 2000' 3180'  	fcall	_UART_get_byte
 11621  002A' 0021               	movlb	1	; select bank1
 11622  002B' 0080'              	movwf	command_interpreter@code^(0+128)
 11623                           
 11624                           ;charger_discharger.c: 144:             length = UART_get_byte();
 11625  002C' 3180' 2000' 3180'  	fcall	_UART_get_byte
 11626  002F' 0021               	movlb	1	; select bank1
 11627  0030' 0080'              	movwf	command_interpreter@length^(0+128)
 11628                           
 11629                           ;charger_discharger.c: 145:             if (length>0) UART_get_some_bytes(length, (uint8
      +                          _t*)data);
 11630  0031' 0800'              	movf	command_interpreter@length^(0+128),w
 11631  0032' 1903               	btfsc	3,2
 11632  0033' 2800'              	goto	i1l7299
 11633  0034' 3000'              	movlw	(low (command_interpreter@data| 0))& (0+255)
 11634  0035' 0080'              	movwf	UART_get_some_bytes@data
 11635  0036' 0800'              	movf	command_interpreter@length^(0+128),w
 11636  0037' 3180' 2000' 3180'  	fcall	_UART_get_some_bytes
 11637  003A'                    i1l7299:
 11638                           
 11639                           ;charger_discharger.c: 146:             checksum = UART_get_byte();
 11640  003A' 3180' 2000' 3180'  	fcall	_UART_get_byte
 11641  003D' 0021               	movlb	1	; select bank1
 11642  003E' 0080'              	movwf	??_command_interpreter^(0+128)
 11643  003F' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 11644  0040' 0800'              	movf	??_command_interpreter^(0+128),w
 11645  0041' 0080'              	movwf	command_interpreter@checksum^(0+128)
 11646  0042' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 11647  0043' 0080'              	movwf	(command_interpreter@checksum+1)^(0+128)
 11648                           
 11649                           ;charger_discharger.c: 147:             checksum += UART_get_byte()* 256;
 11650  0044' 3180' 2000' 3180'  	fcall	_UART_get_byte
 11651  0047' 0021               	movlb	1	; select bank1
 11652  0048' 0080'              	movwf	??_command_interpreter^(0+128)
 11653  0049' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 11654  004A' 0800'              	movf	??_command_interpreter^(0+128),w
 11655  004B' 0081'              	movwf	(??_command_interpreter^(0+128)+1)
 11656  004C' 0180'              	clrf	??_command_interpreter^(0+128)
 11657  004D' 0800'              	movf	??_command_interpreter^(0+128),w
 11658  004E' 0780'              	addwf	command_interpreter@checksum^(0+128),f
 11659  004F' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 11660  0050' 3D80'              	addwfc	(command_interpreter@checksum+1)^(0+128),f
 11661                           
 11662                           ;charger_discharger.c: 148:             calc_checksum = calculate_checksum(code, length,
      +                           (uint8_t*)data);
 11663  0051' 0800'              	movf	command_interpreter@length^(0+128),w
 11664  0052' 0080'              	movwf	calculate_checksum@length
 11665  0053' 3000'              	movlw	low command_interpreter@data
 11666  0054' 0081'              	movwf	calculate_checksum@data
 11667  0055' 3000'              	movlw	high command_interpreter@data
 11668  0056' 0082'              	movwf	calculate_checksum@data+1
 11669  0057' 0800'              	movf	command_interpreter@code^(0+128),w
 11670  0058' 3180' 2000' 3180'  	fcall	_calculate_checksum
 11671  005B' 0801'              	movf	?_calculate_checksum+1,w
 11672  005C' 0021               	movlb	1	; select bank1
 11673  005D' 0080'              	movwf	(command_interpreter@calc_checksum+1)^(0+128)
 11674  005E' 0800'              	movf	?_calculate_checksum,w
 11675  005F' 0080'              	movwf	command_interpreter@calc_checksum^(0+128)
 11676                           
 11677                           ;charger_discharger.c: 149:             if(UART_get_byte() != 0x77)
 11678  0060' 3180' 2000' 3180'  	fcall	_UART_get_byte
 11679  0063' 3A77               	xorlw	119
 11680  0064' 1903               	skipnz
 11681  0065' 2800'              	goto	i1l7307
 11682                           
 11683                           ;charger_discharger.c: 150:             {;charger_discharger.c: 151:                 tes
      +                          t = 0;
 11684  0066' 0021               	movlb	1	; select bank1
 11685  0067' 0180'              	clrf	command_interpreter@test^(0+128)
 11686  0068'                    i1l7307:
 11687                           
 11688                           ;charger_discharger.c: 153:             if (checksum != calc_checksum)
 11689  0068' 0021               	movlb	1	; select bank1
 11690  0069' 0800'              	movf	(command_interpreter@calc_checksum+1)^(0+128),w
 11691  006A' 0600'              	xorwf	(command_interpreter@checksum+1)^(0+128),w
 11692  006B' 1D03               	skipz
 11693  006C' 2800'              	goto	u731_25
 11694  006D' 0800'              	movf	command_interpreter@calc_checksum^(0+128),w
 11695  006E' 0600'              	xorwf	command_interpreter@checksum^(0+128),w
 11696  006F'                    u731_25:
 11697  006F' 1D03               	btfss	3,2
 11698                           
 11699                           ;charger_discharger.c: 154:             {;charger_discharger.c: 155:                 tes
      +                          t = 0;
 11700  0070' 0180'              	clrf	command_interpreter@test^(0+128)
 11701                           
 11702                           ;charger_discharger.c: 157:             if(!start)
 11703  0071' 0800'              	movf	_start^(0+128),w
 11704  0072' 1903               	btfsc	3,2
 11705  0073' 2800'              	goto	i1l7405
 11706  0074' 2800'              	goto	i1l7427
 11707  0075'                    i1l7315:
 11708                           
 11709                           ;charger_discharger.c: 162:                         UART_send_header(0xDD, operation, co
      +                          de);
 11710  0075' 0800'              	movf	command_interpreter@operation^(0+128),w
 11711  0076' 0081'              	movwf	UART_send_header@operation
 11712  0077' 0800'              	movf	command_interpreter@code^(0+128),w
 11713  0078' 0082'              	movwf	UART_send_header@code
 11714  0079' 30DD               	movlw	221
 11715  007A' 3180' 2000' 3180'  	fcall	_UART_send_header
 11716                           
 11717                           ;charger_discharger.c: 163:                         switch (code)
 11718  007D' 2800'              	goto	i1l7343
 11719  007E'                    i1l7317:
 11720                           
 11721                           ;charger_discharger.c: 167:                                 UART_send_byte(length);
 11722  007E' 3011               	movlw	17
 11723  007F' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 11724                           
 11725                           ;charger_discharger.c: 168:                                 UART_send_some_bytes(length,
      +                           (uint8_t*)basic_configuration_ptr);
 11726  0082' 0021               	movlb	1	; select bank1
 11727  0083' 0800'              	movf	_basic_configuration_ptr^(0+128),w
 11728  0084' 0081'              	movwf	i1UART_send_some_bytes@data
 11729  0085' 39FF               	andlw	255
 11730  0086' 1D03               	skipz
 11731  0087' 3002               	movlw	2
 11732  0088' 0082'              	movwf	i1UART_send_some_bytes@data+1
 11733  0089' 3011               	movlw	17
 11734  008A' 3180' 2000' 3180'  	fcall	i1_UART_send_some_bytes
 11735                           
 11736                           ;charger_discharger.c: 169:                                 calc_checksum = calculate_ch
      +                          ecksum(code, length, (uint8_t*)basic_configuration_ptr);
 11737  008D' 3011               	movlw	17
 11738  008E' 0080'              	movwf	calculate_checksum@length
 11739  008F' 0021               	movlb	1	; select bank1
 11740  0090' 0800'              	movf	_basic_configuration_ptr^(0+128),w
 11741  0091' 2800'              	goto	L15
 11742  0092'                    i1l7325:	
 11743                           ;charger_discharger.c: 170:                                 break;
 11744                           
 11745                           
 11746                           ;charger_discharger.c: 173:                                 UART_send_byte(length);
 11747  0092' 3011               	movlw	17
 11748  0093' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 11749                           
 11750                           ;charger_discharger.c: 174:                                 UART_send_some_bytes(length,
      +                           (uint8_t*)test_configuration_ptr);
 11751  0096' 0021               	movlb	1	; select bank1
 11752  0097' 0800'              	movf	_test_configuration_ptr^(0+128),w
 11753  0098' 0081'              	movwf	i1UART_send_some_bytes@data
 11754  0099' 39FF               	andlw	255
 11755  009A' 1D03               	skipz
 11756  009B' 3002               	movlw	2
 11757  009C' 0082'              	movwf	i1UART_send_some_bytes@data+1
 11758  009D' 3011               	movlw	17
 11759  009E' 3180' 2000' 3180'  	fcall	i1_UART_send_some_bytes
 11760                           
 11761                           ;charger_discharger.c: 175:                                 calc_checksum = calculate_ch
      +                          ecksum(code, length, (uint8_t*)test_configuration_ptr);
 11762  00A1' 3011               	movlw	17
 11763  00A2' 0080'              	movwf	calculate_checksum@length
 11764  00A3' 0021               	movlb	1	; select bank1
 11765  00A4' 0800'              	movf	_test_configuration_ptr^(0+128),w
 11766  00A5' 2800'              	goto	L15
 11767  00A6'                    i1l7333:	
 11768                           ;charger_discharger.c: 176:                                 break;
 11769                           
 11770                           
 11771                           ;charger_discharger.c: 179:                                 UART_send_byte(length);
 11772  00A6' 300E               	movlw	14
 11773  00A7' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 11774                           
 11775                           ;charger_discharger.c: 180:                                 UART_send_some_bytes(length,
      +                           (uint8_t*)converter_configuration_ptr);
 11776  00AA' 0021               	movlb	1	; select bank1
 11777  00AB' 0800'              	movf	_converter_configuration_ptr^(0+128),w
 11778  00AC' 0081'              	movwf	i1UART_send_some_bytes@data
 11779  00AD' 39FF               	andlw	255
 11780  00AE' 1D03               	skipz
 11781  00AF' 3002               	movlw	2
 11782  00B0' 0082'              	movwf	i1UART_send_some_bytes@data+1
 11783  00B1' 300E               	movlw	14
 11784  00B2' 3180' 2000' 3180'  	fcall	i1_UART_send_some_bytes
 11785                           
 11786                           ;charger_discharger.c: 181:                                 calc_checksum = calculate_ch
      +                          ecksum(code, length, (uint8_t*)converter_configuration_ptr);
 11787  00B5' 300E               	movlw	14
 11788  00B6' 0080'              	movwf	calculate_checksum@length
 11789  00B7' 0021               	movlb	1	; select bank1
 11790  00B8' 0800'              	movf	_converter_configuration_ptr^(0+128),w
 11791  00B9'                    L15:
 11792  00B9' 0081'              	movwf	calculate_checksum@data
 11793  00BA' 39FF               	andlw	255
 11794  00BB' 1D03               	skipz
 11795  00BC' 3002               	movlw	2
 11796  00BD' 0082'              	movwf	calculate_checksum@data+1
 11797  00BE' 0800'              	movf	command_interpreter@code^(0+128),w
 11798  00BF' 3180' 2000' 3180'  	fcall	_calculate_checksum
 11799  00C2' 0801'              	movf	?_calculate_checksum+1,w
 11800  00C3' 0021               	movlb	1	; select bank1
 11801  00C4' 0080'              	movwf	(command_interpreter@calc_checksum+1)^(0+128)
 11802  00C5' 0800'              	movf	?_calculate_checksum,w
 11803  00C6' 0080'              	movwf	command_interpreter@calc_checksum^(0+128)
 11804                           
 11805                           ;charger_discharger.c: 182:                                 break;
 11806  00C7' 2800'              	goto	i1l7345
 11807  00C8'                    i1l7343:
 11808  00C8' 0021               	movlb	1	; select bank1
 11809  00C9' 0800'              	movf	command_interpreter@code^(0+128),w
 11810  00CA' 0080'              	movwf	??_command_interpreter^(0+128)
 11811  00CB' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 11812                           
 11813                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11814                           ; Switch size 1, requested type "simple"
 11815                           ; Number of cases is 1, Range of values is 0 to 0
 11816                           ; switch strategies available:
 11817                           ; Name         Instructions Cycles
 11818                           ; simple_byte            4     3 (average)
 11819                           ; direct_byte            8     6 (fixed)
 11820                           ; jumptable            260     6 (fixed)
 11821                           ;	Chosen strategy is simple_byte
 11822  00CC' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 11823  00CD' 3A00               	xorlw	0	; case 0
 11824  00CE' 1903               	skipnz
 11825  00CF' 2800'              	goto	i1l7761
 11826  00D0' 2800'              	goto	i1l7345
 11827  00D1'                    i1l7761:
 11828                           
 11829                           ; Switch size 1, requested type "simple"
 11830                           ; Number of cases is 3, Range of values is 3 to 7
 11831                           ; switch strategies available:
 11832                           ; Name         Instructions Cycles
 11833                           ; simple_byte           10     6 (average)
 11834                           ; direct_byte           19     9 (fixed)
 11835                           ; jumptable            263     9 (fixed)
 11836                           ;	Chosen strategy is simple_byte
 11837  00D1' 0800'              	movf	??_command_interpreter^(0+128),w
 11838  00D2' 3A03               	xorlw	3	; case 3
 11839  00D3' 1903               	skipnz
 11840  00D4' 2800'              	goto	i1l7317
 11841  00D5' 3A06               	xorlw	6	; case 5
 11842  00D6' 1903               	skipnz
 11843  00D7' 2800'              	goto	i1l7325
 11844  00D8' 3A02               	xorlw	2	; case 7
 11845  00D9' 1903               	skipnz
 11846  00DA' 2800'              	goto	i1l7333
 11847  00DB' 2800'              	goto	i1l7345
 11848  00DC'                    i1l7345:
 11849                           
 11850                           ;charger_discharger.c: 184:                         UART_send_some_bytes(2,(uint8_t*)&ca
      +                          lc_checksum);
 11851  00DC' 3000'              	movlw	low command_interpreter@calc_checksum
 11852  00DD' 0081'              	movwf	i1UART_send_some_bytes@data
 11853  00DE' 3000'              	movlw	high command_interpreter@calc_checksum
 11854  00DF' 0082'              	movwf	i1UART_send_some_bytes@data+1
 11855  00E0' 3002               	movlw	2
 11856  00E1' 3180' 2000' 3180'  	fcall	i1_UART_send_some_bytes
 11857                           
 11858                           ;charger_discharger.c: 185:                         UART_send_byte(0x77);
 11859  00E4' 3077               	movlw	119
 11860  00E5' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 11861                           
 11862                           ;charger_discharger.c: 186:                         break;
 11863  00E8' 2800'              	goto	i1l7427
 11864  00E9'                    i1l7349:
 11865                           
 11866                           ;charger_discharger.c: 191:                                 put_data_into_structure(leng
      +                          th, (uint8_t*)data, (uint8_t*)basic_configuration_ptr);
 11867  00E9' 3000'              	movlw	(low (command_interpreter@data| 0))& (0+255)
 11868  00EA' 0080'              	movwf	put_data_into_structure@data
 11869  00EB' 0800'              	movf	_basic_configuration_ptr^(0+128),w
 11870  00EC' 0081'              	movwf	put_data_into_structure@structure
 11871  00ED' 0800'              	movf	command_interpreter@length^(0+128),w
 11872  00EE' 3180' 2000' 3180'  	fcall	_put_data_into_structure
 11873                           
 11874                           ;charger_discharger.c: 192:                                 vref = ( ( (float) basic_con
      +                          figuration.const_voltage * 4096.0 ) / 5000.0 ) + 0.5 ;
 11875  00F1' 303F               	movlw	63
 11876  00F2' 0020               	movlb	0	; select bank0
 11877  00F3' 0083'              	movwf	i1___fladd@b+3
 11878  00F4' 3000               	movlw	0
 11879  00F5' 0082'              	movwf	i1___fladd@b+2
 11880  00F6' 3000               	movlw	0
 11881  00F7' 0081'              	movwf	i1___fladd@b+1
 11882  00F8' 3000               	movlw	0
 11883  00F9' 0080'              	movwf	i1___fladd@b
 11884  00FA' 3045               	movlw	69
 11885  00FB' 00B9'              	movwf	i1___fldiv@a+3
 11886  00FC' 309C               	movlw	156
 11887  00FD' 00B8'              	movwf	i1___fldiv@a+2
 11888  00FE' 3040               	movlw	64
 11889  00FF' 00B7'              	movwf	i1___fldiv@a+1
 11890  0100' 3000               	movlw	0
 11891  0101' 00B6'              	movwf	i1___fldiv@a
 11892  0102' 3045               	movlw	69
 11893  0103' 009F'              	movwf	i1___flmul@b+3
 11894  0104' 3080               	movlw	128
 11895  0105' 009E'              	movwf	i1___flmul@b+2
 11896  0106' 3000               	movlw	0
 11897  0107' 009D'              	movwf	i1___flmul@b+1
 11898  0108' 3000               	movlw	0
 11899  0109' 009C'              	movwf	i1___flmul@b
 11900  010A' 0024               	movlb	4	; select bank4
 11901  010B' 0801'              	movf	(_basic_configuration^(0+512)+1),w
 11902  010C' 0080'              	movwf	i1___xxtofl@val
 11903  010D' 0801'              	movf	((_basic_configuration+1)^(0+512)+1),w
 11904  010E' 0081'              	movwf	i1___xxtofl@val+1
 11905  010F' 0182'              	clrf	i1___xxtofl@val+2
 11906  0110' 0183'              	clrf	i1___xxtofl@val+3
 11907  0111' 3000               	movlw	0
 11908  0112' 3180' 2000' 3180'  	fcall	i1___xxtofl
 11909  0115' 0803'              	movf	?i1___xxtofl+3,w
 11910  0116' 0020               	movlb	0	; select bank0
 11911  0117' 00A3'              	movwf	i1___flmul@a+3
 11912  0118' 0802'              	movf	?i1___xxtofl+2,w
 11913  0119' 00A2'              	movwf	i1___flmul@a+2
 11914  011A' 0801'              	movf	?i1___xxtofl+1,w
 11915  011B' 00A1'              	movwf	i1___flmul@a+1
 11916  011C' 0800'              	movf	?i1___xxtofl,w
 11917  011D' 00A0'              	movwf	i1___flmul@a
 11918  011E' 3180' 2000' 3180'  	fcall	i1___flmul
 11919  0121' 0020               	movlb	0	; select bank0
 11920  0122' 081F'              	movf	?i1___flmul+3,w
 11921  0123' 00BD'              	movwf	i1___fldiv@b+3
 11922  0124' 081E'              	movf	?i1___flmul+2,w
 11923  0125' 00BC'              	movwf	i1___fldiv@b+2
 11924  0126' 081D'              	movf	?i1___flmul+1,w
 11925  0127' 00BB'              	movwf	i1___fldiv@b+1
 11926  0128' 081C'              	movf	?i1___flmul,w
 11927  0129' 00BA'              	movwf	i1___fldiv@b
 11928  012A' 3180' 2000' 3180'  	fcall	i1___fldiv
 11929  012D' 0020               	movlb	0	; select bank0
 11930  012E' 0839'              	movf	?i1___fldiv+3,w
 11931  012F' 0087'              	movwf	i1___fladd@a+3
 11932  0130' 0838'              	movf	?i1___fldiv+2,w
 11933  0131' 0086'              	movwf	i1___fladd@a+2
 11934  0132' 0837'              	movf	?i1___fldiv+1,w
 11935  0133' 0085'              	movwf	i1___fladd@a+1
 11936  0134' 0836'              	movf	?i1___fldiv,w
 11937  0135' 0084'              	movwf	i1___fladd@a
 11938  0136' 3180' 2000' 3180'  	fcall	i1___fladd
 11939  0139' 0020               	movlb	0	; select bank0
 11940  013A' 0803'              	movf	?i1___fladd+3,w
 11941  013B' 0024               	movlb	4	; select bank4
 11942  013C' 0080'              	movwf	(_vref+3)^(0+512)
 11943  013D' 0020               	movlb	0	; select bank0
 11944  013E' 0802'              	movf	?i1___fladd+2,w
 11945  013F' 0024               	movlb	4	; select bank4
 11946  0140' 0080'              	movwf	(_vref+2)^(0+512)
 11947  0141' 0020               	movlb	0	; select bank0
 11948  0142' 0801'              	movf	?i1___fladd+1,w
 11949  0143' 0024               	movlb	4	; select bank4
 11950  0144' 0080'              	movwf	(_vref+1)^(0+512)
 11951  0145' 0020               	movlb	0	; select bank0
 11952  0146' 0800'              	movf	?i1___fladd,w
 11953  0147' 0024               	movlb	4	; select bank4
 11954  0148' 0080'              	movwf	_vref^(0+512)
 11955                           
 11956                           ;charger_discharger.c: 193:                                 i_char = (uint16_t) ( ( ( (f
      +                          loat) basic_configuration.const_current_char * 4096.0 ) / (5000.0 * 2.5 ) ) + 0.5 );
 11957  0149' 0803'              	movf	(_basic_configuration^(0+512)+3),w
 11958  014A' 0080'              	movwf	i1___xxtofl@val
 11959  014B' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
 11960  014C' 0081'              	movwf	i1___xxtofl@val+1
 11961  014D' 0182'              	clrf	i1___xxtofl@val+2
 11962  014E' 0183'              	clrf	i1___xxtofl@val+3
 11963  014F' 3000               	movlw	0
 11964  0150' 3180' 2000' 3180'  	fcall	i1___xxtofl
 11965  0153' 0803'              	movf	?i1___xxtofl+3,w
 11966  0154' 0020               	movlb	0	; select bank0
 11967  0155' 00A3'              	movwf	i1___flmul@a+3
 11968  0156' 0802'              	movf	?i1___xxtofl+2,w
 11969  0157' 00A2'              	movwf	i1___flmul@a+2
 11970  0158' 0801'              	movf	?i1___xxtofl+1,w
 11971  0159' 00A1'              	movwf	i1___flmul@a+1
 11972  015A' 0800'              	movf	?i1___xxtofl,w
 11973  015B' 00A0'              	movwf	i1___flmul@a
 11974  015C' 3045               	movlw	69
 11975  015D' 009F'              	movwf	i1___flmul@b+3
 11976  015E' 3080               	movlw	128
 11977  015F' 009E'              	movwf	i1___flmul@b+2
 11978  0160' 3000               	movlw	0
 11979  0161' 009D'              	movwf	i1___flmul@b+1
 11980  0162' 3000               	movlw	0
 11981  0163' 009C'              	movwf	i1___flmul@b
 11982  0164' 3180' 2000' 3180'  	fcall	i1___flmul
 11983  0167' 0020               	movlb	0	; select bank0
 11984  0168' 081F'              	movf	?i1___flmul+3,w
 11985  0169' 00BD'              	movwf	i1___fldiv@b+3
 11986  016A' 081E'              	movf	?i1___flmul+2,w
 11987  016B' 00BC'              	movwf	i1___fldiv@b+2
 11988  016C' 081D'              	movf	?i1___flmul+1,w
 11989  016D' 00BB'              	movwf	i1___fldiv@b+1
 11990  016E' 081C'              	movf	?i1___flmul,w
 11991  016F' 00BA'              	movwf	i1___fldiv@b
 11992  0170' 3046               	movlw	70
 11993  0171' 00B9'              	movwf	i1___fldiv@a+3
 11994  0172' 3043               	movlw	67
 11995  0173' 00B8'              	movwf	i1___fldiv@a+2
 11996  0174' 3050               	movlw	80
 11997  0175' 00B7'              	movwf	i1___fldiv@a+1
 11998  0176' 3000               	movlw	0
 11999  0177' 00B6'              	movwf	i1___fldiv@a
 12000  0178' 3180' 2000' 3180'  	fcall	i1___fldiv
 12001  017B' 0020               	movlb	0	; select bank0
 12002  017C' 0839'              	movf	?i1___fldiv+3,w
 12003  017D' 0087'              	movwf	i1___fladd@a+3
 12004  017E' 0838'              	movf	?i1___fldiv+2,w
 12005  017F' 0086'              	movwf	i1___fladd@a+2
 12006  0180' 0837'              	movf	?i1___fldiv+1,w
 12007  0181' 0085'              	movwf	i1___fladd@a+1
 12008  0182' 0836'              	movf	?i1___fldiv,w
 12009  0183' 0084'              	movwf	i1___fladd@a
 12010  0184' 303F               	movlw	63
 12011  0185' 0083'              	movwf	i1___fladd@b+3
 12012  0186' 3000               	movlw	0
 12013  0187' 0082'              	movwf	i1___fladd@b+2
 12014  0188' 3000               	movlw	0
 12015  0189' 0081'              	movwf	i1___fladd@b+1
 12016  018A' 3000               	movlw	0
 12017  018B' 0080'              	movwf	i1___fladd@b
 12018  018C' 3180' 2000' 3180'  	fcall	i1___fladd
 12019  018F' 0020               	movlb	0	; select bank0
 12020  0190' 0803'              	movf	?i1___fladd+3,w
 12021  0191' 0021               	movlb	1	; select bank1
 12022  0192' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 12023  0193' 0020               	movlb	0	; select bank0
 12024  0194' 0802'              	movf	?i1___fladd+2,w
 12025  0195' 0021               	movlb	1	; select bank1
 12026  0196' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 12027  0197' 0020               	movlb	0	; select bank0
 12028  0198' 0801'              	movf	?i1___fladd+1,w
 12029  0199' 0021               	movlb	1	; select bank1
 12030  019A' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 12031  019B' 0020               	movlb	0	; select bank0
 12032  019C' 0800'              	movf	?i1___fladd,w
 12033  019D' 0021               	movlb	1	; select bank1
 12034  019E' 0080'              	movwf	i1___fltol@f1^(0+128)
 12035  019F' 3180' 2000' 3180'  	fcall	i1___fltol
 12036  01A2' 0021               	movlb	1	; select bank1
 12037  01A3' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 12038  01A4' 0023               	movlb	3	; select bank3
 12039  01A5' 0080'              	movwf	(_i_char+1)^(0+384)
 12040  01A6' 0021               	movlb	1	; select bank1
 12041  01A7' 0800'              	movf	?i1___fltol^(0+128),w
 12042  01A8' 0023               	movlb	3	; select bank3
 12043  01A9' 0080'              	movwf	_i_char^(0+384)
 12044                           
 12045                           ;charger_discharger.c: 194:                                 i_disc = (uint16_t) ( ( ( (f
      +                          loat) basic_configuration.const_current_disc * 4096.0 ) / (5000.0 * 2.5 ) ) + 0.5 );
 12046  01AA' 0024               	movlb	4	; select bank4
 12047  01AB' 0805'              	movf	(_basic_configuration^(0+512)+5),w
 12048  01AC' 0080'              	movwf	i1___xxtofl@val
 12049  01AD' 0805'              	movf	((_basic_configuration+1)^(0+512)+5),w
 12050  01AE' 0081'              	movwf	i1___xxtofl@val+1
 12051  01AF' 0182'              	clrf	i1___xxtofl@val+2
 12052  01B0' 0183'              	clrf	i1___xxtofl@val+3
 12053  01B1' 3000               	movlw	0
 12054  01B2' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12055  01B5' 0803'              	movf	?i1___xxtofl+3,w
 12056  01B6' 0020               	movlb	0	; select bank0
 12057  01B7' 00A3'              	movwf	i1___flmul@a+3
 12058  01B8' 0802'              	movf	?i1___xxtofl+2,w
 12059  01B9' 00A2'              	movwf	i1___flmul@a+2
 12060  01BA' 0801'              	movf	?i1___xxtofl+1,w
 12061  01BB' 00A1'              	movwf	i1___flmul@a+1
 12062  01BC' 0800'              	movf	?i1___xxtofl,w
 12063  01BD' 00A0'              	movwf	i1___flmul@a
 12064  01BE' 3045               	movlw	69
 12065  01BF' 009F'              	movwf	i1___flmul@b+3
 12066  01C0' 3080               	movlw	128
 12067  01C1' 009E'              	movwf	i1___flmul@b+2
 12068  01C2' 3000               	movlw	0
 12069  01C3' 009D'              	movwf	i1___flmul@b+1
 12070  01C4' 3000               	movlw	0
 12071  01C5' 009C'              	movwf	i1___flmul@b
 12072  01C6' 3180' 2000' 3180'  	fcall	i1___flmul
 12073  01C9' 0020               	movlb	0	; select bank0
 12074  01CA' 081F'              	movf	?i1___flmul+3,w
 12075  01CB' 00BD'              	movwf	i1___fldiv@b+3
 12076  01CC' 081E'              	movf	?i1___flmul+2,w
 12077  01CD' 00BC'              	movwf	i1___fldiv@b+2
 12078  01CE' 081D'              	movf	?i1___flmul+1,w
 12079  01CF' 00BB'              	movwf	i1___fldiv@b+1
 12080  01D0' 081C'              	movf	?i1___flmul,w
 12081  01D1' 00BA'              	movwf	i1___fldiv@b
 12082  01D2' 3046               	movlw	70
 12083  01D3' 00B9'              	movwf	i1___fldiv@a+3
 12084  01D4' 3043               	movlw	67
 12085  01D5' 00B8'              	movwf	i1___fldiv@a+2
 12086  01D6' 3050               	movlw	80
 12087  01D7' 00B7'              	movwf	i1___fldiv@a+1
 12088  01D8' 3000               	movlw	0
 12089  01D9' 00B6'              	movwf	i1___fldiv@a
 12090  01DA' 3180' 2000' 3180'  	fcall	i1___fldiv
 12091  01DD' 0020               	movlb	0	; select bank0
 12092  01DE' 0839'              	movf	?i1___fldiv+3,w
 12093  01DF' 0087'              	movwf	i1___fladd@a+3
 12094  01E0' 0838'              	movf	?i1___fldiv+2,w
 12095  01E1' 0086'              	movwf	i1___fladd@a+2
 12096  01E2' 0837'              	movf	?i1___fldiv+1,w
 12097  01E3' 0085'              	movwf	i1___fladd@a+1
 12098  01E4' 0836'              	movf	?i1___fldiv,w
 12099  01E5' 0084'              	movwf	i1___fladd@a
 12100  01E6' 303F               	movlw	63
 12101  01E7' 0083'              	movwf	i1___fladd@b+3
 12102  01E8' 3000               	movlw	0
 12103  01E9' 0082'              	movwf	i1___fladd@b+2
 12104  01EA' 3000               	movlw	0
 12105  01EB' 0081'              	movwf	i1___fladd@b+1
 12106  01EC' 3000               	movlw	0
 12107  01ED' 0080'              	movwf	i1___fladd@b
 12108  01EE' 3180' 2000' 3180'  	fcall	i1___fladd
 12109  01F1' 0020               	movlb	0	; select bank0
 12110  01F2' 0803'              	movf	?i1___fladd+3,w
 12111  01F3' 0021               	movlb	1	; select bank1
 12112  01F4' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 12113  01F5' 0020               	movlb	0	; select bank0
 12114  01F6' 0802'              	movf	?i1___fladd+2,w
 12115  01F7' 0021               	movlb	1	; select bank1
 12116  01F8' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 12117  01F9' 0020               	movlb	0	; select bank0
 12118  01FA' 0801'              	movf	?i1___fladd+1,w
 12119  01FB' 0021               	movlb	1	; select bank1
 12120  01FC' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 12121  01FD' 0020               	movlb	0	; select bank0
 12122  01FE' 0800'              	movf	?i1___fladd,w
 12123  01FF' 0021               	movlb	1	; select bank1
 12124  0200' 0080'              	movwf	i1___fltol@f1^(0+128)
 12125  0201' 3180' 2000' 3180'  	fcall	i1___fltol
 12126  0204' 0021               	movlb	1	; select bank1
 12127  0205' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 12128  0206' 0023               	movlb	3	; select bank3
 12129  0207' 0080'              	movwf	(_i_disc+1)^(0+384)
 12130  0208' 0021               	movlb	1	; select bank1
 12131  0209' 0800'              	movf	?i1___fltol^(0+128),w
 12132  020A' 0023               	movlb	3	; select bank3
 12133  020B' 0080'              	movwf	_i_disc^(0+384)
 12134                           
 12135                           ;charger_discharger.c: 195:                                 capacity = basic_configurati
      +                          on.capacity;
 12136  020C' 0024               	movlb	4	; select bank4
 12137  020D' 0807'              	movf	((_basic_configuration+1)^(0+512)+7),w
 12138  020E' 0023               	movlb	3	; select bank3
 12139  020F' 0080'              	movwf	(_capacity+1)^(0+384)
 12140  0210' 0024               	movlb	4	; select bank4
 12141  0211' 0807'              	movf	(_basic_configuration^(0+512)+7),w
 12142  0212' 0023               	movlb	3	; select bank3
 12143  0213' 0080'              	movwf	_capacity^(0+384)
 12144                           
 12145                           ;charger_discharger.c: 196:                                 EOC_variable = basic_configu
      +                          ration.end_of_charge;
 12146  0214' 0024               	movlb	4	; select bank4
 12147  0215' 0809'              	movf	((_basic_configuration+1)^(0+512)+9),w
 12148  0216' 0023               	movlb	3	; select bank3
 12149  0217' 0080'              	movwf	(_EOC_variable+1)^(0+384)
 12150  0218' 0024               	movlb	4	; select bank4
 12151  0219' 0809'              	movf	(_basic_configuration^(0+512)+9),w
 12152  021A' 0023               	movlb	3	; select bank3
 12153  021B' 0080'              	movwf	_EOC_variable^(0+384)
 12154                           
 12155                           ;charger_discharger.c: 197:                                 EOPC_variable = basic_config
      +                          uration.end_of_precharge;
 12156  021C' 0024               	movlb	4	; select bank4
 12157  021D' 080B'              	movf	((_basic_configuration+1)^(0+512)+11),w
 12158  021E' 0080'              	movwf	(_EOPC_variable+1)^(0+512)
 12159  021F' 080B'              	movf	(_basic_configuration^(0+512)+11),w
 12160  0220' 0080'              	movwf	_EOPC_variable^(0+512)
 12161                           
 12162                           ;charger_discharger.c: 198:                                 EOD_voltage = basic_configur
      +                          ation.end_of_discharge;
 12163  0221' 080D'              	movf	((_basic_configuration+1)^(0+512)+13),w
 12164  0222' 0080'              	movwf	(_EOD_voltage+1)^(0+512)
 12165  0223' 080D'              	movf	(_basic_configuration^(0+512)+13),w
 12166  0224' 0080'              	movwf	_EOD_voltage^(0+512)
 12167                           
 12168                           ;charger_discharger.c: 199:                                 EOPD_capacity = basic_config
      +                          uration.end_of_postdischarge;
 12169  0225' 080F'              	movf	((_basic_configuration+1)^(0+512)+15),w
 12170  0226' 0080'              	movwf	(_EOPD_capacity+1)^(0+512)
 12171  0227' 080F'              	movf	(_basic_configuration^(0+512)+15),w
 12172  0228' 0080'              	movwf	_EOPD_capacity^(0+512)
 12173                           
 12174                           ;charger_discharger.c: 200:                                 break;
 12175  0229' 2800'              	goto	i1l7427
 12176  022A'                    i1l7367:
 12177                           
 12178                           ;charger_discharger.c: 202:                                 put_data_into_structure(leng
      +                          th, (uint8_t*)data, (uint8_t*)test_configuration_ptr);
 12179  022A' 3000'              	movlw	(low (command_interpreter@data| 0))& (0+255)
 12180  022B' 0080'              	movwf	put_data_into_structure@data
 12181  022C' 0800'              	movf	_test_configuration_ptr^(0+128),w
 12182  022D' 0081'              	movwf	put_data_into_structure@structure
 12183  022E' 0800'              	movf	command_interpreter@length^(0+128),w
 12184  022F' 3180' 2000' 3180'  	fcall	_put_data_into_structure
 12185                           
 12186                           ;charger_discharger.c: 203:                                 break;
 12187  0232' 2800'              	goto	i1l7427
 12188  0233'                    i1l7369:
 12189                           
 12190                           ;charger_discharger.c: 205:                                 put_data_into_structure(leng
      +                          th, (uint8_t*)data, (uint8_t*)converter_configuration_ptr);
 12191  0233' 3000'              	movlw	(low (command_interpreter@data| 0))& (0+255)
 12192  0234' 0080'              	movwf	put_data_into_structure@data
 12193  0235' 0800'              	movf	_converter_configuration_ptr^(0+128),w
 12194  0236' 0081'              	movwf	put_data_into_structure@structure
 12195  0237' 0800'              	movf	command_interpreter@length^(0+128),w
 12196  0238' 3180' 2000' 3180'  	fcall	_put_data_into_structure
 12197                           
 12198                           ;charger_discharger.c: 206:                                 CV_kp = (float) ((converter_
      +                          configuration.CVKp) / 1000000.0);
 12199  023B' 3049               	movlw	73
 12200  023C' 0020               	movlb	0	; select bank0
 12201  023D' 00B9'              	movwf	i1___fldiv@a+3
 12202  023E' 3074               	movlw	116
 12203  023F' 00B8'              	movwf	i1___fldiv@a+2
 12204  0240' 3024               	movlw	36
 12205  0241' 00B7'              	movwf	i1___fldiv@a+1
 12206  0242' 3000               	movlw	0
 12207  0243' 00B6'              	movwf	i1___fldiv@a
 12208  0244' 0025               	movlb	5	; select bank5
 12209  0245' 0800'              	movf	_converter_configuration^(0+640),w
 12210  0246' 0080'              	movwf	i1___xxtofl@val
 12211  0247' 0800'              	movf	(_converter_configuration+1)^(0+640),w
 12212  0248' 0081'              	movwf	i1___xxtofl@val+1
 12213  0249' 0182'              	clrf	i1___xxtofl@val+2
 12214  024A' 0183'              	clrf	i1___xxtofl@val+3
 12215  024B' 3000               	movlw	0
 12216  024C' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12217  024F' 0803'              	movf	?i1___xxtofl+3,w
 12218  0250' 0020               	movlb	0	; select bank0
 12219  0251' 00BD'              	movwf	i1___fldiv@b+3
 12220  0252' 0802'              	movf	?i1___xxtofl+2,w
 12221  0253' 00BC'              	movwf	i1___fldiv@b+2
 12222  0254' 0801'              	movf	?i1___xxtofl+1,w
 12223  0255' 00BB'              	movwf	i1___fldiv@b+1
 12224  0256' 0800'              	movf	?i1___xxtofl,w
 12225  0257' 00BA'              	movwf	i1___fldiv@b
 12226  0258' 3180' 2000' 3180'  	fcall	i1___fldiv
 12227  025B' 0020               	movlb	0	; select bank0
 12228  025C' 0839'              	movf	?i1___fldiv+3,w
 12229  025D' 0024               	movlb	4	; select bank4
 12230  025E' 0080'              	movwf	(_CV_kp+3)^(0+512)
 12231  025F' 0020               	movlb	0	; select bank0
 12232  0260' 0838'              	movf	?i1___fldiv+2,w
 12233  0261' 0024               	movlb	4	; select bank4
 12234  0262' 0080'              	movwf	(_CV_kp+2)^(0+512)
 12235  0263' 0020               	movlb	0	; select bank0
 12236  0264' 0837'              	movf	?i1___fldiv+1,w
 12237  0265' 0024               	movlb	4	; select bank4
 12238  0266' 0080'              	movwf	(_CV_kp+1)^(0+512)
 12239  0267' 0020               	movlb	0	; select bank0
 12240  0268' 0836'              	movf	?i1___fldiv,w
 12241  0269' 0024               	movlb	4	; select bank4
 12242  026A' 0080'              	movwf	_CV_kp^(0+512)
 12243                           
 12244                           ;charger_discharger.c: 207:                                 CV_ki = (float) ((converter_
      +                          configuration.CVKi) / 1000000.0);
 12245  026B' 3049               	movlw	73
 12246  026C' 0020               	movlb	0	; select bank0
 12247  026D' 00B9'              	movwf	i1___fldiv@a+3
 12248  026E' 3074               	movlw	116
 12249  026F' 00B8'              	movwf	i1___fldiv@a+2
 12250  0270' 3024               	movlw	36
 12251  0271' 00B7'              	movwf	i1___fldiv@a+1
 12252  0272' 3000               	movlw	0
 12253  0273' 00B6'              	movwf	i1___fldiv@a
 12254  0274' 0025               	movlb	5	; select bank5
 12255  0275' 0802'              	movf	(_converter_configuration^(0+640)+2),w
 12256  0276' 0080'              	movwf	i1___xxtofl@val
 12257  0277' 0802'              	movf	((_converter_configuration+1)^(0+640)+2),w
 12258  0278' 0081'              	movwf	i1___xxtofl@val+1
 12259  0279' 0182'              	clrf	i1___xxtofl@val+2
 12260  027A' 0183'              	clrf	i1___xxtofl@val+3
 12261  027B' 3000               	movlw	0
 12262  027C' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12263  027F' 0803'              	movf	?i1___xxtofl+3,w
 12264  0280' 0020               	movlb	0	; select bank0
 12265  0281' 00BD'              	movwf	i1___fldiv@b+3
 12266  0282' 0802'              	movf	?i1___xxtofl+2,w
 12267  0283' 00BC'              	movwf	i1___fldiv@b+2
 12268  0284' 0801'              	movf	?i1___xxtofl+1,w
 12269  0285' 00BB'              	movwf	i1___fldiv@b+1
 12270  0286' 0800'              	movf	?i1___xxtofl,w
 12271  0287' 00BA'              	movwf	i1___fldiv@b
 12272  0288' 3180' 2000' 3180'  	fcall	i1___fldiv
 12273  028B' 0020               	movlb	0	; select bank0
 12274  028C' 0839'              	movf	?i1___fldiv+3,w
 12275  028D' 0024               	movlb	4	; select bank4
 12276  028E' 0080'              	movwf	(_CV_ki+3)^(0+512)
 12277  028F' 0020               	movlb	0	; select bank0
 12278  0290' 0838'              	movf	?i1___fldiv+2,w
 12279  0291' 0024               	movlb	4	; select bank4
 12280  0292' 0080'              	movwf	(_CV_ki+2)^(0+512)
 12281  0293' 0020               	movlb	0	; select bank0
 12282  0294' 0837'              	movf	?i1___fldiv+1,w
 12283  0295' 0024               	movlb	4	; select bank4
 12284  0296' 0080'              	movwf	(_CV_ki+1)^(0+512)
 12285  0297' 0020               	movlb	0	; select bank0
 12286  0298' 0836'              	movf	?i1___fldiv,w
 12287  0299' 0024               	movlb	4	; select bank4
 12288  029A' 0080'              	movwf	_CV_ki^(0+512)
 12289                           
 12290                           ;charger_discharger.c: 208:                                 CV_kd = (float) ((converter_
      +                          configuration.CVKd) / 1000.0);
 12291  029B' 3044               	movlw	68
 12292  029C' 0020               	movlb	0	; select bank0
 12293  029D' 00B9'              	movwf	i1___fldiv@a+3
 12294  029E' 307A               	movlw	122
 12295  029F' 00B8'              	movwf	i1___fldiv@a+2
 12296  02A0' 3000               	movlw	0
 12297  02A1' 00B7'              	movwf	i1___fldiv@a+1
 12298  02A2' 3000               	movlw	0
 12299  02A3' 00B6'              	movwf	i1___fldiv@a
 12300  02A4' 0025               	movlb	5	; select bank5
 12301  02A5' 0804'              	movf	(_converter_configuration^(0+640)+4),w
 12302  02A6' 0080'              	movwf	i1___xxtofl@val
 12303  02A7' 0804'              	movf	((_converter_configuration+1)^(0+640)+4),w
 12304  02A8' 0081'              	movwf	i1___xxtofl@val+1
 12305  02A9' 0182'              	clrf	i1___xxtofl@val+2
 12306  02AA' 0183'              	clrf	i1___xxtofl@val+3
 12307  02AB' 3000               	movlw	0
 12308  02AC' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12309  02AF' 0803'              	movf	?i1___xxtofl+3,w
 12310  02B0' 0020               	movlb	0	; select bank0
 12311  02B1' 00BD'              	movwf	i1___fldiv@b+3
 12312  02B2' 0802'              	movf	?i1___xxtofl+2,w
 12313  02B3' 00BC'              	movwf	i1___fldiv@b+2
 12314  02B4' 0801'              	movf	?i1___xxtofl+1,w
 12315  02B5' 00BB'              	movwf	i1___fldiv@b+1
 12316  02B6' 0800'              	movf	?i1___xxtofl,w
 12317  02B7' 00BA'              	movwf	i1___fldiv@b
 12318  02B8' 3180' 2000' 3180'  	fcall	i1___fldiv
 12319  02BB' 0020               	movlb	0	; select bank0
 12320  02BC' 0839'              	movf	?i1___fldiv+3,w
 12321  02BD' 0024               	movlb	4	; select bank4
 12322  02BE' 0080'              	movwf	(_CV_kd+3)^(0+512)
 12323  02BF' 0020               	movlb	0	; select bank0
 12324  02C0' 0838'              	movf	?i1___fldiv+2,w
 12325  02C1' 0024               	movlb	4	; select bank4
 12326  02C2' 0080'              	movwf	(_CV_kd+2)^(0+512)
 12327  02C3' 0020               	movlb	0	; select bank0
 12328  02C4' 0837'              	movf	?i1___fldiv+1,w
 12329  02C5' 0024               	movlb	4	; select bank4
 12330  02C6' 0080'              	movwf	(_CV_kd+1)^(0+512)
 12331  02C7' 0020               	movlb	0	; select bank0
 12332  02C8' 0836'              	movf	?i1___fldiv,w
 12333  02C9' 0024               	movlb	4	; select bank4
 12334  02CA' 0080'              	movwf	_CV_kd^(0+512)
 12335                           
 12336                           ;charger_discharger.c: 209:                                 CC_char_kp = (float) ((conve
      +                          rter_configuration.CCKpC) / 1000000.0);
 12337  02CB' 3049               	movlw	73
 12338  02CC' 0020               	movlb	0	; select bank0
 12339  02CD' 00B9'              	movwf	i1___fldiv@a+3
 12340  02CE' 3074               	movlw	116
 12341  02CF' 00B8'              	movwf	i1___fldiv@a+2
 12342  02D0' 3024               	movlw	36
 12343  02D1' 00B7'              	movwf	i1___fldiv@a+1
 12344  02D2' 3000               	movlw	0
 12345  02D3' 00B6'              	movwf	i1___fldiv@a
 12346  02D4' 0025               	movlb	5	; select bank5
 12347  02D5' 0806'              	movf	(_converter_configuration^(0+640)+6),w
 12348  02D6' 0080'              	movwf	i1___xxtofl@val
 12349  02D7' 0806'              	movf	((_converter_configuration+1)^(0+640)+6),w
 12350  02D8' 0081'              	movwf	i1___xxtofl@val+1
 12351  02D9' 0182'              	clrf	i1___xxtofl@val+2
 12352  02DA' 0183'              	clrf	i1___xxtofl@val+3
 12353  02DB' 3000               	movlw	0
 12354  02DC' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12355  02DF' 0803'              	movf	?i1___xxtofl+3,w
 12356  02E0' 0020               	movlb	0	; select bank0
 12357  02E1' 00BD'              	movwf	i1___fldiv@b+3
 12358  02E2' 0802'              	movf	?i1___xxtofl+2,w
 12359  02E3' 00BC'              	movwf	i1___fldiv@b+2
 12360  02E4' 0801'              	movf	?i1___xxtofl+1,w
 12361  02E5' 00BB'              	movwf	i1___fldiv@b+1
 12362  02E6' 0800'              	movf	?i1___xxtofl,w
 12363  02E7' 00BA'              	movwf	i1___fldiv@b
 12364  02E8' 3180' 2000' 3180'  	fcall	i1___fldiv
 12365  02EB' 0020               	movlb	0	; select bank0
 12366  02EC' 0839'              	movf	?i1___fldiv+3,w
 12367  02ED' 0023               	movlb	3	; select bank3
 12368  02EE' 0080'              	movwf	(_CC_char_kp+3)^(0+384)
 12369  02EF' 0020               	movlb	0	; select bank0
 12370  02F0' 0838'              	movf	?i1___fldiv+2,w
 12371  02F1' 0023               	movlb	3	; select bank3
 12372  02F2' 0080'              	movwf	(_CC_char_kp+2)^(0+384)
 12373  02F3' 0020               	movlb	0	; select bank0
 12374  02F4' 0837'              	movf	?i1___fldiv+1,w
 12375  02F5' 0023               	movlb	3	; select bank3
 12376  02F6' 0080'              	movwf	(_CC_char_kp+1)^(0+384)
 12377  02F7' 0020               	movlb	0	; select bank0
 12378  02F8' 0836'              	movf	?i1___fldiv,w
 12379  02F9' 0023               	movlb	3	; select bank3
 12380  02FA' 0080'              	movwf	_CC_char_kp^(0+384)
 12381                           
 12382                           ;charger_discharger.c: 210:                                 CC_char_ki = (float) ((conve
      +                          rter_configuration.CCKiC) / 1000000.0);
 12383  02FB' 3049               	movlw	73
 12384  02FC' 0020               	movlb	0	; select bank0
 12385  02FD' 00B9'              	movwf	i1___fldiv@a+3
 12386  02FE' 3074               	movlw	116
 12387  02FF' 00B8'              	movwf	i1___fldiv@a+2
 12388  0300' 3024               	movlw	36
 12389  0301' 00B7'              	movwf	i1___fldiv@a+1
 12390  0302' 3000               	movlw	0
 12391  0303' 00B6'              	movwf	i1___fldiv@a
 12392  0304' 0025               	movlb	5	; select bank5
 12393  0305' 0808'              	movf	(_converter_configuration^(0+640)+8),w
 12394  0306' 0080'              	movwf	i1___xxtofl@val
 12395  0307' 0808'              	movf	((_converter_configuration+1)^(0+640)+8),w
 12396  0308' 0081'              	movwf	i1___xxtofl@val+1
 12397  0309' 0182'              	clrf	i1___xxtofl@val+2
 12398  030A' 0183'              	clrf	i1___xxtofl@val+3
 12399  030B' 3000               	movlw	0
 12400  030C' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12401  030F' 0803'              	movf	?i1___xxtofl+3,w
 12402  0310' 0020               	movlb	0	; select bank0
 12403  0311' 00BD'              	movwf	i1___fldiv@b+3
 12404  0312' 0802'              	movf	?i1___xxtofl+2,w
 12405  0313' 00BC'              	movwf	i1___fldiv@b+2
 12406  0314' 0801'              	movf	?i1___xxtofl+1,w
 12407  0315' 00BB'              	movwf	i1___fldiv@b+1
 12408  0316' 0800'              	movf	?i1___xxtofl,w
 12409  0317' 00BA'              	movwf	i1___fldiv@b
 12410  0318' 3180' 2000' 3180'  	fcall	i1___fldiv
 12411  031B' 0020               	movlb	0	; select bank0
 12412  031C' 0839'              	movf	?i1___fldiv+3,w
 12413  031D' 0023               	movlb	3	; select bank3
 12414  031E' 0080'              	movwf	(_CC_char_ki+3)^(0+384)
 12415  031F' 0020               	movlb	0	; select bank0
 12416  0320' 0838'              	movf	?i1___fldiv+2,w
 12417  0321' 0023               	movlb	3	; select bank3
 12418  0322' 0080'              	movwf	(_CC_char_ki+2)^(0+384)
 12419  0323' 0020               	movlb	0	; select bank0
 12420  0324' 0837'              	movf	?i1___fldiv+1,w
 12421  0325' 0023               	movlb	3	; select bank3
 12422  0326' 0080'              	movwf	(_CC_char_ki+1)^(0+384)
 12423  0327' 0020               	movlb	0	; select bank0
 12424  0328' 0836'              	movf	?i1___fldiv,w
 12425  0329' 0023               	movlb	3	; select bank3
 12426  032A' 0080'              	movwf	_CC_char_ki^(0+384)
 12427                           
 12428                           ;charger_discharger.c: 211:                                 CC_disc_kp = (float) ((conve
      +                          rter_configuration.CCKpD) / 1000000.0);
 12429  032B' 3049               	movlw	73
 12430  032C' 0020               	movlb	0	; select bank0
 12431  032D' 00B9'              	movwf	i1___fldiv@a+3
 12432  032E' 3074               	movlw	116
 12433  032F' 00B8'              	movwf	i1___fldiv@a+2
 12434  0330' 3024               	movlw	36
 12435  0331' 00B7'              	movwf	i1___fldiv@a+1
 12436  0332' 3000               	movlw	0
 12437  0333' 00B6'              	movwf	i1___fldiv@a
 12438  0334' 0025               	movlb	5	; select bank5
 12439  0335' 080A'              	movf	(_converter_configuration^(0+640)+10),w
 12440  0336' 0080'              	movwf	i1___xxtofl@val
 12441  0337' 080A'              	movf	((_converter_configuration+1)^(0+640)+10),w
 12442  0338' 0081'              	movwf	i1___xxtofl@val+1
 12443  0339' 0182'              	clrf	i1___xxtofl@val+2
 12444  033A' 0183'              	clrf	i1___xxtofl@val+3
 12445  033B' 3000               	movlw	0
 12446  033C' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12447  033F' 0803'              	movf	?i1___xxtofl+3,w
 12448  0340' 0020               	movlb	0	; select bank0
 12449  0341' 00BD'              	movwf	i1___fldiv@b+3
 12450  0342' 0802'              	movf	?i1___xxtofl+2,w
 12451  0343' 00BC'              	movwf	i1___fldiv@b+2
 12452  0344' 0801'              	movf	?i1___xxtofl+1,w
 12453  0345' 00BB'              	movwf	i1___fldiv@b+1
 12454  0346' 0800'              	movf	?i1___xxtofl,w
 12455  0347' 00BA'              	movwf	i1___fldiv@b
 12456  0348' 3180' 2000' 3180'  	fcall	i1___fldiv
 12457  034B' 0020               	movlb	0	; select bank0
 12458  034C' 0839'              	movf	?i1___fldiv+3,w
 12459  034D' 0023               	movlb	3	; select bank3
 12460  034E' 0080'              	movwf	(_CC_disc_kp+3)^(0+384)
 12461  034F' 0020               	movlb	0	; select bank0
 12462  0350' 0838'              	movf	?i1___fldiv+2,w
 12463  0351' 0023               	movlb	3	; select bank3
 12464  0352' 0080'              	movwf	(_CC_disc_kp+2)^(0+384)
 12465  0353' 0020               	movlb	0	; select bank0
 12466  0354' 0837'              	movf	?i1___fldiv+1,w
 12467  0355' 0023               	movlb	3	; select bank3
 12468  0356' 0080'              	movwf	(_CC_disc_kp+1)^(0+384)
 12469  0357' 0020               	movlb	0	; select bank0
 12470  0358' 0836'              	movf	?i1___fldiv,w
 12471  0359' 0023               	movlb	3	; select bank3
 12472  035A' 0080'              	movwf	_CC_disc_kp^(0+384)
 12473                           
 12474                           ;charger_discharger.c: 212:                                 CC_disc_ki = (float) ((conve
      +                          rter_configuration.CCKiD) / 1000000.0);
 12475  035B' 3049               	movlw	73
 12476  035C' 0020               	movlb	0	; select bank0
 12477  035D' 00B9'              	movwf	i1___fldiv@a+3
 12478  035E' 3074               	movlw	116
 12479  035F' 00B8'              	movwf	i1___fldiv@a+2
 12480  0360' 3024               	movlw	36
 12481  0361' 00B7'              	movwf	i1___fldiv@a+1
 12482  0362' 3000               	movlw	0
 12483  0363' 00B6'              	movwf	i1___fldiv@a
 12484  0364' 0025               	movlb	5	; select bank5
 12485  0365' 080C'              	movf	(_converter_configuration^(0+640)+12),w
 12486  0366' 0080'              	movwf	i1___xxtofl@val
 12487  0367' 080C'              	movf	((_converter_configuration+1)^(0+640)+12),w
 12488  0368' 0081'              	movwf	i1___xxtofl@val+1
 12489  0369' 0182'              	clrf	i1___xxtofl@val+2
 12490  036A' 0183'              	clrf	i1___xxtofl@val+3
 12491  036B' 3000               	movlw	0
 12492  036C' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12493  036F' 0803'              	movf	?i1___xxtofl+3,w
 12494  0370' 0020               	movlb	0	; select bank0
 12495  0371' 00BD'              	movwf	i1___fldiv@b+3
 12496  0372' 0802'              	movf	?i1___xxtofl+2,w
 12497  0373' 00BC'              	movwf	i1___fldiv@b+2
 12498  0374' 0801'              	movf	?i1___xxtofl+1,w
 12499  0375' 00BB'              	movwf	i1___fldiv@b+1
 12500  0376' 0800'              	movf	?i1___xxtofl,w
 12501  0377' 00BA'              	movwf	i1___fldiv@b
 12502  0378' 3180' 2000' 3180'  	fcall	i1___fldiv
 12503  037B' 0020               	movlb	0	; select bank0
 12504  037C' 0839'              	movf	?i1___fldiv+3,w
 12505  037D' 0023               	movlb	3	; select bank3
 12506  037E' 0080'              	movwf	(_CC_disc_ki+3)^(0+384)
 12507  037F' 0020               	movlb	0	; select bank0
 12508  0380' 0838'              	movf	?i1___fldiv+2,w
 12509  0381' 0023               	movlb	3	; select bank3
 12510  0382' 0080'              	movwf	(_CC_disc_ki+2)^(0+384)
 12511  0383' 0020               	movlb	0	; select bank0
 12512  0384' 0837'              	movf	?i1___fldiv+1,w
 12513  0385' 0023               	movlb	3	; select bank3
 12514  0386' 0080'              	movwf	(_CC_disc_ki+1)^(0+384)
 12515  0387' 0020               	movlb	0	; select bank0
 12516  0388' 0836'              	movf	?i1___fldiv,w
 12517  0389' 0023               	movlb	3	; select bank3
 12518  038A' 0080'              	movwf	_CC_disc_ki^(0+384)
 12519                           
 12520                           ;charger_discharger.c: 213:                                 break;
 12521  038B' 2800'              	goto	i1l7427
 12522  038C'                    i1l7387:
 12523  038C' 0800'              	movf	command_interpreter@code^(0+128),w
 12524  038D' 0080'              	movwf	??_command_interpreter^(0+128)
 12525  038E' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 12526                           
 12527                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12528                           ; Switch size 1, requested type "simple"
 12529                           ; Number of cases is 1, Range of values is 0 to 0
 12530                           ; switch strategies available:
 12531                           ; Name         Instructions Cycles
 12532                           ; simple_byte            4     3 (average)
 12533                           ; direct_byte            8     6 (fixed)
 12534                           ; jumptable            260     6 (fixed)
 12535                           ;	Chosen strategy is simple_byte
 12536  038F' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 12537  0390' 3A00               	xorlw	0	; case 0
 12538  0391' 1903               	skipnz
 12539  0392' 2800'              	goto	i1l7763
 12540  0393' 2800'              	goto	i1l358
 12541  0394'                    i1l7763:
 12542                           
 12543                           ; Switch size 1, requested type "simple"
 12544                           ; Number of cases is 3, Range of values is 3 to 7
 12545                           ; switch strategies available:
 12546                           ; Name         Instructions Cycles
 12547                           ; simple_byte           10     6 (average)
 12548                           ; direct_byte           19     9 (fixed)
 12549                           ; jumptable            263     9 (fixed)
 12550                           ;	Chosen strategy is simple_byte
 12551  0394' 0800'              	movf	??_command_interpreter^(0+128),w
 12552  0395' 3A03               	xorlw	3	; case 3
 12553  0396' 1903               	skipnz
 12554  0397' 2800'              	goto	i1l7349
 12555  0398' 3A06               	xorlw	6	; case 5
 12556  0399' 1903               	skipnz
 12557  039A' 2800'              	goto	i1l7367
 12558  039B' 3A02               	xorlw	2	; case 7
 12559  039C' 1903               	skipnz
 12560  039D' 2800'              	goto	i1l7369
 12561  039E' 2800'              	goto	i1l358
 12562  039F'                    i1l7389:
 12563                           
 12564                           ;charger_discharger.c: 217:                         if (code == 0x05)
 12565  039F' 3005               	movlw	5
 12566  03A0' 0600'              	xorwf	command_interpreter@code^(0+128),w
 12567  03A1' 1D03               	btfss	3,2
 12568  03A2' 2800'              	goto	i1l7427
 12569                           
 12570                           ;charger_discharger.c: 218:                         {;charger_discharger.c: 219:        
      +                                               counter_state = 0;
 12571  03A3' 0180'              	clrf	_counter_state^(0+128)
 12572                           
 12573                           ;charger_discharger.c: 220:                             state = test_configuration.order
      +                          _of_states[counter_state];
 12574  03A4' 0800'              	movf	_counter_state^(0+128),w
 12575  03A5' 3E00'              	addlw	(low ((_test_configuration| (0+512)+7)))& (0+255)
 12576  03A6' 0086               	movwf	6
 12577  03A7' 3002               	movlw	2	; select bank4/5
 12578  03A8' 0087               	movwf	7
 12579  03A9' 0801               	movf	1,w
 12580  03AA' 0023               	movlb	3	; select bank3
 12581  03AB' 0080'              	movwf	_state^(0+384)
 12582                           
 12583                           ;charger_discharger.c: 221:                             cell_count = 0x01;
 12584  03AC' 0180'              	clrf	_cell_count^(0+384)
 12585  03AD' 0A80'              	incf	_cell_count^(0+384),f
 12586                           
 12587                           ;charger_discharger.c: 222:                             repetition_counter = 0x01;
 12588  03AE' 0180'              	clrf	_repetition_counter^(0+384)
 12589  03AF' 0A80'              	incf	_repetition_counter^(0+384),f
 12590                           
 12591                           ;charger_discharger.c: 223:                             converter_settings();
 12592  03B0' 3180' 2000' 3180'  	fcall	i1_converter_settings
 12593                           
 12594                           ;charger_discharger.c: 224:                             start = 1;
 12595  03B3' 0021               	movlb	1	; select bank1
 12596  03B4' 0180'              	clrf	_start^(0+128)
 12597  03B5' 0A80'              	incf	_start^(0+128),f
 12598  03B6' 2800'              	goto	i1l7427
 12599  03B7'                    i1l7405:
 12600  03B7' 0800'              	movf	command_interpreter@operation^(0+128),w
 12601  03B8' 0080'              	movwf	??_command_interpreter^(0+128)
 12602  03B9' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 12603                           
 12604                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12605                           ; Switch size 1, requested type "simple"
 12606                           ; Number of cases is 1, Range of values is 0 to 0
 12607                           ; switch strategies available:
 12608                           ; Name         Instructions Cycles
 12609                           ; simple_byte            4     3 (average)
 12610                           ; direct_byte            8     6 (fixed)
 12611                           ; jumptable            260     6 (fixed)
 12612                           ;	Chosen strategy is simple_byte
 12613  03BA' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 12614  03BB' 3A00               	xorlw	0	; case 0
 12615  03BC' 1903               	skipnz
 12616  03BD' 2800'              	goto	i1l7765
 12617  03BE' 2800'              	goto	i1l7427
 12618  03BF'                    i1l7765:
 12619                           
 12620                           ; Switch size 1, requested type "simple"
 12621                           ; Number of cases is 3, Range of values is 15 to 165
 12622                           ; switch strategies available:
 12623                           ; Name         Instructions Cycles
 12624                           ; simple_byte           10     6 (average)
 12625                           ; jumptable            263     9 (fixed)
 12626                           ;	Chosen strategy is simple_byte
 12627  03BF' 0800'              	movf	??_command_interpreter^(0+128),w
 12628  03C0' 3A0F               	xorlw	15	; case 15
 12629  03C1' 1903               	skipnz
 12630  03C2' 2800'              	goto	i1l7389
 12631  03C3' 3A55               	xorlw	85	; case 90
 12632  03C4' 1903               	skipnz
 12633  03C5' 2800'              	goto	i1l7387
 12634  03C6' 3AFF               	xorlw	255	; case 165
 12635  03C7' 1903               	skipnz
 12636  03C8' 2800'              	goto	i1l7315
 12637  03C9' 2800'              	goto	i1l7427
 12638  03CA'                    i1l7407:
 12639  03CA' 0021               	movlb	1	; select bank1
 12640  03CB' 0180'              	clrf	command_interpreter@test^(0+128)
 12641  03CC'                    i1l358:
 12642                           
 12643                           ;charger_discharger.c: 230:     }else
 12644  03CC' 2800'              	goto	i1l7427
 12645  03CD'                    i1l7409:
 12646                           
 12647                           ;charger_discharger.c: 231:     {;charger_discharger.c: 232:         code = UART_get_byt
      +                          e();
 12648  03CD' 3180' 2000' 3180'  	fcall	_UART_get_byte
 12649  03D0' 0021               	movlb	1	; select bank1
 12650  03D1' 0080'              	movwf	command_interpreter@code^(0+128)
 12651                           
 12652                           ;charger_discharger.c: 233:         switch (code)
 12653  03D2' 2800'              	goto	i1l7425
 12654  03D3'                    i1l361:	
 12655                           ;charger_discharger.c: 234:         {;charger_discharger.c: 235:             case 0x03:
 12656                           
 12657                           
 12658                           ;charger_discharger.c: 236:                 state = IDLE;
 12659  03D3' 0023               	movlb	3	; select bank3
 12660  03D4' 0180'              	clrf	_state^(0+384)
 12661  03D5' 0A80'              	incf	_state^(0+384),f
 12662                           
 12663                           ;charger_discharger.c: 237:                 break;
 12664  03D6' 2800'              	goto	i1l7427
 12665  03D7'                    i1l7411:
 12666                           
 12667                           ;charger_discharger.c: 239:                 counter_state = test_configuration.number_of
      +                          _states + 1;
 12668  03D7' 0024               	movlb	4	; select bank4
 12669  03D8' 0801'              	movf	(_test_configuration^(0+512)+1),w
 12670  03D9' 3E01               	addlw	1
 12671  03DA' 0021               	movlb	1	; select bank1
 12672  03DB' 0080'              	movwf	_counter_state^(0+128)
 12673  03DC'                    i1l7413:
 12674                           
 12675                           ;charger_discharger.c: 240:                 wait_count = getTime();
 12676  03DC' 3180' 2000' 3180'  	fcall	i1_getTime
 12677  03DF' 0021               	movlb	1	; select bank1
 12678  03E0' 0080'              	movwf	??_command_interpreter^(0+128)
 12679  03E1' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 12680  03E2' 0800'              	movf	??_command_interpreter^(0+128),w
 12681  03E3' 0023               	movlb	3	; select bank3
 12682  03E4' 0080'              	movwf	_wait_count^(0+384)
 12683  03E5' 0021               	movlb	1	; select bank1
 12684  03E6' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 12685  03E7' 0023               	movlb	3	; select bank3
 12686  03E8' 0080'              	movwf	(_wait_count+1)^(0+384)
 12687                           
 12688                           ;charger_discharger.c: 241:                 state = WAIT;
 12689  03E9' 300D               	movlw	13
 12690  03EA' 0080'              	movwf	_state^(0+384)
 12691                           
 12692                           ;charger_discharger.c: 242:                 break;
 12693  03EB' 2800'              	goto	i1l7427
 12694  03EC'                    i1l7425:
 12695  03EC' 0800'              	movf	command_interpreter@code^(0+128),w
 12696  03ED' 0080'              	movwf	??_command_interpreter^(0+128)
 12697  03EE' 0181'              	clrf	(??_command_interpreter^(0+128)+1)
 12698                           
 12699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12700                           ; Switch size 1, requested type "simple"
 12701                           ; Number of cases is 1, Range of values is 0 to 0
 12702                           ; switch strategies available:
 12703                           ; Name         Instructions Cycles
 12704                           ; simple_byte            4     3 (average)
 12705                           ; direct_byte            8     6 (fixed)
 12706                           ; jumptable            260     6 (fixed)
 12707                           ;	Chosen strategy is simple_byte
 12708  03EF' 0800'              	movf	(??_command_interpreter+1)^(0+128),w
 12709  03F0' 3A00               	xorlw	0	; case 0
 12710  03F1' 1903               	skipnz
 12711  03F2' 2800'              	goto	i1l7767
 12712  03F3' 2800'              	goto	i1l7407
 12713  03F4'                    i1l7767:
 12714                           
 12715                           ; Switch size 1, requested type "simple"
 12716                           ; Number of cases is 3, Range of values is 3 to 9
 12717                           ; switch strategies available:
 12718                           ; Name         Instructions Cycles
 12719                           ; simple_byte           10     6 (average)
 12720                           ; direct_byte           23     9 (fixed)
 12721                           ; jumptable            263     9 (fixed)
 12722                           ;	Chosen strategy is simple_byte
 12723  03F4' 0800'              	movf	??_command_interpreter^(0+128),w
 12724  03F5' 3A03               	xorlw	3	; case 3
 12725  03F6' 1903               	skipnz
 12726  03F7' 2800'              	goto	i1l361
 12727  03F8' 3A04               	xorlw	4	; case 7
 12728  03F9' 1903               	skipnz
 12729  03FA' 2800'              	goto	i1l7411
 12730  03FB' 3A0E               	xorlw	14	; case 9
 12731  03FC' 1903               	skipnz
 12732  03FD' 2800'              	goto	i1l7413
 12733  03FE' 2800'              	goto	i1l7407
 12734  03FF'                    i1l7427:
 12735                           
 12736                           ;charger_discharger.c: 252:     return (test);
 12737  03FF' 0021               	movlb	1	; select bank1
 12738  0400' 0800'              	movf	command_interpreter@test^(0+128),w
 12739  0401' 0008               	return
 12740  0402'                    __end_of_command_interpreter:
 12741                           
 12742                           	psect	text37
 12743  0000'                    __ptext37:	
 12744 ;; *************** function i1_getTime *****************
 12745 ;; Defined at:
 12746 ;;		line 565 in file "charger_discharger.c"
 12747 ;; Parameters:    Size  Location     Type
 12748 ;;		None
 12749 ;; Auto vars:     Size  Location     Type
 12750 ;;		None
 12751 ;; Return value:  Size  Location     Type
 12752 ;;                  1    wreg      unsigned char 
 12753 ;; Registers used:
 12754 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12755 ;; Tracked objects:
 12756 ;;		On entry : 0/0
 12757 ;;		On exit  : 0/0
 12758 ;;		Unchanged: 0/0
 12759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12762 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12763 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12764 ;;Total ram usage:        2 bytes
 12765 ;; Hardware stack levels used: 1
 12766 ;; This function calls:
 12767 ;;		Nothing
 12768 ;; This function is called by:
 12769 ;;		_command_interpreter
 12770 ;; This function uses a non-reentrant model
 12771 ;;
 12772                           
 12773  0000'                    i1_getTime:	
 12774                           ;psect for function i1_getTime
 12775                           
 12776                           
 12777                           ;charger_discharger.c: 566:     if ((counter_state + 1 <= test_configuration.number_of_s
      +                          tates) && (test_configuration.order_of_states[counter_state + 1] != 0x00)){
 12778                           
 12779                           ;incstack = 0
 12780                           ; Regs used in i1_getTime: [wreg+fsr1l+fsr1h+status,2+status,0]
 12781  0000' 0021               	movlb	1	; select bank1
 12782  0001' 0800'              	movf	_counter_state^(0+128),w
 12783  0002' 3E01               	addlw	1
 12784  0003' 0080'              	movwf	??i1_getTime
 12785  0004' 3000               	movlw	0
 12786  0005' 1803               	skipnc
 12787  0006' 3001               	movlw	1
 12788  0007' 0081'              	movwf	??i1_getTime+1
 12789  0008' 0801'              	movf	??i1_getTime+1,w
 12790  0009' 3A80               	xorlw	128
 12791  000A' 3C80               	sublw	128
 12792  000B' 1D03               	skipz
 12793  000C' 2800'              	goto	u687_25
 12794  000D' 0800'              	movf	??i1_getTime,w
 12795  000E' 0024               	movlb	4	; select bank4
 12796  000F' 0201'              	subwf	(_test_configuration^(0+512)+1),w
 12797  0010'                    u687_25:
 12798  0010' 1C03               	skipc
 12799  0011' 2800'              	goto	i1l6263
 12800  0012' 0021               	movlb	1	; select bank1
 12801  0013' 0800'              	movf	_counter_state^(0+128),w
 12802  0014' 3E00'              	addlw	(low ((_test_configuration| (0+512)+8)))& (0+255)
 12803  0015' 0086               	movwf	6
 12804  0016' 3002               	movlw	2	; select bank4/5
 12805  0017' 0087               	movwf	7
 12806  0018' 0801               	movf	1,w
 12807  0019' 1903               	btfsc	3,2
 12808  001A' 2800'              	goto	i1l6263
 12809  001B'                    i1l6257:
 12810                           
 12811                           ;charger_discharger.c: 567:         return test_configuration.wait_time;
 12812  001B' 0024               	movlb	4	; select bank4
 12813  001C' 0803'              	movf	(_test_configuration^(0+512)+3),w
 12814  001D' 0008               	return
 12815  001E'                    i1l6263:
 12816  001E' 0024               	movlb	4	; select bank4
 12817  001F' 0800'              	movf	_test_configuration^(0+512),w
 12818  0020' 0023               	movlb	3	; select bank3
 12819  0021' 0200'              	subwf	_cell_count^(0+384),w
 12820  0022' 1C03               	btfss	3,0
 12821  0023' 2800'              	goto	i1l6257
 12822                           
 12823                           ;charger_discharger.c: 573:         return test_configuration.end_wait_time;
 12824  0024' 0024               	movlb	4	; select bank4
 12825  0025' 0805'              	movf	(_test_configuration^(0+512)+5),w
 12826  0026' 0008               	return
 12827  0027'                    __end_ofi1_getTime:
 12828                           
 12829                           	psect	text38
 12830  0000'                    __ptext38:	
 12831 ;; *************** function i1_converter_settings *****************
 12832 ;; Defined at:
 12833 ;;		line 208 in file "state_machine_b.c"
 12834 ;; Parameters:    Size  Location     Type
 12835 ;;		None
 12836 ;; Auto vars:     Size  Location     Type
 12837 ;;		None
 12838 ;; Return value:  Size  Location     Type
 12839 ;;                  1    wreg      void 
 12840 ;; Registers used:
 12841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12842 ;; Tracked objects:
 12843 ;;		On entry : 0/0
 12844 ;;		On exit  : 0/0
 12845 ;;		Unchanged: 0/0
 12846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12848 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12849 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12850 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12851 ;;Total ram usage:        8 bytes
 12852 ;; Hardware stack levels used: 1
 12853 ;; Hardware stack levels required when called: 2
 12854 ;; This function calls:
 12855 ;;		i1_Cell_ON
 12856 ;;		i1___fladd
 12857 ;;		i1___fldiv
 12858 ;;		i1___flmul
 12859 ;;		i1___fltol
 12860 ;;		i1___xxtofl
 12861 ;;		i1_set_DC
 12862 ;; This function is called by:
 12863 ;;		_command_interpreter
 12864 ;; This function uses a non-reentrant model
 12865 ;;
 12866                           
 12867  0000'                    i1_converter_settings:	
 12868                           ;psect for function i1_converter_settings
 12869                           
 12870                           
 12871                           ;state_machine_b.c: 211:     cmode = 1;
 12872                           
 12873                           ;incstack = 0
 12874                           ; Regs used in i1_converter_settings: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12875  0000' 0021               	movlb	1	; select bank1
 12876  0001' 0180'              	clrf	_cmode^(0+128)
 12877  0002' 0A80'              	incf	_cmode^(0+128),f
 12878                           
 12879                           ;state_machine_b.c: 212:     pidi = 0;
 12880  0003' 3000               	movlw	0
 12881  0004' 0024               	movlb	4	; select bank4
 12882  0005' 0080'              	movwf	(_pidi+3)^(0+512)
 12883  0006' 3000               	movlw	0
 12884  0007' 0080'              	movwf	(_pidi+2)^(0+512)
 12885  0008' 3000               	movlw	0
 12886  0009' 0080'              	movwf	(_pidi+1)^(0+512)
 12887  000A' 3000               	movlw	0
 12888  000B' 0080'              	movwf	_pidi^(0+512)
 12889                           
 12890                           ;state_machine_b.c: 213:     qavg = 0;
 12891  000C' 3000               	movlw	0
 12892  000D' 0023               	movlb	3	; select bank3
 12893  000E' 0080'              	movwf	(_qavg+3)^(0+384)
 12894  000F' 3000               	movlw	0
 12895  0010' 0080'              	movwf	(_qavg+2)^(0+384)
 12896  0011' 3000               	movlw	0
 12897  0012' 0080'              	movwf	(_qavg+1)^(0+384)
 12898  0013' 3000               	movlw	0
 12899  0014' 0080'              	movwf	_qavg^(0+384)
 12900                           
 12901                           ;state_machine_b.c: 214:     vmax = 0;
 12902  0015' 0180'              	clrf	_vmax^(0+384)
 12903  0016' 0180'              	clrf	(_vmax+1)^(0+384)
 12904                           
 12905                           ;state_machine_b.c: 215:     pidt = 50.0;
 12906  0017' 3042               	movlw	66
 12907  0018' 0080'              	movwf	(_pidt+3)^(0+384)
 12908  0019' 3048               	movlw	72
 12909  001A' 0080'              	movwf	(_pidt+2)^(0+384)
 12910  001B' 3000               	movlw	0
 12911  001C' 0080'              	movwf	(_pidt+1)^(0+384)
 12912  001D' 3000               	movlw	0
 12913  001E' 0080'              	movwf	_pidt^(0+384)
 12914                           
 12915                           ;state_machine_b.c: 216:     set_DC();
 12916  001F' 3180' 2000' 3180'  	fcall	i1_set_DC
 12917                           
 12918                           ;state_machine_b.c: 217:     Cell_ON();
 12919  0022' 3180' 2000' 3180'  	fcall	i1_Cell_ON
 12920                           
 12921                           ;state_machine_b.c: 218:     switch(state)
 12922  0025' 2800'              	goto	i1l6423
 12923  0026'                    i1l6287:
 12924                           
 12925                           ;state_machine_b.c: 221:             iref = i_char;
 12926  0026' 0023               	movlb	3	; select bank3
 12927  0027' 0800'              	movf	(_i_char+1)^(0+384),w
 12928  0028' 0021               	movlb	1	; select bank1
 12929  0029' 0080'              	movwf	(_iref+1)^(0+128)
 12930  002A' 0023               	movlb	3	; select bank3
 12931  002B' 0800'              	movf	_i_char^(0+384),w
 12932  002C' 0021               	movlb	1	; select bank1
 12933  002D' 0080'              	movwf	_iref^(0+128)
 12934                           
 12935                           ;state_machine_b.c: 222:             if(basic_configuration.version == 0x02) timeout = (
      +                          uint16_t)(((float)capacity / (float)basic_configuration.const_current_char) * 3600 * 1.1
      +                          );
 12936  002E' 3002               	movlw	2
 12937  002F' 0024               	movlb	4	; select bank4
 12938  0030' 0600'              	xorwf	_basic_configuration^(0+512),w
 12939  0031' 1D03               	btfss	3,2
 12940  0032' 2800'              	goto	i1l6293
 12941  0033' 0023               	movlb	3	; select bank3
 12942  0034' 0800'              	movf	_capacity^(0+384),w
 12943  0035' 0080'              	movwf	i1___xxtofl@val
 12944  0036' 0800'              	movf	(_capacity+1)^(0+384),w
 12945  0037' 0081'              	movwf	i1___xxtofl@val+1
 12946  0038' 0182'              	clrf	i1___xxtofl@val+2
 12947  0039' 0183'              	clrf	i1___xxtofl@val+3
 12948  003A' 3000               	movlw	0
 12949  003B' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12950  003E' 0803'              	movf	?i1___xxtofl+3,w
 12951  003F' 0020               	movlb	0	; select bank0
 12952  0040' 00BD'              	movwf	i1___fldiv@b+3
 12953  0041' 0802'              	movf	?i1___xxtofl+2,w
 12954  0042' 00BC'              	movwf	i1___fldiv@b+2
 12955  0043' 0801'              	movf	?i1___xxtofl+1,w
 12956  0044' 00BB'              	movwf	i1___fldiv@b+1
 12957  0045' 0800'              	movf	?i1___xxtofl,w
 12958  0046' 00BA'              	movwf	i1___fldiv@b
 12959  0047' 0024               	movlb	4	; select bank4
 12960  0048' 0803'              	movf	(_basic_configuration^(0+512)+3),w
 12961  0049' 0080'              	movwf	i1___xxtofl@val
 12962  004A' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
 12963  004B' 0081'              	movwf	i1___xxtofl@val+1
 12964  004C' 0182'              	clrf	i1___xxtofl@val+2
 12965  004D' 0183'              	clrf	i1___xxtofl@val+3
 12966  004E' 3000               	movlw	0
 12967  004F' 3180' 2000' 3180'  	fcall	i1___xxtofl
 12968  0052' 0803'              	movf	?i1___xxtofl+3,w
 12969  0053' 0020               	movlb	0	; select bank0
 12970  0054' 00B9'              	movwf	i1___fldiv@a+3
 12971  0055' 0802'              	movf	?i1___xxtofl+2,w
 12972  0056' 00B8'              	movwf	i1___fldiv@a+2
 12973  0057' 0801'              	movf	?i1___xxtofl+1,w
 12974  0058' 00B7'              	movwf	i1___fldiv@a+1
 12975  0059' 0800'              	movf	?i1___xxtofl,w
 12976  005A' 00B6'              	movwf	i1___fldiv@a
 12977  005B' 3180' 2000' 3180'  	fcall	i1___fldiv
 12978  005E' 0020               	movlb	0	; select bank0
 12979  005F' 0839'              	movf	?i1___fldiv+3,w
 12980  0060' 00A3'              	movwf	i1___flmul@a+3
 12981  0061' 0838'              	movf	?i1___fldiv+2,w
 12982  0062' 00A2'              	movwf	i1___flmul@a+2
 12983  0063' 0837'              	movf	?i1___fldiv+1,w
 12984  0064' 00A1'              	movwf	i1___flmul@a+1
 12985  0065' 0836'              	movf	?i1___fldiv,w
 12986  0066' 00A0'              	movwf	i1___flmul@a
 12987  0067' 3045               	movlw	69
 12988  0068' 009F'              	movwf	i1___flmul@b+3
 12989  0069' 3061               	movlw	97
 12990  006A' 009E'              	movwf	i1___flmul@b+2
 12991  006B' 3000               	movlw	0
 12992  006C' 009D'              	movwf	i1___flmul@b+1
 12993  006D' 3000               	movlw	0
 12994  006E' 009C'              	movwf	i1___flmul@b
 12995  006F' 3180' 2000' 3180'  	fcall	i1___flmul
 12996  0072' 0020               	movlb	0	; select bank0
 12997  0073' 081F'              	movf	?i1___flmul+3,w
 12998  0074' 0021               	movlb	1	; select bank1
 12999  0075' 0080'              	movwf	(i1_converter_settings$1748+3)^(0+128)
 13000  0076' 0020               	movlb	0	; select bank0
 13001  0077' 081E'              	movf	?i1___flmul+2,w
 13002  0078' 0021               	movlb	1	; select bank1
 13003  0079' 0080'              	movwf	(i1_converter_settings$1748+2)^(0+128)
 13004  007A' 0020               	movlb	0	; select bank0
 13005  007B' 081D'              	movf	?i1___flmul+1,w
 13006  007C' 0021               	movlb	1	; select bank1
 13007  007D' 0080'              	movwf	(i1_converter_settings$1748+1)^(0+128)
 13008  007E' 0020               	movlb	0	; select bank0
 13009  007F' 081C'              	movf	?i1___flmul,w
 13010  0080' 0021               	movlb	1	; select bank1
 13011  0081' 0080'              	movwf	i1_converter_settings$1748^(0+128)
 13012  0082' 0800'              	movf	(i1_converter_settings$1748+3)^(0+128),w
 13013  0083' 0020               	movlb	0	; select bank0
 13014  0084' 00A3'              	movwf	i1___flmul@a+3
 13015  0085' 0021               	movlb	1	; select bank1
 13016  0086' 0800'              	movf	(i1_converter_settings$1748+2)^(0+128),w
 13017  0087' 0020               	movlb	0	; select bank0
 13018  0088' 00A2'              	movwf	i1___flmul@a+2
 13019  0089' 0021               	movlb	1	; select bank1
 13020  008A' 0800'              	movf	(i1_converter_settings$1748+1)^(0+128),w
 13021  008B' 0020               	movlb	0	; select bank0
 13022  008C' 00A1'              	movwf	i1___flmul@a+1
 13023  008D' 0021               	movlb	1	; select bank1
 13024  008E' 0800'              	movf	i1_converter_settings$1748^(0+128),w
 13025  008F' 0020               	movlb	0	; select bank0
 13026  0090' 00A0'              	movwf	i1___flmul@a
 13027  0091' 303F               	movlw	63
 13028  0092' 009F'              	movwf	i1___flmul@b+3
 13029  0093' 308C               	movlw	140
 13030  0094' 009E'              	movwf	i1___flmul@b+2
 13031  0095' 30CC               	movlw	204
 13032  0096' 009D'              	movwf	i1___flmul@b+1
 13033  0097' 30CD               	movlw	205
 13034  0098' 009C'              	movwf	i1___flmul@b
 13035  0099' 3180' 2000' 3180'  	fcall	i1___flmul
 13036  009C' 0020               	movlb	0	; select bank0
 13037  009D' 081F'              	movf	?i1___flmul+3,w
 13038  009E' 0021               	movlb	1	; select bank1
 13039  009F' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 13040  00A0' 0020               	movlb	0	; select bank0
 13041  00A1' 081E'              	movf	?i1___flmul+2,w
 13042  00A2' 0021               	movlb	1	; select bank1
 13043  00A3' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 13044  00A4' 0020               	movlb	0	; select bank0
 13045  00A5' 081D'              	movf	?i1___flmul+1,w
 13046  00A6' 0021               	movlb	1	; select bank1
 13047  00A7' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 13048  00A8' 0020               	movlb	0	; select bank0
 13049  00A9' 081C'              	movf	?i1___flmul,w
 13050  00AA' 0021               	movlb	1	; select bank1
 13051  00AB' 0080'              	movwf	i1___fltol@f1^(0+128)
 13052  00AC' 3180' 2000' 3180'  	fcall	i1___fltol
 13053  00AF' 0021               	movlb	1	; select bank1
 13054  00B0' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 13055  00B1' 0023               	movlb	3	; select bank3
 13056  00B2' 0080'              	movwf	(_timeout+1)^(0+384)
 13057  00B3' 0021               	movlb	1	; select bank1
 13058  00B4' 0800'              	movf	?i1___fltol^(0+128),w
 13059  00B5' 0023               	movlb	3	; select bank3
 13060  00B6' 0080'              	movwf	_timeout^(0+384)
 13061  00B7'                    i1l6293:
 13062                           
 13063                           ;state_machine_b.c: 223:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC4 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC4 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_char_kp; ki = CC_char_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
 13064  00B7' 0020               	movlb	0	; select bank0
 13065  00B8' 118E               	bcf	14,3	;volatile
 13066  00B9' 120E               	bcf	14,4	;volatile
 13067  00BA' 3005               	movlw	5
 13068  00BB' 0021               	movlb	1	; select bank1
 13069  00BC' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13070  00BD' 300F               	movlw	15
 13071  00BE' 0080'              	movwf	??i1_converter_settings^(0+128)
 13072  00BF' 30F1               	movlw	241
 13073  00C0'                    u792_27:
 13074  00C0' 0B89               	decfsz	9,f
 13075  00C1' 2800'              	goto	u792_27
 13076  00C2' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13077  00C3' 2800'              	goto	u792_27
 13078  00C4' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13079  00C5' 2800'              	goto	u792_27
 13080  00C6' 0020               	movlb	0	; select bank0
 13081  00C7' 160E               	bsf	14,4	;volatile
 13082  00C8' 3005               	movlw	5
 13083  00C9' 0021               	movlb	1	; select bank1
 13084  00CA' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13085  00CB' 300F               	movlw	15
 13086  00CC' 0080'              	movwf	??i1_converter_settings^(0+128)
 13087  00CD' 30F1               	movlw	241
 13088  00CE'                    u793_27:
 13089  00CE' 0B89               	decfsz	9,f
 13090  00CF' 2800'              	goto	u793_27
 13091  00D0' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13092  00D1' 2800'              	goto	u793_27
 13093  00D2' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13094  00D3' 2800'              	goto	u793_27
 13095  00D4' 0020               	movlb	0	; select bank0
 13096  00D5' 120E               	bcf	14,4	;volatile
 13097  00D6' 3005               	movlw	5
 13098  00D7' 0021               	movlb	1	; select bank1
 13099  00D8' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13100  00D9' 300F               	movlw	15
 13101  00DA' 0080'              	movwf	??i1_converter_settings^(0+128)
 13102  00DB' 30F1               	movlw	241
 13103  00DC'                    u794_27:
 13104  00DC' 0B89               	decfsz	9,f
 13105  00DD' 2800'              	goto	u794_27
 13106  00DE' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13107  00DF' 2800'              	goto	u794_27
 13108  00E0' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13109  00E1' 2800'              	goto	u794_27
 13110  00E2' 0020               	movlb	0	; select bank0
 13111  00E3' 168E               	bsf	14,5	;volatile
 13112  00E4' 3005               	movlw	5
 13113  00E5' 0021               	movlb	1	; select bank1
 13114  00E6' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13115  00E7' 300F               	movlw	15
 13116  00E8' 0080'              	movwf	??i1_converter_settings^(0+128)
 13117  00E9' 30F1               	movlw	241
 13118  00EA'                    u795_27:
 13119  00EA' 0B89               	decfsz	9,f
 13120  00EB' 2800'              	goto	u795_27
 13121  00EC' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13122  00ED' 2800'              	goto	u795_27
 13123  00EE' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13124  00EF' 2800'              	goto	u795_27
 13125  00F0' 2800'              	goto	L19
 13126  00F1'                    i1l6317:	
 13127                           ;state_machine_b.c: 224:             break;
 13128                           
 13129                           
 13130                           ;state_machine_b.c: 226:             iref = i_disc;
 13131  00F1' 0023               	movlb	3	; select bank3
 13132  00F2' 0800'              	movf	(_i_disc+1)^(0+384),w
 13133  00F3' 0021               	movlb	1	; select bank1
 13134  00F4' 0080'              	movwf	(_iref+1)^(0+128)
 13135  00F5' 0023               	movlb	3	; select bank3
 13136  00F6' 0800'              	movf	_i_disc^(0+384),w
 13137  00F7' 0021               	movlb	1	; select bank1
 13138  00F8' 0080'              	movwf	_iref^(0+128)
 13139                           
 13140                           ;state_machine_b.c: 227:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
 13141  00F9' 0020               	movlb	0	; select bank0
 13142  00FA' 118E               	bcf	14,3	;volatile
 13143  00FB' 120E               	bcf	14,4	;volatile
 13144  00FC' 3005               	movlw	5
 13145  00FD' 0021               	movlb	1	; select bank1
 13146  00FE' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13147  00FF' 300F               	movlw	15
 13148  0100' 0080'              	movwf	??i1_converter_settings^(0+128)
 13149  0101' 30F1               	movlw	241
 13150  0102'                    u796_27:
 13151  0102' 0B89               	decfsz	9,f
 13152  0103' 2800'              	goto	u796_27
 13153  0104' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13154  0105' 2800'              	goto	u796_27
 13155  0106' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13156  0107' 2800'              	goto	u796_27
 13157  0108' 0020               	movlb	0	; select bank0
 13158  0109' 158E               	bsf	14,3	;volatile
 13159  010A' 3005               	movlw	5
 13160  010B' 0021               	movlb	1	; select bank1
 13161  010C' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13162  010D' 300F               	movlw	15
 13163  010E' 0080'              	movwf	??i1_converter_settings^(0+128)
 13164  010F' 30F1               	movlw	241
 13165  0110'                    u797_27:
 13166  0110' 0B89               	decfsz	9,f
 13167  0111' 2800'              	goto	u797_27
 13168  0112' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13169  0113' 2800'              	goto	u797_27
 13170  0114' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13171  0115' 2800'              	goto	u797_27
 13172  0116' 0020               	movlb	0	; select bank0
 13173  0117' 118E               	bcf	14,3	;volatile
 13174  0118' 3005               	movlw	5
 13175  0119' 0021               	movlb	1	; select bank1
 13176  011A' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13177  011B' 300F               	movlw	15
 13178  011C' 0080'              	movwf	??i1_converter_settings^(0+128)
 13179  011D' 30F1               	movlw	241
 13180  011E'                    u798_27:
 13181  011E' 0B89               	decfsz	9,f
 13182  011F' 2800'              	goto	u798_27
 13183  0120' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13184  0121' 2800'              	goto	u798_27
 13185  0122' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13186  0123' 2800'              	goto	u798_27
 13187  0124' 0020               	movlb	0	; select bank0
 13188  0125' 168E               	bsf	14,5	;volatile
 13189  0126' 3005               	movlw	5
 13190  0127' 0021               	movlb	1	; select bank1
 13191  0128' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13192  0129' 300F               	movlw	15
 13193  012A' 0080'              	movwf	??i1_converter_settings^(0+128)
 13194  012B' 30F1               	movlw	241
 13195  012C'                    u799_27:
 13196  012C' 0B89               	decfsz	9,f
 13197  012D' 2800'              	goto	u799_27
 13198  012E' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13199  012F' 2800'              	goto	u799_27
 13200  0130' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13201  0131' 2800'              	goto	u799_27
 13202  0132' 2800'              	goto	L18
 13203  0133'                    i1l6333:	
 13204                           ;state_machine_b.c: 228:             break;
 13205                           
 13206                           
 13207                           ;state_machine_b.c: 230:             iref = (uint16_t) ( ( ( capacity * 4096.0 ) / (5000
      +                           * 2.5) ) + 0.5 );
 13208  0133' 0023               	movlb	3	; select bank3
 13209  0134' 0800'              	movf	_capacity^(0+384),w
 13210  0135' 0080'              	movwf	i1___xxtofl@val
 13211  0136' 0800'              	movf	(_capacity+1)^(0+384),w
 13212  0137' 0081'              	movwf	i1___xxtofl@val+1
 13213  0138' 0182'              	clrf	i1___xxtofl@val+2
 13214  0139' 0183'              	clrf	i1___xxtofl@val+3
 13215  013A' 3000               	movlw	0
 13216  013B' 3180' 2000' 3180'  	fcall	i1___xxtofl
 13217  013E' 0803'              	movf	?i1___xxtofl+3,w
 13218  013F' 0020               	movlb	0	; select bank0
 13219  0140' 00A3'              	movwf	i1___flmul@a+3
 13220  0141' 0802'              	movf	?i1___xxtofl+2,w
 13221  0142' 00A2'              	movwf	i1___flmul@a+2
 13222  0143' 0801'              	movf	?i1___xxtofl+1,w
 13223  0144' 00A1'              	movwf	i1___flmul@a+1
 13224  0145' 0800'              	movf	?i1___xxtofl,w
 13225  0146' 00A0'              	movwf	i1___flmul@a
 13226  0147' 3045               	movlw	69
 13227  0148' 009F'              	movwf	i1___flmul@b+3
 13228  0149' 3080               	movlw	128
 13229  014A' 009E'              	movwf	i1___flmul@b+2
 13230  014B' 3000               	movlw	0
 13231  014C' 009D'              	movwf	i1___flmul@b+1
 13232  014D' 3000               	movlw	0
 13233  014E' 009C'              	movwf	i1___flmul@b
 13234  014F' 3180' 2000' 3180'  	fcall	i1___flmul
 13235  0152' 0020               	movlb	0	; select bank0
 13236  0153' 081F'              	movf	?i1___flmul+3,w
 13237  0154' 00BD'              	movwf	i1___fldiv@b+3
 13238  0155' 081E'              	movf	?i1___flmul+2,w
 13239  0156' 00BC'              	movwf	i1___fldiv@b+2
 13240  0157' 081D'              	movf	?i1___flmul+1,w
 13241  0158' 00BB'              	movwf	i1___fldiv@b+1
 13242  0159' 081C'              	movf	?i1___flmul,w
 13243  015A' 00BA'              	movwf	i1___fldiv@b
 13244  015B' 3046               	movlw	70
 13245  015C' 00B9'              	movwf	i1___fldiv@a+3
 13246  015D' 3043               	movlw	67
 13247  015E' 00B8'              	movwf	i1___fldiv@a+2
 13248  015F' 3050               	movlw	80
 13249  0160' 00B7'              	movwf	i1___fldiv@a+1
 13250  0161' 3000               	movlw	0
 13251  0162' 00B6'              	movwf	i1___fldiv@a
 13252  0163' 3180' 2000' 3180'  	fcall	i1___fldiv
 13253  0166' 0020               	movlb	0	; select bank0
 13254  0167' 0839'              	movf	?i1___fldiv+3,w
 13255  0168' 0087'              	movwf	i1___fladd@a+3
 13256  0169' 0838'              	movf	?i1___fldiv+2,w
 13257  016A' 0086'              	movwf	i1___fladd@a+2
 13258  016B' 0837'              	movf	?i1___fldiv+1,w
 13259  016C' 0085'              	movwf	i1___fladd@a+1
 13260  016D' 0836'              	movf	?i1___fldiv,w
 13261  016E' 0084'              	movwf	i1___fladd@a
 13262  016F' 303F               	movlw	63
 13263  0170' 0083'              	movwf	i1___fladd@b+3
 13264  0171' 3000               	movlw	0
 13265  0172' 0082'              	movwf	i1___fladd@b+2
 13266  0173' 3000               	movlw	0
 13267  0174' 0081'              	movwf	i1___fladd@b+1
 13268  0175' 3000               	movlw	0
 13269  0176' 0080'              	movwf	i1___fladd@b
 13270  0177' 3180' 2000' 3180'  	fcall	i1___fladd
 13271  017A' 0020               	movlb	0	; select bank0
 13272  017B' 0803'              	movf	?i1___fladd+3,w
 13273  017C' 0021               	movlb	1	; select bank1
 13274  017D' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 13275  017E' 0020               	movlb	0	; select bank0
 13276  017F' 0802'              	movf	?i1___fladd+2,w
 13277  0180' 0021               	movlb	1	; select bank1
 13278  0181' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 13279  0182' 0020               	movlb	0	; select bank0
 13280  0183' 0801'              	movf	?i1___fladd+1,w
 13281  0184' 0021               	movlb	1	; select bank1
 13282  0185' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 13283  0186' 0020               	movlb	0	; select bank0
 13284  0187' 0800'              	movf	?i1___fladd,w
 13285  0188' 0021               	movlb	1	; select bank1
 13286  0189' 0080'              	movwf	i1___fltol@f1^(0+128)
 13287  018A' 3180' 2000' 3180'  	fcall	i1___fltol
 13288  018D' 0021               	movlb	1	; select bank1
 13289  018E' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 13290  018F' 0080'              	movwf	(_iref+1)^(0+128)
 13291  0190' 0800'              	movf	?i1___fltol^(0+128),w
 13292  0191' 0080'              	movwf	_iref^(0+128)
 13293                           
 13294                           ;state_machine_b.c: 231:             dc_res_count = 220;
 13295  0192' 30DC               	movlw	220
 13296  0193' 0023               	movlb	3	; select bank3
 13297  0194' 0080'              	movwf	_dc_res_count^(0+384)
 13298                           
 13299                           ;state_machine_b.c: 232:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
 13300  0195' 0020               	movlb	0	; select bank0
 13301  0196' 118E               	bcf	14,3	;volatile
 13302  0197' 120E               	bcf	14,4	;volatile
 13303  0198' 3005               	movlw	5
 13304  0199' 0021               	movlb	1	; select bank1
 13305  019A' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13306  019B' 300F               	movlw	15
 13307  019C' 0080'              	movwf	??i1_converter_settings^(0+128)
 13308  019D' 30F1               	movlw	241
 13309  019E'                    u800_27:
 13310  019E' 0B89               	decfsz	9,f
 13311  019F' 2800'              	goto	u800_27
 13312  01A0' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13313  01A1' 2800'              	goto	u800_27
 13314  01A2' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13315  01A3' 2800'              	goto	u800_27
 13316  01A4' 0020               	movlb	0	; select bank0
 13317  01A5' 158E               	bsf	14,3	;volatile
 13318  01A6' 3005               	movlw	5
 13319  01A7' 0021               	movlb	1	; select bank1
 13320  01A8' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13321  01A9' 300F               	movlw	15
 13322  01AA' 0080'              	movwf	??i1_converter_settings^(0+128)
 13323  01AB' 30F1               	movlw	241
 13324  01AC'                    u801_27:
 13325  01AC' 0B89               	decfsz	9,f
 13326  01AD' 2800'              	goto	u801_27
 13327  01AE' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13328  01AF' 2800'              	goto	u801_27
 13329  01B0' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13330  01B1' 2800'              	goto	u801_27
 13331  01B2' 0020               	movlb	0	; select bank0
 13332  01B3' 118E               	bcf	14,3	;volatile
 13333  01B4' 3005               	movlw	5
 13334  01B5' 0021               	movlb	1	; select bank1
 13335  01B6' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13336  01B7' 300F               	movlw	15
 13337  01B8' 0080'              	movwf	??i1_converter_settings^(0+128)
 13338  01B9' 30F1               	movlw	241
 13339  01BA'                    u802_27:
 13340  01BA' 0B89               	decfsz	9,f
 13341  01BB' 2800'              	goto	u802_27
 13342  01BC' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13343  01BD' 2800'              	goto	u802_27
 13344  01BE' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13345  01BF' 2800'              	goto	u802_27
 13346  01C0' 0020               	movlb	0	; select bank0
 13347  01C1' 168E               	bsf	14,5	;volatile
 13348  01C2' 3005               	movlw	5
 13349  01C3' 0021               	movlb	1	; select bank1
 13350  01C4' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13351  01C5' 300F               	movlw	15
 13352  01C6' 0080'              	movwf	??i1_converter_settings^(0+128)
 13353  01C7' 30F1               	movlw	241
 13354  01C8'                    u803_27:
 13355  01C8' 0B89               	decfsz	9,f
 13356  01C9' 2800'              	goto	u803_27
 13357  01CA' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13358  01CB' 2800'              	goto	u803_27
 13359  01CC' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13360  01CD' 2800'              	goto	u803_27
 13361  01CE' 2800'              	goto	L18
 13362  01CF'                    i1l6361:	
 13363                           ;state_machine_b.c: 233:             break;
 13364                           
 13365                           
 13366                           ;state_machine_b.c: 235:             iref = (uint16_t) ( ( ( capacity * 4096.0 ) / (5000
      +                           * 2.5 * 2 ) ) + 0.5 );
 13367  01CF' 0023               	movlb	3	; select bank3
 13368  01D0' 0800'              	movf	_capacity^(0+384),w
 13369  01D1' 0080'              	movwf	i1___xxtofl@val
 13370  01D2' 0800'              	movf	(_capacity+1)^(0+384),w
 13371  01D3' 0081'              	movwf	i1___xxtofl@val+1
 13372  01D4' 0182'              	clrf	i1___xxtofl@val+2
 13373  01D5' 0183'              	clrf	i1___xxtofl@val+3
 13374  01D6' 3000               	movlw	0
 13375  01D7' 3180' 2000' 3180'  	fcall	i1___xxtofl
 13376  01DA' 0803'              	movf	?i1___xxtofl+3,w
 13377  01DB' 0020               	movlb	0	; select bank0
 13378  01DC' 00A3'              	movwf	i1___flmul@a+3
 13379  01DD' 0802'              	movf	?i1___xxtofl+2,w
 13380  01DE' 00A2'              	movwf	i1___flmul@a+2
 13381  01DF' 0801'              	movf	?i1___xxtofl+1,w
 13382  01E0' 00A1'              	movwf	i1___flmul@a+1
 13383  01E1' 0800'              	movf	?i1___xxtofl,w
 13384  01E2' 00A0'              	movwf	i1___flmul@a
 13385  01E3' 3045               	movlw	69
 13386  01E4' 009F'              	movwf	i1___flmul@b+3
 13387  01E5' 3080               	movlw	128
 13388  01E6' 009E'              	movwf	i1___flmul@b+2
 13389  01E7' 3000               	movlw	0
 13390  01E8' 009D'              	movwf	i1___flmul@b+1
 13391  01E9' 3000               	movlw	0
 13392  01EA' 009C'              	movwf	i1___flmul@b
 13393  01EB' 3180' 2000' 3180'  	fcall	i1___flmul
 13394  01EE' 0020               	movlb	0	; select bank0
 13395  01EF' 081F'              	movf	?i1___flmul+3,w
 13396  01F0' 00BD'              	movwf	i1___fldiv@b+3
 13397  01F1' 081E'              	movf	?i1___flmul+2,w
 13398  01F2' 00BC'              	movwf	i1___fldiv@b+2
 13399  01F3' 081D'              	movf	?i1___flmul+1,w
 13400  01F4' 00BB'              	movwf	i1___fldiv@b+1
 13401  01F5' 081C'              	movf	?i1___flmul,w
 13402  01F6' 00BA'              	movwf	i1___fldiv@b
 13403  01F7' 3046               	movlw	70
 13404  01F8' 00B9'              	movwf	i1___fldiv@a+3
 13405  01F9' 30C3               	movlw	195
 13406  01FA' 00B8'              	movwf	i1___fldiv@a+2
 13407  01FB' 3050               	movlw	80
 13408  01FC' 00B7'              	movwf	i1___fldiv@a+1
 13409  01FD' 3000               	movlw	0
 13410  01FE' 00B6'              	movwf	i1___fldiv@a
 13411  01FF' 3180' 2000' 3180'  	fcall	i1___fldiv
 13412  0202' 0020               	movlb	0	; select bank0
 13413  0203' 0839'              	movf	?i1___fldiv+3,w
 13414  0204' 0087'              	movwf	i1___fladd@a+3
 13415  0205' 0838'              	movf	?i1___fldiv+2,w
 13416  0206' 0086'              	movwf	i1___fladd@a+2
 13417  0207' 0837'              	movf	?i1___fldiv+1,w
 13418  0208' 0085'              	movwf	i1___fladd@a+1
 13419  0209' 0836'              	movf	?i1___fldiv,w
 13420  020A' 0084'              	movwf	i1___fladd@a
 13421  020B' 303F               	movlw	63
 13422  020C' 0083'              	movwf	i1___fladd@b+3
 13423  020D' 3000               	movlw	0
 13424  020E' 0082'              	movwf	i1___fladd@b+2
 13425  020F' 3000               	movlw	0
 13426  0210' 0081'              	movwf	i1___fladd@b+1
 13427  0211' 3000               	movlw	0
 13428  0212' 0080'              	movwf	i1___fladd@b
 13429  0213' 3180' 2000' 3180'  	fcall	i1___fladd
 13430  0216' 0020               	movlb	0	; select bank0
 13431  0217' 0803'              	movf	?i1___fladd+3,w
 13432  0218' 0021               	movlb	1	; select bank1
 13433  0219' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 13434  021A' 0020               	movlb	0	; select bank0
 13435  021B' 0802'              	movf	?i1___fladd+2,w
 13436  021C' 0021               	movlb	1	; select bank1
 13437  021D' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 13438  021E' 0020               	movlb	0	; select bank0
 13439  021F' 0801'              	movf	?i1___fladd+1,w
 13440  0220' 0021               	movlb	1	; select bank1
 13441  0221' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 13442  0222' 0020               	movlb	0	; select bank0
 13443  0223' 0800'              	movf	?i1___fladd,w
 13444  0224' 0021               	movlb	1	; select bank1
 13445  0225' 0080'              	movwf	i1___fltol@f1^(0+128)
 13446  0226' 3180' 2000' 3180'  	fcall	i1___fltol
 13447  0229' 0021               	movlb	1	; select bank1
 13448  022A' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 13449  022B' 0080'              	movwf	(_iref+1)^(0+128)
 13450  022C' 0800'              	movf	?i1___fltol^(0+128),w
 13451  022D' 0080'              	movwf	_iref^(0+128)
 13452                           
 13453                           ;state_machine_b.c: 236:             if(basic_configuration.version == 0x02) timeout = (
      +                          uint16_t)(((float)capacity / (float)basic_configuration.const_current_char) * 3600 * 1.1
      +                          );
 13454  022E' 3002               	movlw	2
 13455  022F' 0024               	movlb	4	; select bank4
 13456  0230' 0600'              	xorwf	_basic_configuration^(0+512),w
 13457  0231' 1D03               	btfss	3,2
 13458  0232' 2800'              	goto	i1l6367
 13459  0233' 0023               	movlb	3	; select bank3
 13460  0234' 0800'              	movf	_capacity^(0+384),w
 13461  0235' 0080'              	movwf	i1___xxtofl@val
 13462  0236' 0800'              	movf	(_capacity+1)^(0+384),w
 13463  0237' 0081'              	movwf	i1___xxtofl@val+1
 13464  0238' 0182'              	clrf	i1___xxtofl@val+2
 13465  0239' 0183'              	clrf	i1___xxtofl@val+3
 13466  023A' 3000               	movlw	0
 13467  023B' 3180' 2000' 3180'  	fcall	i1___xxtofl
 13468  023E' 0803'              	movf	?i1___xxtofl+3,w
 13469  023F' 0020               	movlb	0	; select bank0
 13470  0240' 00BD'              	movwf	i1___fldiv@b+3
 13471  0241' 0802'              	movf	?i1___xxtofl+2,w
 13472  0242' 00BC'              	movwf	i1___fldiv@b+2
 13473  0243' 0801'              	movf	?i1___xxtofl+1,w
 13474  0244' 00BB'              	movwf	i1___fldiv@b+1
 13475  0245' 0800'              	movf	?i1___xxtofl,w
 13476  0246' 00BA'              	movwf	i1___fldiv@b
 13477  0247' 0024               	movlb	4	; select bank4
 13478  0248' 0803'              	movf	(_basic_configuration^(0+512)+3),w
 13479  0249' 0080'              	movwf	i1___xxtofl@val
 13480  024A' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
 13481  024B' 0081'              	movwf	i1___xxtofl@val+1
 13482  024C' 0182'              	clrf	i1___xxtofl@val+2
 13483  024D' 0183'              	clrf	i1___xxtofl@val+3
 13484  024E' 3000               	movlw	0
 13485  024F' 3180' 2000' 3180'  	fcall	i1___xxtofl
 13486  0252' 0803'              	movf	?i1___xxtofl+3,w
 13487  0253' 0020               	movlb	0	; select bank0
 13488  0254' 00B9'              	movwf	i1___fldiv@a+3
 13489  0255' 0802'              	movf	?i1___xxtofl+2,w
 13490  0256' 00B8'              	movwf	i1___fldiv@a+2
 13491  0257' 0801'              	movf	?i1___xxtofl+1,w
 13492  0258' 00B7'              	movwf	i1___fldiv@a+1
 13493  0259' 0800'              	movf	?i1___xxtofl,w
 13494  025A' 00B6'              	movwf	i1___fldiv@a
 13495  025B' 3180' 2000' 3180'  	fcall	i1___fldiv
 13496  025E' 0020               	movlb	0	; select bank0
 13497  025F' 0839'              	movf	?i1___fldiv+3,w
 13498  0260' 00A3'              	movwf	i1___flmul@a+3
 13499  0261' 0838'              	movf	?i1___fldiv+2,w
 13500  0262' 00A2'              	movwf	i1___flmul@a+2
 13501  0263' 0837'              	movf	?i1___fldiv+1,w
 13502  0264' 00A1'              	movwf	i1___flmul@a+1
 13503  0265' 0836'              	movf	?i1___fldiv,w
 13504  0266' 00A0'              	movwf	i1___flmul@a
 13505  0267' 3045               	movlw	69
 13506  0268' 009F'              	movwf	i1___flmul@b+3
 13507  0269' 3061               	movlw	97
 13508  026A' 009E'              	movwf	i1___flmul@b+2
 13509  026B' 3000               	movlw	0
 13510  026C' 009D'              	movwf	i1___flmul@b+1
 13511  026D' 3000               	movlw	0
 13512  026E' 009C'              	movwf	i1___flmul@b
 13513  026F' 3180' 2000' 3180'  	fcall	i1___flmul
 13514  0272' 0020               	movlb	0	; select bank0
 13515  0273' 081F'              	movf	?i1___flmul+3,w
 13516  0274' 0021               	movlb	1	; select bank1
 13517  0275' 0080'              	movwf	(i1_converter_settings$1748+3)^(0+128)
 13518  0276' 0020               	movlb	0	; select bank0
 13519  0277' 081E'              	movf	?i1___flmul+2,w
 13520  0278' 0021               	movlb	1	; select bank1
 13521  0279' 0080'              	movwf	(i1_converter_settings$1748+2)^(0+128)
 13522  027A' 0020               	movlb	0	; select bank0
 13523  027B' 081D'              	movf	?i1___flmul+1,w
 13524  027C' 0021               	movlb	1	; select bank1
 13525  027D' 0080'              	movwf	(i1_converter_settings$1748+1)^(0+128)
 13526  027E' 0020               	movlb	0	; select bank0
 13527  027F' 081C'              	movf	?i1___flmul,w
 13528  0280' 0021               	movlb	1	; select bank1
 13529  0281' 0080'              	movwf	i1_converter_settings$1748^(0+128)
 13530  0282' 0800'              	movf	(i1_converter_settings$1748+3)^(0+128),w
 13531  0283' 0020               	movlb	0	; select bank0
 13532  0284' 00A3'              	movwf	i1___flmul@a+3
 13533  0285' 0021               	movlb	1	; select bank1
 13534  0286' 0800'              	movf	(i1_converter_settings$1748+2)^(0+128),w
 13535  0287' 0020               	movlb	0	; select bank0
 13536  0288' 00A2'              	movwf	i1___flmul@a+2
 13537  0289' 0021               	movlb	1	; select bank1
 13538  028A' 0800'              	movf	(i1_converter_settings$1748+1)^(0+128),w
 13539  028B' 0020               	movlb	0	; select bank0
 13540  028C' 00A1'              	movwf	i1___flmul@a+1
 13541  028D' 0021               	movlb	1	; select bank1
 13542  028E' 0800'              	movf	i1_converter_settings$1748^(0+128),w
 13543  028F' 0020               	movlb	0	; select bank0
 13544  0290' 00A0'              	movwf	i1___flmul@a
 13545  0291' 303F               	movlw	63
 13546  0292' 009F'              	movwf	i1___flmul@b+3
 13547  0293' 308C               	movlw	140
 13548  0294' 009E'              	movwf	i1___flmul@b+2
 13549  0295' 30CC               	movlw	204
 13550  0296' 009D'              	movwf	i1___flmul@b+1
 13551  0297' 30CD               	movlw	205
 13552  0298' 009C'              	movwf	i1___flmul@b
 13553  0299' 3180' 2000' 3180'  	fcall	i1___flmul
 13554  029C' 0020               	movlb	0	; select bank0
 13555  029D' 081F'              	movf	?i1___flmul+3,w
 13556  029E' 0021               	movlb	1	; select bank1
 13557  029F' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 13558  02A0' 0020               	movlb	0	; select bank0
 13559  02A1' 081E'              	movf	?i1___flmul+2,w
 13560  02A2' 0021               	movlb	1	; select bank1
 13561  02A3' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 13562  02A4' 0020               	movlb	0	; select bank0
 13563  02A5' 081D'              	movf	?i1___flmul+1,w
 13564  02A6' 0021               	movlb	1	; select bank1
 13565  02A7' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 13566  02A8' 0020               	movlb	0	; select bank0
 13567  02A9' 081C'              	movf	?i1___flmul,w
 13568  02AA' 0021               	movlb	1	; select bank1
 13569  02AB' 0080'              	movwf	i1___fltol@f1^(0+128)
 13570  02AC' 3180' 2000' 3180'  	fcall	i1___fltol
 13571  02AF' 0021               	movlb	1	; select bank1
 13572  02B0' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 13573  02B1' 0023               	movlb	3	; select bank3
 13574  02B2' 0080'              	movwf	(_timeout+1)^(0+384)
 13575  02B3' 0021               	movlb	1	; select bank1
 13576  02B4' 0800'              	movf	?i1___fltol^(0+128),w
 13577  02B5' 0023               	movlb	3	; select bank3
 13578  02B6' 0080'              	movwf	_timeout^(0+384)
 13579  02B7'                    i1l6367:
 13580                           
 13581                           ;state_machine_b.c: 237:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC3 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC3 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_disc_kp; ki = CC_disc_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
 13582  02B7' 0020               	movlb	0	; select bank0
 13583  02B8' 118E               	bcf	14,3	;volatile
 13584  02B9' 120E               	bcf	14,4	;volatile
 13585  02BA' 3005               	movlw	5
 13586  02BB' 0021               	movlb	1	; select bank1
 13587  02BC' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13588  02BD' 300F               	movlw	15
 13589  02BE' 0080'              	movwf	??i1_converter_settings^(0+128)
 13590  02BF' 30F1               	movlw	241
 13591  02C0'                    u804_27:
 13592  02C0' 0B89               	decfsz	9,f
 13593  02C1' 2800'              	goto	u804_27
 13594  02C2' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13595  02C3' 2800'              	goto	u804_27
 13596  02C4' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13597  02C5' 2800'              	goto	u804_27
 13598  02C6' 0020               	movlb	0	; select bank0
 13599  02C7' 158E               	bsf	14,3	;volatile
 13600  02C8' 3005               	movlw	5
 13601  02C9' 0021               	movlb	1	; select bank1
 13602  02CA' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13603  02CB' 300F               	movlw	15
 13604  02CC' 0080'              	movwf	??i1_converter_settings^(0+128)
 13605  02CD' 30F1               	movlw	241
 13606  02CE'                    u805_27:
 13607  02CE' 0B89               	decfsz	9,f
 13608  02CF' 2800'              	goto	u805_27
 13609  02D0' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13610  02D1' 2800'              	goto	u805_27
 13611  02D2' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13612  02D3' 2800'              	goto	u805_27
 13613  02D4' 0020               	movlb	0	; select bank0
 13614  02D5' 118E               	bcf	14,3	;volatile
 13615  02D6' 3005               	movlw	5
 13616  02D7' 0021               	movlb	1	; select bank1
 13617  02D8' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13618  02D9' 300F               	movlw	15
 13619  02DA' 0080'              	movwf	??i1_converter_settings^(0+128)
 13620  02DB' 30F1               	movlw	241
 13621  02DC'                    u806_27:
 13622  02DC' 0B89               	decfsz	9,f
 13623  02DD' 2800'              	goto	u806_27
 13624  02DE' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13625  02DF' 2800'              	goto	u806_27
 13626  02E0' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13627  02E1' 2800'              	goto	u806_27
 13628  02E2' 0020               	movlb	0	; select bank0
 13629  02E3' 168E               	bsf	14,5	;volatile
 13630  02E4' 3005               	movlw	5
 13631  02E5' 0021               	movlb	1	; select bank1
 13632  02E6' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13633  02E7' 300F               	movlw	15
 13634  02E8' 0080'              	movwf	??i1_converter_settings^(0+128)
 13635  02E9' 30F1               	movlw	241
 13636  02EA'                    u807_27:
 13637  02EA' 0B89               	decfsz	9,f
 13638  02EB' 2800'              	goto	u807_27
 13639  02EC' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13640  02ED' 2800'              	goto	u807_27
 13641  02EE' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13642  02EF' 2800'              	goto	u807_27
 13643  02F0'                    L18:
 13644  02F0' 0023               	movlb	3	; select bank3
 13645  02F1' 0800'              	movf	(_CC_disc_kp+3)^(0+384),w
 13646  02F2' 0024               	movlb	4	; select bank4
 13647  02F3' 0080'              	movwf	(_kp+3)^(0+512)
 13648  02F4' 0023               	movlb	3	; select bank3
 13649  02F5' 0800'              	movf	(_CC_disc_kp+2)^(0+384),w
 13650  02F6' 0024               	movlb	4	; select bank4
 13651  02F7' 0080'              	movwf	(_kp+2)^(0+512)
 13652  02F8' 0023               	movlb	3	; select bank3
 13653  02F9' 0800'              	movf	(_CC_disc_kp+1)^(0+384),w
 13654  02FA' 0024               	movlb	4	; select bank4
 13655  02FB' 0080'              	movwf	(_kp+1)^(0+512)
 13656  02FC' 0023               	movlb	3	; select bank3
 13657  02FD' 0800'              	movf	_CC_disc_kp^(0+384),w
 13658  02FE' 0024               	movlb	4	; select bank4
 13659  02FF' 0080'              	movwf	_kp^(0+512)
 13660  0300' 0023               	movlb	3	; select bank3
 13661  0301' 0800'              	movf	(_CC_disc_ki+3)^(0+384),w
 13662  0302' 0024               	movlb	4	; select bank4
 13663  0303' 0080'              	movwf	(_ki+3)^(0+512)
 13664  0304' 0023               	movlb	3	; select bank3
 13665  0305' 0800'              	movf	(_CC_disc_ki+2)^(0+384),w
 13666  0306' 0024               	movlb	4	; select bank4
 13667  0307' 0080'              	movwf	(_ki+2)^(0+512)
 13668  0308' 0023               	movlb	3	; select bank3
 13669  0309' 0800'              	movf	(_CC_disc_ki+1)^(0+384),w
 13670  030A' 0024               	movlb	4	; select bank4
 13671  030B' 0080'              	movwf	(_ki+1)^(0+512)
 13672  030C' 0023               	movlb	3	; select bank3
 13673  030D' 0800'              	movf	_CC_disc_ki^(0+384),w
 13674  030E' 2800'              	goto	L17
 13675  030F'                    i1l6391:	
 13676                           ;state_machine_b.c: 238:             break;
 13677                           
 13678                           
 13679                           ;state_machine_b.c: 240:             iref = (uint16_t) ( ( ( capacity * 4096.0 ) / (5000
      +                           * 2.5 * 2 ) ) + 0.5 );
 13680  030F' 0023               	movlb	3	; select bank3
 13681  0310' 0800'              	movf	_capacity^(0+384),w
 13682  0311' 0080'              	movwf	i1___xxtofl@val
 13683  0312' 0800'              	movf	(_capacity+1)^(0+384),w
 13684  0313' 0081'              	movwf	i1___xxtofl@val+1
 13685  0314' 0182'              	clrf	i1___xxtofl@val+2
 13686  0315' 0183'              	clrf	i1___xxtofl@val+3
 13687  0316' 3000               	movlw	0
 13688  0317' 3180' 2000' 3180'  	fcall	i1___xxtofl
 13689  031A' 0803'              	movf	?i1___xxtofl+3,w
 13690  031B' 0020               	movlb	0	; select bank0
 13691  031C' 00A3'              	movwf	i1___flmul@a+3
 13692  031D' 0802'              	movf	?i1___xxtofl+2,w
 13693  031E' 00A2'              	movwf	i1___flmul@a+2
 13694  031F' 0801'              	movf	?i1___xxtofl+1,w
 13695  0320' 00A1'              	movwf	i1___flmul@a+1
 13696  0321' 0800'              	movf	?i1___xxtofl,w
 13697  0322' 00A0'              	movwf	i1___flmul@a
 13698  0323' 3045               	movlw	69
 13699  0324' 009F'              	movwf	i1___flmul@b+3
 13700  0325' 3080               	movlw	128
 13701  0326' 009E'              	movwf	i1___flmul@b+2
 13702  0327' 3000               	movlw	0
 13703  0328' 009D'              	movwf	i1___flmul@b+1
 13704  0329' 3000               	movlw	0
 13705  032A' 009C'              	movwf	i1___flmul@b
 13706  032B' 3180' 2000' 3180'  	fcall	i1___flmul
 13707  032E' 0020               	movlb	0	; select bank0
 13708  032F' 081F'              	movf	?i1___flmul+3,w
 13709  0330' 00BD'              	movwf	i1___fldiv@b+3
 13710  0331' 081E'              	movf	?i1___flmul+2,w
 13711  0332' 00BC'              	movwf	i1___fldiv@b+2
 13712  0333' 081D'              	movf	?i1___flmul+1,w
 13713  0334' 00BB'              	movwf	i1___fldiv@b+1
 13714  0335' 081C'              	movf	?i1___flmul,w
 13715  0336' 00BA'              	movwf	i1___fldiv@b
 13716  0337' 3046               	movlw	70
 13717  0338' 00B9'              	movwf	i1___fldiv@a+3
 13718  0339' 30C3               	movlw	195
 13719  033A' 00B8'              	movwf	i1___fldiv@a+2
 13720  033B' 3050               	movlw	80
 13721  033C' 00B7'              	movwf	i1___fldiv@a+1
 13722  033D' 3000               	movlw	0
 13723  033E' 00B6'              	movwf	i1___fldiv@a
 13724  033F' 3180' 2000' 3180'  	fcall	i1___fldiv
 13725  0342' 0020               	movlb	0	; select bank0
 13726  0343' 0839'              	movf	?i1___fldiv+3,w
 13727  0344' 0087'              	movwf	i1___fladd@a+3
 13728  0345' 0838'              	movf	?i1___fldiv+2,w
 13729  0346' 0086'              	movwf	i1___fladd@a+2
 13730  0347' 0837'              	movf	?i1___fldiv+1,w
 13731  0348' 0085'              	movwf	i1___fladd@a+1
 13732  0349' 0836'              	movf	?i1___fldiv,w
 13733  034A' 0084'              	movwf	i1___fladd@a
 13734  034B' 303F               	movlw	63
 13735  034C' 0083'              	movwf	i1___fladd@b+3
 13736  034D' 3000               	movlw	0
 13737  034E' 0082'              	movwf	i1___fladd@b+2
 13738  034F' 3000               	movlw	0
 13739  0350' 0081'              	movwf	i1___fladd@b+1
 13740  0351' 3000               	movlw	0
 13741  0352' 0080'              	movwf	i1___fladd@b
 13742  0353' 3180' 2000' 3180'  	fcall	i1___fladd
 13743  0356' 0020               	movlb	0	; select bank0
 13744  0357' 0803'              	movf	?i1___fladd+3,w
 13745  0358' 0021               	movlb	1	; select bank1
 13746  0359' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 13747  035A' 0020               	movlb	0	; select bank0
 13748  035B' 0802'              	movf	?i1___fladd+2,w
 13749  035C' 0021               	movlb	1	; select bank1
 13750  035D' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 13751  035E' 0020               	movlb	0	; select bank0
 13752  035F' 0801'              	movf	?i1___fladd+1,w
 13753  0360' 0021               	movlb	1	; select bank1
 13754  0361' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 13755  0362' 0020               	movlb	0	; select bank0
 13756  0363' 0800'              	movf	?i1___fladd,w
 13757  0364' 0021               	movlb	1	; select bank1
 13758  0365' 0080'              	movwf	i1___fltol@f1^(0+128)
 13759  0366' 3180' 2000' 3180'  	fcall	i1___fltol
 13760  0369' 0021               	movlb	1	; select bank1
 13761  036A' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 13762  036B' 0080'              	movwf	(_iref+1)^(0+128)
 13763  036C' 0800'              	movf	?i1___fltol^(0+128),w
 13764  036D' 0080'              	movwf	_iref^(0+128)
 13765                           
 13766                           ;state_machine_b.c: 241:             if(basic_configuration.version == 0x02) timeout = (
      +                          uint16_t)(((float)capacity / (float)basic_configuration.const_current_char) * 3600 * 1.1
      +                          );
 13767  036E' 3002               	movlw	2
 13768  036F' 0024               	movlb	4	; select bank4
 13769  0370' 0600'              	xorwf	_basic_configuration^(0+512),w
 13770  0371' 1D03               	btfss	3,2
 13771  0372' 2800'              	goto	i1l6397
 13772  0373' 0023               	movlb	3	; select bank3
 13773  0374' 0800'              	movf	_capacity^(0+384),w
 13774  0375' 0080'              	movwf	i1___xxtofl@val
 13775  0376' 0800'              	movf	(_capacity+1)^(0+384),w
 13776  0377' 0081'              	movwf	i1___xxtofl@val+1
 13777  0378' 0182'              	clrf	i1___xxtofl@val+2
 13778  0379' 0183'              	clrf	i1___xxtofl@val+3
 13779  037A' 3000               	movlw	0
 13780  037B' 3180' 2000' 3180'  	fcall	i1___xxtofl
 13781  037E' 0803'              	movf	?i1___xxtofl+3,w
 13782  037F' 0020               	movlb	0	; select bank0
 13783  0380' 00BD'              	movwf	i1___fldiv@b+3
 13784  0381' 0802'              	movf	?i1___xxtofl+2,w
 13785  0382' 00BC'              	movwf	i1___fldiv@b+2
 13786  0383' 0801'              	movf	?i1___xxtofl+1,w
 13787  0384' 00BB'              	movwf	i1___fldiv@b+1
 13788  0385' 0800'              	movf	?i1___xxtofl,w
 13789  0386' 00BA'              	movwf	i1___fldiv@b
 13790  0387' 0024               	movlb	4	; select bank4
 13791  0388' 0803'              	movf	(_basic_configuration^(0+512)+3),w
 13792  0389' 0080'              	movwf	i1___xxtofl@val
 13793  038A' 0803'              	movf	((_basic_configuration+1)^(0+512)+3),w
 13794  038B' 0081'              	movwf	i1___xxtofl@val+1
 13795  038C' 0182'              	clrf	i1___xxtofl@val+2
 13796  038D' 0183'              	clrf	i1___xxtofl@val+3
 13797  038E' 3000               	movlw	0
 13798  038F' 3180' 2000' 3180'  	fcall	i1___xxtofl
 13799  0392' 0803'              	movf	?i1___xxtofl+3,w
 13800  0393' 0020               	movlb	0	; select bank0
 13801  0394' 00B9'              	movwf	i1___fldiv@a+3
 13802  0395' 0802'              	movf	?i1___xxtofl+2,w
 13803  0396' 00B8'              	movwf	i1___fldiv@a+2
 13804  0397' 0801'              	movf	?i1___xxtofl+1,w
 13805  0398' 00B7'              	movwf	i1___fldiv@a+1
 13806  0399' 0800'              	movf	?i1___xxtofl,w
 13807  039A' 00B6'              	movwf	i1___fldiv@a
 13808  039B' 3180' 2000' 3180'  	fcall	i1___fldiv
 13809  039E' 0020               	movlb	0	; select bank0
 13810  039F' 0839'              	movf	?i1___fldiv+3,w
 13811  03A0' 00A3'              	movwf	i1___flmul@a+3
 13812  03A1' 0838'              	movf	?i1___fldiv+2,w
 13813  03A2' 00A2'              	movwf	i1___flmul@a+2
 13814  03A3' 0837'              	movf	?i1___fldiv+1,w
 13815  03A4' 00A1'              	movwf	i1___flmul@a+1
 13816  03A5' 0836'              	movf	?i1___fldiv,w
 13817  03A6' 00A0'              	movwf	i1___flmul@a
 13818  03A7' 3045               	movlw	69
 13819  03A8' 009F'              	movwf	i1___flmul@b+3
 13820  03A9' 3061               	movlw	97
 13821  03AA' 009E'              	movwf	i1___flmul@b+2
 13822  03AB' 3000               	movlw	0
 13823  03AC' 009D'              	movwf	i1___flmul@b+1
 13824  03AD' 3000               	movlw	0
 13825  03AE' 009C'              	movwf	i1___flmul@b
 13826  03AF' 3180' 2000' 3180'  	fcall	i1___flmul
 13827  03B2' 0020               	movlb	0	; select bank0
 13828  03B3' 081F'              	movf	?i1___flmul+3,w
 13829  03B4' 0021               	movlb	1	; select bank1
 13830  03B5' 0080'              	movwf	(i1_converter_settings$1748+3)^(0+128)
 13831  03B6' 0020               	movlb	0	; select bank0
 13832  03B7' 081E'              	movf	?i1___flmul+2,w
 13833  03B8' 0021               	movlb	1	; select bank1
 13834  03B9' 0080'              	movwf	(i1_converter_settings$1748+2)^(0+128)
 13835  03BA' 0020               	movlb	0	; select bank0
 13836  03BB' 081D'              	movf	?i1___flmul+1,w
 13837  03BC' 0021               	movlb	1	; select bank1
 13838  03BD' 0080'              	movwf	(i1_converter_settings$1748+1)^(0+128)
 13839  03BE' 0020               	movlb	0	; select bank0
 13840  03BF' 081C'              	movf	?i1___flmul,w
 13841  03C0' 0021               	movlb	1	; select bank1
 13842  03C1' 0080'              	movwf	i1_converter_settings$1748^(0+128)
 13843  03C2' 0800'              	movf	(i1_converter_settings$1748+3)^(0+128),w
 13844  03C3' 0020               	movlb	0	; select bank0
 13845  03C4' 00A3'              	movwf	i1___flmul@a+3
 13846  03C5' 0021               	movlb	1	; select bank1
 13847  03C6' 0800'              	movf	(i1_converter_settings$1748+2)^(0+128),w
 13848  03C7' 0020               	movlb	0	; select bank0
 13849  03C8' 00A2'              	movwf	i1___flmul@a+2
 13850  03C9' 0021               	movlb	1	; select bank1
 13851  03CA' 0800'              	movf	(i1_converter_settings$1748+1)^(0+128),w
 13852  03CB' 0020               	movlb	0	; select bank0
 13853  03CC' 00A1'              	movwf	i1___flmul@a+1
 13854  03CD' 0021               	movlb	1	; select bank1
 13855  03CE' 0800'              	movf	i1_converter_settings$1748^(0+128),w
 13856  03CF' 0020               	movlb	0	; select bank0
 13857  03D0' 00A0'              	movwf	i1___flmul@a
 13858  03D1' 303F               	movlw	63
 13859  03D2' 009F'              	movwf	i1___flmul@b+3
 13860  03D3' 308C               	movlw	140
 13861  03D4' 009E'              	movwf	i1___flmul@b+2
 13862  03D5' 30CC               	movlw	204
 13863  03D6' 009D'              	movwf	i1___flmul@b+1
 13864  03D7' 30CD               	movlw	205
 13865  03D8' 009C'              	movwf	i1___flmul@b
 13866  03D9' 3180' 2000' 3180'  	fcall	i1___flmul
 13867  03DC' 0020               	movlb	0	; select bank0
 13868  03DD' 081F'              	movf	?i1___flmul+3,w
 13869  03DE' 0021               	movlb	1	; select bank1
 13870  03DF' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 13871  03E0' 0020               	movlb	0	; select bank0
 13872  03E1' 081E'              	movf	?i1___flmul+2,w
 13873  03E2' 0021               	movlb	1	; select bank1
 13874  03E3' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 13875  03E4' 0020               	movlb	0	; select bank0
 13876  03E5' 081D'              	movf	?i1___flmul+1,w
 13877  03E6' 0021               	movlb	1	; select bank1
 13878  03E7' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 13879  03E8' 0020               	movlb	0	; select bank0
 13880  03E9' 081C'              	movf	?i1___flmul,w
 13881  03EA' 0021               	movlb	1	; select bank1
 13882  03EB' 0080'              	movwf	i1___fltol@f1^(0+128)
 13883  03EC' 3180' 2000' 3180'  	fcall	i1___fltol
 13884  03EF' 0021               	movlb	1	; select bank1
 13885  03F0' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 13886  03F1' 0023               	movlb	3	; select bank3
 13887  03F2' 0080'              	movwf	(_timeout+1)^(0+384)
 13888  03F3' 0021               	movlb	1	; select bank1
 13889  03F4' 0800'              	movf	?i1___fltol^(0+128),w
 13890  03F5' 0023               	movlb	3	; select bank3
 13891  03F6' 0080'              	movwf	_timeout^(0+384)
 13892  03F7'                    i1l6397:
 13893                           
 13894                           ;state_machine_b.c: 242:             { RC3 = 0; RC4 = 0; _delay((unsigned long)((100)*(3
      +                          2000000/4000.0))); RC4 = 1; _delay((unsigned long)((100)*(32000000/4000.0))); RC4 = 0; _
      +                          delay((unsigned long)((100)*(32000000/4000.0))); RC5 = 1; _delay((unsigned long)((100)*(
      +                          32000000/4000.0))); kp = CC_char_kp; ki = CC_char_ki; kd = (float) (CC_char_disc_kd); pi
      +                          di = 0.0;};
 13895  03F7' 0020               	movlb	0	; select bank0
 13896  03F8' 118E               	bcf	14,3	;volatile
 13897  03F9' 120E               	bcf	14,4	;volatile
 13898  03FA' 3005               	movlw	5
 13899  03FB' 0021               	movlb	1	; select bank1
 13900  03FC' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13901  03FD' 300F               	movlw	15
 13902  03FE' 0080'              	movwf	??i1_converter_settings^(0+128)
 13903  03FF' 30F1               	movlw	241
 13904  0400'                    u808_27:
 13905  0400' 0B89               	decfsz	9,f
 13906  0401' 2800'              	goto	u808_27
 13907  0402' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13908  0403' 2800'              	goto	u808_27
 13909  0404' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13910  0405' 2800'              	goto	u808_27
 13911  0406' 0020               	movlb	0	; select bank0
 13912  0407' 160E               	bsf	14,4	;volatile
 13913  0408' 3005               	movlw	5
 13914  0409' 0021               	movlb	1	; select bank1
 13915  040A' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13916  040B' 300F               	movlw	15
 13917  040C' 0080'              	movwf	??i1_converter_settings^(0+128)
 13918  040D' 30F1               	movlw	241
 13919  040E'                    u809_27:
 13920  040E' 0B89               	decfsz	9,f
 13921  040F' 2800'              	goto	u809_27
 13922  0410' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13923  0411' 2800'              	goto	u809_27
 13924  0412' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13925  0413' 2800'              	goto	u809_27
 13926  0414' 0020               	movlb	0	; select bank0
 13927  0415' 120E               	bcf	14,4	;volatile
 13928  0416' 3005               	movlw	5
 13929  0417' 0021               	movlb	1	; select bank1
 13930  0418' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13931  0419' 300F               	movlw	15
 13932  041A' 0080'              	movwf	??i1_converter_settings^(0+128)
 13933  041B' 30F1               	movlw	241
 13934  041C'                    u810_27:
 13935  041C' 0B89               	decfsz	9,f
 13936  041D' 2800'              	goto	u810_27
 13937  041E' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13938  041F' 2800'              	goto	u810_27
 13939  0420' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13940  0421' 2800'              	goto	u810_27
 13941  0422' 0020               	movlb	0	; select bank0
 13942  0423' 168E               	bsf	14,5	;volatile
 13943  0424' 3005               	movlw	5
 13944  0425' 0021               	movlb	1	; select bank1
 13945  0426' 0081'              	movwf	(??i1_converter_settings^(0+128)+1)
 13946  0427' 300F               	movlw	15
 13947  0428' 0080'              	movwf	??i1_converter_settings^(0+128)
 13948  0429' 30F1               	movlw	241
 13949  042A'                    u811_27:
 13950  042A' 0B89               	decfsz	9,f
 13951  042B' 2800'              	goto	u811_27
 13952  042C' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 13953  042D' 2800'              	goto	u811_27
 13954  042E' 0B81'              	decfsz	(??i1_converter_settings^(0+128)+1),f
 13955  042F' 2800'              	goto	u811_27
 13956  0430'                    L19:
 13957  0430' 0023               	movlb	3	; select bank3
 13958  0431' 0800'              	movf	(_CC_char_kp+3)^(0+384),w
 13959  0432' 0024               	movlb	4	; select bank4
 13960  0433' 0080'              	movwf	(_kp+3)^(0+512)
 13961  0434' 0023               	movlb	3	; select bank3
 13962  0435' 0800'              	movf	(_CC_char_kp+2)^(0+384),w
 13963  0436' 0024               	movlb	4	; select bank4
 13964  0437' 0080'              	movwf	(_kp+2)^(0+512)
 13965  0438' 0023               	movlb	3	; select bank3
 13966  0439' 0800'              	movf	(_CC_char_kp+1)^(0+384),w
 13967  043A' 0024               	movlb	4	; select bank4
 13968  043B' 0080'              	movwf	(_kp+1)^(0+512)
 13969  043C' 0023               	movlb	3	; select bank3
 13970  043D' 0800'              	movf	_CC_char_kp^(0+384),w
 13971  043E' 0024               	movlb	4	; select bank4
 13972  043F' 0080'              	movwf	_kp^(0+512)
 13973  0440' 0023               	movlb	3	; select bank3
 13974  0441' 0800'              	movf	(_CC_char_ki+3)^(0+384),w
 13975  0442' 0024               	movlb	4	; select bank4
 13976  0443' 0080'              	movwf	(_ki+3)^(0+512)
 13977  0444' 0023               	movlb	3	; select bank3
 13978  0445' 0800'              	movf	(_CC_char_ki+2)^(0+384),w
 13979  0446' 0024               	movlb	4	; select bank4
 13980  0447' 0080'              	movwf	(_ki+2)^(0+512)
 13981  0448' 0023               	movlb	3	; select bank3
 13982  0449' 0800'              	movf	(_CC_char_ki+1)^(0+384),w
 13983  044A' 0024               	movlb	4	; select bank4
 13984  044B' 0080'              	movwf	(_ki+1)^(0+512)
 13985  044C' 0023               	movlb	3	; select bank3
 13986  044D' 0800'              	movf	_CC_char_ki^(0+384),w
 13987  044E'                    L17:
 13988  044E' 0024               	movlb	4	; select bank4
 13989  044F' 0080'              	movwf	_ki^(0+512)
 13990  0450' 0023               	movlb	3	; select bank3
 13991  0451' 0800'              	movf	_CC_char_disc_kd^(0+384),w
 13992  0452' 0021               	movlb	1	; select bank1
 13993  0453' 0080'              	movwf	??i1_converter_settings^(0+128)
 13994  0454' 0181'              	clrf	(??i1_converter_settings^(0+128)+1)
 13995  0455' 0182'              	clrf	(??i1_converter_settings^(0+128)+2)
 13996  0456' 0183'              	clrf	(??i1_converter_settings^(0+128)+3)
 13997  0457' 0800'              	movf	(??i1_converter_settings+3)^(0+128),w
 13998  0458' 0083'              	movwf	i1___xxtofl@val+3
 13999  0459' 0800'              	movf	(??i1_converter_settings+2)^(0+128),w
 14000  045A' 0082'              	movwf	i1___xxtofl@val+2
 14001  045B' 0800'              	movf	(??i1_converter_settings+1)^(0+128),w
 14002  045C' 0081'              	movwf	i1___xxtofl@val+1
 14003  045D' 0800'              	movf	??i1_converter_settings^(0+128),w
 14004  045E' 0080'              	movwf	i1___xxtofl@val
 14005  045F' 3000               	movlw	0
 14006  0460' 3180' 2000' 3180'  	fcall	i1___xxtofl
 14007  0463' 0803'              	movf	?i1___xxtofl+3,w
 14008  0464' 0024               	movlb	4	; select bank4
 14009  0465' 0080'              	movwf	(_kd+3)^(0+512)
 14010  0466' 0802'              	movf	?i1___xxtofl+2,w
 14011  0467' 0080'              	movwf	(_kd+2)^(0+512)
 14012  0468' 0801'              	movf	?i1___xxtofl+1,w
 14013  0469' 0080'              	movwf	(_kd+1)^(0+512)
 14014  046A' 0800'              	movf	?i1___xxtofl,w
 14015  046B' 0080'              	movwf	_kd^(0+512)
 14016  046C' 3000               	movlw	0
 14017  046D' 0080'              	movwf	(_pidi+3)^(0+512)
 14018  046E' 3000               	movlw	0
 14019  046F' 0080'              	movwf	(_pidi+2)^(0+512)
 14020  0470' 3000               	movlw	0
 14021  0471' 0080'              	movwf	(_pidi+1)^(0+512)
 14022  0472' 3000               	movlw	0
 14023  0473' 0080'              	movwf	_pidi^(0+512)
 14024                           
 14025                           ;state_machine_b.c: 243:             break;
 14026  0474' 2800'              	goto	i1l6425
 14027  0475'                    i1l6423:
 14028  0475' 0023               	movlb	3	; select bank3
 14029  0476' 0800'              	movf	_state^(0+384),w
 14030  0477' 0021               	movlb	1	; select bank1
 14031  0478' 0080'              	movwf	??i1_converter_settings^(0+128)
 14032  0479' 0181'              	clrf	(??i1_converter_settings^(0+128)+1)
 14033                           
 14034                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14035                           ; Switch size 1, requested type "simple"
 14036                           ; Number of cases is 1, Range of values is 0 to 0
 14037                           ; switch strategies available:
 14038                           ; Name         Instructions Cycles
 14039                           ; simple_byte            4     3 (average)
 14040                           ; direct_byte            8     6 (fixed)
 14041                           ; jumptable            260     6 (fixed)
 14042                           ;	Chosen strategy is simple_byte
 14043  047A' 0800'              	movf	(??i1_converter_settings+1)^(0+128),w
 14044  047B' 3A00               	xorlw	0	; case 0
 14045  047C' 1903               	skipnz
 14046  047D' 2800'              	goto	i1l7769
 14047  047E' 2800'              	goto	i1l6425
 14048  047F'                    i1l7769:
 14049                           
 14050                           ; Switch size 1, requested type "simple"
 14051                           ; Number of cases is 5, Range of values is 3 to 11
 14052                           ; switch strategies available:
 14053                           ; Name         Instructions Cycles
 14054                           ; simple_byte           16     9 (average)
 14055                           ; direct_byte           27     9 (fixed)
 14056                           ; jumptable            263     9 (fixed)
 14057                           ;	Chosen strategy is simple_byte
 14058  047F' 0800'              	movf	??i1_converter_settings^(0+128),w
 14059  0480' 3A03               	xorlw	3	; case 3
 14060  0481' 1903               	skipnz
 14061  0482' 2800'              	goto	i1l6287
 14062  0483' 3A06               	xorlw	6	; case 5
 14063  0484' 1903               	skipnz
 14064  0485' 2800'              	goto	i1l6391
 14065  0486' 3A02               	xorlw	2	; case 7
 14066  0487' 1903               	skipnz
 14067  0488' 2800'              	goto	i1l6317
 14068  0489' 3A0E               	xorlw	14	; case 9
 14069  048A' 1903               	skipnz
 14070  048B' 2800'              	goto	i1l6361
 14071  048C' 3A02               	xorlw	2	; case 11
 14072  048D' 1903               	skipnz
 14073  048E' 2800'              	goto	i1l6333
 14074  048F' 2800'              	goto	i1l6425
 14075  0490'                    i1l6425:
 14076                           
 14077                           ;state_machine_b.c: 245:     _delay((unsigned long)((10)*(32000000/4000.0)));
 14078  0490' 3068               	movlw	104
 14079  0491' 0021               	movlb	1	; select bank1
 14080  0492' 0080'              	movwf	??i1_converter_settings^(0+128)
 14081  0493' 30E4               	movlw	228
 14082  0494'                    u812_27:
 14083  0494' 0B89               	decfsz	9,f
 14084  0495' 2800'              	goto	u812_27
 14085  0496' 0B80'              	decfsz	??i1_converter_settings^(0+128),f
 14086  0497' 2800'              	goto	u812_27
 14087  0498' 0000               	nop
 14088                           
 14089                           ;state_machine_b.c: 246:     second = 0;
 14090  0499' 0023               	movlb	3	; select bank3
 14091  049A' 0180'              	clrf	_second^(0+384)
 14092  049B' 0180'              	clrf	(_second+1)^(0+384)
 14093                           
 14094                           ;state_machine_b.c: 247:     conv = 1;
 14095  049C' 0021               	movlb	1	; select bank1
 14096  049D' 0180'              	clrf	_conv^(0+128)
 14097  049E' 0A80'              	incf	_conv^(0+128),f
 14098  049F' 0008               	return
 14099  04A0'                    __end_ofi1_converter_settings:
 14100                           
 14101                           	psect	text39
 14102  0000'                    __ptext39:	
 14103 ;; *************** function i1_set_DC *****************
 14104 ;; Defined at:
 14105 ;;		line 290 in file "charger_discharger.c"
 14106 ;; Parameters:    Size  Location     Type
 14107 ;;		None
 14108 ;; Auto vars:     Size  Location     Type
 14109 ;;  dc              2   10[BANK1 ] unsigned short 
 14110 ;; Return value:  Size  Location     Type
 14111 ;;                  1    wreg      void 
 14112 ;; Registers used:
 14113 ;;		wreg, status,2, status,0, pclath, cstack
 14114 ;; Tracked objects:
 14115 ;;		On entry : 0/0
 14116 ;;		On exit  : 0/0
 14117 ;;		Unchanged: 0/0
 14118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14120 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14122 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14123 ;;Total ram usage:        2 bytes
 14124 ;; Hardware stack levels used: 1
 14125 ;; Hardware stack levels required when called: 1
 14126 ;; This function calls:
 14127 ;;		i1___fltol
 14128 ;; This function is called by:
 14129 ;;		_control_loop
 14130 ;;		i1_converter_settings
 14131 ;; This function uses a non-reentrant model
 14132 ;;
 14133                           
 14134  0000'                    i1_set_DC:	
 14135                           ;psect for function i1_set_DC
 14136                           
 14137                           
 14138                           ;charger_discharger.c: 293:     uint16_t dc = (uint16_t) pidt;
 14139                           
 14140                           ;incstack = 0
 14141                           ; Regs used in i1_set_DC: [wreg+status,2+status,0+pclath+cstack]
 14142  0000' 0023               	movlb	3	; select bank3
 14143  0001' 0800'              	movf	(_pidt+3)^(0+384),w
 14144  0002' 0021               	movlb	1	; select bank1
 14145  0003' 0080'              	movwf	(i1___fltol@f1+3)^(0+128)
 14146  0004' 0023               	movlb	3	; select bank3
 14147  0005' 0800'              	movf	(_pidt+2)^(0+384),w
 14148  0006' 0021               	movlb	1	; select bank1
 14149  0007' 0080'              	movwf	(i1___fltol@f1+2)^(0+128)
 14150  0008' 0023               	movlb	3	; select bank3
 14151  0009' 0800'              	movf	(_pidt+1)^(0+384),w
 14152  000A' 0021               	movlb	1	; select bank1
 14153  000B' 0080'              	movwf	(i1___fltol@f1+1)^(0+128)
 14154  000C' 0023               	movlb	3	; select bank3
 14155  000D' 0800'              	movf	_pidt^(0+384),w
 14156  000E' 0021               	movlb	1	; select bank1
 14157  000F' 0080'              	movwf	i1___fltol@f1^(0+128)
 14158  0010' 3180' 2000'        	fcall	i1___fltol
 14159  0012' 0021               	movlb	1	; select bank1
 14160  0013' 0800'              	movf	(?i1___fltol+1)^(0+128),w
 14161  0014' 0080'              	movwf	(i1set_DC@dc+1)^(0+128)
 14162  0015' 0800'              	movf	?i1___fltol^(0+128),w
 14163  0016' 0080'              	movwf	i1set_DC@dc^(0+128)
 14164                           
 14165                           ;charger_discharger.c: 295:     PSMC1DCL = dc & 0x00FF;
 14166  0017' 0800'              	movf	i1set_DC@dc^(0+128),w
 14167  0018' 0030               	movlb	16	; select bank16
 14168  0019' 00A3               	movwf	35	;volatile
 14169                           
 14170                           ;charger_discharger.c: 296:     PSMC1DCH = (dc >> 8) & 0x01;
 14171  001A' 0021               	movlb	1	; select bank1
 14172  001B' 0800'              	movf	(i1set_DC@dc+1)^(0+128),w
 14173  001C' 3901               	andlw	1
 14174  001D' 0030               	movlb	16	; select bank16
 14175  001E' 00A4               	movwf	36	;volatile
 14176                           
 14177                           ;charger_discharger.c: 297:     PSMC1CONbits.PSMC1LD = 1;
 14178  001F' 1711               	bsf	17,6	;volatile
 14179  0020' 0008               	return
 14180  0021'                    __end_ofi1_set_DC:
 14181                           
 14182                           	psect	text40
 14183  0000'                    __ptext40:	
 14184 ;; *************** function i1___fltol *****************
 14185 ;; Defined at:
 14186 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
 14187 ;; Parameters:    Size  Location     Type
 14188 ;;  f1              4    0[BANK1 ] void 
 14189 ;; Auto vars:     Size  Location     Type
 14190 ;;  exp1            1    9[BANK1 ] unsigned char 
 14191 ;;  sign1           1    8[BANK1 ] unsigned char 
 14192 ;; Return value:  Size  Location     Type
 14193 ;;                  4    0[BANK1 ] long 
 14194 ;; Registers used:
 14195 ;;		wreg, status,2, status,0
 14196 ;; Tracked objects:
 14197 ;;		On entry : 0/0
 14198 ;;		On exit  : 0/0
 14199 ;;		Unchanged: 0/0
 14200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14201 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14202 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14203 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14204 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 14205 ;;Total ram usage:       10 bytes
 14206 ;; Hardware stack levels used: 1
 14207 ;; This function calls:
 14208 ;;		Nothing
 14209 ;; This function is called by:
 14210 ;;		_command_interpreter
 14211 ;;		i1_set_DC
 14212 ;;		i1_converter_settings
 14213 ;; This function uses a non-reentrant model
 14214 ;;
 14215                           
 14216  0000'                    i1___fltol:	
 14217                           ;psect for function i1___fltol
 14218                           
 14219                           
 14220                           ;incstack = 0
 14221                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
 14222  0000' 1003               	clrc
 14223  0001' 0021               	movlb	1	; select bank1
 14224  0002' 0D00'              	rlf	(i1___fltol@f1+2)^(0+128),w
 14225  0003' 0D00'              	rlf	(i1___fltol@f1+3)^(0+128),w
 14226  0004' 0080'              	movwf	i1___fltol@exp1^(0+128)
 14227  0005' 0800'              	movf	i1___fltol@exp1^(0+128),w
 14228  0006' 1D03               	btfss	3,2
 14229  0007' 2800'              	goto	i1l5197
 14230  0008'                    i1l5193:
 14231  0008' 3000               	movlw	0
 14232  0009' 0080'              	movwf	(?i1___fltol+3)^(0+128)
 14233  000A' 3000               	movlw	0
 14234  000B' 0080'              	movwf	(?i1___fltol+2)^(0+128)
 14235  000C' 3000               	movlw	0
 14236  000D' 0080'              	movwf	(?i1___fltol+1)^(0+128)
 14237  000E' 3000               	movlw	0
 14238  000F' 0080'              	movwf	?i1___fltol^(0+128)
 14239  0010' 0008               	return
 14240  0011'                    i1l5197:
 14241  0011' 0800'              	movf	i1___fltol@f1^(0+128),w
 14242  0012' 0080'              	movwf	??i1___fltol^(0+128)
 14243  0013' 0800'              	movf	(i1___fltol@f1+1)^(0+128),w
 14244  0014' 0081'              	movwf	(??i1___fltol^(0+128)+1)
 14245  0015' 0800'              	movf	(i1___fltol@f1+2)^(0+128),w
 14246  0016' 0082'              	movwf	(??i1___fltol^(0+128)+2)
 14247  0017' 0800'              	movf	(i1___fltol@f1+3)^(0+128),w
 14248  0018' 0083'              	movwf	(??i1___fltol^(0+128)+3)
 14249  0019' 301F               	movlw	31
 14250  001A'                    u497_25:
 14251  001A' 3683'              	lsrf	(??i1___fltol^(0+128)+3),f
 14252  001B' 0C82'              	rrf	(??i1___fltol^(0+128)+2),f
 14253  001C' 0C81'              	rrf	(??i1___fltol^(0+128)+1),f
 14254  001D' 0C80'              	rrf	??i1___fltol^(0+128),f
 14255  001E' 0B89               	decfsz	9,f
 14256  001F' 2800'              	goto	u497_25
 14257  0020' 0800'              	movf	??i1___fltol^(0+128),w
 14258  0021' 0080'              	movwf	i1___fltol@sign1^(0+128)
 14259  0022' 1782'              	bsf	(i1___fltol@f1^(0+128)+2),7
 14260  0023' 30FF               	movlw	255
 14261  0024' 0580'              	andwf	i1___fltol@f1^(0+128),f
 14262  0025' 30FF               	movlw	255
 14263  0026' 0580'              	andwf	(i1___fltol@f1+1)^(0+128),f
 14264  0027' 30FF               	movlw	255
 14265  0028' 0580'              	andwf	(i1___fltol@f1+2)^(0+128),f
 14266  0029' 3000               	movlw	0
 14267  002A' 0580'              	andwf	(i1___fltol@f1+3)^(0+128),f
 14268  002B' 3096               	movlw	150
 14269  002C' 0280'              	subwf	i1___fltol@exp1^(0+128),f
 14270  002D' 1F80'              	btfss	i1___fltol@exp1^(0+128),7
 14271  002E' 2800'              	goto	i1l5215
 14272  002F' 0800'              	movf	i1___fltol@exp1^(0+128),w
 14273  0030' 3A80               	xorlw	128
 14274  0031' 3E97               	addlw	151
 14275  0032' 1C03               	btfss	3,0
 14276  0033' 2800'              	goto	i1l5193
 14277  0034'                    i1l5213:
 14278  0034' 3001               	movlw	1
 14279  0035'                    u500_25:
 14280  0035' 3680'              	lsrf	(i1___fltol@f1+3)^(0+128),f
 14281  0036' 0C80'              	rrf	(i1___fltol@f1+2)^(0+128),f
 14282  0037' 0C80'              	rrf	(i1___fltol@f1+1)^(0+128),f
 14283  0038' 0C80'              	rrf	i1___fltol@f1^(0+128),f
 14284  0039' 0B89               	decfsz	9,f
 14285  003A' 2800'              	goto	u500_25
 14286  003B' 3001               	movlw	1
 14287  003C' 0080'              	movwf	??i1___fltol^(0+128)
 14288  003D' 0800'              	movf	??i1___fltol^(0+128),w
 14289  003E' 0780'              	addwf	i1___fltol@exp1^(0+128),f
 14290  003F' 1903               	btfsc	3,2
 14291  0040' 2800'              	goto	i1l5223
 14292  0041' 2800'              	goto	i1l5213
 14293  0042'                    i1l5215:
 14294  0042' 3020               	movlw	32
 14295  0043' 0200'              	subwf	i1___fltol@exp1^(0+128),w
 14296  0044' 1803               	btfsc	3,0
 14297  0045' 2800'              	goto	i1l5193
 14298  0046'                    i1l1247:
 14299  0046' 0800'              	movf	i1___fltol@exp1^(0+128),w
 14300  0047' 1903               	btfsc	3,2
 14301  0048' 2800'              	goto	i1l5223
 14302  0049' 3001               	movlw	1
 14303  004A'                    u503_25:
 14304  004A' 3580'              	lslf	i1___fltol@f1^(0+128),f
 14305  004B' 0D80'              	rlf	(i1___fltol@f1+1)^(0+128),f
 14306  004C' 0D80'              	rlf	(i1___fltol@f1+2)^(0+128),f
 14307  004D' 0D80'              	rlf	(i1___fltol@f1+3)^(0+128),f
 14308  004E' 0B89               	decfsz	9,f
 14309  004F' 2800'              	goto	u503_25
 14310  0050' 3001               	movlw	1
 14311  0051' 0280'              	subwf	i1___fltol@exp1^(0+128),f
 14312  0052' 2800'              	goto	i1l1247
 14313  0053'                    i1l5223:
 14314  0053' 0800'              	movf	i1___fltol@sign1^(0+128),w
 14315  0054' 1903               	btfsc	3,2
 14316  0055' 0008               	return
 14317  0056' 0980'              	comf	i1___fltol@f1^(0+128),f
 14318  0057' 0980'              	comf	(i1___fltol@f1+1)^(0+128),f
 14319  0058' 0980'              	comf	(i1___fltol@f1+2)^(0+128),f
 14320  0059' 0980'              	comf	(i1___fltol@f1+3)^(0+128),f
 14321  005A' 0A80'              	incf	i1___fltol@f1^(0+128),f
 14322  005B' 1903               	skipnz
 14323  005C' 0A80'              	incf	(i1___fltol@f1+1)^(0+128),f
 14324  005D' 1903               	skipnz
 14325  005E' 0A80'              	incf	(i1___fltol@f1+2)^(0+128),f
 14326  005F' 1903               	skipnz
 14327  0060' 0A80'              	incf	(i1___fltol@f1+3)^(0+128),f
 14328  0061' 0008               	return
 14329  0062'                    __end_ofi1___fltol:
 14330                           
 14331                           	psect	text41
 14332  0000'                    __ptext41:	
 14333 ;; *************** function i1___xxtofl *****************
 14334 ;; Defined at:
 14335 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 14336 ;; Parameters:    Size  Location     Type
 14337 ;;  sign            1    wreg     unsigned char 
 14338 ;;  val             4    0[COMMON] long 
 14339 ;; Auto vars:     Size  Location     Type
 14340 ;;  sign            1    8[COMMON] unsigned char 
 14341 ;;  arg             4   10[COMMON] unsigned long 
 14342 ;;  exp             1    9[COMMON] unsigned char 
 14343 ;; Return value:  Size  Location     Type
 14344 ;;                  4    0[COMMON] unsigned char 
 14345 ;; Registers used:
 14346 ;;		wreg, status,2, status,0
 14347 ;; Tracked objects:
 14348 ;;		On entry : 0/0
 14349 ;;		On exit  : 0/0
 14350 ;;		Unchanged: 0/0
 14351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14352 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14353 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14354 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14355 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14356 ;;Total ram usage:       14 bytes
 14357 ;; Hardware stack levels used: 1
 14358 ;; This function calls:
 14359 ;;		Nothing
 14360 ;; This function is called by:
 14361 ;;		_command_interpreter
 14362 ;;		_control_loop
 14363 ;;		i1_converter_settings
 14364 ;; This function uses a non-reentrant model
 14365 ;;
 14366                           
 14367  0000'                    i1___xxtofl:	
 14368                           ;psect for function i1___xxtofl
 14369                           
 14370                           
 14371                           ;incstack = 0
 14372                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 14373                           ;i1___xxtofl@sign stored from wreg
 14374  0000' 0088'              	movwf	i1___xxtofl@sign
 14375  0001' 0808'              	movf	i1___xxtofl@sign,w
 14376  0002' 1D03               	btfss	3,2
 14377  0003' 1F83'              	btfss	i1___xxtofl@val+3,7
 14378  0004' 2800'              	goto	i1l5883
 14379  0005' 0900'              	comf	i1___xxtofl@val,w
 14380  0006' 008A'              	movwf	i1___xxtofl@arg
 14381  0007' 0901'              	comf	i1___xxtofl@val+1,w
 14382  0008' 008B'              	movwf	i1___xxtofl@arg+1
 14383  0009' 0902'              	comf	i1___xxtofl@val+2,w
 14384  000A' 008C'              	movwf	i1___xxtofl@arg+2
 14385  000B' 0903'              	comf	i1___xxtofl@val+3,w
 14386  000C' 008D'              	movwf	i1___xxtofl@arg+3
 14387  000D' 0A8A'              	incf	i1___xxtofl@arg,f
 14388  000E' 1903               	skipnz
 14389  000F' 0A8B'              	incf	i1___xxtofl@arg+1,f
 14390  0010' 1903               	skipnz
 14391  0011' 0A8C'              	incf	i1___xxtofl@arg+2,f
 14392  0012' 1903               	skipnz
 14393  0013' 0A8D'              	incf	i1___xxtofl@arg+3,f
 14394  0014' 2800'              	goto	i1l1487
 14395  0015'                    i1l5883:
 14396  0015' 0803'              	movf	i1___xxtofl@val+3,w
 14397  0016' 008D'              	movwf	i1___xxtofl@arg+3
 14398  0017' 0802'              	movf	i1___xxtofl@val+2,w
 14399  0018' 008C'              	movwf	i1___xxtofl@arg+2
 14400  0019' 0801'              	movf	i1___xxtofl@val+1,w
 14401  001A' 008B'              	movwf	i1___xxtofl@arg+1
 14402  001B' 0800'              	movf	i1___xxtofl@val,w
 14403  001C' 008A'              	movwf	i1___xxtofl@arg
 14404  001D'                    i1l1487:
 14405  001D' 0803'              	movf	i1___xxtofl@val+3,w
 14406  001E' 0402'              	iorwf	i1___xxtofl@val+2,w
 14407  001F' 0401'              	iorwf	i1___xxtofl@val+1,w
 14408  0020' 0400'              	iorwf	i1___xxtofl@val,w
 14409  0021' 1D03               	skipz
 14410  0022' 2800'              	goto	i1l5889
 14411  0023' 3000               	movlw	0
 14412  0024' 0083'              	movwf	?i1___xxtofl+3
 14413  0025' 3000               	movlw	0
 14414  0026' 0082'              	movwf	?i1___xxtofl+2
 14415  0027' 3000               	movlw	0
 14416  0028' 0081'              	movwf	?i1___xxtofl+1
 14417  0029' 3000               	movlw	0
 14418  002A' 0080'              	movwf	?i1___xxtofl
 14419  002B' 0008               	return
 14420  002C'                    i1l5889:
 14421  002C' 3096               	movlw	150
 14422  002D' 0089'              	movwf	i1___xxtofl@exp
 14423  002E'                    i1l5893:
 14424  002E' 30FE               	movlw	254
 14425  002F' 050D'              	andwf	i1___xxtofl@arg+3,w
 14426  0030' 1903               	btfsc	3,2
 14427  0031' 2800'              	goto	i1l1493
 14428  0032' 3001               	movlw	1
 14429  0033' 0084'              	movwf	??i1___xxtofl
 14430  0034' 0804'              	movf	??i1___xxtofl,w
 14431  0035' 0789'              	addwf	i1___xxtofl@exp,f
 14432  0036' 3001               	movlw	1
 14433  0037'                    u633_25:
 14434  0037' 368D'              	lsrf	i1___xxtofl@arg+3,f
 14435  0038' 0C8C'              	rrf	i1___xxtofl@arg+2,f
 14436  0039' 0C8B'              	rrf	i1___xxtofl@arg+1,f
 14437  003A' 0C8A'              	rrf	i1___xxtofl@arg,f
 14438  003B' 0B89               	decfsz	9,f
 14439  003C' 2800'              	goto	u633_25
 14440  003D' 2800'              	goto	i1l5893
 14441  003E'                    i1l5895:
 14442  003E' 3001               	movlw	1
 14443  003F' 0084'              	movwf	??i1___xxtofl
 14444  0040' 0804'              	movf	??i1___xxtofl,w
 14445  0041' 0789'              	addwf	i1___xxtofl@exp,f
 14446  0042' 3001               	movlw	1
 14447  0043' 078A'              	addwf	i1___xxtofl@arg,f
 14448  0044' 3000               	movlw	0
 14449  0045' 3D8B'              	addwfc	i1___xxtofl@arg+1,f
 14450  0046' 3000               	movlw	0
 14451  0047' 3D8C'              	addwfc	i1___xxtofl@arg+2,f
 14452  0048' 3000               	movlw	0
 14453  0049' 3D8D'              	addwfc	i1___xxtofl@arg+3,f
 14454  004A' 3001               	movlw	1
 14455  004B'                    u635_25:
 14456  004B' 368D'              	lsrf	i1___xxtofl@arg+3,f
 14457  004C' 0C8C'              	rrf	i1___xxtofl@arg+2,f
 14458  004D' 0C8B'              	rrf	i1___xxtofl@arg+1,f
 14459  004E' 0C8A'              	rrf	i1___xxtofl@arg,f
 14460  004F' 0B89               	decfsz	9,f
 14461  0050' 2800'              	goto	u635_25
 14462  0051'                    i1l1493:
 14463  0051' 30FF               	movlw	255
 14464  0052' 050D'              	andwf	i1___xxtofl@arg+3,w
 14465  0053' 1903               	btfsc	3,2
 14466  0054' 2800'              	goto	i1l5903
 14467  0055' 2800'              	goto	i1l5895
 14468  0056'                    i1l5905:
 14469  0056' 3002               	movlw	2
 14470  0057' 0209'              	subwf	i1___xxtofl@exp,w
 14471  0058' 1C03               	btfss	3,0
 14472  0059' 2800'              	goto	i1l1500
 14473  005A' 3001               	movlw	1
 14474  005B' 0289'              	subwf	i1___xxtofl@exp,f
 14475  005C' 3001               	movlw	1
 14476  005D'                    u637_25:
 14477  005D' 358A'              	lslf	i1___xxtofl@arg,f
 14478  005E' 0D8B'              	rlf	i1___xxtofl@arg+1,f
 14479  005F' 0D8C'              	rlf	i1___xxtofl@arg+2,f
 14480  0060' 0D8D'              	rlf	i1___xxtofl@arg+3,f
 14481  0061' 0B89               	decfsz	9,f
 14482  0062' 2800'              	goto	u637_25
 14483  0063'                    i1l5903:
 14484  0063' 1F8C'              	btfss	i1___xxtofl@arg+2,7
 14485  0064' 2800'              	goto	i1l5905
 14486  0065'                    i1l1500:
 14487  0065' 1809'              	btfsc	i1___xxtofl@exp,0
 14488  0066' 2800'              	goto	i1l1501
 14489  0067' 30FF               	movlw	255
 14490  0068' 058A'              	andwf	i1___xxtofl@arg,f
 14491  0069' 30FF               	movlw	255
 14492  006A' 058B'              	andwf	i1___xxtofl@arg+1,f
 14493  006B' 307F               	movlw	127
 14494  006C' 058C'              	andwf	i1___xxtofl@arg+2,f
 14495  006D' 30FF               	movlw	255
 14496  006E' 058D'              	andwf	i1___xxtofl@arg+3,f
 14497  006F'                    i1l1501:
 14498  006F' 1003               	clrc
 14499  0070' 0C89'              	rrf	i1___xxtofl@exp,f
 14500  0071' 0809'              	movf	i1___xxtofl@exp,w
 14501  0072' 0084'              	movwf	??i1___xxtofl
 14502  0073' 0185'              	clrf	??i1___xxtofl+1
 14503  0074' 0186'              	clrf	??i1___xxtofl+2
 14504  0075' 0187'              	clrf	??i1___xxtofl+3
 14505  0076' 3018               	movlw	24
 14506  0077'                    u641_25:
 14507  0077' 3584'              	lslf	??i1___xxtofl,f
 14508  0078' 0D85'              	rlf	??i1___xxtofl+1,f
 14509  0079' 0D86'              	rlf	??i1___xxtofl+2,f
 14510  007A' 0D87'              	rlf	??i1___xxtofl+3,f
 14511  007B' 0B89               	decfsz	9,f
 14512  007C' 2800'              	goto	u641_25
 14513  007D' 0804'              	movf	??i1___xxtofl,w
 14514  007E' 048A'              	iorwf	i1___xxtofl@arg,f
 14515  007F' 0805'              	movf	??i1___xxtofl+1,w
 14516  0080' 048B'              	iorwf	i1___xxtofl@arg+1,f
 14517  0081' 0806'              	movf	??i1___xxtofl+2,w
 14518  0082' 048C'              	iorwf	i1___xxtofl@arg+2,f
 14519  0083' 0807'              	movf	??i1___xxtofl+3,w
 14520  0084' 048D'              	iorwf	i1___xxtofl@arg+3,f
 14521  0085' 0808'              	movf	i1___xxtofl@sign,w
 14522  0086' 1D03               	btfss	3,2
 14523  0087' 1F83'              	btfss	i1___xxtofl@val+3,7
 14524  0088' 2800'              	goto	i1l5917
 14525  0089' 178D'              	bsf	i1___xxtofl@arg+3,7
 14526  008A'                    i1l5917:
 14527  008A' 080D'              	movf	i1___xxtofl@arg+3,w
 14528  008B' 0083'              	movwf	?i1___xxtofl+3
 14529  008C' 080C'              	movf	i1___xxtofl@arg+2,w
 14530  008D' 0082'              	movwf	?i1___xxtofl+2
 14531  008E' 080B'              	movf	i1___xxtofl@arg+1,w
 14532  008F' 0081'              	movwf	?i1___xxtofl+1
 14533  0090' 080A'              	movf	i1___xxtofl@arg,w
 14534  0091' 0080'              	movwf	?i1___xxtofl
 14535  0092' 0008               	return
 14536  0093'                    __end_ofi1___xxtofl:
 14537                           
 14538                           	psect	text42
 14539  0000'                    __ptext42:	
 14540 ;; *************** function i1___flmul *****************
 14541 ;; Defined at:
 14542 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 14543 ;; Parameters:    Size  Location     Type
 14544 ;;  b               4   28[BANK0 ] unsigned char 
 14545 ;;  a               4   32[BANK0 ] unsigned char 
 14546 ;; Auto vars:     Size  Location     Type
 14547 ;;  prod            4   48[BANK0 ] struct .
 14548 ;;  grs             4   42[BANK0 ] unsigned long 
 14549 ;;  temp            2   52[BANK0 ] struct .
 14550 ;;  bexp            1   47[BANK0 ] unsigned char 
 14551 ;;  aexp            1   46[BANK0 ] unsigned char 
 14552 ;;  sign            1   41[BANK0 ] unsigned char 
 14553 ;; Return value:  Size  Location     Type
 14554 ;;                  4   28[BANK0 ] unsigned char 
 14555 ;; Registers used:
 14556 ;;		wreg, status,2, status,0, pclath, cstack
 14557 ;; Tracked objects:
 14558 ;;		On entry : 0/0
 14559 ;;		On exit  : 0/0
 14560 ;;		Unchanged: 0/0
 14561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14562 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14563 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14564 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14565 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14566 ;;Total ram usage:       26 bytes
 14567 ;; Hardware stack levels used: 1
 14568 ;; Hardware stack levels required when called: 1
 14569 ;; This function calls:
 14570 ;;		i1__Umul8_16
 14571 ;; This function is called by:
 14572 ;;		_command_interpreter
 14573 ;;		_pid
 14574 ;;		i1_converter_settings
 14575 ;; This function uses a non-reentrant model
 14576 ;;
 14577                           
 14578  0000'                    i1___flmul:	
 14579                           ;psect for function i1___flmul
 14580                           
 14581                           
 14582                           ;incstack = 0
 14583                           ; Regs used in i1___flmul: [wreg+status,2+status,0+pclath+cstack]
 14584  0000' 0020               	movlb	0	; select bank0
 14585  0001' 081F'              	movf	i1___flmul@b+3,w
 14586  0002' 3980               	andlw	128
 14587  0003' 00A9'              	movwf	i1___flmul@sign
 14588  0004' 351F'              	lslf	i1___flmul@b+3,w
 14589  0005' 00AF'              	movwf	i1___flmul@bexp
 14590  0006' 1B9E'              	btfsc	i1___flmul@b+2,7
 14591  0007' 142F'              	bsf	i1___flmul@bexp,0
 14592  0008' 082F'              	movf	i1___flmul@bexp,w
 14593  0009' 1903               	btfsc	3,2
 14594  000A' 2800'              	goto	i1l5753
 14595  000B' 0A2F'              	incf	i1___flmul@bexp,w
 14596  000C' 1D03               	btfss	3,2
 14597  000D' 2800'              	goto	i1l5751
 14598  000E' 3000               	movlw	0
 14599  000F' 009F'              	movwf	i1___flmul@b+3
 14600  0010' 3000               	movlw	0
 14601  0011' 009E'              	movwf	i1___flmul@b+2
 14602  0012' 3000               	movlw	0
 14603  0013' 009D'              	movwf	i1___flmul@b+1
 14604  0014' 3000               	movlw	0
 14605  0015' 009C'              	movwf	i1___flmul@b
 14606  0016'                    i1l5751:
 14607  0016' 179E'              	bsf	i1___flmul@b+2,7
 14608  0017' 2800'              	goto	i1l5755
 14609  0018'                    i1l5753:
 14610  0018' 3000               	movlw	0
 14611  0019' 009F'              	movwf	i1___flmul@b+3
 14612  001A' 3000               	movlw	0
 14613  001B' 009E'              	movwf	i1___flmul@b+2
 14614  001C' 3000               	movlw	0
 14615  001D' 009D'              	movwf	i1___flmul@b+1
 14616  001E' 3000               	movlw	0
 14617  001F' 009C'              	movwf	i1___flmul@b
 14618  0020'                    i1l5755:
 14619  0020' 0823'              	movf	i1___flmul@a+3,w
 14620  0021' 3980               	andlw	128
 14621  0022' 00A4'              	movwf	??i1___flmul
 14622  0023' 0824'              	movf	??i1___flmul,w
 14623  0024' 06A9'              	xorwf	i1___flmul@sign,f
 14624  0025' 3523'              	lslf	i1___flmul@a+3,w
 14625  0026' 00AE'              	movwf	i1___flmul@aexp
 14626  0027' 1BA2'              	btfsc	i1___flmul@a+2,7
 14627  0028' 142E'              	bsf	i1___flmul@aexp,0
 14628  0029' 082E'              	movf	i1___flmul@aexp,w
 14629  002A' 1903               	btfsc	3,2
 14630  002B' 2800'              	goto	i1l5771
 14631  002C' 0A2E'              	incf	i1___flmul@aexp,w
 14632  002D' 1D03               	btfss	3,2
 14633  002E' 2800'              	goto	i1l5769
 14634  002F' 3000               	movlw	0
 14635  0030' 00A3'              	movwf	i1___flmul@a+3
 14636  0031' 3000               	movlw	0
 14637  0032' 00A2'              	movwf	i1___flmul@a+2
 14638  0033' 3000               	movlw	0
 14639  0034' 00A1'              	movwf	i1___flmul@a+1
 14640  0035' 3000               	movlw	0
 14641  0036' 00A0'              	movwf	i1___flmul@a
 14642  0037'                    i1l5769:
 14643  0037' 17A2'              	bsf	i1___flmul@a+2,7
 14644  0038' 2800'              	goto	i1l5773
 14645  0039'                    i1l5771:
 14646  0039' 3000               	movlw	0
 14647  003A' 00A3'              	movwf	i1___flmul@a+3
 14648  003B' 3000               	movlw	0
 14649  003C' 00A2'              	movwf	i1___flmul@a+2
 14650  003D' 3000               	movlw	0
 14651  003E' 00A1'              	movwf	i1___flmul@a+1
 14652  003F' 3000               	movlw	0
 14653  0040' 00A0'              	movwf	i1___flmul@a
 14654  0041'                    i1l5773:
 14655  0041' 082E'              	movf	i1___flmul@aexp,w
 14656  0042' 1D03               	btfss	3,2
 14657  0043' 082F'              	movf	i1___flmul@bexp,w
 14658  0044' 1D03               	btfss	3,2
 14659  0045' 2800'              	goto	i1l5781
 14660  0046' 3000               	movlw	0
 14661  0047' 009F'              	movwf	?i1___flmul+3
 14662  0048' 3000               	movlw	0
 14663  0049' 009E'              	movwf	?i1___flmul+2
 14664  004A' 3000               	movlw	0
 14665  004B' 009D'              	movwf	?i1___flmul+1
 14666  004C' 3000               	movlw	0
 14667  004D' 009C'              	movwf	?i1___flmul
 14668  004E' 0008               	return
 14669  004F'                    i1l5781:
 14670  004F' 081C'              	movf	i1___flmul@b,w
 14671  0050' 0080'              	movwf	i1__Umul8_16@multiplicand
 14672  0051' 0822'              	movf	i1___flmul@a+2,w
 14673  0052' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 14674  0055' 0801'              	movf	?i1__Umul8_16+1,w
 14675  0056' 0020               	movlb	0	; select bank0
 14676  0057' 00B5'              	movwf	i1___flmul@temp+1
 14677  0058' 0800'              	movf	?i1__Umul8_16,w
 14678  0059' 00B4'              	movwf	i1___flmul@temp
 14679  005A' 0834'              	movf	i1___flmul@temp,w
 14680  005B' 00A4'              	movwf	??i1___flmul
 14681  005C' 01A5'              	clrf	??i1___flmul+1
 14682  005D' 01A6'              	clrf	??i1___flmul+2
 14683  005E' 01A7'              	clrf	??i1___flmul+3
 14684  005F' 0827'              	movf	??i1___flmul+3,w
 14685  0060' 00AD'              	movwf	i1___flmul@grs+3
 14686  0061' 0826'              	movf	??i1___flmul+2,w
 14687  0062' 00AC'              	movwf	i1___flmul@grs+2
 14688  0063' 0825'              	movf	??i1___flmul+1,w
 14689  0064' 00AB'              	movwf	i1___flmul@grs+1
 14690  0065' 0824'              	movf	??i1___flmul,w
 14691  0066' 00AA'              	movwf	i1___flmul@grs
 14692  0067' 0835'              	movf	i1___flmul@temp+1,w
 14693  0068' 00A4'              	movwf	??i1___flmul
 14694  0069' 01A5'              	clrf	??i1___flmul+1
 14695  006A' 01A6'              	clrf	??i1___flmul+2
 14696  006B' 01A7'              	clrf	??i1___flmul+3
 14697  006C' 0827'              	movf	??i1___flmul+3,w
 14698  006D' 00B3'              	movwf	i1___flmul@prod+3
 14699  006E' 0826'              	movf	??i1___flmul+2,w
 14700  006F' 00B2'              	movwf	i1___flmul@prod+2
 14701  0070' 0825'              	movf	??i1___flmul+1,w
 14702  0071' 00B1'              	movwf	i1___flmul@prod+1
 14703  0072' 0824'              	movf	??i1___flmul,w
 14704  0073' 00B0'              	movwf	i1___flmul@prod
 14705  0074' 081D'              	movf	i1___flmul@b+1,w
 14706  0075' 0080'              	movwf	i1__Umul8_16@multiplicand
 14707  0076' 0821'              	movf	i1___flmul@a+1,w
 14708  0077' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 14709  007A' 0801'              	movf	?i1__Umul8_16+1,w
 14710  007B' 0020               	movlb	0	; select bank0
 14711  007C' 00B5'              	movwf	i1___flmul@temp+1
 14712  007D' 0800'              	movf	?i1__Umul8_16,w
 14713  007E' 00B4'              	movwf	i1___flmul@temp
 14714  007F' 0834'              	movf	i1___flmul@temp,w
 14715  0080' 00A4'              	movwf	??i1___flmul
 14716  0081' 01A5'              	clrf	??i1___flmul+1
 14717  0082' 01A6'              	clrf	??i1___flmul+2
 14718  0083' 01A7'              	clrf	??i1___flmul+3
 14719  0084' 0824'              	movf	??i1___flmul,w
 14720  0085' 07AA'              	addwf	i1___flmul@grs,f
 14721  0086' 0825'              	movf	??i1___flmul+1,w
 14722  0087' 3DAB'              	addwfc	i1___flmul@grs+1,f
 14723  0088' 0826'              	movf	??i1___flmul+2,w
 14724  0089' 3DAC'              	addwfc	i1___flmul@grs+2,f
 14725  008A' 0827'              	movf	??i1___flmul+3,w
 14726  008B' 3DAD'              	addwfc	i1___flmul@grs+3,f
 14727  008C' 0835'              	movf	i1___flmul@temp+1,w
 14728  008D' 00A4'              	movwf	??i1___flmul
 14729  008E' 01A5'              	clrf	??i1___flmul+1
 14730  008F' 01A6'              	clrf	??i1___flmul+2
 14731  0090' 01A7'              	clrf	??i1___flmul+3
 14732  0091' 0824'              	movf	??i1___flmul,w
 14733  0092' 07B0'              	addwf	i1___flmul@prod,f
 14734  0093' 0825'              	movf	??i1___flmul+1,w
 14735  0094' 3DB1'              	addwfc	i1___flmul@prod+1,f
 14736  0095' 0826'              	movf	??i1___flmul+2,w
 14737  0096' 3DB2'              	addwfc	i1___flmul@prod+2,f
 14738  0097' 0827'              	movf	??i1___flmul+3,w
 14739  0098' 3DB3'              	addwfc	i1___flmul@prod+3,f
 14740  0099' 081E'              	movf	i1___flmul@b+2,w
 14741  009A' 0080'              	movwf	i1__Umul8_16@multiplicand
 14742  009B' 0820'              	movf	i1___flmul@a,w
 14743  009C' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 14744  009F' 0801'              	movf	?i1__Umul8_16+1,w
 14745  00A0' 0020               	movlb	0	; select bank0
 14746  00A1' 00B5'              	movwf	i1___flmul@temp+1
 14747  00A2' 0800'              	movf	?i1__Umul8_16,w
 14748  00A3' 00B4'              	movwf	i1___flmul@temp
 14749  00A4' 0834'              	movf	i1___flmul@temp,w
 14750  00A5' 00A4'              	movwf	??i1___flmul
 14751  00A6' 01A5'              	clrf	??i1___flmul+1
 14752  00A7' 01A6'              	clrf	??i1___flmul+2
 14753  00A8' 01A7'              	clrf	??i1___flmul+3
 14754  00A9' 0824'              	movf	??i1___flmul,w
 14755  00AA' 07AA'              	addwf	i1___flmul@grs,f
 14756  00AB' 0825'              	movf	??i1___flmul+1,w
 14757  00AC' 3DAB'              	addwfc	i1___flmul@grs+1,f
 14758  00AD' 0826'              	movf	??i1___flmul+2,w
 14759  00AE' 3DAC'              	addwfc	i1___flmul@grs+2,f
 14760  00AF' 0827'              	movf	??i1___flmul+3,w
 14761  00B0' 3DAD'              	addwfc	i1___flmul@grs+3,f
 14762  00B1' 0835'              	movf	i1___flmul@temp+1,w
 14763  00B2' 00A4'              	movwf	??i1___flmul
 14764  00B3' 01A5'              	clrf	??i1___flmul+1
 14765  00B4' 01A6'              	clrf	??i1___flmul+2
 14766  00B5' 01A7'              	clrf	??i1___flmul+3
 14767  00B6' 0824'              	movf	??i1___flmul,w
 14768  00B7' 07B0'              	addwf	i1___flmul@prod,f
 14769  00B8' 0825'              	movf	??i1___flmul+1,w
 14770  00B9' 3DB1'              	addwfc	i1___flmul@prod+1,f
 14771  00BA' 0826'              	movf	??i1___flmul+2,w
 14772  00BB' 3DB2'              	addwfc	i1___flmul@prod+2,f
 14773  00BC' 0827'              	movf	??i1___flmul+3,w
 14774  00BD' 3DB3'              	addwfc	i1___flmul@prod+3,f
 14775  00BE' 3008               	movlw	8
 14776  00BF'                    u612_25:
 14777  00BF' 35AA'              	lslf	i1___flmul@grs,f
 14778  00C0' 0DAB'              	rlf	i1___flmul@grs+1,f
 14779  00C1' 0DAC'              	rlf	i1___flmul@grs+2,f
 14780  00C2' 0DAD'              	rlf	i1___flmul@grs+3,f
 14781  00C3' 0B89               	decfsz	9,f
 14782  00C4' 2800'              	goto	u612_25
 14783  00C5' 081D'              	movf	i1___flmul@b+1,w
 14784  00C6' 0080'              	movwf	i1__Umul8_16@multiplicand
 14785  00C7' 0820'              	movf	i1___flmul@a,w
 14786  00C8' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 14787  00CB' 0801'              	movf	?i1__Umul8_16+1,w
 14788  00CC' 0020               	movlb	0	; select bank0
 14789  00CD' 00B5'              	movwf	i1___flmul@temp+1
 14790  00CE' 0800'              	movf	?i1__Umul8_16,w
 14791  00CF' 00B4'              	movwf	i1___flmul@temp
 14792  00D0' 0834'              	movf	i1___flmul@temp,w
 14793  00D1' 07AA'              	addwf	i1___flmul@grs,f
 14794  00D2' 0835'              	movf	i1___flmul@temp+1,w
 14795  00D3' 3DAB'              	addwfc	i1___flmul@grs+1,f
 14796  00D4' 3000               	movlw	0
 14797  00D5' 3DAC'              	addwfc	i1___flmul@grs+2,f
 14798  00D6' 3DAD'              	addwfc	i1___flmul@grs+3,f
 14799  00D7' 081C'              	movf	i1___flmul@b,w
 14800  00D8' 0080'              	movwf	i1__Umul8_16@multiplicand
 14801  00D9' 0821'              	movf	i1___flmul@a+1,w
 14802  00DA' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 14803  00DD' 0801'              	movf	?i1__Umul8_16+1,w
 14804  00DE' 0020               	movlb	0	; select bank0
 14805  00DF' 00B5'              	movwf	i1___flmul@temp+1
 14806  00E0' 0800'              	movf	?i1__Umul8_16,w
 14807  00E1' 00B4'              	movwf	i1___flmul@temp
 14808  00E2' 0834'              	movf	i1___flmul@temp,w
 14809  00E3' 07AA'              	addwf	i1___flmul@grs,f
 14810  00E4' 0835'              	movf	i1___flmul@temp+1,w
 14811  00E5' 3DAB'              	addwfc	i1___flmul@grs+1,f
 14812  00E6' 3000               	movlw	0
 14813  00E7' 3DAC'              	addwfc	i1___flmul@grs+2,f
 14814  00E8' 3DAD'              	addwfc	i1___flmul@grs+3,f
 14815  00E9' 3008               	movlw	8
 14816  00EA'                    u613_25:
 14817  00EA' 35AA'              	lslf	i1___flmul@grs,f
 14818  00EB' 0DAB'              	rlf	i1___flmul@grs+1,f
 14819  00EC' 0DAC'              	rlf	i1___flmul@grs+2,f
 14820  00ED' 0DAD'              	rlf	i1___flmul@grs+3,f
 14821  00EE' 0B89               	decfsz	9,f
 14822  00EF' 2800'              	goto	u613_25
 14823  00F0' 081C'              	movf	i1___flmul@b,w
 14824  00F1' 0080'              	movwf	i1__Umul8_16@multiplicand
 14825  00F2' 0820'              	movf	i1___flmul@a,w
 14826  00F3' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 14827  00F6' 0801'              	movf	?i1__Umul8_16+1,w
 14828  00F7' 0020               	movlb	0	; select bank0
 14829  00F8' 00B5'              	movwf	i1___flmul@temp+1
 14830  00F9' 0800'              	movf	?i1__Umul8_16,w
 14831  00FA' 00B4'              	movwf	i1___flmul@temp
 14832  00FB' 0834'              	movf	i1___flmul@temp,w
 14833  00FC' 07AA'              	addwf	i1___flmul@grs,f
 14834  00FD' 0835'              	movf	i1___flmul@temp+1,w
 14835  00FE' 3DAB'              	addwfc	i1___flmul@grs+1,f
 14836  00FF' 3000               	movlw	0
 14837  0100' 3DAC'              	addwfc	i1___flmul@grs+2,f
 14838  0101' 3DAD'              	addwfc	i1___flmul@grs+3,f
 14839  0102' 081D'              	movf	i1___flmul@b+1,w
 14840  0103' 0080'              	movwf	i1__Umul8_16@multiplicand
 14841  0104' 0822'              	movf	i1___flmul@a+2,w
 14842  0105' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 14843  0108' 0801'              	movf	?i1__Umul8_16+1,w
 14844  0109' 0020               	movlb	0	; select bank0
 14845  010A' 00B5'              	movwf	i1___flmul@temp+1
 14846  010B' 0800'              	movf	?i1__Umul8_16,w
 14847  010C' 00B4'              	movwf	i1___flmul@temp
 14848  010D' 0834'              	movf	i1___flmul@temp,w
 14849  010E' 07B0'              	addwf	i1___flmul@prod,f
 14850  010F' 0835'              	movf	i1___flmul@temp+1,w
 14851  0110' 3DB1'              	addwfc	i1___flmul@prod+1,f
 14852  0111' 3000               	movlw	0
 14853  0112' 3DB2'              	addwfc	i1___flmul@prod+2,f
 14854  0113' 3DB3'              	addwfc	i1___flmul@prod+3,f
 14855  0114' 081E'              	movf	i1___flmul@b+2,w
 14856  0115' 0080'              	movwf	i1__Umul8_16@multiplicand
 14857  0116' 0821'              	movf	i1___flmul@a+1,w
 14858  0117' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 14859  011A' 0801'              	movf	?i1__Umul8_16+1,w
 14860  011B' 0020               	movlb	0	; select bank0
 14861  011C' 00B5'              	movwf	i1___flmul@temp+1
 14862  011D' 0800'              	movf	?i1__Umul8_16,w
 14863  011E' 00B4'              	movwf	i1___flmul@temp
 14864  011F' 0834'              	movf	i1___flmul@temp,w
 14865  0120' 07B0'              	addwf	i1___flmul@prod,f
 14866  0121' 0835'              	movf	i1___flmul@temp+1,w
 14867  0122' 3DB1'              	addwfc	i1___flmul@prod+1,f
 14868  0123' 3000               	movlw	0
 14869  0124' 3DB2'              	addwfc	i1___flmul@prod+2,f
 14870  0125' 3DB3'              	addwfc	i1___flmul@prod+3,f
 14871  0126' 081E'              	movf	i1___flmul@b+2,w
 14872  0127' 0080'              	movwf	i1__Umul8_16@multiplicand
 14873  0128' 0822'              	movf	i1___flmul@a+2,w
 14874  0129' 3180' 2000' 3180'  	fcall	i1__Umul8_16
 14875  012C' 0801'              	movf	?i1__Umul8_16+1,w
 14876  012D' 0020               	movlb	0	; select bank0
 14877  012E' 00B5'              	movwf	i1___flmul@temp+1
 14878  012F' 0800'              	movf	?i1__Umul8_16,w
 14879  0130' 00B4'              	movwf	i1___flmul@temp
 14880  0131' 0834'              	movf	i1___flmul@temp,w
 14881  0132' 00A4'              	movwf	??i1___flmul
 14882  0133' 0835'              	movf	i1___flmul@temp+1,w
 14883  0134' 00A5'              	movwf	??i1___flmul+1
 14884  0135' 01A6'              	clrf	??i1___flmul+2
 14885  0136' 01A7'              	clrf	??i1___flmul+3
 14886  0137' 3008               	movlw	8
 14887  0138'                    u614_25:
 14888  0138' 35A4'              	lslf	??i1___flmul,f
 14889  0139' 0DA5'              	rlf	??i1___flmul+1,f
 14890  013A' 0DA6'              	rlf	??i1___flmul+2,f
 14891  013B' 0DA7'              	rlf	??i1___flmul+3,f
 14892  013C' 0B89               	decfsz	9,f
 14893  013D' 2800'              	goto	u614_25
 14894  013E' 0824'              	movf	??i1___flmul,w
 14895  013F' 07B0'              	addwf	i1___flmul@prod,f
 14896  0140' 0825'              	movf	??i1___flmul+1,w
 14897  0141' 3DB1'              	addwfc	i1___flmul@prod+1,f
 14898  0142' 0826'              	movf	??i1___flmul+2,w
 14899  0143' 3DB2'              	addwfc	i1___flmul@prod+2,f
 14900  0144' 0827'              	movf	??i1___flmul+3,w
 14901  0145' 3DB3'              	addwfc	i1___flmul@prod+3,f
 14902  0146' 082A'              	movf	i1___flmul@grs,w
 14903  0147' 00A4'              	movwf	??i1___flmul
 14904  0148' 082B'              	movf	i1___flmul@grs+1,w
 14905  0149' 00A5'              	movwf	??i1___flmul+1
 14906  014A' 082C'              	movf	i1___flmul@grs+2,w
 14907  014B' 00A6'              	movwf	??i1___flmul+2
 14908  014C' 082D'              	movf	i1___flmul@grs+3,w
 14909  014D' 00A7'              	movwf	??i1___flmul+3
 14910  014E' 3018               	movlw	24
 14911  014F'                    u615_25:
 14912  014F' 36A7'              	lsrf	??i1___flmul+3,f
 14913  0150' 0CA6'              	rrf	??i1___flmul+2,f
 14914  0151' 0CA5'              	rrf	??i1___flmul+1,f
 14915  0152' 0CA4'              	rrf	??i1___flmul,f
 14916  0153' 0B89               	decfsz	9,f
 14917  0154' 2800'              	goto	u615_25
 14918  0155' 0824'              	movf	??i1___flmul,w
 14919  0156' 07B0'              	addwf	i1___flmul@prod,f
 14920  0157' 0825'              	movf	??i1___flmul+1,w
 14921  0158' 3DB1'              	addwfc	i1___flmul@prod+1,f
 14922  0159' 0826'              	movf	??i1___flmul+2,w
 14923  015A' 3DB2'              	addwfc	i1___flmul@prod+2,f
 14924  015B' 0827'              	movf	??i1___flmul+3,w
 14925  015C' 3DB3'              	addwfc	i1___flmul@prod+3,f
 14926  015D' 3008               	movlw	8
 14927  015E'                    u616_25:
 14928  015E' 35AA'              	lslf	i1___flmul@grs,f
 14929  015F' 0DAB'              	rlf	i1___flmul@grs+1,f
 14930  0160' 0DAC'              	rlf	i1___flmul@grs+2,f
 14931  0161' 0DAD'              	rlf	i1___flmul@grs+3,f
 14932  0162' 0B89               	decfsz	9,f
 14933  0163' 2800'              	goto	u616_25
 14934  0164' 082F'              	movf	i1___flmul@bexp,w
 14935  0165' 072E'              	addwf	i1___flmul@aexp,w
 14936  0166' 00A4'              	movwf	??i1___flmul
 14937  0167' 01A5'              	clrf	??i1___flmul+1
 14938  0168' 0DA5'              	rlf	??i1___flmul+1,f
 14939  0169' 0824'              	movf	??i1___flmul,w
 14940  016A' 3E82               	addlw	130
 14941  016B' 00B4'              	movwf	i1___flmul@temp
 14942  016C' 30FF               	movlw	255
 14943  016D' 3D25'              	addwfc	??i1___flmul+1,w
 14944  016E' 00B5'              	movwf	i1___flmul@temp+1
 14945  016F'                    i1l5833:
 14946  016F' 1BB2'              	btfsc	i1___flmul@prod+2,7
 14947  0170' 2800'              	goto	i1l5835
 14948  0171' 3001               	movlw	1
 14949  0172'                    u617_25:
 14950  0172' 35B0'              	lslf	i1___flmul@prod,f
 14951  0173' 0DB1'              	rlf	i1___flmul@prod+1,f
 14952  0174' 0DB2'              	rlf	i1___flmul@prod+2,f
 14953  0175' 0DB3'              	rlf	i1___flmul@prod+3,f
 14954  0176' 0B89               	decfsz	9,f
 14955  0177' 2800'              	goto	u617_25
 14956  0178' 1BAD'              	btfsc	i1___flmul@grs+3,7
 14957  0179' 1430'              	bsf	i1___flmul@prod,0
 14958  017A' 3001               	movlw	1
 14959  017B'                    u619_25:
 14960  017B' 35AA'              	lslf	i1___flmul@grs,f
 14961  017C' 0DAB'              	rlf	i1___flmul@grs+1,f
 14962  017D' 0DAC'              	rlf	i1___flmul@grs+2,f
 14963  017E' 0DAD'              	rlf	i1___flmul@grs+3,f
 14964  017F' 0B89               	decfsz	9,f
 14965  0180' 2800'              	goto	u619_25
 14966  0181' 30FF               	movlw	255
 14967  0182' 07B4'              	addwf	i1___flmul@temp,f
 14968  0183' 30FF               	movlw	255
 14969  0184' 3DB5'              	addwfc	i1___flmul@temp+1,f
 14970  0185' 2800'              	goto	i1l5833
 14971  0186'                    i1l5835:
 14972  0186' 01AE'              	clrf	i1___flmul@aexp
 14973  0187' 1FAD'              	btfss	i1___flmul@grs+3,7
 14974  0188' 2800'              	goto	i1l5845
 14975  0189' 30FF               	movlw	255
 14976  018A' 052A'              	andwf	i1___flmul@grs,w
 14977  018B' 00A4'              	movwf	??i1___flmul
 14978  018C' 30FF               	movlw	255
 14979  018D' 052B'              	andwf	i1___flmul@grs+1,w
 14980  018E' 00A5'              	movwf	??i1___flmul+1
 14981  018F' 30FF               	movlw	255
 14982  0190' 052C'              	andwf	i1___flmul@grs+2,w
 14983  0191' 00A6'              	movwf	??i1___flmul+2
 14984  0192' 307F               	movlw	127
 14985  0193' 052D'              	andwf	i1___flmul@grs+3,w
 14986  0194' 00A7'              	movwf	??i1___flmul+3
 14987  0195' 0827'              	movf	??i1___flmul+3,w
 14988  0196' 0426'              	iorwf	??i1___flmul+2,w
 14989  0197' 0425'              	iorwf	??i1___flmul+1,w
 14990  0198' 0424'              	iorwf	??i1___flmul,w
 14991  0199' 1903               	skipnz
 14992  019A' 1830'              	btfsc	i1___flmul@prod,0
 14993  019B' 2800'              	goto	i1l5841
 14994  019C' 2800'              	goto	i1l5845
 14995  019D'                    i1l5841:
 14996  019D' 01AE'              	clrf	i1___flmul@aexp
 14997  019E' 0AAE'              	incf	i1___flmul@aexp,f
 14998  019F'                    i1l5845:
 14999  019F' 082E'              	movf	i1___flmul@aexp,w
 15000  01A0' 1903               	btfsc	3,2
 15001  01A1' 2800'              	goto	i1l5855
 15002  01A2' 3001               	movlw	1
 15003  01A3' 07B0'              	addwf	i1___flmul@prod,f
 15004  01A4' 3000               	movlw	0
 15005  01A5' 3DB1'              	addwfc	i1___flmul@prod+1,f
 15006  01A6' 3000               	movlw	0
 15007  01A7' 3DB2'              	addwfc	i1___flmul@prod+2,f
 15008  01A8' 3000               	movlw	0
 15009  01A9' 3DB3'              	addwfc	i1___flmul@prod+3,f
 15010  01AA' 1C33'              	btfss	i1___flmul@prod+3,0
 15011  01AB' 2800'              	goto	i1l5855
 15012  01AC' 0830'              	movf	i1___flmul@prod,w
 15013  01AD' 00A4'              	movwf	??i1___flmul
 15014  01AE' 0831'              	movf	i1___flmul@prod+1,w
 15015  01AF' 00A5'              	movwf	??i1___flmul+1
 15016  01B0' 0832'              	movf	i1___flmul@prod+2,w
 15017  01B1' 00A6'              	movwf	??i1___flmul+2
 15018  01B2' 0833'              	movf	i1___flmul@prod+3,w
 15019  01B3' 00A7'              	movwf	??i1___flmul+3
 15020  01B4' 3001               	movlw	1
 15021  01B5' 00A8'              	movwf	??i1___flmul+4
 15022  01B6'                    u626_25:
 15023  01B6' 37A7'              	asrf	??i1___flmul+3,f
 15024  01B7' 0CA6'              	rrf	??i1___flmul+2,f
 15025  01B8' 0CA5'              	rrf	??i1___flmul+1,f
 15026  01B9' 0CA4'              	rrf	??i1___flmul,f
 15027  01BA' 0BA8'              	decfsz	??i1___flmul+4,f
 15028  01BB' 2800'              	goto	u626_25
 15029  01BC' 0827'              	movf	??i1___flmul+3,w
 15030  01BD' 00B3'              	movwf	i1___flmul@prod+3
 15031  01BE' 0826'              	movf	??i1___flmul+2,w
 15032  01BF' 00B2'              	movwf	i1___flmul@prod+2
 15033  01C0' 0825'              	movf	??i1___flmul+1,w
 15034  01C1' 00B1'              	movwf	i1___flmul@prod+1
 15035  01C2' 0824'              	movf	??i1___flmul,w
 15036  01C3' 00B0'              	movwf	i1___flmul@prod
 15037  01C4' 3001               	movlw	1
 15038  01C5' 07B4'              	addwf	i1___flmul@temp,f
 15039  01C6' 3000               	movlw	0
 15040  01C7' 3DB5'              	addwfc	i1___flmul@temp+1,f
 15041  01C8'                    i1l5855:
 15042  01C8' 0835'              	movf	i1___flmul@temp+1,w
 15043  01C9' 3A80               	xorlw	128
 15044  01CA' 00A4'              	movwf	??i1___flmul
 15045  01CB' 3080               	movlw	128
 15046  01CC' 0224'              	subwf	??i1___flmul,w
 15047  01CD' 1D03               	skipz
 15048  01CE' 2800'              	goto	u627_25
 15049  01CF' 30FF               	movlw	255
 15050  01D0' 0234'              	subwf	i1___flmul@temp,w
 15051  01D1'                    u627_25:
 15052  01D1' 1C03               	skipc
 15053  01D2' 2800'              	goto	i1l5859
 15054  01D3' 307F               	movlw	127
 15055  01D4' 0020               	movlb	0	; select bank0
 15056  01D5' 00B3'              	movwf	i1___flmul@prod+3
 15057  01D6' 3080               	movlw	128
 15058  01D7' 00B2'              	movwf	i1___flmul@prod+2
 15059  01D8' 3000               	movlw	0
 15060  01D9' 00B1'              	movwf	i1___flmul@prod+1
 15061  01DA' 3000               	movlw	0
 15062  01DB' 00B0'              	movwf	i1___flmul@prod
 15063  01DC' 2800'              	goto	i1l1455
 15064  01DD'                    i1l5859:
 15065  01DD' 0020               	movlb	0	; select bank0
 15066  01DE' 0835'              	movf	i1___flmul@temp+1,w
 15067  01DF' 3A80               	xorlw	128
 15068  01E0' 00A4'              	movwf	??i1___flmul
 15069  01E1' 3080               	movlw	128
 15070  01E2' 0224'              	subwf	??i1___flmul,w
 15071  01E3' 1D03               	skipz
 15072  01E4' 2800'              	goto	u628_25
 15073  01E5' 3001               	movlw	1
 15074  01E6' 0234'              	subwf	i1___flmul@temp,w
 15075  01E7'                    u628_25:
 15076  01E7' 1803               	skipnc
 15077  01E8' 2800'              	goto	i1l5865
 15078  01E9' 3000               	movlw	0
 15079  01EA' 0020               	movlb	0	; select bank0
 15080  01EB' 00B3'              	movwf	i1___flmul@prod+3
 15081  01EC' 3000               	movlw	0
 15082  01ED' 00B2'              	movwf	i1___flmul@prod+2
 15083  01EE' 3000               	movlw	0
 15084  01EF' 00B1'              	movwf	i1___flmul@prod+1
 15085  01F0' 3000               	movlw	0
 15086  01F1' 00B0'              	movwf	i1___flmul@prod
 15087  01F2' 01A9'              	clrf	i1___flmul@sign
 15088  01F3' 2800'              	goto	i1l1455
 15089  01F4'                    i1l5865:
 15090  01F4' 0020               	movlb	0	; select bank0
 15091  01F5' 0834'              	movf	i1___flmul@temp,w
 15092  01F6' 00AF'              	movwf	i1___flmul@bexp
 15093  01F7' 30FF               	movlw	255
 15094  01F8' 05B0'              	andwf	i1___flmul@prod,f
 15095  01F9' 30FF               	movlw	255
 15096  01FA' 05B1'              	andwf	i1___flmul@prod+1,f
 15097  01FB' 307F               	movlw	127
 15098  01FC' 05B2'              	andwf	i1___flmul@prod+2,f
 15099  01FD' 3000               	movlw	0
 15100  01FE' 05B3'              	andwf	i1___flmul@prod+3,f
 15101  01FF' 182F'              	btfsc	i1___flmul@bexp,0
 15102  0200' 17B2'              	bsf	i1___flmul@prod+2,7
 15103  0201' 362F'              	lsrf	i1___flmul@bexp,w
 15104  0202' 00B3'              	movwf	i1___flmul@prod+3
 15105  0203'                    i1l1455:
 15106  0203' 0829'              	movf	i1___flmul@sign,w
 15107  0204' 00A4'              	movwf	??i1___flmul
 15108  0205' 0824'              	movf	??i1___flmul,w
 15109  0206' 04B3'              	iorwf	i1___flmul@prod+3,f
 15110  0207' 0833'              	movf	i1___flmul@prod+3,w
 15111  0208' 009F'              	movwf	?i1___flmul+3
 15112  0209' 0832'              	movf	i1___flmul@prod+2,w
 15113  020A' 009E'              	movwf	?i1___flmul+2
 15114  020B' 0831'              	movf	i1___flmul@prod+1,w
 15115  020C' 009D'              	movwf	?i1___flmul+1
 15116  020D' 0830'              	movf	i1___flmul@prod,w
 15117  020E' 009C'              	movwf	?i1___flmul
 15118  020F' 0008               	return
 15119  0210'                    __end_ofi1___flmul:
 15120                           
 15121                           	psect	text43
 15122  0000'                    __ptext43:	
 15123 ;; *************** function i1__Umul8_16 *****************
 15124 ;; Defined at:
 15125 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8_16.c"
 15126 ;; Parameters:    Size  Location     Type
 15127 ;;  multiplier      1    wreg     unsigned char 
 15128 ;;  multiplicand    1    0[COMMON] unsigned char 
 15129 ;; Auto vars:     Size  Location     Type
 15130 ;;  multiplier      1    8[COMMON] unsigned char 
 15131 ;;  word_mpld       2    6[COMMON] unsigned int 
 15132 ;;  product         2    4[COMMON] unsigned int 
 15133 ;; Return value:  Size  Location     Type
 15134 ;;                  2    0[COMMON] unsigned int 
 15135 ;; Registers used:
 15136 ;;		wreg, status,2, status,0
 15137 ;; Tracked objects:
 15138 ;;		On entry : 0/0
 15139 ;;		On exit  : 0/0
 15140 ;;		Unchanged: 0/0
 15141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15143 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15144 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15145 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15146 ;;Total ram usage:        9 bytes
 15147 ;; Hardware stack levels used: 1
 15148 ;; This function calls:
 15149 ;;		Nothing
 15150 ;; This function is called by:
 15151 ;;		i1___flmul
 15152 ;; This function uses a non-reentrant model
 15153 ;;
 15154                           
 15155  0000'                    i1__Umul8_16:	
 15156                           ;psect for function i1__Umul8_16
 15157                           
 15158                           
 15159                           ;incstack = 0
 15160                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 15161                           ;i1__Umul8_16@multiplier stored from wreg
 15162  0000' 0088'              	movwf	i1__Umul8_16@multiplier
 15163  0001' 0184'              	clrf	i1__Umul8_16@product
 15164  0002' 0185'              	clrf	i1__Umul8_16@product+1
 15165  0003' 0800'              	movf	i1__Umul8_16@multiplicand,w
 15166  0004' 0082'              	movwf	??i1__Umul8_16
 15167  0005' 0183'              	clrf	??i1__Umul8_16+1
 15168  0006' 0802'              	movf	??i1__Umul8_16,w
 15169  0007' 0086'              	movwf	i1__Umul8_16@word_mpld
 15170  0008' 0803'              	movf	??i1__Umul8_16+1,w
 15171  0009' 0087'              	movwf	i1__Umul8_16@word_mpld+1
 15172  000A'                    i1l5425:
 15173  000A' 1C08'              	btfss	i1__Umul8_16@multiplier,0
 15174  000B' 2800'              	goto	i1l1462
 15175  000C' 0806'              	movf	i1__Umul8_16@word_mpld,w
 15176  000D' 0784'              	addwf	i1__Umul8_16@product,f
 15177  000E' 0807'              	movf	i1__Umul8_16@word_mpld+1,w
 15178  000F' 3D85'              	addwfc	i1__Umul8_16@product+1,f
 15179  0010'                    i1l1462:
 15180  0010' 3001               	movlw	1
 15181  0011'                    u550_25:
 15182  0011' 3586'              	lslf	i1__Umul8_16@word_mpld,f
 15183  0012' 0D87'              	rlf	i1__Umul8_16@word_mpld+1,f
 15184  0013' 0B89               	decfsz	9,f
 15185  0014' 2800'              	goto	u550_25
 15186  0015' 1003               	clrc
 15187  0016' 0C88'              	rrf	i1__Umul8_16@multiplier,f
 15188  0017' 0808'              	movf	i1__Umul8_16@multiplier,w
 15189  0018' 1D03               	btfss	3,2
 15190  0019' 2800'              	goto	i1l5425
 15191  001A' 0805'              	movf	i1__Umul8_16@product+1,w
 15192  001B' 0081'              	movwf	?i1__Umul8_16+1
 15193  001C' 0804'              	movf	i1__Umul8_16@product,w
 15194  001D' 0080'              	movwf	?i1__Umul8_16
 15195  001E' 0008               	return
 15196  001F'                    __end_ofi1__Umul8_16:
 15197                           
 15198                           	psect	text44
 15199  0000'                    __ptext44:	
 15200 ;; *************** function i1___fldiv *****************
 15201 ;; Defined at:
 15202 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 15203 ;; Parameters:    Size  Location     Type
 15204 ;;  a               4   54[BANK0 ] unsigned int 
 15205 ;;  b               4   58[BANK0 ] unsigned int 
 15206 ;; Auto vars:     Size  Location     Type
 15207 ;;  grs             4   74[BANK0 ] unsigned long 
 15208 ;;  rem             4   67[BANK0 ] unsigned long 
 15209 ;;  new_exp         2   72[BANK0 ] int 
 15210 ;;  aexp            1   79[BANK0 ] unsigned char 
 15211 ;;  bexp            1   78[BANK0 ] unsigned char 
 15212 ;;  sign            1   71[BANK0 ] unsigned char 
 15213 ;; Return value:  Size  Location     Type
 15214 ;;                  4   54[BANK0 ] unsigned char 
 15215 ;; Registers used:
 15216 ;;		wreg, status,2, status,0
 15217 ;; Tracked objects:
 15218 ;;		On entry : 0/0
 15219 ;;		On exit  : 0/0
 15220 ;;		Unchanged: 0/0
 15221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15222 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15223 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15224 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15225 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15226 ;;Total ram usage:       26 bytes
 15227 ;; Hardware stack levels used: 1
 15228 ;; This function calls:
 15229 ;;		Nothing
 15230 ;; This function is called by:
 15231 ;;		_command_interpreter
 15232 ;;		i1_converter_settings
 15233 ;; This function uses a non-reentrant model
 15234 ;;
 15235                           
 15236  0000'                    i1___fldiv:	
 15237                           ;psect for function i1___fldiv
 15238                           
 15239                           
 15240                           ;incstack = 0
 15241                           ; Regs used in i1___fldiv: [wreg+status,2+status,0]
 15242  0000' 0020               	movlb	0	; select bank0
 15243  0001' 083D'              	movf	i1___fldiv@b+3,w
 15244  0002' 3980               	andlw	128
 15245  0003' 00C7'              	movwf	i1___fldiv@sign
 15246  0004' 353D'              	lslf	i1___fldiv@b+3,w
 15247  0005' 00CE'              	movwf	i1___fldiv@bexp
 15248  0006' 1BBC'              	btfsc	i1___fldiv@b+2,7
 15249  0007' 144E'              	bsf	i1___fldiv@bexp,0
 15250  0008' 084E'              	movf	i1___fldiv@bexp,w
 15251  0009' 1903               	btfsc	3,2
 15252  000A' 2800'              	goto	i1l5615
 15253  000B' 0A4E'              	incf	i1___fldiv@bexp,w
 15254  000C' 1D03               	btfss	3,2
 15255  000D' 2800'              	goto	i1l5611
 15256  000E' 3000               	movlw	0
 15257  000F' 00BD'              	movwf	i1___fldiv@b+3
 15258  0010' 3000               	movlw	0
 15259  0011' 00BC'              	movwf	i1___fldiv@b+2
 15260  0012' 3000               	movlw	0
 15261  0013' 00BB'              	movwf	i1___fldiv@b+1
 15262  0014' 3000               	movlw	0
 15263  0015' 00BA'              	movwf	i1___fldiv@b
 15264  0016'                    i1l5611:
 15265  0016' 17BC'              	bsf	i1___fldiv@b+2,7
 15266  0017' 01BD'              	clrf	i1___fldiv@b+3
 15267  0018' 2800'              	goto	i1l5617
 15268  0019'                    i1l5615:
 15269  0019' 3000               	movlw	0
 15270  001A' 00BD'              	movwf	i1___fldiv@b+3
 15271  001B' 3000               	movlw	0
 15272  001C' 00BC'              	movwf	i1___fldiv@b+2
 15273  001D' 3000               	movlw	0
 15274  001E' 00BB'              	movwf	i1___fldiv@b+1
 15275  001F' 3000               	movlw	0
 15276  0020' 00BA'              	movwf	i1___fldiv@b
 15277  0021'                    i1l5617:
 15278  0021' 0839'              	movf	i1___fldiv@a+3,w
 15279  0022' 3980               	andlw	128
 15280  0023' 00BE'              	movwf	??i1___fldiv
 15281  0024' 083E'              	movf	??i1___fldiv,w
 15282  0025' 06C7'              	xorwf	i1___fldiv@sign,f
 15283  0026' 3539'              	lslf	i1___fldiv@a+3,w
 15284  0027' 00CF'              	movwf	i1___fldiv@aexp
 15285  0028' 1BB8'              	btfsc	i1___fldiv@a+2,7
 15286  0029' 144F'              	bsf	i1___fldiv@aexp,0
 15287  002A' 084F'              	movf	i1___fldiv@aexp,w
 15288  002B' 1903               	btfsc	3,2
 15289  002C' 2800'              	goto	i1l5635
 15290  002D' 0A4F'              	incf	i1___fldiv@aexp,w
 15291  002E' 1D03               	btfss	3,2
 15292  002F' 2800'              	goto	i1l5631
 15293  0030' 3000               	movlw	0
 15294  0031' 00B9'              	movwf	i1___fldiv@a+3
 15295  0032' 3000               	movlw	0
 15296  0033' 00B8'              	movwf	i1___fldiv@a+2
 15297  0034' 3000               	movlw	0
 15298  0035' 00B7'              	movwf	i1___fldiv@a+1
 15299  0036' 3000               	movlw	0
 15300  0037' 00B6'              	movwf	i1___fldiv@a
 15301  0038'                    i1l5631:
 15302  0038' 17B8'              	bsf	i1___fldiv@a+2,7
 15303  0039' 01B9'              	clrf	i1___fldiv@a+3
 15304  003A' 2800'              	goto	i1l1403
 15305  003B'                    i1l5635:
 15306  003B' 3000               	movlw	0
 15307  003C' 00B9'              	movwf	i1___fldiv@a+3
 15308  003D' 3000               	movlw	0
 15309  003E' 00B8'              	movwf	i1___fldiv@a+2
 15310  003F' 3000               	movlw	0
 15311  0040' 00B7'              	movwf	i1___fldiv@a+1
 15312  0041' 3000               	movlw	0
 15313  0042' 00B6'              	movwf	i1___fldiv@a
 15314  0043'                    i1l1403:
 15315  0043' 0839'              	movf	i1___fldiv@a+3,w
 15316  0044' 0438'              	iorwf	i1___fldiv@a+2,w
 15317  0045' 0437'              	iorwf	i1___fldiv@a+1,w
 15318  0046' 0436'              	iorwf	i1___fldiv@a,w
 15319  0047' 1D03               	skipz
 15320  0048' 2800'              	goto	i1l5645
 15321  0049' 3000               	movlw	0
 15322  004A' 00BD'              	movwf	i1___fldiv@b+3
 15323  004B' 3000               	movlw	0
 15324  004C' 00BC'              	movwf	i1___fldiv@b+2
 15325  004D' 3000               	movlw	0
 15326  004E' 00BB'              	movwf	i1___fldiv@b+1
 15327  004F' 3000               	movlw	0
 15328  0050' 00BA'              	movwf	i1___fldiv@b
 15329  0051' 3080               	movlw	128
 15330  0052' 04BC'              	iorwf	i1___fldiv@b+2,f
 15331  0053' 307F               	movlw	127
 15332  0054' 04BD'              	iorwf	i1___fldiv@b+3,f
 15333  0055'                    L20:
 15334  0055' 0847'              	movf	i1___fldiv@sign,w
 15335  0056' 00BE'              	movwf	??i1___fldiv
 15336  0057' 083E'              	movf	??i1___fldiv,w
 15337  0058' 04BD'              	iorwf	i1___fldiv@b+3,f
 15338  0059' 083D'              	movf	i1___fldiv@b+3,w
 15339  005A' 00B9'              	movwf	?i1___fldiv+3
 15340  005B' 083C'              	movf	i1___fldiv@b+2,w
 15341  005C' 00B8'              	movwf	?i1___fldiv+2
 15342  005D' 083B'              	movf	i1___fldiv@b+1,w
 15343  005E' 00B7'              	movwf	?i1___fldiv+1
 15344  005F' 083A'              	movf	i1___fldiv@b,w
 15345  0060' 00B6'              	movwf	?i1___fldiv
 15346  0061' 0008               	return
 15347  0062'                    i1l5645:
 15348  0062' 084E'              	movf	i1___fldiv@bexp,w
 15349  0063' 1D03               	btfss	3,2
 15350  0064' 2800'              	goto	i1l5651
 15351  0065' 3000               	movlw	0
 15352  0066' 00B9'              	movwf	?i1___fldiv+3
 15353  0067' 3000               	movlw	0
 15354  0068' 00B8'              	movwf	?i1___fldiv+2
 15355  0069' 3000               	movlw	0
 15356  006A' 00B7'              	movwf	?i1___fldiv+1
 15357  006B' 3000               	movlw	0
 15358  006C' 00B6'              	movwf	?i1___fldiv
 15359  006D' 0008               	return
 15360  006E'                    i1l5651:
 15361  006E' 084E'              	movf	i1___fldiv@bexp,w
 15362  006F' 00BE'              	movwf	??i1___fldiv
 15363  0070' 01BF'              	clrf	??i1___fldiv+1
 15364  0071' 083F'              	movf	??i1___fldiv+1,w
 15365  0072' 00C1'              	movwf	??i1___fldiv+3
 15366  0073' 084F'              	movf	i1___fldiv@aexp,w
 15367  0074' 023E'              	subwf	??i1___fldiv,w
 15368  0075' 00C0'              	movwf	??i1___fldiv+2
 15369  0076' 1C03               	skipc
 15370  0077' 03C1'              	decf	??i1___fldiv+3,f
 15371  0078' 0840'              	movf	??i1___fldiv+2,w
 15372  0079' 3E7F               	addlw	127
 15373  007A' 00C8'              	movwf	i1___fldiv@new_exp
 15374  007B' 3000               	movlw	0
 15375  007C' 3D41'              	addwfc	??i1___fldiv+3,w
 15376  007D' 00C9'              	movwf	i1___fldiv@new_exp+1
 15377  007E' 083D'              	movf	i1___fldiv@b+3,w
 15378  007F' 00C6'              	movwf	i1___fldiv@rem+3
 15379  0080' 083C'              	movf	i1___fldiv@b+2,w
 15380  0081' 00C5'              	movwf	i1___fldiv@rem+2
 15381  0082' 083B'              	movf	i1___fldiv@b+1,w
 15382  0083' 00C4'              	movwf	i1___fldiv@rem+1
 15383  0084' 083A'              	movf	i1___fldiv@b,w
 15384  0085' 00C3'              	movwf	i1___fldiv@rem
 15385  0086' 3000               	movlw	0
 15386  0087' 00BD'              	movwf	i1___fldiv@b+3
 15387  0088' 3000               	movlw	0
 15388  0089' 00BC'              	movwf	i1___fldiv@b+2
 15389  008A' 3000               	movlw	0
 15390  008B' 00BB'              	movwf	i1___fldiv@b+1
 15391  008C' 3000               	movlw	0
 15392  008D' 00BA'              	movwf	i1___fldiv@b
 15393  008E' 3000               	movlw	0
 15394  008F' 00CD'              	movwf	i1___fldiv@grs+3
 15395  0090' 3000               	movlw	0
 15396  0091' 00CC'              	movwf	i1___fldiv@grs+2
 15397  0092' 3000               	movlw	0
 15398  0093' 00CB'              	movwf	i1___fldiv@grs+1
 15399  0094' 3000               	movlw	0
 15400  0095' 00CA'              	movwf	i1___fldiv@grs
 15401  0096' 01CF'              	clrf	i1___fldiv@aexp
 15402  0097'                    i1l5679:
 15403  0097' 301A               	movlw	26
 15404  0098' 024F'              	subwf	i1___fldiv@aexp,w
 15405  0099' 1803               	btfsc	3,0
 15406  009A' 2800'              	goto	i1l5681
 15407  009B' 084F'              	movf	i1___fldiv@aexp,w
 15408  009C' 1903               	btfsc	3,2
 15409  009D' 2800'              	goto	i1l5671
 15410  009E' 3001               	movlw	1
 15411  009F'                    u584_25:
 15412  009F' 35C3'              	lslf	i1___fldiv@rem,f
 15413  00A0' 0DC4'              	rlf	i1___fldiv@rem+1,f
 15414  00A1' 0DC5'              	rlf	i1___fldiv@rem+2,f
 15415  00A2' 0DC6'              	rlf	i1___fldiv@rem+3,f
 15416  00A3' 0B89               	decfsz	9,f
 15417  00A4' 2800'              	goto	u584_25
 15418  00A5' 3001               	movlw	1
 15419  00A6'                    u585_25:
 15420  00A6' 35BA'              	lslf	i1___fldiv@b,f
 15421  00A7' 0DBB'              	rlf	i1___fldiv@b+1,f
 15422  00A8' 0DBC'              	rlf	i1___fldiv@b+2,f
 15423  00A9' 0DBD'              	rlf	i1___fldiv@b+3,f
 15424  00AA' 0B89               	decfsz	9,f
 15425  00AB' 2800'              	goto	u585_25
 15426  00AC' 1BCD'              	btfsc	i1___fldiv@grs+3,7
 15427  00AD' 143A'              	bsf	i1___fldiv@b,0
 15428  00AE' 3001               	movlw	1
 15429  00AF'                    u587_25:
 15430  00AF' 35CA'              	lslf	i1___fldiv@grs,f
 15431  00B0' 0DCB'              	rlf	i1___fldiv@grs+1,f
 15432  00B1' 0DCC'              	rlf	i1___fldiv@grs+2,f
 15433  00B2' 0DCD'              	rlf	i1___fldiv@grs+3,f
 15434  00B3' 0B89               	decfsz	9,f
 15435  00B4' 2800'              	goto	u587_25
 15436  00B5'                    i1l5671:
 15437  00B5' 0839'              	movf	i1___fldiv@a+3,w
 15438  00B6' 0246'              	subwf	i1___fldiv@rem+3,w
 15439  00B7' 1D03               	skipz
 15440  00B8' 2800'              	goto	u588_25
 15441  00B9' 0838'              	movf	i1___fldiv@a+2,w
 15442  00BA' 0245'              	subwf	i1___fldiv@rem+2,w
 15443  00BB' 1D03               	skipz
 15444  00BC' 2800'              	goto	u588_25
 15445  00BD' 0837'              	movf	i1___fldiv@a+1,w
 15446  00BE' 0244'              	subwf	i1___fldiv@rem+1,w
 15447  00BF' 1D03               	skipz
 15448  00C0' 2800'              	goto	u588_25
 15449  00C1' 0836'              	movf	i1___fldiv@a,w
 15450  00C2' 0243'              	subwf	i1___fldiv@rem,w
 15451  00C3'                    u588_25:
 15452  00C3' 1C03               	skipc
 15453  00C4' 2800'              	goto	i1l5677
 15454  00C5' 174D'              	bsf	i1___fldiv@grs+3,6
 15455  00C6' 0836'              	movf	i1___fldiv@a,w
 15456  00C7' 02C3'              	subwf	i1___fldiv@rem,f
 15457  00C8' 0837'              	movf	i1___fldiv@a+1,w
 15458  00C9' 3BC4'              	subwfb	i1___fldiv@rem+1,f
 15459  00CA' 0838'              	movf	i1___fldiv@a+2,w
 15460  00CB' 3BC5'              	subwfb	i1___fldiv@rem+2,f
 15461  00CC' 0839'              	movf	i1___fldiv@a+3,w
 15462  00CD' 3BC6'              	subwfb	i1___fldiv@rem+3,f
 15463  00CE'                    i1l5677:
 15464  00CE' 3001               	movlw	1
 15465  00CF' 00BE'              	movwf	??i1___fldiv
 15466  00D0' 083E'              	movf	??i1___fldiv,w
 15467  00D1' 07CF'              	addwf	i1___fldiv@aexp,f
 15468  00D2' 2800'              	goto	i1l5679
 15469  00D3'                    i1l5681:
 15470  00D3' 0846'              	movf	i1___fldiv@rem+3,w
 15471  00D4' 0445'              	iorwf	i1___fldiv@rem+2,w
 15472  00D5' 0444'              	iorwf	i1___fldiv@rem+1,w
 15473  00D6' 0443'              	iorwf	i1___fldiv@rem,w
 15474  00D7' 1D03               	btfss	3,2
 15475  00D8' 144A'              	bsf	i1___fldiv@grs,0
 15476  00D9'                    i1l5695:
 15477  00D9' 1BBC'              	btfsc	i1___fldiv@b+2,7
 15478  00DA' 2800'              	goto	i1l5697
 15479  00DB' 3001               	movlw	1
 15480  00DC'                    u591_25:
 15481  00DC' 35BA'              	lslf	i1___fldiv@b,f
 15482  00DD' 0DBB'              	rlf	i1___fldiv@b+1,f
 15483  00DE' 0DBC'              	rlf	i1___fldiv@b+2,f
 15484  00DF' 0DBD'              	rlf	i1___fldiv@b+3,f
 15485  00E0' 0B89               	decfsz	9,f
 15486  00E1' 2800'              	goto	u591_25
 15487  00E2' 1BCD'              	btfsc	i1___fldiv@grs+3,7
 15488  00E3' 143A'              	bsf	i1___fldiv@b,0
 15489  00E4' 3001               	movlw	1
 15490  00E5'                    u593_25:
 15491  00E5' 35CA'              	lslf	i1___fldiv@grs,f
 15492  00E6' 0DCB'              	rlf	i1___fldiv@grs+1,f
 15493  00E7' 0DCC'              	rlf	i1___fldiv@grs+2,f
 15494  00E8' 0DCD'              	rlf	i1___fldiv@grs+3,f
 15495  00E9' 0B89               	decfsz	9,f
 15496  00EA' 2800'              	goto	u593_25
 15497  00EB' 30FF               	movlw	255
 15498  00EC' 07C8'              	addwf	i1___fldiv@new_exp,f
 15499  00ED' 30FF               	movlw	255
 15500  00EE' 3DC9'              	addwfc	i1___fldiv@new_exp+1,f
 15501  00EF' 2800'              	goto	i1l5695
 15502  00F0'                    i1l5697:
 15503  00F0' 01CF'              	clrf	i1___fldiv@aexp
 15504  00F1' 1FCD'              	btfss	i1___fldiv@grs+3,7
 15505  00F2' 2800'              	goto	i1l5707
 15506  00F3' 30FF               	movlw	255
 15507  00F4' 054A'              	andwf	i1___fldiv@grs,w
 15508  00F5' 00BE'              	movwf	??i1___fldiv
 15509  00F6' 30FF               	movlw	255
 15510  00F7' 054B'              	andwf	i1___fldiv@grs+1,w
 15511  00F8' 00BF'              	movwf	??i1___fldiv+1
 15512  00F9' 30FF               	movlw	255
 15513  00FA' 054C'              	andwf	i1___fldiv@grs+2,w
 15514  00FB' 00C0'              	movwf	??i1___fldiv+2
 15515  00FC' 307F               	movlw	127
 15516  00FD' 054D'              	andwf	i1___fldiv@grs+3,w
 15517  00FE' 00C1'              	movwf	??i1___fldiv+3
 15518  00FF' 0841'              	movf	??i1___fldiv+3,w
 15519  0100' 0440'              	iorwf	??i1___fldiv+2,w
 15520  0101' 043F'              	iorwf	??i1___fldiv+1,w
 15521  0102' 043E'              	iorwf	??i1___fldiv,w
 15522  0103' 1903               	skipnz
 15523  0104' 183A'              	btfsc	i1___fldiv@b,0
 15524  0105' 2800'              	goto	i1l5703
 15525  0106' 2800'              	goto	i1l5707
 15526  0107'                    i1l5703:
 15527  0107' 01CF'              	clrf	i1___fldiv@aexp
 15528  0108' 0ACF'              	incf	i1___fldiv@aexp,f
 15529  0109'                    i1l5707:
 15530  0109' 084F'              	movf	i1___fldiv@aexp,w
 15531  010A' 1903               	btfsc	3,2
 15532  010B' 2800'              	goto	i1l5717
 15533  010C' 3001               	movlw	1
 15534  010D' 07BA'              	addwf	i1___fldiv@b,f
 15535  010E' 3000               	movlw	0
 15536  010F' 3DBB'              	addwfc	i1___fldiv@b+1,f
 15537  0110' 3000               	movlw	0
 15538  0111' 3DBC'              	addwfc	i1___fldiv@b+2,f
 15539  0112' 3000               	movlw	0
 15540  0113' 3DBD'              	addwfc	i1___fldiv@b+3,f
 15541  0114' 1C3D'              	btfss	i1___fldiv@b+3,0
 15542  0115' 2800'              	goto	i1l5717
 15543  0116' 083A'              	movf	i1___fldiv@b,w
 15544  0117' 00BE'              	movwf	??i1___fldiv
 15545  0118' 083B'              	movf	i1___fldiv@b+1,w
 15546  0119' 00BF'              	movwf	??i1___fldiv+1
 15547  011A' 083C'              	movf	i1___fldiv@b+2,w
 15548  011B' 00C0'              	movwf	??i1___fldiv+2
 15549  011C' 083D'              	movf	i1___fldiv@b+3,w
 15550  011D' 00C1'              	movwf	??i1___fldiv+3
 15551  011E' 3001               	movlw	1
 15552  011F' 00C2'              	movwf	??i1___fldiv+4
 15553  0120'                    u600_25:
 15554  0120' 37C1'              	asrf	??i1___fldiv+3,f
 15555  0121' 0CC0'              	rrf	??i1___fldiv+2,f
 15556  0122' 0CBF'              	rrf	??i1___fldiv+1,f
 15557  0123' 0CBE'              	rrf	??i1___fldiv,f
 15558  0124' 0BC2'              	decfsz	??i1___fldiv+4,f
 15559  0125' 2800'              	goto	u600_25
 15560  0126' 0841'              	movf	??i1___fldiv+3,w
 15561  0127' 00BD'              	movwf	i1___fldiv@b+3
 15562  0128' 0840'              	movf	??i1___fldiv+2,w
 15563  0129' 00BC'              	movwf	i1___fldiv@b+2
 15564  012A' 083F'              	movf	??i1___fldiv+1,w
 15565  012B' 00BB'              	movwf	i1___fldiv@b+1
 15566  012C' 083E'              	movf	??i1___fldiv,w
 15567  012D' 00BA'              	movwf	i1___fldiv@b
 15568  012E' 3001               	movlw	1
 15569  012F' 07C8'              	addwf	i1___fldiv@new_exp,f
 15570  0130' 3000               	movlw	0
 15571  0131' 3DC9'              	addwfc	i1___fldiv@new_exp+1,f
 15572  0132'                    i1l5717:
 15573  0132' 0849'              	movf	i1___fldiv@new_exp+1,w
 15574  0133' 3A80               	xorlw	128
 15575  0134' 00BE'              	movwf	??i1___fldiv
 15576  0135' 3080               	movlw	128
 15577  0136' 023E'              	subwf	??i1___fldiv,w
 15578  0137' 1D03               	skipz
 15579  0138' 2800'              	goto	u601_25
 15580  0139' 30FF               	movlw	255
 15581  013A' 0248'              	subwf	i1___fldiv@new_exp,w
 15582  013B'                    u601_25:
 15583  013B' 1C03               	skipc
 15584  013C' 2800'              	goto	i1l1424
 15585  013D' 30FF               	movlw	255
 15586  013E' 0020               	movlb	0	; select bank0
 15587  013F' 00C8'              	movwf	i1___fldiv@new_exp
 15588  0140' 3000               	movlw	0
 15589  0141' 00C9'              	movwf	i1___fldiv@new_exp+1
 15590  0142' 3000               	movlw	0
 15591  0143' 00BD'              	movwf	i1___fldiv@b+3
 15592  0144' 3000               	movlw	0
 15593  0145' 00BC'              	movwf	i1___fldiv@b+2
 15594  0146' 3000               	movlw	0
 15595  0147' 00BB'              	movwf	i1___fldiv@b+1
 15596  0148' 3000               	movlw	0
 15597  0149' 00BA'              	movwf	i1___fldiv@b
 15598  014A'                    i1l1424:
 15599  014A' 0020               	movlb	0	; select bank0
 15600  014B' 0849'              	movf	i1___fldiv@new_exp+1,w
 15601  014C' 3A80               	xorlw	128
 15602  014D' 00BE'              	movwf	??i1___fldiv
 15603  014E' 3080               	movlw	128
 15604  014F' 023E'              	subwf	??i1___fldiv,w
 15605  0150' 1D03               	skipz
 15606  0151' 2800'              	goto	u602_25
 15607  0152' 3001               	movlw	1
 15608  0153' 0248'              	subwf	i1___fldiv@new_exp,w
 15609  0154'                    u602_25:
 15610  0154' 1803               	skipnc
 15611  0155' 2800'              	goto	i1l1425
 15612  0156' 0020               	movlb	0	; select bank0
 15613  0157' 01C8'              	clrf	i1___fldiv@new_exp
 15614  0158' 01C9'              	clrf	i1___fldiv@new_exp+1
 15615  0159' 3000               	movlw	0
 15616  015A' 00BD'              	movwf	i1___fldiv@b+3
 15617  015B' 3000               	movlw	0
 15618  015C' 00BC'              	movwf	i1___fldiv@b+2
 15619  015D' 3000               	movlw	0
 15620  015E' 00BB'              	movwf	i1___fldiv@b+1
 15621  015F' 3000               	movlw	0
 15622  0160' 00BA'              	movwf	i1___fldiv@b
 15623  0161' 01C7'              	clrf	i1___fldiv@sign
 15624  0162'                    i1l1425:
 15625  0162' 0020               	movlb	0	; select bank0
 15626  0163' 0848'              	movf	i1___fldiv@new_exp,w
 15627  0164' 00CE'              	movwf	i1___fldiv@bexp
 15628  0165' 1C4E'              	btfss	i1___fldiv@bexp,0
 15629  0166' 2800'              	goto	i1l5731
 15630  0167' 17BC'              	bsf	i1___fldiv@b+2,7
 15631  0168' 2800'              	goto	i1l1427
 15632  0169'                    i1l5731:
 15633  0169' 307F               	movlw	127
 15634  016A' 00BE'              	movwf	??i1___fldiv
 15635  016B' 083E'              	movf	??i1___fldiv,w
 15636  016C' 05BC'              	andwf	i1___fldiv@b+2,f
 15637  016D'                    i1l1427:
 15638  016D' 364E'              	lsrf	i1___fldiv@bexp,w
 15639  016E' 00BD'              	movwf	i1___fldiv@b+3
 15640  016F' 2800'              	goto	L20
 15641  0170'                    __end_ofi1___fldiv:
 15642                           
 15643                           	psect	text45
 15644  0000'                    __ptext45:	
 15645 ;; *************** function i1___fladd *****************
 15646 ;; Defined at:
 15647 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 15648 ;; Parameters:    Size  Location     Type
 15649 ;;  b               4    0[BANK0 ] unsigned char 
 15650 ;;  a               4    4[BANK0 ] unsigned char 
 15651 ;; Auto vars:     Size  Location     Type
 15652 ;;  grs             1   19[BANK0 ] unsigned char 
 15653 ;;  bexp            1   18[BANK0 ] unsigned char 
 15654 ;;  aexp            1   17[BANK0 ] unsigned char 
 15655 ;;  signs           1   16[BANK0 ] unsigned char 
 15656 ;; Return value:  Size  Location     Type
 15657 ;;                  4    0[BANK0 ] unsigned char 
 15658 ;; Registers used:
 15659 ;;		wreg, status,2, status,0
 15660 ;; Tracked objects:
 15661 ;;		On entry : 0/0
 15662 ;;		On exit  : 0/0
 15663 ;;		Unchanged: 0/0
 15664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15665 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15666 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15667 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15668 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15669 ;;Total ram usage:       20 bytes
 15670 ;; Hardware stack levels used: 1
 15671 ;; This function calls:
 15672 ;;		Nothing
 15673 ;; This function is called by:
 15674 ;;		_command_interpreter
 15675 ;;		_pid
 15676 ;;		___flsub
 15677 ;;		i1_converter_settings
 15678 ;; This function uses a non-reentrant model
 15679 ;;
 15680                           
 15681  0000'                    i1___fladd:	
 15682                           ;psect for function i1___fladd
 15683                           
 15684                           
 15685                           ;incstack = 0
 15686                           ; Regs used in i1___fladd: [wreg+status,2+status,0]
 15687  0000' 0020               	movlb	0	; select bank0
 15688  0001' 0803'              	movf	i1___fladd@b+3,w
 15689  0002' 3980               	andlw	128
 15690  0003' 0090'              	movwf	i1___fladd@signs
 15691  0004' 3503'              	lslf	i1___fladd@b+3,w
 15692  0005' 0092'              	movwf	i1___fladd@bexp
 15693  0006' 1B82'              	btfsc	i1___fladd@b+2,7
 15694  0007' 1412'              	bsf	i1___fladd@bexp,0
 15695  0008' 0812'              	movf	i1___fladd@bexp,w
 15696  0009' 1903               	btfsc	3,2
 15697  000A' 2800'              	goto	i1l5245
 15698  000B' 0A12'              	incf	i1___fladd@bexp,w
 15699  000C' 1D03               	btfss	3,2
 15700  000D' 2800'              	goto	i1l5241
 15701  000E' 3000               	movlw	0
 15702  000F' 0083'              	movwf	i1___fladd@b+3
 15703  0010' 3000               	movlw	0
 15704  0011' 0082'              	movwf	i1___fladd@b+2
 15705  0012' 3000               	movlw	0
 15706  0013' 0081'              	movwf	i1___fladd@b+1
 15707  0014' 3000               	movlw	0
 15708  0015' 0080'              	movwf	i1___fladd@b
 15709  0016'                    i1l5241:
 15710  0016' 1782'              	bsf	i1___fladd@b+2,7
 15711  0017' 0183'              	clrf	i1___fladd@b+3
 15712  0018' 2800'              	goto	i1l5247
 15713  0019'                    i1l5245:
 15714  0019' 3000               	movlw	0
 15715  001A' 0083'              	movwf	i1___fladd@b+3
 15716  001B' 3000               	movlw	0
 15717  001C' 0082'              	movwf	i1___fladd@b+2
 15718  001D' 3000               	movlw	0
 15719  001E' 0081'              	movwf	i1___fladd@b+1
 15720  001F' 3000               	movlw	0
 15721  0020' 0080'              	movwf	i1___fladd@b
 15722  0021'                    i1l5247:
 15723  0021' 0807'              	movf	i1___fladd@a+3,w
 15724  0022' 3980               	andlw	128
 15725  0023' 0091'              	movwf	i1___fladd@aexp
 15726  0024' 0811'              	movf	i1___fladd@aexp,w
 15727  0025' 0610'              	xorwf	i1___fladd@signs,w
 15728  0026' 1D03               	btfss	3,2
 15729  0027' 1710'              	bsf	i1___fladd@signs,6
 15730  0028' 3507'              	lslf	i1___fladd@a+3,w
 15731  0029' 0091'              	movwf	i1___fladd@aexp
 15732  002A' 1B86'              	btfsc	i1___fladd@a+2,7
 15733  002B' 1411'              	bsf	i1___fladd@aexp,0
 15734  002C' 0811'              	movf	i1___fladd@aexp,w
 15735  002D' 1903               	btfsc	3,2
 15736  002E' 2800'              	goto	i1l5269
 15737  002F' 0A11'              	incf	i1___fladd@aexp,w
 15738  0030' 1D03               	btfss	3,2
 15739  0031' 2800'              	goto	i1l5265
 15740  0032' 3000               	movlw	0
 15741  0033' 0087'              	movwf	i1___fladd@a+3
 15742  0034' 3000               	movlw	0
 15743  0035' 0086'              	movwf	i1___fladd@a+2
 15744  0036' 3000               	movlw	0
 15745  0037' 0085'              	movwf	i1___fladd@a+1
 15746  0038' 3000               	movlw	0
 15747  0039' 0084'              	movwf	i1___fladd@a
 15748  003A'                    i1l5265:
 15749  003A' 1786'              	bsf	i1___fladd@a+2,7
 15750  003B' 0187'              	clrf	i1___fladd@a+3
 15751  003C' 2800'              	goto	i1l1347
 15752  003D'                    i1l5269:
 15753  003D' 3000               	movlw	0
 15754  003E' 0087'              	movwf	i1___fladd@a+3
 15755  003F' 3000               	movlw	0
 15756  0040' 0086'              	movwf	i1___fladd@a+2
 15757  0041' 3000               	movlw	0
 15758  0042' 0085'              	movwf	i1___fladd@a+1
 15759  0043' 3000               	movlw	0
 15760  0044' 0084'              	movwf	i1___fladd@a
 15761  0045'                    i1l1347:
 15762  0045' 0812'              	movf	i1___fladd@bexp,w
 15763  0046' 0211'              	subwf	i1___fladd@aexp,w
 15764  0047' 1803               	skipnc
 15765  0048' 2800'              	goto	i1l5305
 15766  0049' 1F10'              	btfss	i1___fladd@signs,6
 15767  004A' 2800'              	goto	i1l5275
 15768  004B' 3080               	movlw	128
 15769  004C' 0088'              	movwf	??i1___fladd
 15770  004D' 0808'              	movf	??i1___fladd,w
 15771  004E' 0690'              	xorwf	i1___fladd@signs,f
 15772  004F'                    i1l5275:
 15773  004F' 0812'              	movf	i1___fladd@bexp,w
 15774  0050' 0093'              	movwf	i1___fladd@grs
 15775  0051' 0811'              	movf	i1___fladd@aexp,w
 15776  0052' 0092'              	movwf	i1___fladd@bexp
 15777  0053' 0813'              	movf	i1___fladd@grs,w
 15778  0054' 0091'              	movwf	i1___fladd@aexp
 15779  0055' 0800'              	movf	i1___fladd@b,w
 15780  0056' 0093'              	movwf	i1___fladd@grs
 15781  0057' 0804'              	movf	i1___fladd@a,w
 15782  0058' 0080'              	movwf	i1___fladd@b
 15783  0059' 0813'              	movf	i1___fladd@grs,w
 15784  005A' 0084'              	movwf	i1___fladd@a
 15785  005B' 0801'              	movf	i1___fladd@b+1,w
 15786  005C' 0093'              	movwf	i1___fladd@grs
 15787  005D' 0805'              	movf	i1___fladd@a+1,w
 15788  005E' 0081'              	movwf	i1___fladd@b+1
 15789  005F' 0813'              	movf	i1___fladd@grs,w
 15790  0060' 0085'              	movwf	i1___fladd@a+1
 15791  0061' 0802'              	movf	i1___fladd@b+2,w
 15792  0062' 0093'              	movwf	i1___fladd@grs
 15793  0063' 0806'              	movf	i1___fladd@a+2,w
 15794  0064' 0082'              	movwf	i1___fladd@b+2
 15795  0065' 0813'              	movf	i1___fladd@grs,w
 15796  0066' 0086'              	movwf	i1___fladd@a+2
 15797  0067' 0803'              	movf	i1___fladd@b+3,w
 15798  0068' 0093'              	movwf	i1___fladd@grs
 15799  0069' 0807'              	movf	i1___fladd@a+3,w
 15800  006A' 0083'              	movwf	i1___fladd@b+3
 15801  006B' 0813'              	movf	i1___fladd@grs,w
 15802  006C' 0087'              	movwf	i1___fladd@a+3
 15803  006D'                    i1l5305:
 15804  006D' 0193'              	clrf	i1___fladd@grs
 15805  006E' 0811'              	movf	i1___fladd@aexp,w
 15806  006F' 0088'              	movwf	??i1___fladd
 15807  0070' 0189'              	clrf	??i1___fladd+1
 15808  0071' 0809'              	movf	??i1___fladd+1,w
 15809  0072' 008B'              	movwf	??i1___fladd+3
 15810  0073' 0812'              	movf	i1___fladd@bexp,w
 15811  0074' 0208'              	subwf	??i1___fladd,w
 15812  0075' 008A'              	movwf	??i1___fladd+2
 15813  0076' 1C03               	skipc
 15814  0077' 038B'              	decf	??i1___fladd+3,f
 15815  0078' 080B'              	movf	??i1___fladd+3,w
 15816  0079' 3A80               	xorlw	128
 15817  007A' 008C'              	movwf	??i1___fladd+4
 15818  007B' 3080               	movlw	128
 15819  007C' 020C'              	subwf	??i1___fladd+4,w
 15820  007D' 1D03               	skipz
 15821  007E' 2800'              	goto	u515_25
 15822  007F' 301A               	movlw	26
 15823  0080' 020A'              	subwf	??i1___fladd+2,w
 15824  0081'                    u515_25:
 15825  0081' 1C03               	skipc
 15826  0082' 2800'              	goto	i1l5323
 15827  0083' 0020               	movlb	0	; select bank0
 15828  0084' 0803'              	movf	i1___fladd@b+3,w
 15829  0085' 0402'              	iorwf	i1___fladd@b+2,w
 15830  0086' 0401'              	iorwf	i1___fladd@b+1,w
 15831  0087' 0400'              	iorwf	i1___fladd@b,w
 15832  0088' 1903               	btfsc	3,2
 15833  0089' 2800'              	goto	u516_20
 15834  008A' 3001               	movlw	1
 15835  008B' 2800'              	goto	u517_20
 15836  008C'                    u516_20:
 15837  008C' 3000               	movlw	0
 15838  008D'                    u517_20:
 15839  008D' 0093'              	movwf	i1___fladd@grs
 15840  008E' 3000               	movlw	0
 15841  008F' 0083'              	movwf	i1___fladd@b+3
 15842  0090' 3000               	movlw	0
 15843  0091' 0082'              	movwf	i1___fladd@b+2
 15844  0092' 3000               	movlw	0
 15845  0093' 0081'              	movwf	i1___fladd@b+1
 15846  0094' 3000               	movlw	0
 15847  0095' 0080'              	movwf	i1___fladd@b
 15848  0096' 0811'              	movf	i1___fladd@aexp,w
 15849  0097' 0092'              	movwf	i1___fladd@bexp
 15850  0098' 2800'              	goto	i1l1351
 15851  0099'                    i1l1353:
 15852  0099' 1C13'              	btfss	i1___fladd@grs,0
 15853  009A' 2800'              	goto	i1l5313
 15854  009B' 3613'              	lsrf	i1___fladd@grs,w
 15855  009C' 3801               	iorlw	1
 15856  009D' 0093'              	movwf	i1___fladd@grs
 15857  009E' 2800'              	goto	i1l5315
 15858  009F'                    i1l5313:
 15859  009F' 1003               	clrc
 15860  00A0' 0C93'              	rrf	i1___fladd@grs,f
 15861  00A1'                    i1l5315:
 15862  00A1' 1800'              	btfsc	i1___fladd@b,0
 15863  00A2' 1793'              	bsf	i1___fladd@grs,7
 15864  00A3' 3001               	movlw	1
 15865  00A4' 0088'              	movwf	??i1___fladd
 15866  00A5'                    u520_25:
 15867  00A5' 3783'              	asrf	i1___fladd@b+3,f
 15868  00A6' 0C82'              	rrf	i1___fladd@b+2,f
 15869  00A7' 0C81'              	rrf	i1___fladd@b+1,f
 15870  00A8' 0C80'              	rrf	i1___fladd@b,f
 15871  00A9' 0B80'              	decfsz	??i1___fladd& (0+127),f
 15872  00AA' 2800'              	goto	u520_25
 15873  00AB' 3001               	movlw	1
 15874  00AC' 0088'              	movwf	??i1___fladd
 15875  00AD' 0808'              	movf	??i1___fladd,w
 15876  00AE' 0792'              	addwf	i1___fladd@bexp,f
 15877  00AF'                    i1l5323:
 15878  00AF' 0020               	movlb	0	; select bank0
 15879  00B0' 0811'              	movf	i1___fladd@aexp,w
 15880  00B1' 0212'              	subwf	i1___fladd@bexp,w
 15881  00B2' 1C03               	skipc
 15882  00B3' 2800'              	goto	i1l1353
 15883  00B4'                    i1l1351:
 15884  00B4' 1B10'              	btfsc	i1___fladd@signs,6
 15885  00B5' 2800'              	goto	i1l5349
 15886  00B6' 0812'              	movf	i1___fladd@bexp,w
 15887  00B7' 1D03               	btfss	3,2
 15888  00B8' 2800'              	goto	i1l5331
 15889  00B9' 3000               	movlw	0
 15890  00BA' 0083'              	movwf	?i1___fladd+3
 15891  00BB' 3000               	movlw	0
 15892  00BC' 0082'              	movwf	?i1___fladd+2
 15893  00BD' 3000               	movlw	0
 15894  00BE' 0081'              	movwf	?i1___fladd+1
 15895  00BF' 3000               	movlw	0
 15896  00C0' 0080'              	movwf	?i1___fladd
 15897  00C1' 0008               	return
 15898  00C2'                    i1l5331:
 15899  00C2' 0804'              	movf	i1___fladd@a,w
 15900  00C3' 0780'              	addwf	i1___fladd@b,f
 15901  00C4' 0805'              	movf	i1___fladd@a+1,w
 15902  00C5' 3D81'              	addwfc	i1___fladd@b+1,f
 15903  00C6' 0806'              	movf	i1___fladd@a+2,w
 15904  00C7' 3D82'              	addwfc	i1___fladd@b+2,f
 15905  00C8' 0807'              	movf	i1___fladd@a+3,w
 15906  00C9' 3D83'              	addwfc	i1___fladd@b+3,f
 15907  00CA' 1C03'              	btfss	i1___fladd@b+3,0
 15908  00CB' 2800'              	goto	i1l5383
 15909  00CC' 1C13'              	btfss	i1___fladd@grs,0
 15910  00CD' 2800'              	goto	i1l5339
 15911  00CE' 3613'              	lsrf	i1___fladd@grs,w
 15912  00CF' 3801               	iorlw	1
 15913  00D0' 0093'              	movwf	i1___fladd@grs
 15914  00D1' 2800'              	goto	i1l5341
 15915  00D2'                    i1l5339:
 15916  00D2' 1003               	clrc
 15917  00D3' 0C93'              	rrf	i1___fladd@grs,f
 15918  00D4'                    i1l5341:
 15919  00D4' 1800'              	btfsc	i1___fladd@b,0
 15920  00D5' 1793'              	bsf	i1___fladd@grs,7
 15921  00D6' 3001               	movlw	1
 15922  00D7' 0088'              	movwf	??i1___fladd
 15923  00D8'                    u527_25:
 15924  00D8' 3783'              	asrf	i1___fladd@b+3,f
 15925  00D9' 0C82'              	rrf	i1___fladd@b+2,f
 15926  00DA' 0C81'              	rrf	i1___fladd@b+1,f
 15927  00DB' 0C80'              	rrf	i1___fladd@b,f
 15928  00DC' 0B80'              	decfsz	??i1___fladd& (0+127),f
 15929  00DD' 2800'              	goto	u527_25
 15930  00DE' 3001               	movlw	1
 15931  00DF' 0088'              	movwf	??i1___fladd
 15932  00E0' 0808'              	movf	??i1___fladd,w
 15933  00E1' 0792'              	addwf	i1___fladd@bexp,f
 15934  00E2' 2800'              	goto	i1l5383
 15935  00E3'                    i1l5349:
 15936  00E3' 0803'              	movf	i1___fladd@b+3,w
 15937  00E4' 3A80               	xorlw	128
 15938  00E5' 0088'              	movwf	??i1___fladd
 15939  00E6' 0807'              	movf	i1___fladd@a+3,w
 15940  00E7' 3A80               	xorlw	128
 15941  00E8' 0208'              	subwf	??i1___fladd,w
 15942  00E9' 1D03               	skipz
 15943  00EA' 2800'              	goto	u528_23
 15944  00EB' 0806'              	movf	i1___fladd@a+2,w
 15945  00EC' 0202'              	subwf	i1___fladd@b+2,w
 15946  00ED' 1D03               	skipz
 15947  00EE' 2800'              	goto	u528_23
 15948  00EF' 0805'              	movf	i1___fladd@a+1,w
 15949  00F0' 0201'              	subwf	i1___fladd@b+1,w
 15950  00F1' 1D03               	skipz
 15951  00F2' 2800'              	goto	u528_23
 15952  00F3' 0804'              	movf	i1___fladd@a,w
 15953  00F4' 0200'              	subwf	i1___fladd@b,w
 15954  00F5'                    u528_23:
 15955  00F5' 1803               	skipnc
 15956  00F6' 2800'              	goto	i1l5359
 15957  00F7' 30FF               	movlw	255
 15958  00F8' 0088'              	movwf	??i1___fladd
 15959  00F9' 30FF               	movlw	255
 15960  00FA' 0089'              	movwf	??i1___fladd+1
 15961  00FB' 30FF               	movlw	255
 15962  00FC' 008A'              	movwf	??i1___fladd+2
 15963  00FD' 30FF               	movlw	255
 15964  00FE' 008B'              	movwf	??i1___fladd+3
 15965  00FF' 0800'              	movf	i1___fladd@b,w
 15966  0100' 0204'              	subwf	i1___fladd@a,w
 15967  0101' 008C'              	movwf	??i1___fladd+4
 15968  0102' 0801'              	movf	i1___fladd@b+1,w
 15969  0103' 3B05'              	subwfb	i1___fladd@a+1,w
 15970  0104' 008D'              	movwf	??i1___fladd+5
 15971  0105' 0802'              	movf	i1___fladd@b+2,w
 15972  0106' 3B06'              	subwfb	i1___fladd@a+2,w
 15973  0107' 008E'              	movwf	??i1___fladd+6
 15974  0108' 0803'              	movf	i1___fladd@b+3,w
 15975  0109' 3B07'              	subwfb	i1___fladd@a+3,w
 15976  010A' 008F'              	movwf	??i1___fladd+7
 15977  010B' 080C'              	movf	??i1___fladd+4,w
 15978  010C' 0788'              	addwf	??i1___fladd,f
 15979  010D' 080D'              	movf	??i1___fladd+5,w
 15980  010E' 3D89'              	addwfc	??i1___fladd+1,f
 15981  010F' 080E'              	movf	??i1___fladd+6,w
 15982  0110' 3D8A'              	addwfc	??i1___fladd+2,f
 15983  0111' 080F'              	movf	??i1___fladd+7,w
 15984  0112' 3D8B'              	addwfc	??i1___fladd+3,f
 15985  0113' 080B'              	movf	??i1___fladd+3,w
 15986  0114' 0083'              	movwf	i1___fladd@b+3
 15987  0115' 080A'              	movf	??i1___fladd+2,w
 15988  0116' 0082'              	movwf	i1___fladd@b+2
 15989  0117' 0809'              	movf	??i1___fladd+1,w
 15990  0118' 0081'              	movwf	i1___fladd@b+1
 15991  0119' 0808'              	movf	??i1___fladd,w
 15992  011A' 0080'              	movwf	i1___fladd@b
 15993  011B' 3080               	movlw	128
 15994  011C' 0088'              	movwf	??i1___fladd
 15995  011D' 0808'              	movf	??i1___fladd,w
 15996  011E' 0690'              	xorwf	i1___fladd@signs,f
 15997  011F' 0993'              	comf	i1___fladd@grs,f
 15998  0120' 0A93'              	incf	i1___fladd@grs,f
 15999  0121' 0813'              	movf	i1___fladd@grs,w
 16000  0122' 1D03               	btfss	3,2
 16001  0123' 2800'              	goto	i1l1368
 16002  0124' 3001               	movlw	1
 16003  0125' 0780'              	addwf	i1___fladd@b,f
 16004  0126' 3000               	movlw	0
 16005  0127' 3D81'              	addwfc	i1___fladd@b+1,f
 16006  0128' 3000               	movlw	0
 16007  0129' 3D82'              	addwfc	i1___fladd@b+2,f
 16008  012A' 3000               	movlw	0
 16009  012B' 3D83'              	addwfc	i1___fladd@b+3,f
 16010  012C' 2800'              	goto	i1l1368
 16011  012D'                    i1l5359:
 16012  012D' 0804'              	movf	i1___fladd@a,w
 16013  012E' 0280'              	subwf	i1___fladd@b,f
 16014  012F' 0805'              	movf	i1___fladd@a+1,w
 16015  0130' 3B81'              	subwfb	i1___fladd@b+1,f
 16016  0131' 0806'              	movf	i1___fladd@a+2,w
 16017  0132' 3B82'              	subwfb	i1___fladd@b+2,f
 16018  0133' 0807'              	movf	i1___fladd@a+3,w
 16019  0134' 3B83'              	subwfb	i1___fladd@b+3,f
 16020  0135'                    i1l1368:
 16021  0135' 0803'              	movf	i1___fladd@b+3,w
 16022  0136' 0402'              	iorwf	i1___fladd@b+2,w
 16023  0137' 0401'              	iorwf	i1___fladd@b+1,w
 16024  0138' 0400'              	iorwf	i1___fladd@b,w
 16025  0139' 1D03               	skipz
 16026  013A' 2800'              	goto	i1l5381
 16027  013B' 0813'              	movf	i1___fladd@grs,w
 16028  013C' 1D03               	btfss	3,2
 16029  013D' 2800'              	goto	i1l5381
 16030  013E' 3000               	movlw	0
 16031  013F' 0083'              	movwf	?i1___fladd+3
 16032  0140' 3000               	movlw	0
 16033  0141' 0082'              	movwf	?i1___fladd+2
 16034  0142' 3000               	movlw	0
 16035  0143' 0081'              	movwf	?i1___fladd+1
 16036  0144' 3000               	movlw	0
 16037  0145' 0080'              	movwf	?i1___fladd
 16038  0146' 0008               	return
 16039  0147'                    i1l5367:
 16040  0147' 3001               	movlw	1
 16041  0148'                    u532_25:
 16042  0148' 3580'              	lslf	i1___fladd@b,f
 16043  0149' 0D81'              	rlf	i1___fladd@b+1,f
 16044  014A' 0D82'              	rlf	i1___fladd@b+2,f
 16045  014B' 0D83'              	rlf	i1___fladd@b+3,f
 16046  014C' 0B89               	decfsz	9,f
 16047  014D' 2800'              	goto	u532_25
 16048  014E' 1B93'              	btfsc	i1___fladd@grs,7
 16049  014F' 1400'              	bsf	i1___fladd@b,0
 16050  0150' 1C13'              	btfss	i1___fladd@grs,0
 16051  0151' 2800'              	goto	i1l5375
 16052  0152' 1403               	setc
 16053  0153' 2800'              	goto	L21
 16054  0154'                    i1l5375:
 16055  0154' 1003               	clrc
 16056  0155'                    L21:
 16057  0155' 0D93'              	rlf	i1___fladd@grs,f
 16058  0156' 0812'              	movf	i1___fladd@bexp,w
 16059  0157' 1903               	btfsc	3,2
 16060  0158' 2800'              	goto	i1l5381
 16061  0159' 3001               	movlw	1
 16062  015A' 0292'              	subwf	i1___fladd@bexp,f
 16063  015B'                    i1l5381:
 16064  015B' 1F82'              	btfss	i1___fladd@b+2,7
 16065  015C' 2800'              	goto	i1l5367
 16066  015D'                    i1l5383:
 16067  015D' 0191'              	clrf	i1___fladd@aexp
 16068  015E' 1F93'              	btfss	i1___fladd@grs,7
 16069  015F' 2800'              	goto	i1l5393
 16070  0160' 0813'              	movf	i1___fladd@grs,w
 16071  0161' 397F               	andlw	127
 16072  0162' 1903               	btfsc	3,2
 16073  0163' 1800'              	btfsc	i1___fladd@b,0
 16074  0164' 2800'              	goto	i1l5389
 16075  0165' 2800'              	goto	i1l5393
 16076  0166'                    i1l5389:
 16077  0166' 0191'              	clrf	i1___fladd@aexp
 16078  0167' 0A91'              	incf	i1___fladd@aexp,f
 16079  0168'                    i1l5393:
 16080  0168' 0811'              	movf	i1___fladd@aexp,w
 16081  0169' 1903               	btfsc	3,2
 16082  016A' 2800'              	goto	i1l1381
 16083  016B' 3001               	movlw	1
 16084  016C' 0780'              	addwf	i1___fladd@b,f
 16085  016D' 3000               	movlw	0
 16086  016E' 3D81'              	addwfc	i1___fladd@b+1,f
 16087  016F' 3000               	movlw	0
 16088  0170' 3D82'              	addwfc	i1___fladd@b+2,f
 16089  0171' 3000               	movlw	0
 16090  0172' 3D83'              	addwfc	i1___fladd@b+3,f
 16091  0173' 1C03'              	btfss	i1___fladd@b+3,0
 16092  0174' 2800'              	goto	i1l1381
 16093  0175' 0800'              	movf	i1___fladd@b,w
 16094  0176' 0088'              	movwf	??i1___fladd
 16095  0177' 0801'              	movf	i1___fladd@b+1,w
 16096  0178' 0089'              	movwf	??i1___fladd+1
 16097  0179' 0802'              	movf	i1___fladd@b+2,w
 16098  017A' 008A'              	movwf	??i1___fladd+2
 16099  017B' 0803'              	movf	i1___fladd@b+3,w
 16100  017C' 008B'              	movwf	??i1___fladd+3
 16101  017D' 3001               	movlw	1
 16102  017E' 008C'              	movwf	??i1___fladd+4
 16103  017F'                    u542_25:
 16104  017F' 378B'              	asrf	??i1___fladd+3,f
 16105  0180' 0C8A'              	rrf	??i1___fladd+2,f
 16106  0181' 0C89'              	rrf	??i1___fladd+1,f
 16107  0182' 0C88'              	rrf	??i1___fladd,f
 16108  0183' 0B8C'              	decfsz	??i1___fladd+4,f
 16109  0184' 2800'              	goto	u542_25
 16110  0185' 080B'              	movf	??i1___fladd+3,w
 16111  0186' 0083'              	movwf	i1___fladd@b+3
 16112  0187' 080A'              	movf	??i1___fladd+2,w
 16113  0188' 0082'              	movwf	i1___fladd@b+2
 16114  0189' 0809'              	movf	??i1___fladd+1,w
 16115  018A' 0081'              	movwf	i1___fladd@b+1
 16116  018B' 0808'              	movf	??i1___fladd,w
 16117  018C' 0080'              	movwf	i1___fladd@b
 16118  018D' 0A12'              	incf	i1___fladd@bexp,w
 16119  018E' 1903               	btfsc	3,2
 16120  018F' 2800'              	goto	i1l1381
 16121  0190' 3001               	movlw	1
 16122  0191' 0088'              	movwf	??i1___fladd
 16123  0192' 0808'              	movf	??i1___fladd,w
 16124  0193' 0792'              	addwf	i1___fladd@bexp,f
 16125  0194'                    i1l1381:
 16126  0194' 0A12'              	incf	i1___fladd@bexp,w
 16127  0195' 1D03               	btfss	3,2
 16128  0196' 0812'              	movf	i1___fladd@bexp,w
 16129  0197' 1D03               	btfss	3,2
 16130  0198' 2800'              	goto	i1l5411
 16131  0199' 3000               	movlw	0
 16132  019A' 0083'              	movwf	i1___fladd@b+3
 16133  019B' 3000               	movlw	0
 16134  019C' 0082'              	movwf	i1___fladd@b+2
 16135  019D' 3000               	movlw	0
 16136  019E' 0081'              	movwf	i1___fladd@b+1
 16137  019F' 3000               	movlw	0
 16138  01A0' 0080'              	movwf	i1___fladd@b
 16139  01A1' 0812'              	movf	i1___fladd@bexp,w
 16140  01A2' 1903               	btfsc	3,2
 16141  01A3' 0190'              	clrf	i1___fladd@signs
 16142  01A4'                    i1l5411:
 16143  01A4' 1C12'              	btfss	i1___fladd@bexp,0
 16144  01A5' 2800'              	goto	i1l5415
 16145  01A6' 1782'              	bsf	i1___fladd@b+2,7
 16146  01A7' 2800'              	goto	i1l1389
 16147  01A8'                    i1l5415:
 16148  01A8' 307F               	movlw	127
 16149  01A9' 0088'              	movwf	??i1___fladd
 16150  01AA' 0808'              	movf	??i1___fladd,w
 16151  01AB' 0582'              	andwf	i1___fladd@b+2,f
 16152  01AC'                    i1l1389:
 16153  01AC' 3612'              	lsrf	i1___fladd@bexp,w
 16154  01AD' 0083'              	movwf	i1___fladd@b+3
 16155  01AE' 1F90'              	btfss	i1___fladd@signs,7
 16156  01AF' 0008               	return
 16157  01B0' 1783'              	bsf	i1___fladd@b+3,7
 16158  01B1' 0008               	return
 16159  01B2'                    __end_ofi1___fladd:
 16160                           
 16161                           	psect	text46
 16162  0000'                    __ptext46:	
 16163 ;; *************** function i1_Cell_ON *****************
 16164 ;; Defined at:
 16165 ;;		line 508 in file "charger_discharger.c"
 16166 ;; Parameters:    Size  Location     Type
 16167 ;;		None
 16168 ;; Auto vars:     Size  Location     Type
 16169 ;;		None
 16170 ;; Return value:  Size  Location     Type
 16171 ;;                  1    wreg      void 
 16172 ;; Registers used:
 16173 ;;		wreg, status,2, status,0
 16174 ;; Tracked objects:
 16175 ;;		On entry : 0/0
 16176 ;;		On exit  : 0/0
 16177 ;;		Unchanged: 0/0
 16178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16181 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16182 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16183 ;;Total ram usage:        1 bytes
 16184 ;; Hardware stack levels used: 1
 16185 ;; This function calls:
 16186 ;;		Nothing
 16187 ;; This function is called by:
 16188 ;;		i1_converter_settings
 16189 ;; This function uses a non-reentrant model
 16190 ;;
 16191                           
 16192  0000'                    i1_Cell_ON:	
 16193                           ;psect for function i1_Cell_ON
 16194                           
 16195                           
 16196                           ;charger_discharger.c: 510:     if (cell_count == 1)
 16197                           
 16198                           ;incstack = 0
 16199                           ; Regs used in i1_Cell_ON: [wreg+status,2+status,0]
 16200  0000' 0023               	movlb	3	; select bank3
 16201  0001' 0300'              	decf	_cell_count^(0+384),w
 16202  0002' 1D03               	btfss	3,2
 16203  0003' 2800'              	goto	i1l5541
 16204                           
 16205                           ;charger_discharger.c: 511:     {;charger_discharger.c: 512:         { RB2 = 1; };
 16206  0004' 0020               	movlb	0	; select bank0
 16207  0005' 150D               	bsf	13,2	;volatile
 16208                           
 16209                           ;charger_discharger.c: 513:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16210  0006' 3068               	movlw	104
 16211  0007' 0080'              	movwf	??i1_Cell_ON
 16212  0008' 30E4               	movlw	228
 16213  0009'                    u813_27:
 16214  0009' 0B89               	decfsz	9,f
 16215  000A' 2800'              	goto	u813_27
 16216  000B' 0B80'              	decfsz	??i1_Cell_ON,f
 16217  000C' 2800'              	goto	u813_27
 16218  000D' 3200               	nop2
 16219                           
 16220                           ;charger_discharger.c: 514:         { RB3 = 0; };
 16221  000E' 0020               	movlb	0	; select bank0
 16222  000F' 118D               	bcf	13,3	;volatile
 16223                           
 16224                           ;charger_discharger.c: 515:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16225  0010' 3068               	movlw	104
 16226  0011' 0080'              	movwf	??i1_Cell_ON
 16227  0012' 30E4               	movlw	228
 16228  0013'                    u814_27:
 16229  0013' 0B89               	decfsz	9,f
 16230  0014' 2800'              	goto	u814_27
 16231  0015' 0B80'              	decfsz	??i1_Cell_ON,f
 16232  0016' 2800'              	goto	u814_27
 16233  0017' 3200               	nop2
 16234  0018' 2800'              	goto	i1l5537
 16235  0019'                    i1l5543:
 16236                           
 16237                           ;charger_discharger.c: 521:     {;charger_discharger.c: 522:         { RB2 = 0; };
 16238  0019' 0020               	movlb	0	; select bank0
 16239  001A' 110D               	bcf	13,2	;volatile
 16240                           
 16241                           ;charger_discharger.c: 523:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16242  001B' 3068               	movlw	104
 16243  001C' 0080'              	movwf	??i1_Cell_ON
 16244  001D' 30E4               	movlw	228
 16245  001E'                    u817_27:
 16246  001E' 0B89               	decfsz	9,f
 16247  001F' 2800'              	goto	u817_27
 16248  0020' 0B80'              	decfsz	??i1_Cell_ON,f
 16249  0021' 2800'              	goto	u817_27
 16250  0022' 3200               	nop2
 16251                           
 16252                           ;charger_discharger.c: 524:         { RB3 = 1; };
 16253  0023' 0020               	movlb	0	; select bank0
 16254  0024' 158D               	bsf	13,3	;volatile
 16255                           
 16256                           ;charger_discharger.c: 525:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16257  0025' 3068               	movlw	104
 16258  0026' 0080'              	movwf	??i1_Cell_ON
 16259  0027' 30E4               	movlw	228
 16260  0028'                    u818_27:
 16261  0028' 0B89               	decfsz	9,f
 16262  0029' 2800'              	goto	u818_27
 16263  002A' 0B80'              	decfsz	??i1_Cell_ON,f
 16264  002B' 2800'              	goto	u818_27
 16265  002C' 3200               	nop2
 16266  002D'                    i1l5537:
 16267                           
 16268                           ;charger_discharger.c: 516:         { RB4 = 0; };
 16269  002D' 0020               	movlb	0	; select bank0
 16270  002E' 120D               	bcf	13,4	;volatile
 16271                           
 16272                           ;charger_discharger.c: 517:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16273  002F' 3068               	movlw	104
 16274  0030' 0080'              	movwf	??i1_Cell_ON
 16275  0031' 30E4               	movlw	228
 16276  0032'                    u815_27:
 16277  0032' 0B89               	decfsz	9,f
 16278  0033' 2800'              	goto	u815_27
 16279  0034' 0B80'              	decfsz	??i1_Cell_ON,f
 16280  0035' 2800'              	goto	u815_27
 16281  0036' 3200               	nop2
 16282                           
 16283                           ;charger_discharger.c: 518:         { RB5 = 0; };
 16284  0037' 0020               	movlb	0	; select bank0
 16285  0038' 128D               	bcf	13,5	;volatile
 16286                           
 16287                           ;charger_discharger.c: 519:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16288  0039' 3068               	movlw	104
 16289  003A' 0080'              	movwf	??i1_Cell_ON
 16290  003B' 30E4               	movlw	228
 16291  003C'                    u816_27:
 16292  003C' 0B89               	decfsz	9,f
 16293  003D' 2800'              	goto	u816_27
 16294  003E' 0B80'              	decfsz	??i1_Cell_ON,f
 16295  003F' 2800'              	goto	u816_27
 16296  0040' 3200               	nop2
 16297                           
 16298                           ;charger_discharger.c: 520:     }else if (cell_count == 2)
 16299  0041' 0008               	return
 16300  0042'                    i1l5541:
 16301  0042' 3002               	movlw	2
 16302  0043' 0600'              	xorwf	_cell_count^(0+384),w
 16303  0044' 1903               	btfsc	3,2
 16304  0045' 2800'              	goto	i1l5543
 16305  0046' 3003               	movlw	3
 16306  0047' 0600'              	xorwf	_cell_count^(0+384),w
 16307  0048' 1D03               	btfss	3,2
 16308  0049' 2800'              	goto	i1l5565
 16309                           
 16310                           ;charger_discharger.c: 531:     {;charger_discharger.c: 532:         { RB2 = 0; };
 16311  004A' 0020               	movlb	0	; select bank0
 16312  004B' 110D               	bcf	13,2	;volatile
 16313                           
 16314                           ;charger_discharger.c: 533:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16315  004C' 3068               	movlw	104
 16316  004D' 0080'              	movwf	??i1_Cell_ON
 16317  004E' 30E4               	movlw	228
 16318  004F'                    u819_27:
 16319  004F' 0B89               	decfsz	9,f
 16320  0050' 2800'              	goto	u819_27
 16321  0051' 0B80'              	decfsz	??i1_Cell_ON,f
 16322  0052' 2800'              	goto	u819_27
 16323  0053' 3200               	nop2
 16324                           
 16325                           ;charger_discharger.c: 534:         { RB3 = 0; };
 16326  0054' 0020               	movlb	0	; select bank0
 16327  0055' 118D               	bcf	13,3	;volatile
 16328                           
 16329                           ;charger_discharger.c: 535:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16330  0056' 3068               	movlw	104
 16331  0057' 0080'              	movwf	??i1_Cell_ON
 16332  0058' 30E4               	movlw	228
 16333  0059'                    u820_27:
 16334  0059' 0B89               	decfsz	9,f
 16335  005A' 2800'              	goto	u820_27
 16336  005B' 0B80'              	decfsz	??i1_Cell_ON,f
 16337  005C' 2800'              	goto	u820_27
 16338  005D' 3200               	nop2
 16339                           
 16340                           ;charger_discharger.c: 536:         { RB4 = 1; };
 16341  005E' 0020               	movlb	0	; select bank0
 16342  005F' 160D               	bsf	13,4	;volatile
 16343                           
 16344                           ;charger_discharger.c: 537:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16345  0060' 3068               	movlw	104
 16346  0061' 0080'              	movwf	??i1_Cell_ON
 16347  0062' 30E4               	movlw	228
 16348  0063'                    u821_27:
 16349  0063' 0B89               	decfsz	9,f
 16350  0064' 2800'              	goto	u821_27
 16351  0065' 0B80'              	decfsz	??i1_Cell_ON,f
 16352  0066' 2800'              	goto	u821_27
 16353  0067' 3200               	nop2
 16354                           
 16355                           ;charger_discharger.c: 538:         { RB5 = 0; };
 16356  0068' 0020               	movlb	0	; select bank0
 16357  0069' 128D               	bcf	13,5	;volatile
 16358                           
 16359                           ;charger_discharger.c: 539:     }else if (cell_count == 4)
 16360  006A' 0008               	return
 16361  006B'                    i1l5565:
 16362  006B' 3004               	movlw	4
 16363  006C' 0600'              	xorwf	_cell_count^(0+384),w
 16364  006D' 1D03               	btfss	3,2
 16365  006E' 0008               	return
 16366                           
 16367                           ;charger_discharger.c: 540:     {;charger_discharger.c: 541:         { RB2 = 0; };
 16368  006F' 0020               	movlb	0	; select bank0
 16369  0070' 110D               	bcf	13,2	;volatile
 16370                           
 16371                           ;charger_discharger.c: 542:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16372  0071' 3068               	movlw	104
 16373  0072' 0080'              	movwf	??i1_Cell_ON
 16374  0073' 30E4               	movlw	228
 16375  0074'                    u822_27:
 16376  0074' 0B89               	decfsz	9,f
 16377  0075' 2800'              	goto	u822_27
 16378  0076' 0B80'              	decfsz	??i1_Cell_ON,f
 16379  0077' 2800'              	goto	u822_27
 16380  0078' 3200               	nop2
 16381                           
 16382                           ;charger_discharger.c: 543:         { RB3 = 0; };
 16383  0079' 0020               	movlb	0	; select bank0
 16384  007A' 118D               	bcf	13,3	;volatile
 16385                           
 16386                           ;charger_discharger.c: 544:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16387  007B' 3068               	movlw	104
 16388  007C' 0080'              	movwf	??i1_Cell_ON
 16389  007D' 30E4               	movlw	228
 16390  007E'                    u823_27:
 16391  007E' 0B89               	decfsz	9,f
 16392  007F' 2800'              	goto	u823_27
 16393  0080' 0B80'              	decfsz	??i1_Cell_ON,f
 16394  0081' 2800'              	goto	u823_27
 16395  0082' 3200               	nop2
 16396                           
 16397                           ;charger_discharger.c: 545:         { RB4 = 0; };
 16398  0083' 0020               	movlb	0	; select bank0
 16399  0084' 120D               	bcf	13,4	;volatile
 16400                           
 16401                           ;charger_discharger.c: 546:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16402  0085' 3068               	movlw	104
 16403  0086' 0080'              	movwf	??i1_Cell_ON
 16404  0087' 30E4               	movlw	228
 16405  0088'                    u824_27:
 16406  0088' 0B89               	decfsz	9,f
 16407  0089' 2800'              	goto	u824_27
 16408  008A' 0B80'              	decfsz	??i1_Cell_ON,f
 16409  008B' 2800'              	goto	u824_27
 16410  008C' 3200               	nop2
 16411                           
 16412                           ;charger_discharger.c: 547:         { RB5 = 1; };
 16413  008D' 0020               	movlb	0	; select bank0
 16414  008E' 168D               	bsf	13,5	;volatile
 16415                           
 16416                           ;charger_discharger.c: 548:         _delay((unsigned long)((10)*(32000000/4000.0)));
 16417  008F' 3068               	movlw	104
 16418  0090' 0080'              	movwf	??i1_Cell_ON
 16419  0091' 30E4               	movlw	228
 16420  0092'                    u825_27:
 16421  0092' 0B89               	decfsz	9,f
 16422  0093' 2800'              	goto	u825_27
 16423  0094' 0B80'              	decfsz	??i1_Cell_ON,f
 16424  0095' 2800'              	goto	u825_27
 16425  0096' 3200               	nop2
 16426  0097' 0008               	return
 16427  0098'                    __end_ofi1_Cell_ON:
 16428                           
 16429                           	psect	text47
 16430  0000'                    __ptext47:	
 16431 ;; *************** function i1_UART_send_some_bytes *****************
 16432 ;; Defined at:
 16433 ;;		line 469 in file "charger_discharger.c"
 16434 ;; Parameters:    Size  Location     Type
 16435 ;;  length          1    wreg     unsigned char 
 16436 ;;  data            2    1[COMMON] PTR unsigned char 
 16437 ;;		 -> NULL(0), log_data(15), converter_configuration(14), test_configuration(17), 
 16438 ;;		 -> basic_configuration(17), command_interpreter@calc_checksum(2), 
 16439 ;; Auto vars:     Size  Location     Type
 16440 ;;  length          1    3[COMMON] unsigned char 
 16441 ;; Return value:  Size  Location     Type
 16442 ;;                  1    wreg      void 
 16443 ;; Registers used:
 16444 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16445 ;; Tracked objects:
 16446 ;;		On entry : 0/0
 16447 ;;		On exit  : 0/0
 16448 ;;		Unchanged: 0/0
 16449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16453 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16454 ;;Total ram usage:        3 bytes
 16455 ;; Hardware stack levels used: 1
 16456 ;; Hardware stack levels required when called: 1
 16457 ;; This function calls:
 16458 ;;		i1_UART_send_byte
 16459 ;; This function is called by:
 16460 ;;		_command_interpreter
 16461 ;; This function uses a non-reentrant model
 16462 ;;
 16463                           
 16464  0000'                    i1_UART_send_some_bytes:	
 16465                           ;psect for function i1_UART_send_some_bytes
 16466                           
 16467                           
 16468                           ;incstack = 0
 16469                           ; Regs used in i1_UART_send_some_bytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 16470                           ;i1UART_send_some_bytes@length stored from wreg
 16471  0000' 0083'              	movwf	i1UART_send_some_bytes@length
 16472  0001'                    i1l7271:	
 16473                           ;charger_discharger.c: 469: void UART_send_some_bytes(uint8_t length, uint8_t* data);cha
      +                          rger_discharger.c: 470: {;charger_discharger.c: 471:     while(length--)
 16474                           
 16475                           
 16476                           ;charger_discharger.c: 471:     while(length--)
 16477  0001' 3001               	movlw	1
 16478  0002' 0283'              	subwf	i1UART_send_some_bytes@length,f
 16479  0003' 0A03'              	incf	i1UART_send_some_bytes@length,w
 16480  0004' 1903               	btfsc	3,2
 16481  0005' 0008               	return
 16482                           
 16483                           ;charger_discharger.c: 472:     {;charger_discharger.c: 473:         UART_send_byte(*dat
      +                          a++);
 16484  0006' 0801'              	movf	i1UART_send_some_bytes@data,w
 16485  0007' 0086               	movwf	6
 16486  0008' 0802'              	movf	i1UART_send_some_bytes@data+1,w
 16487  0009' 0087               	movwf	7
 16488  000A' 0801               	movf	1,w
 16489  000B' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 16490  000E' 3001               	movlw	1
 16491  000F' 0781'              	addwf	i1UART_send_some_bytes@data,f
 16492  0010' 3000               	movlw	0
 16493  0011' 3D82'              	addwfc	i1UART_send_some_bytes@data+1,f
 16494  0012' 2800'              	goto	i1l7271
 16495  0013'                    __end_ofi1_UART_send_some_bytes:
 16496                           
 16497                           	psect	text48
 16498  0000'                    __ptext48:	
 16499 ;; *************** function _put_data_into_structure *****************
 16500 ;; Defined at:
 16501 ;;		line 488 in file "charger_discharger.c"
 16502 ;; Parameters:    Size  Location     Type
 16503 ;;  length          1    wreg     unsigned char 
 16504 ;;  data            1    0[COMMON] PTR unsigned char 
 16505 ;;		 -> command_interpreter@data(20), 
 16506 ;;  structure       1    1[COMMON] PTR unsigned char 
 16507 ;;		 -> NULL(0), converter_configuration(14), test_configuration(17), basic_configuration(17), 
 16508 ;; Auto vars:     Size  Location     Type
 16509 ;;  length          1    3[COMMON] unsigned char 
 16510 ;; Return value:  Size  Location     Type
 16511 ;;                  1    wreg      void 
 16512 ;; Registers used:
 16513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 16514 ;; Tracked objects:
 16515 ;;		On entry : 0/0
 16516 ;;		On exit  : 0/0
 16517 ;;		Unchanged: 0/0
 16518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16522 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16523 ;;Total ram usage:        4 bytes
 16524 ;; Hardware stack levels used: 1
 16525 ;; This function calls:
 16526 ;;		Nothing
 16527 ;; This function is called by:
 16528 ;;		_command_interpreter
 16529 ;; This function uses a non-reentrant model
 16530 ;;
 16531                           
 16532  0000'                    _put_data_into_structure:	
 16533                           ;psect for function _put_data_into_structure
 16534                           
 16535                           
 16536                           ;incstack = 0
 16537                           ; Regs used in _put_data_into_structure: [wreg-fsr1h+status,2+status,0]
 16538                           ;put_data_into_structure@length stored from wreg
 16539  0000' 0083'              	movwf	put_data_into_structure@length
 16540  0001'                    i1l5963:	
 16541                           ;charger_discharger.c: 488: void put_data_into_structure(uint8_t length, uint8_t* data, 
      +                          uint8_t* structure);charger_discharger.c: 489: {;charger_discharger.c: 490:     while(le
      +                          ngth--)
 16542                           
 16543                           
 16544                           ;charger_discharger.c: 490:     while(length--)
 16545  0001' 3001               	movlw	1
 16546  0002' 0283'              	subwf	put_data_into_structure@length,f
 16547  0003' 0A03'              	incf	put_data_into_structure@length,w
 16548  0004' 1903               	btfsc	3,2
 16549  0005' 0008               	return
 16550                           
 16551                           ;charger_discharger.c: 491:     {;charger_discharger.c: 492:         *structure++ = *dat
      +                          a++;
 16552  0006' 0801'              	movf	put_data_into_structure@structure,w
 16553  0007' 0086               	movwf	6
 16554  0008' 3002               	movlw	2	; select bank4/5
 16555  0009' 0087               	movwf	7
 16556  000A' 0800'              	movf	put_data_into_structure@data,w
 16557  000B' 0084               	movwf	4
 16558  000C' 0185               	clrf	5
 16559  000D' 0800               	movf	0,w
 16560  000E' 0081               	movwf	1
 16561  000F' 3001               	movlw	1
 16562  0010' 0082'              	movwf	??_put_data_into_structure
 16563  0011' 0802'              	movf	??_put_data_into_structure,w
 16564  0012' 0780'              	addwf	put_data_into_structure@data,f
 16565  0013' 3001               	movlw	1
 16566  0014' 0082'              	movwf	??_put_data_into_structure
 16567  0015' 0802'              	movf	??_put_data_into_structure,w
 16568  0016' 0781'              	addwf	put_data_into_structure@structure,f
 16569  0017' 2800'              	goto	i1l5963
 16570  0018'                    __end_of_put_data_into_structure:
 16571                           
 16572                           	psect	text49
 16573  0000'                    __ptext49:	
 16574 ;; *************** function _calculate_checksum *****************
 16575 ;; Defined at:
 16576 ;;		line 477 in file "charger_discharger.c"
 16577 ;; Parameters:    Size  Location     Type
 16578 ;;  code            1    wreg     unsigned char 
 16579 ;;  length          1    0[COMMON] unsigned char 
 16580 ;;  data            2    1[COMMON] PTR unsigned char 
 16581 ;;		 -> NULL(0), converter_configuration(14), test_configuration(17), basic_configuration(17), 
 16582 ;;		 -> command_interpreter@data(20), 
 16583 ;; Auto vars:     Size  Location     Type
 16584 ;;  code            1    5[COMMON] unsigned char 
 16585 ;;  result          2    6[COMMON] unsigned short 
 16586 ;; Return value:  Size  Location     Type
 16587 ;;                  2    0[COMMON] unsigned short 
 16588 ;; Registers used:
 16589 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16590 ;; Tracked objects:
 16591 ;;		On entry : 0/0
 16592 ;;		On exit  : 0/0
 16593 ;;		Unchanged: 0/0
 16594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16595 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16596 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16597 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16598 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16599 ;;Total ram usage:        8 bytes
 16600 ;; Hardware stack levels used: 1
 16601 ;; This function calls:
 16602 ;;		Nothing
 16603 ;; This function is called by:
 16604 ;;		_command_interpreter
 16605 ;; This function uses a non-reentrant model
 16606 ;;
 16607                           
 16608  0000'                    _calculate_checksum:	
 16609                           ;psect for function _calculate_checksum
 16610                           
 16611                           
 16612                           ;incstack = 0
 16613                           ; Regs used in _calculate_checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
 16614                           ;calculate_checksum@code stored from wreg
 16615  0000' 0085'              	movwf	calculate_checksum@code
 16616                           
 16617                           ;charger_discharger.c: 480:     result = (uint16_t)code + (uint16_t)length;
 16618  0001' 0805'              	movf	calculate_checksum@code,w
 16619  0002' 0700'              	addwf	calculate_checksum@length,w
 16620  0003' 0086'              	movwf	calculate_checksum@result
 16621  0004' 0187'              	clrf	calculate_checksum@result+1
 16622  0005' 0D87'              	rlf	calculate_checksum@result+1,f
 16623  0006'                    i1l7251:	
 16624                           ;charger_discharger.c: 481:     while(length--)
 16625                           
 16626                           
 16627                           ;charger_discharger.c: 481:     while(length--)
 16628  0006' 3001               	movlw	1
 16629  0007' 0280'              	subwf	calculate_checksum@length,f
 16630  0008' 0A00'              	incf	calculate_checksum@length,w
 16631  0009' 1903               	btfsc	3,2
 16632  000A' 2800'              	goto	i1l7253
 16633                           
 16634                           ;charger_discharger.c: 482:     {;charger_discharger.c: 483:         result += *data++;
 16635  000B' 0801'              	movf	calculate_checksum@data,w
 16636  000C' 0086               	movwf	6
 16637  000D' 0802'              	movf	calculate_checksum@data+1,w
 16638  000E' 0087               	movwf	7
 16639  000F' 0801               	movf	1,w
 16640  0010' 0083'              	movwf	??_calculate_checksum
 16641  0011' 0184'              	clrf	??_calculate_checksum+1
 16642  0012' 0803'              	movf	??_calculate_checksum,w
 16643  0013' 0786'              	addwf	calculate_checksum@result,f
 16644  0014' 0804'              	movf	??_calculate_checksum+1,w
 16645  0015' 3D87'              	addwfc	calculate_checksum@result+1,f
 16646  0016' 3001               	movlw	1
 16647  0017' 0781'              	addwf	calculate_checksum@data,f
 16648  0018' 3000               	movlw	0
 16649  0019' 3D82'              	addwfc	calculate_checksum@data+1,f
 16650  001A' 2800'              	goto	i1l7251
 16651  001B'                    i1l7253:
 16652                           
 16653                           ;charger_discharger.c: 485:     return (result);
 16654  001B' 0807'              	movf	calculate_checksum@result+1,w
 16655  001C' 0081'              	movwf	?_calculate_checksum+1
 16656  001D' 0806'              	movf	calculate_checksum@result,w
 16657  001E' 0080'              	movwf	?_calculate_checksum
 16658  001F' 0008               	return
 16659  0020'                    __end_of_calculate_checksum:
 16660                           
 16661                           	psect	text50
 16662  0000'                    __ptext50:	
 16663 ;; *************** function _UART_send_header *****************
 16664 ;; Defined at:
 16665 ;;		line 427 in file "charger_discharger.c"
 16666 ;; Parameters:    Size  Location     Type
 16667 ;;  start           1    wreg     unsigned char 
 16668 ;;  operation       1    1[COMMON] unsigned char 
 16669 ;;  code            1    2[COMMON] unsigned char 
 16670 ;; Auto vars:     Size  Location     Type
 16671 ;;  start           1    3[COMMON] unsigned char 
 16672 ;; Return value:  Size  Location     Type
 16673 ;;                  1    wreg      void 
 16674 ;; Registers used:
 16675 ;;		wreg, status,2, status,0, pclath, cstack
 16676 ;; Tracked objects:
 16677 ;;		On entry : 0/0
 16678 ;;		On exit  : 0/0
 16679 ;;		Unchanged: 0/0
 16680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16682 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16684 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16685 ;;Total ram usage:        3 bytes
 16686 ;; Hardware stack levels used: 1
 16687 ;; Hardware stack levels required when called: 1
 16688 ;; This function calls:
 16689 ;;		i1_UART_send_byte
 16690 ;; This function is called by:
 16691 ;;		_command_interpreter
 16692 ;; This function uses a non-reentrant model
 16693 ;;
 16694                           
 16695  0000'                    _UART_send_header:	
 16696                           ;psect for function _UART_send_header
 16697                           
 16698                           
 16699                           ;incstack = 0
 16700                           ; Regs used in _UART_send_header: [wreg+status,2+status,0+pclath+cstack]
 16701                           ;UART_send_header@start stored from wreg
 16702  0000' 0083'              	movwf	UART_send_header@start
 16703                           
 16704                           ;charger_discharger.c: 427: void UART_send_header(uint8_t start, uint8_t operation, uint
      +                          8_t code);charger_discharger.c: 428: {;charger_discharger.c: 429:     UART_send_byte(sta
      +                          rt);
 16705  0001' 0803'              	movf	UART_send_header@start,w
 16706  0002' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 16707                           
 16708                           ;charger_discharger.c: 430:     UART_send_byte(operation);
 16709  0005' 0801'              	movf	UART_send_header@operation,w
 16710  0006' 3180' 2000' 3180'  	fcall	i1_UART_send_byte
 16711                           
 16712                           ;charger_discharger.c: 431:     UART_send_byte(code);
 16713  0009' 0802'              	movf	UART_send_header@code,w
 16714  000A' 3180' 2000'        	fcall	i1_UART_send_byte
 16715  000C' 0008               	return
 16716  000D'                    __end_of_UART_send_header:
 16717                           
 16718                           	psect	text51
 16719  0000'                    __ptext51:	
 16720 ;; *************** function i1_UART_send_byte *****************
 16721 ;; Defined at:
 16722 ;;		line 461 in file "charger_discharger.c"
 16723 ;; Parameters:    Size  Location     Type
 16724 ;;  byte            1    wreg     unsigned char 
 16725 ;; Auto vars:     Size  Location     Type
 16726 ;;  byte            1    0[COMMON] unsigned char 
 16727 ;; Return value:  Size  Location     Type
 16728 ;;                  1    wreg      void 
 16729 ;; Registers used:
 16730 ;;		wreg
 16731 ;; Tracked objects:
 16732 ;;		On entry : 0/0
 16733 ;;		On exit  : 0/0
 16734 ;;		Unchanged: 0/0
 16735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16740 ;;Total ram usage:        1 bytes
 16741 ;; Hardware stack levels used: 1
 16742 ;; This function calls:
 16743 ;;		Nothing
 16744 ;; This function is called by:
 16745 ;;		_command_interpreter
 16746 ;;		_UART_send_header
 16747 ;;		_ISR
 16748 ;;		i1_UART_send_some_bytes
 16749 ;; This function uses a non-reentrant model
 16750 ;;
 16751                           
 16752  0000'                    i1_UART_send_byte:	
 16753                           ;psect for function i1_UART_send_byte
 16754                           
 16755                           
 16756                           ;incstack = 0
 16757                           ; Regs used in i1_UART_send_byte: [wreg]
 16758                           ;i1UART_send_byte@byte stored from wreg
 16759  0000' 0080'              	movwf	i1UART_send_byte@byte
 16760  0001'                    i1l447:	
 16761                           ;charger_discharger.c: 464:     {;charger_discharger.c: 465:     }
 16762                           
 16763                           
 16764                           ;charger_discharger.c: 463:     while(0 == TXIF)
 16765  0001' 0020               	movlb	0	; select bank0
 16766  0002' 1E11               	btfss	17,4	;volatile
 16767  0003' 2800'              	goto	i1l447
 16768                           
 16769                           ;charger_discharger.c: 466:     TX1REG = byte;
 16770  0004' 0800'              	movf	i1UART_send_byte@byte,w
 16771  0005' 0023               	movlb	3	; select bank3
 16772  0006' 009A               	movwf	26	;volatile
 16773  0007' 0008               	return
 16774  0008'                    __end_ofi1_UART_send_byte:
 16775                           
 16776                           	psect	text52
 16777  0000'                    __ptext52:	
 16778 ;; *************** function _UART_get_some_bytes *****************
 16779 ;; Defined at:
 16780 ;;		line 448 in file "charger_discharger.c"
 16781 ;; Parameters:    Size  Location     Type
 16782 ;;  length          1    wreg     unsigned char 
 16783 ;;  data            1    0[COMMON] PTR unsigned char 
 16784 ;;		 -> command_interpreter@data(20), 
 16785 ;; Auto vars:     Size  Location     Type
 16786 ;;  length          1    2[COMMON] unsigned char 
 16787 ;; Return value:  Size  Location     Type
 16788 ;;                  1    wreg      void 
 16789 ;; Registers used:
 16790 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16791 ;; Tracked objects:
 16792 ;;		On entry : 0/0
 16793 ;;		On exit  : 0/0
 16794 ;;		Unchanged: 0/0
 16795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16796 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16797 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16798 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16799 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16800 ;;Total ram usage:        3 bytes
 16801 ;; Hardware stack levels used: 1
 16802 ;; Hardware stack levels required when called: 1
 16803 ;; This function calls:
 16804 ;;		_UART_get_byte
 16805 ;; This function is called by:
 16806 ;;		_command_interpreter
 16807 ;; This function uses a non-reentrant model
 16808 ;;
 16809                           
 16810  0000'                    _UART_get_some_bytes:	
 16811                           ;psect for function _UART_get_some_bytes
 16812                           
 16813                           
 16814                           ;incstack = 0
 16815                           ; Regs used in _UART_get_some_bytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16816                           ;UART_get_some_bytes@length stored from wreg
 16817  0000' 0082'              	movwf	UART_get_some_bytes@length
 16818                           
 16819                           ;charger_discharger.c: 448: void UART_get_some_bytes(uint8_t length, uint8_t* data);char
      +                          ger_discharger.c: 449: {;charger_discharger.c: 450:     if(OERR)
 16820  0001' 0023               	movlb	3	; select bank3
 16821  0002' 1C9D               	btfss	29,1	;volatile
 16822  0003' 2800'              	goto	i1l5929
 16823                           
 16824                           ;charger_discharger.c: 451:     {;charger_discharger.c: 452:         CREN = 0;
 16825  0004' 121D               	bcf	29,4	;volatile
 16826                           
 16827                           ;charger_discharger.c: 453:         CREN = 1;
 16828  0005' 161D               	bsf	29,4	;volatile
 16829  0006'                    i1l5929:
 16830                           
 16831                           ;charger_discharger.c: 455:     while(length--)
 16832  0006' 3001               	movlw	1
 16833  0007' 0282'              	subwf	UART_get_some_bytes@length,f
 16834  0008' 0A02'              	incf	UART_get_some_bytes@length,w
 16835  0009' 1903               	btfsc	3,2
 16836  000A' 0008               	return
 16837                           
 16838                           ;charger_discharger.c: 456:     {;charger_discharger.c: 457:         *data++ = UART_get_
      +                          byte();
 16839  000B' 0800'              	movf	UART_get_some_bytes@data,w
 16840  000C' 0086               	movwf	6
 16841  000D' 0187               	clrf	7
 16842  000E' 3180' 2000' 3180'  	fcall	_UART_get_byte
 16843  0011' 0081               	movwf	1
 16844  0012' 3001               	movlw	1
 16845  0013' 0081'              	movwf	??_UART_get_some_bytes
 16846  0014' 0801'              	movf	??_UART_get_some_bytes,w
 16847  0015' 0780'              	addwf	UART_get_some_bytes@data,f
 16848  0016' 2800'              	goto	i1l5929
 16849  0017'                    __end_of_UART_get_some_bytes:
 16850                           
 16851                           	psect	text53
 16852  0000'                    __ptext53:	
 16853 ;; *************** function _UART_get_byte *****************
 16854 ;; Defined at:
 16855 ;;		line 437 in file "charger_discharger.c"
 16856 ;; Parameters:    Size  Location     Type
 16857 ;;		None
 16858 ;; Auto vars:     Size  Location     Type
 16859 ;;		None
 16860 ;; Return value:  Size  Location     Type
 16861 ;;                  1    wreg      unsigned char 
 16862 ;; Registers used:
 16863 ;;		wreg
 16864 ;; Tracked objects:
 16865 ;;		On entry : 0/0
 16866 ;;		On exit  : 0/0
 16867 ;;		Unchanged: 0/0
 16868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16873 ;;Total ram usage:        0 bytes
 16874 ;; Hardware stack levels used: 1
 16875 ;; This function calls:
 16876 ;;		Nothing
 16877 ;; This function is called by:
 16878 ;;		_command_interpreter
 16879 ;;		_UART_get_some_bytes
 16880 ;; This function uses a non-reentrant model
 16881 ;;
 16882                           
 16883  0000'                    _UART_get_byte:	
 16884                           ;psect for function _UART_get_byte
 16885                           
 16886                           
 16887                           ;charger_discharger.c: 439:     if(OERR)
 16888                           
 16889                           ;incstack = 0
 16890                           ; Regs used in _UART_get_byte: [wreg]
 16891  0000' 0023               	movlb	3	; select bank3
 16892  0001' 1C9D               	btfss	29,1	;volatile
 16893  0002' 2800'              	goto	i1l434
 16894                           
 16895                           ;charger_discharger.c: 440:     {;charger_discharger.c: 441:         CREN = 0;
 16896  0003' 121D               	bcf	29,4	;volatile
 16897                           
 16898                           ;charger_discharger.c: 442:         CREN = 1;
 16899  0004' 161D               	bsf	29,4	;volatile
 16900  0005'                    i1l434:
 16901  0005' 0020               	movlb	0	; select bank0
 16902  0006' 1E91               	btfss	17,5	;volatile
 16903  0007' 2800'              	goto	i1l434
 16904                           
 16905                           ;charger_discharger.c: 445:     return RC1REG;
 16906  0008' 0023               	movlb	3	; select bank3
 16907  0009' 0819               	movf	25,w	;volatile
 16908  000A' 0008               	return
 16909  000B'                    __end_of_UART_get_byte:
 16910                           
 16911                           	psect	text54
 16912  0000'                    __ptext54:	
 16913 ;; *************** function _calculate_avg *****************
 16914 ;; Defined at:
 16915 ;;		line 381 in file "charger_discharger.c"
 16916 ;; Parameters:    Size  Location     Type
 16917 ;;		None
 16918 ;; Auto vars:     Size  Location     Type
 16919 ;;		None
 16920 ;; Return value:  Size  Location     Type
 16921 ;;                  1    wreg      void 
 16922 ;; Registers used:
 16923 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 16924 ;; Tracked objects:
 16925 ;;		On entry : 0/0
 16926 ;;		On exit  : 0/0
 16927 ;;		Unchanged: 0/0
 16928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16931 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16932 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16933 ;;Total ram usage:        8 bytes
 16934 ;; Hardware stack levels used: 1
 16935 ;; This function calls:
 16936 ;;		Nothing
 16937 ;; This function is called by:
 16938 ;;		_ISR
 16939 ;; This function uses a non-reentrant model
 16940 ;;
 16941                           
 16942  0000'                    _calculate_avg:	
 16943                           ;psect for function _calculate_avg
 16944                           
 16945                           
 16946                           ;charger_discharger.c: 383:     switch(count)
 16947                           
 16948                           ;incstack = 0
 16949                           ; Regs used in _calculate_avg: [wreg-fsr0h+status,2+status,0]
 16950  0000' 2800'              	goto	i1l6895
 16951  0001'                    i1l6889:
 16952                           
 16953                           ;charger_discharger.c: 386:             iacum = (uint24_t) i;
 16954  0001' 0800'              	movf	_i^(0+128),w
 16955  0002' 0080'              	movwf	_iacum^(0+128)
 16956  0003' 0800'              	movf	(_i+1)^(0+128),w
 16957  0004' 0080'              	movwf	(_iacum+1)^(0+128)
 16958  0005' 0180'              	clrf	(_iacum+2)^(0+128)
 16959                           
 16960                           ;charger_discharger.c: 387:             vacum = (uint24_t) v;
 16961  0006' 0800'              	movf	_v^(0+128),w
 16962  0007' 0080'              	movwf	_vacum^(0+128)
 16963  0008' 0800'              	movf	(_v+1)^(0+128),w
 16964  0009' 0080'              	movwf	(_vacum+1)^(0+128)
 16965  000A' 0180'              	clrf	(_vacum+2)^(0+128)
 16966                           
 16967                           ;charger_discharger.c: 388:             break;
 16968  000B' 0008               	return
 16969  000C'                    i1l6891:
 16970                           
 16971                           ;charger_discharger.c: 390:             iavg = ((iacum >> 10) + ((iacum >> 9) & 0x01));
 16972  000C' 0800'              	movf	_iacum^(0+128),w
 16973  000D' 0080'              	movwf	??_calculate_avg
 16974  000E' 0800'              	movf	(_iacum+1)^(0+128),w
 16975  000F' 0081'              	movwf	??_calculate_avg+1
 16976  0010' 0800'              	movf	(_iacum+2)^(0+128),w
 16977  0011' 0082'              	movwf	??_calculate_avg+2
 16978  0012' 3009               	movlw	9
 16979  0013'                    u709_25:
 16980  0013' 3682'              	lsrf	??_calculate_avg+2,f
 16981  0014' 0C81'              	rrf	??_calculate_avg+1,f
 16982  0015' 0C80'              	rrf	??_calculate_avg,f
 16983  0016' 0B89               	decfsz	9,f
 16984  0017' 2800'              	goto	u709_25
 16985  0018' 3001               	movlw	1
 16986  0019' 0500'              	andwf	??_calculate_avg,w
 16987  001A' 0083'              	movwf	??_calculate_avg+3
 16988  001B' 3000               	movlw	0
 16989  001C' 0501'              	andwf	??_calculate_avg+1,w
 16990  001D' 0084'              	movwf	??_calculate_avg+4
 16991  001E' 0800'              	movf	_iacum^(0+128),w
 16992  001F' 0085'              	movwf	??_calculate_avg+5
 16993  0020' 0800'              	movf	(_iacum+1)^(0+128),w
 16994  0021' 0086'              	movwf	??_calculate_avg+6
 16995  0022' 0800'              	movf	(_iacum+2)^(0+128),w
 16996  0023' 0087'              	movwf	??_calculate_avg+7
 16997  0024' 300A               	movlw	10
 16998  0025'                    u710_25:
 16999  0025' 3687'              	lsrf	??_calculate_avg+7,f
 17000  0026' 0C86'              	rrf	??_calculate_avg+6,f
 17001  0027' 0C85'              	rrf	??_calculate_avg+5,f
 17002  0028' 0B89               	decfsz	9,f
 17003  0029' 2800'              	goto	u710_25
 17004  002A' 0803'              	movf	??_calculate_avg+3,w
 17005  002B' 0705'              	addwf	??_calculate_avg+5,w
 17006  002C' 0023               	movlb	3	; select bank3
 17007  002D' 0080'              	movwf	_iavg^(0+384)
 17008  002E' 0804'              	movf	??_calculate_avg+4,w
 17009  002F' 3D06'              	addwfc	??_calculate_avg+6,w
 17010  0030' 0080'              	movwf	(_iavg+1)^(0+384)
 17011                           
 17012                           ;charger_discharger.c: 391:             vavg = ((vacum >> 10) + ((vacum >> 9) & 0x01));
 17013  0031' 0021               	movlb	1	; select bank1
 17014  0032' 0800'              	movf	_vacum^(0+128),w
 17015  0033' 0080'              	movwf	??_calculate_avg
 17016  0034' 0800'              	movf	(_vacum+1)^(0+128),w
 17017  0035' 0081'              	movwf	??_calculate_avg+1
 17018  0036' 0800'              	movf	(_vacum+2)^(0+128),w
 17019  0037' 0082'              	movwf	??_calculate_avg+2
 17020  0038' 3009               	movlw	9
 17021  0039'                    u711_25:
 17022  0039' 3682'              	lsrf	??_calculate_avg+2,f
 17023  003A' 0C81'              	rrf	??_calculate_avg+1,f
 17024  003B' 0C80'              	rrf	??_calculate_avg,f
 17025  003C' 0B89               	decfsz	9,f
 17026  003D' 2800'              	goto	u711_25
 17027  003E' 3001               	movlw	1
 17028  003F' 0500'              	andwf	??_calculate_avg,w
 17029  0040' 0083'              	movwf	??_calculate_avg+3
 17030  0041' 3000               	movlw	0
 17031  0042' 0501'              	andwf	??_calculate_avg+1,w
 17032  0043' 0084'              	movwf	??_calculate_avg+4
 17033  0044' 0800'              	movf	_vacum^(0+128),w
 17034  0045' 0085'              	movwf	??_calculate_avg+5
 17035  0046' 0800'              	movf	(_vacum+1)^(0+128),w
 17036  0047' 0086'              	movwf	??_calculate_avg+6
 17037  0048' 0800'              	movf	(_vacum+2)^(0+128),w
 17038  0049' 0087'              	movwf	??_calculate_avg+7
 17039  004A' 300A               	movlw	10
 17040  004B'                    u712_25:
 17041  004B' 3687'              	lsrf	??_calculate_avg+7,f
 17042  004C' 0C86'              	rrf	??_calculate_avg+6,f
 17043  004D' 0C85'              	rrf	??_calculate_avg+5,f
 17044  004E' 0B89               	decfsz	9,f
 17045  004F' 2800'              	goto	u712_25
 17046  0050' 0803'              	movf	??_calculate_avg+3,w
 17047  0051' 0705'              	addwf	??_calculate_avg+5,w
 17048  0052' 0023               	movlb	3	; select bank3
 17049  0053' 0080'              	movwf	_vavg^(0+384)
 17050  0054' 0804'              	movf	??_calculate_avg+4,w
 17051  0055' 3D06'              	addwfc	??_calculate_avg+6,w
 17052  0056' 0080'              	movwf	(_vavg+1)^(0+384)
 17053                           
 17054                           ;charger_discharger.c: 392:             break;
 17055  0057' 0008               	return
 17056  0058'                    i1l6893:
 17057                           
 17058                           ;charger_discharger.c: 394:             iacum += (uint24_t) i;
 17059  0058' 0800'              	movf	_i^(0+128),w
 17060  0059' 0080'              	movwf	??_calculate_avg
 17061  005A' 0800'              	movf	(_i+1)^(0+128),w
 17062  005B' 0081'              	movwf	??_calculate_avg+1
 17063  005C' 0182'              	clrf	??_calculate_avg+2
 17064  005D' 0800'              	movf	??_calculate_avg,w
 17065  005E' 0780'              	addwf	_iacum^(0+128),f
 17066  005F' 0801'              	movf	??_calculate_avg+1,w
 17067  0060' 3D80'              	addwfc	(_iacum+1)^(0+128),f
 17068  0061' 0802'              	movf	??_calculate_avg+2,w
 17069  0062' 3D80'              	addwfc	(_iacum+2)^(0+128),f
 17070                           
 17071                           ;charger_discharger.c: 395:             vacum += (uint24_t) v;
 17072  0063' 0800'              	movf	_v^(0+128),w
 17073  0064' 0080'              	movwf	??_calculate_avg
 17074  0065' 0800'              	movf	(_v+1)^(0+128),w
 17075  0066' 0081'              	movwf	??_calculate_avg+1
 17076  0067' 0182'              	clrf	??_calculate_avg+2
 17077  0068' 0800'              	movf	??_calculate_avg,w
 17078  0069' 0780'              	addwf	_vacum^(0+128),f
 17079  006A' 0801'              	movf	??_calculate_avg+1,w
 17080  006B' 3D80'              	addwfc	(_vacum+1)^(0+128),f
 17081  006C' 0802'              	movf	??_calculate_avg+2,w
 17082  006D' 3D80'              	addwfc	(_vacum+2)^(0+128),f
 17083                           
 17084                           ;charger_discharger.c: 396:     }
 17085  006E' 0008               	return
 17086  006F'                    i1l6895:
 17087                           
 17088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 17089                           ; Switch size 1, requested type "simple"
 17090                           ; Number of cases is 2, Range of values is 0 to 4
 17091                           ; switch strategies available:
 17092                           ; Name         Instructions Cycles
 17093                           ; simple_byte            7     4 (average)
 17094                           ; direct_byte           16     6 (fixed)
 17095                           ; jumptable            260     6 (fixed)
 17096                           ;	Chosen strategy is simple_byte
 17097  006F' 0021               	movlb	1	; select bank1
 17098  0070' 0800'              	movf	(_count+1)^(0+128),w
 17099  0071' 3A00               	xorlw	0	; case 0
 17100  0072' 1903               	skipnz
 17101  0073' 2800'              	goto	i1l7771
 17102  0074' 3A04               	xorlw	4	; case 4
 17103  0075' 1903               	skipnz
 17104  0076' 2800'              	goto	i1l7773
 17105  0077' 2800'              	goto	i1l6893
 17106  0078'                    i1l7771:
 17107                           
 17108                           ; Switch size 1, requested type "simple"
 17109                           ; Number of cases is 1, Range of values is 0 to 0
 17110                           ; switch strategies available:
 17111                           ; Name         Instructions Cycles
 17112                           ; simple_byte            4     3 (average)
 17113                           ; direct_byte            8     6 (fixed)
 17114                           ; jumptable            260     6 (fixed)
 17115                           ;	Chosen strategy is simple_byte
 17116  0078' 0800'              	movf	_count^(0+128),w
 17117  0079' 3A00               	xorlw	0	; case 0
 17118  007A' 1903               	skipnz
 17119  007B' 2800'              	goto	i1l6891
 17120  007C' 2800'              	goto	i1l6893
 17121  007D'                    i1l7773:
 17122                           
 17123                           ; Switch size 1, requested type "simple"
 17124                           ; Number of cases is 1, Range of values is 0 to 0
 17125                           ; switch strategies available:
 17126                           ; Name         Instructions Cycles
 17127                           ; simple_byte            4     3 (average)
 17128                           ; direct_byte            8     6 (fixed)
 17129                           ; jumptable            260     6 (fixed)
 17130                           ;	Chosen strategy is simple_byte
 17131  007D' 0800'              	movf	_count^(0+128),w
 17132  007E' 3A00               	xorlw	0	; case 0
 17133  007F' 1903               	skipnz
 17134  0080' 2800'              	goto	i1l6889
 17135  0081' 2800'              	goto	i1l6893
 17136  0082' 0008               	return
 17137  0083'                    __end_of_calculate_avg:
 17138                           
 17139                           	psect	text55
 17140  0000'                    __ptext55:	
 17141 ;; *************** function _abs *****************
 17142 ;; Defined at:
 17143 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
 17144 ;; Parameters:    Size  Location     Type
 17145 ;;  a               2    0[COMMON] int 
 17146 ;; Auto vars:     Size  Location     Type
 17147 ;;		None
 17148 ;; Return value:  Size  Location     Type
 17149 ;;                  2    0[COMMON] int 
 17150 ;; Registers used:
 17151 ;;		wreg, status,2, status,0
 17152 ;; Tracked objects:
 17153 ;;		On entry : 0/0
 17154 ;;		On exit  : 0/0
 17155 ;;		Unchanged: 0/0
 17156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17160 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17161 ;;Total ram usage:        4 bytes
 17162 ;; Hardware stack levels used: 1
 17163 ;; This function calls:
 17164 ;;		Nothing
 17165 ;; This function is called by:
 17166 ;;		_ISR
 17167 ;; This function uses a non-reentrant model
 17168 ;;
 17169                           
 17170  0000'                    _abs:	
 17171                           ;psect for function _abs
 17172                           
 17173                           
 17174                           ;incstack = 0
 17175                           ; Regs used in _abs: [wreg+status,2+status,0]
 17176  0000' 0801'              	movf	abs@a+1,w
 17177  0001' 3A80               	xorlw	128
 17178  0002' 0082'              	movwf	??_abs
 17179  0003' 3080               	movlw	128
 17180  0004' 0202'              	subwf	??_abs,w
 17181  0005' 1D03               	skipz
 17182  0006' 2800'              	goto	u715_25
 17183  0007' 3001               	movlw	1
 17184  0008' 0200'              	subwf	abs@a,w
 17185  0009'                    u715_25:
 17186  0009' 1803               	skipnc
 17187  000A' 0008               	return
 17188  000B' 0900'              	comf	abs@a,w
 17189  000C' 0082'              	movwf	??_abs
 17190  000D' 0901'              	comf	abs@a+1,w
 17191  000E' 0083'              	movwf	??_abs+1
 17192  000F' 0A82'              	incf	??_abs,f
 17193  0010' 1903               	skipnz
 17194  0011' 0A83'              	incf	??_abs+1,f
 17195  0012' 0802'              	movf	??_abs,w
 17196  0013' 0080'              	movwf	?_abs
 17197  0014' 0803'              	movf	??_abs+1,w
 17198  0015' 0081'              	movwf	?_abs+1
 17199  0016' 0008               	return
 17200  0017'                    __end_of_abs:
 17201                           
 17202                           	psect	text56
 17203  0000'                    __ptext56:	
 17204 ;; *************** function _UART_send_string *****************
 17205 ;; Defined at:
 17206 ;;		line 499 in file "charger_discharger.c"
 17207 ;; Parameters:    Size  Location     Type
 17208 ;;  st_pt           2    1[COMMON] PTR unsigned char 
 17209 ;;		 -> STR_2(13), STR_1(11), 
 17210 ;; Auto vars:     Size  Location     Type
 17211 ;;		None
 17212 ;; Return value:  Size  Location     Type
 17213 ;;                  1    wreg      void 
 17214 ;; Registers used:
 17215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17216 ;; Tracked objects:
 17217 ;;		On entry : 0/0
 17218 ;;		On exit  : 0/0
 17219 ;;		Unchanged: 0/0
 17220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17223 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17224 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17225 ;;Total ram usage:        3 bytes
 17226 ;; Hardware stack levels used: 1
 17227 ;; Hardware stack levels required when called: 1
 17228 ;; This function calls:
 17229 ;;		_UART_send_char
 17230 ;; This function is called by:
 17231 ;;		_ISR
 17232 ;; This function uses a non-reentrant model
 17233 ;;
 17234                           
 17235  0000'                    _UART_send_string:	
 17236                           ;psect for function _UART_send_string
 17237                           
 17238  0000'                    i1l6923:	
 17239                           ;charger_discharger.c: 499: void UART_send_string(char* st_pt);charger_discharger.c: 500
      +                          : {;charger_discharger.c: 501:     while(*st_pt)
 17240                           
 17241                           ;incstack = 0
 17242                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17243                           
 17244                           
 17245                           ;charger_discharger.c: 501:     while(*st_pt)
 17246  0000' 0801'              	movf	UART_send_string@st_pt,w
 17247  0001' 0084               	movwf	4
 17248  0002' 0802'              	movf	UART_send_string@st_pt+1,w
 17249  0003' 0085               	movwf	5
 17250  0004' 0012               	moviw fsr0++
 17251  0005' 1903               	btfsc	3,2
 17252  0006' 0008               	return
 17253                           
 17254                           ;charger_discharger.c: 502:         UART_send_char(*st_pt++);
 17255  0007' 0801'              	movf	UART_send_string@st_pt,w
 17256  0008' 0084               	movwf	4
 17257  0009' 0802'              	movf	UART_send_string@st_pt+1,w
 17258  000A' 0085               	movwf	5
 17259  000B' 0800               	movf	0,w	;code access
 17260  000C' 3180' 2000' 3180'  	fcall	_UART_send_char
 17261  000F' 3001               	movlw	1
 17262  0010' 0781'              	addwf	UART_send_string@st_pt,f
 17263  0011' 3000               	movlw	0
 17264  0012' 3D82'              	addwfc	UART_send_string@st_pt+1,f
 17265  0013' 2800'              	goto	i1l6923
 17266  0014'                    __end_of_UART_send_string:
 17267                           
 17268                           	psect	text57
 17269  0000'                    __ptext57:	
 17270 ;; *************** function _UART_send_char *****************
 17271 ;; Defined at:
 17272 ;;		line 419 in file "charger_discharger.c"
 17273 ;; Parameters:    Size  Location     Type
 17274 ;;  bt              1    wreg     unsigned char 
 17275 ;; Auto vars:     Size  Location     Type
 17276 ;;  bt              1    0[COMMON] unsigned char 
 17277 ;; Return value:  Size  Location     Type
 17278 ;;                  1    wreg      void 
 17279 ;; Registers used:
 17280 ;;		wreg
 17281 ;; Tracked objects:
 17282 ;;		On entry : 0/0
 17283 ;;		On exit  : 0/0
 17284 ;;		Unchanged: 0/0
 17285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17289 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17290 ;;Total ram usage:        1 bytes
 17291 ;; Hardware stack levels used: 1
 17292 ;; This function calls:
 17293 ;;		Nothing
 17294 ;; This function is called by:
 17295 ;;		_UART_send_string
 17296 ;; This function uses a non-reentrant model
 17297 ;;
 17298                           
 17299  0000'                    _UART_send_char:	
 17300                           ;psect for function _UART_send_char
 17301                           
 17302                           
 17303                           ;incstack = 0
 17304                           ; Regs used in _UART_send_char: [wreg]
 17305                           ;UART_send_char@bt stored from wreg
 17306  0000' 0080'              	movwf	UART_send_char@bt
 17307  0001'                    i1l424:	
 17308                           ;charger_discharger.c: 422:     {;charger_discharger.c: 423:     }
 17309                           
 17310                           
 17311                           ;charger_discharger.c: 421:     while(0 == TXIF)
 17312  0001' 0020               	movlb	0	; select bank0
 17313  0002' 1E11               	btfss	17,4	;volatile
 17314  0003' 2800'              	goto	i1l424
 17315                           
 17316                           ;charger_discharger.c: 424:     TX1REG = bt;
 17317  0004' 0800'              	movf	UART_send_char@bt,w
 17318  0005' 0023               	movlb	3	; select bank3
 17319  0006' 009A               	movwf	26	;volatile
 17320  0007' 0008               	return
 17321  0008'                    __end_of_UART_send_char:
 17322  007E                     btemp	set	126	;btemp
 17323  007E                     int$flags	set	126
 17324  007E                     wtemp0	set	126
 17325                           
 17326                           	psect	idloc
 17327                           
 17328                           ;Config register IDLOC0 @ 0x8000
 17329                           ;	unspecified, using default values
 17330  8000                     	org	32768
 17331  8000  3FFF               	dw	16383
 17332                           
 17333                           ;Config register IDLOC1 @ 0x8001
 17334                           ;	unspecified, using default values
 17335  8001                     	org	32769
 17336  8001  3FFF               	dw	16383
 17337                           
 17338                           ;Config register IDLOC2 @ 0x8002
 17339                           ;	unspecified, using default values
 17340  8002                     	org	32770
 17341  8002  3FFF               	dw	16383
 17342                           
 17343                           ;Config register IDLOC3 @ 0x8003
 17344                           ;	unspecified, using default values
 17345  8003                     	org	32771
 17346  8003  3FFF               	dw	16383
 17347                           
 17348                           	psect	config
 17349                           
 17350                           ;Config register CONFIG1 @ 0x8007
 17351                           ;	Oscillator Selection
 17352                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 17353                           ;	Watchdog Timer Enable
 17354                           ;	WDTE = OFF, WDT disabled
 17355                           ;	Power-up Timer Enable
 17356                           ;	PWRTE = OFF, PWRT disabled
 17357                           ;	MCLR Pin Function Select
 17358                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 17359                           ;	Flash Program Memory Code Protection
 17360                           ;	CP = OFF, Program memory code protection is disabled
 17361                           ;	Data Memory Code Protection
 17362                           ;	CPD = OFF, Data memory code protection is disabled
 17363                           ;	Brown-out Reset Enable
 17364                           ;	BOREN = OFF, Brown-out Reset disabled
 17365                           ;	Clock Out Enable
 17366                           ;	CLKOUTEN = ON, CLKOUT function is enabled on the CLKOUT pin
 17367                           ;	Internal/External Switchover
 17368                           ;	IESO = ON, Internal/External Switchover mode is enabled
 17369                           ;	Fail-Safe Clock Monitor Enable
 17370                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 17371  8007                     	org	32775
 17372  8007  31E4               	dw	12772
 17373                           
 17374                           ;Config register CONFIG2 @ 0x8008
 17375                           ;	Flash Memory Self-Write Protection
 17376                           ;	WRT = OFF, Write protection off
 17377                           ;	Voltage Regulator Capacitor Enable bit
 17378                           ;	VCAPEN = OFF, Vcap functionality is disabled on RA6.
 17379                           ;	PLL Enable
 17380                           ;	PLLEN = OFF, 4x PLL disabled
 17381                           ;	Stack Overflow/Underflow Reset Enable
 17382                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 17383                           ;	Brown-out Reset Voltage Selection
 17384                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 17385                           ;	Low Power Brown-Out Reset Enable Bit
 17386                           ;	LPBOR = OFF, Low power brown-out is disabled
 17387                           ;	Low-Voltage Programming Enable
 17388                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 17389  8008                     	org	32776
 17390  8008  1EFF               	dw	7935

Data Sizes:
    Strings     24
    Constant    0
    Data        34
    BSS         165
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     53      80
    BANK2            80     80      80
    BANK3            80     29      80
    BANK4            80      0      72
    BANK5            80      0      49
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    UART_send_string@st_pt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[11]), 

    put_data_into_structure@data	PTR unsigned char  size(1) Largest target is 20
		 -> command_interpreter@data(BANK1[20]), 

    put_data_into_structure@structure	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), converter_configuration(BANK5[14]), test_configuration(BANK4[17]), basic_configuration(BANK4[17]), 

    calculate_checksum@data	PTR unsigned char  size(2) Largest target is 20
		 -> NULL(NULL[0]), converter_configuration(BANK5[14]), test_configuration(BANK4[17]), basic_configuration(BANK4[17]), 
		 -> command_interpreter@data(BANK1[20]), 

    UART_send_some_bytes@data	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), log_data(BANK5[15]), converter_configuration(BANK5[14]), test_configuration(BANK4[17]), 
		 -> basic_configuration(BANK4[17]), command_interpreter@calc_checksum(BANK1[2]), 

    UART_get_some_bytes@data	PTR unsigned char  size(1) Largest target is 20
		 -> command_interpreter@data(BANK1[20]), 

    log_data_ptr	PTR struct log_data_struct size(1) Largest target is 15
		 -> NULL(NULL[0]), log_data(BANK5[15]), 

    converter_configuration_ptr	PTR struct converter_configuration_struct size(1) Largest target is 14
		 -> NULL(NULL[0]), converter_configuration(BANK5[14]), 

    test_configuration_ptr	PTR struct test_configuration_struct size(1) Largest target is 17
		 -> NULL(NULL[0]), test_configuration(BANK4[17]), 

    basic_configuration_ptr	PTR struct basic_configuration_struct size(1) Largest target is 17
		 -> NULL(NULL[0]), basic_configuration(BANK4[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _control_loop->i1___xxtofl
    _pid->i1___xxtofl
    _command_interpreter->i1___xxtofl
    i1_converter_settings->i1___xxtofl
    i1___fltol->i1___xxtofl
    i1___flmul->i1___xxtofl
    i1___fldiv->i1___xxtofl
    i1___fladd->i1___xxtofl
    i1_UART_send_some_bytes->i1_UART_send_byte
    _UART_send_header->i1_UART_send_byte
    _UART_send_string->_UART_send_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _pid->i1___flmul
    ___flsub->i1___fladd
    _command_interpreter->i1___fldiv
    i1_converter_settings->i1___fldiv
    i1___fltol->i1___fldiv
    i1___flmul->___flsub
    i1___fldiv->i1___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    _ISR->_command_interpreter
    _control_loop->i1_set_DC
    _command_interpreter->i1_converter_settings
    i1_converter_settings->i1_set_DC
    i1_set_DC->i1___fltol

Critical Paths under _main in BANK2

    _converter_settings->___fltol
    _fDISCHARGE->___fltol
    _fDC_res->___fltol
    ___flge->___xxtofl
    _scaling->___fltol
    _log_control->___fltol
    _UART_send_some_bytes->_UART_send_byte
    _set_DC->___fltol
    _cc_cv_mode->___fltol
    ___fltol->___fladd
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    ___fladd->___flmul

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_state_machine
    _state_machine->_fDC_res
    _fNEXTSTATE->_converter_settings
    _fNEXTCELL->_converter_settings
    _fNEXTREPETITION->_converter_settings
    _converter_settings->_set_DC
    _fIDLE->_set_DC
    _fDISCHARGE->_set_DC
    _fDC_res->_set_DC
    _fCHARGE->_set_DC
    _scaling->___fltol
    _log_control->___fltol
    _initialize->_set_DC
    _set_DC->___fltol
    _cc_cv_mode->___fltol
    ___fltol->___fladd

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  168617
                                             28 BANK3      1     1      0
                         _cc_cv_mode
                         _initialize
                   _interrupt_enable
                        _log_control
                            _scaling
                      _state_machine
 ---------------------------------------------------------------------------------
 (1) _state_machine                                        2     2      0  120732
                                             26 BANK3      2     2      0
                            _fCHARGE
                            _fDC_res
                         _fDISCHARGE
                              _fIDLE
                              _fWAIT
 ---------------------------------------------------------------------------------
 (2) _fWAIT                                                0     0      0   67828
                           _Cell_OFF
                         _fNEXTSTATE
                             _set_DC
 ---------------------------------------------------------------------------------
 (3) _fNEXTSTATE                                           0     0      0   66162
                 _converter_settings
                          _fNEXTCELL
 ---------------------------------------------------------------------------------
 (4) _fNEXTCELL                                            0     0      0   44108
                 _converter_settings
                    _fNEXTREPETITION
 ---------------------------------------------------------------------------------
 (5) _fNEXTREPETITION                                      0     0      0   22054
                 _converter_settings
 ---------------------------------------------------------------------------------
 (6) _converter_settings                                   8     8      0   22054
                                             18 BANK3      8     8      0
                            _Cell_ON
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _set_DC
 ---------------------------------------------------------------------------------
 (7) _Cell_ON                                              1     1      0       0
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (2) _fIDLE                                                0     0      0    1666
                           _Cell_OFF
                             _set_DC
 ---------------------------------------------------------------------------------
 (2) _fDISCHARGE                                           2     2      0   23175
                                             18 BANK3      2     2      0
                           _Cell_OFF
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _getTime
                             _set_DC
 ---------------------------------------------------------------------------------
 (2) _fDC_res                                              8     8      0   22031
                                             18 BANK3      8     8      0
                           _Cell_OFF
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _getTime
                             _set_DC
 ---------------------------------------------------------------------------------
 (2) _fCHARGE                                              2     2      0    6032
                                             18 BANK3      2     2      0
                           _Cell_OFF
                             ___flge
                           ___xxtofl
                            _getTime
                             _set_DC
 ---------------------------------------------------------------------------------
 (3) _getTime                                              2     2      0       0
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1190
                                             14 BANK2     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _scaling                                              8     8      0   20388
                                             16 BANK3      8     8      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _log_control                                          0     0      0    2040
                     _UART_send_byte
               _UART_send_some_bytes
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) _UART_send_some_bytes                                 3     1      2     397
                                              1 BANK2      3     1      2
                     _UART_send_byte
 ---------------------------------------------------------------------------------
 (3) _UART_send_byte                                       1     1      0      22
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _interrupt_enable                                     1     1      0       2
 ---------------------------------------------------------------------------------
 (1) _initialize                                           4     4      0    4842
                                             18 BANK3      4     4      0
                           _Cell_OFF
                           ___xxtofl
                             _set_DC
 ---------------------------------------------------------------------------------
 (3) _set_DC                                               2     2      0    1666
                                             16 BANK3      2     2      0
                            ___fltol
 ---------------------------------------------------------------------------------
 (3) _Cell_OFF                                             1     1      0       0
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           5     0      5   20613
                                             16 BANK3      5     0      5
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___xxtofl                                            14    10      4    3176
                                              0 BANK2     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4    1621
                                             78 BANK2      2     2      0
                                              8 BANK3      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    6209
                                             40 BANK2     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              0 BANK2      9     7      2
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    4553
                                             14 BANK2     26    18      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    4760
                                             66 BANK2     12     4      8
                                              0 BANK3      8     8      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  2     2      0   32127
                                             51 BANK1      2     2      0
                   _UART_send_string
                                _abs
                      _calculate_avg
                _command_interpreter
                       _control_loop
                           _read_ADC
                             _timing
                   i1_UART_send_byte
 ---------------------------------------------------------------------------------
 (10) _timing                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _read_ADC                                           11     9      2     198
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (10) _control_loop                                        0     0      0   10591
                                _pid
                         i1___xxtofl
                           i1_set_DC
 ---------------------------------------------------------------------------------
 (11) _pid                                                20    12      8    9059
                                             54 BANK0     20    12      8
                            ___flsub
                          i1___fladd
                           i1___flge
                          i1___flmul
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (12) i1___flge                                           12     4      8     390
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (12) ___flsub                                             8     0      8    3057
                                             20 BANK0      8     0      8
                          i1___fladd
 ---------------------------------------------------------------------------------
 (10) _command_interpreter                                31    31      0   20955
                                             20 BANK1     31    31      0
                      _UART_get_byte
                _UART_get_some_bytes
                   _UART_send_header
                 _calculate_checksum
            _put_data_into_structure
                   i1_UART_send_byte
             i1_UART_send_some_bytes
                          i1___fladd
                          i1___fldiv
                          i1___flmul
                          i1___fltol
                         i1___xxtofl
               i1_converter_settings
                          i1_getTime
 ---------------------------------------------------------------------------------
 (11) i1_getTime                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) i1_converter_settings                                8     8      0    9168
                                             12 BANK1      8     8      0
                          i1_Cell_ON
                          i1___fladd
                          i1___fldiv
                          i1___flmul
                          i1___fltol
                         i1___xxtofl
                           i1_set_DC
 ---------------------------------------------------------------------------------
 (11) i1_set_DC                                            2     2      0     508
                                             10 BANK1      2     2      0
                          i1___fltol
 ---------------------------------------------------------------------------------
 (12) i1___fltol                                          10     6      4     463
                                              0 BANK1     10     6      4
                          i1___fladd (ARG)
                          i1___fldiv (ARG)
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (11) i1___xxtofl                                         14    10      4    1024
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (12) i1___flmul                                          26    18      8    2595
                                             28 BANK0     26    18      8
                            ___flsub (ARG)
                        i1__Umul8_16
                          i1___fladd (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) i1__Umul8_16                                         9     7      2     349
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (12) i1___fldiv                                          26    18      8    1953
                                             54 BANK0     26    18      8
                          i1___fladd (ARG)
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (12) i1___fladd                                          20    12      8    2556
                                              0 BANK0     20    12      8
                        i1__Umul8_16 (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (12) i1_Cell_ON                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) i1_UART_send_some_bytes                              3     1      2     227
                                              1 COMMON     3     1      2
                   i1_UART_send_byte
 ---------------------------------------------------------------------------------
 (11) _put_data_into_structure                             4     2      2     524
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (11) _calculate_checksum                                  8     5      3     887
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (11) _UART_send_header                                    3     1      2     240
                                              1 COMMON     3     1      2
                   i1_UART_send_byte
 ---------------------------------------------------------------------------------
 (10) i1_UART_send_byte                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _UART_get_some_bytes                                 3     2      1     121
                                              0 COMMON     3     2      1
                      _UART_get_byte
 ---------------------------------------------------------------------------------
 (12) _UART_get_byte                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _calculate_avg                                       8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (10) _abs                                                 4     2      2     142
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _UART_send_string                                    3     1      2     219
                                              1 COMMON     3     1      2
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (11) _UART_send_char                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cc_cv_mode
     ___fladd
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _initialize
     _Cell_OFF
     ___xxtofl
     _set_DC
       ___fltol
   _interrupt_enable
   _log_control
     _UART_send_byte
     _UART_send_some_bytes
       _UART_send_byte
     ___fltol
   _scaling
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
   _state_machine
     _fCHARGE
       _Cell_OFF
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
       _getTime
       _set_DC
     _fDC_res
       _Cell_OFF
       ___fladd
       ___fldiv
       ___flmul
       ___fltol
       ___xxtofl
       _getTime
       _set_DC
     _fDISCHARGE
       _Cell_OFF
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___fltol
       ___xxtofl
       _getTime
       _set_DC
     _fIDLE
       _Cell_OFF
       _set_DC
     _fWAIT
       _Cell_OFF
       _fNEXTSTATE
         _converter_settings
           _Cell_ON
           ___fladd
           ___fldiv
           ___flmul
           ___fltol
           ___xxtofl
           _set_DC
         _fNEXTCELL
           _converter_settings
           _fNEXTREPETITION
             _converter_settings
       _set_DC

 _ISR (ROOT)
   _UART_send_string
     _UART_send_char
   _abs
   _calculate_avg
   _command_interpreter
     _UART_get_byte
     _UART_get_some_bytes
       _UART_get_byte
     _UART_send_header
       i1_UART_send_byte
     _calculate_checksum
     _put_data_into_structure
     i1_UART_send_byte
     i1_UART_send_some_bytes
       i1_UART_send_byte
     i1___fladd
       i1__Umul8_16 (ARG)
       i1___xxtofl (ARG)
     i1___fldiv
       i1___fladd (ARG)
       i1___flmul (ARG)
         ___flsub (ARG)
           i1___fladd
         i1__Umul8_16 (ARG)
         i1___fladd (ARG)
         i1___xxtofl (ARG)
       i1___xxtofl (ARG)
     i1___flmul
     i1___fltol
       i1___fladd (ARG)
       i1___fldiv (ARG)
       i1___flmul (ARG)
       i1___xxtofl (ARG)
     i1___xxtofl
     i1_converter_settings
       i1_Cell_ON
       i1___fladd
       i1___fldiv
       i1___flmul
       i1___fltol
       i1___xxtofl
       i1_set_DC
         i1___fltol
     i1_getTime
   _control_loop
     _pid
       ___flsub
       i1___fladd
       i1___flge
       i1___flmul
       i1___xxtofl (ARG)
     i1___xxtofl
     i1_set_DC
   _read_ADC
   _timing
   i1_UART_send_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     35      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     1D      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      48      13       90.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      31      15       61.3%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1C7      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1C7      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Oct 17 14:39:34 2024

   put_data_into_structure@length 0003                      ___fldiv@aexp 0027                      ___fldiv@bexp 0026  
                               _i 000C                                 _v 000E                       i1___fladd@a 0004  
                     i1___fladd@b 0000                      ___fldiv@sign 001F                       i1___fldiv@a 0036  
                     i1___fldiv@b 003A                                _kd 0004                                _er 0000  
                     i1___flmul@a 0020                                _ki 0008                       i1___flmul@b 001C  
                              _kp 000C                      i1___flge@ff1 0000                      i1___flge@ff2 0004  
             __Umul8_16@word_mpld 0006                        i1___xxtofl 0000                               l420 0006  
                             l447 0002                               l818 0030                               l881 0018  
                             _GIE 005F                               _RB2 006A                               _RB3 006B  
                             _RB4 006C                               _RC3 0073                               _RB5 006D  
                             _RC4 0074                               _RC5 0075                               _ISR 0000  
                             _RX9 0CEE                               _TX9 0CF6                               _abs 0000  
                             _pid 0000                      i1___fltol@f1 0000           _basic_configuration_ptr 0017  
                             wreg 0009                     i1___fladd@grs 0013                      ___flmul@aexp 003A  
                    ___flmul@bexp 003B                      ___flmul@sign 0035                      ___flmul@temp 0040  
                    ___flmul@prod 003C                   _fNEXTREPETITION 0000                              ?_ISR 0000  
                   i1___fldiv@grs 004A                     i1___fldiv@rem 0043                      ___fltol@exp1 004F  
                            ?_abs 0000                              l1224 001B                              l1403 0043  
                            l1227 0069                              l1500 0066                              l1501 0070  
                            l1351 00BD                              l1247 004E                              l1424 014A  
                            l1353 009E                              l1425 0162                              l1347 0045  
                            l1427 016D                              l1381 01C7                              l1462 0011  
                            l1455 0203                              l1368 0158                              l5003 008B  
                            l1389 01E1                              l1493 0052                              l1487 001E  
                            l5025 00B9                              l5123 031D                              l5019 0026  
                            l4405 003A                              l6005 0019                              l4503 0016  
                            l4423 000B                              l4415 005D                              l4407 004A  
                            l6111 0056                              l4601 00DB                              l5129 040D  
                            l5065 0134                              l5049 00F3                              l4603 00DD  
                            l4611 00F0                              l4531 003D                              l4507 0019  
                            l6203 0221                              l5155 0498                              l4621 0150  
                            l4509 0021                              l4701 0019                              l5501 004F  
                            l6221 0247                              l6029 0092                              l4453 0048  
                            l5093 01D5                              l5157 04B2                              l4527 003A  
                            l4703 0021                              l6063 019C                              l6055 00F4  
                            l4455 001B                              l4537 0051                              l4721 003B  
                            l4385 0009                              l6145 0101                              l6137 00B8  
                            l4449 0031                              l6241 0023                              l4651 0189  
                            l4643 017E                              l4803 0132                              l4731 0062  
                            l6091 002C                              l6171 009B                              l5099 02C5  
                            l4637 0177                              l4629 016A                              l4645 0180  
                            l4717 0038                              l4389 0013                              l5461 001C  
                            l6085 0010                              l4477 0074                              l5189 0017  
                            l4655 018B                              l4575 00A4                              l4567 006F  
                            l6167 0093                              l4673 01D7                              l4593 00CB  
                            l4577 00A6                              l4585 00B8                              l4817 0169  
                            l4737 006E                              l4921 0186                              l4841 0020  
                            l6089 0027                              l4763 00CE                              l4931 019F  
                            l5467 001F                              l4677 01DB                              l4781 00D9  
                            l4757 00B5                              l4765 0097                              l4941 01C8  
                            l4837 0016                              ?_pid 0036                              l4783 00F0  
                            l4767 00D3                              l4951 01F4                              l4927 019D  
                            l4919 016F                              l4855 0037                              l4839 0018  
                            l7263 0002                              l6199 01B8                              l4793 0109  
                            l4697 0016                              l4945 01DD                              l4857 0039  
                            l5497 0035                              l5489 001D                              l4867 004F  
                            l4859 0041                              l4789 0107                              l4981 003F  
                            l4991 0057                              l4975 002D                              l4969 0016  
                            l4979 002F                              l7467 0042                              l7475 000F  
                            l4989 0064                              l6909 0000                              l6933 0007  
                            l6927 0001                              l6943 0010                              l7487 0034  
                            l6937 000A                              l6929 0004                              l6939 000D  
                            l7757 0019                              l7759 04A1                              STR_1 0000  
                            STR_2 0000                              _BRGH 0CF2                              _CREN 0CEC  
                            u4013 0106                              u4005 00E2                              u4055 016B  
                            u4155 01A9                              u4315 009F                              u4405 00E5  
                            u4325 00A6                              u4345 00AF                              u4355 00C3  
                            u3635 001D                              _PEIE 005E                              u3900 0092  
                            u4605 00EA                              u3735 0012                              u4615 0138  
                            u4385 00DC                              u4625 014F                              u3665 003B  
                            u7025 0064                              u4475 0120                              u4635 015E  
                            _RCIE 048D                              _RCIF 008D                              u4485 013B  
                            u4645 0172                              u4805 0038                              u3935 00AB  
                            u4495 0154                              u4735 01B6                              u3695 0052  
                            u7055 01DD                              _SECF 0012                              u4745 01D1  
                            u4665 017B                              u4825 004C                              u3890 0091  
                            u4755 01E7                              u4595 00BF                              u5555 0011  
                            u3885 0086                              u4845 005E                              u6625 015F  
                            _OERR 0CE9                              u6555 0067                              u7507 012D  
                            u7427 0007                              u4885 0078                              u6645 019A  
                            u7517 01A4                              u7437 00C2                              u6655 000A  
                            u7607 0424                              u7527 01B2                              u7447 00D0  
                            u7617 0432                              u7537 01C0                              u7457 00DE  
                            u6675 001D                              u7707 0056                              u7627 0440  
                            u7547 01CE                              u7467 00EC                              u6765 00C5  
                            u6685 0025                              u7717 0061                              u7637 04B6  
                            u7557 02CE                              u7477 0103                              u7807 0161  
                            u7727 006C                              u7647 000A                              u7567 02DC  
                            u7487 0111                              u7817 009A                              u6785 00FF  
                            u7737 007E                              u7657 0015                              u7577 02EA  
                            u7497 011F                              u7827 00A8                              u7747 0089  
                            u7667 0037                              u7587 02F8                              u7837 00B6  
                            u7757 0094                              u7677 0042                              u7597 0416  
                            u7847 00C4                              u7767 009F                              u7687 0021  
                            u7857 0121                              u7777 0137                              u7697 002C  
                            u7867 0006                              u7787 0145                              u7877 0011  
                            u7797 0153                              u7887 001C                              u7897 0027  
                            _SPEN 0CEF                              _SRXF 0013                              _TXIE 048C  
                            _TXEN 0CF5                              _TXIF 008C                              _SYNC 0CF4  
                   _state_machine 0000                              abs@a 0000                              _iavg 000E  
                            _conv 0010                              _main 0000                              _iref 000A  
                            _pidi 0010                              _qavg 0004                              _pidt 0000  
                   i1___flmul@grs 002A                              _vavg 0010                              fsr0h 0005  
                            fsr1h 0007                              indf0 0000                              fsr0l 0004  
                            indf1 0001                              _vmax 000C                              fsr1l 0006  
                            _vref 0000                              btemp 007E                    i1___fladd@aexp 0011  
                  i1___fladd@bexp 0012                              start 0000*                  __end_of_Cell_ON 00A5  
        ??i1_UART_send_some_bytes 0003                   ___fldiv@new_exp 0020                   __end_of_fCHARGE 0104  
                 __end_of_fDC_res 024A                             ??_ISR 0033                        _fDISCHARGE 0000  
                           ??_abs 0002                             ??_pid 000E          __end_of_interrupt_enable 0014  
                  i1___fldiv@aexp 004F                    i1___fldiv@bexp 004E                    i1___fldiv@sign 0047  
                   ___fltol@sign1 004E                   __end_of___fladd 01E7                             ?_main 0000  
                   ?_control_loop 0000                   __end_of___fldiv 0170                             _BRG16 0CFB  
                 __end_of___flmul 0210                             _ANSB0 0C68                             _ANSA3 0C63  
                           _ANSB1 0C69                             _ANSB2 0C6A                   __end_of___flsub 001F  
                           _ANSB3 0C6B                             _ANSA5 0C65                             _ANSB4 0C6C  
                 __end_of___fltol 006D                             _ANSB5 0C6D                             _P1OEC 40AA  
                           i1l424 0001                             i1l361 03D3                             i1l434 0005  
                           i1l358 03CC                             i1l447 0001                             i1l399 0014  
                           i1l664 006D       _converter_configuration_ptr 0015                             _CV_kd 0000  
                           _TMR1H 0017                             _CV_ki 0004                             _TMR1L 0016  
                           _CV_kp 0008                             _WPUB0 1068                             _WPUA3 1063  
                           _WPUB1 1069                             _WPUB2 106A                             _WPUB3 106B  
                           _WPUA5 1065                             _WPUB4 106C                             _WPUC2 1072  
                           _WPUC3 1073                             _WPUB5 106D                             _WPUC4 1074  
                           _WPUC5 1075                             _WPUE3 1083                             _RXSEL 08E9  
                           _TXSEL 08EA                             _fIDLE 0000          __end_ofi1_UART_send_byte 0008  
                           _fWAIT 0000                   __end_of_getTime 0028                        i1set_DC@dc 000A  
              _test_configuration 001A                             _iacum 0004                             _cmode 0002  
                           _count 0000  put_data_into_structure@structure 0001                    i1___flmul@aexp 002E  
                  i1___flmul@bexp 002F                             _vacum 0007                    i1___flmul@sign 0029  
                  i1___flmul@temp 0034                    i1___flmul@prod 0030                   __end_of_scaling 01E4  
                    ?_log_control 0000                             _state 0010                             _start 0014  
                __end_ofi1___flge 007B                    ?_state_machine 0000                       pid@feedback 0036  
                  i1___fltol@exp1 0009                             status 0003                  __end_of_Cell_OFF 002D  
                           wtemp0 007E                   i1___fladd@signs 0010                  __end_ofi1_set_DC 0021  
                      _fNEXTSTATE 0000                   __initialization 0000          command_interpreter@F5995 0000  
                    __end_of_main 0037                    ??_control_loop 000E           __end_of_fNEXTREPETITION 001B  
                          ??_main 001C                       ?i1___xxtofl 0000                       pid@setpoint 003A  
                          ?_fIDLE 0000                            ?_fWAIT 0000                     _counter_state 0011  
                          _ADRESH 009C                            _ADRESL 009B                            _P1DCST 40D8  
                          _P1POLC 40B2                            _P1PHST 40D0                            _P1PRST 40E0  
                          _P1STRC 4172                            _RC1REG 0199                            i1l1224 001A  
                          i1l1403 0043                            i1l1227 0068                            i1l1500 0065  
                          i1l1501 006F                            i1l1351 00B4                            i1l1247 0046  
                          i1l1424 014A                            i1l1353 0099                            i1l1425 0162  
                          i1l1347 0045                            i1l1427 016D                            i1l1381 0194  
                          i1l1462 0010                            i1l1455 0203                            i1l1368 0135  
                       ??_Cell_ON 0000                            i1l1389 01AC                            i1l1493 0051  
                          i1l1487 001D                            i1l5213 0034                            i1l5223 0053  
                          i1l5215 0042                            i1l5313 009F                            i1l5305 006D  
                          i1l5241 0016                            i1l5411 01A4                            i1l5331 00C2  
                          i1l5315 00A1                            i1l5323 00AF                            i1l5341 00D4  
                          i1l5245 0019                            i1l5415 01A8                            i1l5247 0021  
                          i1l5265 003A                            i1l5425 000A                            i1l5193 0008  
                          i1l5339 00D2                            i1l5275 004F                            i1l5611 0016  
                          i1l5541 0042                            i1l5381 015B                            i1l5349 00E3  
                          i1l5269 003D                            i1l5197 0011                            i1l6333 0133  
                          i1l6317 00F1                            i1l5543 0019                            i1l5375 0154  
                          i1l5367 0147                            i1l5359 012D                            i1l5383 015D  
                          i1l5703 0107                            i1l5631 0038                            i1l5615 0019  
                          i1l6423 0475                            i1l6263 001E                            i1l5537 002D  
                          i1l5393 0168                            i1l5617 0021                            i1l6361 01CF  
                          i1l6425 0490                            i1l6257 001B                            i1l7251 0006  
                          i1l5731 0169                            i1l5707 0109                            i1l5651 006E  
                          i1l5635 003B                            i1l7411 03D7                            i1l7315 0075  
                          i1l7307 0068                            i1l7253 001B                            i1l5565 006B  
                          i1l5389 0166                            i1l5717 0132                            i1l5645 0062  
                          i1l6293 00B7                            i1l7413 03DC                            i1l7333 00A6  
                          i1l7325 0092                            i1l7317 007E                            i1l7405 03B7  
                          i1l7501 001C                            i1l7271 0001                            i1l5671 00B5  
                          i1l5751 0016                            i1l5903 0063                            i1l6391 030F  
                          i1l6367 02B7                            i1l6287 0026                            i1l7343 00C8  
                          i1l7407 03CA                            i1l5583 0034                            i1l5681 00D3  
                          i1l5841 019D                            i1l5833 016F                            i1l5753 0018  
                          i1l5905 0056                            i1l7425 03EC                            i1l7345 00DC  
                          i1l7409 03CD                            i1l5835 0186                            i1l5771 0039  
                          i1l5755 0020                            i1l7427 03FF                            i1l5587 004E  
                          i1l5677 00CE                            i1l5845 019F                            i1l5781 004F  
                          i1l5773 0041                            i1l5917 008A                            i1l6397 03F7  
                          i1l7349 00E9                            i1l7517 0055                            i1l5695 00D9  
                          i1l5679 0097                            i1l5855 01C8                            i1l7367 022A  
                          i1l7519 005E                            i1l5929 0006                            i1l5697 00F0  
                          i1l5865 01F4                            i1l5769 0037                            i1l7369 0233  
                          i1l6923 0000                            i1l5963 0001                            i1l5859 01DD  
                          i1l5883 0015                            i1l7387 038C                            i1l7299 003A  
                          i1l6827 0027                            i1l5893 002E                            i1l7389 039F  
                          i1l5973 00E9                            i1l5895 003E                            i1l5983 01CA  
                          i1l5889 002C                            i1l7761 00D1                            i1l5969 00CA  
                          i1l7771 0078                            i1l6891 000C                            i1l7763 0394  
                          i1l7499 0016                            i1l7773 007D                            i1l6893 0058  
                          i1l7765 03BF                            i1l6885 0013                            i1l6895 006F  
                          i1l7767 03F4                            i1l6889 0001                            i1l7769 047F  
                          u500_25 0035                            u503_25 004A                            u520_25 00A5  
                          u600_25 0120                            u601_25 013B                            u602_25 0154  
                          u515_25 0081                            u516_20 008C                            u532_25 0148  
                          u612_25 00BF                         ??_fCHARGE 0012                            u517_20 008D  
                          u613_25 00EA                            u710_25 0025                            u542_25 017F  
                          u550_25 0011                            u614_25 0138                            u711_25 0039  
                          u527_25 00D8                            u615_25 014F                            u528_23 00F5  
                          u712_25 004B                            u616_25 015E                            u800_27 019E  
                          u617_25 0172                            u641_25 0077                            u633_25 0037  
                          u801_27 01AC                            u626_25 01B6                            u810_27 041C  
                          u802_27 01BA                            u715_25 0009                            u627_25 01D1  
                          u619_25 017B                            u635_25 004B                            u731_25 006F  
                          u811_27 042A                            u803_27 01C8                            u628_25 01E7  
                          u820_27 0059                            u812_27 0494                            u804_27 02C0  
                          u709_25 0013                            u637_25 005D                            u821_27 0063  
                          u813_27 0009                            u805_27 02CE                            u726_20 000F  
                          u822_27 0074                            u814_27 0013                            u806_27 02DC  
                          u591_25 00DC                            u823_27 007E                            u815_27 0032  
                          u807_27 02EA                            u584_25 009F                            u824_27 0088  
                          u816_27 003C                            u808_27 0400                            u593_25 00E5  
                          u585_25 00A6                            u497_25 001A                            u825_27 0092  
                          u817_27 001E                            u809_27 040E                            u818_27 0028  
                          u587_25 00AF                            u819_27 004F                            u588_25 00C3  
                          _TMR1GE 00CF                            _TMR1IE 0488                            _TMR1IF 0088  
                          u790_27 0001                            u687_25 0010                            u791_27 000F  
                          _TMR1ON 00C0                            u792_27 00C0                            u793_27 00CE  
                          _TX1REG 019A                            u794_27 00DC                            u795_27 00EA  
                          u796_27 0102                            u797_27 0110                            u798_27 011E  
                          u799_27 012C                            _TRISB0 0468                            _TRISA3 0463  
                          _TRISB1 0469                            _TRISB2 046A                            _TRISB3 046B  
                          _TRISA5 0465                            _TRISB4 046C                            _TRISC2 0472  
                          _TRISC3 0473                            _TRISB5 046D                            _TRISC4 0474  
                          _TRISC5 0475                  __end_of___xxtofl 0094                         ??_fDC_res 0012  
         _put_data_into_structure 0000      __end_of_UART_send_some_bytes 0015                 __end_ofi1_Cell_ON 0098  
                          _nWPUEN 04AF                            ___flge 0000                         ??___fladd 0000  
                       ??___fldiv 0016                         ??___flmul 0030                         ??___flsub 000E  
                       ??___fltol 000C                            _i_char 0018                       ?_fDISCHARGE 0000  
                          _i_disc 0016                  __end_of_read_ADC 0030                            _set_DC 0000  
                          _second 000A                            _timing 0000                         ??_getTime 0000  
                    _dc_res_count 001E                 __end_ofi1___fladd 01B2                 __end_ofi1___fldiv 0170  
               __end_ofi1___flmul 0210                 __end_ofi1___fltol 0062       __end_of_command_interpreter 0402  
    command_interpreter@operation 002E                         ??_scaling 0050       __end_of_UART_get_some_bytes 0017  
                 i1___fltol@sign1 0008                 __end_ofi1_getTime 0027         UART_get_some_bytes@length 0002  
                 ??_state_machine 001A                        ___flge@ff1 000E                        ___flge@ff2 0012  
                    ___xxtofl@arg 000A                      ___xxtofl@exp 0009                      ___xxtofl@val 0000  
     put_data_into_structure@data 0000           __end_of__initialization 0043                        ___fltol@f1 0008  
                    ?i1__Umul8_16 0000                       ?_fNEXTSTATE 0000                  _UART_send_header 0000  
                   __end_of_fIDLE 001C                    read_ADC@ad_res 0009                     __end_of_fWAIT 002A  
                  __pcstackCOMMON 0000                      __pidataBANK1 0000                      __pidataBANK3 0000  
                    __pidataBANK4 0000                  _UART_send_string 0000  command_interpreter@calc_checksum 002F  
         _converter_settings$1611 0016                 __end_of_fNEXTCELL 001A                         ?i1___flge 0000  
                      _cc_cv_mode 0000                  ?_fNEXTREPETITION 0000             __end_of_UART_get_byte 000B  
                       ?_Cell_OFF 0000            i1_UART_send_some_bytes 0000                         ?i1_set_DC 0000  
                         ??_fIDLE 0050                           ??_fWAIT 0050         i1_converter_settings$1748 0010  
                      __pbssBANK1 0000                        __pbssBANK3 0000                        __pbssBANK4 0000  
                      __pbssBANK5 0000         ??_put_data_into_structure 0002              __end_of_control_loop 0054  
                  i1___xxtofl@arg 000A                    i1___xxtofl@exp 0009                        _cell_count 0011  
                  i1___xxtofl@val 0000                 __end_of__Umul8_16 0020                        __pmaintext 0000  
                         ?___flge 000E                        __pintentry 0000           _converter_configuration 0023  
                         ?_set_DC 0000                 ?_interrupt_enable 0000                        ??i1___flge 0008  
                         ?_timing 0000                           _T1CKPS0 00C4                           _T1CKPS1 00C5  
              ??_interrupt_enable 0000                           _T1OSCEN 00C3                        ??_Cell_OFF 0000  
                       ?___xxtofl 0000                        ??i1_set_DC 000E                           _SP1BRGH 019C  
                         _SP1BRGL 019B               i1__Umul8_16@product 0004              _UART_send_some_bytes 0000  
               ?i1_UART_send_byte 0000                           _TMR1CS0 00C6                           _TMR1CS1 00C7  
              ??i1_UART_send_byte 0000                           _Cell_ON 0000                           _fCHARGE 0000  
                       ?_read_ADC 0000        __end_of_calculate_checksum 0020                           _fDC_res 0000  
                         _nT1SYNC 00C2                           ___fladd 0000                           ___fldiv 0000  
                         ___flmul 0000                           ___flsub 0000                           ___fltol 0000  
 __end_of_put_data_into_structure 0018      __end_ofi1_converter_settings 04A0                        _initialize 0000  
                    ??i1___xxtofl 0004                           __ptext1 0000                           __ptext2 0000  
                         __ptext3 0000                           _getTime 0000                           __ptext4 0000  
                         __ptext5 0000                           __ptext6 0000                           __ptext7 0000  
                         __ptext8 0000                           __ptext9 0000                       ?_cc_cv_mode 0010  
                      ??___xxtofl 0004                           _scaling 0000             ?_UART_send_some_bytes 0001  
                         _timeout 0008                      _fDC_res$1610 0016               _basic_configuration 002B  
                         clrloop0 0001              end_of_initialization 0043                        ??_read_ADC 0002  
      UART_send_some_bytes@length 0003                           init_ram 0000                           initloop 0001  
                   _calculate_avg 0000                __end_ofi1___xxtofl 0093                      ??_fDISCHARGE 0012  
                       i1_Cell_ON 0000                        _wait_count 0014                _repetition_counter 001D  
           i1__Umul8_16@word_mpld 0006                       ___fladd@grs 004D          __end_of_UART_send_header 000D  
                   ___xxtofl@sign 0008                         i1___fladd 0000                         i1___fldiv 0000  
                       i1___flmul 0000                       ___fldiv@grs 0022                         i1___fltol 0000  
                     ___fldiv@rem 001B              i1UART_send_byte@byte 0000          __end_of_UART_send_string 0014  
                       i1_getTime 0000                __end_of_fDISCHARGE 019F                       ___flmul@grs 0036  
                  ?_calculate_avg 0000                      ??_fNEXTSTATE 0050                   read_ADC@channel 0000  
                    _EOC_variable 0012                        ?i1_Cell_ON 0000                    __end_of___flge 007C  
                     ?_initialize 0000           ?i1_UART_send_some_bytes 0001                      _control_loop 0000  
                  __end_of_set_DC 001A            ??_UART_send_some_bytes 0003                    __end_of_timing 0018  
      __end_of_converter_settings 04C2                         _fNEXTCELL 0000               start_initialization 0000  
                  _UART_send_char 0000                       __end_of_ISR 006F                    _UART_send_byte 0000  
                     __end_of_abs 0017                        ?i1___fladd 0000                __end_of_fNEXTSTATE 0020  
                      ?i1___fldiv 0036                       __end_of_pid 01EA                        ?i1___flmul 001C  
                      ?i1___fltol 0000           command_interpreter@data 0017           command_interpreter@code 0031  
         command_interpreter@test 002D             __end_of_state_machine 0031                        ?i1_getTime 0000  
            i1_converter_settings 0000                          ??___flge 0016                         __Umul8_16 0000  
  __end_ofi1_UART_send_some_bytes 0013                       __pdataBANK1 0000                       __pdataBANK3 0000  
                     __pdataBANK4 0000          calculate_checksum@length 0000                          ??_set_DC 0050  
        cc_cv_mode@CC_mode_status 0014          calculate_checksum@result 0006                          ??_timing 0000  
                       ___fladd@a 0046                         ___fladd@b 0042            __end_of_UART_send_char 0008  
          __end_of_UART_send_byte 000A                         ___fldiv@a 000E                         ___fldiv@b 0012  
                      ?_fNEXTCELL 0000                         ___flmul@a 002C                         ___flmul@b 0028  
                       ___flsub@a 0014                         ___flsub@b 0018                         ___latbits 0002  
                   __pcstackBANK0 0000                     __pcstackBANK1 0000                     __pcstackBANK2 0000  
                   __pcstackBANK3 0000                     ??_log_control 0050      i1UART_send_some_bytes@length 0003  
                 i1___xxtofl@sign 0008                          ?_Cell_ON 0000                   ??_calculate_avg 0000  
                        ?_fCHARGE 0000             ?i1_converter_settings 0000                 i1___fldiv@new_exp 0048  
          _test_configuration_ptr 0016                          ?_fDC_res 0000           UART_get_some_bytes@data 0000  
                    _log_data_ptr 001F          i1__Umul8_16@multiplicand 0000                          ?___fladd 0042  
                        ?___fldiv 000E                          ?___flmul 0028                          ?___flsub 0014  
                        ?___fltol 0008                       ??i1_Cell_ON 0000                _calculate_checksum 0000  
                      ?__Umul8_16 0000                  UART_send_char@bt 0000                      ??_cc_cv_mode 0050  
                        ?_getTime 0000                   ?_UART_send_char 0000               ?_calculate_checksum 0000  
                 ?_UART_send_byte 0000                          ?_scaling 0000                      _scaling$1608 0014  
                    _scaling$1609 0010         cc_cv_mode@current_voltage 0010                       ??i1___fladd 0008  
                     ??i1___fldiv 003E          ?_put_data_into_structure 0000                       ??i1___flmul 0024  
                     ??i1___fltol 0004                       ??i1_getTime 0000              ??_calculate_checksum 0003  
                       clear_ram0 0000               __end_of_log_control 0046                __end_of_cc_cv_mode 008E  
                        _PSMC1DCH 0824                          _PSMC1DCL 0823                          _PSMC1CLK 0814  
                        _PSMC1CON 0811                          _PSMC1MDL 0812                          _PSMC1PHH 0822  
                        _PSMC1PHL 0821                          _GO_nDONE 04E9                          _PSMC1PRH 0826  
                        _PSMC1PRL 0825                      _PSMC1CONbits 0811                          i1___flge 0000  
                      _ADCON0bits 009D                        _ADCON1bits 009E                        _ADCON2bits 009F  
           UART_send_string@st_pt 0001                          _Cell_OFF 0000                       ??_fNEXTCELL 0050  
                   _UART_get_byte 0000                          i1_set_DC 0000                 ?_UART_send_header 0001  
              UART_send_byte@byte 0000                ??_UART_send_header 0003            ??i1_converter_settings 000C  
               ?_UART_send_string 0001                       _EOD_voltage 0016       command_interpreter@checksum 002B  
              ??_UART_send_string 0003                     ??i1__Umul8_16 0002                 ??_fNEXTREPETITION 0050  
                     ??__Umul8_16 0002               _command_interpreter 0000                      ??_initialize 0012  
             _UART_get_some_bytes 0000          UART_send_some_bytes@data 0001                    ?_UART_get_byte 0000  
                        _capacity 001A                          _pid$1605 003E                          _pid$1746 0042  
                        _pid$1747 0046                          ___xxtofl 0000                          _cell_max 0012  
                        __ptext10 0000                          __ptext11 0000                          __ptext20 0000  
                        __ptext12 0000                          __ptext21 0000                          __ptext13 0000  
                        __ptext30 0000                          __ptext22 0000                          __ptext14 0000  
                        __ptext31 0000                          __ptext23 0000                          __ptext15 0000  
                        __ptext40 0000                          __ptext32 0000                          __ptext24 0000  
                        __ptext16 0000                          __ptext41 0000                          __ptext33 0000  
                        __ptext25 0000                          __ptext17 0000                          __ptext50 0000  
                        __ptext42 0000                          __ptext34 0000                          __ptext26 0000  
                        __ptext18 0000                          __ptext51 0000                          __ptext43 0000  
                        __ptext35 0000                          __ptext27 0000                          __ptext19 0000  
                        __ptext52 0000                          __ptext44 0000                          __ptext36 0000  
                        __ptext28 0000                          __ptext53 0000                          __ptext45 0000  
                        __ptext37 0000                          __ptext54 0000                          __ptext46 0000  
                        __ptext38 0000                          __ptext55 0000                          __ptext47 0000  
                        __ptext39 0000                          __ptext56 0000                          __ptext48 0000  
                        __ptext57 0000                          __ptext49 0000                       _log_control 0000  
                _interrupt_enable 0000              ?_command_interpreter 0000              ?_UART_get_some_bytes 0000  
                        _read_ADC 0000                _converter_settings 0000                          _log_data 0014  
              __end_of_initialize 013D                  i1_UART_send_byte 0000        i1UART_send_some_bytes@data 0001  
                      _RC1STAbits 019D         UART_send_header@operation 0001               ?_converter_settings 0000  
                      _CC_char_ki 0008                          int$flags 007E                        _CC_char_kp 000C  
             __end_ofi1__Umul8_16 001F                        _CC_disc_ki 0000                        _CC_disc_kp 0004  
            ??_converter_settings 0012            calculate_checksum@data 0001            calculate_checksum@code 0005  
       command_interpreter@length 0032             ??_command_interpreter 0014                          set_DC@dc 0010  
           ??_UART_get_some_bytes 0001                          intlevel1 0000*           i1__Umul8_16@multiplier 0008  
                      _OSCCONbits 0099                  ??_UART_send_char 0000                  ??_UART_send_byte 0000  
                 _CC_char_disc_kd 001C                   ??_UART_get_byte 0000                     __pstringtext1 0000  
                   __pstringtext2 0000                     __pstringtext3 0000            __Umul8_16@multiplicand 0000  
           UART_send_header@start 0003       cc_cv_mode@reference_voltage 0012                     _EOPD_capacity 0014  
                   ___fladd@signs 004A              UART_send_header@code 0002                      ___fladd@aexp 004B  
                    ___fladd@bexp 004C             __end_of_calculate_avg 0083              __Umul8_16@multiplier 0008  
                     i1__Umul8_16 0000                 __Umul8_16@product 0004                     _EOPC_variable 0018  
